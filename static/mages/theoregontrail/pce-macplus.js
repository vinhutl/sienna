// Note: For maximum-speed code, see "Optimizing Code" on the Emscripten wiki, https://github.com/kripken/emscripten/wiki/Optimizing-Code
// Note: Some Emscripten settings may limit the speed of the generated code.
try {
  this['Module'] = Module;
  Module.test;
} catch(e) {
  this['Module'] = Module = {};
}
// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function';
var ENVIRONMENT_IS_WEB = typeof window === 'object';
var ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  Module['print'] = function(x) {
    process['stdout'].write(x + '\n');
  };
  Module['printErr'] = function(x) {
    process['stderr'].write(x + '\n');
  };
  var nodeFS = require('fs');
  var nodePath = require('path');
  Module['read'] = function(filename, binary) {
    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };
  Module['readBinary'] = function(filename) { return Module['read'](filename, true) };
  Module['load'] = function(f) {
    globalEval(read(f));
  };
  if (!Module['arguments']) {
    Module['arguments'] = process['argv'].slice(2);
  }
  module.exports = Module;
}
if (ENVIRONMENT_IS_SHELL) {
  Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm
  Module['read'] = read;
  Module['readBinary'] = function(f) {
    return read(f, 'binary');
  };
  if (!Module['arguments']) {
    if (typeof scriptArgs != 'undefined') {
      Module['arguments'] = scriptArgs;
    } else if (typeof arguments != 'undefined') {
      Module['arguments'] = arguments;
    }
  }
  this['Module'] = Module;
}
if (ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER) {
  if (!Module['print']) {
    Module['print'] = function(x) {
      console.log(x);
    };
  }
  if (!Module['printErr']) {
    Module['printErr'] = function(x) {
      console.log(x);
    };
  }
  this['Module'] = Module;
}
if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };
  if (!Module['arguments']) {
    if (typeof arguments != 'undefined') {
      Module['arguments'] = arguments;
    }
  }
}
if (ENVIRONMENT_IS_WORKER) {
  // We can do very little here...
  var TRY_USE_DUMP = false;
  if (!Module['print']) {
    Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }
  Module['load'] = importScripts;
}
if (!ENVIRONMENT_IS_WORKER && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_SHELL) {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}
function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] == 'undefined' && Module['read']) {
  Module['load'] = function(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
// *** Environment setup code ***
// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];
// Callbacks
if (!Module['preRun']) Module['preRun'] = [];
if (!Module['postRun']) Module['postRun'] = [];
// === Auto-generated preamble library stuff ===
//========================================
// Runtime code shared with compiler
//========================================
var Runtime = {
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  forceAlign: function (target, quantum) {
    quantum = quantum || 4;
    if (quantum == 1) return target;
    if (isNumber(target) && isNumber(quantum)) {
      return Math.ceil(target/quantum)*quantum;
    } else if (isNumber(quantum) && isPowerOfTwo(quantum)) {
      var logg = log2(quantum);
      return '((((' +target + ')+' + (quantum-1) + ')>>' + logg + ')<<' + logg + ')';
    }
    return 'Math.ceil((' + target + ')/' + quantum + ')*' + quantum;
  },
  isNumberType: function (type) {
    return type in Runtime.INT_TYPES || type in Runtime.FLOAT_TYPES;
  },
  isPointerType: function isPointerType(type) {
  return type[type.length-1] == '*';
},
  isStructType: function isStructType(type) {
  if (isPointerType(type)) return false;
  if (isArrayType(type)) return true;
  if (/<?{ ?[^}]* ?}>?/.test(type)) return true; // { i32, i8 } etc. - anonymous struct types
  // See comment in isStructPointerType()
  return type[0] == '%';
},
  INT_TYPES: {"i1":0,"i8":0,"i16":0,"i32":0,"i64":0},
  FLOAT_TYPES: {"float":0,"double":0},
  or64: function (x, y) {
    var l = (x | 0) | (y | 0);
    var h = (Math.round(x / 4294967296) | Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  and64: function (x, y) {
    var l = (x | 0) & (y | 0);
    var h = (Math.round(x / 4294967296) & Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  xor64: function (x, y) {
    var l = (x | 0) ^ (y | 0);
    var h = (Math.round(x / 4294967296) ^ Math.round(y / 4294967296)) * 4294967296;
    return l + h;
  },
  getNativeTypeSize: function (type, quantumSize) {
    if (Runtime.QUANTUM_SIZE == 1) return 1;
    var size = {
      '%i1': 1,
      '%i8': 1,
      '%i16': 2,
      '%i32': 4,
      '%i64': 8,
      "%float": 4,
      "%double": 8
    }['%'+type]; // add '%' since float and double confuse Closure compiler as keys, and also spidermonkey as a compiler will remove 's from '_i8' etc
    if (!size) {
      if (type.charAt(type.length-1) == '*') {
        size = Runtime.QUANTUM_SIZE; // A pointer
      } else if (type[0] == 'i') {
        var bits = parseInt(type.substr(1));
        assert(bits % 8 == 0);
        size = bits/8;
      }
    }
    return size;
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  dedup: function dedup(items, ident) {
  var seen = {};
  if (ident) {
    return items.filter(function(item) {
      if (seen[item[ident]]) return false;
      seen[item[ident]] = true;
      return true;
    });
  } else {
    return items.filter(function(item) {
      if (seen[item]) return false;
      seen[item] = true;
      return true;
    });
  }
},
  set: function set() {
  var args = typeof arguments[0] === 'object' ? arguments[0] : arguments;
  var ret = {};
  for (var i = 0; i < args.length; i++) {
    ret[args[i]] = 0;
  }
  return ret;
},
  STACK_ALIGN: 8,
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (type == 'i64' || type == 'double' || vararg) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  calculateStructAlignment: function calculateStructAlignment(type) {
    type.flatSize = 0;
    type.alignSize = 0;
    var diffs = [];
    var prev = -1;
    type.flatIndexes = type.fields.map(function(field) {
      var size, alignSize;
      if (Runtime.isNumberType(field) || Runtime.isPointerType(field)) {
        size = Runtime.getNativeTypeSize(field); // pack char; char; in structs, also char[X]s.
        alignSize = Runtime.getAlignSize(field, size);
      } else if (Runtime.isStructType(field)) {
        size = Types.types[field].flatSize;
        alignSize = Runtime.getAlignSize(null, Types.types[field].alignSize);
      } else if (field[0] == 'b') {
        // bN, large number field, like a [N x i8]
        size = field.substr(1)|0;
        alignSize = 1;
      } else {
        throw 'Unclear type in struct: ' + field + ', in ' + type.name_ + ' :: ' + dump(Types.types[type.name_]);
      }
      if (type.packed) alignSize = 1;
      type.alignSize = Math.max(type.alignSize, alignSize);
      var curr = Runtime.alignMemory(type.flatSize, alignSize); // if necessary, place this on aligned memory
      type.flatSize = curr + size;
      if (prev >= 0) {
        diffs.push(curr-prev);
      }
      prev = curr;
      return curr;
    });
    type.flatSize = Runtime.alignMemory(type.flatSize, type.alignSize);
    if (diffs.length == 0) {
      type.flatFactor = type.flatSize;
    } else if (Runtime.dedup(diffs).length == 1) {
      type.flatFactor = diffs[0];
    }
    type.needsFlattening = (type.flatFactor != 1);
    return type.flatIndexes;
  },
  generateStructInfo: function (struct, typeName, offset) {
    var type, alignment;
    if (typeName) {
      offset = offset || 0;
      type = (typeof Types === 'undefined' ? Runtime.typeInfo : Types.types)[typeName];
      if (!type) return null;
      if (type.fields.length != struct.length) {
        printErr('Number of named fields must match the type for ' + typeName + ': possibly duplicate struct names. Cannot return structInfo');
        return null;
      }
      alignment = type.flatIndexes;
    } else {
      var type = { fields: struct.map(function(item) { return item[0] }) };
      alignment = Runtime.calculateStructAlignment(type);
    }
    var ret = {
      __size__: type.flatSize
    };
    if (typeName) {
      struct.forEach(function(item, i) {
        if (typeof item === 'string') {
          ret[item] = alignment[i] + offset;
        } else {
          // embedded struct
          var key;
          for (var k in item) key = k;
          ret[key] = Runtime.generateStructInfo(item[key], type.fields[i], alignment[i]);
        }
      });
    } else {
      struct.forEach(function(item, i) {
        ret[item[1]] = alignment[i];
      });
    }
    return ret;
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2 + 2*i;
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[func]) {
      Runtime.funcWrappers[func] = function() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return Runtime.funcWrappers[func];
  },
  UTF8Processor: function () {
    var buffer = [];
    var needed = 0;
    this.processCChar = function (code) {
      code = code & 0xff;
      if (needed) {
        buffer.push(code);
        needed--;
      }
      if (buffer.length == 0) {
        if (code < 128) return String.fromCharCode(code);
        buffer.push(code);
        if (code > 191 && code < 224) {
          needed = 1;
        } else {
          needed = 2;
        }
        return '';
      }
      if (needed > 0) return '';
      var c1 = buffer[0];
      var c2 = buffer[1];
      var c3 = buffer[2];
      var ret;
      if (c1 > 191 && c1 < 224) {
        ret = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));
      } else {
        ret = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
      }
      buffer.length = 0;
      return ret;
    }
    this.processJSString = function(string) {
      string = unescape(encodeURIComponent(string));
      var ret = [];
      for (var i = 0; i < string.length; i++) {
        ret.push(string.charCodeAt(i));
      }
      return ret;
    }
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = ((((STACKTOP)+7)>>3)<<3); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = ((((STATICTOP)+7)>>3)<<3); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = ((((DYNAMICTOP)+7)>>3)<<3); if (DYNAMICTOP >= TOTAL_MEMORY) enlargeMemory();; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 8))*(quantum ? quantum : 8); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+(((low)>>>(0))))+((+(((high)>>>(0))))*(+(4294967296)))) : ((+(((low)>>>(0))))+((+(((high)|(0))))*(+(4294967296))))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}
//========================================
// Runtime essentials
//========================================
var __THREW__ = 0; // Used in checking for thrown exceptions.
var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var undef = 0;
// tempInt is used for 32-bit signed values or smaller. tempBigInt is used
// for 32-bit unsigned values or more than 32 bits. TODO: audit all uses of tempInt
var tempValue, tempInt, tempBigInt, tempInt2, tempBigInt2, tempPair, tempBigIntI, tempBigIntR, tempBigIntS, tempBigIntP, tempBigIntD;
var tempI64, tempI64b;
var tempRet0, tempRet1, tempRet2, tempRet3, tempRet4, tempRet5, tempRet6, tempRet7, tempRet8, tempRet9;
function abort(text) {
  Module.print(text + ':\n' + (new Error).stack);
  ABORT = true;
  throw "Assertion: " + text;
}
function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}
var globalScope = this;
// C calling interface. A convenient way to call C functions (in C files, or
// defined with extern "C").
//
// Note: LLVM optimizations can inline and remove functions, after which you will not be
//       able to call them. Closure can also do so. To avoid that, add your function to
//       the exports using something like
//
//         -s EXPORTED_FUNCTIONS='["_main", "_myfunc"]'
//
// @param ident      The name of the C function (note that C++ functions will be name-mangled - use extern "C")
// @param returnType The return type of the function, one of the JS types 'number', 'string' or 'array' (use 'number' for any C pointer, and
//                   'array' for JavaScript arrays and typed arrays; note that arrays are 8-bit).
// @param argTypes   An array of the types of arguments for the function (if there are no arguments, this can be ommitted). Types are as in returnType,
//                   except that 'array' is not possible (there is no way for us to know the length of the array)
// @param args       An array of the arguments to the function, as native JS values (as in returnType)
//                   Note that string arguments will be stored on the stack (the JS string will become a C string on the stack).
// @return           The return value, as a native JS value (as in returnType)
function ccall(ident, returnType, argTypes, args) {
  return ccallFunc(getCFunc(ident), returnType, argTypes, args);
}
Module["ccall"] = ccall;
// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  try {
    var func = globalScope['Module']['_' + ident]; // closure exported function
    if (!func) func = eval('_' + ident); // explicit lookup
  } catch(e) {
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}
// Internal function that does a C call using a function, not an identifier
function ccallFunc(func, returnType, argTypes, args) {
  var stack = 0;
  function toC(value, type) {
    if (type == 'string') {
      if (value === null || value === undefined || value === 0) return 0; // null string
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length+1);
      writeStringToMemory(value, ret);
      return ret;
    } else if (type == 'array') {
      if (!stack) stack = Runtime.stackSave();
      var ret = Runtime.stackAlloc(value.length);
      writeArrayToMemory(value, ret);
      return ret;
    }
    return value;
  }
  function fromC(value, type) {
    if (type == 'string') {
      return Pointer_stringify(value);
    }
    assert(type != 'array');
    return value;
  }
  var i = 0;
  var cArgs = args ? args.map(function(arg) {
    return toC(arg, argTypes[i++]);
  }) : [];
  var ret = fromC(func.apply(null, cArgs), returnType);
  if (stack) Runtime.stackRestore(stack);
  return ret;
}
// Returns a native JS wrapper for a C function. This is similar to ccall, but
// returns a function you can call repeatedly in a normal way. For example:
//
//   var my_function = cwrap('my_c_function', 'number', ['number', 'number']);
//   alert(my_function(5, 22));
//   alert(my_function(99, 12));
//
function cwrap(ident, returnType, argTypes) {
  var func = getCFunc(ident);
  return function() {
    return ccallFunc(func, returnType, argTypes, Array.prototype.slice.call(arguments));
  }
}
Module["cwrap"] = cwrap;
// Sets a value in memory in a dynamic way at run-time. Uses the
// type data. This is the same as makeSetValue, except that
// makeSetValue is done at compile-time and generates the needed
// code then, whereas this function picks the right code at
// run-time.
// Note that setValue and getValue only do *aligned* writes and reads!
// Note that ccall uses JS types as for defining types, while setValue and
// getValue need LLVM types ('i8', 'i32') - this is a lower-level operation
function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[(ptr)]=value; break;
      case 'i8': HEAP8[(ptr)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,((Math.min((+(Math.floor((value)/(+(4294967296))))), (+(4294967295))))|0)>>>0],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module['setValue'] = setValue;
// Parallel to setValue.
function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[(ptr)];
      case 'i8': return HEAP8[(ptr)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module['getValue'] = getValue;
var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module['ALLOC_NORMAL'] = ALLOC_NORMAL;
Module['ALLOC_STACK'] = ALLOC_STACK;
Module['ALLOC_STATIC'] = ALLOC_STATIC;
Module['ALLOC_DYNAMIC'] = ALLOC_DYNAMIC;
Module['ALLOC_NONE'] = ALLOC_NONE;
// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }
  var singleType = typeof types === 'string' ? types : null;
  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [_malloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }
  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)|0)]=0;
    }
    return ret;
  }
  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }
  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];
    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }
    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }
    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later
    setValue(ret+i, curr, type);
    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }
  return ret;
}
Module['allocate'] = allocate;
function Pointer_stringify(ptr, /* optional */ length) {
  // Find the length, and check for UTF while doing so
  var hasUtf = false;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))|0)];
    if (t >= 128) hasUtf = true;
    else if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;
  var ret = '';
  if (!hasUtf) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  var utf8 = new Runtime.UTF8Processor();
  for (i = 0; i < length; i++) {
    t = HEAPU8[(((ptr)+(i))|0)];
    ret += utf8.processCChar(t);
  }
  return ret;
}
Module['Pointer_stringify'] = Pointer_stringify;
// Memory management
var PAGE_SIZE = 4096;
function alignMemoryPage(x) {
  return ((x+4095)>>12)<<12;
}
var HEAP;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;
var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk
function enlargeMemory() {
  abort('Cannot enlarge memory arrays in asm.js. Either (1) compile with -s TOTAL_MEMORY=X with X higher than the current value, or (2) set Module.TOTAL_MEMORY before the program runs.');
}
var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 67108864;
var FAST_MEMORY = Module['FAST_MEMORY'] || 2097152;
// Initialize the runtime's memory
// check for full engine support (use string 'subarray' to avoid closure compiler confusion)
assert(!!Int32Array && !!Float64Array && !!(new Int32Array(1)['subarray']) && !!(new Int32Array(1)['set']),
       'Cannot fallback to non-typed array case: Code is too specialized');
var buffer = new ArrayBuffer(TOTAL_MEMORY);
HEAP8 = new Int8Array(buffer);
HEAP16 = new Int16Array(buffer);
HEAP32 = new Int32Array(buffer);
HEAPU8 = new Uint8Array(buffer);
HEAPU16 = new Uint16Array(buffer);
HEAPU32 = new Uint32Array(buffer);
HEAPF32 = new Float32Array(buffer);
HEAPF64 = new Float64Array(buffer);
// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
assert(HEAPU8[0] === 255 && HEAPU8[3] === 0, 'Typed arrays 2 must be run on a little-endian system');
Module['HEAP'] = HEAP;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;
function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}
var __ATINIT__ = []; // functions called during startup
var __ATMAIN__ = []; // functions called when main() is to be run
var __ATEXIT__ = []; // functions called during shutdown
var runtimeInitialized = false;
function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}
function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}
function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
}
// Tools
// This processes a JS string into a C-line array of numbers, 0-terminated.
// For LLVM-originating strings, see parser.js:parseLLVMString function
function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var ret = (new Runtime.UTF8Processor()).processJSString(stringy);
  if (length) {
    ret.length = length;
  }
  if (!dontAddNull) {
    ret.push(0);
  }
  return ret;
}
Module['intArrayFromString'] = intArrayFromString;
function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module['intArrayToString'] = intArrayToString;
// Write a Javascript array to somewhere in the heap
function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))|0)]=chr
    i = i + 1;
  }
}
Module['writeStringToMemory'] = writeStringToMemory;
function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[(((buffer)+(i))|0)]=array[i];
  }
}
Module['writeArrayToMemory'] = writeArrayToMemory;
function unSign(value, bits, ignore, sig) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore, sig) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}
if (!Math['imul']) Math['imul'] = function(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyTracking = {};
var calledInit = false, calledRun = false;
var runDependencyWatcher = null;
function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
  } else {
    Module.printErr('warning: run dependency added without ID');
  }
}
Module['addRunDependency'] = addRunDependency;
function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    Module.printErr('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    } 
    // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
    if (!calledRun && shouldRunNow) run();
  }
}
Module['removeRunDependency'] = removeRunDependency;
Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data
function addPreRun(func) {
  if (!Module['preRun']) Module['preRun'] = [];
  else if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
  Module['preRun'].push(func);
}
function loadMemoryInitializer(filename) {
  function applyData(data) {
    HEAPU8.set(data, STATIC_BASE);
  }
  // always do this asynchronously, to keep shell and web as similar as possible
  addPreRun(function() {
    if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
      applyData(Module['readBinary'](filename));
    } else {
      Browser.asyncLoad(filename, function(data) {
        applyData(data);
      }, function(data) {
        throw 'could not load memory initializer ' + filename;
      });
    }
  });
}
// === Body ===
STATIC_BASE = 8;
STATICTOP = STATIC_BASE + 63384;
/* global initializers */ __ATINIT__.push({ func: function() { runPostSets() } });
var _stdout;
var _stdin;
var _stderr;
var _stdout = _stdout=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var _stdin = _stdin=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
var _stderr = _stderr=allocate([0,0,0,0,0,0,0,0], "i8", ALLOC_STATIC);
/* memory initializer */ allocate([0,131,3,0,0,0,0,0,0,130,2,0,0,44,0,0,0,132,4,0,0,4,0,0,0,134,6,0,0,48,0,0,1,132,4,0,0,80,0,0,1,130,2,0,0,46,0,0,1,131,3,0,0,88,0,0,1,134,6,0,0,12,0,0,0,1,2,0,0,24,0,0,0,138,2,0,0,18,0,0,0,129,2,0,0,0,0,0,0,139,2,0,0,20,0,0,0,130,2,0,0,2,0,0,0,2,2,0,0,26,0,0,0,131,2,0,0,4,0,0,0,3,2,0,0,28,0,0,0,132,2,0,0,6,0,0,0,4,2,0,0,30,0,0,0,133,2,0,0,8,0,0,0,5,2,0,0,32,0,0,0,134,2,0,0,10,0,0,0,6,2,0,0,34,0,0,0,135,2,0,0,12,0,0,0,7,2,0,0,36,0,0,0,136,2,0,0,14,0,0,0,8,2,0,0,38,0,0,0,137,2,0,0,16,0,0,1,144,2,0,0,84,0,0,1,135,2,0,0,56,0,0,1,145,2,0,0,86,0,0,1,136,2,0,0,58,0,0,1,146,2,0,0,88,0,0,1,137,2,0,0,60,0,0,1,147,2,0,0,90,0,0,1,138,2,0,0,62,0,0,1,129,2,0,0,22,0,0,1,139,2,0,0,64,0,0,1,130,2,0,0,46,0,0,1,140,2,0,0,66,0,0,1,131,2,0,0,48,0,0,1,141,2,0,0,68,0,0,1,132,2,0,0,50,0,0,1,142,2,0,0,70,0,0,1,133,2,0,0,52,0,0,1,143,2,0,0,72,0,0,1,134,2,0,0,54,0,0,80,0,0,0,0,92,0,0,38,0,0,0,72,0,0,0,8,0,0,0,8,0,0,0,0,168,0,0,168,213,0,0,1,168,0,0,128,213,0,0,2,168,0,0,208,212,0,0,3,168,0,0,96,212,0,0,4,168,0,0,240,211,0,0,5,168,0,0,184,211,0,0,6,168,0,0,96,211,0,0,7,168,0,0,72,211,0,0,8,168,0,0,32,211,0,0,9,168,0,0,8,211,0,0,10,168,0,0,232,210,0,0,11,168,0,0,208,210,0,0,12,168,0,0,80,210,0,0,13,168,0,0,216,209,0,0,14,168,0,0,120,209,0,0,15,168,0,0,96,209,0,0,16,168,0,0,72,209,0,0,17,168,0,0,48,209,0,0,18,168,0,0,16,209,0,0,19,168,0,0,248,208,0,0,20,168,0,0,168,208,0,0,21,168,0,0,144,208,0,0,22,168,0,0,248,207,0,0,23,168,0,0,96,207,0,0,24,168,0,0,192,206,0,0,25,168,0,0,48,206,0,0,26,168,0,0,0,206,0,0,27,168,0,0,232,205,0,0,28,168,0,0,200,205,0,0,29,168,0,0,176,205,0,0,31,168,0,0,88,205,0,0,32,168,0,0,56,205,0,0,33,168,0,0,168,204,0,0,34,168,0,0,240,203,0,0,35,168,0,0,216,203,0,0,38,168,0,0,176,203,0,0,39,168,0,0,136,203,0,0,40,168,0,0,56,203,0,0,41,168,0,0,24,203,0,0,42,168,0,0,200,202,0,0,43,168,0,0,176,202,0,0,44,168,0,0,160,202,0,0,45,168,0,0,96,202,0,0,46,168,0,0,176,201,0,0,47,168,0,0,112,201,0,0,48,168,0,0,72,201,0,0,49,168,0,0,56,201,0,0,51,168,0,0,16,201,0,0,52,168,0,0,224,200,0,0,53,168,0,0,208,200,0,0,54,168,0,0,160,200,0,0,55,168,0,0,144,200,0,0,56,168,0,0,200,199,0,0,57,168,0,0,160,199,0,0,58,168,0,0,136,199,0,0,59,168,0,0,104,199,0,0,60,168,0,0,64,199,0,0,61,168,0,0,48,199,0,0,62,168,0,0,8,199,0,0,63,168,0,0,240,198,0,0,64,168,0,0,168,198,0,0,65,168,0,0,144,198,0,0,66,168,0,0,48,198,0,0,67,168,0,0,216,197,0,0,68,168,0,0,208,197,0,0,69,168,0,0,192,197,0,0,70,168,0,0,176,197,0,0,71,168,0,0,160,197,0,0,72,168,0,0,144,197,0,0,73,168,0,0,128,197,0,0,74,168,0,0,96,197,0,0,75,168,0,0,80,197,0,0,76,168,0,0,232,196,0,0,77,168,0,0,144,196,0,0,78,168,0,0,96,196,0,0,79,168,0,0,240,195,0,0,80,168,0,0,136,195,0,0,81,168,0,0,240,194,0,0,82,168,0,0,144,194,0,0,83,168,0,0,24,194,0,0,84,168,0,0,192,193,0,0,85,168,0,0,160,193,0,0,86,168,0,0,64,193,0,0,88,168,0,0,208,192,0,0,89,168,0,0,184,192,0,0,90,168,0,0,136,192,0,0,91,168,0,0,80,192,0,0,92,168,0,0,56,192,0,0,93,168,0,0,40,192,0,0,94,168,0,0,24,192,0,0,95,168,0,0,248,191,0,0,96,168,0,0,216,191,0,0,97,168,0,0,144,191,0,0,98,168,0,0,24,191,0,0,99,168,0,0,8,191,0,0,100,168,0,0,240,190,0,0,101,168,0,0,216,190,0,0,102,168,0,0,192,190,0,0,103,168,0,0,176,190,0,0,104,168,0,0,128,190,0,0,105,168,0,0,96,190,0,0,106,168,0,0,80,190,0,0,107,168,0,0,8,190,0,0,108,168,0,0,192,189,0,0,109,168,0,0,160,189,0,0,110,168,0,0,128,189,0,0,111,168,0,0,88,189,0,0,112,168,0,0,48,189,0,0,113,168,0,0,16,189,0,0,114,168,0,0,248,188,0,0,115,168,0,0,200,188,0,0,116,168,0,0,184,188,0,0,117,168,0,0,112,188,0,0,118,168,0,0,16,188,0,0,119,168,0,0,248,187,0,0,120,168,0,0,200,187,0,0,121,168,0,0,184,187,0,0,122,168,0,0,168,187,0,0,123,168,0,0,136,187,0,0,124,168,0,0,120,187,0,0,125,168,0,0,88,187,0,0,125,168,0,0,64,187,0,0,126,168,0,0,0,187,0,0,127,168,0,0,192,186,0,0,128,168,0,0,176,186,0,0,129,168,0,0,160,186,0,0,130,168,0,0,152,186,0,0,131,168,0,0,128,186,0,0,132,168,0,0,96,186,0,0,133,168,0,0,72,186,0,0,134,168,0,0,40,186,0,0,135,168,0,0,16,186,0,0,136,168,0,0,208,185,0,0,137,168,0,0,128,185,0,0,138,168,0,0,112,185,0,0,139,168,0,0,80,185,0,0,140,168,0,0,64,185,0,0,141,168,0,0,48,185,0,0,142,168,0,0,32,185,0,0,143,168,0,0,16,185,0,0,144,168,0,0,224,184,0,0,145,168,0,0,216,184,0,0,146,168,0,0,184,184,0,0,147,168,0,0,96,184,0,0,148,168,0,0,88,184,0,0,149,168,0,0,64,184,0,0,150,168,0,0,56,184,0,0,151,168,0,0,48,184,0,0,152,168,0,0,240,183,0,0,153,168,0,0,224,183,0,0,154,168,0,0,200,183,0,0,155,168,0,0,192,183,0,0,156,168,0,0,152,183,0,0,157,168,0,0,80,183,0,0,158,168,0,0,64,183,0,0,159,168,0,0,40,183,0,0,160,168,0,0,32,183,0,0,161,168,0,0,16,183,0,0,162,168,0,0,240,182,0,0,163,168,0,0,224,182,0,0,164,168,0,0,160,182,0,0,165,168,0,0,144,182,0,0,166,168,0,0,104,182,0,0,167,168,0,0,32,182,0,0,168,168,0,0,8,182,0,0,169,168,0,0,240,181,0,0,170,168,0,0,224,181,0,0,171,168,0,0,208,181,0,0,172,168,0,0,192,181,0,0,173,168,0,0,176,181,0,0,174,168,0,0,152,181,0,0,175,168,0,0,136,181,0,0,176,168,0,0,104,181,0,0,177,168,0,0,0,181,0,0,178,168,0,0,208,180,0,0,179,168,0,0,144,180,0,0,180,168,0,0,120,180,0,0,181,168,0,0,0,180,0,0,182,168,0,0,160,179,0,0,183,168,0,0,56,179,0,0,184,168,0,0,248,178,0,0,185,168,0,0,232,178,0,0,186,168,0,0,160,178,0,0,187,168,0,0,88,178,0,0,188,168,0,0,64,178,0,0,189,168,0,0,24,178,0,0,190,168,0,0,0,178,0,0,191,168,0,0,216,177,0,0,192,168,0,0,192,177,0,0,193,168,0,0,176,177,0,0,194,168,0,0,160,177,0,0,195,168,0,0,144,177,0,0,196,168,0,0,112,177,0,0,197,168,0,0,24,177,0,0,198,168,0,0,232,176,0,0,199,168,0,0,200,176,0,0,200,168,0,0,184,176,0,0,201,168,0,0,168,176,0,0,202,168,0,0,144,176,0,0,203,168,0,0,104,176,0,0,204,168,0,0,80,176,0,0,205,168,0,0,64,176,0,0,206,168,0,0,24,176,0,0,207,168,0,0,192,175,0,0,208,168,0,0,168,175,0,0,209,168,0,0,144,175,0,0,210,168,0,0,128,175,0,0,211,168,0,0,112,175,0,0,212,168,0,0,64,175,0,0,213,168,0,0,48,175,0,0,214,168,0,0,16,175,0,0,215,168,0,0,0,175,0,0,216,168,0,0,200,174,0,0,217,168,0,0,80,174,0,0,218,168,0,0,72,174,0,0,219,168,0,0,40,174,0,0,220,168,0,0,24,174,0,0,221,168,0,0,8,174,0,0,222,168,0,0,232,173,0,0,223,168,0,0,224,173,0,0,224,168,0,0,200,173,0,0,225,168,0,0,184,173,0,0,226,168,0,0,80,173,0,0,227,168,0,0,16,173,0,0,228,168,0,0,8,173,0,0,229,168,0,0,232,172,0,0,230,168,0,0,208,172,0,0,231,168,0,0,200,172,0,0,232,168,0,0,168,172,0,0,233,168,0,0,152,172,0,0,234,168,0,0,120,172,0,0,235,168,0,0,112,172,0,0,236,168,0,0,80,172,0,0,237,168,0,0,8,172,0,0,238,168,0,0,248,171,0,0,239,168,0,0,208,171,0,0,240,168,0,0,192,171,0,0,241,168,0,0,176,171,0,0,242,168,0,0,144,171,0,0,243,168,0,0,120,171,0,0,244,168,0,0,96,171,0,0,245,168,0,0,40,171,0,0,246,168,0,0,16,171,0,0,247,168,0,0,224,170,0,0,248,168,0,0,216,170,0,0,249,168,0,0,192,170,0,0,250,168,0,0,184,170,0,0,251,168,0,0,176,170,0,0,252,168,0,0,160,170,0,0,253,168,0,0,152,170,0,0,254,168,0,0,96,170,0,0,255,168,0,0,80,170,0,0,0,169,0,0,64,170,0,0,1,169,0,0,216,169,0,0,2,169,0,0,192,169,0,0,3,169,0,0,160,169,0,0,4,169,0,0,144,169,0,0,5,169,0,0,128,169,0,0,6,169,0,0,104,169,0,0,7,169,0,0,88,169,0,0,8,169,0,0,232,168,0,0,9,169,0,0,224,168,0,0,10,169,0,0,160,168,0,0,11,169,0,0,72,168,0,0,12,169,0,0,56,168,0,0,13,169,0,0,24,168,0,0,14,169,0,0,16,168,0,0,15,169,0,0,8,168,0,0,16,169,0,0,240,167,0,0,17,169,0,0,224,167,0,0,18,169,0,0,200,167,0,0,19,169,0,0,184,167,0,0,20,169,0,0,152,167,0,0,21,169,0,0,96,167,0,0,22,169,0,0,248,166,0,0,23,169,0,0,200,166,0,0,24,169,0,0,168,166,0,0,25,169,0,0,152,166,0,0,26,169,0,0,32,166,0,0,27,169,0,0,192,165,0,0,28,169,0,0,96,165,0,0,29,169,0,0,72,165,0,0,30,169,0,0,24,165,0,0,31,169,0,0,208,164,0,0,32,169,0,0,184,164,0,0,33,169,0,0,144,164,0,0,34,169,0,0,112,164,0,0,35,169,0,0,80,164,0,0,36,169,0,0,40,164,0,0,37,169,0,0,24,164,0,0,38,169,0,0,0,164,0,0,39,169,0,0,240,163,0,0,40,169,0,0,200,163,0,0,41,169,0,0,168,163,0,0,42,169,0,0,80,163,0,0,43,169,0,0,48,163,0,0,44,169,0,0,32,163,0,0,45,169,0,0,16,163,0,0,46,169,0,0,232,162,0,0,47,169,0,0,192,162,0,0,48,169,0,0,168,162,0,0,49,169,0,0,160,162,0,0,50,169,0,0,80,162,0,0,51,169,0,0,24,162,0,0,52,169,0,0,232,161,0,0,53,169,0,0,200,161,0,0,54,169,0,0,184,161,0,0,55,169,0,0,168,161,0,0,56,169,0,0,144,161,0,0,57,169,0,0,104,161,0,0,58,169,0,0,72,161,0,0,59,169,0,0,56,161,0,0,60,169,0,0,0,161,0,0,61,169,0,0,216,160,0,0,62,169,0,0,208,160,0,0,63,169,0,0,176,160,0,0,64,169,0,0,160,160,0,0,65,169,0,0,136,160,0,0,66,169,0,0,112,160,0,0,67,169,0,0,96,160,0,0,68,169,0,0,72,160,0,0,69,169,0,0,56,160,0,0,70,169,0,0,32,160,0,0,71,169,0,0,240,159,0,0,72,169,0,0,224,159,0,0,73,169,0,0,192,159,0,0,74,169,0,0,176,159,0,0,75,169,0,0,160,159,0,0,76,169,0,0,136,159,0,0,77,169,0,0,120,159,0,0,78,169,0,0,96,159,0,0,79,169,0,0,80,159,0,0,80,169,0,0,48,159,0,0,81,169,0,0,16,159,0,0,82,169,0,0,0,159,0,0,83,169,0,0,216,158,0,0,84,169,0,0,200,158,0,0,85,169,0,0,184,158,0,0,86,169,0,0,160,158,0,0,87,169,0,0,144,158,0,0,88,169,0,0,120,158,0,0,89,169,0,0,104,158,0,0,90,169,0,0,24,158,0,0,91,169,0,0,8,158,0,0,92,169,0,0,248,157,0,0,93,169,0,0,216,157,0,0,94,169,0,0,200,157,0,0,95,169,0,0,184,157,0,0,96,169,0,0,160,157,0,0,97,169,0,0,144,157,0,0,98,169,0,0,112,157,0,0,99,169,0,0,96,157,0,0,100,169,0,0,72,157,0,0,101,169,0,0,24,157,0,0,102,169,0,0,8,157,0,0,103,169,0,0,224,156,0,0,104,169,0,0,208,156,0,0,105,169,0,0,192,156,0,0,106,169,0,0,168,156,0,0,107,169,0,0,152,156,0,0,108,169,0,0,112,156,0,0,109,169,0,0,96,156,0,0,110,169,0,0,72,156,0,0,111,169,0,0,40,156,0,0,112,169,0,0,24,156,0,0,113,169,0,0,248,155,0,0,114,169,0,0,232,155,0,0,115,169,0,0,216,155,0,0,116,169,0,0,200,155,0,0,117,169,0,0,184,155,0,0,118,169,0,0,128,155,0,0,119,169,0,0,112,155,0,0,120,169,0,0,88,155,0,0,121,169,0,0,24,155,0,0,122,169,0,0,224,154,0,0,123,169,0,0,168,154,0,0,124,169,0,0,144,154,0,0,125,169,0,0,112,154,0,0,126,169,0,0,40,154,0,0,127,169,0,0,200,153,0,0,128,169,0,0,104,153,0,0,129,169,0,0,80,153,0,0,130,169,0,0,40,153,0,0,131,169,0,0,248,152,0,0,132,169,0,0,224,152,0,0,133,169,0,0,192,152,0,0,134,169,0,0,168,152,0,0,135,169,0,0,136,152,0,0,136,169,0,0,112,152,0,0,137,169,0,0,96,152,0,0,138,169,0,0,64,152,0,0,139,169,0,0,48,152,0,0,140,169,0,0,16,152,0,0,141,169,0,0,184,151,0,0,142,169,0,0,136,151,0,0,143,169,0,0,112,151,0,0,144,169,0,0,96,151,0,0,145,169,0,0,80,151,0,0,146,169,0,0,56,151,0,0,147,169,0,0,16,151,0,0,148,169,0,0,248,150,0,0,149,169,0,0,232,150,0,0,150,169,0,0,160,150,0,0,151,169,0,0,120,150,0,0,152,169,0,0,96,150,0,0,153,169,0,0,64,150,0,0,154,169,0,0,48,150,0,0,155,169,0,0,32,150,0,0,156,169,0,0,8,150,0,0,157,169,0,0,248,149,0,0,158,169,0,0,208,149,0,0,159,169,0,0,192,149,0,0,160,169,0,0,168,149,0,0,161,169,0,0,80,149,0,0,162,169,0,0,64,149,0,0,163,169,0,0,32,149,0,0,164,169,0,0,16,149,0,0,165,169,0,0,0,149,0,0,166,169,0,0,208,148,0,0,167,169,0,0,192,148,0,0,168,169,0,0,152,148,0,0,169,169,0,0,136,148,0,0,170,169,0,0,112,148,0,0,171,169,0,0,80,148,0,0,172,169,0,0,64,148,0,0,173,169,0,0,32,148,0,0,174,169,0,0,16,148,0,0,175,169,0,0,0,148,0,0,176,169,0,0,232,147,0,0,177,169,0,0,216,147,0,0,178,169,0,0,192,147,0,0,179,169,0,0,176,147,0,0,180,169,0,0,144,147,0,0,181,169,0,0,96,147,0,0,182,169,0,0,80,147,0,0,183,169,0,0,40,147,0,0,184,169,0,0,24,147,0,0,185,169,0,0,8,147,0,0,186,169,0,0,240,146,0,0,187,169,0,0,232,146,0,0,188,169,0,0,200,146,0,0,189,169,0,0,184,146,0,0,190,169,0,0,152,146,0,0,191,169,0,0,40,146,0,0,192,169,0,0,24,146,0,0,193,169,0,0,0,146,0,0,194,169,0,0,248,145,0,0,195,169,0,0,232,145,0,0,196,169,0,0,208,145,0,0,197,169,0,0,192,145,0,0,198,169,0,0,168,145,0,0,199,169,0,0,152,145,0,0,200,169,0,0,136,145,0,0,201,169,0,0,104,145,0,0,202,169,0,0,96,145,0,0,203,169,0,0,64,145,0,0,204,169,0,0,48,145,0,0,205,169,0,0,32,145,0,0,206,169,0,0,16,145,0,0,207,169,0,0,0,145,0,0,208,169,0,0,200,144,0,0,209,169,0,0,184,144,0,0,210,169,0,0,160,144,0,0,211,169,0,0,112,144,0,0,212,169,0,0,104,144,0,0,213,169,0,0,80,144,0,0,214,169,0,0,72,144,0,0,215,169,0,0,56,144,0,0,216,169,0,0,32,144,0,0,217,169,0,0,16,144,0,0,218,169,0,0,248,143,0,0,219,169,0,0,240,143,0,0,220,169,0,0,208,143,0,0,221,169,0,0,128,143,0,0,222,169,0,0,104,143,0,0,223,169,0,0,64,143,0,0,224,169,0,0,24,143,0,0,225,169,0,0,232,142,0,0,226,169,0,0,168,142,0,0,227,169,0,0,96,142,0,0,228,169,0,0,216,141,0,0,229,169,0,0,192,141,0,0,230,169,0,0,160,141,0,0,231,169,0,0,120,141,0,0,232,169,0,0,104,141,0,0,233,169,0,0,80,141,0,0,234,169,0,0,56,141,0,0,235,169,0,0,32,141,0,0,235,169,0,0,16,141,0,0,236,169,0,0,0,141,0,0,236,169,0,0,192,140,0,0,237,169,0,0,184,140,0,0,238,169,0,0,144,140,0,0,239,169,0,0,104,140,0,0,240,169,0,0,56,140,0,0,241,169,0,0,24,140,0,0,242,169,0,0,16,140,0,0,243,169,0,0,8,140,0,0,244,169,0,0,248,139,0,0,245,169,0,0,184,139,0,0,246,169,0,0,120,139,0,0,247,169,0,0,104,139,0,0,248,169,0,0,80,139,0,0,249,169,0,0,24,139,0,0,250,169,0,0,8,139,0,0,251,169,0,0,224,138,0,0,252,169,0,0,208,138,0,0,253,169,0,0,192,138,0,0,254,169,0,0,176,138,0,0,255,169,0,0,152,138,0,0,0,170,0,0,96,138,0,0,1,170,0,0,80,138,0,0,3,170,0,0,56,138,0,0,4,170,0,0,8,138,0,0,5,170,0,0,248,137,0,0,6,170,0,0,216,137,0,0,7,170,0,0,200,137,0,0,8,170,0,0,184,137,0,0,9,170,0,0,168,137,0,0,10,170,0,0,120,137,0,0,11,170,0,0,56,137,0,0,12,170,0,0,40,137,0,0,13,170,0,0,16,137,0,0,14,170,0,0,216,136,0,0,15,170,0,0,200,136,0,0,16,170,0,0,184,136,0,0,17,170,0,0,152,136,0,0,18,170,0,0,136,136,0,0,19,170,0,0,120,136,0,0,20,170,0,0,96,136,0,0,21,170,0,0,64,136,0,0,22,170,0,0,48,136,0,0,23,170,0,0,24,136,0,0,24,170,0,0,232,135,0,0,25,170,0,0,216,135,0,0,26,170,0,0,192,135,0,0,27,170,0,0,168,135,0,0,28,170,0,0,152,135,0,0,29,170,0,0,136,135,0,0,30,170,0,0,112,135,0,0,31,170,0,0,80,135,0,0,33,170,0,0,72,135,0,0,34,170,0,0,40,135,0,0,35,170,0,0,248,134,0,0,36,170,0,0,232,134,0,0,37,170,0,0,216,134,0,0,38,170,0,0,184,134,0,0,39,170,0,0,168,134,0,0,40,170,0,0,152,134,0,0,41,170,0,0,128,134,0,0,42,170,0,0,56,134,0,0,43,170,0,0,40,134,0,0,44,170,0,0,232,133,0,0,45,170,0,0,176,133,0,0,46,170,0,0,160,133,0,0,47,170,0,0,144,133,0,0,48,170,0,0,112,133,0,0,49,170,0,0,80,133,0,0,50,170,0,0,64,133,0,0,51,170,0,0,40,133,0,0,52,170,0,0,248,132,0,0,53,170,0,0,232,132,0,0,54,170,0,0,208,132,0,0,55,170,0,0,160,132,0,0,56,170,0,0,144,132,0,0,57,170,0,0,128,132,0,0,58,170,0,0,96,132,0,0,59,170,0,0,88,132,0,0,60,170,0,0,72,132,0,0,61,170,0,0,48,132,0,0,62,170,0,0,24,132,0,0,63,170,0,0,8,132,0,0,64,170,0,0,240,131,0,0,65,170,0,0,200,131,0,0,66,170,0,0,176,131,0,0,67,170,0,0,160,131,0,0,68,170,0,0,88,131,0,0,69,170,0,0,72,131,0,0,70,170,0,0,16,131,0,0,71,170,0,0,208,130,0,0,72,170,0,0,120,130,0,0,73,170,0,0,96,130,0,0,74,170,0,0,64,130,0,0,75,170,0,0,248,129,0,0,76,170,0,0,224,129,0,0,77,170,0,0,200,129,0,0,78,170,0,0,152,129,0,0,79,170,0,0,120,129,0,0,80,170,0,0,104,129,0,0,81,170,0,0,80,129,0,0,82,170,0,0,232,128,0,0,96,170,0,0,216,128,0,0,97,170,0,0,192,128,0,0,98,170,0,0,160,128,0,0,99,170,0,0,120,128,0,0,100,170,0,0,104,128,0,0,101,170,0,0,72,128,0,0,102,170,0,0,56,128,0,0,103,170,0,0,32,128,0,0,104,170,0,0,224,127,0,0,0,0,0,0,0,0,0,0,0,160,0,0,96,163,0,0,1,160,0,0,32,212,0,0,2,160,0,0,184,189,0,0,3,160,0,0,184,175,0,0,4,160,0,0,248,161,0,0,5,160,0,0,112,150,0,0,6,160,0,0,0,139,0,0,7,160,0,0,104,127,0,0,8,160,0,0,112,122,0,0,9,160,0,0,216,118,0,0,10,160,0,0,24,225,0,0,11,160,0,0,168,221,0,0,12,160,0,0,80,217,0,0,13,160,0,0,192,214,0,0,14,160,0,0,208,211,0,0,15,160,0,0,136,209,0,0,16,160,0,0,120,206,0,0,17,160,0,0,200,203,0,0,18,160,0,0,120,201,0,0,19,160,0,0,120,199,0,0,20,160,0,0,200,197,0,0,21,160,0,0,56,196,0,0,22,160,0,0,152,192,0,0,23,160,0,0,0,191,0,0,24,160,0,0,152,189,0,0,25,160,0,0,232,187,0,0,26,160,0,0,168,186,0,0,27,160,0,0,96,185,0,0,28,160,0,0,80,184,0,0,29,160,0,0,56,183,0,0,30,160,0,0,0,182,0,0,31,160,0,0,168,180,0,0,32,160,0,0,32,178,0,0,33,160,0,0,216,176,0,0,34,160,0,0,152,175,0,0,35,160,0,0,56,174,0,0,36,160,0,0,248,172,0,0,37,160,0,0,224,171,0,0,38,160,0,0,200,170,0,0,39,160,0,0,176,169,0,0,40,160,0,0,40,168,0,0,41,160,0,0,216,166,0,0,42,160,0,0,160,164,0,0,43,160,0,0,64,163,0,0,44,160,0,0,216,161,0,0,45,160,0,0,192,160,0,0,46,160,0,0,208,159,0,0,47,160,0,0,232,158,0,0,48,160,0,0,232,157,0,0,49,160,0,0,248,156,0,0,50,160,0,0,8,156,0,0,51,160,0,0,184,154,0,0,52,160,0,0,200,152,0,0,53,160,0,0,128,151,0,0,54,160,0,0,80,150,0,0,56,160,0,0,48,149,0,0,57,160,0,0,48,148,0,0,58,160,0,0,56,147,0,0,59,160,0,0,16,146,0,0,60,160,0,0,80,145,0,0,61,160,0,0,88,144,0,0,62,160,0,0,80,143,0,0,63,160,0,0,88,141,0,0,64,160,0,0,40,140,0,0,65,160,0,0,240,138,0,0,66,160,0,0,232,137,0,0,67,160,0,0,168,136,0,0,68,160,0,0,184,135,0,0,69,160,0,0,200,134,0,0,70,160,0,0,128,133,0,0,71,160,0,0,112,132,0,0,72,160,0,0,152,131,0,0,73,160,0,0,192,129,0,0,74,160,0,0,88,128,0,0,75,160,0,0,88,127,0,0,76,160,0,0,224,126,0,0,77,160,0,0,40,126,0,0,78,160,0,0,168,125,0,0,79,160,0,0,56,125,0,0,80,160,0,0,0,125,0,0,81,160,0,0,144,124,0,0,82,160,0,0,88,124,0,0,84,160,0,0,104,123,0,0,85,160,0,0,224,122,0,0,86,160,0,0,96,122,0,0,87,160,0,0,24,122,0,0,88,160,0,0,224,121,0,0,89,160,0,0,176,121,0,0,90,160,0,0,136,121,0,0,91,160,0,0,88,121,0,0,92,160,0,0,248,120,0,0,93,160,0,0,144,120,0,0,94,160,0,0,136,119,0,0,95,160,0,0,32,119,0,0,96,160,0,0,200,118,0,0,97,160,0,0,160,118,0,0,98,160,0,0,112,118,0,0,99,160,0,0,40,118,0,0,100,160,0,0,232,117,0,0,101,160,0,0,152,117,0,0,102,160,0,0,232,226,0,0,103,160,0,0,160,226,0,0,104,160,0,0,192,225,0,0,105,160,0,0,104,225,0,0,106,160,0,0,8,225,0,0,108,160,0,0,224,224,0,0,109,160,0,0,176,224,0,0,110,160,0,0,112,224,0,0,111,160,0,0,72,224,0,0,112,160,0,0,24,224,0,0,113,160,0,0,216,223,0,0,114,160,0,0,192,223,0,0,117,160,0,0,200,222,0,0,118,160,0,0,88,222,0,0,119,160,0,0,208,221,0,0,120,160,0,0,72,221,0,0,121,160,0,0,0,221,0,0,122,160,0,0,96,220,0,0,123,160,0,0,184,219,0,0,124,160,0,0,144,219,0,0,125,160,0,0,64,219,0,0,126,160,0,0,24,219,0,0,127,160,0,0,64,218,0,0,128,160,0,0,192,217,0,0,129,160,0,0,104,217,0,0,130,160,0,0,48,217,0,0,131,160,0,0,192,216,0,0,132,160,0,0,160,216,0,0,133,160,0,0,136,216,0,0,134,160,0,0,104,216,0,0,135,160,0,0,64,216,0,0,136,160,0,0,24,216,0,0,138,160,0,0,192,215,0,0,139,160,0,0,32,215,0,0,141,160,0,0,216,214,0,0,143,160,0,0,168,214,0,0,144,160,0,0,136,214,0,0,145,160,0,0,96,214,0,0,146,160,0,0,40,214,0,0,152,160,0,0,232,213,0,0,0,0,0,0,0,0,0,0,2,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,4,0,0,0,3,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,216,216,0,0,44,0,0,0,96,192,0,0,18,0,0,0,232,177,0,0,78,0,0,0,96,164,0,0,94,0,0,0,152,152,0,0,30,0,0,0,40,141,0,0,84,0,0,0,136,129,0,0,98,0,0,0,64,123,0,0,96,0,0,0,120,119,0,0,6,0,0,0,176,225,0,0,12,0,0,0,112,222,0,0,76,0,0,0,232,217,0,0,34,0,0,0,88,215,0,0,2,0,0,0,120,212,0,0,50,0,0,0,240,209,0,0,100,0,0,0,120,207,0,0,66,0,0,0,16,204,0,0,16,0,0,0,192,201,0,0,80,0,0,0,176,199,0,0,42,0,0,0,224,197,0,0,62,0,0,0,168,196,0,0,10,0,0,0,232,192,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,43,48,42,47,4,53,41,46,12,58,3,52,25,9,40,45,55,14,11,57,32,30,2,51,28,17,24,8,21,63,39,44,49,5,54,13,59,26,10,56,15,33,31,29,18,22,1,50,6,60,27,16,34,19,23,7,61,35,20,62,36,37,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,124,0,0,128,120,0,0,144,226,0,0,136,223,0,0,184,218,0,0,0,0,0,0,83,79,70,84,87,65,82,69,32,80,73,82,65,84,69,83,80,155,0,0,32,153,0,0,240,151,0,0,152,150,0,0,128,245,0,0,144,149,0,0,104,148,0,0,120,147,0,0,104,146,0,0,128,145,0,0,136,144,0,0,160,143,0,0,208,141,0,0,144,141,0,0,128,140,0,0,112,130,0,0,56,139,0,0,32,138,0,0,160,123,0,0,248,136,0,0,0,136,0,0,200,119,0,0,128,245,0,0,24,135,0,0,88,165,0,0,208,133,0,0,184,132,0,0,16,226,0,0,224,131,0,0,24,130,0,0,192,222,0,0,128,245,0,0,184,128,0,0,96,153,0,0,128,127,0,0,248,126,0,0,56,218,0,0,64,126,0,0,200,125,0,0,184,215,0,0,80,125,0,0,24,125,0,0,136,156,0,0,184,208,0,0,56,186,0,0,112,171,0,0,128,157,0,0,136,155,0,0,240,144,0,0,16,133,0,0,176,124,0,0,48,121,0,0,192,245,0,0,8,224,0,0,0,219,0,0,80,216,0,0,184,213,0,0,248,210,0,0,184,208,0,0,80,208,0,0,104,205,0,0,192,245,0,0,104,205,0,0,184,202,0,0,192,245,0,0,176,200,0,0,184,198,0,0,104,197,0,0,208,193,0,0,0,192,0,0,112,190,0,0,208,188,0,0,104,187,0,0,184,208,0,0,232,185,0,0,8,185,0,0,208,183,0,0,176,182,0,0,0,1,59,2,60,40,54,3,61,32,49,41,55,19,35,4,62,52,30,33,50,12,14,42,56,16,27,20,36,23,44,5,63,58,39,53,31,48,18,34,51,29,11,13,15,26,22,43,57,38,47,17,28,10,25,21,37,46,9,24,45,8,7,6,63,0,0,0,224,196,0,0,0,0,0,0,40,193,0,0,98,0,1,0,128,191,0,0,0,190,0,0,72,188,0,0,66,0,2,0,240,186,0,0,192,185,0,0,160,184,0,0,99,0,1,0,144,183,0,0,96,182,0,0,72,181,0,0,100,0,1,0,152,178,0,0,96,182,0,0,72,177,0,0,105,0,1,0,8,176,0,0,96,182,0,0,152,174,0,0,73,0,1,0,64,173,0,0,96,182,0,0,40,172,0,0,108,0,1,0,8,171,0,0,96,182,0,0,32,170,0,0,112,0,1,0,168,219,0,0,96,182,0,0,136,168,0,0,113,0,0,0,144,167,0,0,0,0,0,0,248,164,0,0,114,0,0,0,192,163,0,0,0,0,0,0,48,162,0,0,82,0,0,0,240,160,0,0,0,0,0,0,8,160,0,0,115,0,1,0,40,159,0,0,56,158,0,0,48,157,0,0,116,0,1,0,56,156,0,0,96,182,0,0,40,155,0,0,118,0,0,0,16,153,0,0,0,0,0,0,200,151,0,0,86,0,0,0,136,150,0,0,0,0,0,0,104,149,0,0,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,205,0,0,80,205,0,0,232,204,0,0,8,204,0,0,232,203,0,0,192,203,0,0,152,203,0,0,72,203,0,0,40,203,0,0,8,203,0,0,192,202,0,0,168,202,0,0,112,202,0,0,184,201,0,0,168,201,0,0,104,201,0,0,56,214,0,0,240,213,0,0,208,213,0,0,152,213,0,0,80,213,0,0,112,212,0,0,24,212,0,0,200,211,0,0,160,211,0,0,88,211,0,0,48,211,0,0,24,211,0,0,0,211,0,0,224,210,0,0,152,210,0,0,232,209,0,0,184,209,0,0,112,209,0,0,88,209,0,0,64,209,0,0,32,209,0,0,8,209,0,0,192,208,0,0,160,208,0,0,40,208,0,0,112,207,0,0,40,207,0,0,56,206,0,0,16,206,0,0,248,205,0,0,216,205,0,0,192,205,0,0,152,219,0,0,96,219,0,0,48,219,0,0,152,218,0,0,224,217,0,0,152,217,0,0,64,217,0,0,208,216,0,0,176,216,0,0,144,216,0,0,120,216,0,0,88,216,0,0,40,216,0,0,232,215,0,0,56,215,0,0,0,215,0,0,31,0,0,0,28,0,0,0,31,0,0,0,30,0,0,0,31,0,0,0,30,0,0,0,31,0,0,0,31,0,0,0,30,0,0,0,31,0,0,0,30,0,0,0,31,0,0,0,31,0,0,0,29,0,0,0,31,0,0,0,30,0,0,0,31,0,0,0,30,0,0,0,31,0,0,0,31,0,0,0,30,0,0,0,31,0,0,0,30,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,240,191,0,0,2,0,0,0,184,217,0,0,3,0,0,0,200,192,0,0,4,0,0,0,80,178,0,0,5,0,0,0,200,164,0,0,6,0,0,0,240,152,0,0,7,0,0,0,112,141,0,0,8,0,0,0,240,129,0,0,9,0,0,0,128,123,0,0,10,0,0,0,168,119,0,0,11,0,0,0,232,225,0,0,12,0,0,0,160,222,0,0,13,0,0,0,24,218,0,0,14,0,0,0,144,215,0,0,14,0,0,0,176,212,0,0,15,0,0,0,32,210,0,0,15,0,0,0,168,207,0,0,16,0,0,0,48,204,0,0,17,0,0,0,224,201,0,0,17,0,0,0,240,199,0,0,18,0,0,0,0,198,0,0,19,0,0,0,208,196,0,0,20,0,0,0,24,193,0,0,21,0,0,0,112,191,0,0,22,0,0,0,248,189,0,0,23,0,0,0,56,188,0,0,24,0,0,0,224,186,0,0,25,0,0,0,176,185,0,0,26,0,0,0,144,184,0,0,27,0,0,0,128,183,0,0,28,0,0,0,80,182,0,0,28,0,0,0,56,181,0,0,29,0,0,0,144,178,0,0,29,0,0,0,64,177,0,0,30,0,0,0,248,175,0,0,31,0,0,0,144,174,0,0,32,0,0,0,56,173,0,0,33,0,0,0,32,172,0,0,34,0,0,0,0,171,0,0,35,0,0,0,24,170,0,0,36,0,0,0,128,168,0,0,37,0,0,0,136,167,0,0,38,0,0,0,240,164,0,0,39,0,0,0,184,163,0,0,40,0,0,0,40,162,0,0,41,0,0,0,232,160,0,0,42,0,0,0,248,159,0,0,42,0,0,0,32,159,0,0,43,0,0,0,40,158,0,0,43,0,0,0,40,157,0,0,44,0,0,0,48,156,0,0,45,0,0,0,64,155,0,0,46,0,0,0,24,153,0,0,47,0,0,0,232,151,0,0,48,0,0,0,144,150,0,0,49,0,0,0,136,149,0,0,50,0,0,0,96,148,0,0,51,0,0,0,112,147,0,0,52,0,0,0,96,146,0,0,53,0,0,0,120,145,0,0,54,0,0,0,128,144,0,0,55,0,0,0,144,143,0,0,55,0,0,0,136,141,0,0,56,0,0,0,120,140,0,0,56,0,0,0,40,139,0,0,56,0,0,0,24,138,0,0,57,0,0,0,232,136,0,0,57,0,0,0,248,135,0,0,58,0,0,0,8,135,0,0,58,0,0,0,200,133,0,0,59,0,0,0,176,132,0,0,59,0,0,0,216,131,0,0,60,0,0,0,16,130,0,0,61,0,0,0,176,128,0,0,62,0,0,0,120,127,0,0,63,0,0,0,240,126,0,0,64,0,0,0,56,126,0,0,66,0,0,0,192,125,0,0,65,0,0,0,72,125,0,0,67,0,0,0,16,125,0,0,67,0,0,0,160,124,0,0,68,0,0,0,112,124,0,0,68,0,0,0,144,123,0,0,69,0,0,0,16,123,0,0,69,0,0,0,120,122,0,0,71,0,0,0,40,122,0,0,71,0,0,0,232,121,0,0,73,0,0,0,192,121,0,0,73,0,0,0,152,121,0,0,72,0,0,0,104,121,0,0,72,0,0,0,8,121,0,0,72,0,0,0,176,120,0,0,74,0,0,0,184,119,0,0,75,0,0,0,80,119,0,0,75,0,0,0,224,118,0,0,76,0,0,0,176,118,0,0,77,0,0,0,128,118,0,0,78,0,0,0,64,118,0,0,79,0,0,0,240,117,0,0,79,0,0,0,168,117,0,0,79,0,0,0,248,226,0,0,80,0,0,0,192,226,0,0,81,0,0,0,248,225,0,0,82,0,0,0,136,225,0,0,83,0,0,0,32,225,0,0,84,0,0,0,232,224,0,0,85,0,0,0,192,224,0,0,86,0,0,0,144,224,0,0,87,0,0,0,88,224,0,0,88,0,0,0,40,224,0,0,89,0,0,0,232,223,0,0,90,0,0,0,168,223,0,0,91,0,0,0,176,222,0,0,92,0,0,0,72,222,0,0,93,0,0,0,200,221,0,0,94,0,0,0,40,221,0,0,95,0,0,0,200,220,0,0,96,0,0,0,32,220,0,0,97,0,0,0,176,219,0,0,98,0,0,0,128,219,0,0,99,0,0,0,56,219,0,0,100,0,0,0,240,218,0,0,101,0,0,0,40,218,0,0,102,0,0,0,176,217,0,0,103,0,0,0,96,217,0,0,104,0,0,0,232,216,0,0,105,0,0,0,184,216,0,0,106,0,0,0,152,216,0,0,107,0,0,0,128,216,0,0,108,0,0,0,96,216,0,0,109,0,0,0,56,216,0,0,110,0,0,0,0,216,0,0,111,0,0,0,168,215,0,0,112,0,0,0,24,215,0,0,113,0,0,0,208,214,0,0,114,0,0,0,160,214,0,0,115,0,0,0,120,214,0,0,116,0,0,0,80,214,0,0,117,0,0,0,0,214,0,0,118,0,0,0,216,213,0,0,119,0,0,0,160,213,0,0,120,0,0,0,104,213,0,0,121,0,0,0,192,212,0,0,122,0,0,0,72,212,0,0,123,0,0,0,224,211,0,0,124,0,0,0,176,211,0,0,0,0,0,0,0,0,0,0,86,0,0,0,115,0,0,0,87,0,0,0,62,0,0,0,88,0,0,0,116,0,0,0,90,0,0,0,59,0,0,0,91,0,0,0,87,0,0,0,92,0,0,0,60,0,0,0,93,0,0,0,119,0,0,0,94,0,0,0,61,0,0,0,95,0,0,0,121,0,0,0,97,0,0,0,114,0,0,0,98,0,0,0,117,0,0,0,96,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,86,0,0,0,89,0,0,0,87,0,0,0,91,0,0,0,88,0,0,0,92,0,0,0,90,0,0,0,86,0,0,0,91,0,0,0,87,0,0,0,92,0,0,0,88,0,0,0,93,0,0,0,83,0,0,0,94,0,0,0,84,0,0,0,95,0,0,0,85,0,0,0,97,0,0,0,82,0,0,0,98,0,0,0,65,0,0,0,96,0,0,0,76,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,53,0,0,0,2,0,0,0,122,0,0,0,3,0,0,0,120,0,0,0,4,0,0,0,99,0,0,0,5,0,0,0,118,0,0,0,6,0,0,0,96,0,0,0,7,0,0,0,97,0,0,0,8,0,0,0,98,0,0,0,9,0,0,0,100,0,0,0,10,0,0,0,101,0,0,0,11,0,0,0,109,0,0,0,12,0,0,0,103,0,0,0,13,0,0,0,111,0,0,0,17,0,0,0,50,0,0,0,18,0,0,0,18,0,0,0,19,0,0,0,19,0,0,0,20,0,0,0,20,0,0,0,21,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,23,0,0,0,22,0,0,0,24,0,0,0,26,0,0,0,25,0,0,0,28,0,0,0,26,0,0,0,25,0,0,0,27,0,0,0,29,0,0,0,28,0,0,0,27,0,0,0,29,0,0,0,24,0,0,0,30,0,0,0,51,0,0,0,31,0,0,0,48,0,0,0,32,0,0,0,12,0,0,0,33,0,0,0,13,0,0,0,34,0,0,0,14,0,0,0,35,0,0,0,15,0,0,0,36,0,0,0,17,0,0,0,37,0,0,0,16,0,0,0,38,0,0,0,32,0,0,0,39,0,0,0,34,0,0,0,40,0,0,0,31,0,0,0,41,0,0,0,35,0,0,0,42,0,0,0,33,0,0,0,43,0,0,0,30,0,0,0,57,0,0,0,42,0,0,0,45,0,0,0,57,0,0,0,46,0,0,0,0,0,0,0,47,0,0,0,1,0,0,0,48,0,0,0,2,0,0,0,49,0,0,0,3,0,0,0,50,0,0,0,5,0,0,0,51,0,0,0,4,0,0,0,52,0,0,0,38,0,0,0,53,0,0,0,40,0,0,0,54,0,0,0,37,0,0,0,55,0,0,0,41,0,0,0,56,0,0,0,39,0,0,0,44,0,0,0,36,0,0,0,58,0,0,0,56,0,0,0,60,0,0,0,6,0,0,0,61,0,0,0,7,0,0,0,62,0,0,0,8,0,0,0,63,0,0,0,9,0,0,0,64,0,0,0,11,0,0,0,66,0,0,0,45,0,0,0,65,0,0,0,46,0,0,0,67,0,0,0,43,0,0,0,68,0,0,0,47,0,0,0,69,0,0,0,44,0,0,0,70,0,0,0,56,0,0,0,71,0,0,0,54,0,0,0,72,0,0,0,58,0,0,0,74,0,0,0,58,0,0,0,75,0,0,0,55,0,0,0,76,0,0,0,49,0,0,0,77,0,0,0,55,0,0,0,81,0,0,0,54,0,0,0,99,0,0,0,114,0,0,0,100,0,0,0,115,0,0,0,101,0,0,0,116,0,0,0,102,0,0,0,117,0,0,0,103,0,0,0,119,0,0,0,104,0,0,0,121,0,0,0,105,0,0,0,62,0,0,0,106,0,0,0,59,0,0,0,108,0,0,0,60,0,0,0,107,0,0,0,61,0,0,0,82,0,0,0,71,0,0,0,83,0,0,0,75,0,0,0,84,0,0,0,67,0,0,0,86,0,0,0,89,0,0,0,87,0,0,0,91,0,0,0,88,0,0,0,92,0,0,0,85,0,0,0,78,0,0,0,90,0,0,0,86,0,0,0,91,0,0,0,87,0,0,0,92,0,0,0,88,0,0,0,89,0,0,0,69,0,0,0,93,0,0,0,83,0,0,0,94,0,0,0,84,0,0,0,95,0,0,0,85,0,0,0,96,0,0,0,76,0,0,0,97,0,0,0,82,0,0,0,98,0,0,0,65,0,0,0,0,0,0,0,0,0,0,0,27,0,0,0,1,0,0,0,58,4,0,0,2,0,0,0,59,4,0,0,3,0,0,0,60,4,0,0,4,0,0,0,61,4,0,0,5,0,0,0,62,4,0,0,6,0,0,0,63,4,0,0,7,0,0,0,64,4,0,0,8,0,0,0,65,4,0,0,9,0,0,0,66,4,0,0,10,0,0,0,67,4,0,0,11,0,0,0,68,4,0,0,12,0,0,0,69,4,0,0,13,0,0,0,70,4,0,0,14,0,0,0,71,4,0,0,15,0,0,0,72,4,0,0,16,0,0,0,96,0,0,0,17,0,0,0,49,0,0,0,18,0,0,0,50,0,0,0,19,0,0,0,51,0,0,0,20,0,0,0,52,0,0,0,21,0,0,0,53,0,0,0,22,0,0,0,54,0,0,0,23,0,0,0,55,0,0,0,24,0,0,0,56,0,0,0,25,0,0,0,57,0,0,0,26,0,0,0,48,0,0,0,27,0,0,0,45,0,0,0,28,0,0,0,61,0,0,0,29,0,0,0,187,0,0,0,29,0,0,0,8,0,0,0,30,0,0,0,9,0,0,0,31,0,0,0,113,0,0,0,32,0,0,0,119,0,0,0,33,0,0,0,101,0,0,0,34,0,0,0,114,0,0,0,35,0,0,0,116,0,0,0,36,0,0,0].concat([121,0,0,0,37,0,0,0,117,0,0,0,38,0,0,0,105,0,0,0,39,0,0,0,111,0,0,0,40,0,0,0,112,0,0,0,41,0,0,0,91,0,0,0,42,0,0,0,93,0,0,0,43,0,0,0,13,0,0,0,44,0,0,0,57,4,0,0,45,0,0,0,97,0,0,0,46,0,0,0,115,0,0,0,47,0,0,0,100,0,0,0,48,0,0,0,102,0,0,0,49,0,0,0,103,0,0,0,50,0,0,0,104,0,0,0,51,0,0,0,106,0,0,0,52,0,0,0,107,0,0,0,53,0,0,0,108,0,0,0,54,0,0,0,59,0,0,0,55,0,0,0,186,0,0,0,55,0,0,0,39,0,0,0,56,0,0,0,92,0,0,0,57,0,0,0,220,0,0,0,57,0,0,0,225,4,0,0,58,0,0,0,60,0,0,0,59,0,0,0,122,0,0,0,60,0,0,0,120,0,0,0,61,0,0,0,99,0,0,0,62,0,0,0,118,0,0,0,63,0,0,0,98,0,0,0,64,0,0,0,110,0,0,0,66,0,0,0,109,0,0,0,65,0,0,0,44,0,0,0,67,0,0,0,46,0,0,0,68,0,0,0,47,0,0,0,69,0,0,0,229,4,0,0,70,0,0,0,224,4,0,0,71,0,0,0,227,4,0,0,73,0,0,0,227,4,0,0,72,0,0,0,226,4,0,0,75,0,0,0,1,5,0,0,74,0,0,0,32,0,0,0,76,0,0,0,230,4,0,0,77,0,0,0,231,4,0,0,78,0,0,0,231,4,0,0,79,0,0,0,118,4,0,0,80,0,0,0,228,4,0,0,81,0,0,0,83,4,0,0,82,0,0,0,84,4,0,0,83,0,0,0,85,4,0,0,84,0,0,0,86,4,0,0,85,0,0,0,95,4,0,0,86,0,0,0,96,4,0,0,87,0,0,0,97,4,0,0,88,0,0,0,87,4,0,0,89,0,0,0,92,4,0,0,90,0,0,0,93,4,0,0,91,0,0,0,94,4,0,0,92,0,0,0,89,4,0,0,93,0,0,0,90,4,0,0,94,0,0,0,91,4,0,0,95,0,0,0,88,4,0,0,96,0,0,0,98,4,0,0,97,0,0,0,99,4,0,0,98,0,0,0,73,4,0,0,99,0,0,0,74,4,0,0,100,0,0,0,75,4,0,0,101,0,0,0,127,0,0,0,102,0,0,0,77,4,0,0,103,0,0,0,78,4,0,0,104,0,0,0,82,4,0,0,105,0,0,0,80,4,0,0,106,0,0,0,81,4,0,0,107,0,0,0,79,4,0,0,108,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,1,0,101,0,0,0,0,0,0,0,1,0,229,0,0,0,0,0,0,0,18,0,0,0,1,0,37,0,0,0,0,0,0,0,1,0,165,0,0,0,0,0,0,0,19,0,0,0,1,0,39,0,0,0,0,0,0,0,1,0,167,0,0,0,0,0,0,0,20,0,0,0,1,0,41,0,0,0,0,0,0,0,1,0,169,0,0,0,0,0,0,0,21,0,0,0,1,0,43,0,0,0,0,0,0,0,1,0,171,0,0,0,0,0,0,0,22,0,0,0,1,0,47,0,0,0,0,0,0,0,1,0,175,0,0,0,0,0,0,0,23,0,0,0,1,0,45,0,0,0,0,0,0,0,1,0,173,0,0,0,0,0,0,0,24,0,0,0,1,0,53,0,0,0,0,0,0,0,1,0,181,0,0,0,0,0,0,0,25,0,0,0,1,0,57,0,0,0,0,0,0,0,1,0,185,0,0,0,0,0,0,0,26,0,0,0,1,0,51,0,0,0,0,0,0,0,1,0,179,0,0,0,0,0,0,0,27,0,0,0,1,0,59,0,0,0,0,0,0,0,1,0,187,0,0,0,0,0,0,0,28,0,0,0,1,0,55,0,0,0,0,0,0,0,1,0,183,0,0,0,0,0,0,0,29,0,0,0,1,0,49,0,0,0,0,0,0,0,1,0,177,0,0,0,0,0,0,0,30,0,0,0,1,0,103,0,0,0,0,0,0,0,1,0,231,0,0,0,0,0,0,0,31,0,0,0,1,0,97,0,0,0,0,0,0,0,1,0,225,0,0,0,0,0,0,0,32,0,0,0,1,0,25,0,0,0,0,0,0,0,1,0,153,0,0,0,0,0,0,0,33,0,0,0,1,0,27,0,0,0,0,0,0,0,1,0,155,0,0,0,0,0,0,0,34,0,0,0,1,0,29,0,0,0,0,0,0,0,1,0,157,0,0,0,0,0,0,0,35,0,0,0,1,0,31,0,0,0,0,0,0,0,1,0,159,0,0,0,0,0,0,0,36,0,0,0,1,0,35,0,0,0,0,0,0,0,1,0,163,0,0,0,0,0,0,0,37,0,0,0,1,0,33,0,0,0,0,0,0,0,1,0,161,0,0,0,0,0,0,0,38,0,0,0,1,0,65,0,0,0,0,0,0,0,1,0,193,0,0,0,0,0,0,0,39,0,0,0,1,0,69,0,0,0,0,0,0,0,1,0,197,0,0,0,0,0,0,0,40,0,0,0,1,0,63,0,0,0,0,0,0,0,1,0,191,0,0,0,0,0,0,0,41,0,0,0,1,0,71,0,0,0,0,0,0,0,1,0,199,0,0,0,0,0,0,0,42,0,0,0,1,0,67,0,0,0,0,0,0,0,1,0,195,0,0,0,0,0,0,0,43,0,0,0,1,0,61,0,0,0,0,0,0,0,1,0,189,0,0,0,0,0,0,0,57,0,0,0,1,0,85,0,0,0,0,0,0,0,1,0,213,0,0,0,0,0,0,0,44,0,0,0,1,0,73,0,0,0,0,0,0,0,1,0,201,0,0,0,0,0,0,0,45,0,0,0,1,0,115,0,0,0,0,0,0,0,1,0,243,0,0,0,0,0,0,0,46,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,129,0,0,0,0,0,0,0,47,0,0,0,1,0,3,0,0,0,0,0,0,0,1,0,131,0,0,0,0,0,0,0,48,0,0,0,1,0,5,0,0,0,0,0,0,0,1,0,133,0,0,0,0,0,0,0,49,0,0,0,1,0,7,0,0,0,0,0,0,0,1,0,135,0,0,0,0,0,0,0,50,0,0,0,1,0,11,0,0,0,0,0,0,0,1,0,139,0,0,0,0,0,0,0,51,0,0,0,1,0,9,0,0,0,0,0,0,0,1,0,137,0,0,0,0,0,0,0,52,0,0,0,1,0,77,0,0,0,0,0,0,0,1,0,205,0,0,0,0,0,0,0,53,0,0,0,1,0,81,0,0,0,0,0,0,0,1,0,209,0,0,0,0,0,0,0,54,0,0,0,1,0,75,0,0,0,0,0,0,0,1,0,203,0,0,0,0,0,0,0,55,0,0,0,1,0,83,0,0,0,0,0,0,0,1,0,211,0,0,0,0,0,0,0,56,0,0,0,1,0,79,0,0,0,0,0,0,0,1,0,207,0,0,0,0,0,0,0,58,0,0,0,1,0,113,0,0,0,0,0,0,0,1,0,241,0,0,0,0,0,0,0,70,0,0,0,1,0,113,0,0,0,0,0,0,0,1,0,241,0,0,0,0,0,0,0,60,0,0,0,1,0,13,0,0,0,0,0,0,0,1,0,141,0,0,0,0,0,0,0,61,0,0,0,1,0,15,0,0,0,0,0,0,0,1,0,143,0,0,0,0,0,0,0,62,0,0,0,1,0,17,0,0,0,0,0,0,0,1,0,145,0,0,0,0,0,0,0,63,0,0,0,1,0,19,0,0,0,0,0,0,0,1,0,147,0,0,0,0,0,0,0,64,0,0,0,1,0,23,0,0,0,0,0,0,0,1,0,151,0,0,0,0,0,0,0,66,0,0,0,1,0,91,0,0,0,0,0,0,0,1,0,219,0,0,0,0,0,0,0,65,0,0,0,1,0,93,0,0,0,0,0,0,0,1,0,221,0,0,0,0,0,0,0,67,0,0,0,1,0,87,0,0,0,0,0,0,0,1,0,215,0,0,0,0,0,0,0,68,0,0,0,1,0,95,0,0,0,0,0,0,0,1,0,223,0,0,0,0,0,0,0,69,0,0,0,1,0,89,0,0,0,0,0,0,0,1,0,217,0,0,0,0,0,0,0,71,0,0,0,1,0,117,0,0,0,0,0,0,0,1,0,245,0,0,0,0,0,0,0,81,0,0,0,1,0,117,0,0,0,0,0,0,0,1,0,245,0,0,0,0,0,0,0,75,0,0,0,1,0,111,0,0,0,0,0,0,0,1,0,239,0,0,0,0,0,0,0,77,0,0,0,1,0,105,0,0,0,0,0,0,0,1,0,233,0,0,0,0,0,0,0,76,0,0,0,1,0,99,0,0,0,0,0,0,0,1,0,227,0,0,0,0,0,0,0,82,0,0,0,2,0,121,15,0,0,0,0,0,0,2,0,121,143,0,0,0,0,0,0,83,0,0,0,3,0,113,121,27,0,0,0,0,0,3,0,121,155,241,0,0,0,0,0,84,0,0,0,3,0,113,121,5,0,0,0,0,0,3,0,121,133,241,0,0,0,0,0,85,0,0,0,2,0,121,29,0,0,0,0,0,0,2,0,121,157,0,0,0,0,0,0,86,0,0,0,2,0,121,51,0,0,0,0,0,0,2,0,121,179,0,0,0,0,0,0,87,0,0,0,2,0,121,55,0,0,0,0,0,0,2,0,121,183,0,0,0,0,0,0,88,0,0,0,2,0,121,57,0,0,0,0,0,0,2,0,121,185,0,0,0,0,0,0,89,0,0,0,3,0,113,121,13,0,0,0,0,0,3,0,121,141,241,0,0,0,0,0,90,0,0,0,2,0,121,45,0,0,0,0,0,0,2,0,121,173,0,0,0,0,0,0,91,0,0,0,2,0,121,47,0,0,0,0,0,0,2,0,121,175,0,0,0,0,0,0,92,0,0,0,2,0,121,49,0,0,0,0,0,0,2,0,121,177,0,0,0,0,0,0,93,0,0,0,2,0,121,39,0,0,0,0,0,0,2,0,121,167,0,0,0,0,0,0,94,0,0,0,2,0,121,41,0,0,0,0,0,0,2,0,121,169,0,0,0,0,0,0,95,0,0,0,2,0,121,43,0,0,0,0,0,0,2,0,121,171,0,0,0,0,0,0,96,0,0,0,2,0,121,25,0,0,0,0,0,0,2,0,121,153,0,0,0,0,0,0,97,0,0,0,2,0,121,37,0,0,0,0,0,0,2,0,121,165,0,0,0,0,0,0,98,0,0,0,2,0,121,3,0,0,0,0,0,0,2,0,121,131,0,0,0,0,0,0,105,0,0,0,2,0,121,27,0,0,0,0,0,0,2,0,121,155,0,0,0,0,0,0,106,0,0,0,2,0,121,13,0,0,0,0,0,0,2,0,121,141,0,0,0,0,0,0,108,0,0,0,2,0,121,5,0,0,0,0,0,0,2,0,121,133,0,0,0,0,0,0,107,0,0,0,2,0,121,17,0,0,0,0,0,0,2,0,121,145,0,0,0,0,0,0,100,0,0,0,2,0,121,103,0,0,0,0,0,0,2,0,121,231,0,0,0,0,0,0,103,0,0,0,2,0,121,111,0,0,0,0,0,0,2,0,121,239,0,0,0,0,0,0,101,0,0,0,2,0,121,105,0,0,0,0,0,0,2,0,121,233,0,0,0,0,0,0,104,0,0,0,2,0,121,115,0,0,0,0,0,0,2,0,121,243,0,0,0,0,0,0,99,0,0,0,2,0,121,101,0,0,0,0,0,0,2,0,121,101,0,0,0,0,0,0,102,0,0,0,2,0,121,107,0,0,0,0,0,0,2,0,121,235,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,1,0,101,0,0,0,0,0,0,0,1,0,229,0,0,0,0,0,0,0,18,0,0,0,1,0,39,0,0,0,0,0,0,0,1,0,167,0,0,0,0,0,0,0,19,0,0,0,1,0,39,0,0,0,0,0,0,0,1,0,167,0,0,0,0,0,0,0,20,0,0,0,1,0,41,0,0,0,0,0,0,0,1,0,169,0,0,0,0,0,0,0,21,0,0,0,1,0,43,0,0,0,0,0,0,0,1,0,171,0,0,0,0,0,0,0,22,0,0,0,1,0,47,0,0,0,0,0,0,0,1,0,175,0,0,0,0,0,0,0,23,0,0,0,1,0,45,0,0,0,0,0,0,0,1,0,173,0,0,0,0,0,0,0,24,0,0,0,1,0,53,0,0,0,0,0,0,0,1,0,181,0,0,0,0,0,0,0,25,0,0,0,1,0,57,0,0,0,0,0,0,0,1,0,185,0,0,0,0,0,0,0,26,0,0,0,1,0,51,0,0,0,0,0,0,0,1,0,179,0,0,0,0,0,0,0,27,0,0,0,1,0,59,0,0,0,0,0,0,0,1,0,187,0,0,0,0,0,0,0,28,0,0,0,1,0,55,0,0,0,0,0,0,0,1,0,183,0,0,0,0,0,0,0,29,0,0,0,1,0,49,0,0,0,0,0,0,0,1,0,177,0,0,0,0,0,0,0,30,0,0,0,1,0,103,0,0,0,0,0,0,0,1,0,231,0,0,0,0,0,0,0,31,0,0,0,1,0,97,0,0,0,0,0,0,0,1,0,225,0,0,0,0,0,0,0,32,0,0,0,1,0,25,0,0,0,0,0,0,0,1,0,153,0,0,0,0,0,0,0,33,0,0,0,1,0,27,0,0,0,0,0,0,0,1,0,155,0,0,0,0,0,0,0,34,0,0,0,1,0,29,0,0,0,0,0,0,0,1,0,157,0,0,0,0,0,0,0,35,0,0,0,1,0,31,0,0,0,0,0,0,0,1,0,159,0,0,0,0,0,0,0,36,0,0,0,1,0,35,0,0,0,0,0,0,0,1,0,163,0,0,0,0,0,0,0,37,0,0,0,1,0,33,0,0,0,0,0,0,0,1,0,161,0,0,0,0,0,0,0,38,0,0,0,1,0,65,0,0,0,0,0,0,0,1,0,193,0,0,0,0,0,0,0,39,0,0,0,1,0,69,0,0,0,0,0,0,0,1,0,197,0,0,0,0,0,0,0,40,0,0,0,1,0,63,0,0,0,0,0,0,0,1,0,191,0,0,0,0,0,0,0,41,0,0,0,1,0,71,0,0,0,0,0,0,0,1,0,199,0,0,0,0,0,0,0,42,0,0,0,1,0,67,0,0,0,0,0,0,0,1,0,195,0,0,0,0,0,0,0,43,0,0,0,1,0,61,0,0,0,0,0,0,0,1,0,189,0,0,0,0,0,0,0,44,0,0,0,1,0,85,0,0,0,0,0,0,0,1,0,213,0,0,0,0,0,0,0,45,0,0,0,1,0,115,0,0,0,0,0,0,0,1,0,243,0,0,0,0,0,0,0,46,0,0,0,1,0,1,0,0,0,0,0,0,0,1,0,129,0,0,0,0,0,0,0,47,0,0,0,1,0,3,0,0,0,0,0,0,0,1,0,131,0,0,0,0,0,0,0,48,0,0,0,1,0,5,0,0,0,0,0,0,0,1,0,133,0,0,0,0,0,0,0,49,0,0,0,1,0,7,0,0,0,0,0,0,0,1,0,135,0,0,0,0,0,0,0,50,0,0,0,1,0,11,0,0,0,0,0,0,0,1,0,139,0,0,0,0,0,0,0,51,0,0,0,1,0,9,0,0,0,0,0,0,0,1,0,137,0,0,0,0,0,0,0,52,0,0,0,1,0,77,0,0,0,0,0,0,0,1,0,205,0,0,0,0,0,0,0,53,0,0,0,1,0,81,0,0,0,0,0,0,0,1,0,209,0,0,0,0,0,0,0,54,0,0,0,1,0,75,0,0,0,0,0,0,0,1,0,203,0,0,0,0,0,0,0,55,0,0,0,1,0,83,0,0,0,0,0,0,0,1,0,211,0,0,0,0,0,0,0,56,0,0,0,1,0,79,0,0,0,0,0,0,0,1,0,207,0,0,0,0,0,0,0,57,0,0,0,1,0,73,0,0,0,0,0,0,0,1,0,201,0,0,0,0,0,0,0,58,0,0,0,1,0,113,0,0,0,0,0,0,0,1,0,241,0,0,0,0,0,0,0,70,0,0,0,1,0,113,0,0,0,0,0,0,0,1,0,241,0,0,0,0,0,0,0,59,0,0,0,1,0,13,0,0,0,0,0,0,0,1,0,141,0,0,0,0,0,0,0,60,0,0,0,1,0,15,0,0,0,0,0,0,0,1,0,143,0,0,0,0,0,0,0,61,0,0,0,1,0,17,0,0,0,0,0,0,0,1,0,145,0,0,0,0,0,0,0,62,0,0,0,1,0,19,0,0,0,0,0,0,0,1,0,147,0,0,0,0,0,0,0,63,0,0,0,1,0,23,0,0,0,0,0,0,0,1,0,151,0,0,0,0,0,0,0,64,0,0,0,1,0,91,0,0,0,0,0,0,0,1,0,219,0,0,0,0,0,0,0,66,0,0,0,1,0,93,0,0,0,0,0,0,0,1,0,221,0,0,0,0,0,0,0,65,0,0,0,1,0,87,0,0,0,0,0,0,0,1,0,215,0,0,0,0,0,0,0,67,0,0,0,1,0,95,0,0,0,0,0,0,0,1,0,223,0,0,0,0,0,0,0,68,0,0,0,1,0,89,0,0,0,0,0,0,0,1,0,217,0,0,0,0,0,0,0,69,0,0,0,1,0,21,0,0,0,0,0,0,0,1,0,149,0,0,0,0,0,0,0,71,0,0,0,1,0,117,0,0,0,0,0,0,0,1,0,245,0,0,0,0,0,0,0,81,0,0,0,1,0,117,0,0,0,0,0,0,0,1,0,245,0,0,0,0,0,0,0,75,0,0,0,1,0,111,0,0,0,0,0,0,0,1,0,239,0,0,0,0,0,0,0,77,0,0,0,1,0,99,0,0,0,0,0,0,0,1,0,227,0,0,0,0,0,0,0,76,0,0,0,1,0,105,0,0,0,0,0,0,0,1,0,233,0,0,0,0,0,0,0,82,0,0,0,2,0,121,15,0,0,0,0,0,0,2,0,121,143,0,0,0,0,0,0,83,0,0,0,3,0,113,121,27,0,0,0,0,0,3,0,121,155,241,0,0,0,0,0,84,0,0,0,3,0,113,121,5,0,0,0,0,0,3,0,121,133,241,0,0,0,0,0,85,0,0,0,2,0,121,29,0,0,0,0,0,0,2,0,121,157,0,0,0,0,0,0,86,0,0,0,2,0,121,51,0,0,0,0,0,0,2,0,121,179,0,0,0,0,0,0,87,0,0,0,2,0,121,55,0,0,0,0,0,0,2,0,121,183,0,0,0,0,0,0,88,0,0,0,2,0,121,57,0,0,0,0,0,0,2,0,121,185,0,0,0,0,0,0,89,0,0,0,3,0,113,121,13,0,0,0,0,0,3,0,121,141,241,0,0,0,0,0,90,0,0,0,2,0,121,45,0,0,0,0,0,0,2,0,121,173,0,0,0,0,0,0,91,0,0,0,2,0,121,47,0,0,0,0,0,0,2,0,121,175,0,0,0,0,0,0,92,0,0,0,2,0,121,49,0,0,0,0,0,0,2,0,121,177,0,0,0,0,0,0,93,0,0,0,2,0,121,39,0,0,0,0,0,0,2,0,121,167,0,0,0,0,0,0,94,0,0,0,2,0,121,41,0,0,0,0,0,0,2,0,121,169,0,0,0,0,0,0,95,0,0,0,2,0,121,43,0,0,0,0,0,0,2,0,121,171,0,0,0,0,0,0,96,0,0,0,2,0,121,25,0,0,0,0,0,0,2,0,121,153,0,0,0,0,0,0,97,0,0,0,2,0,121,37,0,0,0,0,0,0,2,0,121,165,0,0,0,0,0,0,98,0,0,0,2,0,121,3,0,0,0,0,0,0,2,0,121,131,0,0,0,0,0,0,105,0,0,0,2,0,121,27,0,0,0,0,0,0,2,0,121,155,0,0,0,0,0,0,106,0,0,0,2,0,121,13,0,0,0,0,0,0,2,0,121,141,0,0,0,0,0,0,108,0,0,0,2,0,121,5,0,0,0,0,0,0,2,0,121,133,0,0,0,0,0,0,107,0,0,0,2,0,121,17,0,0,0,0,0,0,2,0,121,145,0,0,0,0,0,0,100,0,0,0,2,0,121,103,0,0,0,0,0,0,2,0,121,231,0,0,0,0,0,0,103,0,0,0,2,0,121,111,0,0,0,0,0,0,2,0,121,239,0,0,0,0,0,0,101,0,0,0,2,0,121,105,0,0,0,0,0,0,2,0,121,233,0,0,0,0,0,0,104,0,0,0,2,0,121,115,0,0,0,0,0,0,2,0,121,243,0,0,0,0,0,0,99,0,0,0,2,0,121,101,0,0,0,0,0,0,2,0,121,229,0,0,0,0,0,0,102,0,0,0,2,0,121,107,0,0,0,0,0,0,2,0,121,235,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,86,0,0,0,2,0,121,51,0,0,0,0,0,0,2,0,121,179,0,0,0,0,0,0,87,0,0,0,2,0,121,55,0,0,0,0,0,0,2,0,121,183,0,0,0,0,0,0,88,0,0,0,2,0,121,57,0,0,0,0,0,0,2,0,121,185,0,0,0,0,0,0,90,0,0,0,2,0,121,45,0,0,0,0,0,0,2,0,121,173,0,0,0,0,0,0,91,0,0,0,2,0,121,47,0,0,0,0,0,0,2,0,121,175,0,0,0,0,0,0,92,0,0,0,2,0,121,49,0,0,0,0,0,0,2,0,121,177,0,0,0,0,0,0,93,0,0,0,2,0,121,39,0,0,0,0,0,0,2,0,121,167,0,0,0,0,0,0,94,0,0,0,2,0,121,41,0,0,0,0,0,0,2,0,121,169,0,0,0,0,0,0,95,0,0,0,2,0,121,43,0,0,0,0,0,0,2,0,121,171,0,0,0,0,0,0,97,0,0,0,2,0,121,37,0,0,0,0,0,0,2,0,121,165,0,0,0,0,0,0,98,0,0,0,2,0,121,3,0,0,0,0,0,0,2,0,121,131,0,0,0,0,0,0,96,0,0,0,2,0,121,25,0,0,0,0,0,0,2,0,121,153,0,0,0,0,0,0,100,0,0,0,2,0,121,103,0,0,0,0,0,0,2,0,121,231,0,0,0,0,0,0,105,0,0,0,2,0,121,27,0,0,0,0,0,0,2,0,121,155,0,0,0,0,0,0,101,0,0,0,2,0,121,105,0,0,0,0,0,0,2,0,121,233,0,0,0,0,0,0,106,0,0,0,2,0,121,13,0,0,0,0,0,0,2,0,121,141,0,0,0,0,0,0,108,0,0,0,2,0,121,5,0,0,0,0,0,0,2,0,121,133,0,0,0,0,0,0,103,0,0,0,2,0,121,111,0,0,0,0,0,0,2,0,121,239,0,0,0,0,0,0,107,0,0,0,2,0,121,17,0,0,0,0,0,0,2,0,121,145,0,0,0,0,0,0,104,0,0,0,2,0,121,115,0,0,0,0,0,0,2,0,121,243,0,0,0,0,0,0,99,0,0,0,2,0,121,101,0,0,0,0,0,0,2,0,121,101,0,0,0,0,0,0,102,0,0,0,2,0,121,107,0,0,0,0,0,0,2,0,121,235,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,86,0,0,0,2,0,121,103,0,0,0,0,0,0,2,0,121,231,0,0,0,0,0,0,87,0,0,0,2,0,121,27,0,0,0,0,0,0,2,0,121,155,0,0,0,0,0,0,88,0,0,0,2,0,121,105,0,0,0,0,0,0,2,0,121,233,0,0,0,0,0,0,90,0,0,0,2,0,121,13,0,0,0,0,0,0,2,0,121,141,0,0,0,0,0,0,91,0,0,0,2,0,121,25,0,0,0,0,0,0,2,0,121,153,0,0,0,0,0,0,92,0,0,0,2,0,121,5,0,0,0,0,0,0,2,0,121,133,0,0,0,0,0,0,93,0,0,0,2,0,121,111,0,0,0,0,0,0,2,0,121,239,0,0,0,0,0,0,94,0,0,0,2,0,121,17,0,0,0,0,0,0,2,0,121,145,0,0,0,0,0,0,95,0,0,0,2,0,121,115,0,0,0,0,0,0,2,0,121,243,0,0,0,0,0,0,97,0,0,0,2,0,121,101,0,0,0,0,0,0,2,0,121,101,0,0,0,0,0,0,98,0,0,0,2,0,121,107,0,0,0,0,0,0,2,0,121,235,0,0,0,0,0,0,96,0,0,0,1,0,73,0,0,0,0,0,0,0,1,0,201,0,0,0,0,0,0,0,100,0,0,0,2,0,121,51,0,0,0,0,0,0,2,0,121,179,0,0,0,0,0,0,105,0,0,0,2,0,121,55,0,0,0,0,0,0,2,0,121,183,0,0,0,0,0,0,101,0,0,0,2,0,121,57,0,0,0,0,0,0,2,0,121,185,0,0,0,0,0,0,106,0,0,0,2,0,121,45,0,0,0,0,0,0,2,0,121,173,0,0,0,0,0,0,108,0,0,0,2,0,121,49,0,0,0,0,0,0,2,0,121,177,0,0,0,0,0,0,103,0,0,0,2,0,121,39,0,0,0,0,0,0,2,0,121,167,0,0,0,0,0,0,107,0,0,0,2,0,121,41,0,0,0,0,0,0,2,0,121,169,0,0,0,0,0,0,104,0,0,0,2,0,121,43,0,0,0,0,0,0,2,0,121,171,0,0,0,0,0,0,99,0,0,0,2,0,121,37,0,0,0,0,0,0,2,0,121,165,0,0,0,0,0,0,102,0,0,0,2,0,121,3,0,0,0,0,0,0,2,0,121,131,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,230,41,1,0,14,17,1,0,52,248,0,0,102,223,0,0,150,198,0,0,0,0,0,0,230,41,1,0,14,17,1,0,52,248,0,0,102,223,0,0,150,198,0,0,0,0,0,0,150,151,154,155,157,158,159,166,167,171,172,173,174,175,178,179,180,181,182,183,185,186,187,188,189,190,191,203,205,206,207,211,214,215,217,218,219,220,221,222,223,229,230,231,233,234,235,236,237,238,239,242,243,244,245,246,247,249,250,251,252,253,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,255,255,2,3,255,4,5,6,255,255,255,255,255,255,7,8,255,255,255,9,10,11,12,13,255,255,14,15,16,17,18,19,255,20,21,22,23,24,25,26,255,255,255,255,255,255,255,255,255,255,255,27,255,28,29,30,255,255,255,31,255,255,32,33,255,34,35,36,37,38,39,40,255,255,255,255,255,41,42,43,255,44,45,46,47,48,49,50,255,255,51,52,53,54,55,56,255,57,58,59,60,61,62,63,242,1,0,0,190,1,0,0,246,1,0,0,0,0,0,0,186,0,0,0,110,0,0,0,16,0,0,0,32,0,0,0,200,0,0,0,96,0,0,0,46,0,0,0,0,0,0,0,186,0,0,0,110,0,0,0,16,0,0,0,32,0,0,0,236,1,0,0,180,1,0,0,126,0,0,0,0,0,0,0,186,0,0,0,110,0,0,0,16,0,0,0,32,0,0,0,62,1,0,0,126,1,0,0,178,1,0,0,0,0,0,0,186,0,0,0,110,0,0,0,16,0,0,0,32,0,0,0,86,0,0,0,152,0,0,0,234,1,0,0,34,1,0,0,186,0,0,0,110,0,0,0,16,0,0,0,32,0,0,0,210,1,0,0,242,0,0,0,166,1,0,0,0,0,0,0,186,0,0,0,110,0,0,0,16,0,0,0,32,0,0,0,100,0,0,0,50,0,0,0,4,2,0,0,0,0,0,0,186,0,0,0,110,0,0,0,16,0,0,0,32,0,0,0,194,1,0,0,252,1,0,0,36,1,0,0,0,0,0,0,186,0,0,0,110,0,0,0,16,0,0,0,32,0,0,0,160,0,0,0,0,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,0,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,0,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,0,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,0,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,0,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,0,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,0,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,160,0,0,0,22,1,0,0,90,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,90,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,90,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,90,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,90,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,90,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,90,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,90,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,22,1,0,0,152,1,0,0,134,0,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,134,0,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,134,0,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,134,0,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,134,0,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,134,0,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,134,0,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,134,0,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,152,1,0,0,12,0,0,0,174,1,0,0,120,0,0,0,54,0,0,0,0,0,0,0,0,0,0,0,208,0,0,0,26,1,0,0,56,1,0,0,120,1,0,0,212,1,0,0,104,0,0,0,0,0,0,0,0,0,0,0,208,0,0,0,26,1,0,0,132,1,0,0,74,0,0,0,254,1,0,0,176,1,0,0,0,0,0,0,0,0,0,0,208,0,0,0,26,1,0,0,194,0,0,0,128,0,0,0,42,0,0,0,66,1,0,0,0,0,0,0,0,0,0,0,208,0,0,0,26,1,0,0,250,0,0,0,176,0,0,0,98,0,0,0,82,1,0,0,0,0,0,0,0,0,0,0,208,0,0,0,244,1,0,0,24,0,0,0,102,0,0,0,40,1,0,0,248,1,0,0,0,0,0,0,0,0,0,0,208,0,0,0,26,1,0,0,0,0,0,0,0,0,0,0,6,2,0,0,138,0,0,0,0,0,0,0,0,0,0,0,208,0,0,0,26,1,0,0,0,0,0,0,84,1,0,0,28,0,0,0,92,1,0,0,0,0,0,0,0,0,0,0,208,0,0,0,26,1,0,0,68,1,0,0,252,0,0,0,88,0,0,0,60,0,0,0,218,1,0,0,192,1,0,0,78,1,0,0,148,0,0,0,68,1,0,0,252,0,0,0,88,0,0,0,94,1,0,0,218,1,0,0,192,1,0,0,78,1,0,0,48,0,0,0,68,1,0,0,252,0,0,0,88,0,0,0,204,0,0,0,218,1,0,0,192,1,0,0,78,1,0,0,52,1,0,0,68,1,0,0,252,0,0,0,88,0,0,0,182,0,0,0,218,1,0,0,192,1,0,0,78,1,0,0,172,1,0,0,68,1,0,0,252,0,0,0,88,0,0,0,106,1,0,0,218,1,0,0,192,1,0,0,78,1,0,0,136,1,0,0,68,1,0,0,252,0,0,0,88,0,0,0,84,0,0,0,218,1,0,0,192,1,0,0,78,1,0,0,234,0,0,0,68,1,0,0,252,0,0,0,88,0,0,0,202,0,0,0,218,1,0,0,192,1,0,0,78,1,0,0,116,0,0,0,68,1,0,0,252,0,0,0,88,0,0,0,238,0,0,0,218,1,0,0,192,1,0,0,78,1,0,0,142,1,0,0,220,0,0,0,220,0,0,0,220,0,0,0,220,0,0,0,46,1,0,0,46,1,0,0,46,1,0,0,46,1,0,0,118,0,0,0,118,0,0,0,118,0,0,0,118,0,0,0,224,1,0,0,224,1,0,0,224,1,0,0,224,1,0,0,80,0,0,0,80,0,0,0,80,0,0,0,80,0,0,0,186,1,0,0,186,1,0,0,186,1,0,0,186,1,0,0,30,1,0,0,30,1,0,0,30,1,0,0,30,1,0,0,90,0,0,0,90,0,0,0,90,0,0,0,90,0,0,0,240,0,0,0,240,0,0,0,240,0,0,0,240,0,0,0,68,0,0,0,68,0,0,0,68,0,0,0,68,0,0,0,254,0,0,0,254,0,0,0,254,0,0,0,254,0,0,0,64,1,0,0,64,1,0,0,64,1,0,0,64,1,0,0,130,0,0,0,130,0,0,0,130,0,0,0,130,0,0,0,162,0,0,0,162,0,0,0,162,0,0,0,162,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,4,0,0,0,102,1,0,0,102,1,0,0,102,1,0,0,102,1,0,0,246,0,0,0,246,0,0,0,246,0,0,0,246,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,246,0,0,0,246,0,0,0,246,0,0,0,246,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,246,0,0,0,246,0,0,0,246,0,0,0,246,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,246,0,0,0,246,0,0,0,246,0,0,0,246,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,246,0,0,0,246,0,0,0,246,0,0,0,246,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,246,0,0,0,246,0,0,0,246,0,0,0,246,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,246,0,0,0,246,0,0,0,246,0,0,0,246,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,246,0,0,0,246,0,0,0,246,0,0,0,246,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,1,0,0,80,1,0,0,114,0,0,0,154,1,0,0,182,1,0,0,26,0,0,0,232,1,0,0,220,1,0,0,6,1,0,0,80,1,0,0,114,0,0,0,154,1,0,0,182,1,0,0,26,0,0,0,232,1,0,0,220,1,0,0,6,1,0,0,80,1,0,0,114,0,0,0,154,1,0,0,182,1,0,0,26,0,0,0,232,1,0,0,220,1,0,0,6,1,0,0,80,1,0,0,114,0,0,0,154,1,0,0,182,1,0,0,26,0,0,0,232,1,0,0,220,1,0,0,6,1,0,0,80,1,0,0,114,0,0,0,154,1,0,0,182,1,0,0,26,0,0,0,232,1,0,0,220,1,0,0,6,1,0,0,80,1,0,0,114,0,0,0,154,1,0,0,182,1,0,0,26,0,0,0,232,1,0,0,220,1,0,0,6,1,0,0,80,1,0,0,114,0,0,0,154,1,0,0,182,1,0,0,26,0,0,0,232,1,0,0,220,1,0,0,6,1,0,0,80,1,0,0,114,0,0,0,154,1,0,0,182,1,0,0,26,0,0,0,232,1,0,0,220,1,0,0,196,1,0,0,94,0,0,0,44,0,0,0,244,0,0,0,78,0,0,0,140,0,0,0,226,0,0,0,212,0,0,0,196,1,0,0,94,0,0,0,44,0,0,0,244,0,0,0,78,0,0,0,140,0,0,0,226,0,0,0,212,0,0,0,196,1,0,0,94,0,0,0,44,0,0,0,244,0,0,0,78,0,0,0,140,0,0,0,226,0,0,0,212,0,0,0,196,1,0,0,94,0,0,0,44,0,0,0,244,0,0,0,78,0,0,0,140,0,0,0,226,0,0,0,212,0,0,0,196,1,0,0,94,0,0,0,44,0,0,0,244,0,0,0,78,0,0,0,140,0,0,0,226,0,0,0,212,0,0,0,196,1,0,0,94,0,0,0,44,0,0,0,244,0,0,0,78,0,0,0,140,0,0,0,226,0,0,0,212,0,0,0,196,1,0,0,94,0,0,0,44,0,0,0,244,0,0,0,78,0,0,0,140,0,0,0,226,0,0,0,212,0,0,0,196,1,0,0,94,0,0,0,44,0,0,0,244,0,0,0,78,0,0,0,140,0,0,0,226,0,0,0,212,0,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,12,1,0,0,128,1,0,0,188,1,0,0,250,1,0,0,228,1,0,0,224,0,0,0,20,1,0,0,230,1,0,0,62,0,0,0,128,1,0,0,188,1,0,0,250,1,0,0,228,1,0,0,224,0,0,0,20,1,0,0,230,1,0,0,62,0,0,0,128,1,0,0,188,1,0,0,250,1,0,0,228,1,0,0,224,0,0,0,20,1,0,0,230,1,0,0,62,0,0,0,128,1,0,0,188,1,0,0,250,1,0,0,228,1,0,0,224,0,0,0,20,1,0,0,230,1,0,0,62,0,0,0,128,1,0,0,188,1,0,0,250,1,0,0,228,1,0,0,224,0,0,0,20,1,0,0,230,1,0,0,62,0,0,0,128,1,0,0,188,1,0,0,250,1,0,0,228,1,0,0,224,0,0,0,20,1,0,0,230,1,0,0,62,0,0,0,128,1,0,0,188,1,0,0,250,1,0,0,228,1,0,0,224,0,0,0,20,1,0,0,230,1,0,0,62,0,0,0,128,1,0,0,188,1,0,0,250,1,0,0,228,1,0,0,224,0,0,0,20,1,0,0,230,1,0,0,62,0,0,0,150,0,0,0,228,0,0,0,30,0,0,0,170,1,0,0,162,1,0,0,8,1,0,0,202,1,0,0,216,1,0,0,150,0,0,0,228,0,0,0,30,0,0,0,170,1,0,0,162,1,0,0,8,1,0,0,202,1,0,0,216,1,0,0,150,0,0,0,228,0,0,0,30,0,0,0,170,1,0,0,162,1,0,0,8,1,0,0,202,1,0,0,216,1,0,0,150,0,0,0,228,0,0,0,30,0,0,0,170,1,0,0,162,1,0,0,8,1,0,0,202,1,0,0,216,1,0,0,150,0,0,0,228,0,0,0,30,0,0,0,170,1,0,0,162,1,0,0,8,1,0,0,202,1,0,0,216,1,0,0,150,0,0,0,228,0,0,0,30,0,0,0,170,1,0,0,162,1,0,0,8,1,0,0,202,1,0,0,216,1,0,0,150,0,0,0,228,0,0,0,30,0,0,0,170,1,0,0,162,1,0,0,8,1,0,0,202,1,0,0,216,1,0,0,150,0,0,0,228,0,0,0,30,0,0,0,170,1,0,0,162,1,0,0,8,1,0,0,202,1,0,0,216,1,0,0,118,1,0,0,58,1,0,0,14,0,0,0,34,0,0,0,210,0,0,0,48,1,0,0,174,0,0,0,64,0,0,0,118,1,0,0,58,1,0,0,14,0,0,0,34,0,0,0,210,0,0,0,48,1,0,0,174,0,0,0,64,0,0,0,118,1,0,0,58,1,0,0,14,0,0,0,34,0,0,0,210,0,0,0,48,1,0,0,174,0,0,0,64,0,0,0,118,1,0,0,58,1,0,0,14,0,0,0,34,0,0,0,210,0,0,0,48,1,0,0,174,0,0,0,64,0,0,0,118,1,0,0,58,1,0,0,14,0,0,0,34,0,0,0,210,0,0,0,48,1,0,0,174,0,0,0,64,0,0,0,118,1,0,0,58,1,0,0,14,0,0,0,34,0,0,0,210,0,0,0,48,1,0,0,174,0,0,0,64,0,0,0,118,1,0,0,58,1,0,0,14,0,0,0,34,0,0,0,210,0,0,0,48,1,0,0,174,0,0,0,64,0,0,0,118,1,0,0,58,1,0,0,14,0,0,0,34,0,0,0,210,0,0,0,48,1,0,0,174,0,0,0,64,0,0,0,184,0,0,0,106,0,0,0,20,0,0,0,40,0,0,0,36,0,0,0,4,1,0,0,190,0,0,0,214,1,0,0,184,0,0,0,106,0,0,0,20,0,0,0,24,1,0,0,36,0,0,0,4,1,0,0,190,0,0,0,52,0,0,0,184,0,0,0,106,0,0,0,20,0,0,0,172,0,0,0,36,0,0,0,4,1,0,0,190,0,0,0,76,0,0,0,184,0,0,0,106,0,0,0,20,0,0,0,184,1,0,0,36,0,0,0,4,1,0,0,190,0,0,0,32,1,0,0,184,0,0,0,106,0,0,0,20,0,0,0,0,0,0,0,36,0,0,0,4,1,0,0,190,0,0,0,0,0,0,0,184,0,0,0,106,0,0,0,20,0,0,0,0,0,0,0,36,0,0,0,4,1,0,0,190,0,0,0,0,0,0,0,184,0,0,0,106,0,0,0,20,0,0,0,0,0,0,0,36,0,0,0,4,1,0,0,190,0,0,0,0,0,0,0,184,0,0,0,106,0,0,0,20,0,0,0,0,0,0,0,36,0,0,0,4,1,0,0,190,0,0,0,0,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0])
.concat([18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,18,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,56,0,0,0,56,0,0,0,56,0,0,0,56,0,0,0,56,0,0,0,56,0,0,0,56,0,0,0,56,0,0,0,34,0,0,0,34,0,0,0,34,0,0,0,34,0,0,0,34,0,0,0,34,0,0,0,34,0,0,0,22,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,24,0,0,0,46,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,28,0,0,0,28,0,0,0,28,0,0,0,28,0,0,0,28,0,0,0,28,0,0,0,28,0,0,0,28,0,0,0,32,0,0,0,30,0,0,0,58,0,0,0,60,0,0,0,16,0,0,0,36,0,0,0,36,0,0,0,36,0,0,0,10,0,0,0,230,0,0,0,192,0,0,0,88,0,0,0,186,0,0,0,130,0,0,0,72,0,0,0,18,0,0,0,30,0,0,0,106,0,0,0,16,1,0,0,20,1,0,0,186,0,0,0,130,0,0,0,72,0,0,0,18,0,0,0,14,0,0,0,50,0,0,0,100,0,0,0,182,0,0,0,186,0,0,0,130,0,0,0,72,0,0,0,18,0,0,0,146,0,0,0,102,0,0,0,250,0,0,0,110,0,0,0,186,0,0,0,130,0,0,0,72,0,0,0,18,0,0,0,96,0,0,0,40,0,0,0,180,0,0,0,10,1,0,0,186,0,0,0,130,0,0,0,72,0,0,0,18,0,0,0,234,0,0,0,196,0,0,0,140,0,0,0,110,0,0,0,186,0,0,0,130,0,0,0,72,0,0,0,18,0,0,0,12,0,0,0,52,1,0,0,92,0,0,0,110,0,0,0,186,0,0,0,130,0,0,0,72,0,0,0,18,0,0,0,46,1,0,0,16,0,0,0,54,0,0,0,80,1,0,0,186,0,0,0,130,0,0,0,72,0,0,0,18,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,114,0,0,0,82,1,0,0,40,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,40,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,40,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,40,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,40,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,40,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,40,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,40,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,82,1,0,0,194,0,0,0,144,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,144,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,144,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,144,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,144,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,144,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,144,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,144,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,194,0,0,0,50,1,0,0,28,0,0,0,242,0,0,0,74,0,0,0,110,0,0,0,110,0,0,0,126,0,0,0,136,0,0,0,120,0,0,0,60,0,0,0,20,0,0,0,154,0,0,0,110,0,0,0,110,0,0,0,126,0,0,0,136,0,0,0,228,0,0,0,188,0,0,0,74,1,0,0,72,1,0,0,110,0,0,0,110,0,0,0,126,0,0,0,136,0,0,0,24,0,0,0,66,0,0,0,22,1,0,0,56,0,0,0,110,0,0,0,110,0,0,0,126,0,0,0,136,0,0,0,166,0,0,0,214,0,0,0,4,1,0,0,64,1,0,0,110,0,0,0,110,0,0,0,126,0,0,0,48,1,0,0,156,0,0,0,210,0,0,0,84,0,0,0,62,0,0,0,110,0,0,0,110,0,0,0,126,0,0,0,136,0,0,0,28,1,0,0,68,1,0,0,134,0,0,0,6,1,0,0,110,0,0,0,110,0,0,0,126,0,0,0,136,0,0,0,110,0,0,0,22,0,0,0,172,0,0,0,80,1,0,0,110,0,0,0,110,0,0,0,126,0,0,0,136,0,0,0,174,0,0,0,218,0,0,0,24,1,0,0,68,0,0,0,56,1,0,0,254,0,0,0,208,0,0,0,68,0,0,0,174,0,0,0,218,0,0,0,24,1,0,0,68,0,0,0,56,1,0,0,254,0,0,0,208,0,0,0,68,0,0,0,174,0,0,0,218,0,0,0,24,1,0,0,68,0,0,0,56,1,0,0,254,0,0,0,208,0,0,0,68,0,0,0,174,0,0,0,218,0,0,0,24,1,0,0,68,0,0,0,56,1,0,0,254,0,0,0,208,0,0,0,68,0,0,0,174,0,0,0,218,0,0,0,24,1,0,0,68,0,0,0,56,1,0,0,254,0,0,0,208,0,0,0,68,0,0,0,174,0,0,0,218,0,0,0,24,1,0,0,68,0,0,0,56,1,0,0,254,0,0,0,208,0,0,0,68,0,0,0,174,0,0,0,218,0,0,0,24,1,0,0,68,0,0,0,56,1,0,0,254,0,0,0,208,0,0,0,68,0,0,0,174,0,0,0,218,0,0,0,24,1,0,0,68,0,0,0,56,1,0,0,254,0,0,0,208,0,0,0,68,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,42,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,110,0,0,0,110,0,0,0,110,0,0,0,110,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,110,0,0,0,110,0,0,0,110,0,0,0,110,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,110,0,0,0,110,0,0,0,110,0,0,0,110,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,110,0,0,0,110,0,0,0,110,0,0,0,110,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,110,0,0,0,110,0,0,0,110,0,0,0,110,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,110,0,0,0,110,0,0,0,110,0,0,0,110,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,110,0,0,0,110,0,0,0,110,0,0,0,110,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,64,0,0,0,110,0,0,0,110,0,0,0,110,0,0,0,110,0,0,0,8,0,0,0,90,0,0,0,78,1,0,0,34,0,0,0,112,0,0,0,80,0,0,0,224,0,0,0,14,1,0,0,8,0,0,0,90,0,0,0,78,1,0,0,34,0,0,0,112,0,0,0,80,0,0,0,224,0,0,0,14,1,0,0,8,0,0,0,90,0,0,0,78,1,0,0,34,0,0,0,112,0,0,0,80,0,0,0,224,0,0,0,14,1,0,0,8,0,0,0,90,0,0,0,78,1,0,0,34,0,0,0,112,0,0,0,80,0,0,0,224,0,0,0,14,1,0,0,8,0,0,0,90,0,0,0,78,1,0,0,34,0,0,0,112,0,0,0,80,0,0,0,224,0,0,0,14,1,0,0,8,0,0,0,90,0,0,0,78,1,0,0,34,0,0,0,112,0,0,0,80,0,0,0,224,0,0,0,14,1,0,0,8,0,0,0,90,0,0,0,78,1,0,0,34,0,0,0,112,0,0,0,80,0,0,0,224,0,0,0,14,1,0,0,8,0,0,0,90,0,0,0,78,1,0,0,34,0,0,0,112,0,0,0,80,0,0,0,224,0,0,0,14,1,0,0,30,1,0,0,32,0,0,0,6,0,0,0,48,0,0,0,200,0,0,0,12,1,0,0,108,0,0,0,2,1,0,0,30,1,0,0,32,0,0,0,6,0,0,0,48,0,0,0,200,0,0,0,12,1,0,0,108,0,0,0,2,1,0,0,30,1,0,0,32,0,0,0,6,0,0,0,48,0,0,0,200,0,0,0,12,1,0,0,108,0,0,0,2,1,0,0,30,1,0,0,32,0,0,0,6,0,0,0,48,0,0,0,200,0,0,0,12,1,0,0,108,0,0,0,2,1,0,0,30,1,0,0,32,0,0,0,6,0,0,0,48,0,0,0,200,0,0,0,12,1,0,0,108,0,0,0,2,1,0,0,30,1,0,0,32,0,0,0,6,0,0,0,48,0,0,0,200,0,0,0,12,1,0,0,108,0,0,0,2,1,0,0,30,1,0,0,32,0,0,0,6,0,0,0,48,0,0,0,200,0,0,0,12,1,0,0,108,0,0,0,2,1,0,0,30,1,0,0,32,0,0,0,6,0,0,0,48,0,0,0,200,0,0,0,12,1,0,0,108,0,0,0,2,1,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,190,0,0,0,58,0,0,0,2,0,0,0,42,1,0,0,240,0,0,0,244,0,0,0,60,1,0,0,26,0,0,0,236,0,0,0,58,0,0,0,2,0,0,0,42,1,0,0,240,0,0,0,244,0,0,0,60,1,0,0,26,0,0,0,236,0,0,0,58,0,0,0,2,0,0,0,42,1,0,0,240,0,0,0,244,0,0,0,60,1,0,0,26,0,0,0,236,0,0,0,58,0,0,0,2,0,0,0,42,1,0,0,240,0,0,0,244,0,0,0,60,1,0,0,26,0,0,0,236,0,0,0,58,0,0,0,2,0,0,0,42,1,0,0,240,0,0,0,244,0,0,0,60,1,0,0,26,0,0,0,236,0,0,0,58,0,0,0,2,0,0,0,42,1,0,0,240,0,0,0,244,0,0,0,60,1,0,0,26,0,0,0,236,0,0,0,58,0,0,0,2,0,0,0,42,1,0,0,240,0,0,0,244,0,0,0,60,1,0,0,26,0,0,0,236,0,0,0,58,0,0,0,2,0,0,0,42,1,0,0,240,0,0,0,244,0,0,0,60,1,0,0,26,0,0,0,236,0,0,0,152,0,0,0,202,0,0,0,66,1,0,0,232,0,0,0,4,0,0,0,44,1,0,0,104,0,0,0,148,0,0,0,152,0,0,0,202,0,0,0,66,1,0,0,232,0,0,0,4,0,0,0,44,1,0,0,104,0,0,0,148,0,0,0,152,0,0,0,202,0,0,0,66,1,0,0,232,0,0,0,4,0,0,0,44,1,0,0,104,0,0,0,148,0,0,0,152,0,0,0,202,0,0,0,66,1,0,0,232,0,0,0,4,0,0,0,44,1,0,0,104,0,0,0,148,0,0,0,152,0,0,0,202,0,0,0,66,1,0,0,232,0,0,0,4,0,0,0,44,1,0,0,104,0,0,0,148,0,0,0,152,0,0,0,202,0,0,0,66,1,0,0,232,0,0,0,4,0,0,0,44,1,0,0,104,0,0,0,148,0,0,0,152,0,0,0,202,0,0,0,66,1,0,0,232,0,0,0,4,0,0,0,44,1,0,0,104,0,0,0,148,0,0,0,152,0,0,0,202,0,0,0,66,1,0,0,232,0,0,0,4,0,0,0,44,1,0,0,104,0,0,0,148,0,0,0,248,0,0,0,26,1,0,0,150,0,0,0,38,0,0,0,122,0,0,0,176,0,0,0,36,0,0,0,62,1,0,0,248,0,0,0,26,1,0,0,150,0,0,0,38,0,0,0,122,0,0,0,176,0,0,0,36,0,0,0,62,1,0,0,248,0,0,0,26,1,0,0,150,0,0,0,38,0,0,0,122,0,0,0,176,0,0,0,36,0,0,0,62,1,0,0,248,0,0,0,26,1,0,0,150,0,0,0,38,0,0,0,122,0,0,0,176,0,0,0,36,0,0,0,62,1,0,0,248,0,0,0,26,1,0,0,150,0,0,0,38,0,0,0,122,0,0,0,176,0,0,0,36,0,0,0,62,1,0,0,248,0,0,0,26,1,0,0,150,0,0,0,38,0,0,0,122,0,0,0,176,0,0,0,36,0,0,0,62,1,0,0,248,0,0,0,26,1,0,0,150,0,0,0,38,0,0,0,122,0,0,0,176,0,0,0,36,0,0,0,62,1,0,0,248,0,0,0,26,1,0,0,150,0,0,0,38,0,0,0,122,0,0,0,176,0,0,0,36,0,0,0,62,1,0,0,94,0,0,0,124,0,0,0,178,0,0,0,52,0,0,0,212,0,0,0,162,0,0,0,116,0,0,0,8,1,0,0,94,0,0,0,124,0,0,0,178,0,0,0,220,0,0,0,212,0,0,0,162,0,0,0,116,0,0,0,170,0,0,0,94,0,0,0,124,0,0,0,178,0,0,0,158,0,0,0,212,0,0,0,162,0,0,0,116,0,0,0,164,0,0,0,94,0,0,0,124,0,0,0,178,0,0,0,138,0,0,0,212,0,0,0,162,0,0,0,116,0,0,0,76,0,0,0,94,0,0,0,124,0,0,0,178,0,0,0,78,0,0,0,212,0,0,0,162,0,0,0,116,0,0,0,86,0,0,0,94,0,0,0,124,0,0,0,178,0,0,0,58,1,0,0,212,0,0,0,162,0,0,0,116,0,0,0,44,0,0,0,94,0,0,0,124,0,0,0,178,0,0,0,226,0,0,0,212,0,0,0,162,0,0,0,116,0,0,0,110,0,0,0,94,0,0,0,124,0,0,0,178,0,0,0,216,0,0,0,212,0,0,0,162,0,0,0,116,0,0,0,198,0,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,36,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,166,0,0,0,198,1,0,0,214,0,0,0,0,0,0,0,112,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,104,1,0,0,164,1,0,0,0,0,0,0,0,0,0,0,112,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,196,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,218,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,148,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,168,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,170,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,154,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,230,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,188,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,132,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,1,0,0,72,1,0,0,72,1,0,0,72,1,0,0,72,1,0,0,42,1,0,0,42,1,0,0,42,1,0,0,42,1,0,0,226,1,0,0,226,1,0,0,226,1,0,0,226,1,0,0,70,0,0,0,70,0,0,0,70,0,0,0,70,0,0,0,192,0,0,0,192,0,0,0,192,0,0,0,192,0,0,0,50,1,0,0,50,1,0,0,50,1,0,0,50,1,0,0,180,0,0,0,180,0,0,0,180,0,0,0,180,0,0,0,144,1,0,0,144,1,0,0,144,1,0,0,144,1,0,0,0,2,0,0,0,2,0,0,0,2,0,0,0,2,0,0,54,1,0,0,54,1,0,0,54,1,0,0,54,1,0,0,146,0,0,0,146,0,0,0,146,0,0,0,146,0,0,0,18,1,0,0,18,1,0,0,18,1,0,0,18,1,0,0,158,1,0,0,158,1,0,0,158,1,0,0,158,1,0,0,72,0,0,0,72,0,0,0,72,0,0,0,72,0,0,0,86,1,0,0,86,1,0,0,86,1,0,0,86,1,0,0,138,1,0,0,138,1,0,0,138,1,0,0,138,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,198,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,134,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,222,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,200,194,0,0,2,0,0,0,216,179,0,0,2,0,0,0,96,166,0,0,8,0,0,0,0,0,0,0,0,0,0,0,224,213,0,0,16,0,0,0,224,221,0,0,14,0,0,0,112,196,0,0,10,0,0,0,224,180,0,0,10,0,0,0,8,167,0,0,12,0,0,0,240,154,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,80,0,0,0,1,0,0,0,8,0,0,0,0,2,0,0,2,0,0,0,0,160,5,0,80,0,0,0,1,0,0,0,9,0,0,0,0,2,0,0,2,0,0,0,0,178,5,0,81,0,0,0,1,0,0,0,9,0,0,0,0,2,0,0,2,0,0,0,0,196,5,0,82,0,0,0,1,0,0,0,9,0,0,0,0,2,0,0,2,0,0,0,0,214,5,0,83,0,0,0,1,0,0,0,9,0,0,0,0,2,0,0,2,0,0,0,0,64,6,0,80,0,0,0,1,0,0,0,10,0,0,0,0,2,0,0,2,0,0,0,0,84,6,0,81,0,0,0,1,0,0,0,10,0,0,0,0,2,0,0,2,0,0,0,0,104,6,0,82,0,0,0,1,0,0,0,10,0,0,0,0,2,0,0,2,0,0,0,0,124,6,0,83,0,0,0,1,0,0,0,10,0,0,0,0,2,0,0,2,0,0,0,0,224,6,0,80,0,0,0,1,0,0,0,11,0,0,0,0,2,0,0,2,0,0,0,0,246,6,0,81,0,0,0,1,0,0,0,11,0,0,0,0,2,0,0,2,0,0,0,0,12,7,0,82,0,0,0,1,0,0,0,11,0,0,0,0,2,0,0,2,0,0,0,0,34,7,0,83,0,0,0,1,0,0,0,11,0,0,0,0,2,0,0,2,0,0,0,0,0,10,0,80,0,0,0,2,0,0,0,8,0,0,0,0,2,0,0,2,0,0,0,0,64,11,0,80,0,0,0,2,0,0,0,9,0,0,0,0,2,0,0,2,0,0,0,0,100,11,0,81,0,0,0,2,0,0,0,9,0,0,0,0,2,0,0,2,0,0,0,0,136,11,0,82,0,0,0,2,0,0,0,9,0,0,0,0,2,0,0,2,0,0,0,0,172,11,0,83,0,0,0,2,0,0,0,9,0,0,0,0,2,0,0,2,0,0,0,0,128,12,0,80,0,0,0,2,0,0,0,10,0,0,0,0,2,0,0,2,0,0,0,0,168,12,0,81,0,0,0,2,0,0,0,10,0,0,0,0,2,0,0,2,0,0,0,0,208,12,0,82,0,0,0,2,0,0,0,10,0,0,0,0,2,0,0,2,0,0,0,0,248,12,0,83,0,0,0,2,0,0,0,10,0,0,0,0,2,0,0,2,0,0,0,0,192,13,0,80,0,0,0,2,0,0,0,11,0,0,0,0,2,0,0,2,0,0,0,0,236,13,0,81,0,0,0,2,0,0,0,11,0,0,0,0,2,0,0,2,0,0,0,0,24,14,0,82,0,0,0,2,0,0,0,11,0,0,0,0,2,0,0,2,0,0,0,0,68,14,0,83,0,0,0,2,0,0,0,11,0,0,0,0,2,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,2,0,40,0,0,0,1,0,0,0,8,0,0,0,0,2,0,0,2,0,0,0,0,208,2,0,40,0,0,0,1,0,0,0,9,0,0,0,0,2,0,0,2,0,0,0,0,0,5,0,40,0,0,0,2,0,0,0,8,0,0,0,0,2,0,0,2,0,0,0,0,160,5,0,40,0,0,0,2,0,0,0,9,0,0,0,0,2,0,0,2,0,0,0,0,0,10,0,80,0,0,0,2,0,0,0,8,0,0,0,0,2,0,0,2,0,0,0,0,64,11,0,80,0,0,0,2,0,0,0,9,0,0,0,0,2,0,0,2,0,0,0,0,128,12,0,80,0,0,0,2,0,0,0,10,0,0,0,0,2,0,0,2,0,0,0,0,192,18,0,80,0,0,0,2,0,0,0,15,0,0,0,0,2,0,0,2,128,0,0,0,128,22,0,80,0,0,0,2,0,0,0,18,0,0,0,0,2,0,0,2,128,0,0,0,0,45,0,80,0,0,0,2,0,0,0,36,0,0,0,0,2,0,0,2,128,0,0,0,64,19,0,77,0,0,0,2,0,0,0,8,0,0,0,0,4,0,0,2,128,0,0,0,233,3,0,77,0,0,0,1,0,0,0,26,0,0,0,128,0,0,0,1,128,0,0,0,210,7,0,77,0,0,0,2,0,0,0,26,0,0,0,128,0,0,0,1,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,85,83,69,0,0,0,0,67,77,80,46,76,0,0,0,83,116,97,99,107,83,112,97,99,101,0,0,0,0,0,0,83,116,97,114,116,82,105,103,104,116,0,0,0,0,0,0,110,111,110,101,0,0,0,0,42,42,42,32,82,65,77,32,110,111,116,32,102,111,117,110,100,32,97,116,32,48,48,48,48,48,48,10,0,0,0,0,67,77,80,65,46,87,0,0,77,111,118,101,72,72,105,0,83,117,112,101,114,82,105,103,104,116,0,0,0,0,0,0,42,42,42,32,117,110,107,110,111,119,110,32,99,112,117,32,109,111,100,101,108,32,40,37,115,41,10,0,0,0,0,0,69,79,82,46,66,0,0,0,77,97,120,65,112,112,108,90,111,110,101,0,0,0,0,0,45,40,65,37,117,41,0,0,77,101,116,97,82,105,103,104,116,0,0,0,0,0,0,0,109,111,100,101,108,61,37,115,32,115,112,101,101,100,61,37,100,10,0,0,0,0,0,0,67,77,80,77,46,66,0,0,80,117,114,103,101,83,112,97,99,101,0,0,0,0,0,0,65,108,116,82,105,103,104,116,0,0,0,0,0,0,0,0,67,80,85,58,0,0,0,0,69,79,82,46,87,0,0,0,77,97,120,66,108,111,99,107,0,0,0,0,0,0,0,0,83,112,97,99,101,0,0,0,115,112,101,101,100,0,0,0,67,77,80,77,46,87,0,0,72,70,83,68,105,115,112,97,116,99,104,0,0,0,0,0,68,101,108,101,116,101,0,0,65,108,116,0,0,0,0,0,99,112,117,0,0,0,0,0,115,111,110,121,58,32,99,104,115,32,101,114,114,111,114,32,40,98,108,107,61,37,108,117,44,32,108,98,97,61,37,108,117,41,10,0,0,0,0,0,69,79,82,46,76,0,0,0,78,77,82,101,109,111,118,101,0,0,0,0,0,0,0,0,115,99,115,105,58,32,114,101,97,100,32,101,114,114,111,114,32,97,116,32,37,108,117,32,43,32,37,108,117,10,0,0,65,108,116,76,101,102,116,0,97,108,116,101,114,110,97,116,101,32,115,111,117,110,100,32,98,117,102,102,101,114,10,0,67,77,80,77,46,76,0,0,101,109,117,46,105,119,109,46,114,111,0,0,0,0,0,0,78,77,73,110,115,116,97,108,108,0,0,0,0,0,0,0,101,109,117,46,101,120,105,116,0,0,0,0,0,0,0,0,70,57,0,0,0,0,0,0,33,61,0,0,0,0,0,0,77,111,100,101,0,0,0,0,123,0,0,0,0,0,0,0,104,0,0,0,0,0,0,0,109,97,105,110,32,115,111,117,110,100,32,98,117,102,102,101,114,10,0,0,0,0,0,0,98,105,110,0,0,0,0,0,109,111,117,115,101,95,109,117,108,95,120,0,0,0,0,0,34,10,0,0,0,0,0,0])
.concat([97,100,100,114,61,48,120,37,48,56,108,120,32,115,105,122,101,61,37,108,117,32,102,105,108,101,61,37,115,10,0,0,104,0,0,0,0,0,0,0,45,45,37,115,0,0,0,0,67,77,80,65,46,76,0,0,101,120,112,101,99,116,105,110,103,32,101,120,112,114,101,115,115,105,111,110,0,0,0,0,116,100,48,58,32,100,114,111,112,112,105,110,103,32,112,104,97,110,116,111,109,32,115,101,99,116,111,114,32,37,117,47,37,117,47,37,117,10,0,0,82,101,108,101,97,115,101,32,51,46,48,55,36,48,0,0,83,119,97,112,77,77,85,77,111,100,101,0,0,0,0,0,46,114,97,119,0,0,0,0,79,0,0,0,0,0,0,0,87,105,110,100,111,119,115,76,101,102,116,0,0,0,0,0,97,108,116,101,114,110,97,116,101,32,118,105,100,101,111,32,98,117,102,102,101,114,10,0,118,105,100,101,111,0,0,0,116,101,114,109,46,116,105,116,108,101,0,0,0,0,0,0,77,85,76,85,46,87,0,0,77,101,109,111,114,121,68,105,115,112,97,116,99,104,0,0,83,116,97,114,116,76,101,102,116,0,0,0,0,0,0,0,109,97,105,110,32,118,105,100,101,111,32,98,117,102,102,101,114,10,0,0,0,0,0,0,103,0,0,0,0,0,0,0,82,83,69,84,0,0,0,0,115,112,101,101,100,58,32,37,117,10,0,0,0,0,0,0,65,78,68,46,66,0,0,0,80,111,119,101,114,79,102,102,0,0,0,0,0,0,0,0,83,117,112,101,114,76,101,102,116,0,0,0,0,0,0,0,86,73,65,58,0,0,0,0,65,66,67,68,46,66,0,0,80,114,105,109,101,84,105,109,101,0,0,0,0,0,0,0,77,101,116,97,0,0,0,0,118,105,97,0,0,0,0,0,65,78,68,46,87,0,0,0,82,109,118,84,105,109,101,0,40,65,37,117,41,43,0,0,77,101,116,97,76,101,102,116,0,0,0,0,0,0,0,0,83,67,67,58,0,0,0,0,65,78,68,46,76,0,0,0,73,110,115,84,105,109,101,0,67,116,114,108,0,0,0,0,115,99,99,0,0,0,0,0,105,103,110,111,114,105,110,103,32,112,99,101,32,107,101,121,58,32,37,48,52,120,32,40,37,115,41,10,0,0,0,0,83,101,116,65,112,112,66,97,115,101,0,0,0,0,0,0,67,116,114,108,76,101,102,116,0,0,0,0,0,0,0,0,42,42,42,32,99,97,110,39,116,32,111,112,101,110,32,100,114,105,118,101,114,32,40,37,115,41,10,0,0,0,0,0,77,85,76,83,46,87,0,0,76,111,119,101,114,84,101,120,116,0,0,0,0,0,0,0,67,114,101,97,116,101,0,0,47,0,0,0,0,0,0,0,42,42,42,32,98,97,100,32,112,111,114,116,32,110,117,109,98,101,114,32,40,37,117,41,10,0,0,0,0,0,0,0,105,119,109,58,32,100,114,105,118,101,32,37,117,32,101,106,101,99,116,10,0,0,0,0,115,111,110,121,58,32,119,114,105,116,101,32,101,114,114,111,114,32,97,116,32,37,117,47,37,117,47,37,117,10,0,0,65,68,68,65,46,87,0,0,83,116,114,105,112,65,100,100,114,101,115,115,0,0,0,0,115,99,115,105,58,32,116,111,111,32,109,97,110,121,32,98,108,111,99,107,115,32,40,37,117,41,10,0,0,0,0,0,83,108,97,115,104,0,0,0,112,111,114,116,61,37,117,32,109,117,108,116,105,99,104,97,114,61,37,117,32,100,114,105,118,101,114,61,37,115,10,0,65,68,68,46,66,0,0,0,101,109,117,46,100,105,115,107,46,114,119,0,0,0,0,0,115,100,108,58,32,98,108,105,116,32,101,114,114,111,114,10,0,0,0,0,0,0,0,0,85,112,114,83,116,114,105,110,103,0,0,0,0,0,0,0,48,0,0,0,0,0,0,0,70,56,0,0,0,0,0,0,61,61,0,0,0,0,0,0,46,0,0,0,0,0,0,0,115,101,99,116,105,111,110,0,102,0,0,0,0,0,0,0,83,69,82,73,65,76,58,0,115,114,101,99,0,0,0,0,115,99,97,108,101,0,0,0,99,112,117,46,109,111,100,101,108,32,61,32,34,0,0,0,82,65,77,58,0,0,0,0,99,0,0,0,0,0,0,0,32,32,0,0,0,0,0,0,65,68,68,88,46,66,0,0,101,120,112,101,99,116,105,110,103,32,111,102,102,115,101,116,0,0,0,0,0,0,0,0,116,100,48,58,32,99,114,99,32,101,114,114,111,114,32,97,116,32,115,101,99,116,111,114,32,37,117,47,37,117,47,37,117,32,40,37,48,50,88,32,37,48,52,88,32,37,48,52,88,41,10,0,0,0,0,0,82,101,108,101,97,115,101,32,51,46,48,50,36,48,0,0,46,112,115,105,0,0,0,0,87,114,105,116,101,88,80,114,97,109,0,0,0,0,0,0,78,0,0,0,0,0,0,0,80,101,114,105,111,100,0,0,109,117,108,116,105,99,104,97,114,0,0,0,0,0,0,0,65,68,68,46,87,0,0,0,82,101,97,100,88,80,114,97,109,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,112,111,114,116,0,0,0,0,114,117,110,32,117,110,116,105,108,32,101,120,99,101,112,116,105,111,110,0,0,0,0,0,115,115,112,0,0,0,0,0,65,68,68,88,46,87,0,0,115,121,115,116,101,109,32,116,111,111,32,115,108,111,119,44,32,115,107,105,112,112,105,110,103,32,49,32,115,101,99,111,110,100,10,0,0,0,0,0,82,101,108,83,116,114,105,110,103,0,0,0,0,0,0,0,67,111,109,109,97,0,0,0,99,111,112,121,32,109,101,109,111,114,121,0,0,0,0,0,115,101,114,105,97,108,0,0,65,68,68,46,76,0,0,0,82,68,114,118,114,73,110,115,116,97,108,108,0,0,0,0,109,0,0,0,0,0,0,0,115,114,99,32,100,115,116,32,99,110,116,0,0,0,0,0,42,42,42,32,114,101,97,100,105,110,103,32,114,116,99,32,102,105,108,101,32,102,97,105,108,101,100,10,0,0,0,0,105,119,109,58,32,108,111,97,100,105,110,103,32,100,114,105,118,101,32,37,117,32,40,112,114,105,41,10,0,0,0,0,65,68,68,88,46,76,0,0,65,100,100,68,114,105,118,101,0,0,0,0,0,0,0,0,68,0,0,0,0,0,0,0,110,0,0,0,0,0,0,0,101,118,97,108,117,97,116,101,32,101,120,112,114,101,115,115,105,111,110,115,0,0,0,0,60,110,111,119,62,0,0,0,32,68,51,61,37,48,56,108,88,32,32,68,55,61,37,48,56,108,88,32,32,65,51,61,37,48,56,108,88,32,32,65,55,61,37,48,56,108,88,32,32,83,83,80,61,37,48,56,108,88,10,0,0,0,0,0,65,68,68,65,46,76,0,0,80,117,114,103,101,77,101,109,0,0,0,0,0,0,0,0,98,0,0,0,0,0,0,0,91,101,120,112,114,46,46,46,93,0,0,0,0,0,0,0,102,105,108,101,61,37,115,32,114,101,97,108,116,105,109,101,61,37,100,32,115,116,97,114,116,61,37,115,32,114,111,109,100,105,115,107,61,37,100,10,0,0,0,0,0,0,0,0,117,110,104,97,110,100,108,101,100,32,109,97,103,105,99,32,107,101,121,32,40,37,117,41,10,0,0,0,0,0,0,0,32,68,50,61,37,48,56,108,88,32,32,68,54,61,37,48,56,108,88,32,32,65,50,61,37,48,56,108,88,32,32,65,54,61,37,48,56,108,88,32,32,85,83,80,61,37,48,56,108,88,10,0,0,0,0,0,82,79,82,46,66,0,0,0,67,111,109,112,97,99,116,77,101,109,0,0,0,0,0,0,118,0,0,0,0,0,0,0,119,114,105,116,101,32,109,101,109,111,114,121,32,116,111,32,97,32,102,105,108,101,0,0,82,84,67,58,0,0,0,0,32,68,49,61,37,48,56,108,88,32,32,68,53,61,37,48,56,108,88,32,32,65,49,61,37,48,56,108,88,32,32,65,53,61,37,48,56,108,88,32,32,76,80,67,61,37,48,56,108,88,10,0,0,0,0,0,82,79,88,82,46,66,0,0,83,101,116,71,114,111,119,90,111,110,101,0,0,0,0,0,71,101,116,86,111,108,73,110,102,111,0,0,0,0,0,0,99,0,0,0,0,0,0,0,110,97,109,101,32,91,102,109,116,93,32,91,97,32,110,46,46,46,93,0,0,0,0,0,115,116,97,114,116,0,0,0,37,48,52,88,0,0,0,0,32,68,48,61,37,48,56,108,88,32,32,68,52,61,37,48,56,108,88,32,32,65,48,61,37,48,56,108,88,32,32,65,52,61,37,48,56,108,88,32,32,32,80,67,61,37,48,56,108,88,10,0,0,0,0,0,68,105,97,108,111,103,68,105,115,112,97,116,99,104,0,0,115,111,110,121,58,32,99,111,110,116,114,111,108,58,32,117,110,107,110,111,119,110,32,40,111,112,99,111,100,101,61,48,120,37,48,52,120,41,10,0,76,83,82,46,66,0,0,0,77,111,100,97,108,68,105,97,108,111,103,77,101,110,117,83,101,116,117,112,0,0,0,0,77,101,110,117,67,104,111,105,99,101,0,0,0,0,0,0,83,101,116,77,67,69,110,116,114,105,101,115,0,0,0,0,72,78,111,80,117,114,103,101,0,0,0,0,0,0,0,0,71,101,116,77,67,69,110,116,114,121,0,0,0,0,0,0,68,105,115,112,77,67,69,110,116,114,105,101,115,0,0,0,115,99,115,105,58,32,119,114,105,116,101,32,101,114,114,111,114,10,0,0,0,0,0,0,83,101,116,77,67,73,110,102,111,0,0,0,0,0,0,0,120,0,0,0,0,0,0,0,113,117,105,116,0,0,0,0,71,101,116,77,67,73,110,102,111,0,0,0,0,0,0,0,114,111,109,100,105,115,107,0,68,101,108,77,67,69,110,116,114,105,101,115,0,0,0,0,72,105,103,104,76,101,118,101,108,70,83,68,105,115,112,97,116,99,104,0,0,0,0,0,32,83,82,61,37,48,52,88,91,37,99,37,99,93,32,32,67,67,61,37,48,50,88,91,37,99,37,99,37,99,37,99,37,99,93,32,69,88,61,37,48,50,88,40,37,45,52,115,41,32,84,82,80,61,37,48,52,88,32,73,77,76,61,37,88,32,73,80,76,61,37,88,10,0,0,0,0,0,0,0,67,111,112,121,68,101,101,112,77,97,115,107,0,0,0,0,65,83,82,46,66,0,0,0,83,101,101,100,67,70,105,108,108,0,0,0,0,0,0,0,67,97,108,99,67,77,97,115,107,0,0,0,0,0,0,0,101,109,117,46,100,105,115,107,46,114,111,0,0,0,0,0,83,101,116,83,116,100,67,80,114,111,99,115,0,0,0,0,115,100,108,58,32,107,101,121,32,61,32,48,120,37,48,52,120,10,0,0,0,0,0,0,72,80,117,114,103,101,0,0,68,101,108,67,111,109,112,0,116,101,114,109,46,102,117,108,108,115,99,114,101,101,110,0,68,101,108,83,101,97,114,99,104,0,0,0,0,0,0,0,70,55,0,0,0,0,0,0,78,101,119,67,68,105,97,108,111,103,0,0,0,0,0,0,38,0,0,0,0,0,0,0,122,0,0,0,0,0,0,0,115,101,110,100,32,97,32,109,101,115,115,97,103,101,32,116,111,32,116,104,101,32,101,109,117,108,97,116,111,114,32,99,111,114,101,0,0,0,0,0,82,101,115,116,111,114,101,69,110,116,114,105,101,115,0,0,114,101,97,108,116,105,109,101,0,0,0,0,0,0,0,0,83,97,118,101,69,110,116,114,105,101,115,0,0,0,0,0,101,0,0,0,0,0,0,0,71,101,116,67,87,77,103,114,80,111,114,116,0,0,0,0,67,76,75,61,37,108,120,32,32,79,80,61,37,108,120,32,32,68,76,89,61,37,108,117,32,32,67,80,73,61,37,46,52,102,10,0,0,0,0,0,105,104,120,0,0,0,0,0,109,105,110,95,104,0,0,0,100,101,102,97,117,108,116,0,10,0,0,0,0,0,0,0,83,101,116,68,101,115,107,67,80,97,116,0,0,0,0,0,111,102,102,115,101,116,0,0,44,32,0,0,0,0,0,0,115,121,110,116,97,120,32,101,114,114,111,114,0,0,0,0,82,79,82,46,76,0,0,0,58,0,0,0,0,0,0,0,71,101,116,78,101,119,67,87,105,110,100,111,119,0,0,0,116,100,48,58,32,115,101,99,116,111,114,32,99,114,99,32,111,118,101,114,32,104,101,97,100,101,114,43,100,97,116,97,10,0,0,0,0,0,0,0,78,101,119,67,87,105,110,100,111,119,0,0,0,0,0,0,71,101,116,65,117,120,67,116,108,0,0,0,0,0,0,0,99,112,50,58,32,119,97,114,110,105,110,103,58,32,117,110,107,110,111,119,110,32,67,80,50,32,118,101,114,115,105,111,110,10,0,0,0,0,0,0,46,112,102,100,99,0,0,0,80,116,114,90,111,110,101,0,83,101,116,67,116,108,67,111,108,111,114,0,0,0,0,0,71,101,116,65,117,120,87,105,110,0,0,0,0,0,0,0,108,111,103,0,0,0,0,0,83,101,116,87,105,110,67,111,108,111,114,0,0,0,0,0,60,0,0,0,0,0,0,0,109,115,103,32,91,118,97,108,93,0,0,0,0,0,0,0,81,68,69,114,114,111,114,0,112,114,97,109,46,100,97,116,0,0,0,0,0,0,0,0,83,101,116,69,110,116,114,105,101,115,0,0,0,0,0,0,82,101,115,101,114,118,101,69,110,116,114,121,0,0,0,0,54,56,48,48,48,0,0,0,80,114,111,116,101,99,116,69,110,116,114,121,0,0,0,0,82,79,88,82,46,76,0,0,83,101,116,67,108,105,101,110,116,73,68,0,0,0,0,0,65,100,100,67,111,109,112,0,65,100,100,83,101,97,114,99,104,0,0,0,0,0,0,0,83,101,116,84,114,97,112,65,100,100,114,101,115,115,0,0,77,97,107,101,73,84,97,98,108,101,0,0,0,0,0,0,85,112,100,97,116,101,80,105,120,77,97,112,0,0,0,0,71,101,116,83,117,98,84,97,98,108,101,0,0,0,0,0,76,101,115,115,0,0,0,0,114,101,97,100,32,97,32,102,105,108,101,32,105,110,116,111,32,109,101,109,111,114,121,0,82,101,97,108,67,111,108,111,114,0,0,0,0,0,0,0,114,116,99,0,0,0,0,0,73,110,118,101,114,116,67,111,108,111,114,0,0,0,0,0,73,110,100,101,120,50,67,111,108,111,114,0,0,0,0,0,77,69,77,0,0,0,0,0,91,101,120,99,101,112,116,105,111,110,93,0,0,0,0,0,117,115,112,0,0,0,0,0,67,111,108,111,114,50,73,110,100,101,120,0,0,0,0,0,76,83,82,46,76,0,0,0,71,101,116,71,68,101,118,105,99,101,0,0,0,0,0,0,83,101,116,71,68,101,118,105,99,101,0,0,0,0,0,0,109,97,99,58,32,114,101,115,101,116,10,0,0,0,0,0,68,105,115,112,111,115,71,68,101,118,105,99,101,0,0,0,71,101,116,84,114,97,112,65,100,100,114,101,115,115,0,0,78,101,119,71,68,101,118,105,99,101,0,0,0,0,0,0,73,110,105,116,71,68,101,118,105,99,101,0,0,0,0,0,83,101,116,68,101,118,105,99,101,65,116,116,114,105,98,117,116,101,0,0,0,0,0,0,83,104,105,102,116,0,0,0,110,97,109,101,32,91,102,109,116,93,32,91,97,32,91,110,93,93,0,0,0,0,0,0,84,101,115,116,68,101,118,105,99,101,65,116,116,114,105,98,117,116,101,0,0,0,0,0,109,111,100,101,108,61,37,117,32,105,110,116,101,114,110,97,116,105,111,110,97,108,61,37,100,32,107,101,121,112,97,100,61,37,115,10,0,0,0,0,71,101,116,78,101,120,116,68,101,118,105,99,101,0,0,0,71,101,116,77,97,105,110,68,101,118,105,99,101,0,0,0,87,82,37,48,50,117,65,61,37,48,50,88,32,32,82,82,37,48,50,117,65,61,37,48,50,88,32,32,87,82,37,48,50,117,66,61,37,48,50,88,32,32,82,82,37,48,50,117,66,61,37,48,50,88,10,0,71,101,116,68,101,118,105,99,101,76,105,115,116,0,0,0,65,83,82,46,76,0,0,0,71,101,116,67,84,83,101,101,100,0,0,0,0,0,0,0,71,101,116,77,97,120,68,101,118,105,99,101,0,0,0,0,68,105,115,112,111,115,67,67,117,114,115,111,114,0,0,0,70,108,117,115,104,70,105,108,101,0,0,0,0,0,0,0,68,105,115,112,111,115,67,73,99,111,110,0,0,0,0,0,68,105,115,112,111,115,67,84,97,98,108,101,0,0,0,0,67,104,97,114,69,120,116,114,97,0,0,0,0,0,0,0,83,104,105,102,116,76,101,102,116,0,0,0,0,0,0,0,112,114,105,110,116,32,104,101,108,112,0,0,0,0,0,0,72,105,108,105,116,101,67,111,108,111,114,0,0,0,0,0,75,69,89,66,79,65,82,68,58,0,0,0,0,0,0,0,79,112,67,111,108,111,114,0,80,108,111,116,67,73,99,111,110,0,0,0,0,0,0,0,32,32,73,82,81,61,37,117,10,0,0,0,0,0,0,0,71,101,116,67,73,99,111,110,0,0,0,0,0,0,0,0,65,83,82,46,87,0,0,0,65,108,108,111,99,67,117,114,115,111,114,0,0,0,0,0,83,101,116,67,67,117,114,115,111,114,0,0,0,0,0,0,71,101,116,67,67,117,114,115,111,114,0,0,0,0,0,0,83,101,116,70,80,111,115,0,71,101,116,66,97,99,107,67,111,108,111,114,0,0,0,0,65,0,0,0,0,0,0,0,71,101,116,70,111,114,101,67,111,108,111,114,0,0,0,0,71,101,116,67,84,97,98,108,101,0,0,0,0,0,0,0,92,0,0,0,0,0,0,0,102,105,110,100,32,98,121,116,101,115,32,105,110,32,109,101,109,111,114,121,0,0,0,0,71,101,116,67,80,105,120,101,108,0,0,0,0,0,0,0,105,110,116,108,0,0,0,0,83,101,116,67,80,105,120,101,108,0,0,0,0,0,0,0,82,71,66,66,97,99,107,67,111,108,111,114,0,0,0,0,56,53,51,48,45,83,67,67,0,0,0,0,0,0,0,0,82,71,66,70,111,114,101,67,111,108,111,114,0,0,0,0,82,79,76,46,66,0,0,0,70,105,108,108,67,80,111,108,121,0,0,0,0,0,0,0,70,105,108,108,67,82,103,110,0,0,0,0,0,0,0,0,70,105,108,108,67,65,114,99,0,0,0,0,0,0,0,0,83,101,116,70,105,108,84,121,112,101,0,0,0,0,0,0,70,105,108,108,67,82,111,117,110,100,82,101,99,116,0,0,70,105,108,108,67,79,118,97,108,0,0,0,0,0,0,0,70,105,108,108,67,82,101,99,116,0,0,0,0,0,0,0,66,97,99,107,115,108,97,115,104,0,0,0,0,0,0,0,97,100,100,114,32,99,110,116,32,91,118,97,108,46,46,46,93,0,0,0,0,0,0,0,77,97,107,101,82,71,66,80,97,116,0,0,0,0,0,0,109,111,100,101,108,0,0,0,71,101,116,80,105,120,80,97,116,0,0,0,0,0,0,0,66,97,99,107,80,105,120,80,97,116,0,0,0,0,0,0,32,32,80,65,61,37,48,50,88,32,32,32,80,66,61,37,48,50,88,32,32,67,66,50,61,37,88,32,32,37,99,84,50,86,61,37,48,52,88,10,0,0,0,0,0,0,0,0,80,101,110,80,105,120,80,97,116,0,0,0,0,0,0,0,107,101,121,112,97,100,32,109,111,100,101,58,32,107,101,121,112,97,100,10,0,0,0,0,82,79,88,76,46,66,0,0,67,111,112,121,80,105,120,80,97,116,0,0,0,0,0,0,68,105,115,112,111,115,80,105,120,80,97,116,0,0,0,0,78,101,119,80,105,120,80,97,116,0,0,0,0,0,0,0,83,101,116,67,80,111,114,116,80,105,120,0,0,0,0,0,82,115,116,70,105,108,76,111,99,107,0,0,0,0,0,0,67,111,112,121,80,105,120,77,97,112,0,0,0,0,0,0,68,105,115,112,111,115,80,105,120,77,97,112,0,0,0,0,39,0,0,0,0,0,0,0,101,110,116,101,114,32,98,121,116,101,115,32,105,110,116,111,32,109,101,109,111,114,121,0,78,101,119,80,105,120,77,97,112,0,0,0,0,0,0,0,107,101,121,112,97,100,0,0,73,110,105,116,67,112,111,114,116,0,0,0,0,0,0,0,79,112,101,110,67,112,111,114,116,0,0,0,0,0,0,0,32,79,82,65,61,37,48,50,88,32,32,79,82,66,61,37,48,50,88,32,32,67,66,49,61,37,88,32,32,32,84,50,76,61,37,48,52,88,10,0,68,101,98,117,103,103,101,114,0,0,0,0,0,0,0,0,76,83,76,46,66,0,0,0,80,117,116,83,99,114,97,112,0,0,0,0,0,0,0,0,71,101,116,83,99,114,97,112,0,0,0,0,0,0,0,0,90,101,114,111,83,99,114,97,112,0,0,0,0,0,0,0,76,111,100,101,83,99,114,97,112,0,0,0,0,0,0,0,83,101,116,70,105,108,76,111,99,107,0,0,0,0,0,0,75,105,108,108,73,79,0,0,85,110,108,111,100,101,83,99,114,97,112,0,0,0,0,0,73,110,102,111,83,99,114,97,112,0,0,0,0,0,0,0,65,112,111,115,116,114,111,112,104,101,0,0,0,0,0,0,97,100,100,114,32,91,118,97,108,124,115,116,114,105,110,103,46,46,46,93,0,0,0,0,77,101,116,104,111,100,68,105,115,112,97,116,99,104,0,0,109,111,116,105,111,110,0,0,83,101,116,82,101,115,70,105,108,101,65,116,116,114,115,0,71,101,116,82,101,115,70,105,108,101,65,116,116,114,115,0,32,73,82,65,61,37,48,50,88,32,32,73,82,66,61,37,48,50,88,32,32,67,65,50,61,37,88,32,32,37,99,84,49,86,61,37,48,52,88,10,0,0,0,0,0,0,0,0,71,101,116,65,112,112,80,97,114,109,115,0,0,0,0,0,115,111,110,121,58,32,115,116,97,116,117,115,58,32,117,110,107,110,111,119,110,32,40,99,115,61,48,120,37,48,52,120,41,10,0,0,0,0,0,0,65,83,76,46,66,0,0,0,69,120,105,116,84,111,83,104,101,108,108,0,0,0,0,0,67,104,97,105,110,0,0,0,76,97,117,110,99,104,0,0,85,110,108,111,97,100,83,101,103,0,0,0,0,0,0,0,82,101,115,114,118,77,101,109,0,0,0,0,0,0,0,0,76,111,97,100,83,101,103,0,115,99,115,105,58,32,119,114,105,116,101,32,115,105,122,101,32,109,105,115,109,97,116,99,104,32,40,37,117,32,47,32,37,117,41,10,0,0,0,0,80,116,114,65,110,100,72,97,110,100,0,0,0,0,0,0,81,117,111,116,101,0,0,0,100,117,109,112,32,109,101,109,111,114,121,0,0,0,0,0,80,97,99,107,55,0,0,0,107,101,121,98,111,97,114,100,32,107,101,121,112,97,100,95,109,111,100,101,61,37,115,10,0,0,0,0,0,0,0,0,80,97,99,107,54,0,0,0,80,97,99,107,53,0,0,0,68,68,82,65,61,37,48,50,88,32,68,68,82,66,61,37,48,50,88,32,32,67,65,49,61,37,88,32,32,32,84,49,76,61,37,48,52,88,32,83,72,70,84,61,37,48,50,88,47,37,117,10,0,0,0,0,69,108,101,109,115,54,56,75,0,0,0,0,0,0,0,0,80,97,99,107,52,0,0,0,68,87,0,0,0,0,0,0,70,80,54,56,75,0,0,0,101,109,117,46,100,105,115,107,46,105,110,115,101,114,116,0,80,97,99,107,51,0,0,0,101,109,117,46,115,116,111,112,0,0,0,0,0,0,0,0,80,97,99,107,50,0,0,0,73,110,105,116,85,116,105,108,0,0,0,0,0,0,0,0,80,97,99,107,49,0,0,0,70,54,0,0,0,0,0,0,80,97,99,107,48,0,0,0,94,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,91,97,100,100,114,32,91,99,110,116,93,93,0,0,0,0,73,110,105,116,65,108,108,80,97,99,107,115,0,0,0,0,60,110,108,62,0,0,0,0,109,111,117,115,101,10,0,0,73,110,105,116,80,97,99,107,0,0,0,0,0,0,0,0,100,0,0,0,0,0,0,0,72,97,110,100,65,110,100,72,97,110,100,0,0,0,0,0,32,80,67,82,61,37,48,50,88,32,32,65,67,82,61,37,48,50,88,32,32,73,70,82,61,37,48,50,88,32,32,73,69,82,61,37,48,50,88,32,32,73,82,81,61,37,117,10,0,0,0,0,0,0,0,0,105,104,101,120,0,0,0,0,109,105,110,95,119,0,0,0,115,105,122,101,0,0,0,0,37,115,58,32,101,114,114,111,114,32,112,97,114,115,105,110,103,32,105,110,105,32,115,116,114,105,110,103,32,40,37,115,41,10,0,0,0,0,0,0,80,116,114,84,111,72,97,110,100,0,0,0,0,0,0,0,97,117,116,111,0,0,0,0,32,32,45,37,99,0,0,0,115,116,114,105,110,103,32,116,111,111,32,108,111,110,103,0,101,120,112,101,99,116,105,110,103,32,97,100,100,114,101,115,115,0,0,0,0,0,0,0,80,116,114,84,111,88,72,97,110,100,0,0,0,0,0,0,82,79,76,46,76,0,0,0,116,100,48,58,32,117,110,107,110,111,119,110,32,99,111,109,112,114,101,115,115,105,111,110,32,40,37,117,47,37,117,47,37,117,32,37,117,41,10,0,72,97,110,100,84,111,72,97,110,100,0,0,0,0,0,0,115,116,120,58,32,114,101,97,100,32,101,114,114,111,114,32,40,115,101,99,116,111,114,32,100,97,116,97,41,10,0,0,77,117,110,103,101,114,0,0,99,112,50,58,32,110,111,116,32,97,32,67,80,50,32,102,105,108,101,10,0,0,0,0,46,109,115,97,0,0,0,0,84,69,83,101,116,74,117,115,116,0,0,0,0,0,0,0,68,114,118,114,82,101,109,111,118,101,0,0,0,0,0,0,121,100,105,118,0,0,0,0,84,69,73,110,115,101,114,116,0,0,0,0,0,0,0,0,119,0,0,0,0,0,0,0,84,69,83,99,114,111,108,108,0,0,0,0,0,0,0,0,83,101,109,105,99,111,108,111,110,0,0,0,0,0,0,0,115,101,116,32,97,110,32,101,120,112,114,101,115,115,105,111,110,32,98,114,101,97,107,112,111,105,110,116,32,91,112,97,115,115,61,49,32,114,101,115,101,116,61,48,93,0,0,0,84,69,75,101,121,0,0,0,42,42,42,32,99,97,110,39,116,32,99,114,101,97,116,101,32,97,100,98,10,0,0,0,84,69,80,97,115,116,101,0,84,69,73,100,108,101,0,0,54,53,50,50,45,86,73,65,0,0,0,0,0,0,0,0,84,69,68,101,97,99,116,105,118,97,116,101,0,0,0,0,84,69,65,99,116,105,118,97,116,101,0,0,0,0,0,0,82,79,88,76,46,76,0,0,84,69,68,101,108,101,116,101,0,0,0,0,0,0,0,0,84,69,67,117,116,0,0,0,84,69,67,111,112,121,0,0,68,114,118,114,73,110,115,116,97,108,108,0,0,0,0,0,84,69,67,108,105,99,107,0,84,69,85,112,100,97,116,101,0,0,0,0,0,0,0,0,108,0,0,0,0,0,0,0,101,120,112,114,32,91,112,97,115,115,32,91,114,101,115,101,116,93,93,0,0,0,0,0,84,69,78,101,119,0,0,0,101,110,97,98,108,101,100,10,0,0,0,0,0,0,0,0,84,69,83,101,116,83,101,108,101,99,116,0,0,0,0,0,84,69,67,97,108,84,101,120,116,0,0,0,0,0,0,0,101,120,99,101,112,116,105,111,110,32,37,48,50,88,32,40,37,115,41,10,0,0,0,0,103,101,0,0,0,0,0,0,99,99,114,0,0,0,0,0,84,69,83,101,116,84,101,120,116,0,0,0,0,0,0,0,84,101,120,116,66,111,120,0,76,83,76,46,76,0,0,0,84,69,68,105,115,112,111,115,101,0,0,0,0,0,0,0,84,69,73,110,105,116,0,0,54,56,48,50,48,0,0,0,84,69,71,101,116,84,101,120,116,0,0,0,0,0,0,0,67,109,112,83,116,114,105,110,103,0,0,0,0,0,0,0,80,117,116,73,99,111,110,0,83,121,115,69,114,114,111,114,0,0,0,0,0,0,0,0,107,0,0,0,0,0,0,0,98,115,120,0,0,0,0,0,83,121,115,66,101,101,112,0,65,68,66,58,0,0,0,0,68,97,116,101,50,83,101,99,0,0,0,0,0,0,0,0,83,101,99,115,50,68,97,116,101,0,0,0,0,0,0,0,101,0,0,0,0,0,0,0,82,115,114,99,77,97,112,69,110,116,114,121,0,0,0,0,79,112,101,110,82,70,80,101,114,109,0,0,0,0,0,0,65,83,76,46,76,0,0,0,75,101,121,84,114,97,110,115,0,0,0,0,0,0,0,0,83,121,115,69,100,105,116,0,85,110,105,113,117,101,73,68,0,0,0,0,0,0,0,0,68,101,108,97,121,0,0,0,71,101,116,78,101,119,77,66,97,114,0,0,0,0,0,0,71,101,116,82,77,101,110,117,0,0,0,0,0,0,0,0,105,119,109,58,32,115,97,118,105,110,103,32,100,114,105,118,101,32,37,117,32,102,97,105,108,101,100,32,40,100,105,115,107,41,10,0,0,0,0,0,106,0,0,0,0,0,0,0,115,101,116,32,97,110,32,97,100,100,114,101,115,115,32,98,114,101,97,107,112,111,105,110,116,32,91,112,97,115,115,61,49,32,114,101,115,101,116,61,48,93,0,0,0,0,0,0,71,101,116,78,101,119,67,111,110,116,114,111,108,0,0,0,107,101,121,112,97,100,95,109,111,116,105,111,110,0,0,0,71,101,116,78,101,119,87,105,110,100,111,119,0,0,0,0,71,101,116,80,105,99,116,117,114,101,0,0,0,0,0,0,109,105,115,115,105,110,103,32,118,97,108,117,101,10,0,0,71,101,116,73,99,111,110,0,71,101,116,83,116,114,105,110,103,0,0,0,0,0,0,0,65,83,76,46,87,0,0,0,71,101,116,67,117,114,115,111,114,0,0,0,0,0,0,0,71,101,116,80,97,116,116,101,114,110,0,0,0,0,0,0,67,108,111,115,101,68,101,115,107,65,99,99,0,0,0,0,83,101,116,68,97,116,101,84,105,109,101,0,0,0,0,0,37,115,37,117,0,0,0,0,79,112,101,110,68,101,115,107,65,99,99,0,0,0,0,0,83,121,115,116,101,109,77,101,110,117,0,0,0,0,0,0,104,0,0,0,0,0,0,0,97,100,100,114,32,91,112,97,115,115,32,91,114,101,115,101,116,93,93,0,0,0,0,0,83,121,115,116,101,109,84,97,115,107,0,0,0,0,0,0,107,101,121,98,111,97,114,100,0,0,0,0,0,0,0,0,83,121,115,116,101,109,67,108,105,99,107,0,0,0,0,0,83,121,115,116,101,109,69,118,101,110,116,0,0,0,0,0,37,48,56,108,88,10,0,0,67,114,101,97,116,101,82,101,115,70,105,108,101,0,0,0,87,114,105,116,101,82,101,115,111,117,114,99,101,0,0,0,76,83,82,46,87,0,0,0,82,101,115,69,114,114,111,114,0,0,0,0,0,0,0,0,82,109,118,101,82,101,102,101,114,101,110,99,101,0,0,0,82,109,118,101,82,101,115,111,117,114,99,101,0,0,0,0,82,101,97,100,68,97,116,101,84,105,109,101,0,0,0,0,65,100,100,82,101,102,101,114,101,110,99,101,0,0,0,0,65,100,100,82,101,115,111,117,114,99,101,0,0,0,0,0,103,0,0,0,0,0,0,0,98,115,0,0,0,0,0,0,67,104,97,110,103,101,100,82,101,115,111,117,114,99,101,0,109,111,117,115,101,0,0,0,83,101,116,82,101,115,73,110,102,111,0,0,0,0,0,0,71,101,116,82,101,115,73,110,102,111,0,0,0,0,0,0,98,97,100,32,114,101,103,105,115,116,101,114,32,40,37,115,41,10,0,0,0,0,0,0,83,101,116,82,101,115,65,116,116,114,115,0,0,0,0,0,71,101,116,82,101,115,65,116,116,114,115,0,0,0,0,0,107,101,121,112,97,100,32,109,111,100,101,58,32,109,111,116,105,111,110,10,0,0,0,0,76,83,76,46,87,0,0,0,83,105,122,101,82,115,114,99,0,0,0,0,0,0,0,0,72,111,109,101,82,101,115,70,105,108,101,0,0,0,0,0,82,101,108,101,97,115,101,82,101,115,111,117,114,99,101,0,87,114,105,116,101,80,97,114,97,109,0,0,0,0,0,0,76,111,97,100,82,101,115,111,117,114,99,101,0,0,0,0,71,101,116,78,97,109,101,100,82,101,115,111,117,114,99,101,0,0,0,0,0,0,0,0,80,114,105,110,116,32,118,101,114,115,105,111,110,32,105,110,102,111,114,109,97,116,105,111,110,0,0,0,0,0,0,0,102,0,0,0,0,0,0,0,108,105,115,116,32,98,114,101,97,107,112,111,105,110,116,115,0,0,0,0,0,0,0,0,71,101,116,82,101,115,111,117,114,99,101,0,0,0,0,0,97,100,98,0,0,0,0,0,71,101,116,73,110,100,84,121,112,101,0,0,0,0,0,0,67,111,117,110,116,84,121,112,101,115,0,0,0,0,0,0,109,105,115,115,105,110,103,32,114,101,103,105,115,116,101,114,10,0,0,0,0,0,0,0,71,101,116,73,110,100,82,101,115,111,117,114,99,101,0,0,67,111,117,110,116,82,101,115,111,117,114,99,101,115,0,0,82,79,88,82,46,87,0,0,83,101,116,82,101,115,76,111,97,100,0,0,0,0,0,0,67,108,111,115,101,82,101,115,70,105,108,101,0,0,0,0,85,112,100,97,116,101,82,101,115,70,105,108,101,0,0,0,77,111,114,101,77,97,115,116,101,114,115,0,0,0,0,0,85,115,101,82,101,115,70,105,108,101,0,0,0,0,0,0,83,116,97,116,117,115,0,0,79,112,101,110,82,101,115,70,105,108,101,0,0,0,0,0,118,101,114,115,105,111,110,0,100,0,0,0,0,0,0,0,98,108,0,0,0,0,0,0,82,115,114,99,90,111,110,101,73,110,105,116,0,0,0,0,100,114,105,118,101,61,37,117,32,115,105,122,101,61,37,117,75,32,108,111,99,107,101,100,61,37,100,32,114,111,116,97,116,101,61,37,100,32,100,105,115,107,61,37,117,32,102,105,108,101,61,37,115,10,0,0,73,110,105,116,82,101,115,111,117,114,99,101,115,0,0,0,67,117,114,82,101,115,70,105,108,101,0,0,0,0,0,0,59,32,0,0,0,0,0,0,83,101,116,82,101,115,80,117,114,103,101,0,0,0,0,0,105,110,115,101,114,116,32,100,114,105,118,101,32,37,117,10,0,0,0,0,0,0,0,0,68,101,116,97,99,104,82,101,115,111,117,114,99,101,0,0,82,79,88,76,46,87,0,0,77,111,100,97,108,68,105,97,108,111,103,0,0,0,0,0,71,101,116,73,84,101,120,116,0,0,0,0,0,0,0,0,83,101,116,73,84,101,120,116,0,0,0,0,0,0,0,0,79,102,102,108,105,110,101,0,83,101,116,68,73,116,101,109,0,0,0,0,0,0,0,0,115,99,115,105,58,32,119,114,105,116,101,32,98,108,111,99,107,32,99,111,117,110,116,32,37,117,10,0,0,0,0,0,71,101,116,68,73,116,101,109,0,0,0,0,0,0,0,0,83,101,116,32,116,104,101,32,108,111,103,32,108,101,118,101,108,32,116,111,32,100,101,98,117,103,32,91,110,111,93,0,115,0,0,0,0,0,0,0,99,108,101,97,114,32,97,32,98,114,101,97,107,112,111,105,110,116,32,111,114,32,97,108,108,0,0,0,0,0,0,0,69,114,114,111,114,83,111,117,110,100,0,0,0,0,0,0,97,117,116,111,95,114,111,116,97,116,101,0,0,0,0,0,80,97,114,97,109,84,101,120,116,0,0,0,0,0,0,0,70,114,101,101,65,108,101,114,116,0,0,0,0,0,0,0,109,97,99,46,105,110,115,101,114,116,0,0,0,0,0,0,67,111,117,108,100,65,108,101,114,116,0,0,0,0,0,0,67,97,117,116,105,111,110,65,108,101,114,116,0,0,0,0,82,79,82,46,87,0,0,0,78,111,116,101,65,108,101,114,116,0,0,0,0,0,0,0,101,109,117,46,100,105,115,107,46,101,106,101,99,116,0,0,83,116,111,112,65,108,101,114,116,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,65,108,101,114,116,0,0,0,86,82,101,109,111,118,101,0,116,101,114,109,46,114,101,108,101,97,115,101,0,0,0,0,70,105,110,100,68,73,116,101,109,0,0,0,0,0,0,0,70,53,0,0,0,0,0,0,68,105,115,112,111,115,68,105,97,108,111,103,0,0,0,0,94,94,0,0,0,0,0,0,118,101,114,98,111,115,101,0,97,0,0,0,0,0,0,0,91,105,110,100,101,120,93,0,67,108,111,115,101,68,105,97,108,111,103,0,0,0,0,0,60,101,111,102,62,0,0,0,105,110,115,101,114,116,101,100,0,0,0,0,0,0,0,0,68,114,97,119,68,105,97,108,111,103,0,0,0,0,0,0,115,97,118,101,0,0,0,0,68,105,97,108,111,103,83,101,108,101,99,116,0,0,0,0,37,45,56,115,32,37,115,44,32,37,115,44,32,37,115,0,97,117,116,111,0,0,0,0,97,115,112,101,99,116,95,121,0,0,0,0,0,0,0,0,115,105,122,101,107,0,0,0,37,115,58,32,98,97,100,32,100,114,105,118,101,32,110,117,109,98,101,114,32,40,37,117,41,10,0,0,0,0,0,0,73,115,68,105,97,108,111,103,69,118,101,110,116,0,0,0,116,121,112,101,0,0,0,0,37,115,58,32,109,105,115,115,105,110,103,32,111,112,116,105,111,110,32,97,114,103,117,109,101,110,116,32,40,45,37,99,41,10,0,0,0,0,0,0,105,100,101,110,116,105,102,105,101,114,32,116,111,111,32,108,111,110,103,0,0,0,0,0,120,0,0,0,0,0,0,0,83,101,108,73,84,101,120,116,0,0,0,0,0,0,0,0,82,79,76,46,87,0,0,0,110,111,0,0,0,0,0,0,116,100,48,58,32,122,101,114,111,32,100,97,116,97,32,108,101,110,103,116,104,32,40,37,117,47,37,117,47,37,117,41,10,0,0,0,0,0,0,0,78,101,119,68,105,97,108,111,103,0,0,0,0,0,0,0,37,117,47,37,117,47,37,117,10,0,0,0,0,0,0,0,71,101,116,78,101,119,68,105,97,108,111,103,0,0,0,0,46,105,109,103,0,0,0,0,73,110,105,116,68,105,97,108,111,103,115,0,0,0,0,0,86,73,110,115,116,97,108,108,0,0,0,0,0,0,0,0,46,116,99,0,0,0,0,0,115,101,114,99,111,110,0,0,121,109,117,108,0,0,0,0,70,114,101,101,68,105,97,108,111,103,0,0,0,0,0,0,115,116,100,105,111,0,0,0,100,105,115,107,32,37,117,58,32,119,114,105,116,105,110,103,32,98,97,99,107,32,102,97,105,108,101,100,10,0,0,0,67,111,117,108,100,68,105,97,108,111,103,0,0,0,0,0,83,101,116,32,116,104,101,32,116,101,114,109,105,110,97,108,32,100,101,118,105,99,101,0,67,97,112,115,76,111,99,107,0,0,0,0,0,0,0,0,98,99,0,0,0,0,0,0,85,112,100,116,68,105,97,108,111,103,0,0,0,0,0,0,108,111,99,107,101,100,0,0,87,97,105,116,77,111,117,115,101,85,112,0,0,0,0,0,71,101,116,75,101,121,115,0,114,117,110,32,119,105,116,104,32,98,114,101,97,107,112,111,105,110,116,115,32,97,116,32,97,100,100,114,0,0,0,0,37,45,56,115,32,37,115,44,32,37,115,0,0,0,0,0,84,105,99,107,67,111,117,110,116,0,0,0,0,0,0,0,66,117,116,116,111,110,0,0,66,70,84,83,84,0,0,0,83,116,105,108,108,68,111,119,110,0,0,0,0,0,0,0,71,101,116,77,111,117,115,101,0,0,0,0,0,0,0,0,69,118,101,110,116,65,118,97,105,108,0,0,0,0,0,0,70,108,117,115,104,69,118,101,110,116,115,0,0,0,0,0,71,101,116,78,101,120,116,69,118,101,110,116,0,0,0,0,69,110,113,117,101,117,101,0,82,101,116,117,114,110,0,0,116,101,114,109,105,110,97,108,0,0,0,0,0,0,0,0,68,101,113,117,101,117,101,0,115,105,110,103,108,101,95,115,105,100,101,100,0,0,0,0,68,114,97,119,49,67,111,110,116,114,111,108,0,0,0,0,70,105,110,100,67,111,110,116,114,111,108,0,0,0,0,0,37,45,56,115,32,37,115,0,99,0,0,0,0,0,0,0,115,112,0,0,0,0,0,0,83,101,116,67,116,108,65,99,116,105,111,110,0,0,0,0,71,101,116,67,116,108,65,99,116,105,111,110,0,0,0,0,66,70,69,88,84,85,0,0,68,114,97,119,67,111,110,116,114,111,108,115,0,0,0,0,84,114,97,99,107,67,111,110,116,114,111,108,0,0,0,0,68,114,97,103,67,111,110,116,114,111,108,0,0,0,0,0,54,56,48,49,48,0,0,0,71,101,116,79,83,69,118,101,110,116,0,0,0,0,0,0,84,101,115,116,67,111,110,116,114,111,108,0,0,0,0,0,83,101,116,77,97,120,67,116,108,0,0,0,0,0,0,0,93,0,0,0,0,0,0,0,83,101,116,32,116,104,101,32,67,80,85,32,115,112,101,101,100,0,0,0,0,0,0,0,83,101,116,77,105,110,67,116,108,0,0,0,0,0,0,0,102,105,108,101,0,0,0,0,83,101,116,67,116,108,86,97,108,117,101,0,0,0,0,0,71,101,116,77,97,120,67,116,108,0,0,0,0,0,0,0,91,97,100,100,114,46,46,93,0,0,0,0,0,0,0,0,71,101,116,77,105,110,67,116,108,0,0,0,0,0,0,0,71,101,116,67,116,108,86,97,108,117,101,0,0,0,0,0,66,70,67,72,71,0,0,0,83,101,116,67,84,105,116,108,101,0,0,0,0,0,0,0,71,101,116,67,84,105,116,108,101,0,0,0,0,0,0,0,72,105,108,105,116,101,67,111,110,116,114,111,108,0,0,0,79,83,69,118,101,110,116,65,118,97,105,108,0,0,0,0,83,105,122,101,67,111,110,116,114,111,108,0,0,0,0,0,83,101,116,67,82,101,102,67,111,110,0,0,0,0,0,0,71,101,116,67,82,101,102,67,111,110,0,0,0,0,0,0,82,105,103,104,116,66,114,97,99,107,101,116,0,0,0,0,105,110,116,0,0,0,0,0,105,119,109,58,32,115,97,118,105,110,103,32,100,114,105,118,101,32,37,117,32,102,97,105,108,101,100,32,40,112,114,105,41,10,0,0,0,0,0,0,77,111,118,101,67,111,110,116,114,111,108,0,0,0,0,0,72,105,100,101,67,111,110,116,114,111,108,0,0,0,0,0,100,105,115,107,0,0,0,0,83,104,111,119,67,111,110,116,114,111,108,0,0,0,0,0,75,105,108,108,67,111,110,116,114,111,108,115,0,0,0,0,66,70,69,88,84,83,0,0,68,105,115,112,111,115,67,111,110,116,114,111,108,0,0,0,78,101,119,67,111,110,116,114,111,108,0,0,0,0,0,0,85,112,100,116,67,111,110,116,114,111,108,0,0,0,0,0,80,111,115,116,69,118,101,110,116,0,0,0,0,0,0,0,65,37,117,0,0,0,0,0,68,101,108,77,101,110,117,73,116,101,109,0,0,0,0,0,73,110,115,101,114,116,82,101,115,77,101,110,117,0,0,0,91,0,0,0,0,0,0,0,115,112,101,101,100,0,0,0,67,111,117,110,116,77,73,116,101,109,115,0,0,0,0,0,98,108,111,99,107,95,99,111,117,110,116,0,0,0,0,0,68,101,108,116,97,80,111,105,110,116,0,0,0,0,0,0,80,105,110,82,101,99,116,0,97,100,100,114,61,48,120,37,48,54,108,120,10,0,0,0,65,100,100,82,101,115,77,101,110,117,0,0,0,0,0,0,70,108,97,115,104,77,101,110,117,66,97,114,0,0,0,0,66,70,67,76,82,0,0,0,80,108,111,116,73,99,111,110,0,0,0,0,0,0,0,0,83,101,116,77,70,108,97,115,104,0,0,0,0,0,0,0,71,101,116,77,72,97,110,100,108,101,0,0,0,0,0,0,66,108,111,99,107,77,111,118,101,0,0,0,0,0,0,0,67,97,108,99,77,101,110,117,83,105,122,101,0,0,0,0,83,101,116,73,116,101,109,0,76,101,102,116,66,114,97,99,107,101,116,0,0,0,0,0])
.concat([78,101,118,101,114,32,115,116,111,112,32,114,117,110,110,105,110,103,32,91,110,111,93,0,71,101,116,73,116,101,109,0,98,108,111,99,107,95,115,116,97,114,116,0,0,0,0,0,67,104,101,99,107,73,116,101,109,0,0,0,0,0,0,0,83,101,116,73,116,109,77,97,114,107,0,0,0,0,0,0,73,87,77,58,0,0,0,0,71,101,116,73,116,109,77,97,114,107,0,0,0,0,0,0,83,101,116,73,116,109,83,116,121,108,101,0,0,0,0,0,66,70,83,69,84,0,0,0,71,101,116,73,116,109,83,116,121,108,101,0,0,0,0,0,52,0,0,0,0,0,0,0,83,101,116,73,116,109,73,99,111,110,0,0,0,0,0,0,71,101,116,73,116,109,73,99,111,110,0,0,0,0,0,0,83,101,116,65,112,112,108,76,105,109,105,116,0,0,0,0,77,101,110,117,75,101,121,0,77,101,110,117,83,101,108,101,99,116,0,0,0,0,0,0,112,0,0,0,0,0,0,0,110,111,45,109,111,110,105,116,111,114,0,0,0,0,0,0,83,101,116,77,101,110,117,66,97,114,0,0,0,0,0,0,100,114,105,118,101,61,37,117,32,118,99,104,115,61,37,108,117,47,37,108,117,47,37,108,117,10,0,0,0,0,0,0,105,119,109,0,0,0,0,0,71,101,116,77,101,110,117,66,97,114,0,0,0,0,0,0,68,105,115,97,98,108,101,73,116,101,109,0,0,0,0,0,101,109,117,46,115,116,111,112,0,0,0,0,0,0,0,0,69,110,97,98,108,101,73,116,101,109,0,0,0,0,0,0,117,110,104,97,110,100,108,101,100,32,104,111,111,107,32,40,37,48,52,88,41,10,0,0,72,105,108,105,116,101,77,101,110,117,0,0,0,0,0,0,36,0,0,0,0,0,0,0,68,114,97,119,77,101,110,117,66,97,114,0,0,0,0,0,68,101,108,101,116,101,77,101,110,117,0,0,0,0,0,0,73,110,115,101,114,116,77,101,110,117,0,0,0,0,0,0,73,110,105,116,65,112,112,108,90,111,110,101,0,0,0,0,67,108,101,97,114,77,101,110,117,66,97,114,0,0,0,0,67,111,110,116,114,111,108,0,117,110,107,110,111,119,110,32,67,80,85,32,109,111,100,101,108,32,40,37,115,41,10,0,65,112,112,101,110,100,77,101,110,117,0,0,0,0,0,0,111,0,0,0,0,0,0,0,83,116,97,114,116,32,114,117,110,110,105,110,103,32,105,109,109,101,100,105,97,116,101,108,121,32,91,110,111,93,0,0,68,105,115,112,111,115,77,101,110,117,0,0,0,0,0,0,118,105,115,105,98,108,101,95,115,0,0,0,0,0,0,0,105,100,61,37,117,32,100,114,105,118,101,61,37,117,32,118,101,110,100,111,114,61,34,37,115,34,32,112,114,111,100,117,99,116,61,34,37,115,34,10,0,0,0,0,0,0,0,0,78,101,119,77,101,110,117,0,73,110,105,116,77,101,110,117,115,0,0,0,0,0,0,0,32,32,32,32,32,0,0,0,71,101,116,87,105,110,100,111,119,80,105,99,0,0,0,0,115,111,110,121,32,100,114,105,118,101,114,32,97,116,32,48,120,37,48,54,108,120,10,0,83,101,116,87,105,110,100,111,119,80,105,99,0,0,0,0,40,91,37,115,44,32,37,115,44,32,37,115,37,115,93,44,32,37,115,41,0,0,0,0,67,108,111,115,101,87,105,110,100,111,119,0,0,0,0,0,70,105,110,100,87,105,110,100,111,119,0,0,0,0,0,0,71,114,111,119,87,105,110,100,111,119,0,0,0,0,0,0,69,109,112,116,121,72,97,110,100,108,101,0,0,0,0,0,86,97,108,105,100,82,101,99,116,0,0,0,0,0,0,0,79,112,101,110,0,0,0,0,115,99,115,105,58,32,117,110,107,110,111,119,110,32,99,111,109,109,97,110,100,32,40,37,48,50,88,41,10,0,0,0,42,42,42,32,99,111,109,109,105,116,32,101,114,114,111,114,32,102,111,114,32,100,114,105,118,101,32,37,117,10,0,0,86,97,108,105,100,82,103,110,0,0,0,0,0,0,0,0,73,0,0,0,0,0,0,0,114,117,110,0,0,0,0,0,73,110,118,97,108,82,101,99,116,0,0,0,0,0,0,0,118,105,115,105,98,108,101,95,104,0,0,0,0,0,0,0,80,67,69,68,73,83,75,0,73,110,118,97,108,82,103,110,0,0,0,0,0,0,0,0,68,114,97,103,84,104,101,82,103,110,0,0,0,0,0,0,37,48,52,88,32,0,0,0,68,114,97,103,87,105,110,100,111,119,0,0,0,0,0,0,70,114,111,110,116,87,105,110,100,111,119,0,0,0,0,0,40,91,37,115,44,32,37,115,93,44,32,37,115,37,115,44,32,37,115,41,0,0,0,0,69,110,100,85,112,100,97,116,101,0,0,0,0,0,0,0,101,109,117,46,100,105,115,107,46,99,111,109,109,105,116,0,66,101,103,105,110,85,112,100,97,116,101,0,0,0,0,0,101,109,117,46,101,120,105,116,0,0,0,0,0,0,0,0,83,101,110,100,66,101,104,105,110,100,0,0,0,0,0,0,72,85,110,108,111,99,107,0,116,101,114,109,46,115,99,114,101,101,110,115,104,111,116,0,66,114,105,110,103,84,111,70,114,111,110,116,0,0,0,0,70,52,0,0,0,0,0,0,83,101,108,101,99,116,87,105,110,100,111,119,0,0,0,0,99,111,109,109,105,116,0,0,124,0,0,0,0,0,0,0,117,0,0,0,0,0,0,0,83,101,116,32,116,104,101,32,108,111,103,32,108,101,118,101,108,32,116,111,32,101,114,114,111,114,32,91,110,111,93,0,84,114,97,99,107,71,111,65,119,97,121,0,0,0,0,0,118,105,115,105,98,108,101,95,99,0,0,0,0,0,0,0,58,32,0,0,0,0,0,0,112,114,111,100,117,99,116,0,83,105,122,101,87,105,110,100,111,119,0,0,0,0,0,0,108,111,97,100,0,0,0,0,72,105,108,105,116,101,87,105,110,100,111,119,0,0,0,0,37,48,56,108,88,32,32,37,115,10,0,0,0,0,0,0,102,105,108,101,61,37,115,32,102,111,114,109,97,116,61,98,105,110,97,114,121,32,97,100,100,114,61,48,120,37,48,56,108,120,10,0,0,0,0,0,97,115,112,101,99,116,95,120,0,0,0,0,0,0,0,0,115,105,122,101,109,0,0,0,77,111,118,101,87,105,110,100,111,119,0,0,0,0,0,0,100,114,105,118,101,0,0,0,114,111,109,115,47,112,99,101,45,99,111,110,102,105,103,46,99,102,103,0,0,0,0,0,37,115,58,32,117,110,107,110,111,119,110,32,111,112,116,105,111,110,32,40,45,37,99,41,10,0,0,0,0,0,0,0,42,42,42,32,37,115,32,91,37,115,93,10,0,0,0,0,83,101,116,87,84,105,116,108,101,0,0,0,0,0,0,0,98,58,32,117,110,107,110,111,119,110,32,99,111,109,109,97,110,100,0,0,0,0,0,0,102,97,108,115,101,0,0,0,37,115,37,115,37,48,56,88,0,0,0,0,0,0,0,0,115,100,108,0,0,0,0,0,116,100,48,58,32,99,114,99,32,101,114,114,111,114,32,97,116,32,115,101,99,116,111,114,32,37,117,47,37,117,47,37,117,32,40,110,111,32,100,97,116,97,41,10,0,0,0,0,71,101,116,87,84,105,116,108,101,0,0,0,0,0,0,0,83,101,116,87,82,101,102,67,111,110,0,0,0,0,0,0,32,37,48,50,88,0,0,0,46,105,109,100,0,0,0,0,71,101,116,87,82,101,102,67,111,110,0,0,0,0,0,0,72,76,111,99,107,0,0,0,46,112,114,105,0,0,0,0,45,45,0,0,0,0,0,0,120,100,105,118,0,0,0,0,72,105,100,101,87,105,110,100,111,119,0,0,0,0,0,0,112,116,121,0,0,0,0,0,113,101,100,58,32,117,110,107,110,111,119,110,32,102,101,97,116,117,114,101,115,32,40,48,120,37,48,56,108,108,120,41,10,0,0,0,0,0,0,0,100,105,115,107,32,37,117,58,32,119,114,105,116,105,110,103,32,98,97,99,107,32,102,100,99,32,105,109,97,103,101,10,0,0,0,0,0,0,0,0,83,104,111,119,87,105,110,100,111,119,0,0,0,0,0,0,99,111,109,109,105,116,105,110,103,32,100,114,105,118,101,32,37,117,10,0,0,0,0,0,121,0,0,0,0,0,0,0,113,117,105,101,116,0,0,0,68,105,115,112,111,115,87,105,110,100,111,119,0,0,0,0,100,105,115,107,0,0,0,0,80,67,69,0,0,0,0,0,78,101,119,87,105,110,100,111,119,0,0,0,0,0,0,0,73,110,105,116,87,105,110,100,111,119,115,0,0,0,0,0,45,0,0,0,0,0,0,0,67,104,101,99,107,85,112,100,97,116,101,0,0,0,0,0,71,101,116,87,77,103,114,80,111,114,116,0,0,0,0,0,42,37,117,0,0,0,0,0,68,114,97,119,78,101,119,0,83,97,118,101,79,108,100,0,80,97,105,110,116,66,101,104,105,110,100,0,0,0,0,0,82,101,99,111,118,101,114,72,97,110,100,108,101,0,0,0,80,97,105,110,116,79,110,101,0,0,0,0,0,0,0,0,67,108,105,112,65,98,111,118,101,0,0,0,0,0,0,0,42,42,42,32,99,111,109,109,105,116,32,101,114,114,111,114,58,32,98,97,100,32,100,114,105,118,101,32,40,37,115,41,10,0,0,0,0,0,0,0,116,0,0,0,0,0,0,0,83,101,116,32,116,104,101,32,67,80,85,32,109,111,100,101,108,0,0,0,0,0,0,0,67,97,108,99,86,66,101,104,105,110,100,0,0,0,0,0,42,42,42,32,108,111,97,100,105,110,103,32,100,114,105,118,101,32,48,120,37,48,50,120,32,102,97,105,108,101,100,32,40,99,111,119,41,10,0,0,118,101,110,100,111,114,0,0,67,97,108,99,86,105,115,0,83,104,111,119,72,105,100,101,0,0,0,0,0,0,0,0,37,48,56,108,88,58,32,117,110,100,101,102,105,110,101,100,32,111,112,101,114,97,116,105,111,110,58,32,37,48,52,108,88,32,91,37,48,52,88,32,37,48,52,88,32,37,48,52,88,32,37,48,52,88,32,37,48,52,88,93,10,0,0,0,97,100,98,45,107,98,100,58,32,116,97,108,107,32,50,10,0,0,0,0,0,0,0,0,115,114,0,0,0,0,0,0,83,101,116,83,116,114,105,110,103,0,0,0,0,0,0,0,78,101,119,83,116,114,105,110,103,0,0,0,0,0,0,0,37,115,37,117,37,115,0,0,68,114,97,103,71,114,97,121,82,103,110,0,0,0,0,0,68,114,97,119,71,114,111,119,73,99,111,110,0,0,0,0,83,101,116,70,111,110,116,76,111,99,107,0,0,0,0,0,82,101,97,108,108,111,99,72,97,110,100,108,101,0,0,0,82,101,97,108,70,111,110,116,0,0,0,0,0,0,0,0,54,56,48,48,48,0,0,0,70,77,83,119,97,112,70,111,110,116,0,0,0,0,0,0,42,42,42,32,99,111,109,109,105,116,32,102,97,105,108,101,100,32,102,111,114,32,97,116,32,108,101,97,115,116,32,111,110,101,32,100,105,115,107,10,0,0,0,0,0,0,0,0,114,0,0,0,0,0,0,0,83,101,116,32,116,104,101,32,108,111,103,32,102,105,108,101,32,110,97,109,101,32,91,110,111,110,101,93,0,0,0,0,71,101,116,70,78,117,109,0,100,114,105,118,101,0,0,0,71,101,116,70,78,97,109,101,0,0,0,0,0,0,0,0,73,110,105,116,70,111,110,116,115,0,0,0,0,0,0,0,37,48,56,108,88,58,32,101,120,99,101,112,116,105,111,110,32,37,48,50,88,32,40,37,115,41,32,73,87,61,37,48,52,88,10,0,0,0,0,0,80,114,71,108,117,101,0,0,77,97,112,80,111,108,121,0,80,67,0,0,0,0,0,0,77,97,112,82,103,110,0,0,77,97,112,82,101,99,116,0,77,97,112,80,116,0,0,0,72,97,110,100,108,101,90,111,110,101,0,0,0,0,0,0,83,99,97,108,101,80,116,0,76,97,121,111,117,116,0,0,99,111,109,109,105,116,105,110,103,32,97,108,108,32,100,114,105,118,101,115,10,0,0,0,101,0,0,0,0,0,0,0,108,111,103,0,0,0,0,0,68,114,97,119,80,105,99,116,117,114,101,0,0,0,0,0,114,119,0,0,0,0,0,0,75,105,108,108,80,105,99,116,117,114,101,0,0,0,0,0,49,0,0,0,0,0,0,0,105,100,0,0,0,0,0,0,105,119,109,58,32,115,97,118,105,110,103,32,100,114,105,118,101,32,37,117,10,0,0,0,67,108,111,115,101,80,105,99,116,117,114,101,0,0,0,0,103,98,0,0,0,0,0,0,79,112,101,110,80,105,99,116,117,114,101,0,0,0,0,0,83,79,78,89,58,0,0,0,80,105,99,67,111,109,109,101,110,116,0,0,0,0,0,0,60,69,65,62,40,37,48,50,88,41,0,0,0,0,0,0,83,116,100,67,111,109,109,101,110,116,0,0,0,0,0,0,83,116,100,80,117,116,80,105,99,0,0,0,0,0,0,0,83,99,114,111,108,108,82,101,99,116,0,0,0,0,0,0,71,101,116,72,97,110,100,108,101,83,105,122,101,0,0,0,68,37,117,0,0,0,0,0,83,116,100,71,101,116,80,105,99,0,0,0,0,0,0,0,83,116,100,84,120,77,101,97,115,0,0,0,0,0,0,0,97,108,108,0,0,0,0,0,119,0,0,0,0,0,0,0,65,100,100,32,97,110,32,105,110,105,32,115,116,114,105,110,103,32,97,102,116,101,114,32,116,104,101,32,99,111,110,102,105,103,32,102,105,108,101,0,67,111,112,121,66,105,116,115,0,0,0,0,0,0,0,0,114,111,0,0,0,0,0,0,100,101,118,105,99,101,0,0,83,116,100,66,105,116,115,0,83,101,116,83,116,100,80,114,111,99,115,0,0,0,0,0,116,101,114,109,46,114,101,108,101,97,115,101,0,0,0,0,82,101,99,116,73,110,82,103,110,0,0,0,0,0,0,0,80,116,73,110,82,103,110,0,37,115,37,115,37,48,50,88,40,80,67,44,32,37,115,37,117,37,115,42,37,117,41,0,88,111,114,82,103,110,0,0,68,105,102,102,82,103,110,0,115,116,100,105,111,58,102,105,108,101,61,0,0,0,0,0,85,110,105,111,110,82,103,110,0,0,0,0,0,0,0,0,83,101,116,72,97,110,100,108,101,83,105,122,101,0,0,0,83,101,99,116,82,103,110,0,69,113,117,97,108,82,103,110,0,0,0,0,0,0,0,0,101,106,101,99,116,105,110,103,32,100,114,105,118,101,32,37,108,117,10,0,0,0,0,0,113,0,0,0,0,0,0,0,105,110,105,45,97,112,112,101,110,100,0,0,0,0,0,0,69,109,112,116,121,82,103,110,0,0,0,0,0,0,0,0,100,114,105,118,101,61,37,117,32,116,121,112,101,61,37,115,32,98,108,111,99,107,115,61,37,108,117,32,99,104,115,61,37,108,117,47,37,108,117,47,37,108,117,32,37,115,32,102,105,108,101,61,37,115,10,0,97,100,100,114,61,48,120,37,48,54,108,120,32,115,105,122,101,61,48,120,37,108,120,10,0,0,0,0,0,0,0,0,73,110,115,101,116,82,103,110,0,0,0,0,0,0,0,0,79,102,115,101,116,82,103,110,0,0,0,0,0,0,0,0,98,0,0,0,0,0,0,0,82,101,99,116,82,103,110,0,83,101,116,82,101,99,82,103,110,0,0,0,0,0,0,0,37,115,37,48,56,108,88,40,80,67,41,0,0,0,0,0,83,101,116,69,109,112,116,121,82,103,110,0,0,0,0,0,67,111,112,121,82,103,110,0,51,0,0,0,0,0,0,0,67,108,111,115,101,82,103,110,0,0,0,0,0,0,0,0,68,105,115,112,111,115,72,97,110,100,108,101,0,0,0,0,79,112,101,110,82,103,110,0,68,105,115,112,111,115,82,103,110,0,0,0,0,0,0,0,42,42,42,32,100,105,115,107,32,101,106,101,99,116,32,101,114,114,111,114,58,32,110,111,32,115,117,99,104,32,100,105,115,107,32,40,37,108,117,41,10,0,0,0,0,0,0,0,84,97,98,0,0,0,0,0,65,100,100,32,97,110,32,105,110,105,32,115,116,114,105,110,103,32,98,101,102,111,114,101,32,116,104,101,32,99,111,110,102,105,103,32,102,105,108,101,0,0,0,0,0,0,0,0,78,101,119,82,103,110,0,0,42,42,42,32,108,111,97,100,105,110,103,32,100,114,105,118,101,32,48,120,37,48,50,120,32,102,97,105,108,101,100,10,0,0,0,0,0,0,0,0,83,67,83,73,58,0,0,0,66,105,116,77,97,112,84,111,82,101,103,105,111,110,0,0,70,105,108,108,82,103,110,0,117,110,107,110,111,119,110,32,99,111,109,112,111,110,101,110,116,32,40,37,115,41,10,0,73,110,118,101,114,82,103,110,0,0,0,0,0,0,0,0,69,114,97,115,101,82,103,110,0,0,0,0,0,0,0,0,109,97,114,107,58,32,80,67,61,37,48,54,108,88,10,0,37,115,37,115,37,48,52,88,0,0,0,0,0,0,0,0,80,97,105,110,116,82,103,110,0,0,0,0,0,0,0,0,70,114,97,109,101,82,103,110,0,0,0,0,0,0,0,0,83,116,100,82,103,110,0,0,78,101,119,72,97,110,100,108,101,0,0,0,0,0,0,0,85,110,112,97,99,107,66,105,116,115,0,0,0,0,0,0,87,114,105,116,101,0,0,0,80,97,99,107,66,105,116,115,0,0,0,0,0,0,0,0,42,42,42,32,100,105,115,107,32,101,106,101,99,116,32,101,114,114,111,114,58,32,98,97,100,32,100,114,105,118,101,32,40,37,115,41,10,0,0,0,66,97,99,107,115,112,97,99,101,0,0,0,0,0,0,0,105,110,105,45,112,114,101,102,105,120,0,0,0,0,0,0,79,102,102,115,101,116,80,111,108,121,0,0,0,0,0,0,116,101,108,101,100,105,115,107,0,0,0,0,0,0,0,0,115,105,122,101,0,0,0,0,75,105,108,108,80,111,108,121,0,0,0,0,0,0,0,0,67,108,111,115,101,80,103,111,110,0,0,0,0,0,0,0,118,105,97,0,0,0,0,0,79,112,101,110,80,111,108,121,0,0,0,0,0,0,0,0,115,111,110,121,32,100,114,105,118,101,114,32,110,111,116,32,102,111,117,110,100,10,0,0,70,105,108,108,80,111,108,121,0,0,0,0,0,0,0,0,46,87,0,0,0,0,0,0,73,110,118,101,114,116,80,111,108,121,0,0,0,0,0,0,69,114,97,115,101,80,111,108,121,0,0,0,0,0,0,0,80,97,105,110,116,80,111,108,121,0,0,0,0,0,0,0,71,101,116,80,116,114,83,105,122,101,0,0,0,0,0,0,70,114,97,109,101,80,111,108,121,0,0,0,0,0,0,0,115,99,115,105,58,32,115,101,116,32,32,56,58,32,37,48,52,108,88,32,60,45,32,37,48,50,88,10,0,0,0,0,83,116,100,80,111,108,121,0,115,101,116,116,105,110,103,32,114,101,97,100,111,110,108,121,32,100,114,105,118,101,32,37,108,117,10,0,0,0,0,0,61,0,0,0,0,0,0,0,65,100,100,32,97,32,100,105,114,101,99,116,111,114,121,32,116,111,32,116,104,101,32,115,101,97,114,99,104,32,112,97,116,104,0,0,0,0,0,0,65,110,103,108,101,70,114,111,109,83,108,111,112,101,0,0,112,115,105,0,0,0,0,0,115,99,115,105,0,0,0,0,80,116,84,111,65,110,103,108,101,0,0,0,0,0,0,0,70,105,108,108,65,114,99,0,115,99,99,0,0,0,0,0,73,110,118,101,114,116,65,114,99,0,0,0,0,0,0,0,69,114,97,115,101,65,114,99,0,0,0,0,0,0,0,0,46,76,0,0,0,0,0,0,80,97,105,110,116,65,114,99,0,0,0,0,0,0,0,0,101,109,117,46,99,112,117,46,115,112,101,101,100,46,115,116,101,112,0,0,0,0,0,0,70,114,97,109,101,65,114,99,0,0,0,0,0,0,0,0,107,101,121,109,97,112,0,0,83,116,100,65,114,99,0,0,83,101,116,80,116,114,83,105,122,101,0,0,0,0,0,0,116,101,114,109,46,101,115,99,97,112,101,0,0,0,0,0,83,108,111,112,101,70,114,111,109,65,110,103,108,101,0,0,70,51,0,0,0,0,0,0,70,105,108,108,79,118,97,108,0,0,0,0,0,0,0,0,115,101,116,116,105,110,103,32,114,101,97,100,47,119,114,105,116,101,32,100,114,105,118,101,32,37,108,117,10,0,0,0,38,38,0,0,0,0,0,0,69,113,117,97,108,0,0,0,112,97,116,104,0,0,0,0,73,110,118,101,114,116,79,118,97,108,0,0,0,0,0,0,112,102,100,99,45,97,117,116,111,0,0,0,0,0,0,0,37,115,58,37,108,117,58,32,37,115,0,0,0,0,0,0,100,114,105,118,101,61,37,117,32,100,101,108,97,121,61,37,108,117,10,0,0,0,0,0,69,114,97,115,101,79,118,97,108,0,0,0,0,0,0,0,80,97,105,110,116,79,118,97,108,0,0,0,0,0,0,0,109,101,109,0,0,0,0,0,102,105,108,101,61,37,115,32,102,111,114,109,97,116,61,115,114,101,99,10,0,0,0,0,101,115,99,97,112,101,0,0,98,97,115,101,0,0,0,0,70,114,97,109,101,79,118,97,108,0,0,0,0,0,0,0,100,114,105,118,101,61,37,117,32,116,121,112,101,61,99,111,119,32,102,105,108,101,61,37,115,10,0,0,0,0,0,0,91,37,48,54,108,88,93,32,0,0,0,0,0,0,0,0,37,115,58,32,109,105,115,115,105,110,103,32,111,112,116,105,111,110,32,97,114,103,117,109,101,110,116,32,40,37,115,41,10,0,0,0,0,0,0,0,83,116,100,79,118,97,108,0,99,0,0,0,0,0,0,0,48,0,0,0,0,0,0,0,37,115,37,115,37,48,50,88,40,65,37,117,44,32,37,115,37,117,37,115,42,37,117,41,0,0,0,0,0,0,0,0,119,97,118,0,0,0,0,0,116,100,48,58,32,116,114,97,99,107,32,99,114,99,32,40,37,48,50,88,32,37,48,52,88,41,10,0,0,0,0,0,83,99,114,105,112,116,85,116,105,108,0,0,0,0,0,0,115,116,120,58,32,114,101,97,100,32,101,114,114,111,114,32,40,115,101,99,116,111,114,32,104,101,97,100,101,114,41,10,0,0,0,0,0,0,0,0,112,115,105,58,32,117,110,107,110,111,119,110,32,118,101,114,115,105,111,110,32,40,37,108,117,41,10,0,0,0,0,0,100,99,52,50,58,32,116,97,103,32,99,104,101,99,107,115,117,109,32,101,114,114,111,114,10,0,0,0,0,0,0,0,70,105,108,108,82,111,117,110,100,82,101,99,116,0,0,0,46,105,109,97,0,0,0,0,73,110,118,101,114,82,111,117,110,100,82,101,99,116,0,0,46,112,98,105,116,0,0,0,68,105,115,112,111,115,80,116,114,0,0,0,0,0,0,0,119,98,0,0,0,0,0,0,45,0,0,0,0,0,0,0,120,109,117,108,0,0,0,0,69,114,97,115,101,82,111,117,110,100,82,101,99,116,0,0,115,101,114,99,111,110,0,0,99,111,109,109,105,116,0,0,99,111,109,109,105,116,0,0,99,111,109,109,105,116,0,0,80,97,105,110,116,82,111,117,110,100,82,101,99,116,0,0,115,101,116,116,105,110,103,32,105,119,109,32,100,114,105,118,101,32,37,108,117,32,116,111,32,114,101,97,100,45,111,110,108,121,10,0,0,0,0,0,45,0,0,0,0,0,0,0,48,98,0,0,0,0,0,0,83,101,116,32,116,104,101,32,99,111,110,102,105,103,32,102,105,108,101,32,110,97,109,101,32,91,110,111,110,101,93,0,70,114,97,109,101,82,111,117,110,100,82,101,99,116,0,0,112,102,100,99,0,0,0,0,83,79,78,89,58,0,0,0,83,116,100,82,82,101,99,116,0,0,0,0,0,0,0,0,69,109,112,116,121,82,101,99,116,0,0,0,0,0,0,0,99,112,117,0,0,0,0,0,80,116,73,110,82,101,99,116,0,0,0,0,0,0,0,0,80,116,50,82,101,99,116,0,40,65,37,117,41,0,0,0,85,110,105,111,110,82,101,99,116,0,0,0,0,0,0,0,83,101,99,116,82,101,99,116,0,0,0,0,0,0,0,0,73,110,115,101,116,82,101,99,116,0,0,0,0,0,0,0,78,101,119,80,116,114,0,0,79,102,102,115,101,116,82,101,99,116,0,0,0,0,0,0,114,98,0,0,0,0,0,0,83,101,116,82,101,99,116,0,115,101,116,116,105,110,103,32,97,108,108,32,105,119,109,32,100,114,105,118,101,115,32,116,111,32,114,101,97,100,45,111,110,108,121,10,0,0,0,0,77,105,110,117,115,0,0,0,48,120,0,0,0,0,0,0,115,116,114,105,110,103,0,0,69,113,117,97,108,82,101,99,116,0,0,0,0,0,0,0,105,109,100,0,0,0,0,0,105,110,115,101,114,116,95,100,101,108,97,121,95,37,117,0,70,105,108,108,82,101,99,116,0,0,0,0,0,0,0,0,73,110,118,101,114,82,101,99,116,0,0,0,0,0,0,0,100,105,115,97,115,115,101,109,98,108,101,0,0,0,0,0,97,100,98,45,107,98,100,58,32,116,97,108,107,32,37,117,10,0,0,0,0,0,0,0,108,112,99,0,0,0,0,0,69,114,97,115,101,82,101,99,116,0,0,0,0,0,0,0,80,97,105,110,116,82,101,99,116,0,0,0,0,0,0,0,37,115,37,117,47,37,115,37,117,0,0,0,0,0,0,0,70,114,97,109,101,82,101,99,116,0,0,0,0,0,0,0,83,116,100,82,101,99,116,0,85,110,105,109,112,108,101,109,101,110,116,101,100,0,0,0,77,97,120,77,101,109,0,0,80,101,110,78,111,114,109,97,108,0,0,0,0,0,0,0,80,101,110,80,97,116,0,0,115,101,116,116,105,110,103,32,105,119,109,32,100,114,105,118,101,32,37,108,117,32,116,111,32,114,101,97,100,47,119,114,105,116,101,10,0,0,0,0,48,0,0,0,0,0,0,0,102,97,108,115,101,0,0,0,99,111,110,102,105,103,0,0,80,101,110,77,111,100,101,0,105,109,97,103,101,100,105,115,107,0,0,0,0,0,0,0,102,111,114,109,97,116,95,104,100,95,97,115,95,100,100,0,80,101,110,83,105,122,101,0,71,101,116,80,101,110,0,0,91,91,45,93,97,100,100,114,32,91,99,110,116,93,93,0,83,101,116,80,101,110,83,116,97,116,101,0,0,0,0,0,71,101,116,80,101,110,83,116,97,116,101,0,0,0,0,0,107,98,100,58,32,117,110,107,110,111,119,110,32,99,111,109,109,97,110,100,32,40,37,48,50,88,41,10,0,0,0,0,37,115,37,117,45,37,115,37,117,0,0,0,0,0,0,0,83,104,111,119,80,101,110,0,72,105,100,101,80,101,110,0,83,104,117,116,100,111,119,110,0,0,0,0,0,0,0,0,70,114,101,101,77,101,109,0,77,111,118,101,0,0,0,0,77,111,118,101,84,111,0,0,115,101,116,116,105,110,103,32,97,108,108,32,105,119,109,32,100,114,105,118,101,115,32,116,111,32,114,101,97,100,47,119,114,105,116,101,10,0,0,0,57,0,0,0,0,0,0,0,116,114,117,101,0,0,0,0,83,101,116,32,116,104,101,32,100,105,115,107,32,100,101,108,97,121,32,91,51,48,93,0,76,105,110,101,0,0,0,0,100,99,52,50,0,0,0,0,105,110,115,101,114,116,95,100,101,108,97,121,0,0,0,0,76,105,110,101,84,111,0,0,83,116,100,76,105,110,101,0,105,119,109,58,32,108,111,97,100,105,110,103,32,100,114,105,118,101,32,37,117,32,102,97,105,108,101,100,10,0,0,0,117,0,0,0,0,0,0,0,79,83,68,105,115,112,97,116,99,104,0,0,0,0,0,0,83,112,97,99,101,69,120,116,114,97,0,0,0,0,0,0,67,104,97,114,87,105,100,116,104,0,0,0,0,0,0,0,83,116,114,105,110,103,87,105,100,116,104,0,0,0,0,0,71,101,116,70,111,110,116,73,110,102,111,0,0,0,0,0,83,101,116,90,111,110,101,0,35,37,115,37,48,52,88,0,84,101,120,116,83,105,122,101,0,0,0,0,0,0,0,0,84,101,120,116,77,111,100,101,0,0,0,0,0,0,0,0,73,87,77,32,100,114,105,118,101,32,37,117,58,32,108,111,99,107,101,100,61,37,100,10,0,0,0,0,0,0,0,0,56,0,0,0,0,0,0,0,100,101,102,105,110,101,100,0,100,114,105,118,101,32,100,101,108,97,121,0,0,0,0,0,84,101,120,116,70,97,99,101,0,0,0,0,0,0,0,0,99,112,50,0,0,0,0,0,101,120,101,99,117,116,101,32,99,110,116,32,105,110,115,116,114,117,99,116,105,111,110,115,32,91,49,93,0,0,0,0,115,111,110,121,0,0,0,0,84,101,120,116,70,111,110,116,0,0,0,0,0,0,0,0,79,82,73,46,66,0,0,0,84,101,120,116,87,105,100,116,104,0,0,0,0,0,0,0,99,108,111,99,107,0,0,0,79,82,73,46,87,0,0,0,68,114,97,119,84,101,120,116,0,0,0,0,0,0,0,0,79,82,73,46,76,0,0,0,68,114,97,119,83,116,114,105,110,103,0,0,0,0,0,0,67,77,80,50,46,66,0,0,67,82,40,37,117,41,0,0,68,114,97,119,67,104,97,114,0,0,0,0,0,0,0,0,67,72,75,50,46,66,0,0,83,116,100,84,101,120,116,0,69,113,117,97,108,80,116,0,71,101,116,90,111,110,101,0,83,101,116,80,116,0,0,0,65,78,68,73,46,66,0,0,83,117,98,80,116,0,0,0,65,78,68,73,46,87,0,0,32,9,0,0,0,0,0,0,43,49,0,0,0,0,0,0,55,0,0,0,0,0,0,0,41,0,0,0,0,0,0,0,100,105,115,107,45,100,101,108,97,121,0,0,0,0,0,0,65,100,100,80,116,0,0,0,65,78,68,73,46,76,0,0,97,110,97,100,105,115,107,0,42,42,42,32,115,101,116,116,105,110,103,32,115,111,117,110,100,32,100,114,105,118,101,114,32,102,97,105,108,101,100,32,40,37,115,41,10,0,0,0,67,108,111,115,101,67,80,111,114,116,0,0,0,0,0,0,67,77,80,50,46,87,0,0,67,108,111,115,101,80,111,114,116,0,0,0,0,0,0,0,116,0,0,0,0,0,0,0,67,72,75,50,46,87,0,0,66,97,99,107,80,97,116,0,83,85,66,73,46,66,0,0,67,108,105,112,82,101,99,116,0,0,0,0,0,0,0,0,83,85,66,73,46,87,0,0,86,66,82,0,0,0,0,0,71,101,116,67,108,105,112,0,83,85,66,73,46,76,0,0,83,101,116,67,108,105,112,0,67,77,80,50,46,76,0,0,83,101,116,79,114,105,103,105,110,0,0,0,0,0,0,0,50,0,0,0,0,0,0,0,67,72,75,50,46,76,0,0,73,110,105,116,90,111,110,101,0,0,0,0,0,0,0,0,77,111,118,101,80,111,114,116,84,111,0,0,0,0,0,0,65,68,68,73,46,66,0,0,80,111,114,116,83,105,122,101,0,0,0,0,0,0,0,0,65,68,68,73,46,87,0,0,58,0,0,0,0,0,0,0,45,49,0,0,0,0,0,0,54,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,83,101,116,32,116,104,101,32,100,105,115,107,32,100,101,108,97,121,32,102,111,114,32,100,114,105,118,101,32,49,32,91,51,48,93,0,0,0,0,0,83,101,116,80,66,105,116,115,0,0,0,0,0,0,0,0,65,68,68,73,46,76,0,0,112,97,114,116,105,116,105,111,110,0,0,0,0,0,0,0,32,32,0,0,0,0,0,0,60,110,111,110,101,62,0,0,102,117,108,108,115,99,114,101,101,110,0,0,0,0,0,0,71,101,116,80,111,114,116,0,66,84,83,84,0,0,0,0,83,101,116,80,111,114,116,0,112,114,105,110,116,32,115,116,97,116,117,115,32,40,99,112,117,124,109,101,109,124,115,99,99,124,118,105,97,41,0,0,66,67,72,71,0,0,0,0,71,114,97,102,68,101,118,105,99,101,0,0,0,0,0,0,66,67,76,82,0,0,0,0,71,108,111,98,97,108,84,111,76,111,99,97,108,0,0,0,66,83,69,84,0,0,0,0,68,70,67,0,0,0,0,0,76,111,99,97,108,84,111,71,108,111,98,97,108,0,0,0,101,109,117,46,101,120,105,116,0,0,0,0,0,0,0,0,69,79,82,73,46,66,0,0,79,112,101,110,80,111,114,116,0,0,0,0,0,0,0,0,69,79,82,73,46,87,0,0,112,99,101,37,48,52,117,46,112,112,109,0,0,0,0,0,73,110,105,116,71,114,97,102,0,0,0,0,0,0,0,0,69,79,82,73,46,76,0,0,71,101,116,70,80,111,115,0,73,110,105,116,80,111,114,116,0,0,0,0,0,0,0,0,67,77,80,73,46,66,0,0,82,101,97,100,0,0,0,0,70,105,120,82,111,117,110,100,0,0,0,0,0,0,0,0,67,77,80,73,46,87,0,0,49,0,0,0,0,0,0,0,101,109,117,46,99,112,117,46,115,112,101,101,100,46,115,116,101,112,0,0,0,0,0,0,53,0,0,0,0,0,0,0,100,101,108,97,121,0,0,0,76,111,87,111,114,100,0,0,67,77,80,73,46,76,0,0,113,101,100,0,0,0,0,0,32,32,32,0,0,0,0,0,97,100,100,114,61,48,120,37,48,54,108,88,32,108,111,119,112,97,115,115,61,37,108,117,32,100,114,105,118,101,114,61,37,115,10,0,0,0,0,0,72,105,87,111,114,100,0,0,77,79,86,83,46,66,0,0,70,105,120,82,97,116,105,111,0,0,0,0,0,0,0,0,91,119,104,97,116,93,0,0,77,79,86,83,46,87,0,0,70,105,120,77,117,108,0,0,77,79,86,83,46,76,0,0,80,67,69,32,82,79,77,32,101,120,116,101,110,115,105,111,110,32,97,116,32,48,120,37,48,54,108,120,10,0,0,0,76,111,110,103,77,117,108,0,83,70,67,0,0,0,0,0,83,116,117,102,102,72,101,120,0,0,0,0,0,0,0,0,77,79,86,69,46,66,0,0,71,101,116,80,105,120,101,108,0,0,0,0,0,0,0,0,77,79,86,69,46,76,0,0,67,111,108,111,114,66,105,116,0,0,0,0,0,0,0,0,69,106,101,99,116,0,0,0,66,97,99,107,67,111,108,111,114,0,0,0,0,0,0,0,70,111,114,101,67,111,108,111,114,0,0,0,0,0,0,0,78,69,71,88,46,66,0,0,115,99,115,105,58,32,103,101,116,32,32,56,58,32,37,48,52,108,88,32,45,62,32,37,48,50,88,10,0,0,0,0,116,101,114,109,46,114,101,108,101,97,115,101,0,0,0,0,101,109,117,46,114,101,115,101,116,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,100,105,115,107,45,100,101,108,97,121,45,49,0,0,0,0,82,97,110,100,111,109,0,0,78,69,71,88,46,87,0,0,112,99,101,0,0,0,0,0,32,37,48,50,88,0,0,0,83,79,85,78,68,58,0,0,119,97,114,110,105,110,103,58,32,100,101,108,97,121,32,61,61,32,48,32,97,116,32,37,48,56,108,120,10,0,0,0,87,97,105,116,78,101,120,116,69,118,101,110,116,0,0,0,78,69,71,88,46,76,0,0,69,83,67,0,0,0,0,0,66,105,116,67,108,114,0,0,115,0,0,0,0,0,0,0,114,98,0,0,0,0,0,0,114,98,0,0,0,0,0,0,66,105,116,83,101,116,0,0,114,43,98,0,0,0,0,0,66,105,116,84,115,116,0,0,67,76,82,46,66,0,0,0,66,105,116,83,104,105,102,116,0,0,0,0,0,0,0,0,67,76,82,46,87,0,0,0,66,105,116,79,114,0,0,0,67,76,82,46,76,0,0,0,101,109,117,46,99,112,117,46,115,112,101,101,100,0,0,0,63,0,0,0,0,0,0,0,114,101,112,111,114,116,95,107,101,121,115,0,0,0,0,0,66,105,116,78,111,116,0,0,78,69,71,46,66,0,0,0,73,110,105,116,81,117,101,117,101,0,0,0,0,0,0,0,80,54,10,37,117,32,37,117,10,37,117,10,0,0,0,0,66,105,116,88,111,114,0,0,78,69,71,46,87,0,0,0,70,50,0,0,0,0,0,0,66,105,116,65,110,100,0,0,78,69,71,46,76,0,0,0,99,111,109,109,105,116,0,0,109,97,99,46,105,110,115,101,114,116,0,0,0,0,0,0,124,124,0,0,0,0,0,0,101,109,117,46,112,97,117,115,101,46,116,111,103,103,108,101,0,0,0,0,0,0,0,0,51,0,0,0,0,0,0,0,126,0,0,0,0,0,0,0,80,114,105,110,116,32,117,115,97,103,101,32,105,110,102,111,114,109,97,116,105,111,110,0,79,98,115,99,117,114,101,67,117,114,115,111,114,0,0,0,42,42,42,32,110,111,32,116,101,114,109,105,110,97,108,32,102,111,117,110,100,10,0,0,78,79,84,46,66,0,0,0,100,111,115,101,109,117,0,0,60,110,111,110,101,62,0,0,60,45,0,0,0,0,0,0,32,9,0,0,0,0,0,0,100,114,105,118,101,114,0,0,73,78,84,82,0,0,0,0,83,104,105,101,108,100,67,117,114,115,111,114,0,0,0,0,78,79,84,46,87,0,0,0,37,45,57,115,32,0,0,0,70,111,110,116,68,105,115,112,97,116,99,104,0,0,0,0,103,101,116,32,111,114,32,115,101,116,32,97,32,114,101,103,105,115,116,101,114,0,0,0,78,79,84,46,76,0,0,0,102,105,108,101,61,37,115,32,102,111,114,109,97,116,61,105,104,101,120,10,0,0,0,0,110,117,108,108,0,0,0,0,97,100,100,114,101,115,115,0,83,104,111,119,67,117,114,115,111,114,0,0,0,0,0,0,77,79,86,69,46,87,0,0,42,42,42,32,99,111,119,32,102,97,105,108,101,100,32,40,100,114,105,118,101,61,37,117,32,102,105,108,101,61,37,115,41,10,0,0,0,0,0,0,37,115,58,32,117,110,107,110,111,119,110,32,111,112,116,105,111,110,32,40,37,115,41,10,0,0,0,0,0,0,0,0,112,99,101,45,109,97,99,112,108,117,115,58,32,115,105,103,110,97,108,32,37,100,10,0,72,105,100,101,67,117,114,115,111,114,0,0,0,0,0,0,115,0,0,0,0,0,0,0,78,66,67,68,46,66,0,0,121,101,115,0,0,0,0,0,37,117,0,0,0,0,0,0,114,0,0,0,0,0,0,0,110,117,108,108,0,0,0,0,116,100,48,58,32,104,101,97,100,101,114,32,99,114,99,32,40,37,48,52,88,32,37,48,52,88,41,10,0,0,0,0,83,101,116,67,117,114,115,111,114,0,0,0,0,0,0,0,109,102,109,0,0,0,0,0,115,116,120,58,32,114,101,97,100,32,101,114,114,111,114,32,40,116,114,97,99,107,32,104,101,97,100,101,114,41,10,0,112,115,105,58,32,111,114,112,104,97,110,101,100,32,97,108,116,101,114,110,97,116,101,32,115,101,99,116,111,114,10,0,112,102,100,99,58,32,117,110,107,110,111,119,110,32,118,101,114,115,105,111,110,32,40,37,108,117,41,10,0,0,0,0,100,99,52,50,58,32,100,97,116,97,32,99,104,101,99,107,115,117,109,32,101,114,114,111,114,10,0,0,0,0,0,0,73,110,105,116,67,117,114,115,111,114,0,0,0,0,0,0,83,87,65,80,0,0,0,0,32,45,0,0,0,0,0,0,112,97,114,115,101,32,101,114,114,111,114,32,98,101,102,111,114,101,0,0,0,0,0,0,46,105,109,97,103,101,0,0,112,114,105,58,32,117,110,107,110,111,119,110,32,118,101,114,115,105,111,110,32,110,117,109,98,101,114,32,40,37,117,41,10,0,0,0,0,0,0,0,83,101,116,73,116,101,109,67,109,100,0,0,0,0,0,0,112,114,105,58,32,117,110,107,110,111,119,110,32,118,101,114,115,105,111,110,32,110,117,109,98,101,114,32,40,37,108,117,41,10,0,0,0,0,0,0,69,88,84,46,87,0,0,0,45,0,0,0,0,0,0,0,83,101,116,86,111,108,0,0,99,104,97,114,45,112,116,121,58,32,37,115,10,0,0,0,119,114,105,116,101,0,0,0,109,115,121,115,0,0,0,0,71,101,116,73,116,101,109,67,109,100,0,0,0,0,0,0,112,111,115,105,120,0,0,0,69,88,84,46,76,0,0,0,119,98,0,0,0,0,0,0,114,43,98,0,0,0,0,0,70,105,120,68,105,118,0,0,69,88,84,66,46,76,0,0,114,0,0,0,0,0,0,0,101,109,117,46,118,105,100,101,111,46,98,114,105,103,104,116,110,101,115,115,0,0,0,0,101,109,117,46,115,116,111,112,0,0,0,0,0,0,0,0,50,0,0,0,0,0,0,0,37,0,0,0,0,0,0,0,104,101,108,112,0,0,0,0,85,115,101,114,68,101,108,97,121,0,0,0,0,0,0,0,42,42,42,32,117,110,107,110,111,119,110,32,116,101,114,109,105,110,97,108,32,100,114,105,118,101,114,58,32,37,115,10,0,0,0,0,0,0,0,0,84,83,84,46,66,0,0,0,105,109,97,103,101,0,0,0,116,114,117,101,0,0,0,0,45,62,0,0,0,0,0,0,108,111,119,112,97,115,115,0,84,82,65,80,0,0,0,0,70,114,97,99,68,105,118,0,84,83,84,46,87,0,0,0,70,114,97,99,77,117,108,0,114,101,103,32,91,118,97,108,93,0,0,0,0,0,0,0,84,83,84,46,76,0,0,0,70,114,97,99,83,113,114,116,0,0,0,0,0,0,0,0,70,114,97,99,83,105,110,0,68,37,117,58,68,37,117,0,70,114,97,99,67,111,115,0,77,85,76,85,46,76,0,0,88,50,70,114,97,99,0,0,68,73,86,85,46,76,0,0,70,114,97,99,50,88,0,0,71,101,116,86,111,108,0,0,88,50,70,105,120,0,0,0,70,105,120,50,88,0,0,0,101,109,117,46,115,116,111,112,0,0,0,0,0,0,0,0,116,101,114,109,46,103,114,97,98,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,47,0,0,0,0,0,0,0,117,115,97,103,101,58,32,112,99,101,45,109,97,99,112,108,117,115,32,91,111,112,116,105,111,110,115,93,0,0,0,0,70,114,97,99,50,70,105,120,0,0,0,0,0,0,0,0,42,42,42,32,115,101,116,116,105,110,103,32,117,112,32,110,117,108,108,32,116,101,114,109,105,110,97,108,32,102,97,105,108,101,100,10,0,0,0,0,77,79,86,69,0,0,0,0,114,97,109,0,0,0,0,0,37,115,32,37,48,50,88,0,115,111,117,110,100,0,0,0,65,86,69,67,0,0,0,0,70,105,120,50,70,114,97,99,0,0,0,0,0,0,0,0,85,78,76,75,0,0,0,0,70,105,120,50,76,111,110,103,0,0,0,0,0,0,0,0,114,0,0,0,0,0,0,0,97,100,98,45,107,98,100,58,32,108,105,115,116,101,110,32,37,117,10,0,0,0,0,0,76,73,78,75,0,0,0,0,97,0,0,0,0,0,0,0,112,99,0,0,0,0,0,0,76,111,110,103,50,70,105,120,0,0,0,0,0,0,0,0,84,82,65,80,0,0,0,0,84,69,83,116,121,108,101,78,101,119,0,0,0,0,0,0,77,79,86,69,67,0,0,0,114,98,0,0,0,0,0,0,85,83,80,0,0,0,0,0,84,69,68,105,115,112,97,116,99,104,0,0,0,0,0,0,84,69,71,101,116,79,102,102,115,101,116,0,0,0,0,0,84,82,65,80,86,0,0,0,116,101,114,109,105,110,97,108,0,0,0,0,0,0,0,0,84,114,97,99,107,66,111,120,0,0,0,0,0,0,0,0,70,108,117,115,104,86,111,108,0,0,0,0,0,0,0,0,90,111,111,109,87,105,110,100,111,119,0,0,0,0,0,0,114,97,109,0,0,0,0,0,83,101,101,100,70,105,108,108,0,0,0,0,0,0,0,0,101,109,117,46,115,101,114,112,111,114,116,46,102,105,108,101,0,0,0,0,0,0,0,0,67,97,108,99,77,97,115,107,0,0,0,0,0,0,0,0,116,101,114,109,46,102,117,108,108,115,99,114,101,101,110,46,116,111,103,103,108,101,0,0,96,0,0,0,0,0,0,0,42,0,0,0,0,0,0,0,112,99,101,45,109,97,99,112])
.concat([108,117,115,58,32,77,97,99,105,110,116,111,115,104,32,80,108,117,115,32,101,109,117,108,97,116,111,114,0,0,0,0,112,99,101,45,109,97,99,112,108,117,115,0,0,0,0,0,42,42,42,32,115,101,116,116,105,110,103,32,117,112,32,115,100,108,32,116,101,114,109,105,110,97,108,32,102,97,105,108,101,100,10,0,0,0,0,0,83,84,79,80,0,0,0,0,114,98,0,0,0,0,0,0,45,45,32,37,115,61,37,100,10,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,70,82,77,84,0,0,0,0,77,101,97,115,117,114,101,84,101,120,116,0,0,0,0,0,71,101,116,77,97,115,107,84,97,98,108,101,0,0,0,0,101,120,101,99,117,116,101,32,116,111,32,110,101,120,116,32,114,116,101,0,0,0,0,0,82,69,83,69,84,0,0,0,70,111,110,116,77,101,116,114,105,99,115,0,0,0,0,0,83,101,116,70,83,99,97,108,101,68,105,115,97,98,108,101,0,0,0,0,0,0,0,0,65,68,68,81,46,66,0,0,99,111,119,0,0,0,0,0,83,82,0,0,0,0,0,0,83,99,114,110,66,105,116,77,97,112,0,0,0,0,0,0,60,110,111,110,101,62,0,0,65,68,68,81,46,87,0,0,37,115,10,10,0,0,0,0,80,97,99,107,49,53,0,0,65,68,68,81,46,76,0,0,80,97,99,107,49,52,0,0,73,87,77,58,32,68,37,117,32,84,114,97,99,107,32,37,117,32,32,32,32,13,0,0,84,82,65,80,76,69,0,0,80,97,99,107,49,51,0,0,83,101,116,69,79,70,0,0,112,99,101,45,109,97,99,112,108,117,115,58,32,115,101,103,109,101,110,116,97,116,105,111,110,32,102,97,117,108,116,10,0,0,0,0,0,0,0,0,84,82,65,80,71,84,0,0,80,97,99,107,49,50,0,0,84,82,65,80,76,84,0,0,101,109,117,46,115,101,114,112,111,114,116,46,100,114,105,118,101,114,0,0,0,0,0,0,56,0,0,0,0,0,0,0,66,97,99,107,113,117,111,116,101,0,0,0,0,0,0,0,37,108,117,0,0,0,0,0,101,108,115,101,0,0,0,0,112,99,101,45,109,97,99,112,108,117,115,32,118,101,114,115,105,111,110,32,50,48,49,52,48,49,48,55,45,99,52,97,100,48,97,49,10,10,67,111,112,121,114,105,103,104,116,32,40,67,41,32,50,48,48,55,45,50,48,49,50,32,72,97,109,112,97,32,72,117,103,32,60,104,97,109,112,97,64,104,97,109,112,97,46,99,104,62,10,0,0,0,0,0,0,0,80,97,99,107,49,49,0,0,115,100,108,0,0,0,0,0,84,82,65,80,71,69,0,0,102,105,108,101,0,0,0,0,82,73,0,0,0,0,0,0,116,101,114,109,46,114,101,108,101,97,115,101,0,0,0,0,70,88,88,88,0,0,0,0,80,97,99,107,49,48,0,0,84,82,65,80,77,73,0,0,80,97,99,107,57,0,0,0,114,116,101,0,0,0,0,0,84,82,65,80,80,76,0,0,67,111,109,112,111,110,101,110,116,68,105,115,112,97,116,99,104,0,0,0,0,0,0,0,37,52,117,32,32,0,0,0,105,119,109,58,32,108,111,97,100,105,110,103,32,100,114,105,118,101,32,37,117,32,40,100,105,115,107,41,10,0,0,0,84,82,65,80,86,83,0,0,49,0,0,0,0,0,0,0,76,97,121,101,114,68,105,115,112,97,116,99,104,0,0,0,84,82,65,80,86,67,0,0,119,97,118,0,0,0,0,0,83,104,111,119,68,73,116,101,109,0,0,0,0,0,0,0,84,82,65,80,69,81,0,0,115,110,100,45,115,100,108,58,32,101,114,114,111,114,32,105,110,105,116,105,97,108,105,122,105,110,103,32,97,117,100,105,111,32,115,117,98,115,121,115,116,101,109,32,40,37,115,41,10,0,0,0,0,0,0,0,72,105,100,101,68,73,116,101,109,0,0,0,0,0,0,0,84,82,65,80,78,69,0,0,119,97,118,102,105,108,116,101,114,0,0,0,0,0,0,0,73,110,115,77,101,110,117,73,116,101,109,0,0,0,0,0,84,82,65,80,67,83,0,0,71,101,116,69,79,70,0,0,66,70,73,78,83,0,0,0,65,108,105,97,115,68,105,115,112,97,116,99,104,0,0,0,84,82,65,80,67,67,0,0,82,101,115,111,117,114,99,101,68,105,115,112,97,116,99,104,0,0,0,0,0,0,0,0,84,82,65,80,76,83,0,0,101,109,117,46,114,101,115,101,116,0,0,0,0,0,0,0,112,99,101,0,0,0,0,0,55,0,0,0,0,0,0,0,80,97,117,115,101,0,0,0,45,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,112,99,101,45,109,97,99,112,108,117,115,32,118,101,114,115,105,111,110,32,50,48,49,52,48,49,48,55,45,99,52,97,100,48,97,49,10,67,111,112,121,114,105,103,104,116,32,40,67,41,32,50,48,48,55,45,50,48,49,50,32,72,97,109,112,97,32,72,117,103,32,60,104,97,109,112,97,64,104,97,109,112,97,46,99,104,62,10,0,0,0,0,0,0,0,0,77,97,120,83,105,122,101,82,115,114,99,0,0,0,0,0,42,42,42,32,116,101,114,109,105,110,97,108,32,100,114,105,118,101,114,32,39,120,49,49,39,32,110,111,116,32,115,117,112,112,111,114,116,101,100,10,0,0,0,0,0,0,0,0,84,82,65,80,72,73,0,0,111,112,116,105,111,110,97,108,0,0,0,0,0,0,0,0,67,68,0,0,0,0,0,0,97,100,100,114,61,48,120,37,48,54,108,88,32,119,61,37,117,32,104,61,37,117,32,98,114,105,103,104,116,61,37,117,37,37,10,0,0,0,0,0,65,88,88,88,0,0,0,0,71,101,116,49,78,97,109,101,100,82,101,115,111,117,114,99,101,0,0,0,0,0,0,0,84,82,65,80,70,0,0,0,71,101,116,49,82,101,115,111,117,114,99,101,0,0,0,0,114,101,115,101,116,0,0,0,84,82,65,80,84,0,0,0,116,99,58,32,117,110,107,110,111,119,110,32,109,97,114,107,32,48,120,37,48,50,120,32,40,37,115,44,32,99,61,37,117,44,32,104,61,37,117,44,32,98,105,116,61,37,108,117,47,37,108,117,41,10,0,0,73,110,118,97,108,77,101,110,117,66,97,114,0,0,0,0,68,66,76,69,0,0,0,0,67,111,117,110,116,49,84,121,112,101,115,0,0,0,0,0,68,66,71,84,0,0,0,0,37,115,37,48,56,108,88,0,72,67,114,101,97,116,101,82,101,115,70,105,108,101,0,0,68,66,76,84,0,0,0,0,72,79,112,101,110,82,101,115,70,105,108,101,0,0,0,0,68,66,71,69,0,0,0,0,112,102,100,99,58,32,99,114,99,32,101,114,114,111,114,10,0,0,0,0,0,0,0,0,88,77,117,110,103,101,114,0,68,66,77,73,0,0,0,0,112,102,100,99,58,32,119,97,114,110,105,110,103,58,32,108,111,97,100,105,110,103,32,100,101,112,114,101,99,97,116,101,100,32,118,101,114,115,105,111,110,32,50,32,102,105,108,101,10,0,0,0,0,0,0,0,65,108,108,111,99,97,116,101,0,0,0,0,0,0,0,0,112,102,100,99,58,32,119,97,114,110,105,110,103,58,32,108,111,97,100,105,110,103,32,100,101,112,114,101,99,97,116,101,100,32,118,101,114,115,105,111,110,32,49,32,102,105,108,101,10,0,0,0,0,0,0,0,70,105,120,65,116,97,110,50,0,0,0,0,0,0,0,0,115,111,110,121,58,32,114,101,97,100,32,101,114,114,111,114,32,97,116,32,37,117,47,37,117,47,37,117,10,0,0,0,112,102,100,99,58,32,119,97,114,110,105,110,103,58,32,108,111,97,100,105,110,103,32,100,101,112,114,101,99,97,116,101,100,32,118,101,114,115,105,111,110,32,48,32,102,105,108,101,10,0,0,0,0,0,0,0,68,66,80,76,0,0,0,0,115,99,115,105,58,32,109,111,100,101,32,115,101,110,115,101,58,32,117,110,107,110,111,119,110,32,109,111,100,101,32,112,97,103,101,32,40,37,48,50,88,41,10,0,0,0,0,0,67,111,112,121,77,97,115,107,0,0,0,0,0,0,0,0,68,66,86,83,0,0,0,0,101,109,117,46,114,101,97,108,116,105,109,101,46,116,111,103,103,108,101,0,0,0,0,0,116,101,114,109,46,102,117,108,108,115,99,114,101,101,110,0,54,0,0,0,0,0,0,0,83,99,114,76,107,0,0,0,43,0,0,0,0,0,0,0,99,97,110,39,116,32,111,112,101,110,32,105,110,99,108,117,100,101,32,102,105,108,101,58,0,0,0,0,0,0,0,0,42,42,42,32,108,111,97,100,105,110,103,32,99,111,110,102,105,103,32,102,105,108,101,32,102,97,105,108,101,100,10,0,80,97,99,107,56,0,0,0,42,42,42,32,108,111,97,100,105,110,103,32,102,97,105,108,101,100,32,40,37,115,41,10,0,0,0,0,0,0,0,0,120,49,49,0,0,0,0,0,68,66,86,67,0,0,0,0,114,101,97,100,111,110,108,121,0,0,0,0,0,0,0,0,119,98,0,0,0,0,0,0,68,83,82,0,0,0,0,0,101,120,101,99,117,116,101,32,99,110,116,32,105,110,115,116,114,117,99,116,105,111,110,115,44,32,115,107,105,112,32,99,97,108,108,115,32,91,49,93,0,0,0,0,0,0,0,0,86,73,68,69,79,58,0,0,84,82,65,67,69,0,0,0,83,67,83,73,68,105,115,112,97,116,99,104,0,0,0,0,68,66,69,81,0,0,0,0,83,101,116,70,114,97,99,116,69,110,97,98,108,101,0,0,91,99,110,116,93,0,0,0,68,66,78,69,0,0,0,0,99,112,50,58,32,37,117,47,37,117,47,37,117,58,32,115,101,99,116,111,114,32,100,97,116,97,32,116,111,111,32,98,105,103,32,40,37,117,41,10,0,0,0,0,0,0,0,0,84,69,65,117,116,111,86,105,101,119,0,0,0,0,0,0,68,66,67,83,0,0,0,0,84,69,80,105,110,83,99,114,111,108,108,0,0,0,0,0,68,66,67,67,0,0,0,0,35,37,115,37,88,0,0,0,84,69,83,101,108,86,105,101,119,0,0,0,0,0,0,0,68,66,76,83,0,0,0,0,85,110,105,113,117,101,49,73,68,0,0,0,0,0,0,0,68,66,72,73,0,0,0,0,71,101,116,49,73,120,84,121,112,101,0,0,0,0,0,0,68,66,70,0,0,0,0,0,71,101,116,49,73,120,82,101,115,111,117,114,99,101,0,0,77,111,117,110,116,86,111,108,0,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,115,111,110,121,58,32,114,101,97,100,32,101,114,114,111,114,10,0,0,0,0,0,0,0,68,66,84,0,0,0,0,0,65,80,80,76,69,32,67,79,77,80,85,84,69,82,44,32,73,78,67,0,0,0,0,0,67,111,117,110,116,49,82,101,115,111,117,114,99,101,115,0,83,76,69,0,0,0,0,0,101,109,117,46,114,101,97,108,116,105,109,101,0,0,0,0,116,101,114,109,46,102,117,108,108,115,99,114,101,101,110,46,116,111,103,103,108,101,0,0,53,0,0,0,0,0,0,0,83,99,114,111,108,108,76,111,99,107,0,0,0,0,0,0,62,62,0,0,0,0,0,0,63,0,0,0,0,0,0,0,102,105,108,101,61,34,37,115,34,10,0,0,0,0,0,0,82,71,101,116,82,101,115,111,117,114,99,101,0,0,0,0,98,97,115,101,0,0,0,0,69,83,67,0,0,0,0,0,42,42,42,32,108,111,97,100,105,110,103,32,114,111,109,32,102,97,105,108,101,100,32,40,37,115,41,10,0,0,0,0,115,105,122,101,103,0,0,0,83,71,84,0,0,0,0,0,114,98,0,0,0,0,0,0,82,84,83,0,0,0,0,0,46,97,110,97,0,0,0,0,98,114,105,103,104,116,110,101,115,115,0,0,0,0,0,0,80,82,73,86,0,0,0,0,80,111,112,85,112,77,101,110,117,83,101,108,101,99,116,0,83,76,84,0,0,0,0,0,71,101,116,87,86,97,114,105,97,110,116,0,0,0,0,0,112,0,0,0,0,0,0,0,83,71,69,0,0,0,0,0,71,101,116,67,86,97,114,105,97,110,116,0,0,0,0,0,83,77,73,0,0,0,0,0,73,110,105,116,80,114,111,99,77,101,110,117,0,0,0,0,83,80,76,0,0,0,0,0,35,37,115,37,48,56,108,88,0,0,0,0,0,0,0,0,83,110,100,78,101,119,67,104,97,110,110,101,108,0,0,0,83,86,83,0,0,0,0,0,83,110,100,67,111,110,116,114,111,108,0,0,0,0,0,0,114,98,0,0,0,0,0,0,103,99,114,58,32,100,97,116,97,32,99,114,99,32,101,114,114,111,114,32,40,37,117,47,37,117,47,37,117,41,10,0,49,0,0,0,0,0,0,0,83,86,67,0,0,0,0,0,102,105,108,101,0,0,0,0,69,120,116,114,97,49,54,0,83,110,100,80,108,97,121,0,115,121,109,108,105,110,107,0,83,69,81,0,0,0,0,0,85,110,109,111,117,110,116,86,111,108,0,0,0,0,0,0,69,120,116,114,97,49,53,0,102,105,108,101,0,0,0,0,83,110,100,68,111,73,109,109,101,100,105,97,116,101,0,0,115,111,110,121,58,32,110,111,110,45,97,108,105,103,110,101,100,32,114,101,97,100,10,0,83,78,69,0,0,0,0,0,67,108,111,115,101,0,0,0,115,99,115,105,58,32,115,116,97,114,116,47,115,116,111,112,32,117,110,105,116,32,37,117,32,40,37,115,41,10,0,0,69,120,116,114,97,49,52,0,112,114,111,116,111,99,111,108,0,0,0,0,0,0,0,0,83,110,100,68,111,67,111,109,109,97,110,100,0,0,0,0,83,67,83,0,0,0,0,0,101,109,117,46,112,97,117,115,101,46,116,111,103,103,108,101,0,0,0,0,0,0,0,0,116,101,114,109,46,115,101,116,95,98,111,114,100,101,114,95,121,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,80,114,116,83,99,110,0,0,60,60,0,0,0,0,0,0,69,120,116,114,97,49,51,0,105,110,99,108,117,100,101,0,83,110,100,65,100,100,77,111,100,105,102,105,101,114,0,0,97,100,100,114,101,115,115,0,67,79,78,70,73,71,58,0,100,114,105,118,101,114,61,37,115,32,69,83,67,61,37,115,32,97,115,112,101,99,116,61,37,117,47,37,117,32,109,105,110,95,115,105,122,101,61,37,117,42,37,117,32,115,99,97,108,101,61,37,117,32,109,111,117,115,101,61,91,37,117,47,37,117,32,37,117,47,37,117,93,10,0,0,0,0,0,0,82,79,77,58,0,0,0,0,115,105,122,101,109,0,0,0,83,67,67,0,0,0,0,0,46,120,100,102,0,0,0,0,68,84,82,0,0,0,0,0,69,120,116,114,97,49,50,0,99,111,108,111,114,49,0,0,79,70,76,87,0,0,0,0,83,110,100,68,105,115,112,111,115,101,67,104,97,110,110,101,108,0,0,0,0,0,0,0,83,76,83,0,0,0,0,0,69,120,116,114,97,49,49,0,83,111,117,110,100,68,105,115,112,97,116,99,104,0,0,0,115,101,116,32,104,97,108,116,32,115,116,97,116,101,32,91,50,93,0,0,0,0,0,0,83,72,73,0,0,0,0,0,69,120,116,114,97,49,48,0,109,111,117,115,101,0,0,0,72,87,80,114,105,118,0,0,83,70,0,0,0,0,0,0,114,98,0,0,0,0,0,0,69,120,116,114,97,57,0,0,80,67,69,32,82,79,77,32,101,120,116,101,110,115,105,111,110,32,110,111,116,32,102,111,117,110,100,10,0,0,0,0,69,103,114,101,116,68,105,115,112,97,116,99,104,0,0,0,83,84,0,0,0,0,0,0,114,98,0,0,0,0,0,0,35,37,115,37,48,50,88,0,69,120,116,114,97,56,0,0,114,98,0,0,0,0,0,0,84,114,97,110,115,108,97,116,101,50,52,116,111,51,50,0,83,85,66,81,46,66,0,0,69,120,116,114,97,55,0,0,68,79,83,69,77,85,0,0,83,121,115,69,110,118,105,114,111,110,115,0,0,0,0,0,83,85,66,81,46,87,0,0,69,120,116,114,97,54,0,0,68,101,102,101,114,85,115,101,114,70,110,0,0,0,0,0,83,85,66,81,46,76,0,0,83,101,116,70,105,108,101,73,110,102,111,0,0,0,0,0,69,120,116,114,97,53,0,0,68,101,98,117,103,85,116,105,108,0,0,0,0,0,0,0,115,111,110,121,58,32,119,114,105,116,101,32,101,114,114,111,114,10,0,0,0,0,0,0,66,76,69,0,0,0,0,0,108,111,97,100,32,109,101,100,105,97,0,0,0,0,0,0,69,120,116,114,97,52,0,0,67,111,109,109,84,111,111,108,98,111,120,68,105,115,112,97,116,99,104,0,0,0,0,0,66,71,84,0,0,0,0,0,80,67,69,68,73,83,75,32,32,32,32,32,32,32,32,32,0,0,0,0,0,0,0,0,101,109,117,46,112,97,117,115,101,0,0,0,0,0,0,0,99,111,109,109,105,116,0,0,116,101,114,109,46,115,101,116,95,98,111,114,100,101,114,95,120,0,0,0,0,0,0,0,51,0,0,0,0,0,0,0,80,114,105,110,116,83,99,114,101,101,110,0,0,0,0,0,62,0,0,0,0,0,0,0,69,120,116,114,97,51,0,0,105,102,0,0,0,0,0,0,121,0,0,0,0,0,0,0,83,108,101,101,112,0,0,0,102,105,108,101,0,0,0,0,84,69,82,77,58,0,0,0,114,111,109,0,0,0,0,0,115,105,122,101,107,0,0,0,66,76,84,0,0,0,0,0,46,116,100,48,0,0,0,0,67,84,83,0,0,0,0,0,69,120,116,114,97,50,0,0,99,111,108,111,114,48,0,0,67,72,75,0,0,0,0,0,73,79,80,77,111,118,101,68,97,116,97,0,0,0,0,0,66,71,69,0,0,0,0,0,114,98,0,0,0,0,0,0,69,120,116,114,97,49,0,0,73,79,80,77,115,103,82,101,113,117,101,115,116,0,0,0,91,118,97,108,93,0,0,0,66,77,73,0,0,0,0,0,82,105,103,104,116,0,0,0,73,79,80,73,110,102,111,65,99,99,101,115,115,0,0,0,66,80,76,0,0,0,0,0,68,111,119,110,0,0,0,0,80,77,103,114,79,112,0,0,66,86,83,0,0,0,0,0,76,101,102,116,0,0,0,0,71,101,116,79,83,68,101,102,97,117,108,116,0,0,0,0,66,86,67,0,0,0,0,0,85,112,0,0,0,0,0,0,83,101,116,79,83,68,101,102,97,117,108,116,0,0,0,0,66,69,81,0,0,0,0,0,101,109,117,46,99,112,117,46,109,111,100,101,108,0,0,0,80,97,103,101,68,111,119,110,0,0,0,0,0,0,0,0,66,76,75,32,37,48,52,88,58,32,65,49,61,37,48,56,108,88,32,65,50,61,37,48,56,108,88,32,83,61,37,48,56,108,88,32,82,79,61,37,100,10,0,0,0,0,0,0,98,111,114,100,101,114,0,0,68,84,73,110,115,116,97,108,108,0,0,0,0,0,0,0,66,78,69,0,0,0,0,0,119,98,0,0,0,0,0,0,71,101,116,70,105,108,101,73,110,102,111,0,0,0,0,0,69,110,100,0,0,0,0,0,83,101,116,86,105,100,101,111,68,101,102,97,117,108,116,0,115,111,110,121,58,32,110,111,110,45,97,108,105,103,110,101,100,32,119,114,105,116,101,10,0,0,0,0,0,0,0,0,66,67,83,0,0,0,0,0,101,106,101,99,116,32,109,101,100,105,97,0,0,0,0,0,68,101,108,101,116,101,0,0,70,49,0,0,0,0,0,0,71,101,116,86,105,100,101,111,68,101,102,97,117,108,116,0,114,43,98,0,0,0,0,0,119,43,98,0,0,0,0,0,66,67,67,0,0,0,0,0,101,109,117,46,101,120,105,116,0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,116,101,114,109,46,116,105,116,108,101,0,0,0,0,0,0,50,0,0,0,0,0,0,0,70,49,50,0,0,0,0,0,60,0,0,0,0,0,0,0,80,97,103,101,85,112,0,0,61,0,0,0,0,0,0,0,118,0,0,0,0,0,0,0,73,110,116,101,114,110,97,108,87,97,105,116,0,0,0,0,102,111,114,109,97,116,0,0,109,97,99,112,108,117,115,0,109,111,117,115,101,95,100,105,118,95,121,0,0,0,0,0,42,42,42,32,108,111,97,100,105,110,103,32,114,97,109,32,102,97,105,108,101,100,32,40,37,115,41,10,0,0,0,0,115,105,122,101,0,0,0,0,66,76,83,0,0,0,0,0,65,32,32,37,48,56,108,88,32,32,37,48,52,88,32,32,37,48,52,88,10,0,0,0,82,101,108,101,97,115,101,32,54,46,48,10,36,48,0,0,114,98,0,0,0,0,0,0,46,116,99,0,0,0,0,0,45,45,32,37,108,117,32,37,117,37,115,37,117,10,0,0,112,97,116,104,0,0,0,0,72,111,109,101,0,0,0,0,102,97,108,115,101,0,0,0,104,97,108,116,0,0,0,0,104,101,105,103,104,116,0,0,68,73,86,90,0,0,0,0,83,101,116,68,101,102,97,117,108,116,83,116,97,114,116,117,112,0,0,0,0,0,0,0,66,72,73,0,0,0,0,0,73,110,115,101,114,116,0,0,71,101,116,68,101,102,97,117,108,116,83,116,97,114,116,117,112,0,0,0,0,0,0,0,60,110,111,110,101,62,0,0,66,83,82,0,0,0,0,0,76,111,97,100,58,0,0,0,100,114,105,118,101,114,0,0,102,105,108,101,0,0,0,0,75,80,95,80,101,114,105,111,100,0,0,0,0,0,0,0,65,68,66,79,112,0,0,0,66,82,65,0,0,0,0,0,68,73,83,75,58,0,0,0,99,112,117,0,0,0,0,0,75,80,95,48,0,0,0,0,65,68,66,82,101,73,110,105,116,0,0,0,0,0,0,0,108,0,0,0,0,0,0,0,46,83,0,0,0,0,0,0,116,114,117,101,0,0,0,0,119,98,0,0,0,0,0,0,115,110,100,45,115,100,108,58,32,101,114,114,111,114,32,111,112,101,110,105,110,103,32,111,117,116,112,117,116,32,40,37,115,41,10,0,0,0,0,0,108,111,119,112,97,115,115,0,45,0,0,0,0,0,0,0,75,80,95,69,110,116,101,114,0,0,0,0,0,0,0,0,116,100,48,58,32,97,100,118,97,110,99,101,100,32,99,111,109,112,114,101,115,115,105,111,110,32,110,111,116,32,115,117,112,112,111,114,116,101,100,10,0,0,0,0,0,0,0,0,83,101,116,65,68,66,73,110,102,111,0,0,0,0,0,0,102,109,0,0,0,0,0,0,77,79,86,69,81,0,0,0,115,116,120,58,32,98,97,100,32,109,97,103,105,99,10,0,112,115,105,58,32,99,114,99,32,101,114,114,111,114,10,0,112,102,100,99,58,32,111,114,112,104,97,110,101,100,32,97,108,116,101,114,110,97,116,101,32,115,101,99,116,111,114,10,0,0,0,0,0,0,0,0,75,80,95,51,0,0,0,0,73,77,68,32,49,46,49,55,58,32,37,50,100,47,37,50,100,47,37,52,100,32,37,48,50,100,58,37,48,50,100,58,37,48,50,100,0,0,0,0,6,78,111,110,97,109,101,0,71,101,116,65,68,66,73,110,102,111,0,0,0,0,0,0,99,112,50,58,32,37,117,47,37,117,47,37,117,58,0,0,68,73,86,85,46,87,0,0,75,80,95,50,0,0,0,0,46,99,112,50,0,0,0,0,112,114,105,58,32,99,114,99,32,101,114,114,111,114,10,0,71,101,116,73,110,100,65,68,66,0,0,0,0,0,0,0,112,114,105,58,32,99,114,99,32,101,114,114,111,114,10,0,79,82,46,66,0,0,0,0,119,98,0,0,0,0,0,0,102,108,117,115,104,0,0,0,42,42,42,32,101,114,114,111,114,32,99,114,101,97,116,105,110,103,32,115,121,109,108,105,110,107,32,37,115,32,45,62,32,37,115,10,0,0,0,0,82,101,110,97,109,101,0,0,114,101,97,100,0,0,0,0,109,105,99,114,111,115,111,102,116,0,0,0,0,0,0,0,75,80,95,49,0,0,0,0,67,111,117,110,116,65,68,66,115,0,0,0,0,0,0,0,110,117,108,108,0,0,0,0,115,111,110,121,58,32,112,114,105,109,101,58,32,117,110,107,110,111,119,110,32,40,116,114,97,112,61,48,120,37,48,52,120,41,10,0,0,0,0,0,114,43,98,0,0,0,0,0,83,66,67,68,46,66,0,0,114,43,98,0,0,0,0,0,114,43,98,0,0,0,0,0,114,98,0,0,0,0,0,0,115,116,97,114,116,32,109,111,116,111,114,0,0,0,0,0,75,80,95,54,0,0,0,0,114,43,98,0,0,0,0,0,83,73,110,116,82,101,109,111,118,101,0,0,0,0,0,0,79,82,46,87,0,0,0,0,101,109,117,46,105,119,109,46,115,116,97,116,117,115,0,0,116,101,114,109,46,114,101,108,101,97,115,101,0,0,0,0,101,109,117,46,99,112,117,46,115,112,101,101,100,0,0,0,70,49,49,0,0,0,0,0,62,61,0,0,0,0,0,0,75,80,95,53,0,0,0,0,63,61,0,0,0,0,0,0,113,0,0,0,0,0,0,0,83,73,110,116,73,110,115,116,97,108,108,0,0,0,0,0,108,111,97,100,0,0,0,0,37,115,58,32,117,110,107,110,111,119,110,32,111,112,116,105,111,110,32,40,37,115,41,10,0,0,0,0,0,0,0,0,109,111,117,115,101,95,109,117,108,95,121,0,0,0,0,0,42,42,42,32,109,101,109,111,114,121,32,98,108,111,99,107,32,99,114,101,97,116,105,111,110,32,102,97,105,108,101,100,10,0,0,0,0,0,0,0,98,108,111,99,107,115,0,0,79,82,46,76,0,0,0,0,83,32,32,37,48,52,88,58,37,48,52,108,88,32,32,37,48,52,88,32,32,37,48,52,88,10,0,0,0,0,0,0,116,100,48,58,32,99,111,109,109,101,110,116,32,99,114,99,32,40,37,48,52,88,32,37,48,52,88,41,10,0,0,0,82,101,108,101,97,115,101,32,53,46,48,49,36,48,0,0,46,115,116,120,0,0,0,0,63,0,0,0,0,0,0,0,75,80,95,52,0,0,0,0,119,105,100,116,104,0,0,0,73,76,76,71,0,0,0,0,68,111,86,66,76,84,97,115,107,0,0,0,0,0,0,0,68,73,86,83,46,87,0,0,65,116,116,97,99,104,86,66,76,0,0,0,0,0,0,0,75,80,95,80,108,117,115,0,42,42,42,32,117,110,107,110,111,119,110,32,109,111,100,101,108,32,40,37,115,41,10,0,114,117,110,0,0,0,0,0,83,85,66,65,46,87,0,0,83,108,111,116,86,82,101,109,111,118,101,0,0,0,0,0,75,80,95,57,0,0,0,0,109,97,99,45,99,108,97,115,115,105,99,0,0,0,0,0,83,85,66,46,66,0,0,0,83,108,111,116,86,73,110,115,116,97,108,108,0,0,0,0,75,80,95,56,0,0,0,0,109,97,99,45,115,101,0,0,83,85,66,88,46,66,0,0,83,108,111,116,77,97,110,97,103,101,114,0,0,0,0,0,37,115,37,115,37,48,52,88,40,65,37,117,41,0,0,0,75,80,95,55,0,0,0,0,109,111,100,101,108,61,37,115,10,0,0,0,0,0,0,0,83,85,66,46,87,0,0,0,73,110,105,116,69,118,101,110,116,115,0,0,0,0,0,0,75,80,95,77,105,110,117,115,0,0,0,0,0,0,0,0,83,89,83,84,69,77,58,0,83,85,66,88,46,87,0,0,73,110,105,116,70,83,0,0,75,80,95,83,116,97,114,0,109,97,99,45,112,108,117,115,0,0,0,0,0,0,0,0,83,85,66,46,76,0,0,0,72,83,101,116,83,116,97,116,101,0,0,0,0,0,0,0,79,112,101,110,82,70,0,0,75,80,95,83,108,97,115,104,0,0,0,0,0,0,0,0,115,121,115,116,101,109,0,0,115,111,110,121,58,32,102,111,114,109,97,116,116,101,100,32,100,105,115,107,32,40,37,108,117,32,98,108,111,99,107,115,41,10,0,0,0,0,0,0,83,85,66,88,46,76,0,0,72,71,101,116,83,116,97,116,101,0,0,0,0,0,0,0,115,116,111,112,32,109,111,116,111,114,0,0,0,0,0,0,78,117,109,76,111,99,107,0,100,105,115,97,98,108,105,110,103,32,109,101,109,111,114,121,32,116,101,115,116,10,0,0,83,85,66,65,46,76,0,0,101,109,117,46,105,119,109,46,114,119,0,0,0,0,0,0,72,67,108,114,82,66,105,116,0,0,0,0,0,0,0,0,116,101,114,109,46,103,114,97,98,0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,70,49,48,0,0,0,0,0,60,61,0,0,0,0,0,0,67,116,114,108,82,105,103,104,116,0,0,0,0,0,0,0,125,0,0,0,0,0,0,0,109,0,0,0,0,0,0,0,82,65,77,58,0,0,0,0,98,105,110,97,114,121,0,0,109,111,117,115,101,95,100,105,118,95,120,0,0,0,0,0,99,112,117,46,115,112,101,101,100,32,61,32,0,0,0,0,60,110,111,110,101,62,0,0,115,0,0,0,0,0,0,0,32,37,115,0,0,0,0,0,67,77,80,46,66,0,0,0,69,32,32,34,37,115,34,10,0,0,0,0,0,0,0,0,116,100,48,58,32,114,101,97,100,32,101,114,114,111,114,10,0,0,0,0,0,0,0,0,82,101,108,101,97,115,101,32,52,46,48,48,36,48,0,0,72,83,101,116,82,66,105,116,0,0,0,0,0,0,0,0,46,115,116,0,0,0,0,0,69,0,0,0,0,0,0,0,77,101,110,117,0,0,0,0,97,100,100,114,101,115,115,0,65,68,68,82,0,0,0,0,109,101,109,116,101,115,116,0,67,77,80,46,87,0,0,0,78,101,119,69,109,112,116,121,72,97,110,100,108,101,0,0,87,105,110,100,111,119,115,82,105,103,104,116,0,0,0,0,42,42,42,32,82,79,77,32,110,111,116,32,102,111,117,110,100,32,97,116,32,52,48,48,48,48,48,10,0,0,0,0,105,103,110,111,114,105,110,103,32,112,99,101,32,107,101,121,58,32,48,120,37,48,52,120,32,40,37,115,41,10,0,0,97,100,98,58,32,117,110,107,110,111,119,110,32,99,109,100,32,40,37,48,50,88,41,10,0,0,0,0,0,0,0,0])
, "i8", ALLOC_NONE, Runtime.GLOBAL_BASE)
var tempDoublePtr = Runtime.alignMemory(allocate(12, "i8", ALLOC_STATIC), 8);
assert(tempDoublePtr % 8 == 0);
function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
}
function copyTempDouble(ptr) {
  HEAP8[tempDoublePtr] = HEAP8[ptr];
  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];
  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];
  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];
  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];
  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];
  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];
  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];
}
  function _llvm_dbg_value() {
  Module['printErr']('missing function: llvm_dbg_value'); abort(-1);
  }
  Module["_memset"] = _memset;var _llvm_memset_p0i8_i64=_memset;
  Module["_memcpy"] = _memcpy;var _llvm_memcpy_p0i8_p0i8_i32=_memcpy;
  var _llvm_dbg_declare=undefined;
  function _emscripten_set_main_loop(func, fps, simulateInfiniteLoop) {
      Module['noExitRuntime'] = true;
      var steps = 0;
      var stepStart;
      var stepEnd;
      var sampleStep = false;
      function step_run(){
        // if (sampleStep) {
        //   console.log('yield time', new Date() - stepEnd);
        // }
        // steps++;
        // sampleStep = steps % 10 == 0
        // if (sampleStep) {
        //   console.log('step',steps)
        //   stepStart = new Date();
        // }
        Runtime.dynCall('v', func);
        // if (sampleStep) {
        //   stepEnd = new Date();
        //   console.log('step time',stepEnd - stepStart);
        // }
        // step_req();
        setTimeout(step_run);
      }
      Browser.step_func = step_run;
      window.onerror = step_run;
      step_run();
    }
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:35,EIDRM:36,ECHRNG:37,EL2NSYNC:38,EL3HLT:39,EL3RST:40,ELNRNG:41,EUNATCH:42,ENOCSI:43,EL2HLT:44,EDEADLK:45,ENOLCK:46,EBADE:50,EBADR:51,EXFULL:52,ENOANO:53,EBADRQC:54,EBADSLT:55,EDEADLOCK:56,EBFONT:57,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:74,ELBIN:75,EDOTDOT:76,EBADMSG:77,EFTYPE:79,ENOTUNIQ:80,EBADFD:81,EREMCHG:82,ELIBACC:83,ELIBBAD:84,ELIBSCN:85,ELIBMAX:86,ELIBEXEC:87,ENOSYS:88,ENMFILE:89,ENOTEMPTY:90,ENAMETOOLONG:91,ELOOP:92,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:106,EPROTOTYPE:107,ENOTSOCK:108,ENOPROTOOPT:109,ESHUTDOWN:110,ECONNREFUSED:111,EADDRINUSE:112,ECONNABORTED:113,ENETUNREACH:114,ENETDOWN:115,ETIMEDOUT:116,EHOSTDOWN:117,EHOSTUNREACH:118,EINPROGRESS:119,EALREADY:120,EDESTADDRREQ:121,EMSGSIZE:122,EPROTONOSUPPORT:123,ESOCKTNOSUPPORT:124,EADDRNOTAVAIL:125,ENETRESET:126,EISCONN:127,ENOTCONN:128,ETOOMANYREFS:129,EPROCLIM:130,EUSERS:131,EDQUOT:132,ESTALE:133,ENOTSUP:134,ENOMEDIUM:135,ENOSHARE:136,ECASECLASH:137,EILSEQ:138,EOVERFLOW:139,ECANCELED:140,ENOTRECOVERABLE:141,EOWNERDEAD:142,ESTRPIPE:143};
  var ___errno_state=0;function ___setErrNo(value) {
      // For convenient setting and returning of errno.
      HEAP32[((___errno_state)>>2)]=value
      return value;
    }
  var _stdin=allocate(1, "i32*", ALLOC_STATIC);
  var _stdout=allocate(1, "i32*", ALLOC_STATIC);
  var _stderr=allocate(1, "i32*", ALLOC_STATIC);
  var __impure_ptr=allocate(1, "i32*", ALLOC_STATIC);var FS={currentPath:"/",nextInode:2,streams:[null],ignorePermissions:true,createFileHandle:function (stream, fd) {
        if (typeof stream === 'undefined') {
          stream = null;
        }
        if (!fd) {
          if (stream && stream.socket) {
            for (var i = 1; i < 64; i++) {
              if (!FS.streams[i]) {
                fd = i;
                break;
              }
            }
            assert(fd, 'ran out of low fds for sockets');
          } else {
            fd = Math.max(FS.streams.length, 64);
            for (var i = FS.streams.length; i < fd; i++) {
              FS.streams[i] = null; // Keep dense
            }
          }
        }
        // Close WebSocket first if we are about to replace the fd (i.e. dup2)
        if (FS.streams[fd] && FS.streams[fd].socket && FS.streams[fd].socket.close) {
          FS.streams[fd].socket.close();
        }
        FS.streams[fd] = stream;
        return fd;
      },removeFileHandle:function (fd) {
        FS.streams[fd] = null;
      },joinPath:function (parts, forceRelative) {
        var ret = parts[0];
        for (var i = 1; i < parts.length; i++) {
          if (ret[ret.length-1] != '/') ret += '/';
          ret += parts[i];
        }
        if (forceRelative && ret[0] == '/') ret = ret.substr(1);
        return ret;
      },absolutePath:function (relative, base) {
        if (typeof relative !== 'string') return null;
        if (base === undefined) base = FS.currentPath;
        if (relative && relative[0] == '/') base = '';
        var full = base + '/' + relative;
        var parts = full.split('/').reverse();
        var absolute = [''];
        while (parts.length) {
          var part = parts.pop();
          if (part == '' || part == '.') {
            // Nothing.
          } else if (part == '..') {
            if (absolute.length > 1) absolute.pop();
          } else {
            absolute.push(part);
          }
        }
        return absolute.length == 1 ? '/' : absolute.join('/');
      },analyzePath:function (path, dontResolveLastLink, linksVisited) {
        var ret = {
          isRoot: false,
          exists: false,
          error: 0,
          name: null,
          path: null,
          object: null,
          parentExists: false,
          parentPath: null,
          parentObject: null
        };
        path = FS.absolutePath(path);
        if (path == '/') {
          ret.isRoot = true;
          ret.exists = ret.parentExists = true;
          ret.name = '/';
          ret.path = ret.parentPath = '/';
          ret.object = ret.parentObject = FS.root;
        } else if (path !== null) {
          linksVisited = linksVisited || 0;
          path = path.slice(1).split('/');
          var current = FS.root;
          var traversed = [''];
          while (path.length) {
            if (path.length == 1 && current.isFolder) {
              ret.parentExists = true;
              ret.parentPath = traversed.length == 1 ? '/' : traversed.join('/');
              ret.parentObject = current;
              ret.name = path[0];
            }
            var target = path.shift();
            if (!current.isFolder) {
              ret.error = ERRNO_CODES.ENOTDIR;
              break;
            } else if (!current.read) {
              ret.error = ERRNO_CODES.EACCES;
              break;
            } else if (!current.contents.hasOwnProperty(target)) {
              ret.error = ERRNO_CODES.ENOENT;
              break;
            }
            current = current.contents[target];
            if (current.link && !(dontResolveLastLink && path.length == 0)) {
              if (linksVisited > 40) { // Usual Linux SYMLOOP_MAX.
                ret.error = ERRNO_CODES.ELOOP;
                break;
              }
              var link = FS.absolutePath(current.link, traversed.join('/'));
              ret = FS.analyzePath([link].concat(path).join('/'),
                                   dontResolveLastLink, linksVisited + 1);
              return ret;
            }
            traversed.push(target);
            if (path.length == 0) {
              ret.exists = true;
              ret.path = traversed.join('/');
              ret.object = current;
            }
          }
        }
        return ret;
      },findObject:function (path, dontResolveLastLink) {
        FS.ensureRoot();
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (ret.exists) {
          return ret.object;
        } else {
          ___setErrNo(ret.error);
          return null;
        }
      },createObject:function (parent, name, properties, canRead, canWrite) {
        if (!parent) parent = '/';
        if (typeof parent === 'string') parent = FS.findObject(parent);
        if (!parent) {
          ___setErrNo(ERRNO_CODES.EACCES);
          throw new Error('Parent path must exist.');
        }
        if (!parent.isFolder) {
          ___setErrNo(ERRNO_CODES.ENOTDIR);
          throw new Error('Parent must be a folder.');
        }
        if (!parent.write && !FS.ignorePermissions) {
          ___setErrNo(ERRNO_CODES.EACCES);
          throw new Error('Parent folder must be writeable.');
        }
        if (!name || name == '.' || name == '..') {
          ___setErrNo(ERRNO_CODES.ENOENT);
          throw new Error('Name must not be empty.');
        }
        if (parent.contents.hasOwnProperty(name)) {
          ___setErrNo(ERRNO_CODES.EEXIST);
          throw new Error("Can't overwrite object.");
        }
        parent.contents[name] = {
          read: canRead === undefined ? true : canRead,
          write: canWrite === undefined ? false : canWrite,
          timestamp: Date.now(),
          inodeNumber: FS.nextInode++
        };
        for (var key in properties) {
          if (properties.hasOwnProperty(key)) {
            parent.contents[name][key] = properties[key];
          }
        }
        return parent.contents[name];
      },createFolder:function (parent, name, canRead, canWrite) {
        var properties = {isFolder: true, isDevice: false, contents: {}};
        return FS.createObject(parent, name, properties, canRead, canWrite);
      },createPath:function (parent, path, canRead, canWrite) {
        var current = FS.findObject(parent);
        if (current === null) throw new Error('Invalid parent.');
        path = path.split('/').reverse();
        while (path.length) {
          var part = path.pop();
          if (!part) continue;
          if (!current.contents.hasOwnProperty(part)) {
            FS.createFolder(current, part, canRead, canWrite);
          }
          current = current.contents[part];
        }
        return current;
      },createFile:function (parent, name, properties, canRead, canWrite) {
        properties.isFolder = false;
        return FS.createObject(parent, name, properties, canRead, canWrite);
      },createDataFile:function (parent, name, data, canRead, canWrite) {
        if (typeof data === 'string') {
          var dataArray = new Array(data.length);
          for (var i = 0, len = data.length; i < len; ++i) dataArray[i] = data.charCodeAt(i);
          data = dataArray;
        }
        var properties = {
          isDevice: false,
          contents: data.subarray ? data.subarray(0) : data // as an optimization, create a new array wrapper (not buffer) here, to help JS engines understand this object
        };
        return FS.createFile(parent, name, properties, canRead, canWrite);
      },createLazyFile:function (parent, name, url, canRead, canWrite) {
        if (typeof XMLHttpRequest !== 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          // Lazy chunked Uint8Array (implements get and length from Uint8Array). Actual getting is abstracted away for eventual reuse.
          var LazyUint8Array = function() {
            this.lengthKnown = false;
            this.chunks = []; // Loaded chunks. Index is the chunk number
          }
          LazyUint8Array.prototype.get = function(idx) {
            if (idx > this.length-1 || idx < 0) {
              return undefined;
            }
            var chunkOffset = idx % this.chunkSize;
            var chunkNum = Math.floor(idx / this.chunkSize);
            return this.getter(chunkNum)[chunkOffset];
          }
          LazyUint8Array.prototype.setDataGetter = function(getter) {
            this.getter = getter;
          }
          LazyUint8Array.prototype.cacheLength = function() {
              // Find length
              var xhr = new XMLHttpRequest();
              xhr.open('HEAD', url, false);
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              var datalength = Number(xhr.getResponseHeader("Content-length"));
              var header;
              var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
              var chunkSize = 1024*1024; // Chunk size in bytes
              if (!hasByteServing) chunkSize = datalength;
              // Function to get a range from the remote URL.
              var doXHR = (function(from, to) {
                if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
                if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
                // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
                var xhr = new XMLHttpRequest();
                xhr.open('GET', url, false);
                if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
                // Some hints to the browser that we want binary data.
                if (typeof Uint8Array != 'undefined') xhr.responseType = 'arraybuffer';
                if (xhr.overrideMimeType) {
                  xhr.overrideMimeType('text/plain; charset=x-user-defined');
                }
                xhr.send(null);
                if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
                if (xhr.response !== undefined) {
                  return new Uint8Array(xhr.response || []);
                } else {
                  return intArrayFromString(xhr.responseText || '', true);
                }
              });
              var lazyArray = this;
              lazyArray.setDataGetter(function(chunkNum) {
                var start = chunkNum * chunkSize;
                var end = (chunkNum+1) * chunkSize - 1; // including this byte
                end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") {
                  lazyArray.chunks[chunkNum] = doXHR(start, end);
                }
                if (typeof(lazyArray.chunks[chunkNum]) === "undefined") throw new Error("doXHR failed!");
                return lazyArray.chunks[chunkNum];
              });
              this._length = datalength;
              this._chunkSize = chunkSize;
              this.lengthKnown = true;
          }
          var lazyArray = new LazyUint8Array();
          Object.defineProperty(lazyArray, "length", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._length;
              }
          });
          Object.defineProperty(lazyArray, "chunkSize", {
              get: function() {
                  if(!this.lengthKnown) {
                      this.cacheLength();
                  }
                  return this._chunkSize;
              }
          });
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
        return FS.createFile(parent, name, properties, canRead, canWrite);
      },createPreloadedFile:function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile) {
        Browser.init();
        var fullname = FS.joinPath([parent, name], true);
        function processData(byteArray) {
          function finish(byteArray) {
            if (!dontCreateFile) {
              FS.createDataFile(parent, name, byteArray, canRead, canWrite);
            }
            if (onload) onload();
            removeRunDependency('cp ' + fullname);
          }
          var handled = false;
          Module['preloadPlugins'].forEach(function(plugin) {
            if (handled) return;
            if (plugin['canHandle'](fullname)) {
              plugin['handle'](byteArray, fullname, finish, function() {
                if (onerror) onerror();
                removeRunDependency('cp ' + fullname);
              });
              handled = true;
            }
          });
          if (!handled) finish(byteArray);
        }
        addRunDependency('cp ' + fullname);
        if (typeof url == 'string') {
          Browser.asyncLoad(url, function(byteArray) {
            processData(byteArray);
          }, onerror);
        } else {
          processData(url);
        }
      },createLink:function (parent, name, target, canRead, canWrite) {
        var properties = {isDevice: false, link: target};
        return FS.createFile(parent, name, properties, canRead, canWrite);
      },createDevice:function (parent, name, input, output) {
        if (!(input || output)) {
          throw new Error('A device must have at least one callback defined.');
        }
        var ops = {isDevice: true, input: input, output: output};
        return FS.createFile(parent, name, ops, Boolean(input), Boolean(output));
      },forceLoadFile:function (obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        var success = true;
        if (typeof XMLHttpRequest !== 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else if (Module['read']) {
          // Command-line.
          try {
            // WARNING: Can't read binary files in V8's d8 or tracemonkey's js, as
            //          read() will try to parse UTF8.
            obj.contents = intArrayFromString(Module['read'](obj.url), true);
          } catch (e) {
            success = false;
          }
        } else {
          throw new Error('Cannot load without read() or XMLHttpRequest.');
        }
        if (!success) ___setErrNo(ERRNO_CODES.EIO);
        return success;
      },ensureRoot:function () {
        if (FS.root) return;
        // The main file system tree. All the contents are inside this.
        FS.root = {
          read: true,
          write: true,
          isFolder: true,
          isDevice: false,
          timestamp: Date.now(),
          inodeNumber: 1,
          contents: {}
        };
      },init:function (input, output, error) {
        // Make sure we initialize only once.
        assert(!FS.init.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.init.initialized = true;
        FS.ensureRoot();
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        input = input || Module['stdin'];
        output = output || Module['stdout'];
        error = error || Module['stderr'];
        // Default handlers.
        var stdinOverridden = true, stdoutOverridden = true, stderrOverridden = true;
        if (!input) {
          stdinOverridden = false;
          input = function() {
            if (!input.cache || !input.cache.length) {
              var result;
              if (typeof window != 'undefined' &&
                  typeof window.prompt == 'function') {
                // Browser.
                result = window.prompt('Input: ');
                if (result === null) result = String.fromCharCode(0); // cancel ==> EOF
              } else if (typeof readline == 'function') {
                // Command line.
                result = readline();
              }
              if (!result) result = '';
              input.cache = intArrayFromString(result + '\n', true);
            }
            return input.cache.shift();
          };
        }
        var utf8 = new Runtime.UTF8Processor();
        function simpleOutput(val) {
          if (val === null || val === 10) {
            output.printer(output.buffer.join(''));
            output.buffer = [];
          } else {
            output.buffer.push(utf8.processCChar(val));
          }
        }
        if (!output) {
          stdoutOverridden = false;
          output = simpleOutput;
        }
        if (!output.printer) output.printer = Module['print'];
        if (!output.buffer) output.buffer = [];
        if (!error) {
          stderrOverridden = false;
          error = simpleOutput;
        }
        if (!error.printer) error.printer = Module['print'];
        if (!error.buffer) error.buffer = [];
        // Create the temporary folder, if not already created
        try {
          FS.createFolder('/', 'tmp', true, true);
        } catch(e) {}
        // Create the I/O devices.
        var devFolder = FS.createFolder('/', 'dev', true, true);
        var stdin = FS.createDevice(devFolder, 'stdin', input);
        stdin.isTerminal = !stdinOverridden;
        var stdout = FS.createDevice(devFolder, 'stdout', null, output);
        stdout.isTerminal = !stdoutOverridden;
        var stderr = FS.createDevice(devFolder, 'stderr', null, error);
        stderr.isTerminal = !stderrOverridden;
        FS.createDevice(devFolder, 'tty', input, output);
        FS.createDevice(devFolder, 'null', function(){}, function(){});
        // Create default streams.
        FS.streams[1] = {
          path: '/dev/stdin',
          object: stdin,
          position: 0,
          isRead: true,
          isWrite: false,
          isAppend: false,
          error: false,
          eof: false,
          ungotten: []
        };
        FS.streams[2] = {
          path: '/dev/stdout',
          object: stdout,
          position: 0,
          isRead: false,
          isWrite: true,
          isAppend: false,
          error: false,
          eof: false,
          ungotten: []
        };
        FS.streams[3] = {
          path: '/dev/stderr',
          object: stderr,
          position: 0,
          isRead: false,
          isWrite: true,
          isAppend: false,
          error: false,
          eof: false,
          ungotten: []
        };
        // TODO: put these low in memory like we used to assert on: assert(Math.max(_stdin, _stdout, _stderr) < 15000); // make sure these are low, we flatten arrays with these
        HEAP32[((_stdin)>>2)]=1;
        HEAP32[((_stdout)>>2)]=2;
        HEAP32[((_stderr)>>2)]=3;
        // Other system paths
        FS.createPath('/', 'dev/shm/tmp', true, true); // temp files
        // Newlib initialization
        for (var i = FS.streams.length; i < Math.max(_stdin, _stdout, _stderr) + 4; i++) {
          FS.streams[i] = null; // Make sure to keep FS.streams dense
        }
        FS.streams[_stdin] = FS.streams[1];
        FS.streams[_stdout] = FS.streams[2];
        FS.streams[_stderr] = FS.streams[3];
        allocate([ allocate(
          [0, 0, 0, 0, _stdin, 0, 0, 0, _stdout, 0, 0, 0, _stderr, 0, 0, 0],
          'void*', ALLOC_NORMAL) ], 'void*', ALLOC_NONE, __impure_ptr);
      },quit:function () {
        if (!FS.init.initialized) return;
        // Flush any partially-printed lines in stdout and stderr. Careful, they may have been closed
        if (FS.streams[2] && FS.streams[2].object.output.buffer.length > 0) FS.streams[2].object.output(10);
        if (FS.streams[3] && FS.streams[3].object.output.buffer.length > 0) FS.streams[3].object.output(10);
      },standardizePath:function (path) {
        if (path.substr(0, 2) == './') path = path.substr(2);
        return path;
      },deleteFile:function (path) {
        path = FS.analyzePath(path);
        if (!path.parentExists || !path.exists) {
          throw 'Invalid path ' + path;
        }
        delete path.parentObject.contents[path.name];
      }};
  var Browser={mainLoop:{scheduler:null,shouldPause:false,paused:false,queue:[],pause:function () {
          Browser.mainLoop.shouldPause = true;
        },resume:function () {
          if (Browser.mainLoop.paused) {
            Browser.mainLoop.paused = false;
            Browser.mainLoop.scheduler();
          }
          Browser.mainLoop.shouldPause = false;
        },updateStatus:function () {
          if (Module['setStatus']) {
            var message = Module['statusMessage'] || 'Please wait...';
            var remaining = Browser.mainLoop.remainingBlockers;
            var expected = Browser.mainLoop.expectedBlockers;
            if (remaining) {
              if (remaining < expected) {
                Module['setStatus'](message + ' (' + (expected - remaining) + '/' + expected + ')');
              } else {
                Module['setStatus'](message);
              }
            } else {
              Module['setStatus']('');
            }
          }
        }},isFullScreen:false,pointerLock:false,moduleContextCreatedCallbacks:[],workers:[],init:function () {
        if (!Module["preloadPlugins"]) Module["preloadPlugins"] = []; // needs to exist even in workers
        if (Browser.initted || ENVIRONMENT_IS_WORKER) return;
        Browser.initted = true;
        try {
          new Blob();
          Browser.hasBlobConstructor = true;
        } catch(e) {
          Browser.hasBlobConstructor = false;
          console.log("warning: no blob constructor, cannot create blobs with mimetypes");
        }
        Browser.BlobBuilder = typeof MozBlobBuilder != "undefined" ? MozBlobBuilder : (typeof WebKitBlobBuilder != "undefined" ? WebKitBlobBuilder : (!Browser.hasBlobConstructor ? console.log("warning: no BlobBuilder") : null));
        Browser.URLObject = typeof window != "undefined" ? (window.URL ? window.URL : window.webkitURL) : console.log("warning: cannot create object URLs");
        // Support for plugins that can process preloaded files. You can add more of these to
        // your app by creating and appending to Module.preloadPlugins.
        //
        // Each plugin is asked if it can handle a file based on the file's name. If it can,
        // it is given the file's raw data. When it is done, it calls a callback with the file's
        // (possibly modified) data. For example, a plugin might decompress a file, or it
        // might create some side data structure for use later (like an Image element, etc.).
        function getMimetype(name) {
          return {
            'jpg': 'image/jpeg',
            'jpeg': 'image/jpeg',
            'png': 'image/png',
            'bmp': 'image/bmp',
            'ogg': 'audio/ogg',
            'wav': 'audio/wav',
            'mp3': 'audio/mpeg'
          }[name.substr(name.lastIndexOf('.')+1)];
        }
        var imagePlugin = {};
        imagePlugin['canHandle'] = function(name) {
          return !Module.noImageDecoding && /\.(jpg|jpeg|png|bmp)$/i.test(name);
        };
        imagePlugin['handle'] = function(byteArray, name, onload, onerror) {
          var b = null;
          if (Browser.hasBlobConstructor) {
            try {
              b = new Blob([byteArray], { type: getMimetype(name) });
              if (b.size !== byteArray.length) { // Safari bug #118630
                // Safari's Blob can only take an ArrayBuffer
                b = new Blob([(new Uint8Array(byteArray)).buffer], { type: getMimetype(name) });
              }
            } catch(e) {
              Runtime.warnOnce('Blob constructor present but fails: ' + e + '; falling back to blob builder');
            }
          }
          if (!b) {
            var bb = new Browser.BlobBuilder();
            bb.append((new Uint8Array(byteArray)).buffer); // we need to pass a buffer, and must copy the array to get the right data range
            b = bb.getBlob();
          }
          var url = Browser.URLObject.createObjectURL(b);
          var img = new Image();
          img.onload = function() {
            assert(img.complete, 'Image ' + name + ' could not be decoded');
            var canvas = document.createElement('canvas');
            canvas.width = img.width;
            canvas.height = img.height;
            var ctx = canvas.getContext('2d');
            ctx.drawImage(img, 0, 0);
            Module["preloadedImages"][name] = canvas;
            Browser.URLObject.revokeObjectURL(url);
            if (onload) onload(byteArray);
          };
          img.onerror = function(event) {
            console.log('Image ' + url + ' could not be decoded');
            if (onerror) onerror();
          };
          img.src = url;
        };
        Module['preloadPlugins'].push(imagePlugin);
        var audioPlugin = {};
        audioPlugin['canHandle'] = function(name) {
          return !Module.noAudioDecoding && name.substr(-4) in { '.ogg': 1, '.wav': 1, '.mp3': 1 };
        };
        audioPlugin['handle'] = function(byteArray, name, onload, onerror) {
          var done = false;
          function finish(audio) {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = audio;
            if (onload) onload(byteArray);
          }
          function fail() {
            if (done) return;
            done = true;
            Module["preloadedAudios"][name] = new Audio(); // empty shim
            if (onerror) onerror();
          }
          if (Browser.hasBlobConstructor) {
            try {
              var b = new Blob([byteArray], { type: getMimetype(name) });
            } catch(e) {
              return fail();
            }
            var url = Browser.URLObject.createObjectURL(b); // XXX we never revoke this!
            var audio = new Audio();
            audio.addEventListener('canplaythrough', function() { finish(audio) }, false); // use addEventListener due to chromium bug 124926
            audio.onerror = function(event) {
              if (done) return;
              console.log('warning: browser could not fully decode audio ' + name + ', trying slower base64 approach');
              function encode64(data) {
                var BASE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
                var PAD = '=';
                var ret = '';
                var leftchar = 0;
                var leftbits = 0;
                for (var i = 0; i < data.length; i++) {
                  leftchar = (leftchar << 8) | data[i];
                  leftbits += 8;
                  while (leftbits >= 6) {
                    var curr = (leftchar >> (leftbits-6)) & 0x3f;
                    leftbits -= 6;
                    ret += BASE[curr];
                  }
                }
                if (leftbits == 2) {
                  ret += BASE[(leftchar&3) << 4];
                  ret += PAD + PAD;
                } else if (leftbits == 4) {
                  ret += BASE[(leftchar&0xf) << 2];
                  ret += PAD;
                }
                return ret;
              }
              audio.src = 'data:audio/x-' + name.substr(-3) + ';base64,' + encode64(byteArray);
              finish(audio); // we don't wait for confirmation this worked - but it's worth trying
            };
            audio.src = url;
            // workaround for chrome bug 124926 - we do not always get oncanplaythrough or onerror
            Browser.safeSetTimeout(function() {
              finish(audio); // try to use it even though it is not necessarily ready to play
            }, 10000);
          } else {
            return fail();
          }
        };
        Module['preloadPlugins'].push(audioPlugin);
        // Canvas event setup
        var canvas = Module['canvas'];
        canvas.requestPointerLock = canvas['requestPointerLock'] ||
                                    canvas['mozRequestPointerLock'] ||
                                    canvas['webkitRequestPointerLock'];
        canvas.exitPointerLock = document['exitPointerLock'] ||
                                 document['mozExitPointerLock'] ||
                                 document['webkitExitPointerLock'] ||
                                 function(){}; // no-op if function does not exist
        canvas.exitPointerLock = canvas.exitPointerLock.bind(document);
        function pointerLockChange() {
          Browser.pointerLock = document['pointerLockElement'] === canvas ||
                                document['mozPointerLockElement'] === canvas ||
                                document['webkitPointerLockElement'] === canvas;
        }
        document.addEventListener('pointerlockchange', pointerLockChange, false);
        document.addEventListener('mozpointerlockchange', pointerLockChange, false);
        document.addEventListener('webkitpointerlockchange', pointerLockChange, false);
        if (Module['elementPointerLock']) {
          canvas.addEventListener("click", function(ev) {
            if (!Browser.pointerLock && canvas.requestPointerLock) {
              canvas.requestPointerLock();
              ev.preventDefault();
            }
          }, false);
        }
      },createContext:function (canvas, useWebGL, setInModule) {
        var ctx;
        try {
          if (useWebGL) {
            ctx = canvas.getContext('experimental-webgl', {
              alpha: false
            });
          } else {
            ctx = canvas.getContext('2d');
          }
          if (!ctx) throw ':(';
        } catch (e) {
          Module.print('Could not create canvas - ' + e);
          return null;
        }
        if (useWebGL) {
          // Set the background of the WebGL canvas to black
          canvas.style.backgroundColor = "black";
          // Warn on context loss
          canvas.addEventListener('webglcontextlost', function(event) {
            alert('WebGL context lost. You will need to reload the page.');
          }, false);
        }
        if (setInModule) {
          Module.ctx = ctx;
          Module.useWebGL = useWebGL;
          Browser.moduleContextCreatedCallbacks.forEach(function(callback) { callback() });
          Browser.init();
        }
        return ctx;
      },destroyContext:function (canvas, useWebGL, setInModule) {},fullScreenHandlersInstalled:false,lockPointer:undefined,resizeCanvas:undefined,requestFullScreen:function (lockPointer, resizeCanvas) {
        Browser.lockPointer = lockPointer;
        Browser.resizeCanvas = resizeCanvas;
        if (typeof Browser.lockPointer === 'undefined') Browser.lockPointer = true;
        if (typeof Browser.resizeCanvas === 'undefined') Browser.resizeCanvas = false;
        var canvas = Module['canvas'];
        function fullScreenChange() {
          Browser.isFullScreen = false;
          if ((document['webkitFullScreenElement'] || document['webkitFullscreenElement'] ||
               document['mozFullScreenElement'] || document['mozFullscreenElement'] ||
               document['fullScreenElement'] || document['fullscreenElement']) === canvas) {
            canvas.cancelFullScreen = document['cancelFullScreen'] ||
                                      document['mozCancelFullScreen'] ||
                                      document['webkitCancelFullScreen'];
            canvas.cancelFullScreen = canvas.cancelFullScreen.bind(document);
            if (Browser.lockPointer) canvas.requestPointerLock();
            Browser.isFullScreen = true;
            if (Browser.resizeCanvas) Browser.setFullScreenCanvasSize();
          } else if (Browser.resizeCanvas){
            Browser.setWindowedCanvasSize();
          }
          if (Module['onFullScreen']) Module['onFullScreen'](Browser.isFullScreen);
        }
        if (!Browser.fullScreenHandlersInstalled) {
          Browser.fullScreenHandlersInstalled = true;
          document.addEventListener('fullscreenchange', fullScreenChange, false);
          document.addEventListener('mozfullscreenchange', fullScreenChange, false);
          document.addEventListener('webkitfullscreenchange', fullScreenChange, false);
        }
        canvas.requestFullScreen = canvas['requestFullScreen'] ||
                                   canvas['mozRequestFullScreen'] ||
                                   (canvas['webkitRequestFullScreen'] ? function() { canvas['webkitRequestFullScreen'](Element['ALLOW_KEYBOARD_INPUT']) } : null);
        canvas.requestFullScreen();
      },requestAnimationFrame:function (func) {
        if (!window.requestAnimationFrame) {
          window.requestAnimationFrame = window['requestAnimationFrame'] ||
                                         window['mozRequestAnimationFrame'] ||
                                         window['webkitRequestAnimationFrame'] ||
                                         window['msRequestAnimationFrame'] ||
                                         window['oRequestAnimationFrame'] ||
                                         window['setTimeout'];
        }
        window.requestAnimationFrame(func);
      },safeCallback:function (func) {
        return function() {
          if (!ABORT) return func.apply(null, arguments);
        };
      },safeRequestAnimationFrame:function (func) {
        return Browser.requestAnimationFrame(function() {
          if (!ABORT) func();
        });
      },safeSetTimeout:function (func, timeout) {
        return setTimeout(function() {
          if (!ABORT) func();
        }, timeout);
      },safeSetInterval:function (func, timeout) {
        return setInterval(function() {
          if (!ABORT) func();
        }, timeout);
      },getUserMedia:function (func) {
        if(!window.getUserMedia) {
          window.getUserMedia = navigator['getUserMedia'] ||
                                navigator['mozGetUserMedia'];
        }
        window.getUserMedia(func);
      },getMovementX:function (event) {
        return event['movementX'] ||
               event['mozMovementX'] ||
               event['webkitMovementX'] ||
               0;
      },getMovementY:function (event) {
        return event['movementY'] ||
               event['mozMovementY'] ||
               event['webkitMovementY'] ||
               0;
      },mouseX:0,mouseY:0,mouseMovementX:0,mouseMovementY:0,calculateMouseEvent:function (event) { // event should be mousemove, mousedown or mouseup
        if (Browser.pointerLock) {
          // When the pointer is locked, calculate the coordinates
          // based on the movement of the mouse.
          // Workaround for Firefox bug 764498
          if (event.type != 'mousemove' &&
              ('mozMovementX' in event)) {
            Browser.mouseMovementX = Browser.mouseMovementY = 0;
          } else {
            Browser.mouseMovementX = Browser.getMovementX(event);
            Browser.mouseMovementY = Browser.getMovementY(event);
          }
          // check if SDL is available
          if (typeof SDL != "undefined") {
          	Browser.mouseX = SDL.mouseX + Browser.mouseMovementX;
          	Browser.mouseY = SDL.mouseY + Browser.mouseMovementY;
          } else {
          	// just add the mouse delta to the current absolut mouse position
          	// FIXME: ideally this should be clamped against the canvas size and zero
          	Browser.mouseX += Browser.mouseMovementX;
          	Browser.mouseY += Browser.mouseMovementY;
          }        
        } else {
          // Otherwise, calculate the movement based on the changes
          // in the coordinates.
          if (Module["canvasFront"]) {
            var rect = Module["canvasFront"].getBoundingClientRect();
          } else {
            var rect = Module["canvas"].getBoundingClientRect();
          }
          var x = event.pageX - (window.scrollX + rect.left);
          var y = event.pageY - (window.scrollY + rect.top);
          // the canvas might be CSS-scaled compared to its backbuffer;
          // SDL-using content will want mouse coordinates in terms
          // of backbuffer units.
          var cw = Module["canvas"].width;
          var ch = Module["canvas"].height;
          x = x * (cw / rect.width);
          y = y * (ch / rect.height);
          Browser.mouseMovementX = x - Browser.mouseX;
          Browser.mouseMovementY = y - Browser.mouseY;
          Browser.mouseX = x;
          Browser.mouseY = y;
        }
      },xhrLoad:function (url, onload, onerror) {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = function() {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            onload(xhr.response);
          } else {
            onerror();
          }
        };
        xhr.onerror = onerror;
        xhr.send(null);
      },asyncLoad:function (url, onload, onerror, noRunDep) {
        Browser.xhrLoad(url, function(arrayBuffer) {
          assert(arrayBuffer, 'Loading data file "' + url + '" failed (no arrayBuffer).');
          onload(new Uint8Array(arrayBuffer));
          if (!noRunDep) removeRunDependency('al ' + url);
        }, function(event) {
          if (onerror) {
            onerror();
          } else {
            throw 'Loading data file "' + url + '" failed.';
          }
        });
        if (!noRunDep) addRunDependency('al ' + url);
      },resizeListeners:[],updateResizeListeners:function () {
        var canvas = Module['canvas'];
        Browser.resizeListeners.forEach(function(listener) {
          listener(canvas.width, canvas.height);
        });
      },setCanvasSize:function (width, height, noUpdates) {
        var canvas = Module['canvas'];
        canvas.width = width;
        canvas.height = height;
        if (!noUpdates) Browser.updateResizeListeners();
      },windowedWidth:0,windowedHeight:0,setFullScreenCanvasSize:function () {
        var canvas = Module['canvas'];
        this.windowedWidth = canvas.width;
        this.windowedHeight = canvas.height;
        canvas.width = screen.width;
        canvas.height = screen.height;
        // check if SDL is available   
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags | 0x00800000; // set SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      },setWindowedCanvasSize:function () {
        var canvas = Module['canvas'];
        canvas.width = this.windowedWidth;
        canvas.height = this.windowedHeight;
        // check if SDL is available       
        if (typeof SDL != "undefined") {
        	var flags = HEAPU32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)];
        	flags = flags & ~0x00800000; // clear SDL_FULLSCREEN flag
        	HEAP32[((SDL.screen+Runtime.QUANTUM_SIZE*0)>>2)]=flags
        }
        Browser.updateResizeListeners();
      }};var SDL={defaults:{width:320,height:200,copyOnLock:true},version:null,surfaces:{},canvasPool:[],events:[],fonts:[null],audios:[null],music:{audio:null,volume:1},mixerFrequency:22050,mixerFormat:32784,mixerNumChannels:2,mixerChunkSize:1024,channelMinimumNumber:0,GL:false,keyboardState:null,keyboardMap:{},textInput:false,startTime:null,buttonState:0,modState:0,DOMButtons:[0,0,0],DOMEventToSDLEvent:{},keyCodes:{16:1249,17:1248,18:1250,33:1099,34:1102,37:1104,38:1106,39:1103,40:1105,46:127,96:1112,97:1113,98:1114,99:1115,100:1116,101:1117,102:1118,103:1119,104:1120,105:1121,112:1082,113:1083,114:1084,115:1085,116:1086,117:1087,118:1088,119:1089,120:1090,121:1091,122:1092,123:1093,173:45,188:44,190:46,191:47,192:96},scanCodes:{9:43,13:40,27:41,32:44,44:54,46:55,47:56,48:39,49:30,50:31,51:32,52:33,53:34,54:35,55:36,56:37,57:38,92:49,97:4,98:5,99:6,100:7,101:8,102:9,103:10,104:11,105:12,106:13,107:14,108:15,109:16,110:17,111:18,112:19,113:20,114:21,115:22,116:23,117:24,118:25,119:26,120:27,121:28,122:29,305:224,308:226},structs:{Rect:{__size__:16,x:0,y:4,w:8,h:12},PixelFormat:{__size__:36,format:0,palette:4,BitsPerPixel:8,BytesPerPixel:9,padding1:10,padding2:11,Rmask:12,Gmask:16,Bmask:20,Amask:24,Rloss:28,Gloss:29,Bloss:30,Aloss:31,Rshift:32,Gshift:33,Bshift:34,Ashift:35},KeyboardEvent:{__size__:16,type:0,windowID:4,state:8,repeat:9,padding2:10,padding3:11,keysym:12},keysym:{__size__:16,scancode:0,sym:4,mod:8,unicode:12},TextInputEvent:{__size__:264,type:0,windowID:4,text:8},MouseMotionEvent:{__size__:28,type:0,windowID:4,state:8,padding1:9,padding2:10,padding3:11,x:12,y:16,xrel:20,yrel:24},MouseButtonEvent:{__size__:20,type:0,windowID:4,button:8,state:9,padding1:10,padding2:11,x:12,y:16},ResizeEvent:{__size__:12,type:0,w:4,h:8},AudioSpec:{__size__:24,freq:0,format:4,channels:6,silence:7,samples:8,size:12,callback:16,userdata:20},version:{__size__:3,major:0,minor:1,patch:2}},loadRect:function (rect) {
        return {
          x: HEAP32[((rect + SDL.structs.Rect.x)>>2)],
          y: HEAP32[((rect + SDL.structs.Rect.y)>>2)],
          w: HEAP32[((rect + SDL.structs.Rect.w)>>2)],
          h: HEAP32[((rect + SDL.structs.Rect.h)>>2)]
        };
      },loadColorToCSSRGB:function (color) {
        var rgba = HEAP32[((color)>>2)];
        return 'rgb(' + (rgba&255) + ',' + ((rgba >> 8)&255) + ',' + ((rgba >> 16)&255) + ')';
      },loadColorToCSSRGBA:function (color) {
        var rgba = HEAP32[((color)>>2)];
        return 'rgba(' + (rgba&255) + ',' + ((rgba >> 8)&255) + ',' + ((rgba >> 16)&255) + ',' + (((rgba >> 24)&255)/255) + ')';
      },translateColorToCSSRGBA:function (rgba) {
        return 'rgba(' + (rgba&0xff) + ',' + (rgba>>8 & 0xff) + ',' + (rgba>>16 & 0xff) + ',' + (rgba>>>24)/0xff + ')';
      },translateRGBAToCSSRGBA:function (r, g, b, a) {
        return 'rgba(' + (r&0xff) + ',' + (g&0xff) + ',' + (b&0xff) + ',' + (a&0xff)/255 + ')';
      },translateRGBAToColor:function (r, g, b, a) {
        return r | g << 8 | b << 16 | a << 24;
      },makeSurface:function (width, height, flags, usePageCanvas, source, rmask, gmask, bmask, amask) {
        flags = flags || 0;
        var surf = _malloc(14*Runtime.QUANTUM_SIZE);  // SDL_Surface has 14 fields of quantum size
        var buffer = _malloc(width*height*4); // TODO: only allocate when locked the first time
        var pixelFormat = _malloc(18*Runtime.QUANTUM_SIZE);
        flags |= 1; // SDL_HWSURFACE - this tells SDL_MUSTLOCK that this needs to be locked
        //surface with SDL_HWPALETTE flag is 8bpp surface (1 byte)
        var is_SDL_HWPALETTE = flags & 0x00200000;  
        var bpp = is_SDL_HWPALETTE ? 1 : 4;
        HEAP32[((surf+Runtime.QUANTUM_SIZE*0)>>2)]=flags         // SDL_Surface.flags
        HEAP32[((surf+Runtime.QUANTUM_SIZE*1)>>2)]=pixelFormat // SDL_Surface.format TODO
        HEAP32[((surf+Runtime.QUANTUM_SIZE*2)>>2)]=width         // SDL_Surface.w
        HEAP32[((surf+Runtime.QUANTUM_SIZE*3)>>2)]=height        // SDL_Surface.h
        HEAP32[((surf+Runtime.QUANTUM_SIZE*4)>>2)]=width * bpp       // SDL_Surface.pitch, assuming RGBA or indexed for now,
                                                                                 // since that is what ImageData gives us in browsers
        HEAP32[((surf+Runtime.QUANTUM_SIZE*5)>>2)]=buffer      // SDL_Surface.pixels
        HEAP32[((surf+Runtime.QUANTUM_SIZE*6)>>2)]=0      // SDL_Surface.offset
        HEAP32[((pixelFormat + SDL.structs.PixelFormat.format)>>2)]=-2042224636 // SDL_PIXELFORMAT_RGBA8888
        HEAP32[((pixelFormat + SDL.structs.PixelFormat.palette)>>2)]=0 // TODO
        HEAP8[((pixelFormat + SDL.structs.PixelFormat.BitsPerPixel)|0)]=bpp * 8
        HEAP8[((pixelFormat + SDL.structs.PixelFormat.BytesPerPixel)|0)]=bpp
        HEAP32[((pixelFormat + SDL.structs.PixelFormat.Rmask)>>2)]=rmask || 0x000000ff
        HEAP32[((pixelFormat + SDL.structs.PixelFormat.Gmask)>>2)]=gmask || 0x0000ff00
        HEAP32[((pixelFormat + SDL.structs.PixelFormat.Bmask)>>2)]=bmask || 0x00ff0000
        HEAP32[((pixelFormat + SDL.structs.PixelFormat.Amask)>>2)]=amask || 0xff000000
        // Decide if we want to use WebGL or not
        var useWebGL = (flags & 0x04000000) != 0; // SDL_OPENGL
        SDL.GL = SDL.GL || useWebGL;
        var canvas;
        if (!usePageCanvas) {
          if (SDL.canvasPool.length > 0) {
            canvas = SDL.canvasPool.pop();
          } else {
            canvas = document.createElement('canvas');
          }
          canvas.width = width;
          canvas.height = height;
        } else {
          canvas = Module['canvas'];
        }
        var ctx = Browser.createContext(canvas, useWebGL, usePageCanvas);
        SDL.surfaces[surf] = {
          width: width,
          height: height,
          canvas: canvas,
          ctx: ctx,
          surf: surf,
          buffer: buffer,
          pixelFormat: pixelFormat,
          alpha: 255,
          flags: flags,
          locked: 0,
          usePageCanvas: usePageCanvas,
          source: source,
          isFlagSet: function (flag) {
            return flags & flag;
          }
        };
        return surf;
      },copyIndexedColorData:function (surfData, rX, rY, rW, rH) {
        // HWPALETTE works with palette
        // setted by SDL_SetColors
        if (!surfData.colors) {
          return;
        }
        var fullWidth  = Module['canvas'].width;
        var fullHeight = Module['canvas'].height;
        var startX  = rX || 0;
        var startY  = rY || 0;
        var endX    = (rW || (fullWidth - startX)) + startX;
        var endY    = (rH || (fullHeight - startY)) + startY;
        var buffer  = surfData.buffer;
        var data    = surfData.image.data;
        var colors  = surfData.colors;
        for (var y = startY; y < endY; ++y) {
          var indexBase = y * fullWidth;
          var colorBase = indexBase * 4;
          for (var x = startX; x < endX; ++x) {
            // HWPALETTE have only 256 colors (not rgba)
            var index = HEAPU8[((buffer + indexBase + x)|0)] * 3;
            var colorOffset = colorBase + x * 4;
            data[colorOffset   ] = colors[index   ];
            data[colorOffset +1] = colors[index +1];
            data[colorOffset +2] = colors[index +2];
            //unused: data[colorOffset +3] = color[index +3];
          }
        }
      },freeSurface:function (surf) {
        var info = SDL.surfaces[surf];
        if (!info) return; // surface has already been freed
        if (!info.usePageCanvas && info.canvas) SDL.canvasPool.push(info.canvas);
        _free(info.buffer);
        _free(info.pixelFormat);
        _free(surf);
        SDL.surfaces[surf] = null;
      },touchX:0,touchY:0,receiveEvent:function (event) {
        switch(event.type) {
          case 'touchstart':
            event.preventDefault();
            var touch = event.touches[0];
            touchX = touch.pageX;
            touchY = touch.pageY;
            var event = {
              type: 'mousedown',
              button: 0,
              pageX: touchX,
              pageY: touchY
            };
            SDL.DOMButtons[0] = 1;
            SDL.events.push(event);
            break;
          case 'touchmove':
            event.preventDefault();
            var touch = event.touches[0];
            touchX = touch.pageX;
            touchY = touch.pageY;
            event = {
              type: 'mousemove',
              button: 0,
              pageX: touchX,
              pageY: touchY
            };
            SDL.events.push(event);
            break;
          case 'touchend':
            event.preventDefault();
            event = {
              type: 'mouseup',
              button: 0,
              pageX: touchX,
              pageY: touchY
            };
            SDL.DOMButtons[0] = 0;
            SDL.events.push(event);
            break;
          case 'mousemove':
            if (Browser.pointerLock) {
              // workaround for firefox bug 750111
              if ('mozMovementX' in event) {
                event['movementX'] = event['mozMovementX'];
                event['movementY'] = event['mozMovementY'];
              }
              // workaround for Firefox bug 782777
              if (event['movementX'] == 0 && event['movementY'] == 0) {
                // ignore a mousemove event if it doesn't contain any movement info
                // (without pointer lock, we infer movement from pageX/pageY, so this check is unnecessary)
                event.preventDefault();
                return;
              }
            }
            // fall through
          case 'keydown': case 'keyup': case 'keypress': case 'mousedown': case 'mouseup': case 'DOMMouseScroll': case 'mousewheel':
            if (event.type == 'DOMMouseScroll' || event.type == 'mousewheel') {
              var button = (event.type == 'DOMMouseScroll' ? event.detail : -event.wheelDelta) > 0 ? 4 : 3;
              var event2 = {
                type: 'mousedown',
                button: button,
                pageX: event.pageX,
                pageY: event.pageY
              };
              SDL.events.push(event2);
              event = {
                type: 'mouseup',
                button: button,
                pageX: event.pageX,
                pageY: event.pageY
              };
            } else if (event.type == 'mousedown') {
              SDL.DOMButtons[event.button] = 1;
            } else if (event.type == 'mouseup') {
              // ignore extra ups, can happen if we leave the canvas while pressing down, then return,
              // since we add a mouseup in that case
              if (!SDL.DOMButtons[event.button]) {
                event.preventDefault();
                return;
              }
              SDL.DOMButtons[event.button] = 0;
            }
            if (event.type == 'keypress' && !SDL.textInput) {
              break;
            }
            SDL.events.push(event);
            break;
          case 'mouseout':
            // Un-press all pressed mouse buttons, because we might miss the release outside of the canvas
            for (var i = 0; i < 3; i++) {
              if (SDL.DOMButtons[i]) {
                SDL.events.push({
                  type: 'mouseup',
                  button: i,
                  pageX: event.pageX,
                  pageY: event.pageY
                });
                SDL.DOMButtons[i] = 0;
              }
            }
            break;
          case 'blur':
          case 'visibilitychange': {
            // Un-press all pressed keys: TODO
            for (var code in SDL.keyboardMap) {
              SDL.events.push({
                type: 'keyup',
                keyCode: SDL.keyboardMap[code]
              });
            }
            break;
          }
          case 'unload':
            if (Browser.mainLoop.runner) {
              SDL.events.push(event);
              // Force-run a main event loop, since otherwise this event will never be caught!
              Browser.mainLoop.runner();
            }
            return;
          case 'resize':
            SDL.events.push(event);
            break;
        }
        if (SDL.events.length >= 10000) {
          Module.printErr('SDL event queue full, dropping events');
          SDL.events = SDL.events.slice(0, 10000);
        }
        // manually triggered resize event doesn't have a preventDefault member
        if (event.preventDefault) {
          event.preventDefault();
        }
        return;
      },makeCEvent:function (event, ptr) {
        if (typeof event === 'number') {
          // This is a pointer to a native C event that was SDL_PushEvent'ed
          _memcpy(ptr, event, SDL.structs.KeyboardEvent.__size__); // XXX
          return;
        }
        switch(event.type) {
          case 'keydown': case 'keyup': {
            var down = event.type === 'keydown';
            //Module.print('Received key event: ' + event.keyCode);
            var key = event.keyCode;
            if (key >= 65 && key <= 90) {
              key += 32; // make lowercase for SDL
            } else {
              key = SDL.keyCodes[event.keyCode] || event.keyCode;
            }
            var scan;
            if (key >= 1024) {
              scan = key - 1024;
            } else {
              scan = SDL.scanCodes[key] || key;
            }
            var code = SDL.keyCodes[event.keyCode] || event.keyCode;
            HEAP8[(((SDL.keyboardState)+(code))|0)]=down;
            if (down) {
              SDL.keyboardMap[code] = event.keyCode; // save the DOM input, which we can use to unpress it during blur
            } else {
              delete SDL.keyboardMap[code];
            }
            // TODO: lmeta, rmeta, numlock, capslock, KMOD_MODE, KMOD_RESERVED
            SDL.modState = (HEAP8[(((SDL.keyboardState)+(1248))|0)] ? 0x0040 | 0x0080 : 0) | // KMOD_LCTRL & KMOD_RCTRL
              (HEAP8[(((SDL.keyboardState)+(1249))|0)] ? 0x0001 | 0x0002 : 0) | // KMOD_LSHIFT & KMOD_RSHIFT
              (HEAP8[(((SDL.keyboardState)+(1250))|0)] ? 0x0100 | 0x0200 : 0); // KMOD_LALT & KMOD_RALT
            HEAP32[(((ptr)+(SDL.structs.KeyboardEvent.type))>>2)]=SDL.DOMEventToSDLEvent[event.type]
            HEAP8[(((ptr)+(SDL.structs.KeyboardEvent.state))|0)]=down ? 1 : 0
            HEAP8[(((ptr)+(SDL.structs.KeyboardEvent.repeat))|0)]=0 // TODO
            HEAP32[(((ptr)+(SDL.structs.KeyboardEvent.keysym + SDL.structs.keysym.scancode))>>2)]=scan
            HEAP32[(((ptr)+(SDL.structs.KeyboardEvent.keysym + SDL.structs.keysym.sym))>>2)]=key
            HEAP32[(((ptr)+(SDL.structs.KeyboardEvent.keysym + SDL.structs.keysym.mod))>>2)]=SDL.modState
            HEAP32[(((ptr)+(SDL.structs.KeyboardEvent.keysym + SDL.structs.keysym.unicode))>>2)]=key
            break;
          }
          case 'keypress': {
            HEAP32[(((ptr)+(SDL.structs.TextInputEvent.type))>>2)]=SDL.DOMEventToSDLEvent[event.type]
            // Not filling in windowID for now
            var cStr = intArrayFromString(String.fromCharCode(event.charCode));
            for (var i = 0; i < cStr.length; ++i) {
              HEAP8[(((ptr)+(SDL.structs.TextInputEvent.text + i))|0)]=cStr[i];
            }
            break;
          }
          case 'mousedown': case 'mouseup':
            if (event.type == 'mousedown') {
              // SDL_BUTTON(x) is defined as (1 << ((x)-1)).  SDL buttons are 1-3,
              // and DOM buttons are 0-2, so this means that the below formula is
              // correct.
              SDL.buttonState |= 1 << event.button;
            } else if (event.type == 'mouseup') {
              SDL.buttonState &= ~(1 << event.button);
            }
            // fall through
          case 'mousemove': {
            Browser.calculateMouseEvent(event);
            if (event.type != 'mousemove') {
              var down = event.type === 'mousedown';
              HEAP32[(((ptr)+(SDL.structs.MouseButtonEvent.type))>>2)]=SDL.DOMEventToSDLEvent[event.type];
              HEAP8[(((ptr)+(SDL.structs.MouseButtonEvent.button))|0)]=event.button+1; // DOM buttons are 0-2, SDL 1-3
              HEAP8[(((ptr)+(SDL.structs.MouseButtonEvent.state))|0)]=down ? 1 : 0;
              HEAP32[(((ptr)+(SDL.structs.MouseButtonEvent.x))>>2)]=Browser.mouseX;
              HEAP32[(((ptr)+(SDL.structs.MouseButtonEvent.y))>>2)]=Browser.mouseY;
            } else {
              HEAP32[(((ptr)+(SDL.structs.MouseMotionEvent.type))>>2)]=SDL.DOMEventToSDLEvent[event.type];
              HEAP8[(((ptr)+(SDL.structs.MouseMotionEvent.state))|0)]=SDL.buttonState;
              HEAP32[(((ptr)+(SDL.structs.MouseMotionEvent.x))>>2)]=Browser.mouseX;
              HEAP32[(((ptr)+(SDL.structs.MouseMotionEvent.y))>>2)]=Browser.mouseY;
              HEAP32[(((ptr)+(SDL.structs.MouseMotionEvent.xrel))>>2)]=Browser.mouseMovementX;
              HEAP32[(((ptr)+(SDL.structs.MouseMotionEvent.yrel))>>2)]=Browser.mouseMovementY;
            }
            break;
          }
          case 'unload': {
            HEAP32[(((ptr)+(SDL.structs.KeyboardEvent.type))>>2)]=SDL.DOMEventToSDLEvent[event.type];
            break;
          }
          case 'resize': {
            HEAP32[(((ptr)+(SDL.structs.KeyboardEvent.type))>>2)]=SDL.DOMEventToSDLEvent[event.type];
            HEAP32[(((ptr)+(SDL.structs.ResizeEvent.w))>>2)]=event.w;
            HEAP32[(((ptr)+(SDL.structs.ResizeEvent.h))>>2)]=event.h;
            break;
          }
          default: throw 'Unhandled SDL event: ' + event.type;
        }
      },estimateTextWidth:function (fontData, text) {
        var h = fontData.size;
        var fontString = h + 'px ' + fontData.name;
        var tempCtx = SDL.ttfContext;
        tempCtx.save();
        tempCtx.font = fontString;
        var ret = tempCtx.measureText(text).width | 0;
        tempCtx.restore();
        return ret;
      },allocateChannels:function (num) { // called from Mix_AllocateChannels and init
        if (SDL.numChannels && SDL.numChannels >= num) return;
        SDL.numChannels = num;
        SDL.channels = [];
        for (var i = 0; i < num; i++) {
          SDL.channels[i] = {
            audio: null,
            volume: 1.0
          };
        }
      },setGetVolume:function (info, volume) {
        if (!info) return 0;
        var ret = info.volume * 128; // MIX_MAX_VOLUME
        if (volume != -1) {
          info.volume = volume / 128;
          if (info.audio) info.audio.volume = info.volume;
        }
        return ret;
      },debugSurface:function (surfData) {
        console.log('dumping surface ' + [surfData.surf, surfData.source, surfData.width, surfData.height]);
        var image = surfData.ctx.getImageData(0, 0, surfData.width, surfData.height);
        var data = image.data;
        var num = Math.min(surfData.width, surfData.height);
        for (var i = 0; i < num; i++) {
          console.log('   diagonal ' + i + ':' + [data[i*surfData.width*4 + i*4 + 0], data[i*surfData.width*4 + i*4 + 1], data[i*surfData.width*4 + i*4 + 2], data[i*surfData.width*4 + i*4 + 3]]);
        }
      }};function _SDL_GetVideoInfo() {
      // %struct.SDL_VideoInfo = type { i32, i32, %struct.SDL_PixelFormat*, i32, i32 } - 5 fields of quantum size
      var ret = _malloc(5*Runtime.QUANTUM_SIZE);
      HEAP32[((ret+Runtime.QUANTUM_SIZE*0)>>2)]=0 // TODO
      HEAP32[((ret+Runtime.QUANTUM_SIZE*1)>>2)]=0 // TODO
      HEAP32[((ret+Runtime.QUANTUM_SIZE*2)>>2)]=0
      HEAP32[((ret+Runtime.QUANTUM_SIZE*3)>>2)]=Module["canvas"].width
      HEAP32[((ret+Runtime.QUANTUM_SIZE*4)>>2)]=Module["canvas"].height
      return ret;
    }
  function _SDL_GetMouseState(x, y) {
      if (x) HEAP32[((x)>>2)]=Browser.mouseX;
      if (y) HEAP32[((y)>>2)]=Browser.mouseY;
      return SDL.buttonState;
    }
  function _emscripten_cancel_main_loop() {
      Browser.mainLoop.scheduler = null;
      Browser.mainLoop.shouldPause = true;
    }
  Module["_strlen"] = _strlen;
  function __reallyNegative(x) {
      return x < 0 || (x === 0 && (1/x) === -Infinity);
    }function __formatString(format, varargs) {
      var textIndex = format;
      var argIndex = 0;
      function getNextArg(type) {
        // NOTE: Explicitly ignoring type safety. Otherwise this fails:
        //       int x = 4; printf("%c\n", (char)x);
        var ret;
        if (type === 'double') {
          ret = HEAPF64[(((varargs)+(argIndex))>>3)];
        } else if (type == 'i64') {
          ret = [HEAP32[(((varargs)+(argIndex))>>2)],
                 HEAP32[(((varargs)+(argIndex+8))>>2)]];
          argIndex += 8; // each 32-bit chunk is in a 64-bit block
        } else {
          type = 'i32'; // varargs are always i32, i64, or double
          ret = HEAP32[(((varargs)+(argIndex))>>2)];
        }
        argIndex += Math.max(Runtime.getNativeFieldSize(type), Runtime.getAlignSize(type, null, true));
        return ret;
      }
      var ret = [];
      var curr, next, currArg;
      while(1) {
        var startTextIndex = textIndex;
        curr = HEAP8[(textIndex)];
        if (curr === 0) break;
        next = HEAP8[((textIndex+1)|0)];
        if (curr == 37) {
          // Handle flags.
          var flagAlwaysSigned = false;
          var flagLeftAlign = false;
          var flagAlternative = false;
          var flagZeroPad = false;
          flagsLoop: while (1) {
            switch (next) {
              case 43:
                flagAlwaysSigned = true;
                break;
              case 45:
                flagLeftAlign = true;
                break;
              case 35:
                flagAlternative = true;
                break;
              case 48:
                if (flagZeroPad) {
                  break flagsLoop;
                } else {
                  flagZeroPad = true;
                  break;
                }
              default:
                break flagsLoop;
            }
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          }
          // Handle width.
          var width = 0;
          if (next == 42) {
            width = getNextArg('i32');
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
          } else {
            while (next >= 48 && next <= 57) {
              width = width * 10 + (next - 48);
              textIndex++;
              next = HEAP8[((textIndex+1)|0)];
            }
          }
          // Handle precision.
          var precisionSet = false;
          if (next == 46) {
            var precision = 0;
            precisionSet = true;
            textIndex++;
            next = HEAP8[((textIndex+1)|0)];
            if (next == 42) {
              precision = getNextArg('i32');
              textIndex++;
            } else {
              while(1) {
                var precisionChr = HEAP8[((textIndex+1)|0)];
                if (precisionChr < 48 ||
                    precisionChr > 57) break;
                precision = precision * 10 + (precisionChr - 48);
                textIndex++;
              }
            }
            next = HEAP8[((textIndex+1)|0)];
          } else {
            var precision = 6; // Standard default.
          }
          // Handle integer sizes. WARNING: These assume a 32-bit architecture!
          var argSize;
          switch (String.fromCharCode(next)) {
            case 'h':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 104) {
                textIndex++;
                argSize = 1; // char (actually i32 in varargs)
              } else {
                argSize = 2; // short (actually i32 in varargs)
              }
              break;
            case 'l':
              var nextNext = HEAP8[((textIndex+2)|0)];
              if (nextNext == 108) {
                textIndex++;
                argSize = 8; // long long
              } else {
                argSize = 4; // long
              }
              break;
            case 'L': // long long
            case 'q': // int64_t
            case 'j': // intmax_t
              argSize = 8;
              break;
            case 'z': // size_t
            case 't': // ptrdiff_t
            case 'I': // signed ptrdiff_t or unsigned size_t
              argSize = 4;
              break;
            default:
              argSize = null;
          }
          if (argSize) textIndex++;
          next = HEAP8[((textIndex+1)|0)];
          // Handle type specifier.
          switch (String.fromCharCode(next)) {
            case 'd': case 'i': case 'u': case 'o': case 'x': case 'X': case 'p': {
              // Integer.
              var signed = next == 100 || next == 105;
              argSize = argSize || 4;
              var currArg = getNextArg('i' + (argSize * 8));
              var origArg = currArg;
              var argText;
              // Flatten i64-1 [low, high] into a (slightly rounded) double
              if (argSize == 8) {
                currArg = Runtime.makeBigInt(currArg[0], currArg[1], next == 117);
              }
              // Truncate to requested size.
              if (argSize <= 4) {
                var limit = Math.pow(256, argSize) - 1;
                currArg = (signed ? reSign : unSign)(currArg & limit, argSize * 8);
              }
              // Format the number.
              var currAbsArg = Math.abs(currArg);
              var prefix = '';
              if (next == 100 || next == 105) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], null); else
                argText = reSign(currArg, 8 * argSize, 1).toString(10);
              } else if (next == 117) {
                if (argSize == 8 && i64Math) argText = i64Math.stringify(origArg[0], origArg[1], true); else
                argText = unSign(currArg, 8 * argSize, 1).toString(10);
                currArg = Math.abs(currArg);
              } else if (next == 111) {
                argText = (flagAlternative ? '0' : '') + currAbsArg.toString(8);
              } else if (next == 120 || next == 88) {
                prefix = (flagAlternative && currArg != 0) ? '0x' : '';
                if (argSize == 8 && i64Math) {
                  if (origArg[1]) {
                    argText = (origArg[1]>>>0).toString(16);
                    var lower = (origArg[0]>>>0).toString(16);
                    while (lower.length < 8) lower = '0' + lower;
                    argText += lower;
                  } else {
                    argText = (origArg[0]>>>0).toString(16);
                  }
                } else
                if (currArg < 0) {
                  // Represent negative numbers in hex as 2's complement.
                  currArg = -currArg;
                  argText = (currAbsArg - 1).toString(16);
                  var buffer = [];
                  for (var i = 0; i < argText.length; i++) {
                    buffer.push((0xF - parseInt(argText[i], 16)).toString(16));
                  }
                  argText = buffer.join('');
                  while (argText.length < argSize * 2) argText = 'f' + argText;
                } else {
                  argText = currAbsArg.toString(16);
                }
                if (next == 88) {
                  prefix = prefix.toUpperCase();
                  argText = argText.toUpperCase();
                }
              } else if (next == 112) {
                if (currAbsArg === 0) {
                  argText = '(nil)';
                } else {
                  prefix = '0x';
                  argText = currAbsArg.toString(16);
                }
              }
              if (precisionSet) {
                while (argText.length < precision) {
                  argText = '0' + argText;
                }
              }
              // Add sign if needed
              if (flagAlwaysSigned) {
                if (currArg < 0) {
                  prefix = '-' + prefix;
                } else {
                  prefix = '+' + prefix;
                }
              }
              // Add padding.
              while (prefix.length + argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad) {
                    argText = '0' + argText;
                  } else {
                    prefix = ' ' + prefix;
                  }
                }
              }
              // Insert the result into the buffer.
              argText = prefix + argText;
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 'f': case 'F': case 'e': case 'E': case 'g': case 'G': {
              // Float.
              var currArg = getNextArg('double');
              var argText;
              if (isNaN(currArg)) {
                argText = 'nan';
                flagZeroPad = false;
              } else if (!isFinite(currArg)) {
                argText = (currArg < 0 ? '-' : '') + 'inf';
                flagZeroPad = false;
              } else {
                var isGeneral = false;
                var effectivePrecision = Math.min(precision, 20);
                // Convert g/G to f/F or e/E, as per:
                // http://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html
                if (next == 103 || next == 71) {
                  isGeneral = true;
                  precision = precision || 1;
                  var exponent = parseInt(currArg.toExponential(effectivePrecision).split('e')[1], 10);
                  if (precision > exponent && exponent >= -4) {
                    next = ((next == 103) ? 'f' : 'F').charCodeAt(0);
                    precision -= exponent + 1;
                  } else {
                    next = ((next == 103) ? 'e' : 'E').charCodeAt(0);
                    precision--;
                  }
                  effectivePrecision = Math.min(precision, 20);
                }
                if (next == 101 || next == 69) {
                  argText = currArg.toExponential(effectivePrecision);
                  // Make sure the exponent has at least 2 digits.
                  if (/[eE][-+]\d$/.test(argText)) {
                    argText = argText.slice(0, -1) + '0' + argText.slice(-1);
                  }
                } else if (next == 102 || next == 70) {
                  argText = currArg.toFixed(effectivePrecision);
                  if (currArg === 0 && __reallyNegative(currArg)) {
                    argText = '-' + argText;
                  }
                }
                var parts = argText.split('e');
                if (isGeneral && !flagAlternative) {
                  // Discard trailing zeros and periods.
                  while (parts[0].length > 1 && parts[0].indexOf('.') != -1 &&
                         (parts[0].slice(-1) == '0' || parts[0].slice(-1) == '.')) {
                    parts[0] = parts[0].slice(0, -1);
                  }
                } else {
                  // Make sure we have a period in alternative mode.
                  if (flagAlternative && argText.indexOf('.') == -1) parts[0] += '.';
                  // Zero pad until required precision.
                  while (precision > effectivePrecision++) parts[0] += '0';
                }
                argText = parts[0] + (parts.length > 1 ? 'e' + parts[1] : '');
                // Capitalize 'E' if needed.
                if (next == 69) argText = argText.toUpperCase();
                // Add sign.
                if (flagAlwaysSigned && currArg >= 0) {
                  argText = '+' + argText;
                }
              }
              // Add padding.
              while (argText.length < width) {
                if (flagLeftAlign) {
                  argText += ' ';
                } else {
                  if (flagZeroPad && (argText[0] == '-' || argText[0] == '+')) {
                    argText = argText[0] + '0' + argText.slice(1);
                  } else {
                    argText = (flagZeroPad ? '0' : ' ') + argText;
                  }
                }
              }
              // Adjust case.
              if (next < 97) argText = argText.toUpperCase();
              // Insert the result into the buffer.
              argText.split('').forEach(function(chr) {
                ret.push(chr.charCodeAt(0));
              });
              break;
            }
            case 's': {
              // String.
              var arg = getNextArg('i8*');
              var argLength = arg ? _strlen(arg) : '(null)'.length;
              if (precisionSet) argLength = Math.min(argLength, precision);
              if (!flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              if (arg) {
                for (var i = 0; i < argLength; i++) {
                  ret.push(HEAPU8[((arg++)|0)]);
                }
              } else {
                ret = ret.concat(intArrayFromString('(null)'.substr(0, argLength), true));
              }
              if (flagLeftAlign) {
                while (argLength < width--) {
                  ret.push(32);
                }
              }
              break;
            }
            case 'c': {
              // Character.
              if (flagLeftAlign) ret.push(getNextArg('i8'));
              while (--width > 0) {
                ret.push(32);
              }
              if (!flagLeftAlign) ret.push(getNextArg('i8'));
              break;
            }
            case 'n': {
              // Write the length written so far to the next parameter.
              var ptr = getNextArg('i32*');
              HEAP32[((ptr)>>2)]=ret.length
              break;
            }
            case '%': {
              // Literal percent sign.
              ret.push(curr);
              break;
            }
            default: {
              // Unknown specifiers remain untouched.
              for (var i = startTextIndex; i < textIndex + 2; i++) {
                ret.push(HEAP8[(i)]);
              }
            }
          }
          textIndex += 2;
          // TODO: Support a/A (hex float) and m (last error) specifiers.
          // TODO: Support %1${specifier} for arg selection.
        } else {
          ret.push(curr);
          textIndex += 1;
        }
      }
      return ret;
    }function _snprintf(s, n, format, varargs) {
      // int snprintf(char *restrict s, size_t n, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var limit = (n === undefined) ? result.length
                                    : Math.min(result.length, Math.max(n - 1, 0));
      if (s < 0) {
        s = -s;
        var buf = _malloc(limit+1);
        HEAP32[((s)>>2)]=buf;
        s = buf;
      }
      for (var i = 0; i < limit; i++) {
        HEAP8[(((s)+(i))|0)]=result[i];
      }
      if (limit < n || (n === undefined)) HEAP8[(((s)+(i))|0)]=0;
      return result.length;
    }function _sprintf(s, format, varargs) {
      // int sprintf(char *restrict s, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      return _snprintf(s, undefined, format, varargs);
    }
  Module["_strcat"] = _strcat;
  var _llvm_memset_p0i8_i32=_memset;
  function _llvm_lifetime_start() {}
  function _llvm_lifetime_end() {}
  function _strncmp(px, py, n) {
      var i = 0;
      while (i < n) {
        var x = HEAPU8[(((px)+(i))|0)];
        var y = HEAPU8[(((py)+(i))|0)];
        if (x == y && x == 0) return 0;
        if (x == 0) return -1;
        if (y == 0) return 1;
        if (x == y) {
          i ++;
          continue;
        } else {
          return x > y ? 1 : -1;
        }
      }
      return 0;
    }function _strcmp(px, py) {
      return _strncmp(px, py, TOTAL_MEMORY);
    }
  function _strdup(ptr) {
      var len = _strlen(ptr);
      var newStr = _malloc(len + 1);
      (_memcpy(newStr, ptr, len)|0);
      HEAP8[(((newStr)+(len))|0)]=0;
      return newStr;
    }
  function _send(fd, buf, len, flags) {
      var info = FS.streams[fd];
      if (!info) return -1;
      info.sender(HEAPU8.subarray(buf, buf+len));
      return len;
    }
  function _pwrite(fildes, buf, nbyte, offset) {
      // ssize_t pwrite(int fildes, const void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.streams[fildes];
      if (!stream || stream.object.isDevice) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      } else if (!stream.isWrite) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      } else if (stream.object.isFolder) {
        ___setErrNo(ERRNO_CODES.EISDIR);
        return -1;
      } else if (nbyte < 0 || offset < 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        var contents = stream.object.contents;
        while (contents.length < offset) contents.push(0);
        for (var i = 0; i < nbyte; i++) {
          contents[offset + i] = HEAPU8[(((buf)+(i))|0)];
        }
        stream.object.timestamp = Date.now();
        return i;
      }
    }function _write(fildes, buf, nbyte) {
      // ssize_t write(int fildes, const void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/write.html
      var stream = FS.streams[fildes];
      if (stream && ('socket' in stream)) {
          return _send(fildes, buf, nbyte, 0);
      } else if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      } else if (!stream.isWrite) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      } else if (nbyte < 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        if (stream.object.isDevice) {
          if (stream.object.output) {
            for (var i = 0; i < nbyte; i++) {
              try {
                stream.object.output(HEAP8[(((buf)+(i))|0)]);
              } catch (e) {
                ___setErrNo(ERRNO_CODES.EIO);
                return -1;
              }
            }
            stream.object.timestamp = Date.now();
            return i;
          } else {
            ___setErrNo(ERRNO_CODES.ENXIO);
            return -1;
          }
        } else {
          var bytesWritten = _pwrite(fildes, buf, nbyte, stream.position);
          if (bytesWritten != -1) stream.position += bytesWritten;
          return bytesWritten;
        }
      }
    }function _fwrite(ptr, size, nitems, stream) {
      // size_t fwrite(const void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fwrite.html
      var bytesToWrite = nitems * size;
      if (bytesToWrite == 0) return 0;
      var bytesWritten = _write(stream, ptr, bytesToWrite);
      if (bytesWritten == -1) {
        if (FS.streams[stream]) FS.streams[stream].error = true;
        return 0;
      } else {
        return Math.floor(bytesWritten / size);
      }
    }function _fprintf(stream, format, varargs) {
      // int fprintf(FILE *restrict stream, const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var result = __formatString(format, varargs);
      var stack = Runtime.stackSave();
      var ret = _fwrite(allocate(result, 'i8', ALLOC_STACK), 1, result.length, stream);
      Runtime.stackRestore(stack);
      return ret;
    }
  function _fflush(stream) {
      // int fflush(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fflush.html
      var flush = function(filedes) {
        // Right now we write all data directly, except for output devices.
        if (FS.streams[filedes] && FS.streams[filedes].object.output) {
          if (!FS.streams[filedes].object.isTerminal) { // don't flush terminals, it would cause a \n to also appear
            FS.streams[filedes].object.output(null);
          }
        }
      };
      try {
        if (stream === 0) {
          for (var i = 0; i < FS.streams.length; i++) if (FS.streams[i]) flush(i);
        } else {
          flush(stream);
        }
        return 0;
      } catch (e) {
        ___setErrNo(ERRNO_CODES.EIO);
        return -1;
      }
    }
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      function ExitStatus() {
        this.name = "ExitStatus";
        this.message = "Program terminated with exit(" + status + ")";
        this.status = status;
        Module.print('Exit Status: ' + status);
      };
      ExitStatus.prototype = new Error();
      ExitStatus.prototype.constructor = ExitStatus;
      exitRuntime();
      ABORT = true;
      throw new ExitStatus();
    }function _exit(status) {
      __exit(status);
    }
  var _llvm_va_start=undefined;
  function _llvm_va_end() {}
  function _isspace(chr) {
      return chr in { 32: 0, 9: 0, 10: 0, 11: 0, 12: 0, 13: 0 };
    }function __parseInt(str, endptr, base, min, max, bits, unsign) {
      // Skip space.
      while (_isspace(HEAP8[(str)])) str++;
      // Check for a plus/minus sign.
      var multiplier = 1;
      if (HEAP8[(str)] == 45) {
        multiplier = -1;
        str++;
      } else if (HEAP8[(str)] == 43) {
        str++;
      }
      // Find base.
      var finalBase = base;
      if (!finalBase) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            finalBase = 16;
            str += 2;
          } else {
            finalBase = 8;
            str++;
          }
        }
      } else if (finalBase==16) {
        if (HEAP8[(str)] == 48) {
          if (HEAP8[((str+1)|0)] == 120 ||
              HEAP8[((str+1)|0)] == 88) {
            str += 2;
          }
        }
      }
      if (!finalBase) finalBase = 10;
      // Get digits.
      var chr;
      var ret = 0;
      while ((chr = HEAP8[(str)]) != 0) {
        var digit = parseInt(String.fromCharCode(chr), finalBase);
        if (isNaN(digit)) {
          break;
        } else {
          ret = ret * finalBase + digit;
          str++;
        }
      }
      // Apply sign.
      ret *= multiplier;
      // Set end pointer.
      if (endptr) {
        HEAP32[((endptr)>>2)]=str
      }
      // Unsign if needed.
      if (unsign) {
        if (Math.abs(ret) > max) {
          ret = max;
          ___setErrNo(ERRNO_CODES.ERANGE);
        } else {
          ret = unSign(ret, bits);
        }
      }
      // Validate range.
      if (ret > max || ret < min) {
        ret = ret > max ? max : min;
        ___setErrNo(ERRNO_CODES.ERANGE);
      }
      if (bits == 64) {
        return ((asm["setTempRet0"](((Math.min((+(Math.floor((ret)/(+(4294967296))))), (+(4294967295))))|0)>>>0),ret>>>0)|0);
      }
      return ret;
    }function _strtoul(str, endptr, base) {
      return __parseInt(str, endptr, base, 0, 4294967295, 32, true);  // ULONG_MAX.
    }
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }
  function _SDL_Init(what) {
      SDL.startTime = Date.now();
      // capture all key events. we just keep down and up, but also capture press to prevent default actions
      if (!Module['doNotCaptureKeyboard']) {
        document.addEventListener("keydown", SDL.receiveEvent);
        document.addEventListener("keyup", SDL.receiveEvent);
        document.addEventListener("keypress", SDL.receiveEvent);
        document.addEventListener("blur", SDL.receiveEvent);
        document.addEventListener("visibilitychange", SDL.receiveEvent);
      }
      window.addEventListener("unload", SDL.receiveEvent);
      SDL.keyboardState = _malloc(0x10000); // Our SDL needs 512, but 64K is safe for older SDLs
      _memset(SDL.keyboardState, 0, 0x10000);
      // Initialize this structure carefully for closure
      SDL.DOMEventToSDLEvent['keydown'] = 0x300 /* SDL_KEYDOWN */;
      SDL.DOMEventToSDLEvent['keyup'] = 0x301 /* SDL_KEYUP */;
      SDL.DOMEventToSDLEvent['keypress'] = 0x303 /* SDL_TEXTINPUT */;
      SDL.DOMEventToSDLEvent['mousedown'] = 0x401 /* SDL_MOUSEBUTTONDOWN */;
      SDL.DOMEventToSDLEvent['mouseup'] = 0x402 /* SDL_MOUSEBUTTONUP */;
      SDL.DOMEventToSDLEvent['mousemove'] = 0x400 /* SDL_MOUSEMOTION */;
      SDL.DOMEventToSDLEvent['unload'] = 0x100 /* SDL_QUIT */;
      SDL.DOMEventToSDLEvent['resize'] = 0x7001 /* SDL_VIDEORESIZE/SDL_EVENT_COMPAT2 */;
      return 0; // success
    }
  function _signal(sig, func) {
      // TODO
      return 0;
    }
  var ___dirent_struct_layout={__size__:1040,d_ino:0,d_name:4,d_off:1028,d_reclen:1032,d_type:1036};function _open(path, oflag, varargs) {
      // int open(const char *path, int oflag, ...);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/open.html
      // NOTE: This implementation tries to mimic glibc rather than strictly
      // following the POSIX standard.
      var mode = HEAP32[((varargs)>>2)];
      // Simplify flags.
      var accessMode = oflag & 3;
      var isWrite = accessMode != 0;
      var isRead = accessMode != 1;
      var isCreate = Boolean(oflag & 512);
      var isExistCheck = Boolean(oflag & 2048);
      var isTruncate = Boolean(oflag & 1024);
      var isAppend = Boolean(oflag & 8);
      // Verify path.
      var origPath = path;
      path = FS.analyzePath(Pointer_stringify(path));
      if (!path.parentExists) {
        ___setErrNo(path.error);
        return -1;
      }
      var target = path.object || null;
      var finalPath;
      // Verify the file exists, create if needed and allowed.
      if (target) {
        if (isCreate && isExistCheck) {
          ___setErrNo(ERRNO_CODES.EEXIST);
          return -1;
        }
        if ((isWrite || isTruncate) && target.isFolder) {
          ___setErrNo(ERRNO_CODES.EISDIR);
          return -1;
        }
        if (isRead && !target.read || isWrite && !target.write) {
          ___setErrNo(ERRNO_CODES.EACCES);
          return -1;
        }
        if (isTruncate && !target.isDevice) {
          target.contents = [];
        } else {
          if (!FS.forceLoadFile(target)) {
            ___setErrNo(ERRNO_CODES.EIO);
            return -1;
          }
        }
        finalPath = path.path;
      } else {
        if (!isCreate) {
          ___setErrNo(ERRNO_CODES.ENOENT);
          return -1;
        }
        if (!path.parentObject.write) {
          ___setErrNo(ERRNO_CODES.EACCES);
          return -1;
        }
        target = FS.createDataFile(path.parentObject, path.name, [],
                                   mode & 0x100, mode & 0x80);  // S_IRUSR, S_IWUSR.
        finalPath = path.parentPath + '/' + path.name;
      }
      // Actually create an open stream.
      var id;
      if (target.isFolder) {
        var entryBuffer = 0;
        if (___dirent_struct_layout) {
          entryBuffer = _malloc(___dirent_struct_layout.__size__);
        }
        var contents = [];
        for (var key in target.contents) contents.push(key);
        id = FS.createFileHandle({
          path: finalPath,
          object: target,
          // An index into contents. Special values: -2 is ".", -1 is "..".
          position: -2,
          isRead: true,
          isWrite: false,
          isAppend: false,
          error: false,
          eof: false,
          ungotten: [],
          // Folder-specific properties:
          // Remember the contents at the time of opening in an array, so we can
          // seek between them relying on a single order.
          contents: contents,
          // Each stream has its own area for readdir() returns.
          currentEntry: entryBuffer
        });
      } else {
        id = FS.createFileHandle({
          path: finalPath,
          object: target,
          position: 0,
          isRead: isRead,
          isWrite: isWrite,
          isAppend: isAppend,
          error: false,
          eof: false,
          ungotten: []
        });
      }
      return id;
    }function _fopen(filename, mode) {
      // FILE *fopen(const char *restrict filename, const char *restrict mode);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fopen.html
      var flags;
      mode = Pointer_stringify(mode);
      if (mode[0] == 'r') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 0;
        }
      } else if (mode[0] == 'w') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 512;
        flags |= 1024;
      } else if (mode[0] == 'a') {
        if (mode.indexOf('+') != -1) {
          flags = 2;
        } else {
          flags = 1;
        }
        flags |= 512;
        flags |= 8;
      } else {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return 0;
      }
      var ret = _open(filename, flags, allocate([0x1FF, 0, 0, 0], 'i32', ALLOC_STACK));  // All creation permissions.
      return (ret == -1) ? 0 : ret;
    }
  function _recv(fd, buf, len, flags) {
      var info = FS.streams[fd];
      if (!info) return -1;
      if (!info.hasData()) {
        ___setErrNo(ERRNO_CODES.EAGAIN); // no data, and all sockets are nonblocking, so this is the right behavior
        return -1;
      }
      var buffer = info.inQueue.shift();
      if (len < buffer.length) {
        if (info.stream) {
          // This is tcp (reliable), so if not all was read, keep it
          info.inQueue.unshift(buffer.subarray(len));
        }
        buffer = buffer.subarray(0, len);
      }
      HEAPU8.set(buffer, buf);
      return buffer.length;
    }
  function _pread(fildes, buf, nbyte, offset) {
      // ssize_t pread(int fildes, void *buf, size_t nbyte, off_t offset);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.streams[fildes];
      if (!stream || stream.object.isDevice) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      } else if (!stream.isRead) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      } else if (stream.object.isFolder) {
        ___setErrNo(ERRNO_CODES.EISDIR);
        return -1;
      } else if (nbyte < 0 || offset < 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        var bytesRead = 0;
        while (stream.ungotten.length && nbyte > 0) {
          HEAP8[((buf++)|0)]=stream.ungotten.pop()
          nbyte--;
          bytesRead++;
        }
        var contents = stream.object.contents;
        var size = Math.min(contents.length - offset, nbyte);
        if (contents.subarray) { // typed array
          HEAPU8.set(contents.subarray(offset, offset+size), buf);
        } else
        if (contents.slice) { // normal array
          for (var i = 0; i < size; i++) {
            HEAP8[(((buf)+(i))|0)]=contents[offset + i]
          }
        } else {
          for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
            HEAP8[(((buf)+(i))|0)]=contents.get(offset + i)
          }
        }
        bytesRead += size;
        return bytesRead;
      }
    }function _read(fildes, buf, nbyte) {
      // ssize_t read(int fildes, void *buf, size_t nbyte);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/read.html
      var stream = FS.streams[fildes];
      if (stream && ('socket' in stream)) {
        return _recv(fildes, buf, nbyte, 0);
      } else if (!stream) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      } else if (!stream.isRead) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      } else if (nbyte < 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        var bytesRead;
        if (stream.object.isDevice) {
          if (stream.object.input) {
            bytesRead = 0;
            while (stream.ungotten.length && nbyte > 0) {
              HEAP8[((buf++)|0)]=stream.ungotten.pop()
              nbyte--;
              bytesRead++;
            }
            for (var i = 0; i < nbyte; i++) {
              try {
                var result = stream.object.input();
              } catch (e) {
                ___setErrNo(ERRNO_CODES.EIO);
                return -1;
              }
              if (result === undefined && bytesRead === 0) {
                ___setErrNo(ERRNO_CODES.EAGAIN);
                return -1;
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              HEAP8[(((buf)+(i))|0)]=result
            }
            return bytesRead;
          } else {
            ___setErrNo(ERRNO_CODES.ENXIO);
            return -1;
          }
        } else {
          var ungotSize = stream.ungotten.length;
          bytesRead = _pread(fildes, buf, nbyte, stream.position);
          if (bytesRead != -1) {
            stream.position += (stream.ungotten.length - ungotSize) + bytesRead;
          }
          return bytesRead;
        }
      }
    }function _fread(ptr, size, nitems, stream) {
      // size_t fread(void *restrict ptr, size_t size, size_t nitems, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fread.html
      var bytesToRead = nitems * size;
      if (bytesToRead == 0) return 0;
      var bytesRead = _read(stream, ptr, bytesToRead);
      var streamObj = FS.streams[stream];
      if (bytesRead == -1) {
        if (streamObj) streamObj.error = true;
        return 0;
      } else {
        if (bytesRead < bytesToRead) streamObj.eof = true;
        return Math.floor(bytesRead / size);
      }
    }
  function _close(fildes) {
      // int close(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/close.html
      if (FS.streams[fildes]) {
        if (FS.streams[fildes].currentEntry) {
          _free(FS.streams[fildes].currentEntry);
        }
        FS.streams[fildes] = null;
        return 0;
      } else {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
    }
  function _fsync(fildes) {
      // int fsync(int fildes);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fsync.html
      if (FS.streams[fildes]) {
        // We write directly to the file system, so there's nothing to do here.
        return 0;
      } else {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
    }function _fclose(stream) {
      // int fclose(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fclose.html
      _fsync(stream);
      return _close(stream);
    }
  function _time(ptr) {
      var ret = Math.floor(Date.now()/1000);
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret
      }
      return ret;
    }
  Module["_memcmp"] = _memcmp;
  Module["_strcpy"] = _strcpy;
  function _lseek(fildes, offset, whence) {
      // off_t lseek(int fildes, off_t offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/lseek.html
      if (FS.streams[fildes] && !FS.streams[fildes].object.isDevice) {
        var stream = FS.streams[fildes];
        var position = offset;
        if (whence === 1) {  // SEEK_CUR.
          position += stream.position;
        } else if (whence === 2) {  // SEEK_END.
          position += stream.object.contents.length;
        }
        if (position < 0) {
          ___setErrNo(ERRNO_CODES.EINVAL);
          return -1;
        } else {
          stream.ungotten = [];
          stream.position = position;
          return position;
        }
      } else {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
    }function _fseek(stream, offset, whence) {
      // int fseek(FILE *stream, long offset, int whence);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fseek.html
      var ret = _lseek(stream, offset, whence);
      if (ret == -1) {
        return -1;
      } else {
        FS.streams[stream].eof = false;
        return 0;
      }
    }
  function _ftell(stream) {
      // long ftell(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ftell.html
      if (FS.streams[stream]) {
        stream = FS.streams[stream];
        if (stream.object.isDevice) {
          ___setErrNo(ERRNO_CODES.ESPIPE);
          return -1;
        } else {
          return stream.position;
        }
      } else {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
    }
  function _truncate(path, length) {
      // int truncate(const char *path, off_t length);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/truncate.html
      // NOTE: The path argument may be a string, to simplify ftruncate().
      if (length < 0) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        if (typeof path !== 'string') path = Pointer_stringify(path);
        var target = FS.findObject(path);
        if (target === null) return -1;
        if (target.isFolder) {
          ___setErrNo(ERRNO_CODES.EISDIR);
          return -1;
        } else if (target.isDevice) {
          ___setErrNo(ERRNO_CODES.EINVAL);
          return -1;
        } else if (!target.write) {
          ___setErrNo(ERRNO_CODES.EACCES);
          return -1;
        } else {
          var contents = target.contents;
          if (length < contents.length) contents.length = length;
          else while (length > contents.length) contents.push(0);
          target.timestamp = Date.now();
          return 0;
        }
      }
    }function _ftruncate(fildes, length) {
      // int ftruncate(int fildes, off_t length);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/ftruncate.html
      if (FS.streams[fildes] && FS.streams[fildes].isWrite) {
        return _truncate(FS.streams[fildes].path, length);
      } else if (FS.streams[fildes]) {
        ___setErrNo(ERRNO_CODES.EINVAL);
        return -1;
      } else {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
    }
  function _fileno(stream) {
      // int fileno(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fileno.html
      // We use file descriptor numbers and FILE* streams interchangeably.
      return stream;
    }
  function _fputc(c, stream) {
      // int fputc(int c, FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputc.html
      var chr = unSign(c & 0xFF);
      HEAP8[((_fputc.ret)|0)]=chr
      var ret = _write(stream, _fputc.ret, 1);
      if (ret == -1) {
        if (FS.streams[stream]) FS.streams[stream].error = true;
        return -1;
      } else {
        return chr;
      }
    }
  var ___pollfd_struct_layout={__size__:8,fd:0,events:4,revents:6};function _poll(fds, nfds, timeout) {
      // int poll(struct pollfd fds[], nfds_t nfds, int timeout);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/poll.html
      // NOTE: This is pretty much a no-op mimicking glibc.
      var offsets = ___pollfd_struct_layout;
      var nonzero = 0;
      for (var i = 0; i < nfds; i++) {
        var pollfd = fds + ___pollfd_struct_layout.__size__ * i;
        var fd = HEAP32[(((pollfd)+(offsets.fd))>>2)];
        var events = HEAP16[(((pollfd)+(offsets.events))>>1)];
        var revents = 0;
        if (FS.streams[fd]) {
          var stream = FS.streams[fd];
          if (events & 1) revents |= 1;
          if (events & 2) revents |= 2;
        } else {
          if (events & 4) revents |= 4;
        }
        if (revents) nonzero++;
        HEAP16[(((pollfd)+(offsets.revents))>>1)]=revents
      }
      return nonzero;
    }
  function _unlink(path) {
      // int unlink(const char *path);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/unlink.html
      path = FS.analyzePath(Pointer_stringify(path));
      if (!path.parentExists || !path.exists) {
        ___setErrNo(path.error);
        return -1;
      } else if (path.object.isFolder) {
        ___setErrNo(ERRNO_CODES.EISDIR);
        return -1;
      } else if (!path.object.write) {
        ___setErrNo(ERRNO_CODES.EACCES);
        return -1;
      } else {
        delete path.parentObject.contents[path.name];
        return 0;
      }
    }
  function _posix_openpt() {
  Module['printErr']('missing function: posix_openpt'); abort(-1);
  }
  function _symlink(path1, path2) {
      // int symlink(const char *path1, const char *path2);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/symlink.html
      var path = FS.analyzePath(Pointer_stringify(path2), true);
      if (!path.parentExists) {
        ___setErrNo(path.error);
        return -1;
      } else if (path.exists) {
        ___setErrNo(ERRNO_CODES.EEXIST);
        return -1;
      } else {
        FS.createLink(path.parentPath, path.name,
                      Pointer_stringify(path1), true, true);
        return 0;
      }
    }
  function _tcgetattr() {
  Module['printErr']('missing function: tcgetattr'); abort(-1);
  }
  function _tcsetattr() {
  Module['printErr']('missing function: tcsetattr'); abort(-1);
  }
  function _tcflush() {
  Module['printErr']('missing function: tcflush'); abort(-1);
  }
  var ___flock_struct_layout={__size__:16,l_type:0,l_whence:2,l_start:4,l_len:8,l_pid:12,l_xxx:14};function _fcntl(fildes, cmd, varargs, dup2) {
      // int fcntl(int fildes, int cmd, ...);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/fcntl.html
      if (!FS.streams[fildes]) {
        ___setErrNo(ERRNO_CODES.EBADF);
        return -1;
      }
      var stream = FS.streams[fildes];
      switch (cmd) {
        case 0:
          var arg = HEAP32[((varargs)>>2)];
          if (arg < 0) {
            ___setErrNo(ERRNO_CODES.EINVAL);
            return -1;
          }
          var newStream = {};
          for (var member in stream) {
            newStream[member] = stream[member];
          }
          arg = dup2 ? arg : Math.max(arg, FS.streams.length); // dup2 wants exactly arg; fcntl wants a free descriptor >= arg
          FS.createFileHandle(newStream, arg);
          return arg;
        case 1:
        case 2:
          return 0;  // FD_CLOEXEC makes no sense for a single process.
        case 3:
          var flags = 0;
          if (stream.isRead && stream.isWrite) flags = 2;
          else if (!stream.isRead && stream.isWrite) flags = 1;
          else if (stream.isRead && !stream.isWrite) flags = 0;
          if (stream.isAppend) flags |= 8;
          // Synchronization and blocking flags are irrelevant to us.
          return flags;
        case 4:
          var arg = HEAP32[((varargs)>>2)];
          stream.isAppend = Boolean(arg | 8);
          // Synchronization and blocking flags are irrelevant to us.
          return 0;
        case 7:
        case 20:
          var arg = HEAP32[((varargs)>>2)];
          var offset = ___flock_struct_layout.l_type;
          // We're always unlocked.
          HEAP16[(((arg)+(offset))>>1)]=3
          return 0;
        case 8:
        case 9:
        case 21:
        case 22:
          // Pretend that the locking is successful.
          return 0;
        case 6:
        case 5:
          // These are for sockets. We don't have them fully implemented yet.
          ___setErrNo(ERRNO_CODES.EINVAL);
          return -1;
        default:
          ___setErrNo(ERRNO_CODES.EINVAL);
          return -1;
      }
      // Should never be reached. Only to silence strict warnings.
      return -1;
    }
  function _grantpt() {
  Module['printErr']('missing function: grantpt'); abort(-1);
  }
  function _unlockpt() {
  Module['printErr']('missing function: unlockpt'); abort(-1);
  }
  function _ptsname() {
  Module['printErr']('missing function: ptsname'); abort(-1);
  }
  Module["_tolower"] = _tolower; 
  Module["_strncasecmp"] = _strncasecmp; 
  Module["_strcasecmp"] = _strcasecmp;
  var ___tm_struct_layout={__size__:44,tm_sec:0,tm_min:4,tm_hour:8,tm_mday:12,tm_mon:16,tm_year:20,tm_wday:24,tm_yday:28,tm_isdst:32,tm_gmtoff:36,tm_zone:40};
  var ___tm_current=allocate(4*26, "i8", ALLOC_STATIC);
  var ___tm_timezones={};
  var __tzname=allocate(8, "i32*", ALLOC_STATIC);
  var __daylight=allocate(1, "i32*", ALLOC_STATIC);
  var __timezone=allocate(1, "i32*", ALLOC_STATIC);function _tzset() {
      // TODO: Use (malleable) environment variables instead of system settings.
      if (_tzset.called) return;
      _tzset.called = true;
      HEAP32[((__timezone)>>2)]=-(new Date()).getTimezoneOffset() * 60
      var winter = new Date(2000, 0, 1);
      var summer = new Date(2000, 6, 1);
      HEAP32[((__daylight)>>2)]=Number(winter.getTimezoneOffset() != summer.getTimezoneOffset())
      var winterName = 'GMT'; // XXX do not rely on browser timezone info, it is very unpredictable | winter.toString().match(/\(([A-Z]+)\)/)[1];
      var summerName = 'GMT'; // XXX do not rely on browser timezone info, it is very unpredictable | summer.toString().match(/\(([A-Z]+)\)/)[1];
      var winterNamePtr = allocate(intArrayFromString(winterName), 'i8', ALLOC_NORMAL);
      var summerNamePtr = allocate(intArrayFromString(summerName), 'i8', ALLOC_NORMAL);
      HEAP32[((__tzname)>>2)]=winterNamePtr
      HEAP32[(((__tzname)+(4))>>2)]=summerNamePtr
    }function _localtime_r(time, tmPtr) {
      _tzset();
      var offsets = ___tm_struct_layout;
      var date = new Date(HEAP32[((time)>>2)]*1000);
      HEAP32[(((tmPtr)+(offsets.tm_sec))>>2)]=date.getSeconds()
      HEAP32[(((tmPtr)+(offsets.tm_min))>>2)]=date.getMinutes()
      HEAP32[(((tmPtr)+(offsets.tm_hour))>>2)]=date.getHours()
      HEAP32[(((tmPtr)+(offsets.tm_mday))>>2)]=date.getDate()
      HEAP32[(((tmPtr)+(offsets.tm_mon))>>2)]=date.getMonth()
      HEAP32[(((tmPtr)+(offsets.tm_year))>>2)]=date.getFullYear()-1900
      HEAP32[(((tmPtr)+(offsets.tm_wday))>>2)]=date.getDay()
      var start = new Date(date.getFullYear(), 0, 1);
      var yday = Math.floor((date.getTime() - start.getTime()) / (1000 * 60 * 60 * 24));
      HEAP32[(((tmPtr)+(offsets.tm_yday))>>2)]=yday
      HEAP32[(((tmPtr)+(offsets.tm_gmtoff))>>2)]=start.getTimezoneOffset() * 60
      var dst = Number(start.getTimezoneOffset() != date.getTimezoneOffset());
      HEAP32[(((tmPtr)+(offsets.tm_isdst))>>2)]=dst
      var timezone = 'GMT'; // XXX do not rely on browser timezone info, it is very unpredictable | date.toString().match(/\(([A-Z]+)\)/)[1];
      if (!(timezone in ___tm_timezones)) {
        ___tm_timezones[timezone] = allocate(intArrayFromString(timezone), 'i8', ALLOC_NORMAL);
      }
      HEAP32[(((tmPtr)+(offsets.tm_zone))>>2)]=___tm_timezones[timezone]
      return tmPtr;
    }function _localtime(time) {
      return _localtime_r(time, ___tm_current);
    }
  function _fgetc(stream) {
      // int fgetc(FILE *stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fgetc.html
      if (!FS.streams[stream]) return -1;
      var streamObj = FS.streams[stream];
      if (streamObj.eof || streamObj.error) return -1;
      var ret = _read(stream, _fgetc.ret, 1);
      if (ret == 0) {
        streamObj.eof = true;
        return -1;
      } else if (ret == -1) {
        streamObj.error = true;
        return -1;
      } else {
        return HEAPU8[((_fgetc.ret)|0)];
      }
    }
  function _gmtime_r(time, tmPtr) {
      var date = new Date(HEAP32[((time)>>2)]*1000);
      var offsets = ___tm_struct_layout;
      HEAP32[(((tmPtr)+(offsets.tm_sec))>>2)]=date.getUTCSeconds()
      HEAP32[(((tmPtr)+(offsets.tm_min))>>2)]=date.getUTCMinutes()
      HEAP32[(((tmPtr)+(offsets.tm_hour))>>2)]=date.getUTCHours()
      HEAP32[(((tmPtr)+(offsets.tm_mday))>>2)]=date.getUTCDate()
      HEAP32[(((tmPtr)+(offsets.tm_mon))>>2)]=date.getUTCMonth()
      HEAP32[(((tmPtr)+(offsets.tm_year))>>2)]=date.getUTCFullYear()-1900
      HEAP32[(((tmPtr)+(offsets.tm_wday))>>2)]=date.getUTCDay()
      HEAP32[(((tmPtr)+(offsets.tm_gmtoff))>>2)]=0
      HEAP32[(((tmPtr)+(offsets.tm_isdst))>>2)]=0
      var start = new Date(date.getFullYear(), 0, 1);
      var yday = Math.round((date.getTime() - start.getTime()) / (1000 * 60 * 60 * 24));
      HEAP32[(((tmPtr)+(offsets.tm_yday))>>2)]=yday
      var timezone = "GMT";
      if (!(timezone in ___tm_timezones)) {
        ___tm_timezones[timezone] = allocate(intArrayFromString(timezone), 'i8', ALLOC_NORMAL);
      }
      HEAP32[(((tmPtr)+(offsets.tm_zone))>>2)]=___tm_timezones[timezone]
      return tmPtr;
    }function _gmtime(time) {
      return _gmtime_r(time, ___tm_current);
    }
  var _tan=Math.tan;
  function _SDL_PauseAudio(pauseOn) {
      if (SDL.audio.paused !== pauseOn) {
        SDL.audio.timer = pauseOn ? SDL.audio.timer && clearInterval(SDL.audio.timer) : Browser.safeSetInterval(SDL.audio.caller, 1/35);
      }
      SDL.audio.paused = pauseOn;
    }function _SDL_CloseAudio() {
      if (SDL.audio) {
        _SDL_PauseAudio(1);
        _free(SDL.audio.buffer);
        SDL.audio = null;
      }
    }
  function _SDL_WasInit() {
      if (SDL.startTime === null) {
        _SDL_Init();
      }
      return 1;
    }
  function _SDL_InitSubSystem(flags) { return 0 }
  function _SDL_GetError() {
      if (!SDL.errorMessage) {
        SDL.errorMessage = allocate(intArrayFromString("unknown SDL-emscripten error"), 'i8', ALLOC_NORMAL);
      }
      return SDL.errorMessage;
    }
  function _SDL_OpenAudio(desired, obtained) {
      SDL.allocateChannels(32);
      SDL.audio = {
        freq: HEAPU32[(((desired)+(SDL.structs.AudioSpec.freq))>>2)],
        format: HEAPU16[(((desired)+(SDL.structs.AudioSpec.format))>>1)],
        channels: HEAPU8[(((desired)+(SDL.structs.AudioSpec.channels))|0)],
        samples: HEAPU16[(((desired)+(SDL.structs.AudioSpec.samples))>>1)],
        callback: HEAPU32[(((desired)+(SDL.structs.AudioSpec.callback))>>2)],
        userdata: HEAPU32[(((desired)+(SDL.structs.AudioSpec.userdata))>>2)],
        paused: true,
        timer: null
      };
      if (obtained) {
        HEAP32[(((obtained)+(SDL.structs.AudioSpec.freq))>>2)]=SDL.audio.freq; // no good way for us to know if the browser can really handle this
        HEAP16[(((obtained)+(SDL.structs.AudioSpec.format))>>1)]=33040; // float, signed, 16-bit
        HEAP8[(((obtained)+(SDL.structs.AudioSpec.channels))|0)]=SDL.audio.channels;
        HEAP8[(((obtained)+(SDL.structs.AudioSpec.silence))|0)]=HEAPU8[(((desired)+(SDL.structs.AudioSpec.silence))|0)]; // unclear if browsers can provide this
        HEAP16[(((obtained)+(SDL.structs.AudioSpec.samples))>>1)]=SDL.audio.samples;
        HEAP32[(((obtained)+(SDL.structs.AudioSpec.callback))>>2)]=SDL.audio.callback;
        HEAP32[(((obtained)+(SDL.structs.AudioSpec.userdata))>>2)]=SDL.audio.userdata;
      }
      var totalSamples = SDL.audio.samples*SDL.audio.channels;
      SDL.audio.bufferSize = totalSamples*2; // hardcoded 16-bit audio
      SDL.audio.buffer = _malloc(SDL.audio.bufferSize);
      SDL.audio.caller = function() {
        Runtime.dynCall('viii', SDL.audio.callback, [SDL.audio.userdata, SDL.audio.buffer, SDL.audio.bufferSize]);
        SDL.audio.pushAudio(SDL.audio.buffer, SDL.audio.bufferSize);
      };
      // Mozilla Audio API. TODO: Other audio APIs
      try {
        SDL.audio.mozOutput = new Audio();
        SDL.audio.mozOutput['mozSetup'](SDL.audio.channels, SDL.audio.freq); // use string attributes on mozOutput for closure compiler
        SDL.audio.mozBuffer = new Float32Array(totalSamples);
        SDL.audio.pushAudio = function(ptr, size) {
          var mozBuffer = SDL.audio.mozBuffer;
          for (var i = 0; i < totalSamples; i++) {
            mozBuffer[i] = (HEAP16[(((ptr)+(i*2))>>1)]) / 0x8000; // hardcoded 16-bit audio, signed (TODO: reSign if not ta2?)
          }
          SDL.audio.mozOutput['mozWriteAudio'](mozBuffer);
        }
      } catch(e) {
        SDL.audio = null;
      }
      if (!SDL.audio) return -1;
      return 0;
    }
  function _SDL_LockAudio() {}
  function _SDL_UnlockAudio() {}
  function _strtol(str, endptr, base) {
      return __parseInt(str, endptr, base, -2147483648, 2147483647, 32);  // LONG_MIN, LONG_MAX.
    }
  function _printf(format, varargs) {
      // int printf(const char *restrict format, ...);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/printf.html
      var stdout = HEAP32[((_stdout)>>2)];
      return _fprintf(stdout, format, varargs);
    }
  function _fputs(s, stream) {
      // int fputs(const char *restrict s, FILE *restrict stream);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/fputs.html
      return _write(stream, s, _strlen(s));
    }
  function _vfprintf(s, f, va_arg) {
      return _fprintf(s, f, HEAP32[((va_arg)>>2)]);
    }
  function _puts(s) {
      // int puts(const char *s);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/puts.html
      // NOTE: puts() always writes an extra newline.
      var stdout = HEAP32[((_stdout)>>2)];
      var ret = _fputs(s, stdout);
      if (ret < 0) {
        return ret;
      } else {
        var newlineRet = _fputc(10, stdout);
        return (newlineRet < 0) ? -1 : ret + 1;
      }
    }
  function _strchr(ptr, chr) {
      ptr--;
      do {
        ptr++;
        var val = HEAP8[(ptr)];
        if (val == chr) return ptr;
      } while (val);
      return 0;
    }
  function _usleep(useconds) {
      // int usleep(useconds_t useconds);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/usleep.html
      // We're single-threaded, so use a busy loop. Super-ugly.
      var msec = useconds / 1000;
      var start = Date.now();
      while (Date.now() - start < msec) {
        // Do nothing.
      }
      return 0;
    }
  var ___timespec_struct_layout={__size__:8,tv_sec:0,tv_nsec:4};function _nanosleep(rqtp, rmtp) {
      // int nanosleep(const struct timespec  *rqtp, struct timespec *rmtp);
      var seconds = HEAP32[(((rqtp)+(___timespec_struct_layout.tv_sec))>>2)];
      var nanoseconds = HEAP32[(((rqtp)+(___timespec_struct_layout.tv_nsec))>>2)];
      HEAP32[(((rmtp)+(___timespec_struct_layout.tv_sec))>>2)]=0
      HEAP32[(((rmtp)+(___timespec_struct_layout.tv_nsec))>>2)]=0
      return _usleep((seconds * 1e6) + (nanoseconds / 1000));
    }
  function _gettimeofday(ptr) {
      // %struct.timeval = type { i32, i32 }
      var now = Date.now();
      HEAP32[((ptr)>>2)]=Math.floor(now/1000); // seconds
      HEAP32[(((ptr)+(4))>>2)]=Math.floor((now-1000*Math.floor(now/1000))*1000); // microseconds
      return 0;
    }
  function _SDL_PollEvent(ptr) {
      if (SDL.events.length === 0) return 0;
      if (ptr) {
        SDL.makeCEvent(SDL.events.shift(), ptr);
      }
      return 1;
    }
  function _SDL_ShowCursor(toggle) {
      switch (toggle) {
        case 0: // SDL_DISABLE
          if (Browser.isFullScreen) { // only try to lock the pointer when in full screen mode
            Module['canvas'].requestPointerLock();
            return 0;
          } else { // else return SDL_ENABLE to indicate the failure
            return 1;
          }
          break;
        case 1: // SDL_ENABLE
          Module['canvas'].exitPointerLock();
          return 1;
          break;
        case -1: // SDL_QUERY
          return !Browser.pointerLock;
          break;
        default:
          console.log( "SDL_ShowCursor called with unknown toggle parameter value: " + toggle + "." );
          break;
      }
    }
  function _SDL_WM_GrabInput() {}
  function _SDL_WM_ToggleFullScreen(surf) {
      if (Browser.isFullScreen) {
        Module['canvas'].cancelFullScreen();
        return 1;
      } else {
        return 0;
      }
    }
  function _SDL_CreateRGBSurfaceFrom(pixels, width, height, depth, pitch, rmask, gmask, bmask, amask) {
      // TODO: Take into account depth and pitch parameters.
      var surface = SDL.makeSurface(width, height, 0, false, 'CreateRGBSurfaceFrom', rmask, gmask, bmask, amask);
      var surfaceData = SDL.surfaces[surface];
      var surfaceImageData = surfaceData.ctx.getImageData(0, 0, width, height);
      var surfacePixelData = surfaceImageData.data;
      // Fill pixel data to created surface.
      // Supports SDL_PIXELFORMAT_RGBA8888 and SDL_PIXELFORMAT_RGB888
      var channels = amask ? 4 : 3; // RGBA8888 or RGB888
      for (var pixelOffset = 0; pixelOffset < width*height; pixelOffset++) {
        surfacePixelData[pixelOffset*4+0] = HEAPU8[pixels + (pixelOffset*channels+0)]; // R
        surfacePixelData[pixelOffset*4+1] = HEAPU8[pixels + (pixelOffset*channels+1)]; // G
        surfacePixelData[pixelOffset*4+2] = HEAPU8[pixels + (pixelOffset*channels+2)]; // B
        surfacePixelData[pixelOffset*4+3] = amask ? HEAPU8[pixels + (pixelOffset*channels+3)] : 0xff; // A
      };
      surfaceData.ctx.putImageData(surfaceImageData, 0, 0);
      return surface;
    }
  function _SDL_UpperBlit(src, srcrect, dst, dstrect) {
      var srcData = SDL.surfaces[src];
      var dstData = SDL.surfaces[dst];
      var sr, dr;
      if (srcrect) {
        sr = SDL.loadRect(srcrect);
      } else {
        sr = { x: 0, y: 0, w: srcData.width, h: srcData.height };
      }
      if (dstrect) {
        dr = SDL.loadRect(dstrect);
      } else {
        dr = { x: 0, y: 0, w: -1, h: -1 };
      }
      dstData.ctx.drawImage(srcData.canvas, sr.x, sr.y, sr.w, sr.h, dr.x, dr.y, sr.w, sr.h);
      if (dst != SDL.screen) {
        // XXX As in IMG_Load, for compatibility we write out |pixels|
        console.log('WARNING: copying canvas data to memory for compatibility');
        _SDL_LockSurface(dst);
        dstData.locked--; // The surface is not actually locked in this hack
      }
      return 0;
    }
  function _SDL_FreeSurface(surf) {
      if (surf) SDL.freeSurface(surf);
    }
  function _SDL_Flip(surf) {
      // We actually do this in Unlock, since the screen surface has as its canvas
      // backing the page canvas element
    }
  function _SDL_SetVideoMode(width, height, depth, flags) {
      ['mousedown', 'mouseup', 'mousemove', 'DOMMouseScroll', 'mousewheel', 'mouseout'].forEach(function(event) {
        if (Module["canvasFront"]) {
          Module['canvasFront'].addEventListener(event, SDL.receiveEvent, true);
        } else {
          Module['canvas'].addEventListener(event, SDL.receiveEvent, true);
        }
      });
      Browser.setCanvasSize(width, height, true);
      // Free the old surface first.
      if (SDL.screen) {
        SDL.freeSurface(SDL.screen);
        SDL.screen = null;
      }
      SDL.screen = SDL.makeSurface(width, height, flags, true, 'screen');
      if (!SDL.addedResizeListener) {
        SDL.addedResizeListener = true;
        Browser.resizeListeners.push(function(w, h) {
          SDL.receiveEvent({
            type: 'resize',
            w: w,
            h: h
          });
        });
      }
      return SDL.screen;
    }
  function _SDL_WM_SetCaption(title, icon) {
      title = title && Pointer_stringify(title);
      icon = icon && Pointer_stringify(icon);
    }
  function _SDL_EnableKeyRepeat(delay, interval) {
      // TODO
    }
  function _SDL_EventState() {}
  function _abort() {
      ABORT = true;
      throw 'abort() at ' + (new Error().stack);
    }
  function ___errno_location() {
      return ___errno_state;
    }var ___errno=___errno_location;
  function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 8: return PAGE_SIZE;
        case 54:
        case 56:
        case 21:
        case 61:
        case 63:
        case 22:
        case 67:
        case 23:
        case 24:
        case 25:
        case 26:
        case 27:
        case 69:
        case 28:
        case 101:
        case 70:
        case 71:
        case 29:
        case 30:
        case 199:
        case 75:
        case 76:
        case 32:
        case 43:
        case 44:
        case 80:
        case 46:
        case 47:
        case 45:
        case 48:
        case 49:
        case 42:
        case 82:
        case 33:
        case 7:
        case 108:
        case 109:
        case 107:
        case 112:
        case 119:
        case 121:
          return 200809;
        case 13:
        case 104:
        case 94:
        case 95:
        case 34:
        case 35:
        case 77:
        case 81:
        case 83:
        case 84:
        case 85:
        case 86:
        case 87:
        case 88:
        case 89:
        case 90:
        case 91:
        case 94:
        case 95:
        case 110:
        case 111:
        case 113:
        case 114:
        case 115:
        case 116:
        case 117:
        case 118:
        case 120:
        case 40:
        case 16:
        case 79:
        case 19:
          return -1;
        case 92:
        case 93:
        case 5:
        case 72:
        case 6:
        case 74:
        case 92:
        case 93:
        case 96:
        case 97:
        case 98:
        case 99:
        case 102:
        case 103:
        case 105:
          return 1;
        case 38:
        case 66:
        case 50:
        case 51:
        case 4:
          return 1024;
        case 15:
        case 64:
        case 41:
          return 32;
        case 55:
        case 37:
        case 17:
          return 2147483647;
        case 18:
        case 1:
          return 47839;
        case 59:
        case 57:
          return 99;
        case 68:
        case 58:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 14: return 32768;
        case 73: return 32767;
        case 39: return 16384;
        case 60: return 1000;
        case 106: return 700;
        case 52: return 256;
        case 62: return 255;
        case 2: return 100;
        case 65: return 64;
        case 36: return 20;
        case 100: return 16;
        case 20: return 6;
        case 53: return 4;
        case 10: return 1;
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }
  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) self.alloc(bytes);
      return ret;  // Previous break location.
    }
__ATINIT__.unshift({ func: function() { if (!Module["noFSInit"] && !FS.init.initialized) FS.init() } });__ATMAIN__.push({ func: function() { FS.ignorePermissions = false } });__ATEXIT__.push({ func: function() { FS.quit() } });Module["FS_createFolder"] = FS.createFolder;Module["FS_createPath"] = FS.createPath;Module["FS_createDataFile"] = FS.createDataFile;Module["FS_createPreloadedFile"] = FS.createPreloadedFile;Module["FS_createLazyFile"] = FS.createLazyFile;Module["FS_createLink"] = FS.createLink;Module["FS_createDevice"] = FS.createDevice;
___errno_state = Runtime.staticAlloc(4); HEAP32[((___errno_state)>>2)]=0;
Module["requestFullScreen"] = function(lockPointer, resizeCanvas) { Browser.requestFullScreen(lockPointer, resizeCanvas) };
  Module["requestAnimationFrame"] = function(func) { Browser.requestAnimationFrame(func) };
  Module["pauseMainLoop"] = function() { Browser.mainLoop.pause() };
  Module["resumeMainLoop"] = function() { Browser.mainLoop.resume() };
  Module["getUserMedia"] = function() { Browser.getUserMedia() }
_fputc.ret = allocate([0], "i8", ALLOC_STATIC);
_fgetc.ret = allocate([0], "i8", ALLOC_STATIC);
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);
staticSealed = true; // seal the static portion of memory
STACK_MAX = STACK_BASE + 5242880;
DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);
assert(DYNAMIC_BASE < TOTAL_MEMORY); // Stack must fit in TOTAL_MEMORY; allocations from here on may enlarge TOTAL_MEMORY
 var ctlz_i8 = allocate([8,7,6,6,5,5,5,5,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0], "i8", ALLOC_DYNAMIC);
 var cttz_i8 = allocate([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0], "i8", ALLOC_DYNAMIC);
var Math_min = Math.min;
function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  try {
    return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}
function asmPrintInt(x, y) {
  Module.print('int ' + x + ',' + y);// + ' ' + new Error().stack);
}
function asmPrintFloat(x, y) {
  Module.print('float ' + x + ',' + y);// + ' ' + new Error().stack);
}
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'use asm';
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);
  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var cttz_i8=env.cttz_i8|0;
  var ctlz_i8=env.ctlz_i8|0;
  var _stdout=env._stdout|0;
  var _stdin=env._stdin|0;
  var _stderr=env._stderr|0;
  var NaN=+env.NaN;
  var Infinity=+env.Infinity;
  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;
  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var abort=env.abort;
  var assert=env.assert;
  var asmPrintInt=env.asmPrintInt;
  var asmPrintFloat=env.asmPrintFloat;
  var Math_min=env.min;
  var invoke_ii=env.invoke_ii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viii=env.invoke_viii;
  var invoke_v=env.invoke_v;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_viiii=env.invoke_viiii;
  var _llvm_lifetime_end=env._llvm_lifetime_end;
  var _lseek=env._lseek;
  var _llvm_dbg_value=env._llvm_dbg_value;
  var _fclose=env._fclose;
  var _SDL_EventState=env._SDL_EventState;
  var _strtoul=env._strtoul;
  var _fflush=env._fflush;
  var _SDL_GetMouseState=env._SDL_GetMouseState;
  var _strtol=env._strtol;
  var _fputc=env._fputc;
  var _fwrite=env._fwrite;
  var _ptsname=env._ptsname;
  var _send=env._send;
  var _tcflush=env._tcflush;
  var _fputs=env._fputs;
  var _emscripten_cancel_main_loop=env._emscripten_cancel_main_loop;
  var _SDL_UnlockAudio=env._SDL_UnlockAudio;
  var _SDL_WasInit=env._SDL_WasInit;
  var _read=env._read;
  var _fileno=env._fileno;
  var _fsync=env._fsync;
  var _signal=env._signal;
  var _SDL_PauseAudio=env._SDL_PauseAudio;
  var _SDL_LockAudio=env._SDL_LockAudio;
  var _strcmp=env._strcmp;
  var _strncmp=env._strncmp;
  var _snprintf=env._snprintf;
  var _fgetc=env._fgetc;
  var _atexit=env._atexit;
  var _close=env._close;
  var _tcsetattr=env._tcsetattr;
  var _strchr=env._strchr;
  var _tcgetattr=env._tcgetattr;
  var _poll=env._poll;
  var ___setErrNo=env.___setErrNo;
  var _grantpt=env._grantpt;
  var _ftell=env._ftell;
  var _exit=env._exit;
  var _sprintf=env._sprintf;
  var _fcntl=env._fcntl;
  var _SDL_ShowCursor=env._SDL_ShowCursor;
  var _gmtime=env._gmtime;
  var _symlink=env._symlink;
  var _localtime_r=env._localtime_r;
  var _ftruncate=env._ftruncate;
  var _recv=env._recv;
  var _SDL_PollEvent=env._SDL_PollEvent;
  var _SDL_Init=env._SDL_Init;
  var __exit=env.__exit;
  var _SDL_WM_GrabInput=env._SDL_WM_GrabInput;
  var _llvm_va_end=env._llvm_va_end;
  var _tzset=env._tzset;
  var _SDL_CreateRGBSurfaceFrom=env._SDL_CreateRGBSurfaceFrom;
  var _printf=env._printf;
  var _unlockpt=env._unlockpt;
  var _pread=env._pread;
  var _SDL_SetVideoMode=env._SDL_SetVideoMode;
  var _fopen=env._fopen;
  var _open=env._open;
  var _usleep=env._usleep;
  var _SDL_EnableKeyRepeat=env._SDL_EnableKeyRepeat;
  var _puts=env._puts;
  var _SDL_GetVideoInfo=env._SDL_GetVideoInfo;
  var _nanosleep=env._nanosleep;
  var _SDL_Flip=env._SDL_Flip;
  var _SDL_InitSubSystem=env._SDL_InitSubSystem;
  var _strdup=env._strdup;
  var _SDL_GetError=env._SDL_GetError;
  var __formatString=env.__formatString;
  var _gettimeofday=env._gettimeofday;
  var _vfprintf=env._vfprintf;
  var _SDL_WM_SetCaption=env._SDL_WM_SetCaption;
  var _sbrk=env._sbrk;
  var ___errno_location=env.___errno_location;
  var _SDL_CloseAudio=env._SDL_CloseAudio;
  var _isspace=env._isspace;
  var _llvm_lifetime_start=env._llvm_lifetime_start;
  var __parseInt=env.__parseInt;
  var _SDL_OpenAudio=env._SDL_OpenAudio;
  var _localtime=env._localtime;
  var _gmtime_r=env._gmtime_r;
  var _sysconf=env._sysconf;
  var _fread=env._fread;
  var _SDL_WM_ToggleFullScreen=env._SDL_WM_ToggleFullScreen;
  var _abort=env._abort;
  var _fprintf=env._fprintf;
  var _tan=env._tan;
  var __reallyNegative=env.__reallyNegative;
  var _posix_openpt=env._posix_openpt;
  var _fseek=env._fseek;
  var _write=env._write;
  var _SDL_UpperBlit=env._SDL_UpperBlit;
  var _truncate=env._truncate;
  var _emscripten_set_main_loop=env._emscripten_set_main_loop;
  var _unlink=env._unlink;
  var _pwrite=env._pwrite;
  var _SDL_FreeSurface=env._SDL_FreeSurface;
  var _time=env._time;
// EMSCRIPTEN_START_FUNCS
function stackAlloc(size) {
 size = size | 0;
 var ret = 0;
 ret = STACKTOP; //@line 3
 STACKTOP = STACKTOP + size | 0; //@line 4
 STACKTOP = STACKTOP + 7 >> 3 << 3; //@line 5
 return ret | 0; //@line 6
}
function stackSave() {
 return STACKTOP | 0; //@line 9
}
function stackRestore(top) {
 top = top | 0;
 STACKTOP = top; //@line 13
}
function setThrew(threw, value) {
 threw = threw | 0;
 value = value | 0;
 if ((__THREW__ | 0) == 0) {
  __THREW__ = threw; //@line 19
  threwValue = value; //@line 20
 }
}
function copyTempFloat(ptr) {
 ptr = ptr | 0;
 HEAP8[tempDoublePtr] = HEAP8[ptr]; //@line 25
 HEAP8[tempDoublePtr + 1 | 0] = HEAP8[ptr + 1 | 0]; //@line 26
 HEAP8[tempDoublePtr + 2 | 0] = HEAP8[ptr + 2 | 0]; //@line 27
 HEAP8[tempDoublePtr + 3 | 0] = HEAP8[ptr + 3 | 0]; //@line 28
}
function copyTempDouble(ptr) {
 ptr = ptr | 0;
 HEAP8[tempDoublePtr] = HEAP8[ptr]; //@line 32
 HEAP8[tempDoublePtr + 1 | 0] = HEAP8[ptr + 1 | 0]; //@line 33
 HEAP8[tempDoublePtr + 2 | 0] = HEAP8[ptr + 2 | 0]; //@line 34
 HEAP8[tempDoublePtr + 3 | 0] = HEAP8[ptr + 3 | 0]; //@line 35
 HEAP8[tempDoublePtr + 4 | 0] = HEAP8[ptr + 4 | 0]; //@line 36
 HEAP8[tempDoublePtr + 5 | 0] = HEAP8[ptr + 5 | 0]; //@line 37
 HEAP8[tempDoublePtr + 6 | 0] = HEAP8[ptr + 6 | 0]; //@line 38
 HEAP8[tempDoublePtr + 7 | 0] = HEAP8[ptr + 7 | 0]; //@line 39
}
function setTempRet0(value) {
 value = value | 0;
 tempRet0 = value; //@line 44
}
function setTempRet1(value) {
 value = value | 0;
 tempRet1 = value; //@line 49
}
function setTempRet2(value) {
 value = value | 0;
 tempRet2 = value; //@line 54
}
function setTempRet3(value) {
 value = value | 0;
 tempRet3 = value; //@line 59
}
function setTempRet4(value) {
 value = value | 0;
 tempRet4 = value; //@line 64
}
function setTempRet5(value) {
 value = value | 0;
 tempRet5 = value; //@line 69
}
function setTempRet6(value) {
 value = value | 0;
 tempRet6 = value; //@line 74
}
function setTempRet7(value) {
 value = value | 0;
 tempRet7 = value; //@line 79
}
function setTempRet8(value) {
 value = value | 0;
 tempRet8 = value; //@line 84
}
function setTempRet9(value) {
 value = value | 0;
 tempRet9 = value; //@line 89
}
function runPostSets() {
}
function _adb_dev_talk_done($dev, $reg) {
 $dev = $dev | 0;
 $reg = $reg | 0;
 return;
}
function _adb_dev_flush($dev) {
 $dev = $dev | 0;
 HEAP8[$dev + 7 | 0] = 0; //@line 112
 return;
}
function _adb_dev_talk($dev, $reg, $buf) {
 $dev = $dev | 0;
 $reg = $reg | 0;
 $buf = $buf | 0;
 var $3 = 0, $_0 = 0;
 if (($reg | 0) != 3) {
  $_0 = 0; //@line 129
  return $_0 | 0; //@line 132
 }
 $3 = $dev + 20 | 0; //@line 134
 HEAP8[$buf + 1 | 0] = HEAP32[$3 >> 2] & 255; //@line 138
 HEAP8[$buf] = (HEAP32[$3 >> 2] | 0) >>> 8 & 255; //@line 142
 $_0 = 2; //@line 144
 return $_0 | 0; //@line 147
}
function _adb_dev_listen($dev, $reg, $buf, $cnt) {
 $dev = $dev | 0;
 $reg = $reg | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 var $10 = 0, $13 = 0;
 if (($reg | 0) != 3 | $cnt >>> 0 < 2) {
  return;
 }
 if ((HEAP8[$buf + 1 | 0] | 0) != -2) {
  return;
 }
 $10 = HEAP8[$buf] & 15; //@line 178
 HEAP8[$dev + 4 | 0] = $10 & 255; //@line 181
 $13 = $dev + 20 | 0; //@line 182
 HEAP32[$13 >> 2] = $10 << 8 | HEAP32[$13 >> 2] & 61695; //@line 187
 return;
}
function _adb_set_shift_in_fct($adb, $ext, $fct) {
 $adb = $adb | 0;
 $ext = $ext | 0;
 $fct = $fct | 0;
 HEAP32[$adb + 92 >> 2] = $ext; //@line 202
 HEAP32[$adb + 96 >> 2] = $fct; //@line 205
 return;
}
function _adb_set_shift_out_fct($adb, $ext, $fct) {
 $adb = $adb | 0;
 $ext = $ext | 0;
 $fct = $fct | 0;
 HEAP32[$adb + 100 >> 2] = $ext; //@line 219
 HEAP32[$adb + 104 >> 2] = $fct; //@line 222
 return;
}
function _adb_set_int_fct($adb, $ext, $fct) {
 $adb = $adb | 0;
 $ext = $ext | 0;
 $fct = $fct | 0;
 HEAP32[$adb + 112 >> 2] = $ext; //@line 236
 HEAP32[$adb + 116 >> 2] = $fct; //@line 239
 return;
}
function _adb_add_device($adb, $dev) {
 $adb = $adb | 0;
 $dev = $dev | 0;
 var $1 = 0, $2 = 0, $i_0 = 0, $_0 = 0, label = 0;
 $1 = $adb + 24 | 0; //@line 252
 $2 = HEAP32[$1 >> 2] | 0; //@line 253
 $i_0 = 0; //@line 255
 while (1) {
  if ($i_0 >>> 0 >= $2 >>> 0) {
   break;
  }
  if ((HEAP32[$adb + 28 + ($i_0 << 2) >> 2] | 0) == ($dev | 0)) {
   $_0 = 1; //@line 269
   label = 24; //@line 270
   break;
  } else {
   $i_0 = $i_0 + 1 | 0; //@line 273
  }
 }
 if ((label | 0) == 24) {
  return $_0 | 0; //@line 279
 }
 if ($2 >>> 0 > 15) {
  $_0 = 1; //@line 284
  return $_0 | 0; //@line 287
 }
 HEAP32[$1 >> 2] = $2 + 1; //@line 290
 HEAP32[$adb + 28 + ($2 << 2) >> 2] = $dev; //@line 292
 $_0 = 0; //@line 294
 return $_0 | 0; //@line 297
}
function _adb_dev_reset($dev) {
 $dev = $dev | 0;
 var $2 = 0;
 $2 = HEAP8[$dev + 5 | 0] | 0; //@line 308
 HEAP8[$dev + 4 | 0] = $2; //@line 310
 _memset($dev + 7 | 0, 0, 13); //@line 313
 HEAP32[$dev + 20 >> 2] = ($2 & 255) << 8 & 3840 | (HEAPU8[$dev + 6 | 0] | 0) | 24576; //@line 322
 return;
}
function _adb_dev_init($dev, $addr, $handler) {
 $dev = $dev | 0;
 $addr = $addr | 0;
 $handler = $handler | 0;
 var $2 = 0;
 HEAP32[$dev >> 2] = 0; //@line 338
 $2 = $addr & 255; //@line 339
 HEAP8[$dev + 4 | 0] = $2; //@line 341
 HEAP8[$dev + 5 | 0] = $2; //@line 343
 HEAP8[$dev + 6 | 0] = $handler & 255; //@line 346
 _memset($dev + 7 | 0, 0, 13); //@line 349
 HEAP32[$dev + 20 >> 2] = $addr << 8 & 3840 | $handler & 255 | 24576; //@line 355
 HEAP32[$dev + 24 >> 2] = 0; //@line 357
 HEAP32[$dev + 28 >> 2] = 164; //@line 359
 HEAP32[$dev + 32 >> 2] = 58; //@line 361
 HEAP32[$dev + 36 >> 2] = 92; //@line 363
 HEAP32[$dev + 40 >> 2] = 132; //@line 365
 HEAP32[$dev + 44 >> 2] = 2; //@line 367
 return;
}
function _mac_adb_new() {
 var $1 = 0, $_0 = 0;
 $1 = _malloc(120) | 0; //@line 378
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 382
  return $_0 | 0; //@line 385
 }
 HEAP8[$1] = 3; //@line 388
 HEAP32[$1 + 112 >> 2] = 0; //@line 394
 HEAP32[$1 + 116 >> 2] = 0; //@line 397
 _memset($1 + 1 | 0, 0, 5); //@line 398
 _memset($1 + 14 | 0, 0, 14); //@line 399
 _memset($1 + 92 | 0, 0, 17); //@line 400
 $_0 = $1; //@line 402
 return $_0 | 0; //@line 405
}
function _adb_reset($adb) {
 $adb = $adb | 0;
 var $1 = 0, $i_017 = 0, $5 = 0, $16 = 0, $17 = 0, $22 = 0;
 $1 = $adb + 24 | 0; //@line 417
 if ((HEAP32[$1 >> 2] | 0) != 0) {
  $i_017 = 0; //@line 422
  do {
   $5 = HEAP32[$adb + 28 + ($i_017 << 2) >> 2] | 0; //@line 426
   FUNCTION_TABLE_vi[HEAP32[$5 + 28 >> 2] & 1023]($5); //@line 430
   $i_017 = $i_017 + 1 | 0; //@line 431
  } while ($i_017 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0);
 }
 HEAP8[$adb | 0] = 3; //@line 443
 HEAP8[$adb + 1 | 0] = 1; //@line 445
 $16 = $adb + 108 | 0; //@line 448
 $17 = $adb + 2 | 0; //@line 449
 tempBigInt = 0; //@line 450
 HEAP8[$17] = tempBigInt & 255; //@line 450
 tempBigInt = tempBigInt >> 8; //@line 450
 HEAP8[$17 + 1 | 0] = tempBigInt & 255; //@line 450
 tempBigInt = tempBigInt >> 8; //@line 450
 HEAP8[$17 + 2 | 0] = tempBigInt & 255; //@line 450
 tempBigInt = tempBigInt >> 8; //@line 450
 HEAP8[$17 + 3 | 0] = tempBigInt & 255; //@line 450
 _memset($adb + 14 | 0, 0, 10); //@line 451
 if ((HEAP8[$16] | 0) == 0) {
  return;
 }
 HEAP8[$16] = 0; //@line 459
 $22 = HEAP32[$adb + 116 >> 2] | 0; //@line 461
 if (($22 | 0) == 0) {
  return;
 }
 FUNCTION_TABLE_vii[$22 & 511](HEAP32[$adb + 112 >> 2] | 0, 0); //@line 470
 return;
}
function _mac_adb_set_state($adb, $val) {
 $adb = $adb | 0;
 $val = $val | 0;
 var $1 = 0, $2 = 0, $6 = 0, $13 = 0, $17 = 0, $22 = 0, $23 = 0, $25 = 0, $i_0_i_i_i = 0, $30 = 0, $43 = 0, $48 = 0, $63 = 0, $64 = 0, $66 = 0, $70 = 0, $79 = 0, $80 = 0, $82 = 0, $i_0_i_i = 0, $87 = 0, $104 = 0, label = 0;
 $1 = $val & 3; //@line 495
 $2 = $adb | 0; //@line 496
 if ((HEAP8[$2] | 0) == $1 << 24 >> 24) {
  return;
 }
 $6 = $adb + 16 | 0; //@line 504
 HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 783; //@line 507
 L52 : do {
  if (($1 << 24 >> 24 | 0) == 3 | ($1 << 24 >> 24 | 0) == 0) {
   $13 = HEAP8[$adb + 5 | 0] | 0; //@line 513
   if ((HEAPU8[$adb + 4 | 0] | 0) >= ($13 & 255)) {
    break;
   }
   $17 = HEAP8[$adb + 2 | 0] | 0; //@line 520
   if (($17 & 12) != 8) {
    break;
   }
   HEAP8[$adb + 1 | 0] = 0; //@line 528
   $22 = $17 & 255; //@line 529
   $23 = $22 >>> 4; //@line 530
   $25 = HEAP32[$adb + 24 >> 2] | 0; //@line 532
   $i_0_i_i_i = 0; //@line 534
   while (1) {
    if ($i_0_i_i_i >>> 0 >= $25 >>> 0) {
     break L52;
    }
    $30 = HEAP32[$adb + 28 + ($i_0_i_i_i << 2) >> 2] | 0; //@line 543
    if ((HEAPU8[$30 + 4 | 0] | 0) == ($23 | 0)) {
     break;
    } else {
     $i_0_i_i_i = $i_0_i_i_i + 1 | 0; //@line 553
    }
   }
   if (($30 | 0) == 0) {
    break;
   }
   FUNCTION_TABLE_viiii[HEAP32[$30 + 44 >> 2] & 7]($30, $22 & 3, $adb + 6 | 0, $13 & 255); //@line 566
  }
 } while (0);
 HEAP8[$2] = $1; //@line 570
 $43 = $adb + 108 | 0; //@line 571
 do {
  if ((HEAP8[$43] | 0) != 0) {
   HEAP8[$43] = 0; //@line 577
   $48 = HEAP32[$adb + 116 >> 2] | 0; //@line 579
   if (($48 | 0) == 0) {
    break;
   }
   FUNCTION_TABLE_vii[$48 & 511](HEAP32[$adb + 112 >> 2] | 0, 0); //@line 587
  }
 } while (0);
 if (($1 << 24 >> 24 | 0) == 0) {
  HEAP8[$adb + 1 | 0] = 0; //@line 593
  HEAP8[$adb + 4 | 0] = 0; //@line 595
  HEAP8[$adb + 5 | 0] = 0; //@line 597
  HEAP8[$adb + 14 | 0] = 8; //@line 599
  HEAP8[$adb + 15 | 0] = 0; //@line 601
  return;
 } else if (($1 << 24 >> 24 | 0) == 1 | ($1 << 24 >> 24 | 0) == 2) {
  if ((HEAP8[$adb + 1 | 0] | 0) == 0) {
   HEAP8[$adb + 14 | 0] = 8; //@line 612
   HEAP8[$adb + 15 | 0] = 0; //@line 614
   return;
  }
  $63 = $adb + 4 | 0; //@line 618
  $64 = HEAP8[$63] | 0; //@line 619
  $66 = HEAP8[$adb + 5 | 0] | 0; //@line 621
  HEAP8[$adb + 14 | 0] = 8; //@line 624
  if (($64 & 255) >= ($66 & 255)) {
   HEAP8[$adb + 15 | 0] = -86; //@line 628
   if ((HEAP8[$43] | 0) == 1) {
    return;
   }
   HEAP8[$43] = 1; //@line 636
   $104 = HEAP32[$adb + 116 >> 2] | 0; //@line 638
   if (($104 | 0) == 0) {
    return;
   }
   FUNCTION_TABLE_vii[$104 & 511](HEAP32[$adb + 112 >> 2] | 0, 1); //@line 647
   return;
  }
  $70 = $64 + 1 & 255; //@line 652
  HEAP8[$63] = $70; //@line 653
  HEAP8[$adb + 15 | 0] = HEAP8[($64 & 255) + ($adb + 6) | 0] | 0; //@line 658
  if (($70 & 255) < ($66 & 255)) {
   return;
  }
  $79 = HEAPU8[$adb + 2 | 0] | 0; //@line 667
  $80 = $79 >>> 4; //@line 668
  $82 = HEAP32[$adb + 24 >> 2] | 0; //@line 670
  $i_0_i_i = 0; //@line 672
  while (1) {
   if ($i_0_i_i >>> 0 >= $82 >>> 0) {
    label = 75; //@line 678
    break;
   }
   $87 = HEAP32[$adb + 28 + ($i_0_i_i << 2) >> 2] | 0; //@line 682
   if ((HEAPU8[$87 + 4 | 0] | 0) == ($80 | 0)) {
    break;
   } else {
    $i_0_i_i = $i_0_i_i + 1 | 0; //@line 692
   }
  }
  if ((label | 0) == 75) {
   return;
  }
  if (($87 | 0) == 0) {
   return;
  }
  FUNCTION_TABLE_vii[HEAP32[$87 + 40 >> 2] & 511]($87, $79 & 3); //@line 708
  return;
 } else if (($1 << 24 >> 24 | 0) == 3) {
  HEAP8[$adb + 1 | 0] = 1; //@line 714
  HEAP8[$adb + 4 | 0] = 0; //@line 716
  HEAP8[$adb + 5 | 0] = 0; //@line 718
  HEAP8[$adb + 14 | 0] = 0; //@line 720
  HEAP8[$adb + 15 | 0] = 0; //@line 722
  HEAP32[$adb + 20 >> 2] = 0; //@line 724
  return;
 } else {
  return;
 }
}
function _mac_adb_clock($adb, $cnt) {
 $adb = $adb | 0;
 $cnt = $cnt | 0;
 var $1 = 0, $2 = 0, $9 = 0, $11 = 0, $15 = 0, $33 = 0, $34 = 0, $44 = 0, $49 = 0, $_pre_phi = 0, $53 = 0, $58 = 0, $61 = 0, $63 = 0, $74 = 0, $83 = 0, $84 = 0, $88 = 0;
 $1 = $adb + 14 | 0; //@line 750
 $2 = HEAP8[$1] | 0; //@line 751
 if ($2 << 24 >> 24 == 0) {
  if ((HEAP8[$adb | 0] | 0) != 3) {
   return;
  }
  $9 = $adb + 20 | 0; //@line 763
  $11 = (HEAP32[$9 >> 2] | 0) + $cnt | 0; //@line 765
  HEAP32[$9 >> 2] = $11; //@line 766
  if ($11 >>> 0 < 86170) {
   return;
  }
  HEAP32[$9 >> 2] = 0; //@line 773
  $15 = HEAP8[$adb + 3 | 0] | 0; //@line 775
  if ($15 << 24 >> 24 == 0) {
   return;
  }
  _adb_start_transaction($adb, $15, 1); //@line 782
  if ((HEAPU8[$adb + 4 | 0] | 0) < (HEAPU8[$adb + 5 | 0] | 0)) {
   HEAP8[$1] = 8; //@line 790
   HEAP8[$adb + 15 | 0] = -86; //@line 792
   return;
  }
  if ((HEAP8[$adb + 108 | 0] | 0) == 0) {
   return;
  }
  HEAP8[$1] = 8; //@line 805
  HEAP8[$adb + 15 | 0] = -86; //@line 807
  return;
 }
 HEAP32[$adb + 20 >> 2] = 0; //@line 813
 $33 = $adb + 16 | 0; //@line 814
 $34 = HEAP32[$33 >> 2] | 0; //@line 815
 if ($34 >>> 0 > $cnt >>> 0) {
  HEAP32[$33 >> 2] = $34 - $cnt; //@line 820
  return;
 }
 HEAP32[$33 >> 2] = 0; //@line 825
 do {
  if ((HEAP8[$adb + 1 | 0] | 0) == 0) {
   $58 = $adb + 15 | 0; //@line 832
   HEAP8[$58] = HEAP8[$58] << 1; //@line 835
   $61 = $2 - 1 & 255; //@line 836
   HEAP8[$1] = $61; //@line 837
   $63 = HEAP32[$adb + 104 >> 2] | 0; //@line 839
   if (($63 | 0) == 0) {
    $74 = $61; //@line 843
   } else {
    if ((FUNCTION_TABLE_ii[$63 & 31](HEAP32[$adb + 100 >> 2] | 0) | 0) << 24 >> 24 != 0) {
     HEAP8[$58] = HEAP8[$58] | 1; //@line 853
    }
    $74 = HEAP8[$1] | 0; //@line 857
   }
   if ($74 << 24 >> 24 != 0) {
    break;
   }
   if ((HEAP8[$adb | 0] | 0) == 0) {
    _adb_start_transaction($adb, HEAP8[$58] | 0, 0); //@line 871
    break;
   }
   $83 = $adb + 5 | 0; //@line 875
   $84 = HEAP8[$83] | 0; //@line 876
   if (($84 & 255) >= 8) {
    break;
   }
   $88 = HEAP8[$58] | 0; //@line 883
   HEAP8[$83] = $84 + 1 & 255; //@line 885
   HEAP8[($84 & 255) + ($adb + 6) | 0] = $88; //@line 887
  } else {
   $44 = HEAP32[$adb + 96 >> 2] | 0; //@line 891
   if (($44 | 0) == 0) {
    $53 = $2;
    $_pre_phi = $adb + 15 | 0;
   } else {
    $49 = $adb + 15 | 0; //@line 901
    FUNCTION_TABLE_vii[$44 & 511](HEAP32[$adb + 92 >> 2] | 0, (HEAPU8[$49] | 0) >>> 7); //@line 904
    $53 = HEAP8[$1] | 0;
    $_pre_phi = $49;
   }
   HEAP8[$_pre_phi] = HEAP8[$_pre_phi] << 1; //@line 913
   HEAP8[$1] = $53 - 1 & 255; //@line 915
  }
 } while (0);
 HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 783; //@line 921
 return;
}
function _adb_start_transaction($adb, $cmd, $poll) {
 $adb = $adb | 0;
 $cmd = $cmd | 0;
 $poll = $poll | 0;
 var $1 = 0, $6 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $18 = 0, $i_017_i_i = 0, $22 = 0, $30 = 0, $32 = 0, $37 = 0, $43 = 0, $46 = 0, $48 = 0, $i_0_i_i = 0, $53 = 0, $72 = 0, $74 = 0, $i_0_i_i19 = 0, $79 = 0, $93 = 0, $94 = 0, $95 = 0, $97 = 0, $98 = 0, $100 = 0, $i_010_i = 0, $102 = 0, $120 = 0, $124 = 0, $125 = 0, sp = 0;
 sp = STACKTOP; //@line 947
 $1 = $adb + 108 | 0; //@line 948
 do {
  if ((HEAP8[$1] | 0) != 0) {
   HEAP8[$1] = 0; //@line 954
   $6 = HEAP32[$adb + 116 >> 2] | 0; //@line 956
   if (($6 | 0) == 0) {
    break;
   }
   FUNCTION_TABLE_vii[$6 & 511](HEAP32[$adb + 112 >> 2] | 0, 0); //@line 964
  }
 } while (0);
 $11 = $adb + 2 | 0; //@line 968
 HEAP8[$11] = $cmd; //@line 969
 HEAP8[$adb + 4 | 0] = 0; //@line 971
 $13 = $adb + 5 | 0; //@line 972
 HEAP8[$13] = 0; //@line 973
 $14 = $cmd & 255; //@line 974
 $15 = $14 & 15; //@line 975
 L150 : do {
  if (($15 | 0) == 0) {
   $18 = $adb + 24 | 0; //@line 980
   if ((HEAP32[$18 >> 2] | 0) != 0) {
    $i_017_i_i = 0; //@line 985
    do {
     $22 = HEAP32[$adb + 28 + ($i_017_i_i << 2) >> 2] | 0; //@line 989
     FUNCTION_TABLE_vi[HEAP32[$22 + 28 >> 2] & 1023]($22); //@line 993
     $i_017_i_i = $i_017_i_i + 1 | 0; //@line 994
    } while ($i_017_i_i >>> 0 < (HEAP32[$18 >> 2] | 0) >>> 0);
   }
   HEAP8[$adb | 0] = 3; //@line 1006
   $30 = $adb + 1 | 0; //@line 1007
   HEAP8[$30] = 1; //@line 1008
   $32 = $11; //@line 1010
   tempBigInt = 0; //@line 1011
   HEAP8[$32] = tempBigInt & 255; //@line 1011
   tempBigInt = tempBigInt >> 8; //@line 1011
   HEAP8[$32 + 1 | 0] = tempBigInt & 255; //@line 1011
   tempBigInt = tempBigInt >> 8; //@line 1011
   HEAP8[$32 + 2 | 0] = tempBigInt & 255; //@line 1011
   tempBigInt = tempBigInt >> 8; //@line 1011
   HEAP8[$32 + 3 | 0] = tempBigInt & 255; //@line 1011
   _memset($adb + 14 | 0, 0, 10); //@line 1012
   do {
    if ((HEAP8[$1] | 0) != 0) {
     HEAP8[$1] = 0; //@line 1018
     $37 = HEAP32[$adb + 116 >> 2] | 0; //@line 1020
     if (($37 | 0) == 0) {
      break;
     }
     FUNCTION_TABLE_vii[$37 & 511](HEAP32[$adb + 112 >> 2] | 0, 0); //@line 1028
    }
   } while (0);
   HEAP8[$30] = 1; //@line 1032
  } else {
   $43 = $14 & 12; //@line 1035
   if (($43 | 0) == 8) {
    break;
   } else if (($43 | 0) == 12) {
    HEAP8[$adb + 1 | 0] = 1; //@line 1040
    $46 = $14 >>> 4; //@line 1041
    $48 = HEAP32[$adb + 24 >> 2] | 0; //@line 1043
    $i_0_i_i = 0; //@line 1045
    while (1) {
     if ($i_0_i_i >>> 0 >= $48 >>> 0) {
      break L150;
     }
     $53 = HEAP32[$adb + 28 + ($i_0_i_i << 2) >> 2] | 0; //@line 1054
     if ((HEAPU8[$53 + 4 | 0] | 0) == ($46 | 0)) {
      break;
     } else {
      $i_0_i_i = $i_0_i_i + 1 | 0; //@line 1064
     }
    }
    if (($53 | 0) == 0) {
     break;
    }
    HEAP8[$13] = (FUNCTION_TABLE_iiii[HEAP32[$53 + 36 >> 2] & 127]($53, $14 & 3, $adb + 6 | 0) | 0) & 255; //@line 1078
    HEAP8[$adb + 3 | 0] = $cmd; //@line 1080
    break;
   }
   if (($15 | 0) != 1) {
    _mac_log_deb(58184, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $14, tempInt) | 0); //@line 1087
    break;
   }
   HEAP8[$adb + 1 | 0] = 1; //@line 1091
   $72 = $14 >>> 4; //@line 1092
   $74 = HEAP32[$adb + 24 >> 2] | 0; //@line 1094
   $i_0_i_i19 = 0; //@line 1096
   while (1) {
    if ($i_0_i_i19 >>> 0 >= $74 >>> 0) {
     break L150;
    }
    $79 = HEAP32[$adb + 28 + ($i_0_i_i19 << 2) >> 2] | 0; //@line 1105
    if ((HEAPU8[$79 + 4 | 0] | 0) == ($72 | 0)) {
     break;
    } else {
     $i_0_i_i19 = $i_0_i_i19 + 1 | 0; //@line 1115
    }
   }
   if (($79 | 0) == 0) {
    break;
   }
   FUNCTION_TABLE_vi[HEAP32[$79 + 32 >> 2] & 1023]($79); //@line 1126
  }
 } while (0);
 if (($poll | 0) == 0) {
  STACKTOP = sp; //@line 1133
  return;
 }
 $93 = $14 >>> 4; //@line 1136
 $94 = $adb + 24 | 0; //@line 1137
 $95 = HEAP32[$94 >> 2] | 0; //@line 1138
 if (($95 | 0) == 0) {
  STACKTOP = sp; //@line 1142
  return;
 }
 $97 = $adb + 116 | 0; //@line 1145
 $98 = $adb + 112 | 0; //@line 1146
 $i_010_i = 0;
 $100 = $95;
 while (1) {
  $102 = HEAP32[$adb + 28 + ($i_010_i << 2) >> 2] | 0; //@line 1153
  do {
   if ((HEAP8[$102 + 7 | 0] | 0) == 0) {
    $124 = $100; //@line 1160
   } else {
    if ((HEAPU8[$102 + 4 | 0] | 0) == ($93 | 0)) {
     $124 = $100; //@line 1168
     break;
    }
    if ((HEAP32[$102 + 20 >> 2] & 8192 | 0) == 0) {
     $124 = $100; //@line 1177
     break;
    }
    if ((HEAP8[$1] | 0) == 1) {
     $124 = $100; //@line 1184
     break;
    }
    HEAP8[$1] = 1; //@line 1187
    $120 = HEAP32[$97 >> 2] | 0; //@line 1188
    if (($120 | 0) == 0) {
     $124 = $100; //@line 1192
     break;
    }
    FUNCTION_TABLE_vii[$120 & 511](HEAP32[$98 >> 2] | 0, 1); //@line 1196
    $124 = HEAP32[$94 >> 2] | 0; //@line 1199
   }
  } while (0);
  $125 = $i_010_i + 1 | 0; //@line 1203
  if ($125 >>> 0 < $124 >>> 0) {
   $i_010_i = $125;
   $100 = $124;
  } else {
   break;
  }
 }
 STACKTOP = sp; //@line 1212
 return;
}
function _adb_kbd_set_keypad_mode($kbd, $motion) {
 $kbd = $kbd | 0;
 $motion = $motion | 0;
 var $3 = 0, $5 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $12 = 0, $14 = 0, $15 = 0, $tmp_08_i = 0, $18 = 0, $19$1 = 0, $21 = 0, $23 = 0, $30 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $37 = 0, $39 = 0, $40 = 0, $tmp_08_i7 = 0, $43 = 0, $44$1 = 0, $46 = 0, $48 = 0;
 $3 = HEAP32[$kbd + 320 >> 2] | 0; //@line 1232
 if (($motion | 0) == 0) {
  $30 = HEAP32[2260] | 0; //@line 1235
  if (($30 | 0) != 0) {
   $32 = $3 | 0; //@line 1239
   $34 = 9040;
   $33 = $30;
   do {
    $35 = HEAP32[$32 >> 2] | 0; //@line 1245
    L217 : do {
     if (($35 | 0) != 0) {
      $37 = $34; //@line 1250
      $tmp_08_i7 = $3;
      $40 = $35;
      $39 = $33;
      while (1) {
       if (($40 | 0) == ($39 | 0)) {
        $43 = $tmp_08_i7; //@line 1260
        $44$1 = HEAP32[$37 + 4 >> 2] | 0; //@line 1264
        HEAP32[$43 >> 2] = HEAP32[$37 >> 2]; //@line 1266
        HEAP32[$43 + 4 >> 2] = $44$1; //@line 1268
       }
       $46 = $tmp_08_i7 + 8 | 0; //@line 1271
       $48 = HEAP32[$46 >> 2] | 0; //@line 1273
       if (($48 | 0) == 0) {
        break L217;
       }
       $tmp_08_i7 = $46;
       $40 = $48;
       $39 = HEAP32[$34 >> 2] | 0;
      }
     }
    } while (0);
    $34 = $34 + 8 | 0; //@line 1285
    $33 = HEAP32[$34 >> 2] | 0; //@line 1286
   } while (($33 | 0) != 0);
  }
  HEAP8[$kbd + 316 | 0] = 0; //@line 1297
  return;
 } else {
  $5 = HEAP32[2234] | 0; //@line 1301
  if (($5 | 0) != 0) {
   $7 = $3 | 0; //@line 1305
   $9 = 8936;
   $8 = $5;
   do {
    $10 = HEAP32[$7 >> 2] | 0; //@line 1311
    L201 : do {
     if (($10 | 0) != 0) {
      $12 = $9; //@line 1316
      $tmp_08_i = $3;
      $15 = $10;
      $14 = $8;
      while (1) {
       if (($15 | 0) == ($14 | 0)) {
        $18 = $tmp_08_i; //@line 1326
        $19$1 = HEAP32[$12 + 4 >> 2] | 0; //@line 1330
        HEAP32[$18 >> 2] = HEAP32[$12 >> 2]; //@line 1332
        HEAP32[$18 + 4 >> 2] = $19$1; //@line 1334
       }
       $21 = $tmp_08_i + 8 | 0; //@line 1337
       $23 = HEAP32[$21 >> 2] | 0; //@line 1339
       if (($23 | 0) == 0) {
        break L201;
       }
       $tmp_08_i = $21;
       $15 = $23;
       $14 = HEAP32[$9 >> 2] | 0;
      }
     }
    } while (0);
    $9 = $9 + 8 | 0; //@line 1351
    $8 = HEAP32[$9 >> 2] | 0; //@line 1352
   } while (($8 | 0) != 0);
  }
  HEAP8[$kbd + 316 | 0] = 1; //@line 1363
  return;
 }
}
function _adb_kbd_get_keypad_mode($kbd) {
 $kbd = $kbd | 0;
 return HEAP8[$kbd + 316 | 0] | 0; //@line 1380
}
function _adb_kbd_talk_done($dev, $reg) {
 $dev = $dev | 0;
 $reg = $reg | 0;
 var $2 = 0;
 $2 = HEAP32[$dev >> 2] | 0; //@line 1392
 if (($reg | 0) != 0) {
  return;
 }
 HEAP8[$2 + 48 | 0] = 0; //@line 1400
 HEAP8[$2 + 7 | 0] = (HEAP32[$2 + 52 >> 2] | 0) != (HEAP32[$2 + 56 >> 2] | 0) | 0; //@line 1410
 return;
}
function _adb_mouse_move($mse, $button, $dx, $dy) {
 $mse = $mse | 0;
 $button = $button | 0;
 $dx = $dx | 0;
 $dy = $dy | 0;
 var $1 = 0, $9 = 0, $11 = 0, $12 = 0, $14 = 0, $_phi_trans_insert = 0, $_off0 = 0, $19 = 0;
 $1 = $mse + 56 | 0; //@line 1427
 if (((HEAP32[$1 >> 2] ^ $button) & 1 | 0) != 0) {
  HEAP32[$mse + 52 >> 2] = 1; //@line 1435
 }
 HEAP32[$1 >> 2] = $button; //@line 1438
 $9 = $mse + 60 | 0; //@line 1439
 $11 = (HEAP32[$9 >> 2] | 0) + $dx | 0; //@line 1441
 HEAP32[$9 >> 2] = $11; //@line 1442
 $12 = $mse + 64 | 0; //@line 1443
 $14 = (HEAP32[$12 >> 2] | 0) + $dy | 0; //@line 1445
 HEAP32[$12 >> 2] = $14; //@line 1446
 $_phi_trans_insert = $mse + 52 | 0; //@line 1449
 if (($11 | $14 | 0) == 0) {
  $_off0 = HEAP32[$_phi_trans_insert >> 2] & 255; //@line 1455
  $19 = $mse + 7 | 0; //@line 1457
  HEAP8[$19] = $_off0; //@line 1458
  return;
 } else {
  HEAP32[$_phi_trans_insert >> 2] = 1; //@line 1462
  $_off0 = 1; //@line 1464
  $19 = $mse + 7 | 0; //@line 1466
  HEAP8[$19] = $_off0; //@line 1467
  return;
 }
}
function _adb_mouse_talk_done($dev, $reg) {
 $dev = $dev | 0;
 $reg = $reg | 0;
 var $2 = 0, $5 = 0, $10 = 0, $_off016 = 0, $22 = 0, $24 = 0, $25 = 0, $29 = 0, $31 = 0, $32 = 0, $_off0 = 0;
 $2 = HEAP32[$dev >> 2] | 0; //@line 1485
 if (($reg | 0) != 0) {
  return;
 }
 $5 = $2 + 48 | 0; //@line 1492
 if ((HEAP8[$5] | 0) == 0) {
  return;
 }
 HEAP8[$5] = 0; //@line 1500
 $10 = $2 + 52 | 0; //@line 1502
 HEAP32[$10 >> 2] = 0; //@line 1503
 if ((HEAP32[$2 + 68 >> 2] | 0) == (HEAP32[$2 + 56 >> 2] | 0)) {
  $_off016 = 0; //@line 1513
 } else {
  HEAP32[$10 >> 2] = 1; //@line 1515
  $_off016 = 1; //@line 1517
 }
 $22 = HEAP32[$2 + 72 >> 2] | 0; //@line 1522
 $24 = $2 + 60 | 0; //@line 1524
 $25 = HEAP32[$24 >> 2] | 0; //@line 1525
 HEAP32[$24 >> 2] = $25 - $22; //@line 1527
 $29 = HEAP32[$2 + 76 >> 2] | 0; //@line 1530
 $31 = $2 + 64 | 0; //@line 1532
 $32 = HEAP32[$31 >> 2] | 0; //@line 1533
 HEAP32[$31 >> 2] = $32 - $29; //@line 1535
 if (($25 | 0) == ($22 | 0) & ($32 | 0) == ($29 | 0)) {
  $_off0 = $_off016; //@line 1541
 } else {
  HEAP32[$10 >> 2] = 1; //@line 1543
  $_off0 = 1; //@line 1545
 }
 HEAP8[$dev + 7 | 0] = $_off0; //@line 1549
 return;
}
function _adb_kbd_set_key($kbd, $event, $key) {
 $kbd = $kbd | 0;
 $event = $event | 0;
 $key = $key | 0;
 var $map_0 = 0, $5 = 0, $6 = 0, $11 = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $28 = 0, $29 = 0, $31 = 0, $32 = 0, $_pre_phi18 = 0, $_pre_phi = 0, sp = 0;
 sp = STACKTOP; //@line 1567
 $map_0 = HEAP32[$kbd + 320 >> 2] | 0; //@line 1571
 while (1) {
  $5 = HEAP32[$map_0 >> 2] | 0; //@line 1575
  $6 = ($5 | 0) == 0; //@line 1576
  if ($6 | ($5 | 0) == ($key | 0)) {
   break;
  } else {
   $map_0 = $map_0 + 8 | 0; //@line 1584
  }
 }
 if ($6) {
  $11 = _pce_key_to_string($key) | 0; //@line 1589
  _pce_log(2, 58152, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $key, HEAP32[tempInt + 8 >> 2] = ($11 | 0) != 0 ? $11 : 56152, tempInt) | 0); //@line 1592
  STACKTOP = sp; //@line 1594
  return;
 }
 do {
  if (($event | 0) == 1) {
   $16 = $kbd + 56 | 0; //@line 1599
   $17 = HEAP32[$16 >> 2] | 0; //@line 1600
   $19 = $17 + 1 & 255; //@line 1602
   $20 = $kbd + 52 | 0; //@line 1603
   if (($19 | 0) == (HEAP32[$20 >> 2] | 0)) {
    $_pre_phi = $20;
    $_pre_phi18 = $16;
    break;
   }
   HEAP8[$kbd + 60 + $17 | 0] = HEAP8[$map_0 + 4 | 0] | 0; //@line 1614
   HEAP32[$16 >> 2] = $19; //@line 1615
   $_pre_phi = $20;
   $_pre_phi18 = $16;
  } else if (($event | 0) == 2) {
   $28 = $kbd + 56 | 0; //@line 1619
   $29 = HEAP32[$28 >> 2] | 0; //@line 1620
   $31 = $29 + 1 & 255; //@line 1622
   $32 = $kbd + 52 | 0; //@line 1623
   if (($31 | 0) == (HEAP32[$32 >> 2] | 0)) {
    $_pre_phi = $32;
    $_pre_phi18 = $28;
    break;
   }
   HEAP8[$kbd + 60 + $29 | 0] = HEAP8[$map_0 + 4 | 0] | -128; //@line 1635
   HEAP32[$28 >> 2] = $31; //@line 1636
   $_pre_phi = $32;
   $_pre_phi18 = $28;
  } else {
   $_pre_phi = $kbd + 52 | 0;
   $_pre_phi18 = $kbd + 56 | 0;
  }
 } while (0);
 HEAP8[$kbd + 7 | 0] = (HEAP32[$_pre_phi >> 2] | 0) != (HEAP32[$_pre_phi18 >> 2] | 0) | 0; //@line 1653
 STACKTOP = sp; //@line 1655
 return;
}
function _adb_kbd_del($dev) {
 $dev = $dev | 0;
 var $2 = 0;
 $2 = HEAP32[$dev >> 2] | 0; //@line 1666
 _free(HEAP32[$2 + 320 >> 2] | 0); //@line 1671
 _free($2); //@line 1672
 return;
}
function _adb_kbd_reset($dev) {
 $dev = $dev | 0;
 var $2 = 0;
 $2 = HEAP32[$dev >> 2] | 0; //@line 1684
 _adb_dev_reset($dev); //@line 1685
 HEAP8[$2 + 48 | 0] = 0; //@line 1687
 HEAP32[$2 + 52 >> 2] = 0; //@line 1690
 HEAP32[$2 + 56 >> 2] = 0; //@line 1693
 return;
}
function _adb_kbd_flush($dev) {
 $dev = $dev | 0;
 var $2 = 0;
 $2 = HEAP32[$dev >> 2] | 0; //@line 1705
 _adb_dev_flush($dev); //@line 1706
 HEAP8[$2 + 48 | 0] = 0; //@line 1708
 HEAP32[$2 + 52 >> 2] = 0; //@line 1711
 HEAP32[$2 + 56 >> 2] = 0; //@line 1714
 return;
}
function _adb_kbd_talk($dev, $reg, $buf) {
 $dev = $dev | 0;
 $reg = $reg | 0;
 $buf = $buf | 0;
 var $3 = 0, $4 = 0, $5 = 0, $10 = 0, $11 = 0, $14 = 0, $18 = 0, $20 = 0, $23 = 0, $27 = 0, $31 = 0, $_pre_phi_i = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 1730
 if (($reg | 0) == 2) {
  HEAP8[$buf] = -1; //@line 1732
  HEAP8[$buf + 1 | 0] = -1; //@line 1734
  _mac_log_deb(43320, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 1735
  $_0 = 2; //@line 1737
  STACKTOP = sp; //@line 1739
  return $_0 | 0; //@line 1740
 } else if (($reg | 0) == 0) {
  $3 = HEAP32[$dev >> 2] | 0; //@line 1743
  $4 = $3; //@line 1744
  $5 = $3 + 48 | 0; //@line 1745
  if ((HEAP8[$5] | 0) == 0) {
   $10 = $3 + 52 | 0; //@line 1751
   $11 = HEAP32[$10 >> 2] | 0; //@line 1752
   $14 = HEAP32[$3 + 56 >> 2] | 0; //@line 1755
   if (($11 | 0) == ($14 | 0)) {
    $_0 = 0; //@line 1759
    STACKTOP = sp; //@line 1761
    return $_0 | 0; //@line 1762
   }
   $18 = HEAP8[$4 + 60 + $11 | 0] | 0; //@line 1765
   $20 = $11 + 1 & 255; //@line 1767
   HEAP32[$10 >> 2] = $20; //@line 1768
   if (($20 | 0) == ($14 | 0)) {
    $27 = 255; //@line 1772
   } else {
    $23 = HEAP8[$4 + 60 + $20 | 0] | 0; //@line 1775
    HEAP32[$10 >> 2] = $11 + 2 & 255; //@line 1778
    $27 = $23 & 255; //@line 1781
   }
   $31 = $dev + 8 | 0; //@line 1787
   HEAP32[$31 >> 2] = $27 | ($18 & 255) << 8; //@line 1788
   $_pre_phi_i = $31; //@line 1790
  } else {
   $_pre_phi_i = $dev + 8 | 0; //@line 1794
  }
  HEAP8[$5] = 1; //@line 1797
  HEAP8[$buf] = (HEAP32[$_pre_phi_i >> 2] | 0) >>> 8 & 255; //@line 1801
  HEAP8[$buf + 1 | 0] = HEAP32[$_pre_phi_i >> 2] & 255; //@line 1805
  $_0 = 2; //@line 1807
  STACKTOP = sp; //@line 1809
  return $_0 | 0; //@line 1810
 } else if (($reg | 0) != 3) {
  _mac_log_deb(46784, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $reg, tempInt) | 0); //@line 1812
 }
 $_0 = _adb_dev_talk($dev, $reg, $buf) | 0; //@line 1816
 STACKTOP = sp; //@line 1818
 return $_0 | 0; //@line 1819
}
function _adb_kbd_listen($dev, $reg, $buf, $cnt) {
 $dev = $dev | 0;
 $reg = $reg | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 var sp = 0;
 sp = STACKTOP; //@line 1831
 do {
  if (($reg | 0) != 3) {
   _mac_log_deb(50880, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $reg, tempInt) | 0); //@line 1836
   if (!(($reg | 0) == 2 & ($cnt | 0) == 2)) {
    break;
   }
   HEAP32[$dev + 16 >> 2] = (HEAPU8[$buf] | 0) << 8 | (HEAPU8[$buf + 1 | 0] | 0); //@line 1852
   STACKTOP = sp; //@line 1854
   return;
  }
 } while (0);
 _adb_dev_listen($dev, $reg, $buf, $cnt); //@line 1858
 STACKTOP = sp; //@line 1859
 return;
}
function _adb_kbd_new() {
 var $1 = 0, $2 = 0, $n_0_i_i = 0, $28 = 0, $30 = 0, $31 = 0, $34 = 0, $_0_i_i = 0, $_0 = 0;
 $1 = _malloc(324) | 0; //@line 1872
 $2 = $1; //@line 1873
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 1877
  return $_0 | 0; //@line 1880
 }
 _adb_dev_init($1, 2, 2); //@line 1883
 HEAP32[$1 >> 2] = $1; //@line 1885
 HEAP32[$1 + 24 >> 2] = 2; //@line 1888
 HEAP32[$1 + 28 >> 2] = 142; //@line 1891
 HEAP32[$1 + 32 >> 2] = 8; //@line 1894
 HEAP32[$1 + 36 >> 2] = 68; //@line 1897
 HEAP32[$1 + 40 >> 2] = 128; //@line 1900
 HEAP32[$1 + 44 >> 2] = 6; //@line 1903
 HEAP32[$1 + 52 >> 2] = 0; //@line 1906
 HEAP32[$1 + 56 >> 2] = 0; //@line 1909
 HEAP8[$1 + 316 | 0] = 0; //@line 1911
 $n_0_i_i = 0; //@line 1913
 while (1) {
  $28 = $n_0_i_i + 1 | 0; //@line 1919
  if ((HEAP32[9144 + ($n_0_i_i << 3) >> 2] | 0) == 0) {
   break;
  } else {
   $n_0_i_i = $28; //@line 1924
  }
 }
 $30 = $28 << 3; //@line 1927
 $31 = _malloc($30) | 0; //@line 1928
 if (($31 | 0) == 0) {
  $_0_i_i = 0; //@line 1932
 } else {
  $34 = $31; //@line 1934
  _memcpy($31 | 0, 9144, $30) | 0; //@line 1935
  $_0_i_i = $34; //@line 1937
 }
 HEAP32[$1 + 320 >> 2] = $_0_i_i; //@line 1942
 $_0 = $2; //@line 1944
 return $_0 | 0; //@line 1947
}
function _adb_mouse_del($dev) {
 $dev = $dev | 0;
 _free(HEAP32[$dev >> 2] | 0); //@line 1958
 return;
}
function _adb_mouse_reset($dev) {
 $dev = $dev | 0;
 var $2 = 0;
 $2 = HEAP32[$dev >> 2] | 0; //@line 1970
 _adb_dev_reset($dev); //@line 1971
 _memset($2 + 52 | 0, 0, 28); //@line 1974
 HEAP32[$dev + 8 >> 2] = 32896; //@line 1975
 return;
}
function _adb_mouse_flush($dev) {
 $dev = $dev | 0;
 var $2 = 0;
 $2 = HEAP32[$dev >> 2] | 0; //@line 1987
 _adb_dev_flush($dev); //@line 1988
 _memset($2 + 52 | 0, 0, 28); //@line 1990
 return;
}
function _adb_mouse_talk($dev, $reg, $buf) {
 $dev = $dev | 0;
 $reg = $reg | 0;
 $buf = $buf | 0;
 var $4 = 0, $15 = 0, $20 = 0, $25 = 0, $26 = 0, $32 = 0, $33 = 0, $r_0_i_i = 0, $40 = 0, $41 = 0, $r_0_i25_i = 0, $50 = 0, $_0 = 0;
 if (($reg | 0) != 0) {
  $_0 = _adb_dev_talk($dev, $reg, $buf) | 0; //@line 2014
  return $_0 | 0; //@line 2017
 }
 $4 = HEAP32[$dev >> 2] | 0; //@line 2020
 if ((HEAP32[$4 + 52 >> 2] | 0) == 0) {
  $_0 = 0; //@line 2027
  return $_0 | 0; //@line 2030
 }
 HEAP8[$4 + 48 | 0] = 1; //@line 2033
 $15 = $4 + 68 | 0; //@line 2038
 HEAP32[$15 >> 2] = HEAP32[$4 + 56 >> 2]; //@line 2039
 $20 = $4 + 72 | 0; //@line 2044
 HEAP32[$20 >> 2] = HEAP32[$4 + 60 >> 2]; //@line 2045
 $25 = $4 + 76 | 0; //@line 2050
 HEAP32[$25 >> 2] = HEAP32[$4 + 64 >> 2]; //@line 2051
 $26 = $dev + 8 | 0; //@line 2052
 HEAP32[$26 >> 2] = 32896; //@line 2053
 if ((HEAP32[$15 >> 2] & 1 | 0) == 0) {
  $32 = 32896; //@line 2059
 } else {
  HEAP32[$26 >> 2] = 128; //@line 2061
  $32 = 128; //@line 2063
 }
 $33 = HEAP32[$20 >> 2] | 0; //@line 2066
 if (($33 | 0) < 0) {
  $r_0_i_i = ($33 | 0) < -63 ? 65 : $33 & 127; //@line 2074
 } else {
  $r_0_i_i = ($33 | 0) > 63 ? 63 : $33; //@line 2078
 }
 $40 = $r_0_i_i | $32; //@line 2081
 HEAP32[$26 >> 2] = $40; //@line 2082
 $41 = HEAP32[$25 >> 2] | 0; //@line 2083
 if (($41 | 0) < 0) {
  $r_0_i25_i = ($41 | 0) < -63 ? 65 : $41 & 127; //@line 2091
 } else {
  $r_0_i25_i = ($41 | 0) > 63 ? 63 : $41; //@line 2095
 }
 $50 = $r_0_i25_i << 8 | $40 & 33023; //@line 2100
 HEAP32[$26 >> 2] = $50; //@line 2101
 HEAP8[$buf] = $50 >>> 8 & 255; //@line 2104
 HEAP8[$buf + 1 | 0] = HEAP32[$26 >> 2] & 255; //@line 2108
 $_0 = 2; //@line 2110
 return $_0 | 0; //@line 2113
}
function _adb_mouse_new() {
 var $1 = 0, $_0 = 0;
 $1 = _malloc(80) | 0; //@line 2123
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 2127
  return $_0 | 0; //@line 2130
 }
 _adb_dev_init($1, 3, 1); //@line 2134
 HEAP32[$1 >> 2] = $1; //@line 2136
 HEAP32[$1 + 24 >> 2] = 316; //@line 2139
 HEAP32[$1 + 28 >> 2] = 236; //@line 2142
 HEAP32[$1 + 32 >> 2] = 326; //@line 2145
 HEAP32[$1 + 36 >> 2] = 74; //@line 2148
 HEAP32[$1 + 40 >> 2] = 82; //@line 2151
 _memset($1 + 52 | 0, 0, 28); //@line 2153
 $_0 = $1; //@line 2155
 return $_0 | 0; //@line 2158
}
function _mac_prt_state($sim, $str) {
 $sim = $sim | 0;
 $str = $str | 0;
 var $cmd = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $i_014_i = 0, $53 = 0, $56 = 0, $59 = 0, $62 = 0, $72 = 0, $74 = 0, $76 = 0, $78 = 0, $82 = 0, $84 = 0, $86 = 0, $88 = 0, $90 = 0, $94 = 0, $96 = 0, $99 = 0, $101 = 0, $105 = 0, $107 = 0, $111 = 0, $114 = 0, $116 = 0, $118 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 2180
 STACKTOP = STACKTOP + 264 | 0; //@line 2180
 $cmd = sp | 0; //@line 2181
 _cmd_set_str($cmd, $str); //@line 2182
 if ((_cmd_match_eol($cmd) | 0) != 0) {
  STACKTOP = sp; //@line 2187
  return;
 }
 if ((_cmd_match_eol($cmd) | 0) != 0) {
  STACKTOP = sp; //@line 2194
  return;
 }
 $5 = $sim + 49 | 0; //@line 2197
 $6 = $sim + 48 | 0; //@line 2198
 $7 = $sim + 50 | 0; //@line 2199
 $8 = $sim + 51 | 0; //@line 2200
 $9 = $sim + 124 | 0; //@line 2201
 $10 = $sim + 44 | 0; //@line 2202
 $11 = $sim + 45 | 0; //@line 2203
 $12 = $sim + 68 | 0; //@line 2204
 $13 = $sim + 52 | 0; //@line 2205
 $14 = $sim + 46 | 0; //@line 2206
 $15 = $sim + 47 | 0; //@line 2207
 $16 = $sim + 42 | 0; //@line 2208
 $17 = $sim + 43 | 0; //@line 2209
 $18 = $sim + 69 | 0; //@line 2210
 $19 = $sim + 56 | 0; //@line 2211
 $20 = $sim + 54 | 0; //@line 2212
 $21 = $sim + 40 | 0; //@line 2213
 $22 = $sim + 41 | 0; //@line 2214
 $23 = $sim + 60 | 0; //@line 2215
 $24 = $sim + 4624 | 0; //@line 2216
 $25 = $sim + 4625 | 0; //@line 2217
 $26 = $sim + 64 | 0; //@line 2218
 $27 = $sim + 62 | 0; //@line 2219
 $28 = $sim + 1424 | 0; //@line 2220
 $29 = $sim + 8 | 0; //@line 2221
 $30 = $sim + 4 | 0; //@line 2222
 L348 : while (1) {
  do {
   if ((_cmd_match($cmd, 46504) | 0) == 0) {
    if ((_cmd_match($cmd, 45832) | 0) != 0) {
     _pce_prt_sep(34056); //@line 2234
     _mem_prt_state(HEAP32[$29 >> 2] | 0, HEAP32[_stdout >> 2] | 0); //@line 2237
     break;
    }
    if ((_cmd_match($cmd, 45480) | 0) == 0) {
     if ((_cmd_match($cmd, 45152) | 0) == 0) {
      break L348;
     }
     _pce_prt_sep(36864); //@line 2251
     $72 = HEAPU8[$6] | 0; //@line 2255
     $74 = HEAPU8[$7] | 0; //@line 2257
     $76 = HEAPU8[$8] | 0; //@line 2259
     $78 = HEAPU8[$9] | 0; //@line 2261
     _pce_printf(36328, (tempInt = STACKTOP, STACKTOP = STACKTOP + 40 | 0, HEAP32[tempInt >> 2] = HEAPU8[$5] | 0, HEAP32[tempInt + 8 >> 2] = $72, HEAP32[tempInt + 16 >> 2] = $74, HEAP32[tempInt + 24 >> 2] = $76, HEAP32[tempInt + 32 >> 2] = $78, tempInt) | 0); //@line 2262
     $82 = HEAPU8[$11] | 0; //@line 2266
     $84 = HEAPU8[$12] | 0; //@line 2268
     $86 = HEAPU16[$13 >> 1] | 0; //@line 2270
     $88 = HEAPU8[$14] | 0; //@line 2272
     $90 = HEAPU8[$15] | 0; //@line 2274
     _pce_printf(36040, (tempInt = STACKTOP, STACKTOP = STACKTOP + 48 | 0, HEAP32[tempInt >> 2] = HEAPU8[$10] | 0, HEAP32[tempInt + 8 >> 2] = $82, HEAP32[tempInt + 16 >> 2] = $84, HEAP32[tempInt + 24 >> 2] = $86, HEAP32[tempInt + 32 >> 2] = $88, HEAP32[tempInt + 40 >> 2] = $90, tempInt) | 0); //@line 2275
     $94 = HEAPU8[$17] | 0; //@line 2279
     $96 = HEAPU8[$18] | 0; //@line 2281
     $99 = (HEAP32[$19 >> 2] | 0) != 0 ? 42 : 32; //@line 2284
     $101 = HEAPU16[$20 >> 1] | 0; //@line 2286
     _pce_printf(35720, (tempInt = STACKTOP, STACKTOP = STACKTOP + 40 | 0, HEAP32[tempInt >> 2] = HEAPU8[$16] | 0, HEAP32[tempInt + 8 >> 2] = $94, HEAP32[tempInt + 16 >> 2] = $96, HEAP32[tempInt + 24 >> 2] = $99, HEAP32[tempInt + 32 >> 2] = $101, tempInt) | 0); //@line 2287
     $105 = HEAPU8[$22] | 0; //@line 2291
     $107 = HEAPU16[$23 >> 1] | 0; //@line 2293
     _pce_printf(35440, (tempInt = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempInt >> 2] = HEAPU8[$21] | 0, HEAP32[tempInt + 8 >> 2] = $105, HEAP32[tempInt + 16 >> 2] = 0, HEAP32[tempInt + 24 >> 2] = $107, tempInt) | 0); //@line 2294
     $111 = HEAPU8[$25] | 0; //@line 2298
     $114 = (HEAP32[$26 >> 2] | 0) != 0 ? 42 : 32; //@line 2301
     $116 = HEAPU16[$27 >> 1] | 0; //@line 2303
     _pce_printf(35144, (tempInt = STACKTOP, STACKTOP = STACKTOP + 40 | 0, HEAP32[tempInt >> 2] = HEAPU8[$24] | 0, HEAP32[tempInt + 8 >> 2] = $111, HEAP32[tempInt + 16 >> 2] = 0, HEAP32[tempInt + 24 >> 2] = $114, HEAP32[tempInt + 32 >> 2] = $116, tempInt) | 0); //@line 2304
     break;
    } else {
     _pce_prt_sep(34896); //@line 2307
     _pce_printf(34656, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAPU8[$28] | 0, tempInt) | 0); //@line 2310
     $i_014_i = 0; //@line 2312
     do {
      $53 = HEAPU8[$sim + 132 + $i_014_i | 0] | 0; //@line 2317
      $56 = HEAPU8[$sim + 148 + $i_014_i | 0] | 0; //@line 2320
      $59 = HEAPU8[$sim + 772 + $i_014_i | 0] | 0; //@line 2323
      $62 = HEAPU8[$sim + 788 + $i_014_i | 0] | 0; //@line 2326
      _pce_printf(34376, (tempInt = STACKTOP, STACKTOP = STACKTOP + 64 | 0, HEAP32[tempInt >> 2] = $i_014_i, HEAP32[tempInt + 8 >> 2] = $53, HEAP32[tempInt + 16 >> 2] = $i_014_i, HEAP32[tempInt + 24 >> 2] = $56, HEAP32[tempInt + 32 >> 2] = $i_014_i, HEAP32[tempInt + 40 >> 2] = $59, HEAP32[tempInt + 48 >> 2] = $i_014_i, HEAP32[tempInt + 56 >> 2] = $62, tempInt) | 0); //@line 2327
      $i_014_i = $i_014_i + 1 | 0; //@line 2328
     } while ($i_014_i >>> 0 < 16);
    }
   } else {
    _mac_prt_state_cpu(HEAP32[$30 >> 2] | 0); //@line 2340
   }
  } while (0);
  if ((_cmd_match_eol($cmd) | 0) != 0) {
   label = 292; //@line 2348
   break;
  }
 }
 if ((label | 0) == 292) {
  STACKTOP = sp; //@line 2353
  return;
 }
 $118 = _cmd_get_str($cmd) | 0; //@line 2356
 _pce_printf(44824, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $118, tempInt) | 0); //@line 2357
 STACKTOP = sp; //@line 2359
 return;
}
function _mac_log_mem($ext, $addr, $type) {
 $ext = $ext | 0;
 $addr = $addr | 0;
 $type = $type | 0;
 return;
}
function _mac_prt_state_cpu($c) {
 $c = $c | 0;
 var $op = 0, $str = 0, $1 = 0, $2 = 0, $3 = 0, $11 = 0.0, $12 = 0, $14 = 0, $37 = 0, $38 = 0, $40 = 0, $44 = 0, $46 = 0, $50 = 0, $52 = 0, $54 = 0, $55 = 0, $56 = 0, $58 = 0, $60 = 0, $62 = 0, $64 = 0, $65 = 0, $69 = 0, $71 = 0, $73 = 0, $74 = 0, $78 = 0, $79 = 0, $81 = 0, $83 = 0, $85 = 0, $86 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, sp = 0;
 sp = STACKTOP; //@line 2390
 STACKTOP = STACKTOP + 608 | 0; //@line 2390
 $op = sp | 0; //@line 2391
 $str = sp + 352 | 0; //@line 2392
 _pce_prt_sep(33832); //@line 2393
 $1 = _e68_get_opcnt($c) | 0; //@line 2394
 $2 = _e68_get_clkcnt($c) | 0; //@line 2395
 $3 = _e68_get_delay($c) | 0; //@line 2396
 if (($1 | 0) == 0) {
  $11 = 1.0; //@line 2400
 } else {
  $11 = +(($3 + $2 | 0) >>> 0 >>> 0) / +($1 >>> 0 >>> 0); //@line 2407
 }
 _pce_printf(33416, (tempInt = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempInt >> 2] = $2, HEAP32[tempInt + 8 >> 2] = $1, HEAP32[tempInt + 16 >> 2] = $3, HEAPF64[tempInt + 24 >> 3] = $11, tempInt) | 0); //@line 2410
 $12 = $c + 166 | 0; //@line 2411
 $14 = HEAPU16[$12 >> 1] | 0; //@line 2413
 $37 = _e68_get_exception($c) | 0; //@line 2436
 $38 = _e68_get_exception_name($c) | 0; //@line 2437
 $40 = (_e68_get_last_trap_a($c) | 0) & 65535; //@line 2439
 $44 = (HEAPU16[$12 >> 1] | 0) >>> 8 & 7; //@line 2443
 $46 = HEAP32[$c + 364 >> 2] | 0; //@line 2445
 _pce_printf(33024, (tempInt = STACKTOP, STACKTOP = STACKTOP + 112 | 0, HEAP32[tempInt >> 2] = $14, HEAP32[tempInt + 8 >> 2] = ($14 & 32768 | 0) != 0 ? 84 : 45, HEAP32[tempInt + 16 >> 2] = ($14 & 8192 | 0) != 0 ? 83 : 45, HEAP32[tempInt + 24 >> 2] = $14 & 255, HEAP32[tempInt + 32 >> 2] = ($14 & 1 | 0) != 0 ? 67 : 45, HEAP32[tempInt + 40 >> 2] = ($14 & 2 | 0) != 0 ? 86 : 45, HEAP32[tempInt + 48 >> 2] = ($14 & 4 | 0) != 0 ? 90 : 45, HEAP32[tempInt + 56 >> 2] = ($14 & 8 | 0) != 0 ? 78 : 45, HEAP32[tempInt + 64 >> 2] = ($14 & 16 | 0) != 0 ? 88 : 45, HEAP32[tempInt + 72 >> 2] = $37, HEAP32[tempInt + 80 >> 2] = $38, HEAP32[tempInt + 88 >> 2] = $40, HEAP32[tempInt + 96 >> 2] = $44, HEAP32[tempInt + 104 >> 2] = $46, tempInt) | 0); //@line 2446
 $50 = HEAP32[$c + 104 >> 2] | 0; //@line 2450
 $52 = HEAP32[$c + 120 >> 2] | 0; //@line 2452
 $54 = HEAP32[$c + 136 >> 2] | 0; //@line 2454
 $55 = $c + 152 | 0; //@line 2455
 $56 = HEAP32[$55 >> 2] | 0; //@line 2456
 _pce_printf(32680, (tempInt = STACKTOP, STACKTOP = STACKTOP + 40 | 0, HEAP32[tempInt >> 2] = HEAP32[$c + 88 >> 2], HEAP32[tempInt + 8 >> 2] = $50, HEAP32[tempInt + 16 >> 2] = $52, HEAP32[tempInt + 24 >> 2] = $54, HEAP32[tempInt + 32 >> 2] = $56, tempInt) | 0); //@line 2457
 $58 = HEAP32[$c + 92 >> 2] | 0; //@line 2459
 $60 = HEAP32[$c + 108 >> 2] | 0; //@line 2461
 $62 = HEAP32[$c + 124 >> 2] | 0; //@line 2463
 $64 = HEAP32[$c + 140 >> 2] | 0; //@line 2465
 $65 = _e68_get_last_pc($c, 0) | 0; //@line 2466
 _pce_printf(32536, (tempInt = STACKTOP, STACKTOP = STACKTOP + 40 | 0, HEAP32[tempInt >> 2] = $58, HEAP32[tempInt + 8 >> 2] = $60, HEAP32[tempInt + 16 >> 2] = $62, HEAP32[tempInt + 24 >> 2] = $64, HEAP32[tempInt + 32 >> 2] = $65, tempInt) | 0); //@line 2467
 $69 = HEAP32[$c + 112 >> 2] | 0; //@line 2471
 $71 = HEAP32[$c + 128 >> 2] | 0; //@line 2473
 $73 = HEAP32[$c + 144 >> 2] | 0; //@line 2475
 $74 = $c + 334 | 0; //@line 2476
 $78 = $c + 148 | 0; //@line 2480
 $79 = HEAP32[((HEAP8[$74] | 0) == 0 ? $78 : $c + 168 | 0) >> 2] | 0; //@line 2482
 _pce_printf(32416, (tempInt = STACKTOP, STACKTOP = STACKTOP + 40 | 0, HEAP32[tempInt >> 2] = HEAP32[$c + 96 >> 2], HEAP32[tempInt + 8 >> 2] = $69, HEAP32[tempInt + 16 >> 2] = $71, HEAP32[tempInt + 24 >> 2] = $73, HEAP32[tempInt + 32 >> 2] = $79, tempInt) | 0); //@line 2483
 $81 = HEAP32[$c + 100 >> 2] | 0; //@line 2485
 $83 = HEAP32[$c + 116 >> 2] | 0; //@line 2487
 $85 = HEAP32[$c + 132 >> 2] | 0; //@line 2489
 $86 = HEAP32[$78 >> 2] | 0; //@line 2490
 if ((HEAP8[$74] | 0) != 0) {
  $93 = $86; //@line 2495
  _pce_printf(32232, (tempInt = STACKTOP, STACKTOP = STACKTOP + 40 | 0, HEAP32[tempInt >> 2] = $81, HEAP32[tempInt + 8 >> 2] = $83, HEAP32[tempInt + 16 >> 2] = $85, HEAP32[tempInt + 24 >> 2] = $86, HEAP32[tempInt + 32 >> 2] = $93, tempInt) | 0); //@line 2497
  $94 = HEAP32[$55 >> 2] | 0; //@line 2498
  _e68_dasm_mem($c, $op, $94); //@line 2499
  $95 = $str | 0; //@line 2500
  _mac_dasm_str($95, $op); //@line 2501
  $96 = HEAP32[$55 >> 2] | 0; //@line 2502
  _pce_printf(42352, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $96, HEAP32[tempInt + 8 >> 2] = $95, tempInt) | 0); //@line 2503
  STACKTOP = sp; //@line 2504
  return;
 }
 $93 = HEAP32[$c + 172 >> 2] | 0; //@line 2510
 _pce_printf(32232, (tempInt = STACKTOP, STACKTOP = STACKTOP + 40 | 0, HEAP32[tempInt >> 2] = $81, HEAP32[tempInt + 8 >> 2] = $83, HEAP32[tempInt + 16 >> 2] = $85, HEAP32[tempInt + 24 >> 2] = $86, HEAP32[tempInt + 32 >> 2] = $93, tempInt) | 0); //@line 2512
 $94 = HEAP32[$55 >> 2] | 0; //@line 2513
 _e68_dasm_mem($c, $op, $94); //@line 2514
 $95 = $str | 0; //@line 2515
 _mac_dasm_str($95, $op); //@line 2516
 $96 = HEAP32[$55 >> 2] | 0; //@line 2517
 _pce_printf(42352, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $96, HEAP32[tempInt + 8 >> 2] = $95, tempInt) | 0); //@line 2518
 STACKTOP = sp; //@line 2519
 return;
}
function _mac_run($sim) {
 $sim = $sim | 0;
 var $1 = 0, $6 = 0, $7 = 0;
 $1 = $sim + 4680 | 0; //@line 2531
 _pce_start($1); //@line 2532
 _mac_clock_discontinuity($sim); //@line 2533
 _mac_clock(HEAP32[15588] | 0, 0); //@line 2535
 _mac_clock(HEAP32[15588] | 0, 0); //@line 2537
 if ((HEAP32[$1 >> 2] | 0) != 0) {
  _pce_stop(); //@line 2542
  return;
 }
 $6 = $sim + 4676 | 0; //@line 2546
 $7 = $sim + 3480 | 0; //@line 2547
 do {
  if ((HEAP8[$6] | 0) != 0) {
   do {
    _pce_usleep(5e4) | 0; //@line 2555
    _trm_check(HEAP32[$7 >> 2] | 0); //@line 2557
   } while ((HEAP8[$6] | 0) != 0);
  }
  _mac_clock(HEAP32[15588] | 0, 0); //@line 2567
  _mac_clock(HEAP32[15588] | 0, 0); //@line 2569
 } while ((HEAP32[$1 >> 2] | 0) == 0);
 _pce_stop(); //@line 2577
 return;
}
function _mac_run_emscripten($sim) {
 $sim = $sim | 0;
 HEAP32[15692] = $sim; //@line 2588
 _pce_start($sim + 4680 | 0); //@line 2590
 _mac_clock_discontinuity($sim); //@line 2591
 _emscripten_set_main_loop(4, 100, 1) | 0; //@line 2592
 return;
}
function _mac_run_emscripten_step() {
 var $mousex = 0, $mousey = 0, $1 = 0, $3 = 0, $5 = 0, $i_011 = 0, $11 = 0, $17 = 0, $18 = 0, $24 = 0, $27 = 0, $28 = 0, $35 = 0, $48 = 0, $49 = 0, $50 = 0, $57 = 0, $70 = 0, $71 = 0, $72 = 0, $79 = 0, $92 = 0, $93 = 0, $94 = 0, $101 = 0, $114 = 0, $115 = 0, $116 = 0, $123 = 0, $136 = 0, $137 = 0, $138 = 0, $145 = 0, $158 = 0, $175 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 2620
 STACKTOP = STACKTOP + 16 | 0; //@line 2620
 $mousex = sp | 0; //@line 2621
 $mousey = sp + 8 | 0; //@line 2622
 $1 = _SDL_GetVideoInfo() | 0; //@line 2623
 $3 = HEAP32[$1 + 12 >> 2] | 0; //@line 2625
 $5 = HEAP32[$1 + 16 >> 2] | 0; //@line 2627
 $i_011 = 0; //@line 2629
 while (1) {
  do {
   if ((($i_011 | 0) % 100 | 0 | 0) == 0) {
    _SDL_GetMouseState($mousex | 0, $mousey | 0) | 0; //@line 2637
    $11 = HEAP32[$mousex >> 2] | 0; //@line 2638
    if (($11 | 0) > ($3 | 0)) {
     $17 = $3; //@line 2642
    } else {
     $17 = ($11 | 0) < 0 ? 0 : $11; //@line 2647
    }
    HEAP32[$mousex >> 2] = $17; //@line 2650
    $18 = HEAP32[$mousey >> 2] | 0; //@line 2651
    if (($18 | 0) > ($5 | 0)) {
     $24 = $5; //@line 2655
    } else {
     $24 = ($18 | 0) < 0 ? 0 : $18; //@line 2660
    }
    HEAP32[$mousey >> 2] = $24; //@line 2663
    $27 = HEAP32[(HEAP32[15692] | 0) + 4 >> 2] | 0; //@line 2666
    $28 = $24 & 65535; //@line 2667
    if ((HEAP32[$27 + 36 >> 2] | 0) >>> 0 > 2089) {
     $35 = $27 + 32 | 0; //@line 2675
     HEAP8[(HEAP32[$35 >> 2] | 0) + 2088 | 0] = ($28 & 65535) >>> 8 & 255; //@line 2678
     HEAP8[(HEAP32[$35 >> 2] | 0) + 2089 | 0] = $24 & 255; //@line 2682
    } else {
     FUNCTION_TABLE_viii[HEAP32[$27 + 24 >> 2] & 63](HEAP32[$27 + 4 >> 2] | 0, 2088, $28); //@line 2689
    }
    $48 = HEAP32[(HEAP32[15692] | 0) + 4 >> 2] | 0; //@line 2693
    $49 = HEAP32[$mousex >> 2] | 0; //@line 2694
    $50 = $49 & 65535; //@line 2695
    if ((HEAP32[$48 + 36 >> 2] | 0) >>> 0 > 2091) {
     $57 = $48 + 32 | 0; //@line 2703
     HEAP8[(HEAP32[$57 >> 2] | 0) + 2090 | 0] = ($50 & 65535) >>> 8 & 255; //@line 2706
     HEAP8[(HEAP32[$57 >> 2] | 0) + 2091 | 0] = $49 & 255; //@line 2710
    } else {
     FUNCTION_TABLE_viii[HEAP32[$48 + 24 >> 2] & 63](HEAP32[$48 + 4 >> 2] | 0, 2090, $50); //@line 2717
    }
    $70 = HEAP32[(HEAP32[15692] | 0) + 4 >> 2] | 0; //@line 2721
    $71 = HEAP32[$mousey >> 2] | 0; //@line 2722
    $72 = $71 & 65535; //@line 2723
    if ((HEAP32[$70 + 36 >> 2] | 0) >>> 0 > 2093) {
     $79 = $70 + 32 | 0; //@line 2731
     HEAP8[(HEAP32[$79 >> 2] | 0) + 2092 | 0] = ($72 & 65535) >>> 8 & 255; //@line 2734
     HEAP8[(HEAP32[$79 >> 2] | 0) + 2093 | 0] = $71 & 255; //@line 2738
    } else {
     FUNCTION_TABLE_viii[HEAP32[$70 + 24 >> 2] & 63](HEAP32[$70 + 4 >> 2] | 0, 2092, $72); //@line 2745
    }
    $92 = HEAP32[(HEAP32[15692] | 0) + 4 >> 2] | 0; //@line 2749
    $93 = HEAP32[$mousex >> 2] | 0; //@line 2750
    $94 = $93 & 65535; //@line 2751
    if ((HEAP32[$92 + 36 >> 2] | 0) >>> 0 > 2095) {
     $101 = $92 + 32 | 0; //@line 2759
     HEAP8[(HEAP32[$101 >> 2] | 0) + 2094 | 0] = ($94 & 65535) >>> 8 & 255; //@line 2762
     HEAP8[(HEAP32[$101 >> 2] | 0) + 2095 | 0] = $93 & 255; //@line 2766
    } else {
     FUNCTION_TABLE_viii[HEAP32[$92 + 24 >> 2] & 63](HEAP32[$92 + 4 >> 2] | 0, 2094, $94); //@line 2773
    }
    $114 = HEAP32[(HEAP32[15692] | 0) + 4 >> 2] | 0; //@line 2777
    $115 = HEAP32[$mousey >> 2] | 0; //@line 2778
    $116 = $115 & 65535; //@line 2779
    if ((HEAP32[$114 + 36 >> 2] | 0) >>> 0 > 2097) {
     $123 = $114 + 32 | 0; //@line 2787
     HEAP8[(HEAP32[$123 >> 2] | 0) + 2096 | 0] = ($116 & 65535) >>> 8 & 255; //@line 2790
     HEAP8[(HEAP32[$123 >> 2] | 0) + 2097 | 0] = $115 & 255; //@line 2794
    } else {
     FUNCTION_TABLE_viii[HEAP32[$114 + 24 >> 2] & 63](HEAP32[$114 + 4 >> 2] | 0, 2096, $116); //@line 2801
    }
    $136 = HEAP32[(HEAP32[15692] | 0) + 4 >> 2] | 0; //@line 2805
    $137 = HEAP32[$mousex >> 2] | 0; //@line 2806
    $138 = $137 & 65535; //@line 2807
    if ((HEAP32[$136 + 36 >> 2] | 0) >>> 0 > 2099) {
     $145 = $136 + 32 | 0; //@line 2815
     HEAP8[(HEAP32[$145 >> 2] | 0) + 2098 | 0] = ($138 & 65535) >>> 8 & 255; //@line 2818
     HEAP8[(HEAP32[$145 >> 2] | 0) + 2099 | 0] = $137 & 255; //@line 2822
     break;
    } else {
     FUNCTION_TABLE_viii[HEAP32[$136 + 24 >> 2] & 63](HEAP32[$136 + 4 >> 2] | 0, 2098, $138); //@line 2830
     break;
    }
   }
  } while (0);
  _mac_clock(HEAP32[15588] | 0, 0); //@line 2836
  _mac_clock(HEAP32[15588] | 0, 0); //@line 2838
  $158 = HEAP32[15692] | 0; //@line 2839
  if ((HEAP32[$158 + 4680 >> 2] | 0) != 0) {
   break;
  }
  if ((HEAP8[$158 + 4676 | 0] | 0) != 0) {
   do {
    _pce_usleep(5e4) | 0; //@line 2853
    _trm_check(HEAP32[(HEAP32[15692] | 0) + 3480 >> 2] | 0); //@line 2857
   } while ((HEAP8[(HEAP32[15692] | 0) + 4676 | 0] | 0) != 0);
  }
  $175 = $i_011 + 1 | 0; //@line 2868
  if (($175 | 0) < 1e4) {
   $i_011 = $175; //@line 2872
  } else {
   label = 343; //@line 2874
   break;
  }
 }
 if ((label | 0) == 343) {
  STACKTOP = sp; //@line 2879
  return;
 }
 _pce_stop(); //@line 2882
 _emscripten_cancel_main_loop() | 0; //@line 2883
 STACKTOP = sp; //@line 2885
 return;
}
function _mac_cmd($sim, $cmd) {
 $sim = $sim | 0;
 $cmd = $cmd | 0;
 var $1 = 0, $cnt_i_i = 0, $insn_i_i = 0, $op_i_i = 0, $addr_i = 0, $cnt_i44 = 0, $op_i = 0, $str_i = 0, $n_i = 0, $val_i36 = 0, $sym_i = 0, $dis_i = 0, $cnt_i28 = 0, $da_i = 0, $val_i = 0, $tn_i_i = 0, $addr_i_i = 0, $cnt_i = 0, $2 = 0, $3 = 0, $21 = 0, $35 = 0, $45 = 0, $46 = 0, $47 = 0, $49 = 0, $76 = 0, $78 = 0, $79 = 0, $80 = 0, $82 = 0, $110 = 0, $112 = 0, $115 = 0, $122 = 0, $124 = 0, $141 = 0, $162 = 0, $164 = 0, $165 = 0, $167 = 0, $168 = 0, $169 = 0, $170 = 0, $176 = 0, $181 = 0, $182 = 0, $194 = 0, $213 = 0, $215 = 0, $231 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $257 = 0, $280 = 0, $293 = 0, $304 = 0, $322 = 0, $323 = 0, $352 = 0, $_pre13_i = 0, $355 = 0, $i_07_i = 0, $358 = 0, $383 = 0, $388 = 0, $390 = 0, $398 = 0, $407 = 0, $411 = 0, $412 = 0, $415 = 0, $417 = 0, $418 = 0, $pc_026_i_i = 0, $sync_025_i_i = 0, $ins_n_024_i_i = 0, $ins_j_023_i_i = 0, $ins_i_022_i_i = 0, $424 = 0, $ins_i_1_i_i = 0, $ins_j_1_i_i = 0, $ins_n_1_i_i = 0, $sync_1_i_i = 0, $437 = 0, $_pre_i_i = 0, $ins_i_2_ph_i_i = 0, $ins_i_221_i_i = 0, $448 = 0, $463 = 0, $464 = 0, $466 = 0, $i_08_i = 0, $472 = 0, $473 = 0, $476 = 0, $477 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 2949
 STACKTOP = STACKTOP + 3032 | 0; //@line 2949
 $1 = sp | 0; //@line 2950
 $cnt_i_i = sp + 8 | 0; //@line 2951
 $insn_i_i = sp + 16 | 0; //@line 2952
 $op_i_i = sp + 1040 | 0; //@line 2953
 $addr_i = sp + 1392 | 0; //@line 2954
 $cnt_i44 = sp + 1400 | 0; //@line 2955
 $op_i = sp + 1408 | 0; //@line 2956
 $str_i = sp + 1760 | 0; //@line 2957
 $n_i = sp + 2016 | 0; //@line 2958
 $val_i36 = sp + 2024 | 0; //@line 2959
 $sym_i = sp + 2032 | 0; //@line 2960
 $dis_i = sp + 2288 | 0; //@line 2961
 $cnt_i28 = sp + 2640 | 0; //@line 2962
 $da_i = sp + 2648 | 0; //@line 2963
 $val_i = sp + 3e3 | 0; //@line 2964
 $tn_i_i = sp + 3008 | 0; //@line 2965
 $addr_i_i = sp + 3016 | 0; //@line 2966
 $cnt_i = sp + 3024 | 0; //@line 2967
 $2 = $sim + 3480 | 0; //@line 2968
 $3 = HEAP32[$2 >> 2] | 0; //@line 2969
 if (($3 | 0) != 0) {
  _trm_check($3); //@line 2973
 }
 do {
  if ((_cmd_match($cmd, 44504) | 0) == 0) {
   if ((_cmd_match($cmd, 40072) | 0) != 0) {
    HEAP32[$cnt_i >> 2] = 1; //@line 2986
    _cmd_match_uint32($cmd, $cnt_i) | 0; //@line 2987
    if ((_cmd_match_end($cmd) | 0) == 0) {
     break;
    }
    if ((HEAP32[$cnt_i >> 2] | 0) != 0) {
     do {
      _mac_clock($sim, 1); //@line 2999
      $21 = (HEAP32[$cnt_i >> 2] | 0) - 1 | 0; //@line 3001
      HEAP32[$cnt_i >> 2] = $21; //@line 3002
     } while (($21 | 0) != 0);
    }
    _mac_prt_state_cpu(HEAP32[$sim + 4 >> 2] | 0); //@line 3012
    break;
   }
   if ((_cmd_match($cmd, 31024) | 0) != 0) {
    if ((_cmd_match($cmd, 44504) | 0) != 0) {
     if ((_cmd_match_uint32($cmd, $addr_i_i) | 0) != 0) {
      $35 = $sim + 28 | 0; //@line 3029
      do {
       _bps_bp_add($35, _bp_addr_new(HEAP32[$addr_i_i >> 2] | 0) | 0) | 0; //@line 3034
      } while ((_cmd_match_uint32($cmd, $addr_i_i) | 0) != 0);
     }
     if ((_cmd_match_end($cmd) | 0) == 0) {
      break;
     }
     $45 = $sim + 4680 | 0; //@line 3049
     _pce_start($45); //@line 3050
     _mac_clock_discontinuity($sim); //@line 3051
     $46 = $sim + 4 | 0; //@line 3052
     $47 = $sim + 28 | 0; //@line 3053
     L456 : while (1) {
      $49 = _e68_get_opcnt(HEAP32[$46 >> 2] | 0) | 0; //@line 3057
      while (1) {
       if ((_e68_get_opcnt(HEAP32[$46 >> 2] | 0) | 0) != ($49 | 0)) {
        continue L456;
       }
       _mac_clock($sim, 0); //@line 3067
       if ((_bps_check($47, 0, HEAP32[(HEAP32[$46 >> 2] | 0) + 152 >> 2] & 16777215, HEAP32[_stdout >> 2] | 0) | 0) != 0) {
        break L456;
       }
       if ((HEAP32[$45 >> 2] | 0) != 0) {
        break L456;
       }
      }
     }
     _pce_stop(); //@line 3087
     break;
    }
    if ((_cmd_match($cmd, 37304) | 0) == 0) {
     if ((_cmd_match_end($cmd) | 0) == 0) {
      break;
     }
     _mac_run($sim); //@line 3101
     break;
    }
    if ((_cmd_match_uint16($cmd, $tn_i_i) | 0) == 0) {
     HEAP16[$tn_i_i >> 1] = -1; //@line 3110
    }
    if ((_cmd_match_end($cmd) | 0) == 0) {
     break;
    }
    $76 = $sim + 4 | 0; //@line 3119
    $78 = _e68_get_exception_cnt(HEAP32[$76 >> 2] | 0) | 0; //@line 3121
    $79 = $sim + 4680 | 0; //@line 3122
    _pce_start($79); //@line 3123
    _mac_clock_discontinuity($sim); //@line 3124
    $80 = $sim + 28 | 0; //@line 3125
    while (1) {
     $82 = _e68_get_opcnt(HEAP32[$76 >> 2] | 0) | 0; //@line 3129
     do {
      if ((_e68_get_opcnt(HEAP32[$76 >> 2] | 0) | 0) != ($82 | 0)) {
       break;
      }
      _mac_clock($sim, 0); //@line 3139
      if ((_bps_check($80, 0, HEAP32[(HEAP32[$76 >> 2] | 0) + 152 >> 2] & 16777215, HEAP32[_stdout >> 2] | 0) | 0) != 0) {
       break;
      }
     } while ((HEAP32[$79 >> 2] | 0) == 0);
     if ((_bps_check($80, 0, HEAP32[(HEAP32[$76 >> 2] | 0) + 152 >> 2] & 16777215, HEAP32[_stdout >> 2] | 0) | 0) != 0) {
      break;
     }
     if ((HEAP32[$79 >> 2] | 0) != 0) {
      break;
     }
     if ((_e68_get_exception_cnt(HEAP32[$76 >> 2] | 0) | 0) == ($78 | 0)) {
      continue;
     }
     $110 = (HEAP16[$tn_i_i >> 1] | 0) == -1; //@line 3183
     $112 = _e68_get_exception(HEAP32[$76 >> 2] | 0) | 0; //@line 3185
     if ($110) {
      label = 378; //@line 3188
      break;
     }
     if (($112 | 0) == (HEAPU16[$tn_i_i >> 1] | 0)) {
      label = 380; //@line 3196
      break;
     }
    }
    if ((label | 0) == 378) {
     $115 = _e68_get_exception_name(HEAP32[$76 >> 2] | 0) | 0; //@line 3202
     _pce_printf(37080, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $112, HEAP32[tempInt + 8 >> 2] = $115, tempInt) | 0); //@line 3203
    } else if ((label | 0) == 380) {
     $122 = _e68_get_exception(HEAP32[$76 >> 2] | 0) | 0; //@line 3208
     $124 = _e68_get_exception_name(HEAP32[$76 >> 2] | 0) | 0; //@line 3210
     _pce_printf(37080, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $122, HEAP32[tempInt + 8 >> 2] = $124, tempInt) | 0); //@line 3211
    }
    _pce_stop(); //@line 3214
    break;
   }
   if ((_cmd_match($cmd, 56064) | 0) != 0) {
    if ((_cmd_match_uint16($cmd, $val_i) | 0) == 0) {
     HEAP16[$val_i >> 1] = 2; //@line 3227
    }
    if ((_cmd_match_end($cmd) | 0) == 0) {
     break;
    }
    $141 = $sim + 4 | 0; //@line 3236
    _e68_set_halt(HEAP32[$141 >> 2] | 0, HEAPU16[$val_i >> 1] | 0); //@line 3240
    _mac_prt_state_cpu(HEAP32[$141 >> 2] | 0); //@line 3242
    break;
   }
   if ((_cmd_match($cmd, 54008) | 0) != 0) {
    HEAP32[$cnt_i28 >> 2] = 1; //@line 3252
    do {
     if ((_cmd_match($cmd, 54008) | 0) != 0) {
      HEAP32[$cnt_i28 >> 2] = 2; //@line 3258
      if ((_cmd_match($cmd, 54008) | 0) == 0) {
       break;
      }
      do {
       HEAP32[$cnt_i28 >> 2] = (HEAP32[$cnt_i28 >> 2] | 0) + 1; //@line 3268
      } while ((_cmd_match($cmd, 54008) | 0) != 0);
     }
    } while (0);
    _cmd_match_uint32($cmd, $cnt_i28) | 0; //@line 3278
    if ((_cmd_match_end($cmd) | 0) == 0) {
     break;
    }
    $162 = $sim + 4 | 0; //@line 3285
    $164 = _e68_get_exception_cnt(HEAP32[$162 >> 2] | 0) | 0; //@line 3287
    $165 = $sim + 4680 | 0; //@line 3288
    _pce_start($165); //@line 3289
    L503 : do {
     if ((HEAP32[$cnt_i28 >> 2] | 0) != 0) {
      $167 = $da_i | 0; //@line 3295
      $168 = $sim + 28 | 0; //@line 3296
      $169 = $da_i + 8 | 0; //@line 3297
      do {
       $170 = HEAP32[$162 >> 2] | 0; //@line 3300
       _e68_dasm_mem($170, $da_i, HEAP32[$170 + 152 >> 2] | 0); //@line 3303
       $176 = HEAP32[$162 >> 2] | 0; //@line 3307
       do {
        if ((HEAP32[$167 >> 2] & 4 | 0) == 0) {
         $194 = _e68_get_opcnt($176) | 0; //@line 3311
         while (1) {
          if ((_e68_get_opcnt(HEAP32[$162 >> 2] | 0) | 0) != ($194 | 0)) {
           break;
          }
          _mac_clock($sim, 0); //@line 3321
          if ((_bps_check($168, 0, HEAP32[(HEAP32[$162 >> 2] | 0) + 152 >> 2] & 16777215, HEAP32[_stdout >> 2] | 0) | 0) != 0) {
           break L503;
          }
          if ((HEAP32[$165 >> 2] | 0) != 0) {
           break L503;
          }
         }
         if ((_e68_get_exception_cnt(HEAP32[$162 >> 2] | 0) | 0) == ($164 | 0)) {
          break;
         }
         $213 = HEAP32[$162 >> 2] | 0; //@line 3347
         $215 = HEAP32[$213 + 380 >> 2] | 0; //@line 3349
         if ((HEAP32[$213 + 152 >> 2] | 0) == ($215 | 0)) {
          break;
         }
         do {
          _mac_clock($sim, 0); //@line 3358
          if ((_bps_check($168, 0, HEAP32[(HEAP32[$162 >> 2] | 0) + 152 >> 2] & 16777215, HEAP32[_stdout >> 2] | 0) | 0) != 0) {
           break L503;
          }
          if ((HEAP32[$165 >> 2] | 0) != 0) {
           break L503;
          }
         } while ((HEAP32[(HEAP32[$162 >> 2] | 0) + 152 >> 2] | 0) != ($215 | 0));
        } else {
         $181 = HEAP32[$169 >> 2] << 1; //@line 3389
         $182 = $181 + (HEAP32[$176 + 152 >> 2] | 0) | 0; //@line 3390
         if (($181 | 0) == 0) {
          break;
         }
         do {
          _mac_clock($sim, 0); //@line 3397
          if ((_bps_check($168, 0, HEAP32[(HEAP32[$162 >> 2] | 0) + 152 >> 2] & 16777215, HEAP32[_stdout >> 2] | 0) | 0) != 0) {
           break L503;
          }
          if ((HEAP32[$165 >> 2] | 0) != 0) {
           break L503;
          }
         } while ((HEAP32[(HEAP32[$162 >> 2] | 0) + 152 >> 2] | 0) != ($182 | 0));
        }
       } while (0);
       $231 = (HEAP32[$cnt_i28 >> 2] | 0) - 1 | 0; //@line 3427
       HEAP32[$cnt_i28 >> 2] = $231; //@line 3428
      } while (($231 | 0) != 0);
     }
    } while (0);
    _pce_stop(); //@line 3437
    _mac_prt_state_cpu(HEAP32[$162 >> 2] | 0); //@line 3439
    break;
   }
   if ((_cmd_match($cmd, 52584) | 0) != 0) {
    if ((_cmd_match_end($cmd) | 0) == 0) {
     break;
    }
    _mac_reset($sim); //@line 3453
    _mac_prt_state_cpu(HEAP32[$sim + 4 >> 2] | 0); //@line 3456
    break;
   }
   if ((_cmd_match($cmd, 51896) | 0) != 0) {
    if ((_cmd_match_end($cmd) | 0) == 0) {
     break;
    }
    $251 = $sim + 4680 | 0; //@line 3471
    _pce_start($251); //@line 3472
    $252 = $sim + 4 | 0; //@line 3473
    $253 = $sim + 28 | 0; //@line 3474
    $254 = $dis_i | 0; //@line 3475
    while (1) {
     $257 = _e68_get_opcnt(HEAP32[$252 >> 2] | 0) | 0; //@line 3479
     do {
      if ((_e68_get_opcnt(HEAP32[$252 >> 2] | 0) | 0) != ($257 | 0)) {
       break;
      }
      _mac_clock($sim, 0); //@line 3489
      if ((_bps_check($253, 0, HEAP32[(HEAP32[$252 >> 2] | 0) + 152 >> 2] & 16777215, HEAP32[_stdout >> 2] | 0) | 0) != 0) {
       break;
      }
     } while ((HEAP32[$251 >> 2] | 0) == 0);
     if ((_bps_check($253, 0, HEAP32[(HEAP32[$252 >> 2] | 0) + 152 >> 2] & 16777215, HEAP32[_stdout >> 2] | 0) | 0) != 0) {
      break;
     }
     if ((HEAP32[$251 >> 2] | 0) != 0) {
      break;
     }
     $280 = HEAP32[$252 >> 2] | 0; //@line 3525
     _e68_dasm_mem($280, $dis_i, HEAP32[$280 + 152 >> 2] | 0); //@line 3528
     if ((HEAP32[$254 >> 2] & 8 | 0) != 0) {
      label = 425; //@line 3534
      break;
     }
    }
    if ((label | 0) == 425) {
     _mac_prt_state_cpu(HEAP32[$252 >> 2] | 0); //@line 3540
    }
    _pce_stop(); //@line 3543
    break;
   }
   if ((_cmd_match($cmd, 50872) | 0) != 0) {
    $293 = $sym_i | 0; //@line 3552
    if ((_cmd_match_eol($cmd) | 0) != 0) {
     _mac_prt_state_cpu(HEAP32[$sim + 4 >> 2] | 0); //@line 3559
     break;
    }
    if ((_cmd_match_ident($cmd, $293, 256) | 0) == 0) {
     _cmd_error($cmd, 38368); //@line 3567
     break;
    }
    $304 = $sim + 4 | 0; //@line 3571
    if ((_e68_get_reg(HEAP32[$304 >> 2] | 0, $293, $val_i36) | 0) != 0) {
     _pce_printf(38056, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $293, tempInt) | 0); //@line 3577
     break;
    }
    if ((_cmd_match_eol($cmd) | 0) != 0) {
     _pce_printf(37840, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP32[$val_i36 >> 2], tempInt) | 0); //@line 3586
     break;
    }
    if ((_cmd_match_uint32($cmd, $val_i36) | 0) == 0) {
     _cmd_error($cmd, 37592); //@line 3594
     break;
    }
    if ((_cmd_match_end($cmd) | 0) == 0) {
     break;
    }
    $322 = HEAP32[$304 >> 2] | 0; //@line 3604
    $323 = HEAP32[$val_i36 >> 2] | 0; //@line 3605
    _e68_set_reg($322, $293, $323) | 0; //@line 3606
    _mac_prt_state_cpu(HEAP32[$304 >> 2] | 0); //@line 3608
    break;
   }
   if ((_cmd_match($cmd, 49152) | 0) != 0) {
    if ((_cmd_match_eol($cmd) | 0) == 0) {
     _mac_prt_state($sim, _cmd_get_str($cmd) | 0); //@line 3621
     break;
    } else {
     _mac_prt_state_cpu(HEAP32[$sim + 4 >> 2] | 0); //@line 3627
     break;
    }
   }
   if ((_cmd_match($cmd, 47976) | 0) != 0) {
    HEAP32[$n_i >> 2] = 1; //@line 3637
    do {
     if ((_cmd_match($cmd, 47976) | 0) != 0) {
      HEAP32[$n_i >> 2] = 2; //@line 3643
      if ((_cmd_match($cmd, 47976) | 0) == 0) {
       break;
      }
      do {
       HEAP32[$n_i >> 2] = (HEAP32[$n_i >> 2] | 0) + 1; //@line 3653
      } while ((_cmd_match($cmd, 47976) | 0) != 0);
     }
    } while (0);
    _cmd_match_uint32($cmd, $n_i) | 0; //@line 3663
    if ((_cmd_match_end($cmd) | 0) == 0) {
     break;
    }
    $352 = $sim + 4680 | 0; //@line 3670
    _pce_start($352); //@line 3671
    $_pre13_i = $sim + 4 | 0; //@line 3674
    if ((HEAP32[$n_i >> 2] | 0) != 0) {
     $355 = $sim + 28 | 0; //@line 3677
     $i_07_i = 0; //@line 3679
     do {
      $358 = _e68_get_opcnt(HEAP32[$_pre13_i >> 2] | 0) | 0; //@line 3683
      do {
       if ((_e68_get_opcnt(HEAP32[$_pre13_i >> 2] | 0) | 0) != ($358 | 0)) {
        break;
       }
       _mac_clock($sim, 0); //@line 3693
       if ((_bps_check($355, 0, HEAP32[(HEAP32[$_pre13_i >> 2] | 0) + 152 >> 2] & 16777215, HEAP32[_stdout >> 2] | 0) | 0) != 0) {
        break;
       }
      } while ((HEAP32[$352 >> 2] | 0) == 0);
      $i_07_i = $i_07_i + 1 | 0; //@line 3712
     } while ($i_07_i >>> 0 < (HEAP32[$n_i >> 2] | 0) >>> 0);
    }
    _pce_stop(); //@line 3723
    _mac_prt_state_cpu(HEAP32[$_pre13_i >> 2] | 0); //@line 3725
    break;
   }
   if ((_cmd_match($cmd, 47368) | 0) == 0) {
    $_0 = 1; //@line 3733
    STACKTOP = sp; //@line 3735
    return $_0 | 0; //@line 3736
   }
   $383 = $str_i | 0; //@line 3741
   if (HEAP8[7752] | 0) {
    $390 = HEAP32[15694] | 0; //@line 3747
   } else {
    HEAP8[7752] = 1; //@line 3749
    $388 = HEAP32[(HEAP32[$sim + 4 >> 2] | 0) + 152 >> 2] | 0; //@line 3753
    HEAP32[15694] = $388; //@line 3754
    $390 = $388; //@line 3756
   }
   HEAP32[$addr_i >> 2] = $390; //@line 3759
   HEAP32[$cnt_i44 >> 2] = 16; //@line 3760
   if ((_cmd_match($cmd, 42968) | 0) == 0) {
    if ((_cmd_match_uint32($cmd, $addr_i) | 0) != 0) {
     _cmd_match_uint32($cmd, $cnt_i44) | 0; //@line 3769
    }
    if ((_cmd_match_end($cmd) | 0) == 0) {
     break;
    }
    if ((HEAP32[$cnt_i44 >> 2] | 0) == 0) {
     $476 = HEAP32[$addr_i >> 2] | 0; //@line 3784
    } else {
     $463 = $sim + 4 | 0; //@line 3786
     $464 = $op_i + 8 | 0; //@line 3787
     $i_08_i = 0;
     $466 = HEAP32[$addr_i >> 2] | 0;
     while (1) {
      _e68_dasm_mem(HEAP32[$463 >> 2] | 0, $op_i, $466); //@line 3795
      _mac_dasm_str($383, $op_i); //@line 3796
      _pce_printf(42352, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = HEAP32[$addr_i >> 2], HEAP32[tempInt + 8 >> 2] = $383, tempInt) | 0); //@line 3798
      $472 = (HEAP32[$addr_i >> 2] | 0) + (HEAP32[$464 >> 2] << 1) | 0; //@line 3802
      HEAP32[$addr_i >> 2] = $472; //@line 3803
      $473 = $i_08_i + 1 | 0; //@line 3804
      if ($473 >>> 0 < (HEAP32[$cnt_i44 >> 2] | 0) >>> 0) {
       $i_08_i = $473;
       $466 = $472;
      } else {
       $476 = $472; //@line 3811
       break;
      }
     }
    }
    HEAP32[15694] = $476; //@line 3817
    break;
   }
   $398 = $sym_i | 0; //@line 3825
   HEAP32[$1 >> 2] = $390; //@line 3826
   HEAP32[$cnt_i_i >> 2] = 16; //@line 3827
   if ((_cmd_match_uint32($cmd, $1) | 0) != 0) {
    _cmd_match_uint32($cmd, $cnt_i_i) | 0; //@line 3832
   }
   if ((_cmd_match_end($cmd) | 0) == 0) {
    break;
   }
   $407 = HEAP32[$cnt_i_i >> 2] | 0; //@line 3841
   if ($407 >>> 0 > 256) {
    HEAP32[$cnt_i_i >> 2] = 256; //@line 3845
    $411 = 256; //@line 3847
   } else {
    $411 = $407; //@line 3849
   }
   $412 = HEAP32[$1 >> 2] | 0; //@line 3852
   $415 = ($411 * -12 | 0) + $412 & -2; //@line 3855
   if ($415 >>> 0 > $412 >>> 0) {
    break;
   }
   $417 = $sim + 4 | 0; //@line 3861
   $418 = $op_i_i + 8 | 0; //@line 3862
   $ins_i_022_i_i = 0;
   $ins_j_023_i_i = 0;
   $ins_n_024_i_i = 0;
   $sync_025_i_i = 5;
   $pc_026_i_i = $415;
   while (1) {
    do {
     if (($sync_025_i_i | 0) == 0) {
      HEAP32[$insn_i_i + ($ins_j_023_i_i << 2) >> 2] = $pc_026_i_i; //@line 3876
      $424 = $ins_j_023_i_i + 1 & 255; //@line 3878
      if (($424 | 0) == ($ins_i_022_i_i | 0)) {
       $sync_1_i_i = 0;
       $ins_n_1_i_i = $ins_n_024_i_i;
       $ins_j_1_i_i = $ins_i_022_i_i;
       $ins_i_1_i_i = $ins_i_022_i_i + 1 & 255;
       break;
      } else {
       $sync_1_i_i = 0;
       $ins_n_1_i_i = $ins_n_024_i_i + 1 | 0;
       $ins_j_1_i_i = $424;
       $ins_i_1_i_i = $ins_i_022_i_i;
       break;
      }
     } else {
      $sync_1_i_i = $sync_025_i_i - 1 | 0;
      $ins_n_1_i_i = $ins_n_024_i_i;
      $ins_j_1_i_i = $ins_j_023_i_i;
      $ins_i_1_i_i = $ins_i_022_i_i;
     }
    } while (0);
    _e68_dasm_mem(HEAP32[$417 >> 2] | 0, $op_i_i, $pc_026_i_i); //@line 3902
    $437 = (HEAP32[$418 >> 2] << 1) + $pc_026_i_i | 0; //@line 3905
    if ($437 >>> 0 > (HEAP32[$1 >> 2] | 0) >>> 0) {
     break;
    } else {
     $ins_i_022_i_i = $ins_i_1_i_i;
     $ins_j_023_i_i = $ins_j_1_i_i;
     $ins_n_024_i_i = $ins_n_1_i_i;
     $sync_025_i_i = $sync_1_i_i;
     $pc_026_i_i = $437;
    }
   }
   $_pre_i_i = HEAP32[$cnt_i_i >> 2] | 0; //@line 3915
   if ($ins_n_1_i_i >>> 0 > $_pre_i_i >>> 0) {
    $ins_i_2_ph_i_i = $ins_n_1_i_i + $ins_i_1_i_i - $_pre_i_i & 255; //@line 3923
   } else {
    $ins_i_2_ph_i_i = $ins_i_1_i_i; //@line 3925
   }
   if (($ins_i_2_ph_i_i | 0) == ($ins_j_1_i_i | 0)) {
    break;
   } else {
    $ins_i_221_i_i = $ins_i_2_ph_i_i; //@line 3933
   }
   do {
    $448 = HEAP32[$insn_i_i + ($ins_i_221_i_i << 2) >> 2] | 0; //@line 3938
    _e68_dasm_mem(HEAP32[$417 >> 2] | 0, $op_i_i, $448); //@line 3940
    _mac_dasm_str($398, $op_i_i); //@line 3941
    _pce_printf(42352, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $448, HEAP32[tempInt + 8 >> 2] = $398, tempInt) | 0); //@line 3942
    $ins_i_221_i_i = $ins_i_221_i_i + 1 & 255; //@line 3944
   } while (($ins_i_221_i_i | 0) != ($ins_j_1_i_i | 0));
  } else {
   _cmd_do_b($cmd, $sim + 28 | 0); //@line 3955
  }
 } while (0);
 $477 = HEAP32[$2 >> 2] | 0; //@line 3959
 if (($477 | 0) == 0) {
  $_0 = 0; //@line 3963
  STACKTOP = sp; //@line 3965
  return $_0 | 0; //@line 3966
 }
 _trm_set_msg_trm($477, 44168, 43832) | 0; //@line 3968
 $_0 = 0; //@line 3970
 STACKTOP = sp; //@line 3972
 return $_0 | 0; //@line 3973
}
function _mac_cmd_init($sim, $mon) {
 $sim = $sim | 0;
 $mon = $mon | 0;
 var $4 = 0;
 _mon_cmd_add($mon, 6920, 12) | 0; //@line 3984
 _mon_cmd_add_bp($mon) | 0; //@line 3985
 $4 = $sim + 4 | 0; //@line 3987
 HEAP32[(HEAP32[$4 >> 2] | 0) + 68 >> 2] = $sim; //@line 3990
 HEAP32[(HEAP32[$4 >> 2] | 0) + 72 >> 2] = 0; //@line 3993
 HEAP32[(HEAP32[$4 >> 2] | 0) + 76 >> 2] = 70; //@line 3996
 HEAP32[(HEAP32[$4 >> 2] | 0) + 80 >> 2] = 326; //@line 3999
 HEAP32[(HEAP32[$4 >> 2] | 0) + 84 >> 2] = 14; //@line 4002
 return;
}
function _mac_log_undef($ext, $ir) {
 $ext = $ext | 0;
 $ir = $ir | 0;
 var $2 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0, $13 = 0, $27 = 0, $_pre = 0, $28 = 0, $29 = 0, $_0_i = 0, $30 = 0, $32 = 0, $33 = 0, $37 = 0, $51 = 0, $_pre21 = 0, $52 = 0, $53 = 0, $_0_i12 = 0, $54 = 0, $56 = 0, $57 = 0, $61 = 0, $75 = 0, $_pre24 = 0, $76 = 0, $77 = 0, $_0_i14 = 0, $78 = 0, $80 = 0, $81 = 0, $85 = 0, $99 = 0, $_pre27 = 0, $100 = 0, $101 = 0, $_0_i16 = 0, $102 = 0, $104 = 0, $105 = 0, $109 = 0, $_0_i18 = 0, $124 = 0, sp = 0;
 sp = STACKTOP; //@line 4029
 $2 = $ext + 4 | 0; //@line 4031
 $4 = _e68_get_last_pc(HEAP32[$2 >> 2] | 0, 0) | 0; //@line 4033
 $5 = HEAP32[$2 >> 2] | 0; //@line 4034
 $6 = $4 & 16777215; //@line 4035
 $7 = $6 + 1 | 0; //@line 4036
 $9 = HEAP32[$5 + 36 >> 2] | 0; //@line 4038
 if ($7 >>> 0 < $9 >>> 0) {
  $13 = HEAP32[$5 + 32 >> 2] | 0; //@line 4043
  $_0_i = (HEAPU8[$13 + $6 | 0] | 0) << 8 | (HEAPU8[$13 + $7 | 0] | 0);
  $29 = $5;
  $28 = $9;
 } else {
  $27 = FUNCTION_TABLE_iii[HEAP32[$5 + 12 >> 2] & 63](HEAP32[$5 + 4 >> 2] | 0, $6) | 0; //@line 4059
  $_pre = HEAP32[$2 >> 2] | 0; //@line 4060
  $_0_i = $27;
  $29 = $_pre;
  $28 = HEAP32[$_pre + 36 >> 2] | 0;
 }
 $30 = $_0_i & 65535; //@line 4069
 $32 = $4 + 2 & 16777215; //@line 4071
 $33 = $32 + 1 | 0; //@line 4072
 if ($33 >>> 0 < $28 >>> 0) {
  $37 = HEAP32[$29 + 32 >> 2] | 0; //@line 4077
  $_0_i12 = (HEAPU8[$37 + $32 | 0] | 0) << 8 | (HEAPU8[$37 + $33 | 0] | 0);
  $53 = $29;
  $52 = $28;
 } else {
  $51 = FUNCTION_TABLE_iii[HEAP32[$29 + 12 >> 2] & 63](HEAP32[$29 + 4 >> 2] | 0, $32) | 0; //@line 4093
  $_pre21 = HEAP32[$2 >> 2] | 0; //@line 4094
  $_0_i12 = $51;
  $53 = $_pre21;
  $52 = HEAP32[$_pre21 + 36 >> 2] | 0;
 }
 $54 = $_0_i12 & 65535; //@line 4103
 $56 = $4 + 4 & 16777215; //@line 4105
 $57 = $56 + 1 | 0; //@line 4106
 if ($57 >>> 0 < $52 >>> 0) {
  $61 = HEAP32[$53 + 32 >> 2] | 0; //@line 4111
  $_0_i14 = (HEAPU8[$61 + $56 | 0] | 0) << 8 | (HEAPU8[$61 + $57 | 0] | 0);
  $77 = $53;
  $76 = $52;
 } else {
  $75 = FUNCTION_TABLE_iii[HEAP32[$53 + 12 >> 2] & 63](HEAP32[$53 + 4 >> 2] | 0, $56) | 0; //@line 4127
  $_pre24 = HEAP32[$2 >> 2] | 0; //@line 4128
  $_0_i14 = $75;
  $77 = $_pre24;
  $76 = HEAP32[$_pre24 + 36 >> 2] | 0;
 }
 $78 = $_0_i14 & 65535; //@line 4137
 $80 = $4 + 6 & 16777215; //@line 4139
 $81 = $80 + 1 | 0; //@line 4140
 if ($81 >>> 0 < $76 >>> 0) {
  $85 = HEAP32[$77 + 32 >> 2] | 0; //@line 4145
  $_0_i16 = (HEAPU8[$85 + $80 | 0] | 0) << 8 | (HEAPU8[$85 + $81 | 0] | 0);
  $101 = $77;
  $100 = $76;
 } else {
  $99 = FUNCTION_TABLE_iii[HEAP32[$77 + 12 >> 2] & 63](HEAP32[$77 + 4 >> 2] | 0, $80) | 0; //@line 4161
  $_pre27 = HEAP32[$2 >> 2] | 0; //@line 4162
  $_0_i16 = $99;
  $101 = $_pre27;
  $100 = HEAP32[$_pre27 + 36 >> 2] | 0;
 }
 $102 = $_0_i16 & 65535; //@line 4171
 $104 = $4 + 8 & 16777215; //@line 4173
 $105 = $104 + 1 | 0; //@line 4174
 if ($105 >>> 0 < $100 >>> 0) {
  $109 = HEAP32[$101 + 32 >> 2] | 0; //@line 4179
  $_0_i18 = (HEAPU8[$109 + $104 | 0] | 0) << 8 | (HEAPU8[$109 + $105 | 0] | 0); //@line 4189
  $124 = $_0_i18 & 65535; //@line 4191
  _pce_log(3, 43256, (tempInt = STACKTOP, STACKTOP = STACKTOP + 56 | 0, HEAP32[tempInt >> 2] = $4, HEAP32[tempInt + 8 >> 2] = $ir, HEAP32[tempInt + 16 >> 2] = $30, HEAP32[tempInt + 24 >> 2] = $54, HEAP32[tempInt + 32 >> 2] = $78, HEAP32[tempInt + 40 >> 2] = $102, HEAP32[tempInt + 48 >> 2] = $124, tempInt) | 0); //@line 4192
  STACKTOP = sp; //@line 4193
  return;
 } else {
  $_0_i18 = FUNCTION_TABLE_iii[HEAP32[$101 + 12 >> 2] & 63](HEAP32[$101 + 4 >> 2] | 0, $104) | 0; //@line 4202
  $124 = $_0_i18 & 65535; //@line 4204
  _pce_log(3, 43256, (tempInt = STACKTOP, STACKTOP = STACKTOP + 56 | 0, HEAP32[tempInt >> 2] = $4, HEAP32[tempInt + 8 >> 2] = $ir, HEAP32[tempInt + 16 >> 2] = $30, HEAP32[tempInt + 24 >> 2] = $54, HEAP32[tempInt + 32 >> 2] = $78, HEAP32[tempInt + 40 >> 2] = $102, HEAP32[tempInt + 48 >> 2] = $124, tempInt) | 0); //@line 4205
  STACKTOP = sp; //@line 4206
  return;
 }
}
function _mac_log_exception($ext, $tn) {
 $ext = $ext | 0;
 $tn = $tn | 0;
 var $2 = 0, $3 = 0, $5 = 0, $6 = 0, $12 = 0, $_0_i = 0, $35 = 0, $37 = 0, sp = 0;
 sp = STACKTOP; //@line 4221
 $2 = $ext + 4 | 0; //@line 4223
 $3 = HEAP32[$2 >> 2] | 0; //@line 4224
 $5 = (_e68_get_last_pc($3, 0) | 0) & 16777215; //@line 4226
 $6 = $5 + 1 | 0; //@line 4227
 if ($6 >>> 0 < (HEAP32[$3 + 36 >> 2] | 0) >>> 0) {
  $12 = HEAP32[$3 + 32 >> 2] | 0; //@line 4234
  $_0_i = (HEAPU8[$12 + $5 | 0] | 0) << 8 | (HEAPU8[$12 + $6 | 0] | 0); //@line 4244
 } else {
  $_0_i = FUNCTION_TABLE_iii[HEAP32[$3 + 12 >> 2] & 63](HEAP32[$3 + 4 >> 2] | 0, $5) | 0; //@line 4252
 }
 if (($tn | 0) == 10) {
  _mac_sony_patch($ext + 2424 | 0); //@line 4258
  STACKTOP = sp; //@line 4260
  return;
 } else if (($tn | 0) == 0) {
  _mac_reset($ext); //@line 4264
  STACKTOP = sp; //@line 4266
  return;
 } else if (($tn | 0) == 25 | ($tn | 0) == 26 | ($tn | 0) == 32 | ($tn | 0) == 39 | ($tn | 0) == 40 | ($tn | 0) == 41 | ($tn | 0) == 42 | ($tn | 0) == 43 | ($tn | 0) == 44 | ($tn | 0) == 46) {
  STACKTOP = sp; //@line 4269
  return;
 } else {
  $35 = _e68_get_last_pc(HEAP32[$2 >> 2] | 0, 0) | 0; //@line 4274
  $37 = _e68_get_exception_name(HEAP32[$2 >> 2] | 0) | 0; //@line 4276
  _pce_log(3, 43632, (tempInt = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempInt >> 2] = $35, HEAP32[tempInt + 8 >> 2] = $tn, HEAP32[tempInt + 16 >> 2] = $37, HEAP32[tempInt + 24 >> 2] = $_0_i & 65535, tempInt) | 0); //@line 4277
  STACKTOP = sp; //@line 4279
  return;
 }
}
function _mac_dasm_str($dst, $op) {
 $dst = $dst | 0;
 $op = $op | 0;
 var $tmp46 = 0, $tmp46_sub = 0, $1 = 0, $4 = 0, $i_053 = 0, $13 = 0, $i_150 = 0, $endptr45 = 0, $15 = 0, $18 = 0, $22 = 0, $27 = 0, $31 = 0, $38 = 0, $_ = 0, $42 = 0, $44 = 0, $leninc = 0, $46 = 0, $50 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $_pre_phi = 0, $63 = 0, $67 = 0, $68 = 0, $_0_lcssa = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 4299
 STACKTOP = STACKTOP + 256 | 0; //@line 4299
 $tmp46 = sp | 0; //@line 4300
 $tmp46_sub = $tmp46 | 0; //@line 4301
 HEAP8[$dst] = 0; //@line 4302
 $1 = $op + 8 | 0; //@line 4303
 if ((HEAP32[$1 >> 2] | 0) == 0) {
  $i_150 = 0; //@line 4308
  label = 528; //@line 4309
 } else {
  $4 = $tmp46; //@line 4311
  $i_053 = 0; //@line 4313
  do {
   _sprintf($4 | 0, 42e3, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAPU16[$op + 12 + ($i_053 << 1) >> 1] | 0, tempInt) | 0) | 0; //@line 4319
   _strcat($dst | 0, $4 | 0) | 0; //@line 4320
   $i_053 = $i_053 + 1 | 0; //@line 4321
   $13 = HEAP32[$1 >> 2] | 0; //@line 4322
  } while ($i_053 >>> 0 < $13 >>> 0);
  if ($13 >>> 0 < 4) {
   $i_150 = $13; //@line 4334
   label = 528; //@line 4335
  }
 }
 if ((label | 0) == 528) {
  while (1) {
   label = 0; //@line 4340
   $endptr45 = $dst + (_strlen($dst | 0) | 0) | 0; //@line 4343
   HEAP8[$endptr45] = HEAP8[41656] | 0; //@line 4344
   HEAP8[$endptr45 + 1 | 0] = HEAP8[41657 | 0] | 0; //@line 4344
   HEAP8[$endptr45 + 2 | 0] = HEAP8[41658 | 0] | 0; //@line 4344
   HEAP8[$endptr45 + 3 | 0] = HEAP8[41659 | 0] | 0; //@line 4344
   HEAP8[$endptr45 + 4 | 0] = HEAP8[41660 | 0] | 0; //@line 4344
   HEAP8[$endptr45 + 5 | 0] = HEAP8[41661 | 0] | 0; //@line 4344
   $15 = $i_150 + 1 | 0; //@line 4345
   if ($15 >>> 0 < 4) {
    $i_150 = $15; //@line 4349
    label = 528; //@line 4350
   } else {
    break;
   }
  }
 }
 $18 = HEAP32[$op >> 2] | 0; //@line 4357
 do {
  if (($18 & 1 | 0) == 0) {
   if (($18 & 4 | 0) != 0) {
    $27 = $dst + (_strlen($dst | 0) | 0) | 0; //@line 4369
    tempBigInt = 62; //@line 4370
    HEAP8[$27] = tempBigInt & 255; //@line 4370
    tempBigInt = tempBigInt >> 8; //@line 4370
    HEAP8[$27 + 1 | 0] = tempBigInt & 255; //@line 4370
    break;
   }
   $31 = $dst + (_strlen($dst | 0) | 0) | 0; //@line 4378
   if (($18 & 16 | 0) == 0) {
    tempBigInt = 32; //@line 4381
    HEAP8[$31] = tempBigInt & 255; //@line 4381
    tempBigInt = tempBigInt >> 8; //@line 4381
    HEAP8[$31 + 1 | 0] = tempBigInt & 255; //@line 4381
    break;
   } else {
    tempBigInt = 60; //@line 4384
    HEAP8[$31] = tempBigInt & 255; //@line 4384
    tempBigInt = tempBigInt >> 8; //@line 4384
    HEAP8[$31 + 1 | 0] = tempBigInt & 255; //@line 4384
    break;
   }
  } else {
   $22 = $dst + (_strlen($dst | 0) | 0) | 0; //@line 4391
   tempBigInt = 42; //@line 4392
   HEAP8[$22] = tempBigInt & 255; //@line 4392
   tempBigInt = tempBigInt >> 8; //@line 4392
   HEAP8[$22 + 1 | 0] = tempBigInt & 255; //@line 4392
  }
 } while (0);
 $38 = _mac_get_trap_name(HEAPU16[$op + 12 >> 1] | 0) | 0; //@line 4399
 $_ = ($38 | 0) == 0 ? $op + 32 | 0 : $38; //@line 4402
 $42 = HEAP32[$op + 28 >> 2] | 0; //@line 4404
 if (($42 | 0) == 3) {
  $55 = $tmp46; //@line 4406
  $56 = $op + 96 | 0; //@line 4407
  $57 = $op + 160 | 0; //@line 4408
  $58 = $op + 224 | 0; //@line 4409
  _sprintf($55 | 0, 39288, (tempInt = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempInt >> 2] = $_, HEAP32[tempInt + 8 >> 2] = $56, HEAP32[tempInt + 16 >> 2] = $57, HEAP32[tempInt + 24 >> 2] = $58, tempInt) | 0) | 0; //@line 4410
  $_pre_phi = $55; //@line 4412
 } else if (($42 | 0) == 1) {
  $46 = $tmp46; //@line 4414
  _sprintf($46 | 0, 40064, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $_, HEAP32[tempInt + 8 >> 2] = $op + 96, tempInt) | 0) | 0; //@line 4416
  $_pre_phi = $46; //@line 4418
 } else if (($42 | 0) == 2) {
  $50 = $tmp46; //@line 4420
  _sprintf($50 | 0, 39848, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = $_, HEAP32[tempInt + 8 >> 2] = $op + 96, HEAP32[tempInt + 16 >> 2] = $op + 160, tempInt) | 0) | 0; //@line 4423
  $_pre_phi = $50; //@line 4425
 } else if (($42 | 0) == 0) {
  $44 = $tmp46; //@line 4427
  $leninc = (_strlen($_ | 0) | 0) + 1 | 0; //@line 4429
  _memcpy($44 | 0, $_ | 0, $leninc) | 0; //@line 4430
  $_pre_phi = $44; //@line 4432
 } else {
  HEAP32[$tmp46_sub >> 2] = 2960685; //@line 4434
  $_pre_phi = $tmp46; //@line 4437
 }
 _strcat($dst | 0, $_pre_phi | 0) | 0; //@line 4440
 $63 = $op + 288 | 0; //@line 4441
 if ((HEAP8[$63] | 0) == 0) {
  STACKTOP = sp; //@line 4446
  return;
 }
 $67 = _strlen($dst | 0) | 0; //@line 4449
 $68 = $dst + $67 | 0; //@line 4450
 if ($67 >>> 0 < 50) {
  _memset($68 | 0, 32, 50 - $67 | 0); //@line 4455
  $_0_lcssa = $dst + 50 | 0; //@line 4458
 } else {
  $_0_lcssa = $68; //@line 4460
 }
 HEAP8[$_0_lcssa] = HEAP8[38664] | 0; //@line 4463
 HEAP8[$_0_lcssa + 1 | 0] = HEAP8[38665 | 0] | 0; //@line 4463
 HEAP8[$_0_lcssa + 2 | 0] = HEAP8[38666 | 0] | 0; //@line 4463
 _strcat($_0_lcssa | 0, $63 | 0) | 0; //@line 4464
 STACKTOP = sp; //@line 4466
 return;
}
function _mac_hook($ext, $val) {
 $ext = $ext | 0;
 $val = $val | 0;
 var $1 = 0, $3 = 0, $16 = 0, $17 = 0, $23 = 0, $27 = 0, $31 = 0, $35 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 4481
 $1 = $ext; //@line 4482
 if (($val | 0) == 3) {
  $3 = $ext + 2424 | 0; //@line 4485
  _mac_sony_insert($3, 1); //@line 4486
  _mac_sony_insert($3, 2); //@line 4487
  _mac_sony_insert($3, 3); //@line 4488
  _mac_sony_insert($3, 4); //@line 4489
  $_0 = 0; //@line 4490
  STACKTOP = sp; //@line 4492
  return $_0 | 0; //@line 4493
 } else if (($val | 0) == 4) {
  _pce_log(2, 44880, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP32[(HEAP32[$ext + 4 >> 2] | 0) + 152 >> 2], tempInt) | 0); //@line 4500
  $_0 = 0; //@line 4502
  STACKTOP = sp; //@line 4504
  return $_0 | 0; //@line 4505
 } else if (($val | 0) == 2) {
  _mac_set_msg($1, 48448, 54168) | 0; //@line 4507
  $_0 = 0; //@line 4509
  STACKTOP = sp; //@line 4511
  return $_0 | 0; //@line 4512
 } else if (($val | 0) == 0) {
  $_0 = 0; //@line 4514
  STACKTOP = sp; //@line 4516
  return $_0 | 0; //@line 4517
 } else if (($val | 0) == 1) {
  _mac_set_msg($1, 41304, 54168) | 0; //@line 4519
  $_0 = 0; //@line 4521
  STACKTOP = sp; //@line 4523
  return $_0 | 0; //@line 4524
 } else {
  $16 = $ext + 4 | 0; //@line 4527
  $17 = HEAP32[$16 >> 2] | 0; //@line 4528
  $23 = $ext + 2628 | 0; //@line 4534
  HEAP32[$23 >> 2] = HEAP32[$17 + 88 >> 2]; //@line 4535
  $27 = $ext + 2632 | 0; //@line 4539
  HEAP32[$27 >> 2] = HEAP32[$17 + 120 >> 2]; //@line 4540
  $31 = $ext + 2636 | 0; //@line 4544
  HEAP32[$31 >> 2] = HEAP32[$17 + 124 >> 2]; //@line 4545
  $35 = $ext + 2640 | 0; //@line 4549
  HEAP32[$35 >> 2] = HEAP32[$17 + 152 >> 2]; //@line 4550
  if ((_mac_sony_hook($ext + 2424 | 0, $val) | 0) == 0) {
   HEAP32[(HEAP32[$16 >> 2] | 0) + 88 >> 2] = HEAP32[$23 >> 2]; //@line 4558
   HEAP32[(HEAP32[$16 >> 2] | 0) + 120 >> 2] = HEAP32[$27 >> 2]; //@line 4562
   HEAP32[(HEAP32[$16 >> 2] | 0) + 124 >> 2] = HEAP32[$31 >> 2]; //@line 4566
   _e68_set_pc_prefetch(HEAP32[$16 >> 2] | 0, HEAP32[$35 >> 2] | 0); //@line 4569
   $_0 = 0; //@line 4571
   STACKTOP = sp; //@line 4573
   return $_0 | 0; //@line 4574
  } else {
   _mac_log_deb(41336, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $val, tempInt) | 0); //@line 4576
   $_0 = 1; //@line 4578
   STACKTOP = sp; //@line 4580
   return $_0 | 0; //@line 4581
  }
 }
 return 0;
}
function _mac_set_hotkey($sim, $key) {
 $sim = $sim | 0;
 $key = $key | 0;
 var $10 = 0, $11 = 0, $22 = 0, $23 = 0, sp = 0;
 sp = STACKTOP; //@line 4594
 if (($key | 0) == 4) {
  _mac_set_msg($sim, 38992, 44576) | 0; //@line 4596
  STACKTOP = sp; //@line 4598
  return 0; //@line 4599
 } else if (($key | 0) == 5) {
  _mac_set_msg($sim, 38992, 41112) | 0; //@line 4601
  STACKTOP = sp; //@line 4603
  return 0; //@line 4604
 } else if (($key | 0) == 53 | ($key | 0) == 91) {
  $10 = $sim + 1744 | 0; //@line 4606
  $11 = HEAP32[$10 >> 2] | 0; //@line 4607
  do {
   if (($11 | 0) != 0) {
    if ((HEAP8[$11 + 280 | 0] | 0) == 0) {
     _mac_log_deb(35208, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 4617
     _mac_kbd_set_keypad_mode(HEAP32[$10 >> 2] | 0, 0); //@line 4619
     break;
    } else {
     _mac_log_deb(38112, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 4622
     _mac_kbd_set_keypad_mode(HEAP32[$10 >> 2] | 0, 1); //@line 4624
     break;
    }
   }
  } while (0);
  $22 = $sim + 1752 | 0; //@line 4630
  $23 = HEAP32[$22 >> 2] | 0; //@line 4631
  if (($23 | 0) == 0) {
   STACKTOP = sp; //@line 4635
   return 0; //@line 4636
  }
  if ((_adb_kbd_get_keypad_mode($23) | 0) == 0) {
   _mac_log_deb(38112, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 4642
   _adb_kbd_set_keypad_mode(HEAP32[$22 >> 2] | 0, 1); //@line 4644
   STACKTOP = sp; //@line 4645
   return 0; //@line 4646
  } else {
   _mac_log_deb(35208, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 4648
   _adb_kbd_set_keypad_mode(HEAP32[$22 >> 2] | 0, 0); //@line 4650
   STACKTOP = sp; //@line 4652
   return 0; //@line 4653
  }
 } else if (($key | 0) == 39) {
  _mac_interrupt($sim, 7, 1); //@line 4656
  _mac_interrupt($sim, 7, 0); //@line 4657
  STACKTOP = sp; //@line 4659
  return 0; //@line 4660
 } else if (($key | 0) == 2) {
  _mac_set_msg($sim, 38992, 53656) | 0; //@line 4662
  STACKTOP = sp; //@line 4664
  return 0; //@line 4665
 } else if (($key | 0) == 3) {
  _mac_set_msg($sim, 38992, 48088) | 0; //@line 4667
  STACKTOP = sp; //@line 4669
  return 0; //@line 4670
 } else {
  _pce_log(2, 32384, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $key, tempInt) | 0); //@line 4672
  STACKTOP = sp; //@line 4674
  return 0; //@line 4675
 }
 return 0;
}
function _iwm_drv_load($drv) {
 $drv = $drv | 0;
 var $1 = 0, $3 = 0, $5 = 0, $11 = 0, $23 = 0, $storemerge_i_i_i = 0, $26 = 0, $c_017_i_i = 0, $lba_016_i_i = 0, $28 = 0, $29 = 0, $32 = 0, $lba_28_us_i_i = 0, $s_07_us_i_i = 0, $35 = 0, $lba_112_us_i_i = 0, $h_011_us_i_i = 0, $lba_1_lcssa_i_i = 0, $47 = 0, $img_0_i = 0, $del_0_i = 0, $50 = 0, $img_1_ph = 0, $60 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 4692
 $1 = $drv + 20 | 0; //@line 4693
 HEAP8[$1] = 0; //@line 4694
 $3 = HEAP32[$drv + 4 >> 2] | 0; //@line 4696
 do {
  if (($3 | 0) == 0) {
   label = 593; //@line 4701
  } else {
   $5 = _pri_img_load($3, 0) | 0; //@line 4703
   if (($5 | 0) == 0) {
    label = 593; //@line 4707
    break;
   }
   HEAP8[$1] = 1; //@line 4710
   _mac_log_deb(32128, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAP32[$drv >> 2] | 0) + 1, tempInt) | 0); //@line 4714
   $img_1_ph = $5; //@line 4715
  }
 } while (0);
 L760 : do {
  if ((label | 0) == 593) {
   $11 = _dsks_get_disk(HEAP32[$drv + 8 >> 2] | 0, HEAP32[$drv + 12 >> 2] | 0) | 0; //@line 4724
   L762 : do {
    if (($11 | 0) != 0) {
     L764 : do {
      if ((_dsk_get_type($11) | 0) == 6) {
       $del_0_i = 0;
       $img_0_i = HEAP32[(HEAP32[$11 + 64 >> 2] | 0) + 68 >> 2] | 0;
      } else {
       $23 = _dsk_get_block_cnt($11) | 0; //@line 4742
       if (($23 | 0) == 800) {
        $storemerge_i_i_i = 1; //@line 4744
       } else if (($23 | 0) == 1600) {
        $storemerge_i_i_i = 2; //@line 4746
       } else {
        break L762;
       }
       $26 = _psi_img_new() | 0; //@line 4751
       if (($26 | 0) == 0) {
        break L762;
       } else {
        $lba_016_i_i = 0;
        $c_017_i_i = 0;
       }
       L770 : while (1) {
        $28 = $c_017_i_i >>> 4; //@line 4762
        $29 = 12 - $28 | 0; //@line 4763
        if (($28 | 0) == 12) {
         $lba_1_lcssa_i_i = $lba_016_i_i; //@line 4766
        } else {
         $h_011_us_i_i = 0;
         $lba_112_us_i_i = $lba_016_i_i;
         while (1) {
          $s_07_us_i_i = 0;
          $lba_28_us_i_i = $lba_112_us_i_i;
          do {
           $35 = _psi_sct_new($c_017_i_i, $h_011_us_i_i, $s_07_us_i_i, 512) | 0; //@line 4777
           if (($35 | 0) == 0) {
            label = 605; //@line 4781
            break L770;
           }
           _psi_img_add_sector($26, $35, $c_017_i_i, $h_011_us_i_i) | 0; //@line 4784
           if ((_dsk_read_lba($11, HEAP32[$35 + 24 >> 2] | 0, $lba_28_us_i_i, 1) | 0) != 0) {
            label = 606; //@line 4791
            break L770;
           }
           $lba_28_us_i_i = $lba_28_us_i_i + 1 | 0; //@line 4794
           $s_07_us_i_i = $s_07_us_i_i + 1 | 0; //@line 4795
          } while ($s_07_us_i_i >>> 0 < $29 >>> 0);
          $32 = $h_011_us_i_i + 1 | 0; //@line 4804
          if ($32 >>> 0 < $storemerge_i_i_i >>> 0) {
           $h_011_us_i_i = $32;
           $lba_112_us_i_i = $lba_28_us_i_i;
          } else {
           $lba_1_lcssa_i_i = $lba_28_us_i_i; //@line 4810
           break;
          }
         }
        }
        $47 = $c_017_i_i + 1 | 0; //@line 4816
        if ($47 >>> 0 < 80) {
         $lba_016_i_i = $lba_1_lcssa_i_i;
         $c_017_i_i = $47;
        } else {
         $del_0_i = $26;
         $img_0_i = $26;
         break L764;
        }
       }
       if ((label | 0) == 605) {
        _psi_img_del($26); //@line 4827
        break L762;
       } else if ((label | 0) == 606) {
        _psi_img_del($26); //@line 4832
        break L762;
       }
      }
     } while (0);
     if (($img_0_i | 0) == 0) {
      break;
     }
     $50 = _pri_encode_gcr($img_0_i) | 0; //@line 4845
     _psi_img_del($del_0_i); //@line 4846
     if (($50 | 0) == 0) {
      break;
     }
     _mac_log_deb(51944, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAP32[$drv >> 2] | 0) + 1, tempInt) | 0); //@line 4855
     $img_1_ph = $50; //@line 4857
     break L760;
    }
   } while (0);
   _mac_log_deb(47336, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAP32[$drv >> 2] | 0) + 1, tempInt) | 0); //@line 4864
   $_0 = 1; //@line 4866
   STACKTOP = sp; //@line 4868
   return $_0 | 0; //@line 4869
  }
 } while (0);
 $60 = $drv + 16 | 0; //@line 4873
 _pri_img_del(HEAP32[$60 >> 2] | 0); //@line 4875
 HEAP32[$60 >> 2] = $img_1_ph; //@line 4876
 HEAP8[$drv + 92 | 0] = 0; //@line 4878
 HEAP32[$drv + 48 >> 2] = 0; //@line 4880
 $_0 = 0; //@line 4882
 STACKTOP = sp; //@line 4884
 return $_0 | 0; //@line 4885
}
function _mac_iwm_set_motor_fct($iwm, $ext, $fct) {
 $iwm = $iwm | 0;
 $ext = $ext | 0;
 $fct = $fct | 0;
 HEAP32[$iwm + 320 >> 2] = $ext; //@line 4897
 HEAP32[$iwm + 324 >> 2] = $fct; //@line 4900
 return;
}
function _mac_iwm_set_disks($iwm, $dsks) {
 $iwm = $iwm | 0;
 $dsks = $dsks | 0;
 HEAP32[$iwm + 32 >> 2] = $dsks; //@line 4913
 HEAP32[$iwm + 128 >> 2] = $dsks; //@line 4915
 HEAP32[$iwm + 224 >> 2] = $dsks; //@line 4917
 return;
}
function _mac_iwm_set_disk_id($iwm, $drive, $id) {
 $iwm = $iwm | 0;
 $drive = $drive | 0;
 $id = $id | 0;
 if ($drive >>> 0 >= 3) {
  return;
 }
 HEAP32[$iwm + 24 + ($drive * 96 | 0) + 12 >> 2] = $id; //@line 4937
 return;
}
function _mac_iwm_get_locked($iwm, $drive) {
 $iwm = $iwm | 0;
 $drive = $drive | 0;
 var $_0 = 0;
 if ($drive >>> 0 > 2) {
  $_0 = 1; //@line 4953
  return $_0 | 0; //@line 4956
 }
 $_0 = (HEAP8[$iwm + 24 + ($drive * 96 | 0) + 21 | 0] | 0) != 0 | 0; //@line 4963
 return $_0 | 0; //@line 4966
}
function _mac_iwm_set_locked($iwm, $drive, $locked) {
 $iwm = $iwm | 0;
 $drive = $drive | 0;
 $locked = $locked | 0;
 if ($drive >>> 0 > 2) {
  return;
 }
 HEAP8[$iwm + 24 + ($drive * 96 | 0) + 21 | 0] = ($locked | 0) != 0 | 0; //@line 4986
 return;
}
function _mac_iwm_set_auto_rotate($iwm, $drive, $val) {
 $iwm = $iwm | 0;
 $drive = $drive | 0;
 $val = $val | 0;
 if ($drive >>> 0 > 2) {
  return;
 }
 HEAP8[$iwm + 24 + ($drive * 96 | 0) + 22 | 0] = ($val | 0) != 0 | 0; //@line 5009
 return;
}
function _mac_iwm_set_pwm($iwm, $buf, $cnt) {
 $iwm = $iwm | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 var $1 = 0, $2 = 0, $_011 = 0, $pwm_010 = 0, $_089 = 0, $14 = 0, $15 = 0, $pwm_0_lcssa = 0;
 $1 = $iwm + 20 | 0; //@line 5025
 $2 = HEAP32[$1 >> 2] | 0; //@line 5026
 if (($cnt | 0) == 0) {
  $pwm_0_lcssa = $2; //@line 5030
 } else {
  $_089 = $cnt;
  $pwm_010 = $2;
  $_011 = $buf;
  while (1) {
   $14 = (((HEAPU8[6584 + (HEAP8[$_011] & 63) | 0] | 0) << 10) + ($pwm_010 * 31 | 0) | 0) >>> 5; //@line 5047
   $15 = $_089 - 1 | 0; //@line 5048
   if (($15 | 0) == 0) {
    $pwm_0_lcssa = $14; //@line 5052
    break;
   } else {
    $_089 = $15;
    $pwm_010 = $14;
    $_011 = $_011 + 1 | 0;
   }
  }
 }
 HEAP32[$1 >> 2] = $pwm_0_lcssa; //@line 5060
 HEAP32[(HEAP32[$iwm + 312 >> 2] | 0) + 88 >> 2] = $pwm_0_lcssa; //@line 5064
 return;
}
function _iwm_drv_save($drv) {
 $drv = $drv | 0;
 var $buf_i_i = 0, $1 = 0, $5 = 0, $13 = 0, $24 = 0, $28 = 0, $35 = 0, $37 = 0, $41 = 0, $42 = 0, $storemerge_i_i_i = 0, $lba_010_i_i = 0, $c_09_i_i = 0, $46 = 0, $lba_17_i_i = 0, $h_06_i_i = 0, $s_0_i_i = 0, $50 = 0, $55 = 0, $56 = 0, $cnt_0_i_i = 0, $63 = 0, $74 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 5082
 STACKTOP = STACKTOP + 512 | 0; //@line 5082
 $buf_i_i = sp | 0; //@line 5083
 $1 = $drv + 16 | 0; //@line 5084
 if ((HEAP32[$1 >> 2] | 0) == 0) {
  $_0 = 1; //@line 5089
  STACKTOP = sp; //@line 5091
  return $_0 | 0; //@line 5092
 }
 $5 = $drv | 0; //@line 5094
 _mac_log_deb(43848, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAP32[$5 >> 2] | 0) + 1, tempInt) | 0); //@line 5097
 L822 : do {
  if ((HEAP8[$drv + 20 | 0] | 0) == 0) {
   $24 = _dsks_get_disk(HEAP32[$drv + 8 >> 2] | 0, HEAP32[$drv + 12 >> 2] | 0) | 0; //@line 5108
   do {
    if (($24 | 0) != 0) {
     $28 = _pri_decode_gcr(HEAP32[$1 >> 2] | 0) | 0; //@line 5114
     if (($28 | 0) == 0) {
      break;
     }
     if ((_dsk_get_type($24) | 0) == 6) {
      $35 = HEAP32[$24 + 64 >> 2] | 0; //@line 5125
      $37 = $35 + 68 | 0; //@line 5127
      _psi_img_del(HEAP32[$37 >> 2] | 0); //@line 5129
      HEAP32[$37 >> 2] = $28; //@line 5130
      HEAP8[$35 + 72 | 0] = 1; //@line 5132
      break L822;
     }
     $41 = $buf_i_i | 0; //@line 5136
     $42 = _dsk_get_block_cnt($24) | 0; //@line 5137
     if (($42 | 0) == 1600) {
      $storemerge_i_i_i = 2; //@line 5139
     } else if (($42 | 0) == 800) {
      $storemerge_i_i_i = 1; //@line 5141
     } else {
      _psi_img_del($28); //@line 5143
      break;
     }
     $c_09_i_i = 0;
     $lba_010_i_i = 0;
     L834 : while (1) {
      $46 = 12 - ($c_09_i_i >>> 4) | 0; //@line 5153
      $h_06_i_i = 0;
      $lba_17_i_i = $lba_010_i_i;
      do {
       $s_0_i_i = 0; //@line 5160
       while (1) {
        if ($s_0_i_i >>> 0 >= $46 >>> 0) {
         break;
        }
        $50 = _psi_img_get_sector($28, $c_09_i_i, $h_06_i_i, $s_0_i_i, 0) | 0; //@line 5168
        if (($50 | 0) == 0) {
         _memset($41 | 0, 0, 512); //@line 5172
        } else {
         $55 = HEAP16[$50 + 10 >> 1] | 0; //@line 5176
         $56 = $55 & 65535; //@line 5177
         if (($55 & 65535) < 512) {
          _memset($buf_i_i + $56 | 0, 0, 512 - $56 | 0); //@line 5183
          $cnt_0_i_i = $56; //@line 5185
         } else {
          $cnt_0_i_i = 512; //@line 5187
         }
         $63 = HEAP32[$50 + 24 >> 2] | 0; //@line 5191
         _memcpy($41 | 0, $63 | 0, $cnt_0_i_i) | 0; //@line 5192
        }
        if ((_dsk_write_lba($24, $41, $s_0_i_i + $lba_17_i_i | 0, 1) | 0) == 0) {
         $s_0_i_i = $s_0_i_i + 1 | 0; //@line 5200
        } else {
         label = 666; //@line 5202
         break L834;
        }
       }
       $lba_17_i_i = $lba_17_i_i + $46 | 0; //@line 5206
       $h_06_i_i = $h_06_i_i + 1 | 0; //@line 5207
      } while ($h_06_i_i >>> 0 < $storemerge_i_i_i >>> 0);
      $74 = $c_09_i_i + 1 | 0; //@line 5216
      if ($74 >>> 0 < 80) {
       $c_09_i_i = $74;
       $lba_010_i_i = $lba_17_i_i;
      } else {
       label = 664; //@line 5222
       break;
      }
     }
     if ((label | 0) == 666) {
      _psi_img_del($28); //@line 5227
      break;
     } else if ((label | 0) == 664) {
      _psi_img_del($28); //@line 5231
      break L822;
     }
    }
   } while (0);
   _mac_log_deb(37432, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAP32[$5 >> 2] | 0) + 1, tempInt) | 0); //@line 5239
   $_0 = 1; //@line 5241
   STACKTOP = sp; //@line 5243
   return $_0 | 0; //@line 5244
  } else {
   $13 = HEAP32[$drv + 4 >> 2] | 0; //@line 5247
   if (($13 | 0) != 0) {
    if ((_pri_img_save($13, HEAP32[$1 >> 2] | 0, 0) | 0) == 0) {
     break;
    }
   }
   _mac_log_deb(40512, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAP32[$5 >> 2] | 0) + 1, tempInt) | 0); //@line 5261
   $_0 = 1; //@line 5263
   STACKTOP = sp; //@line 5265
   return $_0 | 0; //@line 5266
  }
 } while (0);
 HEAP8[$drv + 92 | 0] = 0; //@line 5270
 $_0 = 0; //@line 5272
 STACKTOP = sp; //@line 5274
 return $_0 | 0; //@line 5275
}
function _mac_iwm_init($iwm) {
 $iwm = $iwm | 0;
 HEAP8[$iwm | 0] = 0; //@line 5292
 HEAP8[$iwm + 1 | 0] = 0; //@line 5294
 HEAP8[$iwm + 3 | 0] = 0; //@line 5296
 HEAP8[$iwm + 4 | 0] = 0; //@line 5298
 HEAP8[$iwm + 5 | 0] = 127; //@line 5300
 HEAP8[$iwm + 6 | 0] = 0; //@line 5302
 _memset($iwm + 8 | 0, 0, 39); //@line 5306
 HEAP32[$iwm + 48 >> 2] = 80; //@line 5307
 HEAP32[$iwm + 52 >> 2] = 1; //@line 5309
 _memset($iwm + 56 | 0, 0, 5); //@line 5313
 _memset($iwm + 64 | 0, 0, 24); //@line 5315
 HEAP32[$iwm + 88 >> 2] = 65e3; //@line 5316
 HEAP32[$iwm + 92 >> 2] = 0; //@line 5318
 HEAP32[$iwm + 96 >> 2] = 0; //@line 5320
 HEAP32[$iwm + 100 >> 2] = 0; //@line 5322
 HEAP32[$iwm + 104 >> 2] = 783360; //@line 5324
 HEAP32[$iwm + 108 >> 2] = 0; //@line 5326
 HEAP8[$iwm + 116 | 0] = 0; //@line 5328
 HEAP32[$iwm + 120 >> 2] = 1; //@line 5330
 HEAP32[$iwm + 124 >> 2] = 0; //@line 5332
 HEAP32[$iwm + 128 >> 2] = 0; //@line 5334
 HEAP32[$iwm + 132 >> 2] = 1; //@line 5336
 _memset($iwm + 136 | 0, 0, 7); //@line 5340
 HEAP32[$iwm + 144 >> 2] = 80; //@line 5341
 HEAP32[$iwm + 148 >> 2] = 1; //@line 5343
 _memset($iwm + 152 | 0, 0, 5); //@line 5347
 _memset($iwm + 160 | 0, 0, 24); //@line 5349
 HEAP32[$iwm + 184 >> 2] = 65e3; //@line 5350
 HEAP32[$iwm + 188 >> 2] = 0; //@line 5352
 HEAP32[$iwm + 192 >> 2] = 0; //@line 5354
 HEAP32[$iwm + 196 >> 2] = 0; //@line 5356
 HEAP32[$iwm + 200 >> 2] = 783360; //@line 5358
 HEAP32[$iwm + 204 >> 2] = 0; //@line 5360
 HEAP8[$iwm + 212 | 0] = 0; //@line 5362
 HEAP32[$iwm + 216 >> 2] = 2; //@line 5364
 HEAP32[$iwm + 220 >> 2] = 0; //@line 5366
 HEAP32[$iwm + 224 >> 2] = 0; //@line 5368
 HEAP32[$iwm + 228 >> 2] = 2; //@line 5370
 _memset($iwm + 232 | 0, 0, 7); //@line 5374
 HEAP32[$iwm + 240 >> 2] = 80; //@line 5375
 HEAP32[$iwm + 244 >> 2] = 1; //@line 5377
 _memset($iwm + 248 | 0, 0, 5); //@line 5381
 _memset($iwm + 256 | 0, 0, 24); //@line 5383
 HEAP32[$iwm + 280 >> 2] = 65e3; //@line 5384
 HEAP32[$iwm + 284 >> 2] = 0; //@line 5386
 HEAP32[$iwm + 288 >> 2] = 0; //@line 5388
 HEAP32[$iwm + 292 >> 2] = 0; //@line 5390
 HEAP32[$iwm + 296 >> 2] = 783360; //@line 5392
 HEAP32[$iwm + 300 >> 2] = 0; //@line 5394
 HEAP8[$iwm + 308 | 0] = 0; //@line 5396
 HEAP32[$iwm + 312 >> 2] = $iwm + 24; //@line 5399
 HEAP8[$iwm + 316 | 0] = 0; //@line 5401
 HEAP32[$iwm + 320 >> 2] = 0; //@line 5403
 HEAP32[$iwm + 324 >> 2] = 0; //@line 5405
 return;
}
function _mac_iwm_set_heads($iwm, $drive, $heads) {
 $iwm = $iwm | 0;
 $drive = $drive | 0;
 $heads = $heads | 0;
 var $_0 = 0;
 if ($drive >>> 0 > 2 | $heads >>> 0 > 2) {
  $_0 = 1; //@line 5424
  return $_0 | 0; //@line 5427
 }
 HEAP32[$iwm + 24 + ($drive * 96 | 0) + 28 >> 2] = $heads; //@line 5430
 if ((HEAP32[$iwm + 24 + ($drive * 96 | 0) + 44 >> 2] | 0) >>> 0 < $heads >>> 0) {
  $_0 = 0; //@line 5436
  return $_0 | 0; //@line 5439
 }
 _iwm_drv_select_track($iwm + 24 + ($drive * 96 | 0) | 0, HEAP32[$iwm + 24 + ($drive * 96 | 0) + 40 >> 2] | 0, 0); //@line 5444
 $_0 = 0; //@line 5446
 return $_0 | 0; //@line 5449
}
function _iwm_drv_select_track($drv, $c, $h) {
 $drv = $drv | 0;
 $c = $c | 0;
 $h = $h | 0;
 var $9 = 0, $10 = 0, $13 = 0, $15 = 0, $16 = 0, $19 = 0, $38 = 0, $40 = 0;
 if ((HEAP32[$drv + 24 >> 2] | 0) >>> 0 <= $c >>> 0) {
  return;
 }
 if ((HEAP32[$drv + 28 >> 2] | 0) >>> 0 <= $h >>> 0) {
  return;
 }
 $9 = $drv + 16 | 0; //@line 5480
 $10 = HEAP32[$9 >> 2] | 0; //@line 5481
 if (($10 | 0) == 0) {
  $13 = _pri_img_new() | 0; //@line 5485
  HEAP32[$9 >> 2] = $13; //@line 5486
  $15 = $13; //@line 5488
 } else {
  $15 = $10; //@line 5490
 }
 $16 = _pri_img_get_track($15, $c, $h, 1) | 0; //@line 5493
 if (($16 | 0) == 0) {
  return;
 }
 $19 = $16 + 4 | 0; //@line 5500
 do {
  if ((HEAP32[$19 >> 2] | 0) == 0) {
   if ((_pri_trk_set_size($16, HEAP32[16104 + (($c >>> 0 > 79 ? 4 : $c >>> 4) << 2) >> 2] | 0) | 0) == 0) {
    break;
   }
   return;
  }
 } while (0);
 if ((HEAP32[$16 >> 2] | 0) == 0) {
  _pri_trk_set_clock($16, 5e5); //@line 5526
 }
 HEAP32[$drv + 40 >> 2] = $c; //@line 5530
 HEAP32[$drv + 44 >> 2] = $h; //@line 5532
 HEAP32[$drv + 48 >> 2] = $16; //@line 5534
 $38 = HEAP32[$19 >> 2] | 0; //@line 5535
 HEAP32[$drv + 56 >> 2] = $38; //@line 5537
 $40 = $drv + 52 | 0; //@line 5538
 if ((HEAP32[$40 >> 2] | 0) >>> 0 < $38 >>> 0) {
  return;
 }
 HEAP32[$40 >> 2] = 0; //@line 5546
 return;
}
function _mac_iwm_set_fname($iwm, $drive, $fname) {
 $iwm = $iwm | 0;
 $drive = $drive | 0;
 $fname = $fname | 0;
 var $3 = 0, $9 = 0, $10 = 0;
 if ($drive >>> 0 > 2) {
  return;
 }
 $3 = $iwm + 24 + ($drive * 96 | 0) + 4 | 0; //@line 5567
 _free(HEAP32[$3 >> 2] | 0); //@line 5569
 HEAP32[$3 >> 2] = 0; //@line 5570
 HEAP8[$iwm + 24 + ($drive * 96 | 0) + 20 | 0] = 0; //@line 5572
 if (($fname | 0) == 0) {
  return;
 }
 $9 = (_strlen($fname | 0) | 0) + 1 | 0; //@line 5580
 $10 = _malloc($9) | 0; //@line 5581
 if (($10 | 0) == 0) {
  return;
 }
 _memcpy($10 | 0, $fname | 0, $9) | 0; //@line 5588
 HEAP32[$3 >> 2] = $10; //@line 5589
 return;
}
function _mac_iwm_set_drive_sel($iwm, $val) {
 $iwm = $iwm | 0;
 $val = $val | 0;
 var $1 = 0, $2 = 0, $14 = 0, $15 = 0;
 $1 = $val << 24 >> 24 != 0; //@line 5604
 $2 = $iwm + 2 | 0; //@line 5605
 if ((HEAPU8[$2] | 0 | 0) == ($1 & 1 | 0)) {
  return;
 }
 HEAP8[$2] = $1 & 1; //@line 5616
 if ((HEAP8[$iwm | 0] & 32) != 0) {
  return;
 }
 $14 = $1 ? 2 : 0; //@line 5626
 $15 = $iwm + 24 + ($14 * 96 | 0) | 0; //@line 5627
 HEAP32[$iwm + 312 >> 2] = $15; //@line 5629
 _iwm_drv_select_track($15, HEAP32[$iwm + 24 + ($14 * 96 | 0) + 40 >> 2] | 0, HEAPU8[$iwm + 1 | 0] | 0); //@line 5635
 return;
}
function _mac_iwm_set_head_sel($iwm, $val) {
 $iwm = $iwm | 0;
 $val = $val | 0;
 var $1 = 0, $2 = 0, $5 = 0, $10 = 0;
 $1 = $val << 24 >> 24 != 0; //@line 5649
 $2 = $iwm + 1 | 0; //@line 5650
 $5 = $1 & 1; //@line 5653
 if ((HEAPU8[$2] | 0 | 0) == ($5 | 0)) {
  return;
 }
 HEAP8[$2] = $1 & 1; //@line 5661
 $10 = HEAP32[$iwm + 312 >> 2] | 0; //@line 5663
 if ((HEAP32[$10 + 44 >> 2] | 0) == ($5 | 0)) {
  return;
 }
 _iwm_drv_select_track($10, HEAP32[$10 + 40 >> 2] | 0, $5); //@line 5674
 return;
}
function _mac_iwm_insert($iwm, $drive) {
 $iwm = $iwm | 0;
 $drive = $drive | 0;
 var $3 = 0, $4 = 0;
 if ($drive >>> 0 > 2) {
  return;
 }
 $3 = $iwm + 24 + ($drive * 96 | 0) | 0; //@line 5694
 $4 = $iwm + 24 + ($drive * 96 | 0) + 34 | 0; //@line 5695
 if ((HEAP8[$4] | 0) != 0) {
  return;
 }
 if ((_iwm_drv_load($3) | 0) != 0) {
  return;
 }
 HEAP8[$4] = 1; //@line 5710
 _iwm_drv_select_track($3, HEAP32[$iwm + 24 + ($drive * 96 | 0) + 40 >> 2] | 0, HEAP32[$iwm + 24 + ($drive * 96 | 0) + 44 >> 2] | 0); //@line 5715
 return;
}
function _mac_iwm_get_uint8($iwm, $addr) {
 $iwm = $iwm | 0;
 $addr = $addr | 0;
 var $8 = 0, $9 = 0, $14 = 0, $15 = 0, $23 = 0, $iwm_idx17_val = 0, $27 = 0, $32 = 0, $33 = 0, $51 = 0, $60 = 0, $65 = 0, $83 = 0, $val_0_in_i_i = 0, $_0_i = 0, $99 = 0, $_0 = 0, label = 0;
 if (($addr & 1 | 0) == 0) {
  $_0 = 0; //@line 5745
  return $_0 | 0; //@line 5748
 }
 _mac_iwm_access_uint8($iwm, $addr >>> 9 & 15); //@line 5752
 $8 = HEAPU8[$iwm | 0] | 0; //@line 5755
 $9 = $8 & 192; //@line 5756
 if (($9 | 0) == 128) {
  $99 = HEAP8[$iwm + 5 | 0] | 0; //@line 5759
  return ((HEAPU16[$iwm + 14 >> 1] | 0) < 256 ? $99 | -128 : $99 & 127) | 0; //@line 5767
 } else if (($9 | 0) == 0) {
  if (($8 & 16 | 0) == 0) {
   $_0 = -1; //@line 5773
   return $_0 | 0; //@line 5776
  }
  $14 = $iwm + 13 | 0; //@line 5778
  $15 = HEAP8[$14] | 0; //@line 5779
  HEAP8[$14] = 0; //@line 5780
  $_0 = $15; //@line 5782
  return $_0 | 0; //@line 5785
 } else if (($9 | 0) == 64) {
  $23 = HEAP8[$iwm + 4 | 0] & 31 | HEAP8[$iwm + 3 | 0] & 96; //@line 5793
  $iwm_idx17_val = HEAP32[$iwm + 312 >> 2] | 0; //@line 5797
  $27 = ((HEAP8[$iwm + 1 | 0] | 0) != 0 ? 8 : 0) | $8 & 7; //@line 5801
  if (($27 | 0) == 1) {
   $32 = $iwm_idx17_val + 33 | 0; //@line 5803
   $33 = HEAP8[$32] | 0; //@line 5804
   HEAP8[$32] = 0; //@line 5805
   $_0_i = $33 << 24 >> 24 == 0 | 0; //@line 5809
   label = 752; //@line 5810
  } else if (($27 | 0) == 2) {
   $_0_i = (HEAP8[$iwm_idx17_val + 36 | 0] | 0) == 0 | 0; //@line 5817
   label = 752; //@line 5818
  } else if (($27 | 0) == 0) {
   $_0_i = (HEAP8[$iwm_idx17_val + 32 | 0] | 0) == 0 | 0; //@line 5825
   label = 752; //@line 5826
  } else if (($27 | 0) == 3) {
   $_0_i = (HEAP8[$iwm_idx17_val + 35 | 0] | 0) != 0 | 0; //@line 5833
   label = 752; //@line 5834
  } else if (($27 | 0) == 9) {
   $51 = HEAP8[$iwm_idx17_val + 21 | 0] | 0; //@line 5838
   do {
    if ((HEAP8[$iwm_idx17_val + 20 | 0] | 0) == 0) {
     $60 = _dsks_get_disk(HEAP32[$iwm_idx17_val + 8 >> 2] | 0, HEAP32[$iwm_idx17_val + 12 >> 2] | 0) | 0; //@line 5849
     if (($60 | 0) == 0) {
      $65 = $51; //@line 5853
      break;
     }
     $65 = (_dsk_get_readonly($60) | 0) == 0 ? $51 : 1; //@line 5859
    } else {
     $65 = $51; //@line 5861
    }
   } while (0);
   $_0_i = ($65 | 0) == 0 | 0; //@line 5868
   label = 752; //@line 5869
  } else if (($27 | 0) == 6) {
   $_0_i = (HEAP32[$iwm_idx17_val + 28 >> 2] | 0) >>> 0 > 1 | 0; //@line 5876
   label = 752; //@line 5877
  } else if (($27 | 0) == 10) {
   $_0_i = (HEAP32[$iwm_idx17_val + 40 >> 2] | 0) != 0 | 0; //@line 5884
   label = 752; //@line 5885
  } else if (($27 | 0) == 11) {
   if ((HEAP32[$iwm_idx17_val + 28 >> 2] | 0) == 1) {
    $83 = Math_imul(((65536 - (HEAP32[$iwm_idx17_val + 88 >> 2] | 0) | 0) * 120 | 0) >>> 15, HEAP32[$iwm_idx17_val + 60 >> 2] | 0) | 0; //@line 5899
    $val_0_in_i_i = ($83 >>> 0) / ((HEAP32[$iwm_idx17_val + 64 >> 2] | 0) >>> 0) | 0; //@line 5904
   } else {
    $val_0_in_i_i = (((HEAP32[$iwm_idx17_val + 52 >> 2] | 0) * 120 | 0) >>> 0) / ((HEAP32[$iwm_idx17_val + 56 >> 2] | 0) >>> 0) | 0; //@line 5912
   }
   $_0_i = $val_0_in_i_i & 1 ^ 1; //@line 5918
   label = 752; //@line 5919
  } else if (($27 | 0) == 8) {
   $_0_i = (HEAP8[$iwm_idx17_val + 34 | 0] | 0) == 0 | 0; //@line 5926
   label = 752; //@line 5927
  } else if (($27 | 0) == 4 | ($27 | 0) == 5 | ($27 | 0) == 7 | ($27 | 0) == 12 | ($27 | 0) == 14) {
   $_0 = $23;
   return $_0 | 0; //@line 5932
  }
  do {
   if ((label | 0) == 752) {
    if (($_0_i | 0) == 0) {
     $_0 = $23; //@line 5940
    } else {
     break;
    }
    return $_0 | 0; //@line 5946
   }
  } while (0);
  $_0 = $23 | -128; //@line 5951
  return $_0 | 0; //@line 5954
 } else {
  $_0 = 0; //@line 5956
  return $_0 | 0; //@line 5959
 }
 return 0;
}
function _mac_kbd_set_data_fct($kbd, $ext, $fct) {
 $kbd = $kbd | 0;
 $ext = $ext | 0;
 $fct = $fct | 0;
 HEAP32[$kbd + 288 >> 2] = $ext; //@line 5972
 HEAP32[$kbd + 292 >> 2] = $fct; //@line 5975
 return;
}
function _mac_kbd_set_intr_fct($kbd, $ext, $fct) {
 $kbd = $kbd | 0;
 $ext = $ext | 0;
 $fct = $fct | 0;
 HEAP32[$kbd + 296 >> 2] = $ext; //@line 5989
 HEAP32[$kbd + 300 >> 2] = $fct; //@line 5992
 return;
}
function _mac_kbd_set_model($kbd, $model, $intl) {
 $kbd = $kbd | 0;
 $model = $model | 0;
 $intl = $intl | 0;
 HEAP32[$kbd + 276 >> 2] = $model; //@line 6006
 HEAP32[$kbd + 284 >> 2] = ($intl | 0) == 0 ? 10848 : 12912; //@line 6010
 return 0; //@line 6012
}
function _mac_iwm_access_uint8($iwm, $reg) {
 $iwm = $iwm | 0;
 $reg = $reg | 0;
 var $1 = 0, $3 = 0, $7 = 0, $11 = 0, $15 = 0, $19 = 0, $23 = 0, $27 = 0, $31 = 0, $35 = 0, $38 = 0, $42 = 0, $45 = 0, $49 = 0, $55 = 0, $56 = 0, $64 = 0, $67 = 0, $75 = 0, $79 = 0, $83 = 0, $87 = 0, $_pre_phi = 0, $91 = 0, $95 = 0, $101 = 0, $102 = 0, $103 = 0, $_lobit_i = 0, $105 = 0, $116 = 0, $117 = 0, $121 = 0, $123 = 0, $128 = 0, $135 = 0, $137 = 0, $140 = 0, $i_0_i_i = 0, $v_0_i_i = 0, $151 = 0, $156 = 0, $175 = 0, $178 = 0, $181 = 0, $186 = 0, $187 = 0, $198 = 0, $199 = 0, $200 = 0, sp = 0;
 sp = STACKTOP; //@line 6041
 $1 = $reg & 15; //@line 6042
 if (($1 | 0) == 7) {
  $31 = $iwm | 0; //@line 6044
  HEAP8[$31] = HEAP8[$31] | 8; //@line 6047
  $_pre_phi = $31; //@line 6049
 } else if (($1 | 0) == 2) {
  $11 = $iwm | 0; //@line 6051
  HEAP8[$11] = HEAP8[$11] & -3; //@line 6054
  $_pre_phi = $11; //@line 6056
 } else if (($1 | 0) == 1) {
  $7 = $iwm | 0; //@line 6058
  HEAP8[$7] = HEAP8[$7] | 1; //@line 6061
  $_pre_phi = $7; //@line 6063
 } else if (($1 | 0) == 3) {
  $15 = $iwm | 0; //@line 6065
  HEAP8[$15] = HEAP8[$15] | 2; //@line 6068
  $_pre_phi = $15; //@line 6070
 } else if (($1 | 0) == 9) {
  $42 = $iwm | 0; //@line 6072
  HEAP8[$42] = HEAP8[$42] | 16; //@line 6075
  $45 = $iwm + 3 | 0; //@line 6076
  HEAP8[$45] = HEAP8[$45] | 32; //@line 6079
  $_pre_phi = $42; //@line 6081
 } else if (($1 | 0) == 6) {
  $27 = $iwm | 0; //@line 6083
  HEAP8[$27] = HEAP8[$27] & -9; //@line 6086
  $_pre_phi = $27; //@line 6088
 } else if (($1 | 0) == 0) {
  $3 = $iwm | 0; //@line 6090
  HEAP8[$3] = HEAP8[$3] & -2; //@line 6093
  $_pre_phi = $3; //@line 6095
 } else if (($1 | 0) == 8) {
  $35 = $iwm | 0; //@line 6097
  HEAP8[$35] = HEAP8[$35] & -17; //@line 6100
  $38 = $iwm + 3 | 0; //@line 6101
  HEAP8[$38] = HEAP8[$38] & -33; //@line 6104
  $_pre_phi = $35; //@line 6106
 } else if (($1 | 0) == 5) {
  $23 = $iwm | 0; //@line 6108
  HEAP8[$23] = HEAP8[$23] | 4; //@line 6111
  $_pre_phi = $23; //@line 6113
 } else if (($1 | 0) == 4) {
  $19 = $iwm | 0; //@line 6115
  HEAP8[$19] = HEAP8[$19] & -5; //@line 6118
  $_pre_phi = $19; //@line 6120
 } else if (($1 | 0) == 12) {
  $75 = $iwm | 0; //@line 6122
  HEAP8[$75] = HEAP8[$75] & -65; //@line 6125
  $_pre_phi = $75; //@line 6127
 } else if (($1 | 0) == 10) {
  $49 = $iwm | 0; //@line 6129
  HEAP8[$49] = HEAP8[$49] & -33; //@line 6132
  $55 = (HEAP8[$iwm + 2 | 0] | 0) != 0 ? 2 : 0; //@line 6136
  $56 = $iwm + 24 + ($55 * 96 | 0) | 0; //@line 6137
  HEAP32[$iwm + 312 >> 2] = $56; //@line 6139
  _iwm_drv_select_track($56, HEAP32[$iwm + 24 + ($55 * 96 | 0) + 40 >> 2] | 0, HEAPU8[$iwm + 1 | 0] | 0); //@line 6145
  $_pre_phi = $49; //@line 6147
 } else if (($1 | 0) == 11) {
  $64 = $iwm | 0; //@line 6149
  HEAP8[$64] = HEAP8[$64] | 32; //@line 6152
  $67 = $iwm + 120 | 0; //@line 6153
  HEAP32[$iwm + 312 >> 2] = $67; //@line 6155
  _iwm_drv_select_track($67, HEAP32[$iwm + 160 >> 2] | 0, HEAPU8[$iwm + 1 | 0] | 0); //@line 6161
  $_pre_phi = $64; //@line 6163
 } else if (($1 | 0) == 13) {
  $79 = $iwm | 0; //@line 6165
  HEAP8[$79] = HEAP8[$79] | 64; //@line 6168
  $_pre_phi = $79; //@line 6170
 } else if (($1 | 0) == 14) {
  $83 = $iwm | 0; //@line 6172
  HEAP8[$83] = HEAP8[$83] & 127; //@line 6175
  $_pre_phi = $83; //@line 6177
 } else if (($1 | 0) == 15) {
  $87 = $iwm | 0; //@line 6179
  HEAP8[$87] = HEAP8[$87] | -128; //@line 6182
  $_pre_phi = $87; //@line 6184
 } else {
  $_pre_phi = $iwm | 0; //@line 6188
 }
 $91 = HEAP8[$_pre_phi] | 0; //@line 6191
 if (($91 & 8) == 0) {
  $175 = $91; //@line 6196
 } else {
  $95 = $91 & 255; //@line 6198
  $101 = ((HEAP8[$iwm + 1 | 0] | 0) != 0 ? 4 : 0) | $95 & 3; //@line 6204
  $102 = $95 & 4; //@line 6205
  $103 = ($102 | 0) != 0; //@line 6206
  $_lobit_i = $102 >>> 2; //@line 6207
  $105 = HEAP32[$iwm + 312 >> 2] | 0; //@line 6209
  do {
   if (($101 | 0) == 0) {
    HEAP8[$105 + 32 | 0] = ($_lobit_i ^ 1) & 255; //@line 6215
   } else if (($101 | 0) == 1) {
    if (($_lobit_i | 0) != 0) {
     break;
    }
    $116 = $105 + 40 | 0; //@line 6226
    $117 = HEAP32[$116 >> 2] | 0; //@line 6227
    do {
     if ((HEAP8[$105 + 32 | 0] | 0) == 0) {
      if (($117 | 0) == 0) {
       $128 = 0; //@line 6234
       break;
      }
      $121 = $117 - 1 | 0; //@line 6237
      HEAP32[$116 >> 2] = $121; //@line 6238
      $128 = $121; //@line 6240
     } else {
      $123 = $117 + 1 | 0; //@line 6242
      if ($123 >>> 0 >= (HEAP32[$105 + 24 >> 2] | 0) >>> 0) {
       $128 = $117; //@line 6248
       break;
      }
      HEAP32[$116 >> 2] = $123; //@line 6251
      $128 = $123; //@line 6253
     }
    } while (0);
    HEAP8[$105 + 33 | 0] = 1; //@line 6258
    _iwm_drv_select_track($105, $128, HEAP32[$105 + 44 >> 2] | 0); //@line 6261
    $135 = HEAP32[$116 >> 2] | 0; //@line 6265
    _pce_printf(51536, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = (HEAP32[$105 >> 2] | 0) + 1, HEAP32[tempInt + 8 >> 2] = $135, tempInt) | 0); //@line 6266
   } else if (($101 | 0) == 2) {
    $137 = $105 + 36 | 0; //@line 6269
    $140 = $_lobit_i ^ 1; //@line 6272
    if ((HEAP8[$137] | 0) == ($140 | 0)) {
     $i_0_i_i = 0; //@line 6276
    } else {
     HEAP8[$137] = $140 & 255; //@line 6279
     $i_0_i_i = 0; //@line 6281
    }
    while (1) {
     if ($i_0_i_i >>> 0 >= 3) {
      $v_0_i_i = 0; //@line 6288
      break;
     }
     if ((HEAP8[$iwm + 24 + ($i_0_i_i * 96 | 0) + 36 | 0] | 0) == 0) {
      $i_0_i_i = $i_0_i_i + 1 | 0; //@line 6297
     } else {
      $v_0_i_i = 1; //@line 6299
      break;
     }
    }
    $151 = $iwm + 316 | 0; //@line 6304
    if ((HEAP8[$151] | 0) == $v_0_i_i << 24 >> 24) {
     break;
    }
    HEAP8[$151] = $v_0_i_i; //@line 6311
    $156 = HEAP32[$iwm + 324 >> 2] | 0; //@line 6313
    if (($156 | 0) == 0) {
     break;
    }
    FUNCTION_TABLE_vii[$156 & 511](HEAP32[$iwm + 320 >> 2] | 0, $v_0_i_i); //@line 6321
   } else if (($101 | 0) == 3) {
    if (!$103) {
     break;
    }
    HEAP8[$105 + 34 | 0] = 0; //@line 6329
    _mac_log_deb(31392, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAP32[$105 >> 2] | 0) + 1, tempInt) | 0); //@line 6333
    if ((HEAP8[$105 + 92 | 0] | 0) == 0) {
     break;
    }
    _iwm_drv_save($105) | 0; //@line 6341
   } else if (($101 | 0) == 4) {
    if (!$103) {
     break;
    }
    HEAP8[$105 + 35 | 0] = 0; //@line 6349
   }
  } while (0);
  $175 = HEAP8[$_pre_phi] | 0; //@line 6354
 }
 if ($175 << 24 >> 24 <= -1) {
  STACKTOP = sp; //@line 6360
  return;
 }
 $178 = $iwm + 5 | 0; //@line 6363
 HEAP8[$178] = HEAP8[$178] | 64; //@line 6366
 $181 = $iwm + 6 | 0; //@line 6367
 if ((HEAP8[$181] | 0) == 0) {
  STACKTOP = sp; //@line 6372
  return;
 }
 HEAP8[$181] = 0; //@line 6375
 $186 = HEAP32[$iwm + 312 >> 2] | 0; //@line 6377
 $187 = $186 + 76 | 0; //@line 6378
 do {
  if ((HEAP32[$187 >> 2] | 0) >>> 0 > (HEAP32[$186 + 56 >> 2] | 0) >>> 0) {
   if ((HEAP8[$186 + 22 | 0] | 0) == 0) {
    break;
   }
   $198 = HEAP32[$186 + 48 >> 2] | 0; //@line 6394
   $199 = $186 + 52 | 0; //@line 6395
   $200 = HEAP32[$199 >> 2] | 0; //@line 6396
   _pri_trk_rotate($198, $200) | 0; //@line 6397
   HEAP32[$199 >> 2] = 0; //@line 6398
  }
 } while (0);
 HEAP32[$187 >> 2] = 0; //@line 6402
 STACKTOP = sp; //@line 6404
 return;
}
function _mac_iwm_set_uint8($iwm, $addr, $val) {
 $iwm = $iwm | 0;
 $addr = $addr | 0;
 $val = $val | 0;
 var $8 = 0, $14 = 0;
 if (($addr & 1 | 0) == 0) {
  return;
 }
 _mac_iwm_access_uint8($iwm, $addr >>> 9 & 15); //@line 6427
 $8 = HEAPU8[$iwm | 0] | 0; //@line 6430
 if (($8 & 192 | 0) != 192) {
  return;
 }
 if (($8 & 16 | 0) == 0) {
  HEAP8[$iwm + 4 | 0] = $val; //@line 6443
  return;
 }
 $14 = $iwm + 6 | 0; //@line 6447
 if ((HEAP8[$14] | 0) == 0) {
  HEAP8[$14] = 1; //@line 6452
  HEAP32[$iwm + 8 >> 2] = 0; //@line 6454
  HEAP32[(HEAP32[$iwm + 312 >> 2] | 0) + 76 >> 2] = 0; //@line 6458
 }
 HEAP16[$iwm + 14 >> 1] = $val & 255 | -256; //@line 6464
 return;
}
function _mac_iwm_clock($iwm, $cnt) {
 $iwm = $iwm | 0;
 $cnt = $cnt | 0;
 var $2 = 0, $7 = 0, $10 = 0, $12 = 0, $13 = 0, $15 = 0, $16 = 0, $19 = 0, $storemerge = 0, $26 = 0, $28 = 0, $31 = 0, $33 = 0, $38 = 0, $42 = 0, $43 = 0, $47 = 0, $48 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $m_0_ph_i = 0, $p_0_ph_i = 0, $62 = 0, $64 = 0, $m_0_i = 0, $71 = 0, $74 = 0, $85 = 0, $86 = 0, $89 = 0, $91 = 0, $storemerge_i = 0, $106 = 0, $123 = 0, $127 = 0, $128 = 0, $130 = 0, $131 = 0, $138 = 0, $139 = 0, $140 = 0, $142 = 0, $p_026_i = 0, $m_025_i = 0, $143 = 0, $147 = 0, $153 = 0, $159 = 0, $170 = 0, $m_1_i = 0, $p_1_i = 0, $171 = 0, $174 = 0, $175 = 0, $179 = 0, label = 0;
 $2 = HEAP32[$iwm + 312 >> 2] | 0; //@line 6497
 if ((HEAP8[$2 + 36 | 0] | 0) == 0) {
  return;
 }
 $7 = $2 + 84 | 0; //@line 6506
 $10 = (HEAP32[$7 >> 2] | 0) + ($cnt * 5e5 | 0) | 0; //@line 6509
 $12 = HEAP32[$2 + 80 >> 2] | 0; //@line 6511
 $13 = ($10 >>> 0) / ($12 >>> 0) | 0; //@line 6512
 HEAP32[$7 >> 2] = ($10 >>> 0) % ($12 >>> 0) | 0; //@line 6514
 $15 = $2 + 56 | 0; //@line 6515
 $16 = HEAP32[$15 >> 2] | 0; //@line 6516
 if (($16 | 0) == 0) {
  $26 = 0; //@line 6520
 } else {
  $19 = $2 + 52 | 0; //@line 6522
  $storemerge = (HEAP32[$19 >> 2] | 0) + $13 | 0; //@line 6526
  while (1) {
   if ($storemerge >>> 0 < $16 >>> 0) {
    break;
   } else {
    $storemerge = $storemerge - $16 | 0; //@line 6535
   }
  }
  HEAP32[$19 >> 2] = $storemerge; //@line 6538
  $26 = $16; //@line 6539
 }
 $28 = HEAP32[$2 + 64 >> 2] | 0; //@line 6543
 do {
  if (($28 | 0) != 0) {
   $31 = $2 + 60 | 0; //@line 6548
   $33 = (HEAP32[$31 >> 2] | 0) + $13 | 0; //@line 6550
   HEAP32[$31 >> 2] = $33; //@line 6551
   if ($33 >>> 0 < $28 >>> 0) {
    break;
   }
   HEAP32[$31 >> 2] = $33 - $28; //@line 6558
  }
 } while (0);
 $38 = $iwm + 6 | 0; //@line 6562
 L1061 : do {
  if ((HEAP8[$38] | 0) == 0) {
   if ((HEAPU8[$iwm | 0] | 0) >= 64) {
    break;
   }
   $123 = HEAP32[$2 + 48 >> 2] | 0; //@line 6576
   if (($123 | 0) == 0 | ($26 | 0) == 0) {
    break;
   }
   $127 = $2 + 68 | 0; //@line 6584
   $128 = HEAP32[$127 >> 2] | 0; //@line 6585
   $130 = HEAP32[$123 + 8 >> 2] | 0; //@line 6587
   $131 = $2 + 52 | 0; //@line 6588
   if (($128 | 0) == (HEAP32[$131 >> 2] | 0)) {
    break;
   }
   $138 = $iwm + 12 | 0; //@line 6599
   $139 = $iwm + 16 | 0; //@line 6600
   $140 = $iwm + 13 | 0; //@line 6601
   $m_025_i = 128 >>> (($128 & 7) >>> 0) & 255;
   $p_026_i = $128 >>> 3;
   $142 = HEAP8[$138] | 0;
   while (1) {
    $143 = $142 << 1; //@line 6609
    $147 = (HEAP8[$130 + $p_026_i | 0] & $m_025_i) << 24 >> 24 != 0; //@line 6613
    HEAP8[$138] = $147 & 1 | $143; //@line 6616
    do {
     if ($147) {
      HEAP32[$139 >> 2] = 0; //@line 6620
     } else {
      $153 = (HEAP32[$139 >> 2] | 0) + 1 | 0; //@line 6624
      HEAP32[$139 >> 2] = $153; //@line 6625
      if ($153 >>> 0 <= 7) {
       break;
      }
      HEAP32[$139 >> 2] = 0; //@line 6631
      HEAP8[$138] = $143 | 1; //@line 6633
     }
    } while (0);
    $159 = (HEAP32[$127 >> 2] | 0) + 1 | 0; //@line 6638
    HEAP32[$127 >> 2] = $159; //@line 6639
    do {
     if ($159 >>> 0 < (HEAP32[$15 >> 2] | 0) >>> 0) {
      if ($m_025_i << 24 >> 24 == 1) {
       $p_1_i = $p_026_i + 1 | 0;
       $m_1_i = -128;
       $170 = $159;
       break;
      } else {
       $p_1_i = $p_026_i;
       $m_1_i = ($m_025_i & 255) >>> 1;
       $170 = $159;
       break;
      }
     } else {
      HEAP32[$127 >> 2] = 0; //@line 6658
      $p_1_i = 0;
      $m_1_i = -128;
      $170 = 0;
     }
    } while (0);
    $171 = HEAP8[$138] | 0; //@line 6666
    if ($171 << 24 >> 24 < 0) {
     HEAP8[$140] = $171; //@line 6670
     HEAP8[$138] = 0; //@line 6671
     $175 = 0;
     $174 = HEAP32[$127 >> 2] | 0;
    } else {
     $175 = $171;
     $174 = $170;
    }
    if (($174 | 0) == (HEAP32[$131 >> 2] | 0)) {
     break;
    } else {
     $m_025_i = $m_1_i;
     $p_026_i = $p_1_i;
     $142 = $175;
    }
   }
  } else {
   $42 = $2 + 48 | 0; //@line 6690
   $43 = HEAP32[$42 >> 2] | 0; //@line 6691
   if (($43 | 0) == 0 | ($26 | 0) == 0) {
    break;
   }
   $47 = $2 + 72 | 0; //@line 6699
   $48 = HEAP32[$47 >> 2] | 0; //@line 6700
   $54 = HEAP32[$43 + 8 >> 2] | 0; //@line 6706
   $55 = $2 + 52 | 0; //@line 6707
   $56 = $iwm + 8 | 0; //@line 6708
   $57 = $iwm + 14 | 0; //@line 6709
   $58 = $iwm + 12 | 0; //@line 6710
   $59 = $2 + 92 | 0; //@line 6711
   $60 = $2 + 76 | 0; //@line 6712
   $p_0_ph_i = $48 >>> 3;
   $m_0_ph_i = 128 >>> (($48 & 7) >>> 0) & 255;
   $61 = $48;
   L1064 : while (1) {
    $62 = $54 + $p_0_ph_i | 0; //@line 6719
    $m_0_i = $m_0_ph_i;
    $64 = $61;
    while (1) {
     if (($64 | 0) == (HEAP32[$55 >> 2] | 0)) {
      break L1061;
     }
     if ((HEAP32[$56 >> 2] | 0) == 0) {
      $71 = HEAP16[$57 >> 1] | 0; //@line 6734
      if (($71 & 65535) < 256) {
       break L1064;
      }
      $89 = $71 & 255; //@line 6740
      HEAP8[$58] = $89; //@line 6741
      HEAP32[$56 >> 2] = 8; //@line 6742
      HEAP16[$57 >> 1] = 0; //@line 6743
      $91 = $89; //@line 6745
     } else {
      $91 = HEAP8[$58] | 0; //@line 6749
     }
     if ($91 << 24 >> 24 < 0) {
      $storemerge_i = HEAP8[$62] | $m_0_i; //@line 6758
     } else {
      $storemerge_i = HEAP8[$62] & ~$m_0_i; //@line 6763
     }
     HEAP8[$62] = $storemerge_i; //@line 6766
     HEAP8[$59] = 1; //@line 6767
     HEAP8[$58] = HEAP8[$58] << 1; //@line 6770
     HEAP32[$56 >> 2] = (HEAP32[$56 >> 2] | 0) - 1; //@line 6773
     $106 = (HEAP32[$47 >> 2] | 0) + 1 | 0; //@line 6775
     HEAP32[$47 >> 2] = $106; //@line 6776
     HEAP32[$60 >> 2] = (HEAP32[$60 >> 2] | 0) + 1; //@line 6779
     if ($106 >>> 0 >= (HEAP32[$15 >> 2] | 0) >>> 0) {
      label = 854; //@line 6784
      break;
     }
     if ($m_0_i << 24 >> 24 == 1) {
      label = 857; //@line 6790
      break;
     }
     $m_0_i = ($m_0_i & 255) >>> 1;
     $64 = $106;
    }
    if ((label | 0) == 854) {
     label = 0; //@line 6798
     HEAP32[$47 >> 2] = 0; //@line 6799
     $p_0_ph_i = 0;
     $m_0_ph_i = -128;
     $61 = 0;
     continue;
    } else if ((label | 0) == 857) {
     label = 0; //@line 6805
     $p_0_ph_i = $p_0_ph_i + 1 | 0;
     $m_0_ph_i = -128;
     $61 = $106;
     continue;
    }
   }
   $74 = $iwm + 5 | 0; //@line 6812
   HEAP8[$74] = HEAP8[$74] & -65; //@line 6815
   HEAP32[$56 >> 2] = 0; //@line 6816
   HEAP8[$38] = 0; //@line 6817
   do {
    if ((HEAP32[$60 >> 2] | 0) >>> 0 > (HEAP32[$15 >> 2] | 0) >>> 0) {
     if ((HEAP8[$2 + 22 | 0] | 0) == 0) {
      break;
     }
     $85 = HEAP32[$42 >> 2] | 0; //@line 6831
     $86 = HEAP32[$55 >> 2] | 0; //@line 6832
     _pri_trk_rotate($85, $86) | 0; //@line 6833
     HEAP32[$55 >> 2] = 0; //@line 6834
    }
   } while (0);
   HEAP32[$60 >> 2] = 0; //@line 6838
  }
 } while (0);
 $179 = HEAP32[$2 + 52 >> 2] | 0; //@line 6843
 HEAP32[$2 + 68 >> 2] = $179; //@line 6845
 HEAP32[$2 + 72 >> 2] = $179; //@line 6847
 return;
}
function _mac_kbd_new() {
 var $1 = 0, $_0 = 0;
 $1 = _malloc(304) | 0; //@line 6859
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 6863
  return $_0 | 0; //@line 6866
 }
 HEAP8[$1 + 264 | 0] = 0; //@line 6871
 HEAP32[$1 >> 2] = 0; //@line 6874
 HEAP32[$1 + 4 >> 2] = 0; //@line 6877
 _memset($1 + 268 | 0, 0, 13); //@line 6880
 _memset($1 + 288 | 0, 0, 16); //@line 6881
 HEAP32[$1 + 284 >> 2] = 10848; //@line 6882
 $_0 = $1; //@line 6884
 return $_0 | 0; //@line 6887
}
function _mac_kbd_set_keypad_mode($kbd, $motion) {
 $kbd = $kbd | 0;
 $motion = $motion | 0;
 var $3 = 0, $5 = 0, $7 = 0, $8 = 0, $tmp_0_i = 0, $11 = 0, $17 = 0, $18 = 0, $24 = 0, $26 = 0, $27 = 0, $tmp_0_i5 = 0, $30 = 0, $36 = 0, $37 = 0, label = 0;
 $3 = HEAP32[$kbd + 284 >> 2] | 0; //@line 6903
 if (($motion | 0) == 0) {
  $24 = HEAP32[3750] | 0; //@line 6906
  if (($24 | 0) != 0) {
   $27 = 15e3;
   $26 = $24;
   do {
    $tmp_0_i5 = $3; //@line 6915
    while (1) {
     $30 = HEAP32[$tmp_0_i5 >> 2] | 0; //@line 6919
     if (($30 | 0) == 0) {
      break;
     }
     if (($30 | 0) == ($26 | 0)) {
      label = 895; //@line 6929
      break;
     } else {
      $tmp_0_i5 = $tmp_0_i5 + 24 | 0; //@line 6932
     }
    }
    if ((label | 0) == 895) {
     label = 0; //@line 6936
     $36 = $tmp_0_i5; //@line 6937
     $37 = $27; //@line 6938
     HEAP32[$36 >> 2] = HEAP32[$37 >> 2]; //@line 6939
     HEAP32[$36 + 4 >> 2] = HEAP32[$37 + 4 >> 2]; //@line 6939
     HEAP32[$36 + 8 >> 2] = HEAP32[$37 + 8 >> 2]; //@line 6939
     HEAP32[$36 + 12 >> 2] = HEAP32[$37 + 12 >> 2]; //@line 6939
     HEAP32[$36 + 16 >> 2] = HEAP32[$37 + 16 >> 2]; //@line 6939
     HEAP32[$36 + 20 >> 2] = HEAP32[$37 + 20 >> 2]; //@line 6939
    }
    $27 = $27 + 24 | 0; //@line 6942
    $26 = HEAP32[$27 >> 2] | 0; //@line 6943
   } while (($26 | 0) != 0);
  }
  HEAP8[$kbd + 280 | 0] = 1; //@line 6954
  return;
 } else {
  $5 = HEAP32[3888] | 0; //@line 6958
  if (($5 | 0) != 0) {
   $8 = 15552;
   $7 = $5;
   do {
    $tmp_0_i = $3; //@line 6967
    while (1) {
     $11 = HEAP32[$tmp_0_i >> 2] | 0; //@line 6971
     if (($11 | 0) == 0) {
      break;
     }
     if (($11 | 0) == ($7 | 0)) {
      label = 888; //@line 6981
      break;
     } else {
      $tmp_0_i = $tmp_0_i + 24 | 0; //@line 6984
     }
    }
    if ((label | 0) == 888) {
     label = 0; //@line 6988
     $17 = $tmp_0_i; //@line 6989
     $18 = $8; //@line 6990
     HEAP32[$17 >> 2] = HEAP32[$18 >> 2]; //@line 6991
     HEAP32[$17 + 4 >> 2] = HEAP32[$18 + 4 >> 2]; //@line 6991
     HEAP32[$17 + 8 >> 2] = HEAP32[$18 + 8 >> 2]; //@line 6991
     HEAP32[$17 + 12 >> 2] = HEAP32[$18 + 12 >> 2]; //@line 6991
     HEAP32[$17 + 16 >> 2] = HEAP32[$18 + 16 >> 2]; //@line 6991
     HEAP32[$17 + 20 >> 2] = HEAP32[$18 + 20 >> 2]; //@line 6991
    }
    $8 = $8 + 24 | 0; //@line 6994
    $7 = HEAP32[$8 >> 2] | 0; //@line 6995
   } while (($7 | 0) != 0);
  }
  HEAP8[$kbd + 280 | 0] = 0; //@line 7006
  return;
 }
}
function _mac_kbd_set_data($kbd, $val) {
 $kbd = $kbd | 0;
 $val = $val | 0;
 HEAP8[$kbd + 264 | 0] = $val; //@line 7021
 return;
}
function _mac_kbd_set_key($kbd, $event, $key) {
 $kbd = $kbd | 0;
 $event = $event | 0;
 $key = $key | 0;
 var $_0 = 0, $map_0 = 0, $9 = 0, $10 = 0, $15 = 0, $21 = 0, $22 = 0, $24 = 0, $25 = 0, $27 = 0, $i_05_i = 0, $37 = 0, $38 = 0, $39 = 0, $43 = 0, $44 = 0, $46 = 0, $47 = 0, $49 = 0, $i_05_i19 = 0, $59 = 0, $60 = 0, $61 = 0, sp = 0;
 sp = STACKTOP; //@line 7040
 if (($key | 0) == 2) {
  $_0 = 71; //@line 7044
 } else {
  $_0 = ($key | 0) == 3 ? 75 : $key; //@line 7049
 }
 $map_0 = HEAP32[$kbd + 284 >> 2] | 0; //@line 7055
 while (1) {
  $9 = HEAP32[$map_0 >> 2] | 0; //@line 7059
  $10 = ($9 | 0) == 0; //@line 7060
  if ($10 | ($9 | 0) == ($_0 | 0)) {
   break;
  } else {
   $map_0 = $map_0 + 24 | 0; //@line 7068
  }
 }
 if ($10) {
  $15 = _pce_key_to_string($_0) | 0; //@line 7073
  _pce_log(2, 31224, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $_0, HEAP32[tempInt + 8 >> 2] = ($15 | 0) != 0 ? $15 : 51488, tempInt) | 0); //@line 7076
  STACKTOP = sp; //@line 7078
  return;
 }
 if (($event | 0) == 1) {
  $21 = HEAP16[$map_0 + 4 >> 1] | 0; //@line 7083
  $22 = $21 & 65535; //@line 7084
  if ($21 << 16 >> 16 == 0) {
   STACKTOP = sp; //@line 7088
   return;
  }
  $24 = $kbd + 4 | 0; //@line 7091
  $25 = $kbd | 0; //@line 7092
  $i_05_i = 0;
  $27 = HEAP32[$24 >> 2] | 0;
  while (1) {
   if ($27 >>> 0 > 255) {
    $38 = $27; //@line 7102
   } else {
    HEAP8[((HEAP32[$25 >> 2] | 0) + $27 & 255) + ($kbd + 8) | 0] = HEAP8[$map_0 + 6 + $i_05_i | 0] | 0; //@line 7110
    $37 = (HEAP32[$24 >> 2] | 0) + 1 | 0; //@line 7112
    HEAP32[$24 >> 2] = $37; //@line 7113
    $38 = $37; //@line 7115
   }
   $39 = $i_05_i + 1 | 0; //@line 7118
   if ($39 >>> 0 < $22 >>> 0) {
    $i_05_i = $39;
    $27 = $38;
   } else {
    break;
   }
  }
  STACKTOP = sp; //@line 7127
  return;
 } else if (($event | 0) == 2) {
  $43 = HEAP16[$map_0 + 14 >> 1] | 0; //@line 7131
  $44 = $43 & 65535; //@line 7132
  if ($43 << 16 >> 16 == 0) {
   STACKTOP = sp; //@line 7136
   return;
  }
  $46 = $kbd + 4 | 0; //@line 7139
  $47 = $kbd | 0; //@line 7140
  $i_05_i19 = 0;
  $49 = HEAP32[$46 >> 2] | 0;
  while (1) {
   if ($49 >>> 0 > 255) {
    $60 = $49; //@line 7150
   } else {
    HEAP8[((HEAP32[$47 >> 2] | 0) + $49 & 255) + ($kbd + 8) | 0] = HEAP8[$map_0 + 16 + $i_05_i19 | 0] | 0; //@line 7158
    $59 = (HEAP32[$46 >> 2] | 0) + 1 | 0; //@line 7160
    HEAP32[$46 >> 2] = $59; //@line 7161
    $60 = $59; //@line 7163
   }
   $61 = $i_05_i19 + 1 | 0; //@line 7166
   if ($61 >>> 0 < $44 >>> 0) {
    $i_05_i19 = $61;
    $49 = $60;
   } else {
    break;
   }
  }
  STACKTOP = sp; //@line 7175
  return;
 } else {
  STACKTOP = sp; //@line 7178
  return;
 }
}
function _mac_kbd_set_uint8($kbd, $val) {
 $kbd = $kbd | 0;
 $val = $val | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP; //@line 7190
 $1 = $val & 255; //@line 7191
 if (($1 | 0) == 20) {
  HEAP32[$kbd + 268 >> 2] = 0; //@line 7194
  HEAP32[$kbd + 272 >> 2] = 1; //@line 7196
  STACKTOP = sp; //@line 7198
  return;
 } else if (($1 | 0) == 22) {
  HEAP32[$kbd >> 2] = 0; //@line 7202
  HEAP32[$kbd + 4 >> 2] = 1; //@line 7204
  HEAP8[$kbd + 8 | 0] = (HEAP32[$kbd + 276 >> 2] << 1 & 14 | 1) & 255; //@line 7212
  HEAP32[$kbd + 268 >> 2] = 0; //@line 7214
  HEAP32[$kbd + 272 >> 2] = 1; //@line 7216
  STACKTOP = sp; //@line 7218
  return;
 } else if (($1 | 0) == 16) {
  HEAP32[$kbd + 268 >> 2] = 1958400; //@line 7222
  HEAP32[$kbd + 272 >> 2] = 1; //@line 7224
  STACKTOP = sp; //@line 7226
  return;
 } else {
  _mac_log_deb(47104, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $1, tempInt) | 0); //@line 7229
  STACKTOP = sp; //@line 7231
  return;
 }
}
function _mac_kbd_clock($kbd, $cnt) {
 $kbd = $kbd | 0;
 $cnt = $cnt | 0;
 var $5 = 0, $9 = 0, $10 = 0, $13 = 0, $15 = 0, $23 = 0, $30 = 0, $31 = 0, $37 = 0;
 if ((HEAP8[$kbd + 264 | 0] | 0) == 0) {
  return;
 }
 $5 = $kbd + 272 | 0; //@line 7255
 if ((HEAP32[$5 >> 2] | 0) == 0) {
  return;
 }
 $9 = $kbd + 4 | 0; //@line 7263
 $10 = HEAP32[$9 >> 2] | 0; //@line 7264
 if (($10 | 0) != 0) {
  $13 = $kbd | 0; //@line 7268
  $15 = HEAP32[$kbd + 292 >> 2] | 0; //@line 7270
  if (($15 | 0) == 0) {
   $23 = $10; //@line 7274
  } else {
   FUNCTION_TABLE_vii[$15 & 511](HEAP32[$kbd + 288 >> 2] | 0, HEAP8[(HEAP32[$13 >> 2] | 0) + ($kbd + 8) | 0] | 0); //@line 7281
   $23 = HEAP32[$9 >> 2] | 0; //@line 7284
  }
  HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 1 & 255; //@line 7290
  HEAP32[$9 >> 2] = $23 - 1; //@line 7292
  HEAP32[$5 >> 2] = 0; //@line 7293
  HEAP32[$kbd + 268 >> 2] = 0; //@line 7295
  return;
 }
 $30 = $kbd + 268 | 0; //@line 7300
 $31 = HEAP32[$30 >> 2] | 0; //@line 7301
 if ($31 >>> 0 > $cnt >>> 0) {
  HEAP32[$30 >> 2] = $31 - $cnt; //@line 7306
  return;
 }
 $37 = HEAP32[$kbd + 292 >> 2] | 0; //@line 7312
 if (($37 | 0) != 0) {
  FUNCTION_TABLE_vii[$37 & 511](HEAP32[$kbd + 288 >> 2] | 0, 123); //@line 7318
 }
 HEAP32[$5 >> 2] = 0; //@line 7321
 return;
}
function _mac_interrupt($sim, $level, $val) {
 $sim = $sim | 0;
 $level = $level | 0;
 $val = $val | 0;
 var $2 = 0, $4 = 0, $8 = 0, $11 = 0, $15 = 0, $17 = 0, $i_0_i = 0, $val_0_in_i = 0, $val_0_i = 0;
 $2 = 1 << $level; //@line 7337
 if (($val | 0) == 0) {
  $11 = $sim + 4652 | 0; //@line 7341
  $15 = (HEAPU8[$11] | 0) & ($2 ^ 255) & 255; //@line 7345
  HEAP8[$11] = $15; //@line 7346
  $17 = $15; //@line 7347
 } else {
  $4 = $sim + 4652 | 0; //@line 7349
  $8 = (HEAPU8[$4] | 0 | $2) & 255; //@line 7353
  HEAP8[$4] = $8; //@line 7354
  $17 = $8; //@line 7356
 }
 $val_0_in_i = $17 & 255;
 $i_0_i = 0;
 while (1) {
  $val_0_i = $val_0_in_i >>> 1; //@line 7365
  if (($val_0_i | 0) == 0) {
   break;
  } else {
   $val_0_in_i = $val_0_i;
   $i_0_i = $i_0_i + 1 | 0;
  }
 }
 _e68_interrupt(HEAP32[$sim + 4 >> 2] | 0, $i_0_i); //@line 7377
 return;
}
function _mac_interrupt_osi($ext, $val) {
 $ext = $ext | 0;
 $val = $val | 0;
 var $9 = 0, $10 = 0, $18 = 0, $20 = 0, $21 = 0, $22 = 0, $29 = 0, $57 = 0;
 if ($val << 24 >> 24 == 0) {
  return;
 }
 do {
  if ((_mac_sony_check($ext + 2424 | 0) | 0) != 0) {
   $9 = $ext + 4 | 0; //@line 7409
   $10 = HEAP32[$9 >> 2] | 0; //@line 7410
   if ((HEAP16[$10 + 166 >> 1] & 1792) == 1792) {
    break;
   }
   $18 = (HEAP32[$10 + 148 >> 2] | 0) - 4 | 0; //@line 7421
   $20 = HEAP32[$10 + 152 >> 2] | 0; //@line 7423
   $21 = $18 & 16777215; //@line 7424
   $22 = $21 + 3 | 0; //@line 7425
   if ($22 >>> 0 < (HEAP32[$10 + 36 >> 2] | 0) >>> 0) {
    $29 = $10 + 32 | 0; //@line 7433
    HEAP8[(HEAP32[$29 >> 2] | 0) + $21 | 0] = $20 >>> 24 & 255; //@line 7436
    HEAP8[(HEAP32[$29 >> 2] | 0) + ($21 + 1) | 0] = $20 >>> 16 & 255; //@line 7442
    HEAP8[(HEAP32[$29 >> 2] | 0) + ($21 + 2) | 0] = $20 >>> 8 & 255; //@line 7448
    HEAP8[(HEAP32[$29 >> 2] | 0) + $22 | 0] = $20 & 255; //@line 7452
   } else {
    FUNCTION_TABLE_viii[HEAP32[$10 + 28 >> 2] & 63](HEAP32[$10 + 4 >> 2] | 0, $21, $20); //@line 7459
   }
   HEAP32[(HEAP32[$9 >> 2] | 0) + 148 >> 2] = $18; //@line 7463
   _e68_set_pc_prefetch(HEAP32[$9 >> 2] | 0, HEAP32[$ext + 2468 >> 2] | 0); //@line 7468
  }
 } while (0);
 $57 = $ext + 36 | 0; //@line 7473
 _e6522_set_ca2_inp($57, 0); //@line 7474
 _e6522_set_ca2_inp($57, 1); //@line 7475
 return;
}
function _mac_init($sim, $ini) {
 $sim = $sim | 0;
 $ini = $ini | 0;
 var $addr2_i = 0, $w_i = 0, $h_i = 0, $bright_i = 0, $col0_i = 0, $col1_i = 0, $addr_i70 = 0, $freq_i = 0, $driver_i71 = 0, $format_hd_as_dd_i = 0, $var_i = 0, $def_i = 0, $val_i = 0, $addr_i66 = 0, $size_i67 = 0, $id_i = 0, $drive_i68 = 0, $vendor_i = 0, $product_i = 0, $single_i = 0, $locked_i = 0, $rotate_i = 0, $inserted_i = 0, $drive_i = 0, $disk_i = 0, $fname_i64 = 0, $mouse_i = 0, $keyboard_i = 0, $motion_i63 = 0, $model_i62 = 0, $intl_i = 0, $motion_i = 0, $fname_i = 0, $start_i = 0, $realtime_i = 0, $romdisk_i = 0, $port_i = 0, $multichar_i = 0, $driver_i = 0, $addr_i60 = 0, $size_i61 = 0, $addr_i = 0, $size_i = 0, $model_i59 = 0, $speed_i = 0, $memtest_i = 0, $model_i = 0, $1 = 0, $2 = 0, $8 = 0, $10 = 0, $11 = 0, $17 = 0, $21 = 0, $39 = 0, $40 = 0, $41 = 0, $43 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $61 = 0, $69 = 0, $76 = 0, $88 = 0, $92 = 0, $93 = 0, $94 = 0, $109 = 0, $112 = 0, $116 = 0, $117 = 0, $120 = 0, $127 = 0, $131 = 0, $132 = 0, $135 = 0, $142 = 0, $143 = 0, $144 = 0, $sct_014_i = 0, $150 = 0, $151 = 0, $155 = 0, $160 = 0, $161 = 0, $174 = 0, $180 = 0, $181 = 0, $184 = 0, $188 = 0, $203 = 0, $210 = 0, $211 = 0, $216 = 0, $221 = 0, $224 = 0, $225 = 0, $228 = 0, $229 = 0, $243 = 0, $244 = 0, $245 = 0, $250 = 0, $254 = 0, $258 = 0, $264 = 0, $267 = 0, $268 = 0, $277 = 0, $281 = 0, $283 = 0, $286 = 0, $294 = 0, $295 = 0, $297 = 0, $sctdev_022_i = 0, $n_021_i = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $351 = 0, $357 = 0, $358 = 0, $362 = 0, $367 = 0, $sctdev_020_i = 0, $374 = 0, $375 = 0, $376 = 0, $386 = 0, $389 = 0, $392 = 0, $405 = 0, $408 = 0, $411 = 0, $412 = 0, $417 = 0, $420 = 0, $423 = 0, $424 = 0, $429 = 0, $432 = 0, $435 = 0, $436 = 0, $441 = 0, $444 = 0, $446 = 0, $447 = 0, $451 = 0, $455 = 0, $457 = 0, $__i = 0, $464 = 0, $465 = 0, $468 = 0, $469 = 0, $473 = 0, $477 = 0, $485 = 0, $499 = 0, $501 = 0, $__i72 = 0, $511 = 0, $512 = 0, $514 = 0, $515 = 0, $516 = 0, $527 = 0, $531 = 0, $535 = 0, $i_031_i = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, sp = 0;
 sp = STACKTOP; //@line 7556
 STACKTOP = STACKTOP + 400 | 0; //@line 7556
 $addr2_i = sp | 0; //@line 7557
 $w_i = sp + 8 | 0; //@line 7558
 $h_i = sp + 16 | 0; //@line 7559
 $bright_i = sp + 24 | 0; //@line 7560
 $col0_i = sp + 32 | 0; //@line 7561
 $col1_i = sp + 40 | 0; //@line 7562
 $addr_i70 = sp + 48 | 0; //@line 7563
 $freq_i = sp + 56 | 0; //@line 7564
 $driver_i71 = sp + 64 | 0; //@line 7565
 $format_hd_as_dd_i = sp + 72 | 0; //@line 7566
 $var_i = sp + 80 | 0; //@line 7567
 $def_i = sp + 112 | 0; //@line 7568
 $val_i = sp + 120 | 0; //@line 7569
 $addr_i66 = sp + 128 | 0; //@line 7570
 $size_i67 = sp + 136 | 0; //@line 7571
 $id_i = sp + 144 | 0; //@line 7572
 $drive_i68 = sp + 152 | 0; //@line 7573
 $vendor_i = sp + 160 | 0; //@line 7574
 $product_i = sp + 168 | 0; //@line 7575
 $single_i = sp + 176 | 0; //@line 7576
 $locked_i = sp + 184 | 0; //@line 7577
 $rotate_i = sp + 192 | 0; //@line 7578
 $inserted_i = sp + 200 | 0; //@line 7579
 $drive_i = sp + 208 | 0; //@line 7580
 $disk_i = sp + 216 | 0; //@line 7581
 $fname_i64 = sp + 224 | 0; //@line 7582
 $mouse_i = sp + 232 | 0; //@line 7583
 $keyboard_i = sp + 240 | 0; //@line 7584
 $motion_i63 = sp + 248 | 0; //@line 7585
 $model_i62 = sp + 256 | 0; //@line 7586
 $intl_i = sp + 264 | 0; //@line 7587
 $motion_i = sp + 272 | 0; //@line 7588
 $fname_i = sp + 280 | 0; //@line 7589
 $start_i = sp + 288 | 0; //@line 7590
 $realtime_i = sp + 296 | 0; //@line 7591
 $romdisk_i = sp + 304 | 0; //@line 7592
 $port_i = sp + 312 | 0; //@line 7593
 $multichar_i = sp + 320 | 0; //@line 7594
 $driver_i = sp + 328 | 0; //@line 7595
 $addr_i60 = sp + 336 | 0; //@line 7596
 $size_i61 = sp + 344 | 0; //@line 7597
 $addr_i = sp + 352 | 0; //@line 7598
 $size_i = sp + 360 | 0; //@line 7599
 $model_i59 = sp + 368 | 0; //@line 7600
 $speed_i = sp + 376 | 0; //@line 7601
 $memtest_i = sp + 384 | 0; //@line 7602
 $model_i = sp + 392 | 0; //@line 7603
 $1 = $sim + 3480 | 0; //@line 7604
 HEAP32[$1 >> 2] = 0; //@line 7605
 $2 = $sim + 3476 | 0; //@line 7606
 HEAP32[$2 >> 2] = 0; //@line 7607
 HEAP32[$sim + 4632 >> 2] = 0; //@line 7609
 HEAP8[$sim + 4652 | 0] = 0; //@line 7612
 HEAP8[$sim + 4676 | 0] = 0; //@line 7614
 HEAP32[$sim + 4680 >> 2] = 0; //@line 7616
 $8 = $sim + 4684 | 0; //@line 7617
 _memset($sim + 4656 | 0, 0, 14); //@line 7619
 HEAP32[$8 >> 2] = 1; //@line 7620
 $10 = $sim + 4688 | 0; //@line 7621
 HEAP32[$10 >> 2] = 1; //@line 7622
 $11 = $sim + 4696 | 0; //@line 7623
 HEAP32[$11 >> 2] = 0; //@line 7624
 HEAP32[$sim + 4692 >> 2] = 0; //@line 7626
 _memset($sim + 4712 | 0, 0, 24); //@line 7630
 _bps_init($sim + 28 | 0); //@line 7631
 $17 = _ini_next_sct($ini, 0, 57648) | 0; //@line 7633
 _ini_get_string(($17 | 0) == 0 ? $ini : $17, 35104, $model_i, 57584) | 0; //@line 7636
 _pce_log_tag(2, 57552, 57496, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP32[$model_i >> 2], tempInt) | 0); //@line 7638
 $21 = HEAP32[$model_i >> 2] | 0; //@line 7639
 do {
  if ((_strcmp($21 | 0, 57584) | 0) == 0) {
   HEAP32[$sim >> 2] = 1; //@line 7646
  } else {
   if ((_strcmp($21 | 0, 57440) | 0) == 0) {
    HEAP32[$sim >> 2] = 2; //@line 7654
    break;
   }
   if ((_strcmp($21 | 0, 57392) | 0) == 0) {
    HEAP32[$sim >> 2] = 4; //@line 7663
    break;
   } else {
    _pce_log(0, 57328, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $21, tempInt) | 0); //@line 7667
    HEAP32[$sim >> 2] = 1; //@line 7669
    break;
   }
  }
 } while (0);
 $39 = _mem_new() | 0; //@line 7675
 $40 = $sim + 8 | 0; //@line 7676
 HEAP32[$40 >> 2] = $39; //@line 7677
 $41 = $sim; //@line 7678
 _mem_set_fct($39, $41, 24, 2, 18, 4, 38, 10); //@line 7679
 $43 = $sim + 12 | 0; //@line 7681
 _ini_get_ram(HEAP32[$40 >> 2] | 0, $ini, $43) | 0; //@line 7682
 _ini_get_rom(HEAP32[$40 >> 2] | 0, $ini) | 0; //@line 7684
 HEAP32[$43 >> 2] = _mem_get_blk(HEAP32[$40 >> 2] | 0, 0) | 0; //@line 7687
 $50 = _mem_get_blk(HEAP32[$40 >> 2] | 0, 4194304) | 0; //@line 7689
 $51 = $sim + 16 | 0; //@line 7690
 HEAP32[$51 >> 2] = $50; //@line 7691
 $52 = $sim + 20 | 0; //@line 7692
 HEAP32[$52 >> 2] = 0; //@line 7693
 $53 = $sim + 24 | 0; //@line 7694
 HEAP32[$53 >> 2] = 0; //@line 7695
 $54 = HEAP32[$43 >> 2] | 0; //@line 7696
 do {
  if (($54 | 0) == 0) {
   _pce_log(0, 30144, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 7701
  } else {
   if (($50 | 0) == 0) {
    _pce_log(0, 58120, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 7707
    break;
   }
   $61 = _mem_blk_clone($54) | 0; //@line 7711
   HEAP32[$52 >> 2] = $61; //@line 7712
   _mem_blk_set_addr($61, 6291456); //@line 7713
   if ((_mem_blk_get_size(HEAP32[$52 >> 2] | 0) | 0) >>> 0 > 2097152) {
    _mem_blk_set_size(HEAP32[$52 >> 2] | 0, 2097152); //@line 7720
   }
   $69 = _mem_blk_clone(HEAP32[$51 >> 2] | 0) | 0; //@line 7724
   HEAP32[$53 >> 2] = $69; //@line 7725
   _mem_blk_set_addr($69, 0); //@line 7726
   HEAP32[$sim + 4628 >> 2] = 0; //@line 7728
   _ini_get_bool($ini, 58072, $memtest_i, 1) | 0; //@line 7729
   if ((HEAP32[$memtest_i >> 2] | 0) != 0) {
    break;
   }
   _pce_log_tag(2, 57880, 57744, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 7736
   $76 = HEAP32[$sim >> 2] | 0; //@line 7738
   if (($76 & 1 | 0) != 0) {
    _mem_set_uint32_be(HEAP32[$40 >> 2] | 0, 686, 4194304); //@line 7744
    break;
   }
   if (($76 & 6 | 0) == 0) {
    break;
   }
   _mem_set_uint32_be(HEAP32[$40 >> 2] | 0, 3324, 1464619843); //@line 7755
  }
 } while (0);
 $88 = _ini_next_sct($ini, 0, 30440) | 0; //@line 7761
 _ini_get_string($88, 35104, $model_i59, 43472) | 0; //@line 7762
 _ini_get_uint16($88, 30392, $speed_i, 0) | 0; //@line 7763
 $92 = HEAP32[$speed_i >> 2] | 0; //@line 7765
 _pce_log_tag(2, 30352, 30288, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = HEAP32[$model_i59 >> 2], HEAP32[tempInt + 8 >> 2] = $92, tempInt) | 0); //@line 7766
 $93 = _e68_new() | 0; //@line 7767
 $94 = $sim + 4 | 0; //@line 7768
 HEAP32[$94 >> 2] = $93; //@line 7769
 if (($93 | 0) != 0) {
  if ((_mac_set_cpu_model($sim, HEAP32[$model_i59 >> 2] | 0) | 0) != 0) {
   _pce_log(0, 30208, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP32[$model_i59 >> 2], tempInt) | 0); //@line 7779
  }
  _e68_set_mem_fct(HEAP32[$94 >> 2] | 0, HEAP32[$40 >> 2] | 0, 26, 12, 22, 12, 22, 16); //@line 7785
  _e68_set_reset_fct(HEAP32[$94 >> 2] | 0, $41, 184); //@line 7787
  _e68_set_hook_fct(HEAP32[$94 >> 2] | 0, $41, 36); //@line 7789
  _e68_set_address_check(HEAP32[$94 >> 2] | 0, 0); //@line 7791
  $109 = HEAP32[$speed_i >> 2] | 0; //@line 7792
  HEAP32[$8 >> 2] = $109; //@line 7793
  HEAP32[$10 >> 2] = $109; //@line 7794
 }
 $112 = _ini_next_sct($ini, 0, 31136) | 0; //@line 7799
 _ini_get_uint32($112, 58056, $addr_i, 15720448) | 0; //@line 7800
 _ini_get_uint32($112, 45112, $size_i, 8192) | 0; //@line 7801
 $116 = HEAP32[$size_i >> 2] | 0; //@line 7803
 _pce_log_tag(2, 31096, 44440, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = HEAP32[$addr_i >> 2], HEAP32[tempInt + 8 >> 2] = $116, tempInt) | 0); //@line 7804
 $117 = $sim + 36 | 0; //@line 7805
 _e6522_init($117, 9); //@line 7806
 _e6522_set_irq_fct($117, $41, 238); //@line 7807
 _e6522_set_ora_fct($117, $41, 288); //@line 7808
 _e6522_set_orb_fct($117, $41, 290); //@line 7809
 $120 = _mem_blk_new(HEAP32[$addr_i >> 2] | 0, HEAP32[$size_i >> 2] | 0, 0) | 0; //@line 7812
 if (($120 | 0) != 0) {
  _mem_blk_set_fct($120, $117, 4, 32, 10, 24, 2, 18); //@line 7817
  _mem_add_blk(HEAP32[$40 >> 2] | 0, $120, 1); //@line 7819
 }
 $127 = _ini_next_sct($ini, 0, 31216) | 0; //@line 7824
 _ini_get_uint32($127, 58056, $addr_i60, 8388608) | 0; //@line 7825
 _ini_get_uint32($127, 45112, $size_i61, 4194304) | 0; //@line 7826
 $131 = HEAP32[$size_i61 >> 2] | 0; //@line 7828
 _pce_log_tag(2, 31184, 44440, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = HEAP32[$addr_i60 >> 2], HEAP32[tempInt + 8 >> 2] = $131, tempInt) | 0); //@line 7829
 $132 = $sim + 128 | 0; //@line 7830
 _e8530_init($132); //@line 7831
 _e8530_set_irq_fct($132, $41, 46); //@line 7832
 _e8530_set_clock($132, 3672e3, 3672e3, 3672e3); //@line 7833
 $135 = _mem_blk_new(HEAP32[$addr_i60 >> 2] | 0, HEAP32[$size_i61 >> 2] | 0, 0) | 0; //@line 7836
 if (($135 | 0) != 0) {
  _mem_blk_set_fct($135, $41, 30, 0, 0, 28, 0, 0); //@line 7840
  _mem_add_blk(HEAP32[$40 >> 2] | 0, $135, 1); //@line 7842
 }
 $142 = $sim + 3488 | 0; //@line 7848
 _mac_ser_init($142); //@line 7849
 _mac_ser_set_scc($142, $132, 0); //@line 7850
 $143 = $sim + 4056 | 0; //@line 7851
 _mac_ser_init($143); //@line 7852
 _mac_ser_set_scc($143, $132, 1); //@line 7853
 $144 = _ini_next_sct($ini, 0, 32040) | 0; //@line 7854
 if (($144 | 0) != 0) {
  $sct_014_i = $144; //@line 7858
  do {
   _ini_get_uint16($sct_014_i, 31912, $port_i, 0) | 0; //@line 7861
   _ini_get_uint16($sct_014_i, 31864, $multichar_i, 1) | 0; //@line 7862
   _ini_get_string($sct_014_i, 49552, $driver_i, 0) | 0; //@line 7863
   $150 = HEAP32[$multichar_i >> 2] | 0; //@line 7865
   $151 = HEAP32[$driver_i >> 2] | 0; //@line 7866
   _pce_log_tag(2, 31656, 31512, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = HEAP32[$port_i >> 2], HEAP32[tempInt + 8 >> 2] = $150, HEAP32[tempInt + 16 >> 2] = ($151 | 0) != 0 ? $151 : 48288, tempInt) | 0); //@line 7869
   $sct_014_i = _ini_next_sct($ini, $sct_014_i, 32040) | 0; //@line 7870
   $155 = HEAP32[$port_i >> 2] | 0; //@line 7871
   do {
    if ($155 >>> 0 > 1) {
     _pce_log(0, 31360, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $155, tempInt) | 0); //@line 7876
    } else {
     $160 = HEAP32[$multichar_i >> 2] | 0; //@line 7879
     _e8530_set_multichar($132, $155, $160, $160); //@line 7880
     $161 = HEAP32[$driver_i >> 2] | 0; //@line 7881
     if (($161 | 0) == 0) {
      break;
     }
     if ((_mac_ser_set_driver($sim + 3488 + ((HEAP32[$port_i >> 2] | 0) * 568 | 0) | 0, $161) | 0) == 0) {
      break;
     }
     _pce_log(0, 31288, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP32[$driver_i >> 2], tempInt) | 0); //@line 7896
    }
   } while (0);
  } while (($sct_014_i | 0) != 0);
 }
 $174 = _ini_next_sct($ini, 0, 34016) | 0; //@line 7913
 _ini_get_string($174, 40280, $fname_i, 33784) | 0; //@line 7914
 _ini_get_bool($174, 33360, $realtime_i, 1) | 0; //@line 7915
 _ini_get_bool($174, 32976, $romdisk_i, 0) | 0; //@line 7916
 _ini_get_string($174, 32664, $start_i, 0) | 0; //@line 7917
 $180 = HEAP32[$realtime_i >> 2] | 0; //@line 7919
 $181 = HEAP32[$start_i >> 2] | 0; //@line 7920
 $184 = HEAP32[$romdisk_i >> 2] | 0; //@line 7923
 _pce_log_tag(2, 32528, 32336, (tempInt = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempInt >> 2] = HEAP32[$fname_i >> 2], HEAP32[tempInt + 8 >> 2] = $180, HEAP32[tempInt + 16 >> 2] = ($181 | 0) != 0 ? $181 : 32224, HEAP32[tempInt + 24 >> 2] = $184, tempInt) | 0); //@line 7924
 HEAP32[$sim + 4672 >> 2] = _strdup(HEAP32[$fname_i >> 2] | 0) | 0; //@line 7928
 $188 = $sim + 1428 | 0; //@line 7929
 _mac_rtc_init($188); //@line 7930
 _mac_rtc_set_data_fct($188, $41, 98); //@line 7931
 _mac_rtc_set_osi_fct($188, $41, 118); //@line 7932
 _mac_rtc_set_realtime($188, HEAP32[$realtime_i >> 2] | 0); //@line 7934
 if ((_mac_rtc_load_file($188, HEAP32[$fname_i >> 2] | 0) | 0) != 0) {
  _pce_log(0, 32096, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 7940
 }
 if ((HEAP32[$romdisk_i >> 2] | 0) != 0) {
  HEAP8[$sim + 1548 | 0] = 0; //@line 7948
  HEAP8[$sim + 1549 | 0] = 6; //@line 7950
  HEAP8[$sim + 1550 | 0] = -1; //@line 7952
  HEAP8[$sim + 1551 | 0] = -53; //@line 7954
 }
 $203 = HEAP32[$start_i >> 2] | 0; //@line 7957
 if (($203 | 0) == 0) {
  _mac_rtc_set_time($188, 0, 1); //@line 7961
 } else {
  _mac_rtc_set_time_str($188, $203); //@line 7963
 }
 $210 = $sim + 1744 | 0; //@line 7969
 HEAP32[$210 >> 2] = 0; //@line 7970
 $211 = $sim | 0; //@line 7971
 do {
  if ((HEAP32[$211 >> 2] & 1 | 0) != 0) {
   $216 = _ini_next_sct($ini, 0, 37792) | 0; //@line 7978
   _ini_get_uint16($216, 35104, $model_i62, 1) | 0; //@line 7979
   _ini_get_bool($216, 34856, $intl_i, 0) | 0; //@line 7980
   _ini_get_bool($216, 37544, $motion_i, 0) | 0; //@line 7981
   $221 = HEAP32[$intl_i >> 2] | 0; //@line 7983
   $224 = (HEAP32[$motion_i >> 2] | 0) != 0 ? 35680 : 35400; //@line 7986
   _pce_log_tag(2, 34616, 34304, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = HEAP32[$model_i62 >> 2], HEAP32[tempInt + 8 >> 2] = $221, HEAP32[tempInt + 16 >> 2] = $224, tempInt) | 0); //@line 7987
   $225 = _mac_kbd_new() | 0; //@line 7988
   HEAP32[$210 >> 2] = $225; //@line 7989
   if (($225 | 0) == 0) {
    break;
   }
   $228 = HEAP32[$model_i62 >> 2] | 0; //@line 7995
   $229 = HEAP32[$intl_i >> 2] | 0; //@line 7996
   _mac_kbd_set_model($225, $228, $229) | 0; //@line 7997
   _mac_kbd_set_keypad_mode(HEAP32[$210 >> 2] | 0, HEAP32[$motion_i >> 2] | 0); //@line 8000
   _mac_kbd_set_data_fct(HEAP32[$210 >> 2] | 0, $117, 332); //@line 8003
   _mac_kbd_set_intr_fct(HEAP32[$210 >> 2] | 0, $41, 20); //@line 8005
   _e6522_set_shift_out_fct($117, HEAP32[$210 >> 2] | 0, 142); //@line 8008
   _e6522_set_cb2_fct($117, HEAP32[$210 >> 2] | 0, 168); //@line 8011
  }
 } while (0);
 $243 = $sim + 1748 | 0; //@line 8018
 HEAP32[$243 >> 2] = 0; //@line 8019
 $244 = $sim + 1756 | 0; //@line 8020
 HEAP32[$244 >> 2] = 0; //@line 8021
 $245 = $sim + 1752 | 0; //@line 8022
 HEAP32[$245 >> 2] = 0; //@line 8023
 do {
  if ((HEAP32[$211 >> 2] & 6 | 0) != 0) {
   $250 = _ini_next_sct($ini, 0, 38328) | 0; //@line 8030
   _ini_get_bool($250, 38016, $mouse_i, 1) | 0; //@line 8031
   _ini_get_bool($250, 37792, $keyboard_i, 1) | 0; //@line 8032
   _ini_get_bool($250, 37544, $motion_i63, 0) | 0; //@line 8033
   _pce_log_tag(2, 37264, 37032, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 8034
   $254 = _mac_adb_new() | 0; //@line 8035
   HEAP32[$243 >> 2] = $254; //@line 8036
   if (($254 | 0) == 0) {
    _pce_log(0, 36824, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 8040
    break;
   }
   $258 = $117; //@line 8044
   _adb_set_shift_in_fct($254, $258, 252); //@line 8045
   _adb_set_shift_out_fct(HEAP32[$243 >> 2] | 0, $258, 18); //@line 8047
   _adb_set_int_fct(HEAP32[$243 >> 2] | 0, $41, 204); //@line 8049
   do {
    if ((HEAP32[$mouse_i >> 2] | 0) != 0) {
     _pce_log_tag(2, 37264, 36280, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 8055
     $264 = _adb_mouse_new() | 0; //@line 8056
     HEAP32[$244 >> 2] = $264; //@line 8057
     if (($264 | 0) == 0) {
      break;
     }
     $267 = HEAP32[$243 >> 2] | 0; //@line 8063
     $268 = $264 | 0; //@line 8064
     _adb_add_device($267, $268) | 0; //@line 8065
    }
   } while (0);
   if ((HEAP32[$keyboard_i >> 2] | 0) == 0) {
    break;
   }
   _pce_log_tag(2, 37264, 35992, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAP32[$motion_i63 >> 2] | 0) != 0 ? 35680 : 35400, tempInt) | 0); //@line 8078
   $277 = _adb_kbd_new() | 0; //@line 8079
   HEAP32[$245 >> 2] = $277; //@line 8080
   if (($277 | 0) == 0) {
    break;
   }
   _adb_kbd_set_keypad_mode($277, HEAP32[$motion_i63 >> 2] | 0); //@line 8087
   $281 = HEAP32[$243 >> 2] | 0; //@line 8088
   $283 = HEAP32[$245 >> 2] | 0; //@line 8090
   _adb_add_device($281, $283) | 0; //@line 8091
  }
 } while (0);
 $286 = $sim + 3484 | 0; //@line 8096
 HEAP32[$286 >> 2] = _ini_get_disks($ini) | 0; //@line 8097
 $294 = _ini_next_sct($ini, 0, 41264) | 0; //@line 8105
 $295 = $sim + 1760 | 0; //@line 8106
 _mac_iwm_init($295); //@line 8107
 _mac_iwm_set_motor_fct($295, $41, 222); //@line 8108
 _mac_iwm_set_disks($295, HEAP32[$286 >> 2] | 0); //@line 8110
 _pce_log_tag(2, 41048, 40808, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = 13631488, tempInt) | 0); //@line 8111
 $297 = _ini_next_sct($294, 0, 43592) | 0; //@line 8112
 if (($297 | 0) != 0) {
  $n_021_i = 0;
  $sctdev_022_i = $297;
  do {
   _ini_get_uint16($sctdev_022_i, 43592, $drive_i, $n_021_i) | 0; //@line 8120
   _ini_get_uint16($sctdev_022_i, 40584, $disk_i, HEAP32[$drive_i >> 2] | 0) | 0; //@line 8122
   _ini_get_string($sctdev_022_i, 40280, $fname_i64, 0) | 0; //@line 8123
   _ini_get_bool($sctdev_022_i, 40016, $single_i, 0) | 0; //@line 8124
   _ini_get_bool($sctdev_022_i, 39784, $locked_i, 0) | 0; //@line 8125
   _ini_get_bool($sctdev_022_i, 39232, $inserted_i, 0) | 0; //@line 8126
   _ini_get_bool($sctdev_022_i, 38944, $rotate_i, 0) | 0; //@line 8127
   $310 = (HEAP32[$single_i >> 2] | 0) != 0 ? 400 : 800; //@line 8131
   $311 = HEAP32[$locked_i >> 2] | 0; //@line 8132
   $312 = HEAP32[$rotate_i >> 2] | 0; //@line 8133
   $313 = HEAP32[$disk_i >> 2] | 0; //@line 8134
   $314 = HEAP32[$fname_i64 >> 2] | 0; //@line 8135
   _pce_log_tag(2, 41048, 38576, (tempInt = STACKTOP, STACKTOP = STACKTOP + 48 | 0, HEAP32[tempInt >> 2] = HEAP32[$drive_i >> 2], HEAP32[tempInt + 8 >> 2] = $310, HEAP32[tempInt + 16 >> 2] = $311, HEAP32[tempInt + 24 >> 2] = $312, HEAP32[tempInt + 32 >> 2] = $313, HEAP32[tempInt + 40 >> 2] = ($314 | 0) != 0 ? $314 : 48288, tempInt) | 0); //@line 8138
   _mac_iwm_set_heads($295, (HEAP32[$drive_i >> 2] | 0) - 1 | 0, (HEAP32[$single_i >> 2] | 0) != 0 ? 1 : 2) | 0; //@line 8144
   _mac_iwm_set_disk_id($295, (HEAP32[$drive_i >> 2] | 0) - 1 | 0, HEAP32[$disk_i >> 2] | 0); //@line 8148
   _mac_iwm_set_fname($295, (HEAP32[$drive_i >> 2] | 0) - 1 | 0, HEAP32[$fname_i64 >> 2] | 0); //@line 8152
   _mac_iwm_set_locked($295, (HEAP32[$drive_i >> 2] | 0) - 1 | 0, HEAP32[$locked_i >> 2] | 0); //@line 8156
   _mac_iwm_set_auto_rotate($295, (HEAP32[$drive_i >> 2] | 0) - 1 | 0, HEAP32[$rotate_i >> 2] | 0); //@line 8160
   if ((HEAP32[$inserted_i >> 2] | 0) != 0) {
    _mac_iwm_insert($295, (HEAP32[$drive_i >> 2] | 0) - 1 | 0); //@line 8167
   }
   $n_021_i = (HEAP32[$drive_i >> 2] | 0) + 1 | 0; //@line 8171
   $sctdev_022_i = _ini_next_sct($294, $sctdev_022_i, 43592) | 0; //@line 8172
  } while (($sctdev_022_i | 0) != 0);
 }
 $351 = _ini_next_sct($ini, 0, 45448) | 0; //@line 8188
 do {
  if (($351 | 0) != 0) {
   _ini_get_uint32($351, 58056, $addr_i66, 5767168) | 0; //@line 8193
   _ini_get_uint32($351, 45112, $size_i67, 524288) | 0; //@line 8194
   $357 = HEAP32[$size_i67 >> 2] | 0; //@line 8196
   _pce_log_tag(2, 44792, 44440, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = HEAP32[$addr_i66 >> 2], HEAP32[tempInt + 8 >> 2] = $357, tempInt) | 0); //@line 8197
   $358 = $sim + 2088 | 0; //@line 8198
   _mac_scsi_init($358); //@line 8199
   _mac_scsi_set_disks($358, HEAP32[$286 >> 2] | 0); //@line 8201
   $362 = _mem_blk_new(HEAP32[$addr_i66 >> 2] | 0, HEAP32[$size_i67 >> 2] | 0, 0) | 0; //@line 8204
   if (($362 | 0) == 0) {
    break;
   }
   _mem_blk_set_fct($362, $358, 28, 8, 0, 36, 30, 0); //@line 8211
   _mem_add_blk(HEAP32[$40 >> 2] | 0, $362, 1); //@line 8213
   $367 = _ini_next_sct($351, 0, 44136) | 0; //@line 8214
   if (($367 | 0) == 0) {
    break;
   } else {
    $sctdev_020_i = $367; //@line 8220
   }
   do {
    _ini_get_uint16($sctdev_020_i, 43840, $id_i, 0) | 0; //@line 8224
    _ini_get_uint16($sctdev_020_i, 43592, $drive_i68, 0) | 0; //@line 8225
    _ini_get_string($sctdev_020_i, 43224, $vendor_i, 42928) | 0; //@line 8226
    _ini_get_string($sctdev_020_i, 42304, $product_i, 41960) | 0; //@line 8227
    $374 = HEAP32[$drive_i68 >> 2] | 0; //@line 8229
    $375 = HEAP32[$vendor_i >> 2] | 0; //@line 8230
    $376 = HEAP32[$product_i >> 2] | 0; //@line 8231
    _pce_log_tag(2, 44792, 41584, (tempInt = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempInt >> 2] = HEAP32[$id_i >> 2], HEAP32[tempInt + 8 >> 2] = $374, HEAP32[tempInt + 16 >> 2] = $375, HEAP32[tempInt + 24 >> 2] = $376, tempInt) | 0); //@line 8232
    _mac_scsi_set_drive($358, HEAP32[$id_i >> 2] | 0, HEAP32[$drive_i68 >> 2] | 0); //@line 8235
    _mac_scsi_set_drive_vendor($358, HEAP32[$id_i >> 2] | 0, HEAP32[$vendor_i >> 2] | 0); //@line 8238
    _mac_scsi_set_drive_product($358, HEAP32[$id_i >> 2] | 0, HEAP32[$product_i >> 2] | 0); //@line 8241
    $sctdev_020_i = _ini_next_sct($351, $sctdev_020_i, 44136) | 0; //@line 8242
   } while (($sctdev_020_i | 0) != 0);
  }
 } while (0);
 $386 = $var_i | 0; //@line 8254
 $389 = _ini_next_sct($ini, 0, 47624) | 0; //@line 8257
 _ini_get_uint16($389, 47304, $def_i, 30) | 0; //@line 8258
 _ini_get_bool($389, 47024, $format_hd_as_dd_i, 0) | 0; //@line 8259
 $392 = $sim + 2424 | 0; //@line 8260
 _mac_sony_init($392, ($389 | 0) != 0 | 0); //@line 8263
 _mac_sony_set_mem($392, HEAP32[$40 >> 2] | 0); //@line 8265
 _mac_sony_set_disks($392, HEAP32[$286 >> 2] | 0); //@line 8267
 HEAP8[$sim + 2484 | 0] = HEAP32[$format_hd_as_dd_i >> 2] & 255; //@line 8271
 if (($389 | 0) != 0) {
  if ((HEAP32[15668] & 1 | 0) == 0) {
   _sprintf($386 | 0, 46720, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = 1, tempInt) | 0) | 0; //@line 8280
   $408 = HEAP32[$def_i >> 2] | 0; //@line 8281
   _ini_get_uint16($389, $386, $val_i, $408) | 0; //@line 8282
   $411 = HEAP32[$val_i >> 2] | 0; //@line 8284
  } else {
   $405 = HEAP32[15670] | 0; //@line 8286
   HEAP32[$val_i >> 2] = $405; //@line 8287
   $411 = $405; //@line 8289
  }
  _mac_sony_set_delay($392, 0, $411); //@line 8292
  $412 = HEAP32[$val_i >> 2] | 0; //@line 8293
  _pce_log_tag(2, 46464, 45776, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 1, HEAP32[tempInt + 8 >> 2] = $412, tempInt) | 0); //@line 8294
  if ((HEAP32[15668] & 2 | 0) == 0) {
   _sprintf($386 | 0, 46720, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = 2, tempInt) | 0) | 0; //@line 8300
   $420 = HEAP32[$def_i >> 2] | 0; //@line 8301
   _ini_get_uint16($389, $386, $val_i, $420) | 0; //@line 8302
   $423 = HEAP32[$val_i >> 2] | 0; //@line 8304
  } else {
   $417 = HEAP32[15671] | 0; //@line 8306
   HEAP32[$val_i >> 2] = $417; //@line 8307
   $423 = $417; //@line 8309
  }
  _mac_sony_set_delay($392, 1, $423); //@line 8312
  $424 = HEAP32[$val_i >> 2] | 0; //@line 8313
  _pce_log_tag(2, 46464, 45776, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 2, HEAP32[tempInt + 8 >> 2] = $424, tempInt) | 0); //@line 8314
  if ((HEAP32[15668] & 4 | 0) == 0) {
   _sprintf($386 | 0, 46720, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = 3, tempInt) | 0) | 0; //@line 8320
   $432 = HEAP32[$def_i >> 2] | 0; //@line 8321
   _ini_get_uint16($389, $386, $val_i, $432) | 0; //@line 8322
   $435 = HEAP32[$val_i >> 2] | 0; //@line 8324
  } else {
   $429 = HEAP32[15672] | 0; //@line 8326
   HEAP32[$val_i >> 2] = $429; //@line 8327
   $435 = $429; //@line 8329
  }
  _mac_sony_set_delay($392, 2, $435); //@line 8332
  $436 = HEAP32[$val_i >> 2] | 0; //@line 8333
  _pce_log_tag(2, 46464, 45776, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 3, HEAP32[tempInt + 8 >> 2] = $436, tempInt) | 0); //@line 8334
  if ((HEAP32[15668] & 8 | 0) == 0) {
   _sprintf($386 | 0, 46720, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = 4, tempInt) | 0) | 0; //@line 8340
   $444 = HEAP32[$def_i >> 2] | 0; //@line 8341
   _ini_get_uint16($389, $386, $val_i, $444) | 0; //@line 8342
   $446 = HEAP32[$val_i >> 2] | 0; //@line 8344
  } else {
   $441 = HEAP32[15673] | 0; //@line 8346
   HEAP32[$val_i >> 2] = $441; //@line 8347
   $446 = $441; //@line 8349
  }
  _mac_sony_set_delay($392, 3, $446); //@line 8352
  $447 = HEAP32[$val_i >> 2] | 0; //@line 8353
  _pce_log_tag(2, 46464, 45776, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 4, HEAP32[tempInt + 8 >> 2] = $447, tempInt) | 0); //@line 8354
 }
 $451 = $sim + 2644 | 0; //@line 8359
 _mac_sound_init($451); //@line 8360
 do {
  if ((HEAP32[$43 >> 2] | 0) != 0) {
   $455 = _ini_next_sct($ini, 0, 50816) | 0; //@line 8366
   $457 = _mem_blk_get_size(HEAP32[$43 >> 2] | 0) | 0; //@line 8368
   $__i = $457 >>> 0 < 768 ? 0 : $457 - 768 | 0; //@line 8371
   HEAP32[$addr_i70 >> 2] = $__i; //@line 8372
   _ini_get_uint32($455, 58056, $addr_i70, $__i) | 0; //@line 8373
   _ini_get_uint32($455, 50496, $freq_i, 6e3) | 0; //@line 8374
   _ini_get_string($455, 49552, $driver_i71, 0) | 0; //@line 8375
   $464 = HEAP32[$freq_i >> 2] | 0; //@line 8377
   $465 = HEAP32[$driver_i71 >> 2] | 0; //@line 8378
   _pce_log_tag(2, 49072, 48680, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = HEAP32[$addr_i70 >> 2], HEAP32[tempInt + 8 >> 2] = $464, HEAP32[tempInt + 16 >> 2] = ($465 | 0) != 0 ? $465 : 48288, tempInt) | 0); //@line 8381
   $468 = HEAP32[$addr_i70 >> 2] | 0; //@line 8382
   $469 = $sim + 4644 | 0; //@line 8383
   HEAP32[$469 >> 2] = $468; //@line 8384
   HEAP32[$sim + 4648 >> 2] = $468 - 23552; //@line 8387
   $473 = _mem_blk_get_data(HEAP32[$43 >> 2] | 0) | 0; //@line 8389
   _mac_sound_set_sbuf($451, $473 + (HEAP32[$469 >> 2] | 0) | 0); //@line 8392
   _mac_sound_set_lowpass($451, HEAP32[$freq_i >> 2] | 0); //@line 8394
   $477 = HEAP32[$driver_i71 >> 2] | 0; //@line 8395
   if (($477 | 0) == 0) {
    break;
   }
   if ((_mac_sound_set_driver($451, $477) | 0) == 0) {
    break;
   }
   _pce_log(0, 47896, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP32[$driver_i71 >> 2], tempInt) | 0); //@line 8408
  }
 } while (0);
 $485 = _ini_get_terminal($ini, HEAP32[15586] | 0) | 0; //@line 8413
 HEAP32[$1 >> 2] = $485; //@line 8414
 if (($485 | 0) != 0) {
  _trm_set_msg_fct($485, $41, 70); //@line 8418
  _trm_set_key_fct(HEAP32[$1 >> 2] | 0, $41, 32); //@line 8420
  _trm_set_mouse_fct(HEAP32[$1 >> 2] | 0, $41, 4); //@line 8422
 }
 if ((HEAP32[$43 >> 2] | 0) == 0) {
  $560 = HEAP32[$40 >> 2] | 0; //@line 8435
  $561 = _pce_load_mem_ini($560, $ini) | 0; //@line 8436
  $562 = HEAP32[$1 >> 2] | 0; //@line 8437
  $563 = _trm_set_msg_trm($562, 30944, 51240) | 0; //@line 8438
  $564 = $sim + 4700 | 0; //@line 8439
  HEAP32[$564 >> 2] = 0; //@line 8440
  $565 = $sim + 4704 | 0; //@line 8441
  HEAP32[$565 >> 2] = 0; //@line 8442
  $566 = _pce_get_interval_us($565) | 0; //@line 8443
  HEAP32[$11 >> 2] = 0; //@line 8444
  STACKTOP = sp; //@line 8445
  return;
 }
 $499 = _ini_next_sct($ini, 0, 30936) | 0; //@line 8448
 $501 = _mem_blk_get_size(HEAP32[$43 >> 2] | 0) | 0; //@line 8450
 $__i72 = $501 >>> 0 < 22784 ? 0 : $501 - 22784 | 0; //@line 8453
 _ini_get_uint32($499, 58056, $addr2_i, $__i72) | 0; //@line 8454
 _ini_get_uint16($499, 57264, $w_i, 512) | 0; //@line 8455
 _ini_get_uint16($499, 56072, $h_i, 342) | 0; //@line 8456
 _ini_get_uint32($499, 55304, $col0_i, 0) | 0; //@line 8457
 _ini_get_uint32($499, 54640, $col1_i, 16777215) | 0; //@line 8458
 _ini_get_uint16($499, 53944, $bright_i, 1e3) | 0; //@line 8459
 $511 = HEAP32[$w_i >> 2] | 0; //@line 8461
 $512 = HEAP32[$h_i >> 2] | 0; //@line 8462
 $514 = ((HEAP32[$bright_i >> 2] | 0) >>> 0) / 10 | 0; //@line 8464
 _pce_log_tag(2, 53376, 52488, (tempInt = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempInt >> 2] = HEAP32[$addr2_i >> 2], HEAP32[tempInt + 8 >> 2] = $511, HEAP32[tempInt + 16 >> 2] = $512, HEAP32[tempInt + 24 >> 2] = $514, tempInt) | 0); //@line 8465
 $515 = HEAP32[$addr2_i >> 2] | 0; //@line 8466
 $516 = $sim + 4636 | 0; //@line 8467
 HEAP32[$516 >> 2] = $515; //@line 8468
 if (($__i72 | 0) == ($515 | 0) & $515 >>> 0 > 32767) {
  HEAP32[$sim + 4640 >> 2] = $__i72 - 32768; //@line 8476
 } else {
  HEAP32[$sim + 4640 >> 2] = $515; //@line 8480
 }
 $527 = _mac_video_new(HEAP32[$w_i >> 2] | 0, HEAP32[$h_i >> 2] | 0) | 0; //@line 8484
 HEAP32[$2 >> 2] = $527; //@line 8485
 if (($527 | 0) == 0) {
  $560 = HEAP32[$40 >> 2] | 0; //@line 8489
  $561 = _pce_load_mem_ini($560, $ini) | 0; //@line 8490
  $562 = HEAP32[$1 >> 2] | 0; //@line 8491
  $563 = _trm_set_msg_trm($562, 30944, 51240) | 0; //@line 8492
  $564 = $sim + 4700 | 0; //@line 8493
  HEAP32[$564 >> 2] = 0; //@line 8494
  $565 = $sim + 4704 | 0; //@line 8495
  HEAP32[$565 >> 2] = 0; //@line 8496
  $566 = _pce_get_interval_us($565) | 0; //@line 8497
  HEAP32[$11 >> 2] = 0; //@line 8498
  STACKTOP = sp; //@line 8499
  return;
 }
 _mac_video_set_vbi_fct($527, $41, 246); //@line 8502
 _mac_set_vbuf($sim, HEAP32[$516 >> 2] | 0); //@line 8504
 $531 = HEAP32[$1 >> 2] | 0; //@line 8505
 if (($531 | 0) != 0) {
  _mac_video_set_terminal(HEAP32[$2 >> 2] | 0, $531); //@line 8510
  $535 = HEAP32[$1 >> 2] | 0; //@line 8511
  _trm_open($535, 512, 342) | 0; //@line 8512
 }
 _mac_video_set_color(HEAP32[$2 >> 2] | 0, HEAP32[$col0_i >> 2] | 0, HEAP32[$col1_i >> 2] | 0); //@line 8518
 _mac_video_set_brightness(HEAP32[$2 >> 2] | 0, ((((HEAP32[$bright_i >> 2] | 0) * 255 | 0) + 500 | 0) >>> 0) / 1e3 | 0); //@line 8524
 if ((Math_imul((HEAP32[$w_i >> 2] | 0) >>> 3, HEAP32[$h_i >> 2] | 0) | 0) == 0) {
  $560 = HEAP32[$40 >> 2] | 0; //@line 8532
  $561 = _pce_load_mem_ini($560, $ini) | 0; //@line 8533
  $562 = HEAP32[$1 >> 2] | 0; //@line 8534
  $563 = _trm_set_msg_trm($562, 30944, 51240) | 0; //@line 8535
  $564 = $sim + 4700 | 0; //@line 8536
  HEAP32[$564 >> 2] = 0; //@line 8537
  $565 = $sim + 4704 | 0; //@line 8538
  HEAP32[$565 >> 2] = 0; //@line 8539
  $566 = _pce_get_interval_us($565) | 0; //@line 8540
  HEAP32[$11 >> 2] = 0; //@line 8541
  STACKTOP = sp; //@line 8542
  return;
 } else {
  $i_031_i = 0; //@line 8545
 }
 do {
  _mem_set_uint8(HEAP32[$40 >> 2] | 0, (HEAP32[$516 >> 2] | 0) + $i_031_i | 0, -1); //@line 8552
  $i_031_i = $i_031_i + 1 | 0; //@line 8553
 } while ($i_031_i >>> 0 < (Math_imul((HEAP32[$w_i >> 2] | 0) >>> 3, HEAP32[$h_i >> 2] | 0) | 0) >>> 0);
 $560 = HEAP32[$40 >> 2] | 0; //@line 8566
 $561 = _pce_load_mem_ini($560, $ini) | 0; //@line 8567
 $562 = HEAP32[$1 >> 2] | 0; //@line 8568
 $563 = _trm_set_msg_trm($562, 30944, 51240) | 0; //@line 8569
 $564 = $sim + 4700 | 0; //@line 8570
 HEAP32[$564 >> 2] = 0; //@line 8571
 $565 = $sim + 4704 | 0; //@line 8572
 HEAP32[$565 >> 2] = 0; //@line 8573
 $566 = _pce_get_interval_us($565) | 0; //@line 8574
 HEAP32[$11 >> 2] = 0; //@line 8575
 STACKTOP = sp; //@line 8576
 return;
}
function _mac_clock_discontinuity($sim) {
 $sim = $sim | 0;
 var $2 = 0;
 HEAP32[$sim + 4700 >> 2] = 0; //@line 8587
 $2 = $sim + 4704 | 0; //@line 8588
 HEAP32[$2 >> 2] = 0; //@line 8589
 _pce_get_interval_us($2) | 0; //@line 8590
 HEAP32[$sim + 4696 >> 2] = 0; //@line 8592
 return;
}
function _mac_new($ini) {
 $ini = $ini | 0;
 var $1 = 0, $2 = 0, $_0 = 0;
 $1 = _malloc(4736) | 0; //@line 8603
 $2 = $1; //@line 8604
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 8608
  return $_0 | 0; //@line 8611
 }
 _mac_init($2, $ini); //@line 8613
 $_0 = $2; //@line 8615
 return $_0 | 0; //@line 8618
}
function _mac_set_pause($sim, $pause) {
 $sim = $sim | 0;
 $pause = $pause | 0;
 var $1 = 0, $6 = 0;
 $1 = ($pause | 0) != 0; //@line 8628
 HEAP8[$sim + 4676 | 0] = $1 & 1; //@line 8631
 if ($1) {
  return;
 }
 HEAP32[$sim + 4700 >> 2] = 0; //@line 8638
 $6 = $sim + 4704 | 0; //@line 8639
 HEAP32[$6 >> 2] = 0; //@line 8640
 _pce_get_interval_us($6) | 0; //@line 8641
 HEAP32[$sim + 4696 >> 2] = 0; //@line 8643
 return;
}
function _mac_set_speed($sim, $idx, $factor) {
 $sim = $sim | 0;
 $idx = $idx | 0;
 $factor = $factor | 0;
 var $5 = 0, $7 = 0, $13 = 0, $15 = 0, $v_1_1_i = 0, $21 = 0, sp = 0;
 sp = STACKTOP; //@line 8658
 if ($idx >>> 0 > 1) {
  STACKTOP = sp; //@line 8662
  return;
 }
 HEAP32[$sim + 4688 + ($idx << 2) >> 2] = $factor; //@line 8666
 $5 = HEAP32[$sim + 4688 >> 2] | 0; //@line 8668
 $7 = HEAP32[$sim + 4692 >> 2] | 0; //@line 8670
 if (($7 | 0) == 0) {
  $v_1_1_i = $5; //@line 8674
 } else {
  $v_1_1_i = ($5 | 0) == 0 | $7 >>> 0 < $5 >>> 0 ? $7 : $5; //@line 8681
 }
 $21 = $sim + 4684 | 0; //@line 8684
 if (($v_1_1_i | 0) == (HEAP32[$21 >> 2] | 0)) {
  STACKTOP = sp; //@line 8689
  return;
 }
 _mac_log_deb(31040, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $v_1_1_i, tempInt) | 0); //@line 8692
 _mac_rtc_set_realtime($sim + 1428 | 0, ($v_1_1_i | 0) != 1 | 0); //@line 8696
 HEAP32[$21 >> 2] = $v_1_1_i; //@line 8697
 $13 = $sim + 4696 | 0; //@line 8698
 HEAP32[$13 >> 2] = 0; //@line 8699
 HEAP32[$sim + 4700 >> 2] = 0; //@line 8701
 $15 = $sim + 4704 | 0; //@line 8702
 HEAP32[$15 >> 2] = 0; //@line 8703
 _pce_get_interval_us($15) | 0; //@line 8704
 HEAP32[$13 >> 2] = 0; //@line 8705
 STACKTOP = sp; //@line 8707
 return;
}
function _mac_set_msg_trm($sim, $msg, $val) {
 $sim = $sim | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 var $2 = 0, $_0 = 0;
 $2 = HEAP32[$sim + 3480 >> 2] | 0; //@line 8720
 if (($2 | 0) == 0) {
  $_0 = 1; //@line 8724
  return $_0 | 0; //@line 8727
 }
 $_0 = _trm_set_msg_trm($2, $msg, $val) | 0; //@line 8731
 return $_0 | 0; //@line 8734
}
function _mac_set_cpu_model($sim, $model) {
 $sim = $sim | 0;
 $model = $model | 0;
 var $_0 = 0;
 if ((_strcmp($model | 0, 43472) | 0) == 0) {
  _e68_set_68000(HEAP32[$sim + 4 >> 2] | 0); //@line 8751
  $_0 = 0; //@line 8753
  return $_0 | 0; //@line 8756
 }
 if ((_strcmp($model | 0, 40176) | 0) == 0) {
  _e68_set_68010(HEAP32[$sim + 4 >> 2] | 0); //@line 8764
  $_0 = 0; //@line 8766
  return $_0 | 0; //@line 8769
 }
 if ((_strcmp($model | 0, 37176) | 0) != 0) {
  $_0 = 1; //@line 8775
  return $_0 | 0; //@line 8778
 }
 _e68_set_68020(HEAP32[$sim + 4 >> 2] | 0); //@line 8782
 $_0 = 0; //@line 8783
 return $_0 | 0; //@line 8786
}
function _mac_reset($sim) {
 $sim = $sim | 0;
 var $1 = 0, $14 = 0, $15 = 0, $22 = 0, $23 = 0, $24 = 0, $31 = 0, $49 = 0, $51 = 0, $58 = 0, $77 = 0, $79 = 0, $85 = 0, $92 = 0, sp = 0;
 sp = STACKTOP; //@line 8804
 $1 = $sim + 4632 | 0; //@line 8805
 if ((HEAP32[$1 >> 2] | 0) != 0) {
  STACKTOP = sp; //@line 8810
  return;
 }
 HEAP32[$1 >> 2] = 1; //@line 8813
 _mac_log_deb(34144, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 8814
 HEAP8[$sim + 4652 | 0] = 0; //@line 8817
 _memset($sim + 4656 | 0, 0, 14); //@line 8820
 do {
  if ((HEAP32[$sim >> 2] & 1 | 0) == 0) {
   _mac_set_overlay($sim, 0); //@line 8827
   $14 = $sim + 16 | 0; //@line 8828
   $15 = HEAP32[$14 >> 2] | 0; //@line 8829
   if (($15 | 0) == 0) {
    break;
   }
   if ((HEAP32[$15 + 40 >> 2] | 0) >>> 0 <= 7) {
    break;
   }
   $22 = $sim + 4 | 0; //@line 8842
   $23 = HEAP32[$22 >> 2] | 0; //@line 8843
   $24 = _mem_blk_get_uint32_be($15, 0) | 0; //@line 8844
   if ((HEAP32[$23 + 36 >> 2] | 0) >>> 0 > 3) {
    $31 = $23 + 32 | 0; //@line 8852
    HEAP8[HEAP32[$31 >> 2] | 0] = $24 >>> 24 & 255; //@line 8854
    HEAP8[(HEAP32[$31 >> 2] | 0) + 1 | 0] = $24 >>> 16 & 255; //@line 8859
    HEAP8[(HEAP32[$31 >> 2] | 0) + 2 | 0] = $24 >>> 8 & 255; //@line 8864
    HEAP8[(HEAP32[$31 >> 2] | 0) + 3 | 0] = $24 & 255; //@line 8868
   } else {
    FUNCTION_TABLE_viii[HEAP32[$23 + 28 >> 2] & 63](HEAP32[$23 + 4 >> 2] | 0, 0, $24); //@line 8875
   }
   $49 = HEAP32[$22 >> 2] | 0; //@line 8877
   $51 = _mem_blk_get_uint32_be(HEAP32[$14 >> 2] | 0, 4) | 0; //@line 8879
   if ((HEAP32[$49 + 36 >> 2] | 0) >>> 0 > 7) {
    $58 = $49 + 32 | 0; //@line 8887
    HEAP8[(HEAP32[$58 >> 2] | 0) + 4 | 0] = $51 >>> 24 & 255; //@line 8890
    HEAP8[(HEAP32[$58 >> 2] | 0) + 5 | 0] = $51 >>> 16 & 255; //@line 8895
    HEAP8[(HEAP32[$58 >> 2] | 0) + 6 | 0] = $51 >>> 8 & 255; //@line 8900
    HEAP8[(HEAP32[$58 >> 2] | 0) + 7 | 0] = $51 & 255; //@line 8904
    break;
   } else {
    FUNCTION_TABLE_viii[HEAP32[$49 + 28 >> 2] & 63](HEAP32[$49 + 4 >> 2] | 0, 4, $51); //@line 8912
    break;
   }
  } else {
   _mac_set_overlay($sim, 1); //@line 8916
  }
 } while (0);
 $77 = $sim + 36 | 0; //@line 8920
 _e6522_reset($77); //@line 8921
 HEAP8[$sim + 4624 | 0] = -9; //@line 8923
 $79 = $sim + 4625 | 0; //@line 8924
 HEAP8[$79] = -1; //@line 8925
 _e6522_set_ira_inp($77, -9); //@line 8926
 _e6522_set_irb_inp($77, HEAP8[$79] | 0); //@line 8928
 _mac_sony_reset($sim + 2424 | 0); //@line 8930
 _mac_scsi_reset($sim + 2088 | 0); //@line 8932
 _e8530_reset($sim + 128 | 0); //@line 8934
 $85 = HEAP32[$sim + 1748 >> 2] | 0; //@line 8936
 if (($85 | 0) != 0) {
  _adb_reset($85); //@line 8940
 }
 _e68_reset(HEAP32[$sim + 4 >> 2] | 0); //@line 8945
 HEAP32[$sim + 4700 >> 2] = 0; //@line 8947
 $92 = $sim + 4704 | 0; //@line 8948
 HEAP32[$92 >> 2] = 0; //@line 8949
 _pce_get_interval_us($92) | 0; //@line 8950
 HEAP32[$sim + 4696 >> 2] = 0; //@line 8952
 HEAP32[$1 >> 2] = 0; //@line 8953
 STACKTOP = sp; //@line 8955
 return;
}
function _mac_clock($sim, $n) {
 $sim = $sim | 0;
 $n = $n | 0;
 var $6 = 0, $_0 = 0, $10 = 0, $clkdiv_0 = 0, $cpuclk_0 = 0, $20 = 0, $22$0 = 0, $23 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $_lcssa51 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $_pre = 0, $46 = 0, $48 = 0, $58 = 0, $64 = 0, $66 = 0, $70 = 0, $77 = 0, $78 = 0, $81 = 0, $84 = 0, $85 = 0, $storemerge28_i = 0, $90 = 0, $95 = 0, $storemerge29_i = 0, $102 = 0, $103 = 0, $106 = 0, $109 = 0, $110 = 0, $storemerge_i = 0, $117 = 0, $120 = 0, $storemerge27_i = 0, $129 = 0, $131 = 0, $136 = 0, $140 = 0, $142 = 0, $145 = 0, $149 = 0, $151 = 0, $154 = 0, $155 = 0, $160 = 0, $161 = 0, $165 = 0, $166 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 8984
 if (($n | 0) == 0) {
  $6 = HEAP32[(HEAP32[$sim + 4 >> 2] | 0) + 372 >> 2] | 0; //@line 8991
  $_0 = ($6 | 0) == 0 ? 1 : $6; //@line 8995
 } else {
  $_0 = $n; //@line 8997
 }
 $10 = HEAP32[$sim + 4684 >> 2] | 0; //@line 9001
 if (($10 | 0) == 0) {
  $cpuclk_0 = (HEAP32[$sim + 4696 >> 2] | 0) + $_0 | 0;
  $clkdiv_0 = 1;
 } else {
  $cpuclk_0 = $_0;
  $clkdiv_0 = $10;
 }
 _e68_clock(HEAP32[$sim + 4 >> 2] | 0, $cpuclk_0); //@line 9017
 _mac_sound_clock($sim + 2644 | 0, $cpuclk_0); //@line 9019
 $20 = $sim + 4712 | 0; //@line 9022
 $22$0 = _i64Add(HEAP32[$20 >> 2] | 0, HEAP32[$20 + 4 >> 2] | 0, $_0, 0) | 0;
 HEAP32[$20 >> 2] = $22$0; //@line 9029
 HEAP32[$20 + 4 >> 2] = tempRet0; //@line 9031
 $23 = $sim + 4720 | 0; //@line 9032
 $25 = (HEAP32[$23 >> 2] | 0) + $_0 | 0; //@line 9034
 HEAP32[$23 >> 2] = $25; //@line 9035
 $27 = $sim + 4724 | 0; //@line 9037
 $28 = HEAP32[$27 >> 2] | 0; //@line 9038
 if ($25 >>> 0 < $clkdiv_0 >>> 0) {
  $_lcssa51 = $28; //@line 9041
 } else {
  $30 = $28;
  $29 = $25;
  do {
   $30 = $30 + 1 | 0; //@line 9047
   $29 = $29 - $clkdiv_0 | 0; //@line 9048
  } while ($29 >>> 0 >= $clkdiv_0 >>> 0);
  HEAP32[$27 >> 2] = $30; //@line 9057
  HEAP32[$23 >> 2] = $29; //@line 9058
  $_lcssa51 = $30; //@line 9060
 }
 if ($_lcssa51 >>> 0 < 10) {
  STACKTOP = sp; //@line 9066
  return;
 }
 $37 = ($_lcssa51 >>> 0) / 10 | 0; //@line 9069
 $38 = $sim + 36 | 0; //@line 9070
 _e6522_clock($38, $37); //@line 9071
 $39 = $sim + 1748 | 0; //@line 9072
 $40 = HEAP32[$39 >> 2] | 0; //@line 9073
 $_pre = $37 * 10 | 0; //@line 9075
 if (($40 | 0) != 0) {
  _mac_adb_clock($40, $_pre); //@line 9078
 }
 _mac_iwm_clock($sim + 1760 | 0, $37); //@line 9082
 HEAP32[$27 >> 2] = (HEAP32[$27 >> 2] | 0) - $_pre; //@line 9085
 $46 = $sim + 4728 | 0; //@line 9086
 $48 = (HEAP32[$46 >> 2] | 0) + $_pre | 0; //@line 9088
 HEAP32[$46 >> 2] = $48; //@line 9089
 if ($48 >>> 0 < 256) {
  STACKTOP = sp; //@line 9093
  return;
 }
 _mac_video_clock(HEAP32[$sim + 3476 >> 2] | 0, $48); //@line 9098
 _mac_ser_clock($sim + 3488 | 0, HEAP32[$46 >> 2] | 0); //@line 9101
 _mac_ser_clock($sim + 4056 | 0, HEAP32[$46 >> 2] | 0); //@line 9104
 $58 = HEAP32[$sim + 1744 >> 2] | 0; //@line 9106
 if (($58 | 0) != 0) {
  _mac_kbd_clock($58, HEAP32[$46 >> 2] | 0); //@line 9111
 }
 $64 = $sim + 4732 | 0; //@line 9115
 $66 = (HEAP32[$64 >> 2] | 0) + (HEAP32[$46 >> 2] | 0) | 0; //@line 9117
 HEAP32[$64 >> 2] = $66; //@line 9118
 HEAP32[$46 >> 2] = 0; //@line 9119
 if ($66 >>> 0 < 8192) {
  STACKTOP = sp; //@line 9123
  return;
 }
 $70 = HEAP32[$sim + 3480 >> 2] | 0; //@line 9127
 if (($70 | 0) != 0) {
  _trm_check($70); //@line 9131
 }
 do {
  if ((HEAP32[$39 >> 2] | 0) == 0) {
   $77 = $sim + 4656 | 0; //@line 9139
   $78 = HEAP32[$77 >> 2] | 0; //@line 9140
   if (($78 + 1 | 0) >>> 0 > 2) {
    $81 = $sim + 4668 | 0; //@line 9145
    $84 = $sim + 4625 | 0; //@line 9148
    $85 = HEAP8[$84] | 0; //@line 9149
    $storemerge28_i = (HEAP8[$81] | 0) == 0 ? $85 | 16 : $85 & -17; //@line 9152
    HEAP8[$84] = $storemerge28_i; //@line 9153
    if (($78 | 0) > 0) {
     $90 = $storemerge28_i ^ 16; //@line 9157
     HEAP8[$84] = $90; //@line 9158
     $storemerge29_i = $78 - 2 | 0;
     $95 = $90;
    } else {
     $storemerge29_i = $78 + 2 | 0;
     $95 = $storemerge28_i;
    }
    HEAP32[$77 >> 2] = $storemerge29_i; //@line 9168
    _e6522_set_irb_inp($38, $95); //@line 9169
    _e8530_set_dcd_a($sim + 128 | 0, HEAP8[$81] | 0); //@line 9172
    HEAP8[$81] = (HEAP8[$81] | 0) == 0 | 0; //@line 9176
   }
   $102 = $sim + 4660 | 0; //@line 9179
   $103 = HEAP32[$102 >> 2] | 0; //@line 9180
   if (($103 + 1 | 0) >>> 0 <= 2) {
    break;
   }
   $106 = $sim + 4669 | 0; //@line 9187
   $109 = $sim + 4625 | 0; //@line 9190
   $110 = HEAP8[$109] | 0; //@line 9191
   $storemerge_i = (HEAP8[$106] | 0) == 0 ? $110 | 32 : $110 & -33; //@line 9194
   HEAP8[$109] = $storemerge_i; //@line 9195
   if (($103 | 0) > 0) {
    $storemerge27_i = $103 - 2 | 0;
    $120 = $storemerge_i;
   } else {
    $117 = $storemerge_i ^ 32; //@line 9203
    HEAP8[$109] = $117; //@line 9204
    $storemerge27_i = $103 + 2 | 0;
    $120 = $117;
   }
   HEAP32[$102 >> 2] = $storemerge27_i; //@line 9210
   _e6522_set_irb_inp($38, $120); //@line 9211
   _e8530_set_dcd_b($sim + 128 | 0, HEAP8[$106] | 0); //@line 9214
   HEAP8[$106] = (HEAP8[$106] | 0) == 0 | 0; //@line 9218
  }
 } while (0);
 _mac_rtc_clock($sim + 1428 | 0, HEAP32[$64 >> 2] | 0); //@line 9224
 $129 = $sim + 4700 | 0; //@line 9226
 $131 = (HEAP32[$129 >> 2] | 0) + (HEAP32[$64 >> 2] | 0) | 0; //@line 9228
 HEAP32[$129 >> 2] = $131; //@line 9229
 do {
  if ($131 >>> 0 > 31333) {
   HEAP32[$129 >> 2] = $131 - 31334; //@line 9235
   $136 = _pce_get_interval_us($sim + 4704 | 0) | 0; //@line 9237
   do {
    if ($136 >>> 0 < 4e3) {
     $140 = $sim + 4708 | 0; //@line 9243
     $142 = (HEAP32[$140 >> 2] | 0) + (4e3 - $136) | 0; //@line 9245
     HEAP32[$140 >> 2] = $142; //@line 9246
     if (($142 | 0) <= 0) {
      $166 = $142;
      $165 = $140;
      break;
     }
     $145 = $sim + 4696 | 0; //@line 9253
     HEAP32[$145 >> 2] = (HEAP32[$145 >> 2] | 0) + 1; //@line 9256
     $160 = $142; //@line 9258
     label = 1151; //@line 9259
    } else {
     $149 = $sim + 4708 | 0; //@line 9261
     $151 = (HEAP32[$149 >> 2] | 0) + (4e3 - $136) | 0; //@line 9264
     HEAP32[$149 >> 2] = $151; //@line 9265
     if (($151 | 0) >= 0) {
      $160 = $151; //@line 9269
      label = 1151; //@line 9270
      break;
     }
     $154 = $sim + 4696 | 0; //@line 9273
     $155 = HEAP32[$154 >> 2] | 0; //@line 9274
     if (($155 | 0) == 0) {
      $160 = $151; //@line 9278
      label = 1151; //@line 9279
      break;
     }
     HEAP32[$154 >> 2] = $155 - 1; //@line 9283
     $160 = $151; //@line 9285
     label = 1151; //@line 9286
    }
   } while (0);
   do {
    if ((label | 0) == 1151) {
     $161 = $sim + 4708 | 0; //@line 9292
     if (($160 | 0) <= 9999) {
      $166 = $160;
      $165 = $161;
      break;
     }
     _pce_usleep($160) | 0; //@line 9299
     $166 = HEAP32[$161 >> 2] | 0;
     $165 = $161;
    }
   } while (0);
   if (($166 | 0) >= -1e6) {
    break;
   }
   _mac_log_deb(31960, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 9312
   HEAP32[$165 >> 2] = (HEAP32[$165 >> 2] | 0) + 1e6; //@line 9315
  }
 } while (0);
 HEAP32[$64 >> 2] = 0; //@line 9319
 STACKTOP = sp; //@line 9321
 return;
}
function _mac_interrupt_vbi($ext, $val) {
 $ext = $ext | 0;
 $val = $val | 0;
 var $pbuf = 0, $4 = 0, $8 = 0, $10 = 0, $i_010 = 0, $14 = 0, $31 = 0, $v_1_i = 0, $41 = 0, $44 = 0, sp = 0;
 sp = STACKTOP; //@line 9337
 STACKTOP = STACKTOP + 376 | 0; //@line 9337
 $pbuf = sp | 0; //@line 9338
 if ($val << 24 >> 24 == 0) {
  STACKTOP = sp; //@line 9342
  return;
 }
 $4 = $ext + 36 | 0; //@line 9346
 _e6522_set_ca1_inp($4, 0); //@line 9347
 _e6522_set_ca1_inp($4, 1); //@line 9348
 _mac_sound_vbl($ext + 2644 | 0); //@line 9351
 $8 = $ext + 8 | 0; //@line 9353
 $10 = $ext + 4644 | 0; //@line 9355
 $i_010 = 0; //@line 9357
 while (1) {
  $14 = $i_010 + 1 | 0; //@line 9362
  HEAP8[$pbuf + $i_010 | 0] = _mem_get_uint8(HEAP32[$8 >> 2] | 0, $14 + (HEAP32[$10 >> 2] | 0) | 0) | 0; //@line 9366
  if ($14 >>> 0 < 370) {
   $i_010 = $14; //@line 9370
  } else {
   break;
  }
 }
 if ((HEAP32[$ext >> 2] & 4 | 0) == 0) {
  _mac_iwm_set_pwm($ext + 1760 | 0, $pbuf | 0, 370); //@line 9384
  STACKTOP = sp; //@line 9385
  return;
 }
 $31 = (HEAPU8[7064 + (HEAP8[$pbuf | 0] & 63) | 0] | 0) * 370 | 0; //@line 9395
 if ($31 >>> 0 < 370) {
  $v_1_i = 1; //@line 9399
 } else {
  $v_1_i = $31 >>> 0 > 11839 ? 31 : ($31 >>> 0) / 370 | 0; //@line 9405
 }
 $41 = (((((31 - $v_1_i | 0) * 223 | 0) + 15 | 0) >>> 0) / 30 | 0) + 32 | 0; //@line 9412
 $44 = HEAP32[$ext + 3476 >> 2] | 0; //@line 9415
 if (($44 | 0) == 0) {
  STACKTOP = sp; //@line 9419
  return;
 }
 if ((HEAP32[$44 + 28 >> 2] | 0) == ($41 | 0)) {
  STACKTOP = sp; //@line 9427
  return;
 }
 _mac_video_set_brightness($44, $41); //@line 9430
 STACKTOP = sp; //@line 9432
 return;
}
function _mac_set_vbuf($sim, $addr) {
 $sim = $sim | 0;
 $addr = $addr | 0;
 var $1 = 0, $12 = 0, $18 = 0, $19 = 0, $vbuf_0 = 0;
 $1 = $sim + 12 | 0; //@line 9445
 do {
  if ((_mem_blk_get_size(HEAP32[$1 >> 2] | 0) | 0) >>> 0 > $addr >>> 0) {
   $vbuf_0 = (_mem_blk_get_data(HEAP32[$1 >> 2] | 0) | 0) + $addr | 0; //@line 9456
  } else {
   $12 = _mem_get_blk(HEAP32[$sim + 8 >> 2] | 0, $addr) | 0; //@line 9460
   if (($12 | 0) != 0) {
    $18 = _mem_blk_get_data($12) | 0; //@line 9464
    $19 = _mem_blk_get_addr($12) | 0; //@line 9465
    $vbuf_0 = $18 + ($19 - (HEAP32[$sim + 4636 >> 2] | 0)) | 0; //@line 9470
    break;
   }
   _mac_video_set_vbuf(HEAP32[$sim + 3476 >> 2] | 0, 0); //@line 9475
   return;
  }
 } while (0);
 _mac_video_set_vbuf(HEAP32[$sim + 3476 >> 2] | 0, $vbuf_0); //@line 9484
 return;
}
function _mac_set_key($ext, $event, $key) {
 $ext = $ext | 0;
 $event = $event | 0;
 $key = $key | 0;
 var $3 = 0, $8 = 0, $14 = 0;
 if (($event | 0) == 3) {
  $3 = $ext; //@line 9502
  _mac_set_hotkey($3, $key) | 0; //@line 9503
  return;
 }
 $8 = HEAP32[$ext + 1744 >> 2] | 0; //@line 9510
 if (($8 | 0) != 0) {
  _mac_kbd_set_key($8, $event, $key); //@line 9514
 }
 $14 = HEAP32[$ext + 1752 >> 2] | 0; //@line 9519
 if (($14 | 0) == 0) {
  return;
 }
 _adb_kbd_set_key($14, $event, $key); //@line 9526
 return;
}
function _mac_set_mouse($ext, $dx, $dy, $but) {
 $ext = $ext | 0;
 $dx = $dx | 0;
 $dy = $dy | 0;
 $but = $but | 0;
 var $1 = 0, $10 = 0, $17 = 0, $22 = 0, $32 = 0, $35 = 0, $36 = 0, $storemerge = 0, $47 = 0, $51 = 0;
 $1 = $ext + 4676 | 0; //@line 9546
 if ((HEAP8[$1] | 0) != 0) {
  if (($but | 0) == 0) {
   return;
  }
  HEAP8[$1] = 0; //@line 9557
  HEAP32[$ext + 4700 >> 2] = 0; //@line 9560
  $10 = $ext + 4704 | 0; //@line 9562
  HEAP32[$10 >> 2] = 0; //@line 9563
  _pce_get_interval_us($10) | 0; //@line 9564
  HEAP32[$ext + 4696 >> 2] = 0; //@line 9567
  return;
 }
 $17 = HEAP32[$ext + 1756 >> 2] | 0; //@line 9574
 if (($17 | 0) != 0) {
  _adb_mouse_move($17, $but, $dx, $dy); //@line 9578
  return;
 }
 $22 = $ext + 4664 | 0; //@line 9584
 if ((($but & 2 ^ 2) & (HEAP32[$22 >> 2] ^ $but) | 0) != 0) {
  $32 = HEAP32[$ext + 3480 >> 2] | 0; //@line 9595
  _trm_set_msg_trm($32, 51848, 51328) | 0; //@line 9596
 }
 $35 = $ext + 4625 | 0; //@line 9599
 $36 = HEAP8[$35] | 0; //@line 9600
 $storemerge = ($but & 1 | 0) == 0 ? $36 | 8 : $36 & -9; //@line 9605
 HEAP8[$35] = $storemerge; //@line 9606
 if ($storemerge << 24 >> 24 != $36 << 24 >> 24) {
  _e6522_set_irb_inp($ext + 36 | 0, $storemerge); //@line 9612
 }
 $47 = $ext + 4656 | 0; //@line 9616
 HEAP32[$47 >> 2] = (HEAP32[$47 >> 2] | 0) + $dx; //@line 9619
 $51 = $ext + 4660 | 0; //@line 9621
 HEAP32[$51 >> 2] = (HEAP32[$51 >> 2] | 0) + $dy; //@line 9624
 HEAP32[$22 >> 2] = $but; //@line 9625
 return;
}
function _mac_set_iwm_motor($ext, $val) {
 $ext = $ext | 0;
 $val = $val | 0;
 var $1 = 0, $2 = 0, $7 = 0, $14 = 0, $18 = 0, $v_1_1_i_i = 0, $25 = 0, sp = 0;
 sp = STACKTOP; //@line 9640
 $1 = $val << 24 >> 24 != 0; //@line 9641
 $2 = $1 ? 4 : 0; //@line 9642
 HEAP32[$ext + 4692 >> 2] = $2; //@line 9645
 $7 = HEAP32[$ext + 4688 >> 2] | 0; //@line 9648
 if ($1) {
  $v_1_1_i_i = ($7 | 0) == 0 | $2 >>> 0 < $7 >>> 0 ? $2 : $7; //@line 9656
 } else {
  $v_1_1_i_i = $7; //@line 9658
 }
 $25 = $ext + 4684 | 0; //@line 9662
 if (($v_1_1_i_i | 0) == (HEAP32[$25 >> 2] | 0)) {
  STACKTOP = sp; //@line 9667
  return;
 }
 _mac_log_deb(31040, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $v_1_1_i_i, tempInt) | 0); //@line 9670
 _mac_rtc_set_realtime($ext + 1428 | 0, ($v_1_1_i_i | 0) != 1 | 0); //@line 9675
 HEAP32[$25 >> 2] = $v_1_1_i_i; //@line 9676
 $14 = $ext + 4696 | 0; //@line 9678
 HEAP32[$14 >> 2] = 0; //@line 9679
 HEAP32[$ext + 4700 >> 2] = 0; //@line 9682
 $18 = $ext + 4704 | 0; //@line 9684
 HEAP32[$18 >> 2] = 0; //@line 9685
 _pce_get_interval_us($18) | 0; //@line 9686
 HEAP32[$14 >> 2] = 0; //@line 9687
 STACKTOP = sp; //@line 9689
 return;
}
function _sig_int($s) {
 $s = $s | 0;
 HEAP32[15590] = 1; //@line 9698
 return;
}
function _mac_set_adb_int($ext, $val) {
 $ext = $ext | 0;
 $val = $val | 0;
 var $2 = 0, $3 = 0, $storemerge = 0;
 $2 = $ext + 4625 | 0; //@line 9711
 $3 = HEAP8[$2] | 0; //@line 9712
 $storemerge = $val << 24 >> 24 == 0 ? $3 | 8 : $3 & -9; //@line 9715
 HEAP8[$2] = $storemerge; //@line 9716
 _e6522_set_irb_inp($ext + 36 | 0, $storemerge); //@line 9719
 return;
}
function _mac_set_rtc_data($ext, $val) {
 $ext = $ext | 0;
 $val = $val | 0;
 var $2 = 0, $3 = 0, $storemerge = 0;
 $2 = $ext + 4625 | 0; //@line 9732
 $3 = HEAP8[$2] | 0; //@line 9733
 $storemerge = $val << 24 >> 24 == 0 ? $3 & -2 : $3 | 1; //@line 9736
 HEAP8[$2] = $storemerge; //@line 9737
 _e6522_set_irb_inp($ext + 36 | 0, $storemerge); //@line 9740
 return;
}
function _mac_interrupt_scc($ext, $val) {
 $ext = $ext | 0;
 $val = $val | 0;
 var $2 = 0, $3 = 0, $storemerge = 0, $i_0_i_i = 0, $val_0_in_i_i = 0, $val_0_i_i = 0;
 $2 = $ext + 4652 | 0; //@line 9754
 $3 = HEAP8[$2] | 0; //@line 9755
 $storemerge = $val << 24 >> 24 == 0 ? $3 & -5 : $3 | 4; //@line 9758
 HEAP8[$2] = $storemerge; //@line 9759
 $val_0_in_i_i = $storemerge & 255;
 $i_0_i_i = 0;
 while (1) {
  $val_0_i_i = $val_0_in_i_i >>> 1; //@line 9766
  if (($val_0_i_i | 0) == 0) {
   break;
  } else {
   $val_0_in_i_i = $val_0_i_i;
   $i_0_i_i = $i_0_i_i + 1 | 0;
  }
 }
 _e68_interrupt(HEAP32[$ext + 4 >> 2] | 0, $i_0_i_i); //@line 9779
 return;
}
function _mac_scc_get_uint8($ext, $addr) {
 $ext = $ext | 0;
 $addr = $addr | 0;
 var $val_0 = 0;
 if (($addr | 0) == 2097148) {
  $val_0 = _e8530_get_data_b($ext + 128 | 0) | 0; //@line 9797
 } else if (($addr | 0) == 2097144) {
  $val_0 = _e8530_get_ctl_b($ext + 128 | 0) | 0; //@line 9803
 } else if (($addr | 0) == 2097146) {
  $val_0 = _e8530_get_ctl_a($ext + 128 | 0) | 0; //@line 9809
 } else if (($addr | 0) == 2097150) {
  $val_0 = _e8530_get_data_a($ext + 128 | 0) | 0; //@line 9815
 } else {
  $val_0 = -1; //@line 9817
 }
 return $val_0 | 0; //@line 9821
}
function _mac_scc_set_uint8($ext, $addr, $val) {
 $ext = $ext | 0;
 $addr = $addr | 0;
 $val = $val | 0;
 if (($addr | 0) == 4194301) {
  _e8530_set_data_b($ext + 128 | 0, $val); //@line 9835
 } else if (($addr | 0) == 4194303) {
  _e8530_set_data_a($ext + 128 | 0, $val); //@line 9840
 } else if (($addr | 0) == 4194299) {
  _e8530_set_ctl_a($ext + 128 | 0, $val); //@line 9845
 } else if (($addr | 0) == 4194297) {
  _e8530_set_ctl_b($ext + 128 | 0, $val); //@line 9850
 }
 return;
}
function _mac_interrupt_via($ext, $val) {
 $ext = $ext | 0;
 $val = $val | 0;
 var $2 = 0, $3 = 0, $storemerge = 0, $i_0_i_i = 0, $val_0_in_i_i = 0, $val_0_i_i = 0;
 $2 = $ext + 4652 | 0; //@line 9866
 $3 = HEAP8[$2] | 0; //@line 9867
 $storemerge = $val << 24 >> 24 == 0 ? $3 & -3 : $3 | 2; //@line 9870
 HEAP8[$2] = $storemerge; //@line 9871
 $val_0_in_i_i = $storemerge & 255;
 $i_0_i_i = 0;
 while (1) {
  $val_0_i_i = $val_0_in_i_i >>> 1; //@line 9878
  if (($val_0_i_i | 0) == 0) {
   break;
  } else {
   $val_0_in_i_i = $val_0_i_i;
   $i_0_i_i = $i_0_i_i + 1 | 0;
  }
 }
 _e68_interrupt(HEAP32[$ext + 4 >> 2] | 0, $i_0_i_i); //@line 9891
 return;
}
function _mac_set_via_port_a($ext, $val) {
 $ext = $ext | 0;
 $val = $val | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $8 = 0, $13 = 0, $addr_0_in_in = 0, $55 = 0, $_pn_in_in = 0, sp = 0;
 sp = STACKTOP; //@line 9909
 $1 = $ext; //@line 9910
 $2 = $ext + 4624 | 0; //@line 9911
 $3 = HEAP8[$2] | 0; //@line 9912
 $4 = $val & 255; //@line 9913
 if ($3 << 24 >> 24 == $val << 24 >> 24) {
  STACKTOP = sp; //@line 9917
  return;
 }
 HEAP8[$2] = $val; //@line 9920
 $8 = ($3 ^ $val) & 255; //@line 9922
 do {
  if (($8 & 16 | 0) != 0) {
   $13 = HEAP32[$ext >> 2] | 0; //@line 9929
   if (($13 & 1 | 0) != 0) {
    _mac_set_overlay($1, $4 >>> 4 & 1); //@line 9936
    break;
   }
   if (($13 & 6 | 0) == 0) {
    break;
   }
   _mac_iwm_set_drive_sel($ext + 1760 | 0, ($val & 255) >>> 4 & 1); //@line 9950
  }
 } while (0);
 if (($8 & 32 | 0) != 0) {
  _mac_iwm_set_head_sel($ext + 1760 | 0, ($val & 255) >>> 5 & 1); //@line 9962
 }
 if (($8 & 64 | 0) != 0) {
  if (($4 & 64 | 0) == 0) {
   _mac_log_deb(30912, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 9973
   $addr_0_in_in = $ext + 4640 | 0; //@line 9975
  } else {
   _mac_log_deb(31e3, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 9977
   $addr_0_in_in = $ext + 4636 | 0; //@line 9980
  }
  _mac_set_vbuf($1, HEAP32[$addr_0_in_in >> 2] | 0); //@line 9985
 }
 do {
  if (($8 & 8 | 0) != 0) {
   if ((HEAP32[$ext >> 2] & 1 | 0) == 0) {
    break;
   }
   $55 = _mem_blk_get_data(HEAP32[$ext + 12 >> 2] | 0) | 0; //@line 10004
   if (($4 & 8 | 0) == 0) {
    _mac_log_deb(30552, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 10009
    $_pn_in_in = $ext + 4648 | 0; //@line 10011
   } else {
    _mac_log_deb(30672, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 10013
    $_pn_in_in = $ext + 4644 | 0; //@line 10016
   }
   _mac_sound_set_sbuf($ext + 2644 | 0, $55 + (HEAP32[$_pn_in_in >> 2] | 0) | 0); //@line 10024
  }
 } while (0);
 if (($8 & 7 | 0) == 0) {
  STACKTOP = sp; //@line 10032
  return;
 }
 _mac_sound_set_volume($ext + 2644 | 0, $4 & 7); //@line 10038
 STACKTOP = sp; //@line 10040
 return;
}
function _mac_set_via_port_b($ext, $val) {
 $ext = $ext | 0;
 $val = $val | 0;
 var $1 = 0, $2 = 0, $16 = 0;
 $1 = $ext + 4625 | 0; //@line 10053
 $2 = HEAP8[$1] | 0; //@line 10054
 if ($2 << 24 >> 24 == $val << 24 >> 24) {
  return;
 }
 HEAP8[$1] = $val; //@line 10061
 _mac_rtc_set_uint8($ext + 1428 | 0, $val); //@line 10064
 if (($2 ^ $val) << 24 >> 24 < 0) {
  _mac_sound_set_enable($ext + 2644 | 0, ($val & 255) >>> 7 & 255 ^ 1); //@line 10074
 }
 $16 = HEAP32[$ext + 1748 >> 2] | 0; //@line 10079
 if (($16 | 0) == 0) {
  return;
 }
 _mac_adb_set_state($16, ($val & 255) >>> 4 & 3); //@line 10088
 return;
}
function _mac_set_reset($ext, $val) {
 $ext = $ext | 0;
 $val = $val | 0;
 if ($val << 24 >> 24 == 0) {
  return;
 }
 _mac_reset($ext); //@line 10108
 return;
}
function _mac_log_deb($msg, varrp) {
 $msg = $msg | 0;
 varrp = varrp | 0;
 var $va = 0, $1 = 0, $pc_0 = 0, $9 = 0, sp = 0;
 sp = STACKTOP; //@line 10121
 STACKTOP = STACKTOP + 16 | 0; //@line 10121
 $va = sp | 0; //@line 10122
 $1 = HEAP32[15588] | 0; //@line 10123
 if (($1 | 0) == 0) {
  $pc_0 = 0; //@line 10127
 } else {
  $pc_0 = (_e68_get_last_pc(HEAP32[$1 + 4 >> 2] | 0, 0) | 0) & 16777215; //@line 10134
 }
 _pce_log(3, 45928, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $pc_0, tempInt) | 0); //@line 10137
 $9 = $va; //@line 10139
 HEAP32[$9 >> 2] = varrp; //@line 10140
 HEAP32[$9 + 4 >> 2] = 0; //@line 10140
 _pce_log_va(3, $msg, $va | 0); //@line 10141
 STACKTOP = sp; //@line 10143
 return;
}
function _mac_atexit() {
 _pce_set_fd_interactive(0, 1); //@line 10151
 return;
}
function _cmd_get_sym1833($sim, $sym, $val) {
 $sim = $sim | 0;
 $sym = $sym | 0;
 $val = $val | 0;
 return (_e68_get_reg(HEAP32[$sim + 4 >> 2] | 0, $sym, $val) | 0) != 0 | 0; //@line 10170
}
function _cmd_set_sym1835($sim, $sym, $val) {
 $sim = $sim | 0;
 $sym = $sym | 0;
 $val = $val | 0;
 return (_e68_set_reg(HEAP32[$sim + 4 >> 2] | 0, $sym, $val) | 0) != 0 | 0; //@line 10187
}
function _mac_set_overlay($sim, $overlay) {
 $sim = $sim | 0;
 $overlay = $overlay | 0;
 var $1 = 0, $3 = 0, $7 = 0, $8 = 0, $27 = 0, $30 = 0, $32 = 0;
 $1 = $sim + 4628 | 0; //@line 10200
 $3 = ($overlay | 0) != 0; //@line 10202
 if ((HEAP32[$1 >> 2] | 0) == ($3 & 1 | 0)) {
  return;
 }
 $7 = $sim + 8 | 0; //@line 10210
 $8 = HEAP32[$7 >> 2] | 0; //@line 10211
 if ($3) {
  _mem_rmv_blk($8, HEAP32[$sim + 12 >> 2] | 0); //@line 10216
  _mem_add_blk(HEAP32[$7 >> 2] | 0, HEAP32[$sim + 24 >> 2] | 0, 0); //@line 10220
  _mem_add_blk(HEAP32[$7 >> 2] | 0, HEAP32[$sim + 20 >> 2] | 0, 0); //@line 10224
  _e68_set_ram(HEAP32[$sim + 4 >> 2] | 0, 0, 0); //@line 10227
  HEAP32[$1 >> 2] = 1; //@line 10228
  return;
 } else {
  _mem_rmv_blk($8, HEAP32[$sim + 24 >> 2] | 0); //@line 10235
  _mem_rmv_blk(HEAP32[$7 >> 2] | 0, HEAP32[$sim + 20 >> 2] | 0); //@line 10239
  $27 = $sim + 12 | 0; //@line 10241
  _mem_add_blk(HEAP32[$7 >> 2] | 0, HEAP32[$27 >> 2] | 0, 0); //@line 10243
  $30 = HEAP32[$sim + 4 >> 2] | 0; //@line 10245
  $32 = _mem_blk_get_data(HEAP32[$27 >> 2] | 0) | 0; //@line 10247
  _e68_set_ram($30, $32, _mem_blk_get_size(HEAP32[$27 >> 2] | 0) | 0); //@line 10250
  HEAP32[$1 >> 2] = 0; //@line 10251
  return;
 }
}
function _mac_mem_get_uint8($ext, $addr) {
 $ext = $ext | 0;
 $addr = $addr | 0;
 var $5 = 0, $8 = 0, $11 = 0, $18 = 0, $21 = 0, $25 = 0, $addr12_ph = 0, $_off7 = 0, $_0 = 0, label = 0;
 do {
  if ($addr >>> 0 < 4194304) {
   $5 = HEAP32[$ext + 12 >> 2] | 0; //@line 10274
   if (($5 | 0) == 0) {
    break;
   }
   $8 = _mem_blk_get_size($5) | 0; //@line 10280
   if (($8 | 0) == 0) {
    break;
   }
   $11 = ($addr >>> 0) % ($8 >>> 0) | 0; //@line 10286
   if (($11 | 0) != ($addr | 0)) {
    $addr12_ph = $11; //@line 10290
    label = 1300; //@line 10291
   }
  } else {
   if ($addr >>> 0 >= 5767168) {
    break;
   }
   $18 = HEAP32[$ext + 16 >> 2] | 0; //@line 10301
   if (($18 | 0) == 0) {
    break;
   }
   $21 = _mem_blk_get_size($18) | 0; //@line 10307
   if (($21 | 0) == 0) {
    break;
   }
   $25 = (($addr >>> 0) % ($21 >>> 0) | 0) + 4194304 | 0; //@line 10314
   if (($25 | 0) != ($addr | 0)) {
    $addr12_ph = $25; //@line 10318
    label = 1300; //@line 10319
   }
  }
 } while (0);
 if ((label | 0) == 1300) {
  $_0 = _mem_get_uint8(HEAP32[$ext + 8 >> 2] | 0, $addr12_ph) | 0; //@line 10330
  return $_0 | 0; //@line 10333
 }
 if (($addr - 5767168 | 0) >>> 0 < 524288) {
  $_0 = 0; //@line 10339
  return $_0 | 0; //@line 10342
 }
 $_off7 = $addr - 12582912 | 0; //@line 10344
 if ($_off7 >>> 0 < 2097152) {
  $_0 = _mac_iwm_get_uint8($ext + 1760 | 0, $_off7) | 0; //@line 10352
  return $_0 | 0; //@line 10355
 } else {
  $_0 = ($addr & 15728640 | 0) == 13631488 ? -86 : 0; //@line 10361
  return $_0 | 0; //@line 10364
 }
 return 0;
}
function _sig_segv($s) {
 $s = $s | 0;
 var $1 = 0, $4 = 0;
 _pce_set_fd_interactive(0, 1); //@line 10374
 $1 = HEAP32[_stderr >> 2] | 0; //@line 10375
 _fwrite(51584, 32, 1, $1 | 0) | 0; //@line 10376
 _fflush($1 | 0) | 0; //@line 10377
 $4 = HEAP32[15588] | 0; //@line 10378
 do {
  if (($4 | 0) != 0) {
   if ((HEAP32[$4 + 4 >> 2] | 0) == 0) {
    break;
   }
   _mac_prt_state($4, 56232); //@line 10390
  }
 } while (0);
 _exit(1); //@line 10394
}
function _sig_term($s) {
 $s = $s | 0;
 var $1 = 0;
 _pce_set_fd_interactive(0, 1); //@line 10404
 $1 = HEAP32[_stderr >> 2] | 0; //@line 10405
 _fprintf($1 | 0, 49784 | 0, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $s, tempInt) | 0) | 0; //@line 10406
 _fflush($1 | 0) | 0; //@line 10407
 _exit(1); //@line 10408
}
function _main($argc, $argv) {
 $argc = $argc | 0;
 $argv = $argv | 0;
 var $optarg = 0, $1 = 0, $3 = 0, $6 = 0, $8 = 0, $cfg_023 = 0, $15 = 0, $27 = 0, $34 = 0, $59 = 0, $76 = 0, $cfg_0_be = 0, $82 = 0, $87 = 0, $cfg_0_lcssa24 = 0, $96 = 0, $_ = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 10431
 STACKTOP = STACKTOP + 8 | 0; //@line 10431
 $optarg = sp | 0; //@line 10432
 _pce_log_init(); //@line 10433
 $1 = HEAP32[_stderr >> 2] | 0; //@line 10434
 _pce_log_add_fp($1, 0, 2) | 0; //@line 10435
 $3 = _ini_sct_new(0) | 0; //@line 10436
 HEAP32[15674] = $3; //@line 10437
 if (($3 | 0) == 0) {
  $_0 = 1; //@line 10441
  STACKTOP = sp; //@line 10443
  return $_0 | 0; //@line 10444
 }
 _ini_str_init(62648); //@line 10446
 _pce_log_set_level($1, 3); //@line 10447
 $6 = _pce_getopt($argc, $argv, $optarg, 7128) | 0; //@line 10448
 do {
  if (($6 | 0) == -1) {
   _pce_log(2, 52296, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 10453
   $cfg_0_lcssa24 = 42456; //@line 10455
   label = 1340; //@line 10456
  } else {
   $cfg_023 = 42456;
   $8 = $6;
   while (1) {
    if (($8 | 0) < 0) {
     $_0 = 1; //@line 10465
     label = 1346; //@line 10466
     break;
    }
    if (($8 | 0) == 115) {
     $76 = HEAP32[HEAP32[$optarg >> 2] >> 2] | 0; //@line 10471
     _ini_str_add(62648, 57912, $76, 33480) | 0; //@line 10472
     $cfg_0_be = $cfg_023; //@line 10474
    } else if (($8 | 0) == 116) {
     HEAP32[15586] = HEAP32[HEAP32[$optarg >> 2] >> 2]; //@line 10478
     $cfg_0_be = $cfg_023; //@line 10480
    } else if (($8 | 0) == 86) {
     label = 1321; //@line 10482
     break;
    } else if (($8 | 0) == 66) {
     $27 = _strtoul(HEAP32[HEAP32[$optarg >> 2] >> 2] | 0, 0, 0) | 0; //@line 10487
     if (($27 | 0) == 0 | $27 >>> 0 > 3) {
      label = 1324; //@line 10493
      break;
     }
     $34 = $27 - 1 | 0; //@line 10496
     HEAP32[15668] = HEAP32[15668] | 1 << $34; //@line 10500
     HEAP32[62680 + ($34 << 2) >> 2] = _strtoul(HEAP32[(HEAP32[$optarg >> 2] | 0) + 4 >> 2] | 0, 0, 0) | 0; //@line 10506
     $cfg_0_be = $cfg_023; //@line 10508
    } else if (($8 | 0) == 108) {
     _pce_log_add_fname(HEAP32[HEAP32[$optarg >> 2] >> 2] | 0, 3) | 0; //@line 10512
     $cfg_0_be = $cfg_023; //@line 10514
    } else if (($8 | 0) == 63) {
     label = 1320; //@line 10516
     break;
    } else if (($8 | 0) == 73) {
     _ini_str_add(62648, HEAP32[HEAP32[$optarg >> 2] >> 2] | 0, 33480, 0) | 0; //@line 10521
     $cfg_0_be = $cfg_023; //@line 10523
    } else if (($8 | 0) == 114 | ($8 | 0) == 82) {
     $cfg_0_be = $cfg_023;
    } else if (($8 | 0) == 0) {
     label = 1338; //@line 10527
     break;
    } else if (($8 | 0) == 112) {
     _ini_str_add(62648, 31680, HEAP32[HEAP32[$optarg >> 2] >> 2] | 0, 30720) | 0; //@line 10532
     $cfg_0_be = $cfg_023; //@line 10534
    } else if (($8 | 0) == 113) {
     _pce_log_set_level($1, 0); //@line 10536
     $cfg_0_be = $cfg_023; //@line 10538
    } else if (($8 | 0) == 98) {
     HEAP32[15668] = HEAP32[15668] | 1; //@line 10542
     HEAP32[15670] = _strtoul(HEAP32[HEAP32[$optarg >> 2] >> 2] | 0, 0, 0) | 0; //@line 10546
     $cfg_0_be = $cfg_023; //@line 10548
    } else if (($8 | 0) == 118) {
     _pce_log_set_level($1, 3); //@line 10550
     $cfg_0_be = $cfg_023; //@line 10552
    } else if (($8 | 0) == 105) {
     if ((_ini_read_str(HEAP32[15674] | 0, HEAP32[HEAP32[$optarg >> 2] >> 2] | 0) | 0) == 0) {
      $cfg_0_be = $cfg_023; //@line 10561
     } else {
      label = 1329; //@line 10563
      break;
     }
    } else if (($8 | 0) == 100) {
     _pce_path_set(HEAP32[HEAP32[$optarg >> 2] >> 2] | 0) | 0; //@line 10569
     $cfg_0_be = $cfg_023; //@line 10571
    } else if (($8 | 0) == 99) {
     $cfg_0_be = HEAP32[HEAP32[$optarg >> 2] >> 2] | 0; //@line 10576
    } else {
     $_0 = 1; //@line 10578
     label = 1352; //@line 10579
     break;
    }
    $82 = _pce_getopt($argc, $argv, $optarg, 7128) | 0; //@line 10583
    if (($82 | 0) == -1) {
     label = 1339; //@line 10587
     break;
    } else {
     $cfg_023 = $cfg_0_be;
     $8 = $82;
    }
   }
   if ((label | 0) == 1321) {
    $15 = HEAP32[_stdout >> 2] | 0; //@line 10594
    _fwrite(51712, 89, 1, $15 | 0) | 0; //@line 10595
    _fflush($15 | 0) | 0; //@line 10596
    $_0 = 0; //@line 10598
    STACKTOP = sp; //@line 10600
    return $_0 | 0; //@line 10601
   } else if ((label | 0) == 1329) {
    $59 = HEAP32[HEAP32[$optarg >> 2] >> 2] | 0; //@line 10606
    _fprintf($1 | 0, 36408, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = HEAP32[$argv >> 2], HEAP32[tempInt + 8 >> 2] = $59, tempInt) | 0) | 0; //@line 10607
    $_0 = 1; //@line 10609
    STACKTOP = sp; //@line 10611
    return $_0 | 0; //@line 10612
   } else if ((label | 0) == 1320) {
    _pce_getopt_help(51200, 50704, 7128); //@line 10615
    _fflush(HEAP32[_stdout >> 2] | 0) | 0; //@line 10617
    $_0 = 0; //@line 10619
    STACKTOP = sp; //@line 10621
    return $_0 | 0; //@line 10622
   } else if ((label | 0) == 1338) {
    $87 = HEAP32[HEAP32[$optarg >> 2] >> 2] | 0; //@line 10627
    _fprintf($1 | 0, 57056, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = HEAP32[$argv >> 2], HEAP32[tempInt + 8 >> 2] = $87, tempInt) | 0) | 0; //@line 10628
    $_0 = 1; //@line 10630
    STACKTOP = sp; //@line 10632
    return $_0 | 0; //@line 10633
   } else if ((label | 0) == 1346) {
    STACKTOP = sp; //@line 10637
    return $_0 | 0; //@line 10638
   } else if ((label | 0) == 1324) {
    _fprintf($1 | 0, 39336, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = HEAP32[$argv >> 2], HEAP32[tempInt + 8 >> 2] = $27, tempInt) | 0) | 0; //@line 10642
    $_0 = 1; //@line 10644
    STACKTOP = sp; //@line 10646
    return $_0 | 0; //@line 10647
   } else if ((label | 0) == 1352) {
    STACKTOP = sp; //@line 10651
    return $_0 | 0; //@line 10652
   } else if ((label | 0) == 1339) {
    _pce_log(2, 52296, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 10655
    if (($cfg_0_be | 0) == 0) {
     break;
    } else {
     $cfg_0_lcssa24 = $cfg_0_be; //@line 10661
     label = 1340; //@line 10662
     break;
    }
   }
  }
 } while (0);
 do {
  if ((label | 0) == 1340) {
   _pce_log_tag(2, 54504, 53824, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $cfg_0_lcssa24, tempInt) | 0); //@line 10671
   if ((_ini_read(HEAP32[15674] | 0, $cfg_0_lcssa24) | 0) == 0) {
    break;
   }
   _pce_log(0, 53208, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 10679
   $_0 = 1; //@line 10681
   STACKTOP = sp; //@line 10683
   return $_0 | 0; //@line 10684
  }
 } while (0);
 $96 = _ini_next_sct(HEAP32[15674] | 0, 0, 55896) | 0; //@line 10688
 $_ = ($96 | 0) == 0 ? HEAP32[15674] | 0 : $96; //@line 10691
 if ((_ini_str_eval(62648, $_, 1) | 0) == 0) {
  _atexit(2) | 0; //@line 10696
  _SDL_Init(0) | 0; //@line 10697
  _pce_path_ini($_) | 0; //@line 10698
  _signal(2, 216) | 0; //@line 10699
  _signal(11, 424) | 0; //@line 10700
  _signal(15, 416) | 0; //@line 10701
  _pce_console_init(HEAP32[_stdin >> 2] | 0, HEAP32[_stdout >> 2] | 0); //@line 10704
  HEAP32[15588] = _mac_new($_) | 0; //@line 10706
  _mon_init(62384); //@line 10707
  _mon_set_cmd_fct(62384, 14, HEAP32[15588] | 0); //@line 10710
  _mon_set_msg_fct(62384, 70, HEAP32[15588] | 0); //@line 10713
  _mon_set_get_mem_fct(62384, HEAP32[(HEAP32[15588] | 0) + 8 >> 2] | 0, 26); //@line 10718
  _mon_set_set_mem_fct(62384, HEAP32[(HEAP32[15588] | 0) + 8 >> 2] | 0, 12); //@line 10723
  _mon_set_memory_mode(62384, 0); //@line 10724
  _cmd_init(HEAP32[15588] | 0, 20, 38); //@line 10727
  _mac_cmd_init(HEAP32[15588] | 0, 62384); //@line 10729
  _mac_reset(HEAP32[15588] | 0); //@line 10731
  _mac_run_emscripten(HEAP32[15588] | 0); //@line 10733
  _exit(1); //@line 10734
  return 0; //@line 10735
 } else {
  $_0 = 1; //@line 10737
  STACKTOP = sp; //@line 10739
  return $_0 | 0; //@line 10740
 }
 return 0;
}
function _mac_mem_get_uint16($ext, $addr) {
 $ext = $ext | 0;
 $addr = $addr | 0;
 var $5 = 0, $8 = 0, $11 = 0, $18 = 0, $21 = 0, $25 = 0, $addr6_ph = 0, $_0 = 0, label = 0;
 do {
  if ($addr >>> 0 < 4194304) {
   $5 = HEAP32[$ext + 12 >> 2] | 0; //@line 10760
   if (($5 | 0) == 0) {
    $_0 = 0; //@line 10764
    break;
   }
   $8 = _mem_blk_get_size($5) | 0; //@line 10767
   if (($8 | 0) == 0) {
    $_0 = 0; //@line 10771
    break;
   }
   $11 = ($addr >>> 0) % ($8 >>> 0) | 0; //@line 10774
   if (($11 | 0) == ($addr | 0)) {
    $_0 = 0; //@line 10778
   } else {
    $addr6_ph = $11; //@line 10780
    label = 1363; //@line 10781
   }
  } else {
   if ($addr >>> 0 >= 5767168) {
    $_0 = 0; //@line 10787
    break;
   }
   $18 = HEAP32[$ext + 16 >> 2] | 0; //@line 10792
   if (($18 | 0) == 0) {
    $_0 = 0; //@line 10796
    break;
   }
   $21 = _mem_blk_get_size($18) | 0; //@line 10799
   if (($21 | 0) == 0) {
    $_0 = 0; //@line 10803
    break;
   }
   $25 = (($addr >>> 0) % ($21 >>> 0) | 0) + 4194304 | 0; //@line 10807
   if (($25 | 0) == ($addr | 0)) {
    $_0 = 0; //@line 10811
   } else {
    $addr6_ph = $25; //@line 10813
    label = 1363; //@line 10814
   }
  }
 } while (0);
 if ((label | 0) == 1363) {
  $_0 = _mem_get_uint16_be(HEAP32[$ext + 8 >> 2] | 0, $addr6_ph) | 0; //@line 10825
 }
 return $_0 | 0; //@line 10829
}
function _mac_mem_get_uint32($ext, $addr) {
 $ext = $ext | 0;
 $addr = $addr | 0;
 var $5 = 0, $8 = 0, $11 = 0, $18 = 0, $21 = 0, $25 = 0, $addr6_ph = 0, $_0 = 0, label = 0;
 do {
  if ($addr >>> 0 < 4194304) {
   $5 = HEAP32[$ext + 12 >> 2] | 0; //@line 10848
   if (($5 | 0) == 0) {
    $_0 = 0; //@line 10852
    break;
   }
   $8 = _mem_blk_get_size($5) | 0; //@line 10855
   if (($8 | 0) == 0) {
    $_0 = 0; //@line 10859
    break;
   }
   $11 = ($addr >>> 0) % ($8 >>> 0) | 0; //@line 10862
   if (($11 | 0) == ($addr | 0)) {
    $_0 = 0; //@line 10866
   } else {
    $addr6_ph = $11; //@line 10868
    label = 1373; //@line 10869
   }
  } else {
   if ($addr >>> 0 >= 5767168) {
    $_0 = 0; //@line 10875
    break;
   }
   $18 = HEAP32[$ext + 16 >> 2] | 0; //@line 10880
   if (($18 | 0) == 0) {
    $_0 = 0; //@line 10884
    break;
   }
   $21 = _mem_blk_get_size($18) | 0; //@line 10887
   if (($21 | 0) == 0) {
    $_0 = 0; //@line 10891
    break;
   }
   $25 = (($addr >>> 0) % ($21 >>> 0) | 0) + 4194304 | 0; //@line 10895
   if (($25 | 0) == ($addr | 0)) {
    $_0 = 0; //@line 10899
   } else {
    $addr6_ph = $25; //@line 10901
    label = 1373; //@line 10902
   }
  }
 } while (0);
 if ((label | 0) == 1373) {
  $_0 = _mem_get_uint32_be(HEAP32[$ext + 8 >> 2] | 0, $addr6_ph) | 0; //@line 10913
 }
 return $_0 | 0; //@line 10917
}
function _mac_mem_set_uint8($ext, $addr, $val) {
 $ext = $ext | 0;
 $addr = $addr | 0;
 $val = $val | 0;
 var $5 = 0, $8 = 0, $11 = 0, $18 = 0, $21 = 0, $25 = 0, $addr14_ph = 0, $addr1415 = 0, label = 0;
 do {
  if ($addr >>> 0 < 4194304) {
   $5 = HEAP32[$ext + 12 >> 2] | 0; //@line 10938
   if (($5 | 0) == 0) {
    return;
   }
   $8 = _mem_blk_get_size($5) | 0; //@line 10945
   if (($8 | 0) == 0) {
    return;
   }
   $11 = ($addr >>> 0) % ($8 >>> 0) | 0; //@line 10952
   if (($11 | 0) != ($addr | 0)) {
    $addr14_ph = $11; //@line 10956
    label = 1383; //@line 10957
    break;
   }
   return;
  } else {
   if ($addr >>> 0 >= 5767168) {
    $addr1415 = $addr; //@line 10966
    break;
   }
   $18 = HEAP32[$ext + 16 >> 2] | 0; //@line 10971
   if (($18 | 0) == 0) {
    $addr1415 = $addr; //@line 10975
    break;
   }
   $21 = _mem_blk_get_size($18) | 0; //@line 10978
   if (($21 | 0) == 0) {
    $addr1415 = $addr; //@line 10982
    break;
   }
   $25 = (($addr >>> 0) % ($21 >>> 0) | 0) + 4194304 | 0; //@line 10986
   if (($25 | 0) == ($addr | 0)) {
    $addr1415 = $addr; //@line 10990
   } else {
    $addr14_ph = $25; //@line 10992
    label = 1383; //@line 10993
   }
  }
 } while (0);
 if ((label | 0) == 1383) {
  _mem_set_uint8(HEAP32[$ext + 8 >> 2] | 0, $addr14_ph, $val); //@line 11002
  $addr1415 = $addr14_ph; //@line 11004
 }
 if (!(($addr1415 - 5767168 | 0) >>> 0 > 524287 & $addr1415 >>> 0 > 12582911 & $addr1415 >>> 0 < 14680064)) {
  return;
 }
 _mac_iwm_set_uint8($ext + 1760 | 0, $addr1415 - 12582912 | 0, $val); //@line 11021
 return;
}
function _mac_mem_set_uint16($ext, $addr, $val) {
 $ext = $ext | 0;
 $addr = $addr | 0;
 $val = $val | 0;
 var $5 = 0, $8 = 0, $11 = 0, $18 = 0, $21 = 0, $25 = 0, $addr6_ph = 0;
 do {
  if ($addr >>> 0 < 4194304) {
   $5 = HEAP32[$ext + 12 >> 2] | 0; //@line 11043
   if (($5 | 0) == 0) {
    return;
   }
   $8 = _mem_blk_get_size($5) | 0; //@line 11050
   if (($8 | 0) == 0) {
    return;
   }
   $11 = ($addr >>> 0) % ($8 >>> 0) | 0; //@line 11057
   if (($11 | 0) != ($addr | 0)) {
    $addr6_ph = $11; //@line 11061
    break;
   }
   return;
  } else {
   if ($addr >>> 0 >= 5767168) {
    return;
   }
   $18 = HEAP32[$ext + 16 >> 2] | 0; //@line 11075
   if (($18 | 0) == 0) {
    return;
   }
   $21 = _mem_blk_get_size($18) | 0; //@line 11082
   if (($21 | 0) == 0) {
    return;
   }
   $25 = (($addr >>> 0) % ($21 >>> 0) | 0) + 4194304 | 0; //@line 11090
   if (($25 | 0) != ($addr | 0)) {
    $addr6_ph = $25; //@line 11094
    break;
   }
   return;
  }
 } while (0);
 _mem_set_uint16_be(HEAP32[$ext + 8 >> 2] | 0, $addr6_ph, $val); //@line 11105
 return;
}
function _mac_mem_set_uint32($ext, $addr, $val) {
 $ext = $ext | 0;
 $addr = $addr | 0;
 $val = $val | 0;
 var $5 = 0, $8 = 0, $11 = 0, $18 = 0, $21 = 0, $25 = 0, $addr6_ph = 0;
 do {
  if ($addr >>> 0 < 4194304) {
   $5 = HEAP32[$ext + 12 >> 2] | 0; //@line 11127
   if (($5 | 0) == 0) {
    return;
   }
   $8 = _mem_blk_get_size($5) | 0; //@line 11134
   if (($8 | 0) == 0) {
    return;
   }
   $11 = ($addr >>> 0) % ($8 >>> 0) | 0; //@line 11141
   if (($11 | 0) != ($addr | 0)) {
    $addr6_ph = $11; //@line 11145
    break;
   }
   return;
  } else {
   if ($addr >>> 0 >= 5767168) {
    return;
   }
   $18 = HEAP32[$ext + 16 >> 2] | 0; //@line 11159
   if (($18 | 0) == 0) {
    return;
   }
   $21 = _mem_blk_get_size($18) | 0; //@line 11166
   if (($21 | 0) == 0) {
    return;
   }
   $25 = (($addr >>> 0) % ($21 >>> 0) | 0) + 4194304 | 0; //@line 11174
   if (($25 | 0) != ($addr | 0)) {
    $addr6_ph = $25; //@line 11178
    break;
   }
   return;
  }
 } while (0);
 _mem_set_uint32_be(HEAP32[$ext + 8 >> 2] | 0, $addr6_ph, $val); //@line 11189
 return;
}
function _mac_set_msg($sim, $msg, $val) {
 $sim = $sim | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 var $_sim = 0, $_val = 0, $lst_0 = 0, $8 = 0, $20 = 0, $23 = 0, $_0 = 0, label = 0;
 $_sim = ($sim | 0) == 0 ? HEAP32[15588] | 0 : $sim; //@line 11207
 if (($msg | 0) == 0) {
  $_0 = 1; //@line 11211
  return $_0 | 0; //@line 11214
 }
 $_val = ($val | 0) == 0 ? 62856 : $val; //@line 11217
 $lst_0 = 6400; //@line 11219
 while (1) {
  $8 = HEAP32[$lst_0 >> 2] | 0; //@line 11223
  if (($8 | 0) == 0) {
   break;
  }
  if ((_msg_is_message($8, $msg) | 0) == 0) {
   $lst_0 = $lst_0 + 8 | 0; //@line 11234
  } else {
   label = 1432; //@line 11236
   break;
  }
 }
 if ((label | 0) == 1432) {
  $_0 = FUNCTION_TABLE_iiii[HEAP32[$lst_0 + 4 >> 2] & 127]($_sim, $msg, $_val) | 0; //@line 11245
  return $_0 | 0; //@line 11248
 }
 $20 = HEAP32[$_sim + 3480 >> 2] | 0; //@line 11251
 do {
  if (($20 | 0) != 0) {
   $23 = _trm_set_msg_trm($20, $msg, $_val) | 0; //@line 11256
   if (($23 | 0) > -1) {
    $_0 = $23; //@line 11260
   } else {
    break;
   }
   return $_0 | 0; //@line 11266
  }
 } while (0);
 $_0 = 1; //@line 11270
 return $_0 | 0; //@line 11273
}
function _mac_set_msg_emu_cpu_model($sim, $msg, $val) {
 $sim = $sim | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 var $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 11283
 if ((_mac_set_cpu_model($sim, $val) | 0) == 0) {
  $_0 = 0; //@line 11288
  STACKTOP = sp; //@line 11290
  return $_0 | 0; //@line 11291
 }
 _pce_log(0, 41472, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $val, tempInt) | 0); //@line 11293
 $_0 = 1; //@line 11295
 STACKTOP = sp; //@line 11297
 return $_0 | 0; //@line 11298
}
function _mac_set_msg_emu_cpu_speed($sim, $msg, $val) {
 $sim = $sim | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 var $f = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 11308
 STACKTOP = STACKTOP + 8 | 0; //@line 11308
 $f = sp | 0; //@line 11309
 if ((_msg_get_uint($val, $f) | 0) != 0) {
  $_0 = 1; //@line 11314
  STACKTOP = sp; //@line 11316
  return $_0 | 0; //@line 11317
 }
 _mac_set_speed($sim, 0, HEAP32[$f >> 2] | 0); //@line 11320
 $_0 = 0; //@line 11322
 STACKTOP = sp; //@line 11324
 return $_0 | 0; //@line 11325
}
function _mac_set_msg_emu_cpu_speed_step($sim, $msg, $val) {
 $sim = $sim | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 var $v = 0, $7 = 0, $_ = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 11336
 STACKTOP = STACKTOP + 8 | 0; //@line 11336
 $v = sp | 0; //@line 11337
 if ((_msg_get_sint($val, $v) | 0) != 0) {
  $_0 = 1; //@line 11342
  STACKTOP = sp; //@line 11344
  return $_0 | 0; //@line 11345
 }
 $7 = (HEAP32[$v >> 2] | 0) + (HEAP32[$sim + 4684 >> 2] | 0) | 0; //@line 11350
 $_ = ($7 | 0) < 1 ? 1 : $7; //@line 11352
 HEAP32[$v >> 2] = $_; //@line 11353
 _mac_set_speed($sim, 0, $_); //@line 11354
 $_0 = 0; //@line 11356
 STACKTOP = sp; //@line 11358
 return $_0 | 0; //@line 11359
}
function _mac_set_msg_emu_disk_commit($sim, $msg, $val) {
 $sim = $sim | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 var $1 = 0, $drv = 0, $4 = 0, $r_0_ph = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 11371
 STACKTOP = STACKTOP + 16 | 0; //@line 11371
 $1 = sp | 0; //@line 11372
 $drv = sp + 8 | 0; //@line 11373
 HEAP32[$1 >> 2] = $val; //@line 11374
 if ((_strcmp($val | 0, 44056) | 0) == 0) {
  _pce_log(2, 43752, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 11379
  if ((_dsks_commit(HEAP32[$sim + 3484 >> 2] | 0) | 0) == 0) {
   $_0 = 0; //@line 11386
   STACKTOP = sp; //@line 11388
   return $_0 | 0; //@line 11389
  }
  _pce_log(0, 43496, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 11391
  $_0 = 1; //@line 11393
  STACKTOP = sp; //@line 11395
  return $_0 | 0; //@line 11396
 }
 $4 = $sim + 3484 | 0; //@line 11398
 $r_0_ph = 0; //@line 11400
 L1845 : while (1) {
  do {
   if ((HEAP8[HEAP32[$1 >> 2] | 0] | 0) == 0) {
    $_0 = $r_0_ph; //@line 11409
    label = 1468; //@line 11410
    break L1845;
   }
   if ((_msg_get_prefix_uint($1, $drv, 48168, 47824) | 0) != 0) {
    break L1845;
   }
   _pce_log(2, 42864, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP32[$drv >> 2], tempInt) | 0); //@line 11420
  } while ((_dsks_set_msg(HEAP32[$4 >> 2] | 0, HEAP32[$drv >> 2] | 0, 42208, 0) | 0) == 0);
  _pce_log(0, 41864, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP32[$drv >> 2], tempInt) | 0); //@line 11431
  $r_0_ph = 1; //@line 11433
 }
 if ((label | 0) == 1468) {
  STACKTOP = sp; //@line 11437
  return $_0 | 0; //@line 11438
 }
 _pce_log(0, 43096, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP32[$1 >> 2], tempInt) | 0); //@line 11441
 $_0 = 1; //@line 11443
 STACKTOP = sp; //@line 11445
 return $_0 | 0; //@line 11446
}
function _mac_set_msg_emu_disk_eject($sim, $msg, $val) {
 $sim = $sim | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 var $1 = 0, $drv = 0, $4 = 0, $13 = 0, $15 = 0, $18 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 11458
 STACKTOP = STACKTOP + 16 | 0; //@line 11458
 $1 = sp | 0; //@line 11459
 $drv = sp + 8 | 0; //@line 11460
 HEAP32[$1 >> 2] = $val; //@line 11461
 if ((HEAP8[$val] | 0) == 0) {
  $_0 = 0; //@line 11466
  STACKTOP = sp; //@line 11468
  return $_0 | 0; //@line 11469
 }
 $4 = $sim + 3484 | 0; //@line 11471
 while (1) {
  if ((_msg_get_prefix_uint($1, $drv, 48168, 47824) | 0) != 0) {
   break;
  }
  $13 = _dsks_get_disk(HEAP32[$4 >> 2] | 0, HEAP32[$drv >> 2] | 0) | 0; //@line 11482
  $15 = HEAP32[$drv >> 2] | 0; //@line 11484
  if (($13 | 0) == 0) {
   _pce_log(0, 44640, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $15, tempInt) | 0); //@line 11487
  } else {
   _pce_log(2, 44320, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $15, tempInt) | 0); //@line 11490
   $18 = HEAP32[$4 >> 2] | 0; //@line 11491
   _dsks_rmv_disk($18, $13) | 0; //@line 11492
   _dsk_del($13); //@line 11493
  }
  if ((HEAP8[HEAP32[$1 >> 2] | 0] | 0) == 0) {
   $_0 = 0; //@line 11500
   label = 1481; //@line 11501
   break;
  }
 }
 if ((label | 0) == 1481) {
  STACKTOP = sp; //@line 11507
  return $_0 | 0; //@line 11508
 }
 _pce_log(0, 45008, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP32[$1 >> 2], tempInt) | 0); //@line 11511
 $_0 = 1; //@line 11513
 STACKTOP = sp; //@line 11515
 return $_0 | 0; //@line 11516
}
function _mac_set_msg_emu_disk_insert($sim, $msg, $val) {
 $sim = $sim | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 return (_dsk_insert(HEAP32[$sim + 3484 >> 2] | 0, $val, 1) | 0) != 0 | 0; //@line 11533
}
function _mac_set_msg_emu_disk_ro($sim, $msg, $val) {
 $sim = $sim | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 var $drv = 0, $7 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 11544
 STACKTOP = STACKTOP + 8 | 0; //@line 11544
 $drv = sp | 0; //@line 11545
 if ((_msg_get_uint($val, $drv) | 0) != 0) {
  $_0 = 1; //@line 11550
  STACKTOP = sp; //@line 11552
  return $_0 | 0; //@line 11553
 }
 $7 = _dsks_get_disk(HEAP32[$sim + 3484 >> 2] | 0, HEAP32[$drv >> 2] | 0) | 0; //@line 11558
 if (($7 | 0) == 0) {
  $_0 = 0; //@line 11562
  STACKTOP = sp; //@line 11564
  return $_0 | 0; //@line 11565
 }
 _pce_log(2, 45344, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP32[$drv >> 2], tempInt) | 0); //@line 11568
 _dsk_set_readonly($7, 1); //@line 11569
 $_0 = 0; //@line 11571
 STACKTOP = sp; //@line 11573
 return $_0 | 0; //@line 11574
}
function _mac_set_msg_emu_disk_rw($sim, $msg, $val) {
 $sim = $sim | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 var $drv = 0, $7 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 11585
 STACKTOP = STACKTOP + 8 | 0; //@line 11585
 $drv = sp | 0; //@line 11586
 if ((_msg_get_uint($val, $drv) | 0) != 0) {
  $_0 = 1; //@line 11591
  STACKTOP = sp; //@line 11593
  return $_0 | 0; //@line 11594
 }
 $7 = _dsks_get_disk(HEAP32[$sim + 3484 >> 2] | 0, HEAP32[$drv >> 2] | 0) | 0; //@line 11599
 if (($7 | 0) == 0) {
  $_0 = 0; //@line 11603
  STACKTOP = sp; //@line 11605
  return $_0 | 0; //@line 11606
 }
 _pce_log(2, 45672, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP32[$drv >> 2], tempInt) | 0); //@line 11609
 _dsk_set_readonly($7, 0); //@line 11610
 $_0 = 0; //@line 11612
 STACKTOP = sp; //@line 11614
 return $_0 | 0; //@line 11615
}
function _mac_set_msg_emu_iwm_ro($sim, $msg, $val) {
 $sim = $sim | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 var $drv = 0, $4 = 0, $7 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 11626
 STACKTOP = STACKTOP + 8 | 0; //@line 11626
 $drv = sp | 0; //@line 11627
 if ((_msg_get_uint($val, $drv) | 0) != 0) {
  $_0 = 1; //@line 11632
  STACKTOP = sp; //@line 11634
  return $_0 | 0; //@line 11635
 }
 $4 = HEAP32[$drv >> 2] | 0; //@line 11637
 if (($4 | 0) == 0) {
  _pce_log(2, 46632, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 11641
  $7 = $sim + 1760 | 0; //@line 11642
  _mac_iwm_set_locked($7, 0, 1); //@line 11643
  _mac_iwm_set_locked($7, 1, 1); //@line 11644
  _mac_iwm_set_locked($7, 2, 1); //@line 11645
  $_0 = 0; //@line 11647
  STACKTOP = sp; //@line 11649
  return $_0 | 0; //@line 11650
 } else {
  _pce_log(2, 46352, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $4, tempInt) | 0); //@line 11652
  _mac_iwm_set_locked($sim + 1760 | 0, (HEAP32[$drv >> 2] | 0) - 1 | 0, 1); //@line 11656
  $_0 = 0; //@line 11657
  STACKTOP = sp; //@line 11659
  return $_0 | 0; //@line 11660
 }
 return 0;
}
function _mac_set_msg_emu_iwm_rw($sim, $msg, $val) {
 $sim = $sim | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 var $drv = 0, $4 = 0, $7 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 11672
 STACKTOP = STACKTOP + 8 | 0; //@line 11672
 $drv = sp | 0; //@line 11673
 if ((_msg_get_uint($val, $drv) | 0) != 0) {
  $_0 = 1; //@line 11678
  STACKTOP = sp; //@line 11680
  return $_0 | 0; //@line 11681
 }
 $4 = HEAP32[$drv >> 2] | 0; //@line 11683
 if (($4 | 0) == 0) {
  _pce_log(2, 47208, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 11687
  $7 = $sim + 1760 | 0; //@line 11688
  _mac_iwm_set_locked($7, 0, 0); //@line 11689
  _mac_iwm_set_locked($7, 1, 0); //@line 11690
  _mac_iwm_set_locked($7, 2, 0); //@line 11691
  $_0 = 0; //@line 11693
  STACKTOP = sp; //@line 11695
  return $_0 | 0; //@line 11696
 } else {
  _pce_log(2, 46936, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $4, tempInt) | 0); //@line 11698
  _mac_iwm_set_locked($sim + 1760 | 0, (HEAP32[$drv >> 2] | 0) - 1 | 0, 0); //@line 11702
  $_0 = 0; //@line 11703
  STACKTOP = sp; //@line 11705
  return $_0 | 0; //@line 11706
 }
 return 0;
}
function _mac_set_msg_emu_iwm_status($sim, $msg, $val) {
 $sim = $sim | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, sp = 0;
 sp = STACKTOP; //@line 11717
 $1 = $sim + 1760 | 0; //@line 11718
 $2 = _mac_iwm_get_locked($1, 0) | 0; //@line 11719
 _pce_printf(47504, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 1, HEAP32[tempInt + 8 >> 2] = $2, tempInt) | 0); //@line 11720
 $3 = _mac_iwm_get_locked($1, 1) | 0; //@line 11721
 _pce_printf(47504, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 2, HEAP32[tempInt + 8 >> 2] = $3, tempInt) | 0); //@line 11722
 $4 = _mac_iwm_get_locked($1, 2) | 0; //@line 11723
 _pce_printf(47504, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 3, HEAP32[tempInt + 8 >> 2] = $4, tempInt) | 0); //@line 11724
 STACKTOP = sp; //@line 11725
 return 0; //@line 11726
}
function _mac_set_msg_emu_exit($sim, $msg, $val) {
 $sim = $sim | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 HEAP32[$sim + 4680 >> 2] = 2; //@line 11738
 _mon_set_terminate(62384, 1); //@line 11739
 return 0; //@line 11741
}
function _mac_set_msg_emu_pause($sim, $msg, $val) {
 $sim = $sim | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 var $v = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 11751
 STACKTOP = STACKTOP + 8 | 0; //@line 11751
 $v = sp | 0; //@line 11752
 if ((_msg_get_bool($val, $v) | 0) != 0) {
  $_0 = 1; //@line 11757
  STACKTOP = sp; //@line 11759
  return $_0 | 0; //@line 11760
 }
 _mac_set_pause($sim, HEAP32[$v >> 2] | 0); //@line 11763
 $_0 = 0; //@line 11765
 STACKTOP = sp; //@line 11767
 return $_0 | 0; //@line 11768
}
function _mac_set_msg_emu_pause_toggle($sim, $msg, $val) {
 $sim = $sim | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 _mac_set_pause($sim, (HEAP8[$sim + 4676 | 0] | 0) == 0 | 0); //@line 11783
 return 0; //@line 11785
}
function _mac_set_msg_emu_realtime($sim, $msg, $val) {
 $sim = $sim | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 var $v = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 11795
 STACKTOP = STACKTOP + 8 | 0; //@line 11795
 $v = sp | 0; //@line 11796
 if ((_msg_get_bool($val, $v) | 0) != 0) {
  $_0 = 1; //@line 11801
  STACKTOP = sp; //@line 11803
  return $_0 | 0; //@line 11804
 }
 _mac_set_speed($sim, 0, (HEAP32[$v >> 2] | 0) != 0 | 0); //@line 11809
 $_0 = 0; //@line 11811
 STACKTOP = sp; //@line 11813
 return $_0 | 0; //@line 11814
}
function _mac_set_msg_emu_realtime_toggle($sim, $msg, $val) {
 $sim = $sim | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 if ((HEAP32[$sim + 4688 >> 2] | 0) == 0) {
  _mac_set_speed($sim, 0, 1); //@line 11830
  return 0; //@line 11832
 } else {
  _mac_set_speed($sim, 0, 0); //@line 11834
  return 0; //@line 11837
 }
 return 0;
}
function _mac_set_msg_emu_reset($sim, $msg, $val) {
 $sim = $sim | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 _mac_reset($sim); //@line 11848
 return 0; //@line 11850
}
function _mac_set_msg_emu_serport_driver($sim, $msg, $val) {
 $sim = $sim | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 var $1 = 0, $idx = 0, $5 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 11861
 STACKTOP = STACKTOP + 16 | 0; //@line 11861
 $1 = sp | 0; //@line 11862
 $idx = sp + 8 | 0; //@line 11863
 HEAP32[$1 >> 2] = $val; //@line 11864
 if ((_msg_get_prefix_uint($1, $idx, 48168, 47824) | 0) != 0) {
  $_0 = 1; //@line 11869
  STACKTOP = sp; //@line 11871
  return $_0 | 0; //@line 11872
 }
 $5 = HEAP32[$idx >> 2] | 0; //@line 11874
 if ($5 >>> 0 > 1) {
  $_0 = 1; //@line 11878
  STACKTOP = sp; //@line 11880
  return $_0 | 0; //@line 11881
 }
 $_0 = (_mac_ser_set_driver($sim + 3488 + ($5 * 568 | 0) | 0, HEAP32[$1 >> 2] | 0) | 0) != 0 | 0; //@line 11889
 STACKTOP = sp; //@line 11891
 return $_0 | 0; //@line 11892
}
function _mac_rtc_time_from_string($str) {
 $str = $str | 0;
 var $s_0_i = 0, $2 = 0, $6 = 0, $v_020_i = 0, $s_119_i = 0, $10 = 0, $11 = 0, $12 = 0, $storemerge15_i = 0, $14 = 0, $16 = 0, $19 = 0, $24 = 0, $26 = 0, $i_021_i = 0, $t_020_i = 0, $30 = 0, $31 = 0, $t_0_lcssa_i = 0, $_0_i6 = 0, $_0_i = 0, $47 = 0, $s_0_i_1 = 0, $49 = 0, $51 = 0, $v_020_i_1 = 0, $s_119_i_1 = 0, $55 = 0, $56 = 0, $57 = 0, $storemerge15_i_1 = 0, $61 = 0, $s_0_i_2 = 0, $63 = 0, $65 = 0, $v_020_i_2 = 0, $s_119_i_2 = 0, $69 = 0, $70 = 0, $71 = 0, $storemerge15_i_2 = 0, $75 = 0, $s_0_i_3 = 0, $77 = 0, $79 = 0, $v_020_i_3 = 0, $s_119_i_3 = 0, $83 = 0, $84 = 0, $85 = 0, $storemerge15_i_3 = 0, $89 = 0, $s_0_i_4 = 0, $91 = 0, $93 = 0, $v_020_i_4 = 0, $s_119_i_4 = 0, $97 = 0, $98 = 0, $99 = 0, $storemerge15_i_4 = 0, $103 = 0, $s_0_i_5 = 0, $105 = 0, $107 = 0, $v_020_i_5 = 0, $s_119_i_5 = 0, $111 = 0, $112 = 0, $113 = 0, $117 = 0, $120 = 0, $_ = 0, label = 0;
 $s_0_i = $str; //@line 11921
 while (1) {
  $2 = HEAP8[$s_0_i] | 0; //@line 11924
  if (($2 - 48 & 255) <= 9) {
   $s_119_i = $s_0_i;
   $v_020_i = 0;
   $6 = $2;
   label = 1544; //@line 11930
   break;
  }
  if ($2 << 24 >> 24 == 0) {
   $14 = 0;
   $storemerge15_i = $s_0_i;
   break;
  } else {
   $s_0_i = $s_0_i + 1 | 0; //@line 11940
  }
 }
 if ((label | 0) == 1544) {
  while (1) {
   label = 0; //@line 11945
   $10 = ($6 << 24 >> 24) - 48 + ($v_020_i * 10 | 0) | 0; //@line 11952
   $11 = $s_119_i + 1 | 0; //@line 11953
   $12 = HEAP8[$11] | 0; //@line 11954
   if (($12 - 48 & 255) < 10) {
    $s_119_i = $11;
    $v_020_i = $10;
    $6 = $12;
    label = 1544; //@line 11960
   } else {
    $14 = $10;
    $storemerge15_i = $11;
    break;
   }
  }
 }
 $s_0_i_1 = $storemerge15_i; //@line 11970
 while (1) {
  $49 = HEAP8[$s_0_i_1] | 0; //@line 11973
  if (($49 - 48 & 255) <= 9) {
   $s_119_i_1 = $s_0_i_1;
   $v_020_i_1 = 0;
   $51 = $49;
   label = 1554; //@line 11979
   break;
  }
  if ($49 << 24 >> 24 == 0) {
   $61 = 0;
   $storemerge15_i_1 = $s_0_i_1;
   break;
  } else {
   $s_0_i_1 = $s_0_i_1 + 1 | 0; //@line 11989
  }
 }
 if ((label | 0) == 1554) {
  while (1) {
   label = 0; //@line 11994
   $55 = ($51 << 24 >> 24) - 48 + ($v_020_i_1 * 10 | 0) | 0; //@line 12001
   $56 = $s_119_i_1 + 1 | 0; //@line 12002
   $57 = HEAP8[$56] | 0; //@line 12003
   if (($57 - 48 & 255) < 10) {
    $s_119_i_1 = $56;
    $v_020_i_1 = $55;
    $51 = $57;
    label = 1554; //@line 12009
   } else {
    $61 = $55;
    $storemerge15_i_1 = $56;
    break;
   }
  }
 }
 $s_0_i_2 = $storemerge15_i_1; //@line 12019
 while (1) {
  $63 = HEAP8[$s_0_i_2] | 0; //@line 12022
  if (($63 - 48 & 255) <= 9) {
   $s_119_i_2 = $s_0_i_2;
   $v_020_i_2 = 0;
   $65 = $63;
   label = 1558; //@line 12028
   break;
  }
  if ($63 << 24 >> 24 == 0) {
   $75 = 0;
   $storemerge15_i_2 = $s_0_i_2;
   break;
  } else {
   $s_0_i_2 = $s_0_i_2 + 1 | 0; //@line 12038
  }
 }
 if ((label | 0) == 1558) {
  while (1) {
   label = 0; //@line 12043
   $69 = ($65 << 24 >> 24) - 48 + ($v_020_i_2 * 10 | 0) | 0; //@line 12050
   $70 = $s_119_i_2 + 1 | 0; //@line 12051
   $71 = HEAP8[$70] | 0; //@line 12052
   if (($71 - 48 & 255) < 10) {
    $s_119_i_2 = $70;
    $v_020_i_2 = $69;
    $65 = $71;
    label = 1558; //@line 12058
   } else {
    $75 = $69;
    $storemerge15_i_2 = $70;
    break;
   }
  }
 }
 $s_0_i_3 = $storemerge15_i_2; //@line 12068
 while (1) {
  $77 = HEAP8[$s_0_i_3] | 0; //@line 12071
  if (($77 - 48 & 255) <= 9) {
   $s_119_i_3 = $s_0_i_3;
   $v_020_i_3 = 0;
   $79 = $77;
   label = 1562; //@line 12077
   break;
  }
  if ($77 << 24 >> 24 == 0) {
   $89 = 0;
   $storemerge15_i_3 = $s_0_i_3;
   break;
  } else {
   $s_0_i_3 = $s_0_i_3 + 1 | 0; //@line 12087
  }
 }
 if ((label | 0) == 1562) {
  while (1) {
   label = 0; //@line 12092
   $83 = ($79 << 24 >> 24) - 48 + ($v_020_i_3 * 10 | 0) | 0; //@line 12099
   $84 = $s_119_i_3 + 1 | 0; //@line 12100
   $85 = HEAP8[$84] | 0; //@line 12101
   if (($85 - 48 & 255) < 10) {
    $s_119_i_3 = $84;
    $v_020_i_3 = $83;
    $79 = $85;
    label = 1562; //@line 12107
   } else {
    $89 = $83;
    $storemerge15_i_3 = $84;
    break;
   }
  }
 }
 $s_0_i_4 = $storemerge15_i_3; //@line 12117
 while (1) {
  $91 = HEAP8[$s_0_i_4] | 0; //@line 12120
  if (($91 - 48 & 255) <= 9) {
   $s_119_i_4 = $s_0_i_4;
   $v_020_i_4 = 0;
   $93 = $91;
   label = 1566; //@line 12126
   break;
  }
  if ($91 << 24 >> 24 == 0) {
   $103 = 0;
   $storemerge15_i_4 = $s_0_i_4;
   break;
  } else {
   $s_0_i_4 = $s_0_i_4 + 1 | 0; //@line 12136
  }
 }
 if ((label | 0) == 1566) {
  while (1) {
   label = 0; //@line 12141
   $97 = ($93 << 24 >> 24) - 48 + ($v_020_i_4 * 10 | 0) | 0; //@line 12148
   $98 = $s_119_i_4 + 1 | 0; //@line 12149
   $99 = HEAP8[$98] | 0; //@line 12150
   if (($99 - 48 & 255) < 10) {
    $s_119_i_4 = $98;
    $v_020_i_4 = $97;
    $93 = $99;
    label = 1566; //@line 12156
   } else {
    $103 = $97;
    $storemerge15_i_4 = $98;
    break;
   }
  }
 }
 $s_0_i_5 = $storemerge15_i_4; //@line 12166
 while (1) {
  $105 = HEAP8[$s_0_i_5] | 0; //@line 12169
  if (($105 - 48 & 255) <= 9) {
   $s_119_i_5 = $s_0_i_5;
   $v_020_i_5 = 0;
   $107 = $105;
   label = 1570; //@line 12175
   break;
  }
  if ($105 << 24 >> 24 == 0) {
   $117 = 0; //@line 12182
   break;
  } else {
   $s_0_i_5 = $s_0_i_5 + 1 | 0; //@line 12185
  }
 }
 if ((label | 0) == 1570) {
  while (1) {
   label = 0; //@line 12190
   $111 = ($107 << 24 >> 24) - 48 + ($v_020_i_5 * 10 | 0) | 0; //@line 12197
   $112 = $s_119_i_5 + 1 | 0; //@line 12198
   $113 = HEAP8[$112] | 0; //@line 12199
   if (($113 - 48 & 255) < 10) {
    $s_119_i_5 = $112;
    $v_020_i_5 = $111;
    $107 = $113;
    label = 1570; //@line 12205
   } else {
    $117 = $111; //@line 12207
    break;
   }
  }
 }
 $120 = ($61 | 0) == 0 ? 0 : $61 - 1 | 0; //@line 12215
 $_ = ($75 | 0) == 0 ? 0 : $75 - 1 | 0; //@line 12218
 do {
  if ($14 >>> 0 < 1904 | $120 >>> 0 > 11) {
   $_0_i6 = 0; //@line 12225
  } else {
   $16 = $14 - 1904 | 0; //@line 12227
   $19 = $16 & 3; //@line 12230
   $24 = (($16 >>> 2) * 1461 | 0) + ($19 * 365 | 0) + (($19 | 0) != 0) | 0; //@line 12235
   $26 = ($19 | 0) == 0 ? 7704 : 7656; //@line 12237
   if (($120 | 0) == 0) {
    $t_0_lcssa_i = $24; //@line 12241
   } else {
    $t_020_i = $24;
    $i_021_i = 0;
    while (1) {
     $30 = (HEAP32[$26 + ($i_021_i << 2) >> 2] | 0) + $t_020_i | 0; //@line 12249
     $31 = $i_021_i + 1 | 0; //@line 12250
     if ($31 >>> 0 < $120 >>> 0) {
      $t_020_i = $30;
      $i_021_i = $31;
     } else {
      $t_0_lcssa_i = $30; //@line 12256
      break;
     }
    }
   }
   if ((HEAP32[$26 + ($120 << 2) >> 2] | 0) >>> 0 <= $_ >>> 0) {
    $_0_i6 = 0; //@line 12267
    break;
   }
   $_0_i6 = ($t_0_lcssa_i + $_ | 0) * 86400 | 0; //@line 12273
  }
 } while (0);
 if ($89 >>> 0 > 23 | $103 >>> 0 > 59 | $117 >>> 0 > 59) {
  $_0_i = 0; //@line 12284
  $47 = $_0_i + $_0_i6 | 0; //@line 12286
  return $47 | 0; //@line 12288
 }
 $_0_i = ((($89 * 60 | 0) + $103 | 0) * 60 | 0) + $117 | 0; //@line 12295
 $47 = $_0_i + $_0_i6 | 0; //@line 12297
 return $47 | 0; //@line 12299
}
function _mac_rtc_set_data_fct($rtc, $ext, $fct) {
 $rtc = $rtc | 0;
 $ext = $ext | 0;
 $fct = $fct | 0;
 HEAP32[$rtc + 292 >> 2] = $ext; //@line 12311
 HEAP32[$rtc + 296 >> 2] = $fct; //@line 12314
 return;
}
function _mac_rtc_set_osi_fct($rtc, $ext, $fct) {
 $rtc = $rtc | 0;
 $ext = $ext | 0;
 $fct = $fct | 0;
 HEAP32[$rtc + 304 >> 2] = $ext; //@line 12328
 HEAP32[$rtc + 308 >> 2] = $fct; //@line 12331
 return;
}
function _mac_rtc_set_realtime($rtc, $realtime) {
 $rtc = $rtc | 0;
 $realtime = $realtime | 0;
 HEAP32[$rtc + 284 >> 2] = ($realtime | 0) != 0; //@line 12346
 return;
}
function _mac_set_msg_emu_serport_file($sim, $msg, $val) {
 $sim = $sim | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 var $1 = 0, $idx = 0, $5 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 12359
 STACKTOP = STACKTOP + 16 | 0; //@line 12359
 $1 = sp | 0; //@line 12360
 $idx = sp + 8 | 0; //@line 12361
 HEAP32[$1 >> 2] = $val; //@line 12362
 if ((_msg_get_prefix_uint($1, $idx, 48168, 47824) | 0) != 0) {
  $_0 = 1; //@line 12367
  STACKTOP = sp; //@line 12369
  return $_0 | 0; //@line 12370
 }
 $5 = HEAP32[$idx >> 2] | 0; //@line 12372
 if ($5 >>> 0 > 1) {
  $_0 = 1; //@line 12376
  STACKTOP = sp; //@line 12378
  return $_0 | 0; //@line 12379
 }
 $_0 = (_mac_ser_set_file($sim + 3488 + ($5 * 568 | 0) | 0, HEAP32[$1 >> 2] | 0) | 0) != 0 | 0; //@line 12387
 STACKTOP = sp; //@line 12389
 return $_0 | 0; //@line 12390
}
function _mac_set_msg_emu_stop($sim, $msg, $val) {
 $sim = $sim | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 _mac_set_msg_trm($sim, 48976, 48600) | 0; //@line 12401
 HEAP32[$sim + 4680 >> 2] = 1; //@line 12403
 return 0; //@line 12405
}
function _mac_set_msg_emu_video_brightness($sim, $msg, $val) {
 $sim = $sim | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 var $br = 0, $4 = 0, $storemerge = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 12416
 STACKTOP = STACKTOP + 8 | 0; //@line 12416
 $br = sp | 0; //@line 12417
 if ((_msg_get_uint($val, $br) | 0) != 0) {
  $_0 = 1; //@line 12422
  STACKTOP = sp; //@line 12424
  return $_0 | 0; //@line 12425
 }
 $4 = HEAP32[$br >> 2] | 0; //@line 12427
 if ($4 >>> 0 > 999) {
  $storemerge = 255; //@line 12431
 } else {
  $storemerge = ($4 << 8 >>> 0) / 1e3 | 0; //@line 12435
 }
 HEAP32[$br >> 2] = $storemerge; //@line 12438
 _mac_video_set_brightness(HEAP32[$sim + 3476 >> 2] | 0, $storemerge); //@line 12441
 $_0 = 0; //@line 12443
 STACKTOP = sp; //@line 12445
 return $_0 | 0; //@line 12446
}
function _mac_set_msg_mac_insert($sim, $msg, $val) {
 $sim = $sim | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 var $drv = 0, $3 = 0, $20 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 12458
 STACKTOP = STACKTOP + 8 | 0; //@line 12458
 $drv = sp | 0; //@line 12459
 if ((HEAP8[$val] | 0) == 0) {
  $3 = $sim + 2424 | 0; //@line 12464
  if ((HEAP8[$sim + 2426 | 0] | 0) == 0) {
   $_0 = 0; //@line 12470
   STACKTOP = sp; //@line 12472
   return $_0 | 0; //@line 12473
  }
  _mac_sony_insert($3, 1); //@line 12475
  _mac_sony_insert($3, 2); //@line 12476
  _mac_sony_insert($3, 3); //@line 12477
  $_0 = 0; //@line 12479
  STACKTOP = sp; //@line 12481
  return $_0 | 0; //@line 12482
 }
 if ((_msg_get_uint($val, $drv) | 0) != 0) {
  $_0 = 1; //@line 12488
  STACKTOP = sp; //@line 12490
  return $_0 | 0; //@line 12491
 }
 if ((HEAP8[$sim + 2426 | 0] | 0) == 0) {
  $20 = HEAP32[$drv >> 2] | 0; //@line 12499
  _mac_iwm_insert($sim + 1760 | 0, ($20 | 0) == 0 ? 0 : $20 - 1 | 0); //@line 12503
  $_0 = 0; //@line 12504
  STACKTOP = sp; //@line 12506
  return $_0 | 0; //@line 12507
 } else {
  _mac_sony_insert($sim + 2424 | 0, HEAP32[$drv >> 2] | 0); //@line 12511
  $_0 = 0; //@line 12513
  STACKTOP = sp; //@line 12515
  return $_0 | 0; //@line 12516
 }
 return 0;
}
function _mac_rtc_init($rtc) {
 $rtc = $rtc | 0;
 HEAP32[$rtc + 304 >> 2] = 0; //@line 12528
 HEAP32[$rtc + 308 >> 2] = 0; //@line 12530
 HEAP8[$rtc + 312 | 0] = 0; //@line 12532
 _memset($rtc | 0, 0, 258); //@line 12537
 _memset($rtc + 260 | 0, 0, 20); //@line 12539
 _memset($rtc + 283 | 0, 0, 18); //@line 12540
 HEAP8[$rtc + 16 | 0] = -88; //@line 12541
 HEAP8[$rtc + 19 | 0] = 34; //@line 12543
 HEAP8[$rtc + 30 | 0] = 100; //@line 12545
 HEAP8[$rtc + 8 | 0] = 24; //@line 12547
 HEAP8[$rtc + 9 | 0] = -120; //@line 12549
 HEAP8[$rtc + 11 | 0] = 32; //@line 12551
 return;
}
function _mac_rtc_load_file($rtc, $fname) {
 $rtc = $rtc | 0;
 $fname = $fname | 0;
 var $1 = 0, $6 = 0, $_0 = 0;
 $1 = _fopen($fname | 0, 46616) | 0; //@line 12564
 if (($1 | 0) == 0) {
  $_0 = 1; //@line 12568
  return $_0 | 0; //@line 12571
 }
 $6 = (_fread($rtc | 0, 1, 256, $1 | 0) | 0) == 256; //@line 12575
 _fclose($1 | 0) | 0; //@line 12576
 if (!$6) {
  $_0 = 1; //@line 12579
  return $_0 | 0; //@line 12582
 }
 HEAP8[$rtc + 256 | 0] = -128; //@line 12585
 HEAP8[$rtc + 257 | 0] = 0; //@line 12587
 $_0 = 0; //@line 12589
 return $_0 | 0; //@line 12592
}
function _mac_rtc_set_time($rtc, $time, $rel) {
 $rtc = $rtc | 0;
 $time = $time | 0;
 $rel = $rel | 0;
 var $1 = 0, $13 = 0, $15 = 0;
 $1 = _time(0) | 0; //@line 12606
 HEAP32[$rtc + 260 >> 2] = $1 + 2082844800; //@line 12609
 if (($rel | 0) == 0) {
  $13 = ((HEAPU8[$rtc + 237 | 0] | 0) << 8 | (HEAPU8[$rtc + 238 | 0] | 0)) << 8; //@line 12625
  $15 = $13 | (HEAPU8[$rtc + 239 | 0] | 0); //@line 12627
  HEAP32[$rtc + 264 >> 2] = -2082844800 - $1 + $time - (($13 & 8388608 | 0) == 0 ? $15 : $15 | -16777216); //@line 12634
  return;
 } else {
  HEAP32[$rtc + 264 >> 2] = $time; //@line 12639
  return;
 }
}
function _mac_rtc_set_time_str($rtc, $str) {
 $rtc = $rtc | 0;
 $str = $str | 0;
 var $8 = 0, $9 = 0, $16 = 0, $18 = 0;
 if (($str | 0) == 0) {
  HEAP32[$rtc + 260 >> 2] = (_time(0) | 0) + 2082844800; //@line 12662
  HEAP32[$rtc + 264 >> 2] = 0; //@line 12664
  return;
 } else {
  $8 = _mac_rtc_time_from_string($str) | 0; //@line 12669
  $9 = _time(0) | 0; //@line 12670
  HEAP32[$rtc + 260 >> 2] = $9 + 2082844800; //@line 12673
  $16 = ((HEAPU8[$rtc + 237 | 0] | 0) << 8 | (HEAPU8[$rtc + 238 | 0] | 0)) << 8; //@line 12684
  $18 = $16 | (HEAPU8[$rtc + 239 | 0] | 0); //@line 12686
  HEAP32[$rtc + 264 >> 2] = $8 - 2082844800 - $9 - (($16 & 8388608 | 0) == 0 ? $18 : $18 | -16777216); //@line 12695
  return;
 }
}
function _mac_scsi_get_uint16($ext, $addr) {
 $ext = $ext | 0;
 $addr = $addr | 0;
 return 0; //@line 12708
}
function _mac_scsi_set_disks($scsi, $dsks) {
 $scsi = $scsi | 0;
 $dsks = $dsks | 0;
 HEAP32[$scsi + 332 >> 2] = $dsks; //@line 12719
 return;
}
function _mac_scsi_set_drive_vendor($scsi, $id, $vendor) {
 $scsi = $scsi | 0;
 $id = $id | 0;
 $vendor = $vendor | 0;
 var $1 = 0, $2 = 0, $_1 = 0, $10 = 0, $_1_1 = 0, $18 = 0, $_1_2 = 0, $26 = 0, $_1_3 = 0, $34 = 0, $_1_4 = 0, $42 = 0, $_1_5 = 0, $50 = 0, $_1_6 = 0, $58 = 0, $60 = 0, $storemerge = 0;
 $1 = $id & 7; //@line 12737
 $2 = HEAP8[$vendor] | 0; //@line 12738
 if ($2 << 24 >> 24 == 0) {
  HEAP8[$scsi + 76 + ($1 << 5) + 8 | 0] = 32; //@line 12743
  $_1 = $vendor; //@line 12745
 } else {
  HEAP8[$scsi + 76 + ($1 << 5) + 8 | 0] = $2; //@line 12749
  $_1 = $vendor + 1 | 0; //@line 12750
 }
 $10 = HEAP8[$_1] | 0; //@line 12753
 if ($10 << 24 >> 24 == 0) {
  HEAP8[$scsi + 76 + ($1 << 5) + 9 | 0] = 32; //@line 12758
  $_1_1 = $_1; //@line 12760
 } else {
  HEAP8[$scsi + 76 + ($1 << 5) + 9 | 0] = $10; //@line 12764
  $_1_1 = $_1 + 1 | 0; //@line 12765
 }
 $18 = HEAP8[$_1_1] | 0; //@line 12768
 if ($18 << 24 >> 24 == 0) {
  HEAP8[$scsi + 76 + ($1 << 5) + 10 | 0] = 32; //@line 12773
  $_1_2 = $_1_1; //@line 12775
 } else {
  HEAP8[$scsi + 76 + ($1 << 5) + 10 | 0] = $18; //@line 12779
  $_1_2 = $_1_1 + 1 | 0; //@line 12780
 }
 $26 = HEAP8[$_1_2] | 0; //@line 12783
 if ($26 << 24 >> 24 == 0) {
  HEAP8[$scsi + 76 + ($1 << 5) + 11 | 0] = 32; //@line 12788
  $_1_3 = $_1_2; //@line 12790
 } else {
  HEAP8[$scsi + 76 + ($1 << 5) + 11 | 0] = $26; //@line 12794
  $_1_3 = $_1_2 + 1 | 0; //@line 12795
 }
 $34 = HEAP8[$_1_3] | 0; //@line 12798
 if ($34 << 24 >> 24 == 0) {
  HEAP8[$scsi + 76 + ($1 << 5) + 12 | 0] = 32; //@line 12803
  $_1_4 = $_1_3; //@line 12805
 } else {
  HEAP8[$scsi + 76 + ($1 << 5) + 12 | 0] = $34; //@line 12809
  $_1_4 = $_1_3 + 1 | 0; //@line 12810
 }
 $42 = HEAP8[$_1_4] | 0; //@line 12813
 if ($42 << 24 >> 24 == 0) {
  HEAP8[$scsi + 76 + ($1 << 5) + 13 | 0] = 32; //@line 12818
  $_1_5 = $_1_4; //@line 12820
 } else {
  HEAP8[$scsi + 76 + ($1 << 5) + 13 | 0] = $42; //@line 12824
  $_1_5 = $_1_4 + 1 | 0; //@line 12825
 }
 $50 = HEAP8[$_1_5] | 0; //@line 12828
 if ($50 << 24 >> 24 == 0) {
  HEAP8[$scsi + 76 + ($1 << 5) + 14 | 0] = 32; //@line 12833
  $_1_6 = $_1_5; //@line 12835
 } else {
  HEAP8[$scsi + 76 + ($1 << 5) + 14 | 0] = $50; //@line 12839
  $_1_6 = $_1_5 + 1 | 0; //@line 12840
 }
 $58 = HEAP8[$_1_6] | 0; //@line 12843
 $60 = $scsi + 76 + ($1 << 5) + 15 | 0; //@line 12845
 if ($58 << 24 >> 24 == 0) {
  $storemerge = 32; //@line 12849
  HEAP8[$60] = $storemerge; //@line 12851
  return;
 } else {
  $storemerge = $58; //@line 12855
  HEAP8[$60] = $storemerge; //@line 12857
  return;
 }
}
function _mac_scsi_set_drive_product($scsi, $id, $product) {
 $scsi = $scsi | 0;
 $id = $id | 0;
 $product = $product | 0;
 var $1 = 0, $_09 = 0, $i_08 = 0, $3 = 0, $_1 = 0, $11 = 0;
 $1 = $id & 7; //@line 12872
 $i_08 = 0;
 $_09 = $product;
 while (1) {
  $3 = HEAP8[$_09] | 0; //@line 12878
  if ($3 << 24 >> 24 == 0) {
   HEAP8[$scsi + 76 + ($1 << 5) + 16 + $i_08 | 0] = 32; //@line 12883
   $_1 = $_09; //@line 12885
  } else {
   HEAP8[$scsi + 76 + ($1 << 5) + 16 + $i_08 | 0] = $3; //@line 12889
   $_1 = $_09 + 1 | 0; //@line 12890
  }
  $11 = $i_08 + 1 | 0; //@line 12893
  if ($11 >>> 0 < 16) {
   $i_08 = $11;
   $_09 = $_1;
  } else {
   break;
  }
 }
 return;
}
function _mac_rtc_set_uint8($rtc, $val) {
 $rtc = $rtc | 0;
 $val = $val | 0;
 var $1 = 0, $2 = 0, $3 = 0, $18 = 0, $21 = 0, $22 = 0, $_lobit = 0, $26 = 0, $31 = 0, $35 = 0, $37 = 0, $42 = 0, $44 = 0, $45 = 0, $47 = 0, $50 = 0, $51 = 0, $54 = 0, $62 = 0, $92 = 0, $93 = 0, $108 = 0, $112 = 0, $140 = 0;
 $1 = $rtc + 283 | 0; //@line 12929
 $2 = HEAP8[$1] | 0; //@line 12930
 $3 = $val & 255; //@line 12931
 HEAP8[$1] = $val; //@line 12932
 if (($3 & 4 | 0) != 0) {
  HEAP32[$rtc + 272 >> 2] = 0; //@line 12938
  HEAP32[$rtc + 268 >> 2] = 0; //@line 12940
  HEAP32[$rtc + 276 >> 2] = 0; //@line 12942
  return;
 }
 if ((($3 & 2 ^ 2) & (($2 ^ $val) & 255) | 0) == 0) {
  return;
 }
 $18 = $rtc + 268 | 0; //@line 12958
 $21 = $rtc + 282 | 0; //@line 12961
 $22 = HEAP8[$21] | 0; //@line 12962
 if ((HEAP32[$18 >> 2] | 0) != 0) {
  $_lobit = ($22 & 255) >>> 7; //@line 12965
  HEAP8[$rtc + 300 | 0] = $_lobit; //@line 12967
  $26 = HEAP32[$rtc + 296 >> 2] | 0; //@line 12969
  if (($26 | 0) == 0) {
   $31 = $22; //@line 12973
  } else {
   FUNCTION_TABLE_vii[$26 & 511](HEAP32[$rtc + 292 >> 2] | 0, $_lobit); //@line 12977
   $31 = HEAP8[$21] | 0; //@line 12980
  }
  HEAP8[$21] = $31 << 1 | ($31 & 255) >>> 7; //@line 12986
  $35 = $rtc + 276 | 0; //@line 12987
  $37 = (HEAP32[$35 >> 2] | 0) + 1 | 0; //@line 12989
  HEAP32[$35 >> 2] = $37; //@line 12990
  if ($37 >>> 0 <= 7) {
   return;
  }
  HEAP32[$35 >> 2] = 0; //@line 12997
  HEAP32[$18 >> 2] = 0; //@line 12998
  HEAP32[$rtc + 272 >> 2] = 0; //@line 13000
  return;
 }
 $42 = $22 << 1; //@line 13005
 $44 = $42 | $val & 1; //@line 13007
 HEAP8[$21] = $44; //@line 13008
 $45 = $rtc + 276 | 0; //@line 13009
 $47 = (HEAP32[$45 >> 2] | 0) + 1 | 0; //@line 13011
 HEAP32[$45 >> 2] = $47; //@line 13012
 if ($47 >>> 0 <= 7) {
  return;
 }
 $50 = $rtc + 272 | 0; //@line 13019
 $51 = HEAP32[$50 >> 2] | 0; //@line 13020
 do {
  if (($51 | 0) == 0) {
   HEAP8[$rtc + 280 | 0] = $44; //@line 13024
   $54 = $44 & 255; //@line 13025
   if (($54 & 120 | 0) == 56) {
    HEAP32[$50 >> 2] = 2; //@line 13030
    break;
   }
   if (($54 & 128 | 0) == 0) {
    HEAP32[$50 >> 2] = 1; //@line 13038
    break;
   }
   $62 = $54 >>> 2; //@line 13041
   do {
    if (($54 & 227 | 0) == 129) {
     HEAP8[$21] = (HEAP32[$rtc + 260 >> 2] | 0) >>> (($62 << 3 & 24) >>> 0) & 255; //@line 13053
    } else {
     if (($54 & 243 | 0) == 161) {
      HEAP8[$21] = HEAP8[$rtc + ($62 & 3 | 8) | 0] | 0; //@line 13064
      break;
     }
     if (($54 & 195 | 0) == 193) {
      HEAP8[$21] = HEAP8[$rtc + ($62 & 15 | 16) | 0] | 0; //@line 13076
      break;
     } else {
      HEAP8[$21] = 0; //@line 13080
      break;
     }
    }
   } while (0);
   HEAP32[$50 >> 2] = 0; //@line 13085
   HEAP32[$18 >> 2] = 1; //@line 13086
  } else if (($51 | 0) == 2) {
   HEAP8[$rtc + 281 | 0] = $44; //@line 13090
   $140 = HEAP8[$rtc + 280 | 0] | 0; //@line 13092
   if ($140 << 24 >> 24 < 0) {
    HEAP8[$21] = HEAP8[$rtc + (($140 & 255) << 5 & 224 | ($42 & 255) >>> 2 & 31) | 0] | 0; //@line 13105
    HEAP32[$50 >> 2] = 0; //@line 13106
    HEAP32[$18 >> 2] = 1; //@line 13107
    break;
   } else {
    HEAP32[$50 >> 2] = 3; //@line 13111
    break;
   }
  } else if (($51 | 0) == 3) {
   if ((HEAP8[$rtc + 256 | 0] | 0) >= 0) {
    HEAP8[$rtc + (HEAPU8[$rtc + 280 | 0] << 5 & 224 | (HEAPU8[$rtc + 281 | 0] | 0) >>> 2 & 31) | 0] = $44; //@line 13132
   }
   HEAP32[$50 >> 2] = 0; //@line 13135
  } else if (($51 | 0) == 1) {
   $92 = HEAP8[$rtc + 280 | 0] | 0; //@line 13139
   $93 = $92 & 255; //@line 13140
   do {
    if ($92 << 24 >> 24 == 53) {
     HEAP8[$rtc + 256 | 0] = $42 & -128; //@line 13147
    } else {
     if ((HEAP8[$rtc + 256 | 0] | 0) < 0) {
      break;
     }
     if (($93 & 227 | 0) == 1) {
      $108 = $93 >>> 2 << 3 & 24; //@line 13163
      $112 = $rtc + 260 | 0; //@line 13167
      HEAP32[$112 >> 2] = HEAP32[$112 >> 2] & ~(255 << $108) | ($44 & 255) << $108; //@line 13172
      break;
     }
     if (($93 & 243 | 0) == 33) {
      HEAP8[$rtc + ($93 >>> 2 & 3 | 8) | 0] = $44; //@line 13184
      break;
     }
     if ($92 << 24 >> 24 == 49) {
      HEAP8[$rtc + 257 | 0] = $44; //@line 13192
      break;
     }
     if (($93 & 195 | 0) != 65) {
      break;
     }
     HEAP8[$rtc + ($93 >>> 2 & 15 | 16) | 0] = $44; //@line 13206
    }
   } while (0);
   HEAP32[$50 >> 2] = 0; //@line 13210
  }
 } while (0);
 HEAP32[$45 >> 2] = 0; //@line 13214
 return;
}
function _mac_rtc_clock($rtc, $n) {
 $rtc = $rtc | 0;
 $n = $n | 0;
 var $1 = 0, $2 = 0, $8 = 0, $13 = 0, $15 = 0, $22 = 0, $24 = 0, $26 = 0, $30 = 0, $32 = 0, $33 = 0, $35 = 0, $37 = 0, $40 = 0, $45 = 0, $50 = 0;
 $1 = $rtc + 260 | 0; //@line 13233
 $2 = HEAP32[$1 >> 2] | 0; //@line 13234
 if ((HEAP32[$rtc + 284 >> 2] | 0) == 0) {
  $24 = $rtc + 288 | 0; //@line 13240
  $26 = (HEAP32[$24 >> 2] | 0) + $n | 0; //@line 13242
  HEAP32[$24 >> 2] = $26; //@line 13243
  if ($26 >>> 0 > 7833600) {
   HEAP32[$24 >> 2] = $26 - 7833600; //@line 13248
   $30 = $2 + 1 | 0; //@line 13249
   HEAP32[$1 >> 2] = $30; //@line 13250
   $32 = $30; //@line 13252
  } else {
   $32 = $2; //@line 13254
  }
  $33 = $rtc + 264 | 0; //@line 13257
  $35 = $32 + (HEAP32[$33 >> 2] | 0) | 0; //@line 13259
  HEAP32[$1 >> 2] = $35; //@line 13260
  HEAP32[$33 >> 2] = 0; //@line 13261
  $37 = $35; //@line 13262
 } else {
  $8 = (_time(0) | 0) + 2082844800 | 0; //@line 13265
  $13 = (HEAPU8[$rtc + 237 | 0] << 8 | HEAPU8[$rtc + 238 | 0]) << 8; //@line 13276
  $15 = $13 | HEAPU8[$rtc + 239 | 0]; //@line 13278
  $22 = (($13 & 8388608 | 0) == 0 ? $15 : $15 | -16777216) + $8 + (HEAP32[$rtc + 264 >> 2] | 0) | 0; //@line 13286
  HEAP32[$1 >> 2] = $22; //@line 13287
  $37 = $22; //@line 13289
 }
 if (($37 | 0) == ($2 | 0)) {
  return;
 }
 $40 = $rtc + 312 | 0; //@line 13298
 do {
  if ((HEAP8[$40] | 0) != 1) {
   HEAP8[$40] = 1; //@line 13304
   $45 = HEAP32[$rtc + 308 >> 2] | 0; //@line 13306
   if (($45 | 0) == 0) {
    break;
   }
   FUNCTION_TABLE_vii[$45 & 511](HEAP32[$rtc + 304 >> 2] | 0, 1); //@line 13314
   if ((HEAP8[$40] | 0) != 0) {
    break;
   }
   return;
  }
 } while (0);
 HEAP8[$40] = 0; //@line 13325
 $50 = HEAP32[$rtc + 308 >> 2] | 0; //@line 13327
 if (($50 | 0) == 0) {
  return;
 }
 FUNCTION_TABLE_vii[$50 & 511](HEAP32[$rtc + 304 >> 2] | 0, 0); //@line 13336
 return;
}
function _mac_scsi_init($scsi) {
 $scsi = $scsi | 0;
 var $9 = 0;
 HEAP8[$scsi + 9 | 0] = 0; //@line 13352
 HEAP8[$scsi + 10 | 0] = 0; //@line 13354
 HEAP8[$scsi + 11 | 0] = 0; //@line 13356
 HEAP32[$scsi + 16 >> 2] = 0; //@line 13358
 HEAP32[$scsi + 20 >> 2] = 0; //@line 13360
 HEAP32[$scsi + 40 >> 2] = 0; //@line 13362
 HEAP32[$scsi + 44 >> 2] = 0; //@line 13364
 $9 = $scsi; //@line 13366
 HEAP32[$9 >> 2] = 0; //@line 13370
 HEAP32[$9 + 4 >> 2] = 0; //@line 13372
 HEAP32[$scsi + 48 >> 2] = 4096; //@line 13373
 HEAP32[$scsi + 52 >> 2] = _malloc(4096) | 0; //@line 13376
 HEAP32[$scsi + 60 >> 2] = 4080; //@line 13378
 HEAP32[$scsi + 64 >> 2] = 4; //@line 13380
 HEAP32[$scsi + 68 >> 2] = 0; //@line 13382
 HEAP32[$scsi + 72 >> 2] = 0; //@line 13384
 HEAP32[$scsi + 76 >> 2] = 0; //@line 13386
 HEAP32[$scsi + 108 >> 2] = 0; //@line 13388
 HEAP32[$scsi + 140 >> 2] = 0; //@line 13390
 HEAP32[$scsi + 172 >> 2] = 0; //@line 13392
 HEAP32[$scsi + 204 >> 2] = 0; //@line 13394
 HEAP32[$scsi + 236 >> 2] = 0; //@line 13396
 HEAP32[$scsi + 268 >> 2] = 0; //@line 13398
 HEAP32[$scsi + 300 >> 2] = 0; //@line 13400
 HEAP32[$scsi + 332 >> 2] = 0; //@line 13402
 return;
}
function _mac_scsi_set_drive($scsi, $id, $drive) {
 $scsi = $scsi | 0;
 $id = $id | 0;
 $drive = $drive | 0;
 var $1 = 0, $5 = 0, $st$1$0 = 0, $st$2$1 = 0, $6 = 0;
 $1 = $id & 7; //@line 13416
 HEAP32[$scsi + 76 + ($1 << 5) >> 2] = 1; //@line 13418
 HEAP32[$scsi + 76 + ($1 << 5) + 4 >> 2] = $drive; //@line 13420
 $5 = $scsi + 76 + ($1 << 5) + 8 | 0; //@line 13422
 $st$1$0 = $5 | 0; //@line 13425
 tempBigInt = 541410128; //@line 13426
 HEAP8[$st$1$0] = tempBigInt & 255; //@line 13426
 tempBigInt = tempBigInt >> 8; //@line 13426
 HEAP8[$st$1$0 + 1 | 0] = tempBigInt & 255; //@line 13426
 tempBigInt = tempBigInt >> 8; //@line 13426
 HEAP8[$st$1$0 + 2 | 0] = tempBigInt & 255; //@line 13426
 tempBigInt = tempBigInt >> 8; //@line 13426
 HEAP8[$st$1$0 + 3 | 0] = tempBigInt & 255; //@line 13426
 $st$2$1 = $5 + 4 | 0; //@line 13427
 tempBigInt = 538976288; //@line 13428
 HEAP8[$st$2$1] = tempBigInt & 255; //@line 13428
 tempBigInt = tempBigInt >> 8; //@line 13428
 HEAP8[$st$2$1 + 1 | 0] = tempBigInt & 255; //@line 13428
 tempBigInt = tempBigInt >> 8; //@line 13428
 HEAP8[$st$2$1 + 2 | 0] = tempBigInt & 255; //@line 13428
 tempBigInt = tempBigInt >> 8; //@line 13428
 HEAP8[$st$2$1 + 3 | 0] = tempBigInt & 255; //@line 13428
 $6 = $scsi + 76 + ($1 << 5) + 16 | 0; //@line 13429
 _memcpy($6 | 0, 55104, 16) | 0; //@line 13430
 return;
}
function _mac_scsi_get_uint8($ext, $addr) {
 $ext = $ext | 0;
 $addr = $addr | 0;
 var $8 = 0, $30 = 0, $31 = 0, $storemerge_i = 0, $35 = 0, $40 = 0, $41 = 0, $44 = 0, $51 = 0, $52 = 0, $55 = 0, $61 = 0, $66 = 0, $67 = 0, $70 = 0, $77 = 0, $78 = 0, $81 = 0, $val_0 = 0, sp = 0;
 sp = STACKTOP; //@line 13450
 $8 = (HEAP32[$ext + 60 >> 2] & $addr) >>> ((HEAP32[$ext + 64 >> 2] | 0) >>> 0); //@line 13458
 do {
  if (($8 | 0) == 2) {
   $val_0 = HEAP8[$ext + 7 | 0] | 0; //@line 13464
  } else if (($8 | 0) == 6 | ($8 | 0) == 38) {
   $35 = $ext; //@line 13466
   if ((HEAP32[$35 >> 2] | 0) != 5) {
    $val_0 = 0; //@line 13471
    break;
   }
   $40 = $ext + 40 | 0; //@line 13475
   $41 = HEAP32[$40 >> 2] | 0; //@line 13476
   $44 = HEAP32[$ext + 44 >> 2] | 0; //@line 13479
   if ($41 >>> 0 >= $44 >>> 0) {
    $val_0 = 0; //@line 13483
    break;
   }
   $51 = HEAP8[(HEAP32[$ext + 52 >> 2] | 0) + $41 | 0] | 0; //@line 13490
   $52 = $41 + 1 | 0; //@line 13491
   HEAP32[$40 >> 2] = $52; //@line 13492
   if ($52 >>> 0 < $44 >>> 0) {
    $val_0 = $51; //@line 13496
    break;
   }
   HEAP32[$35 >> 2] = 7; //@line 13499
   $55 = $ext + 9 | 0; //@line 13500
   HEAP8[$55] = HEAP8[$55] & -125 | 108; //@line 13504
   HEAP8[$ext + 5 | 0] = 0; //@line 13506
   $val_0 = $51; //@line 13508
  } else if (($8 | 0) == 1) {
   $val_0 = HEAP8[$ext + 6 | 0] | 0; //@line 13513
  } else if (($8 | 0) == 4) {
   $val_0 = HEAP8[$ext + 9 | 0] | 0; //@line 13518
  } else if (($8 | 0) == 0) {
   $val_0 = HEAP8[$ext + 5 | 0] | 0; //@line 13523
  } else if (($8 | 0) == 32) {
   $61 = $ext; //@line 13525
   if ((HEAP32[$61 >> 2] | 0) != 5) {
    $val_0 = 0; //@line 13530
    break;
   }
   $66 = $ext + 40 | 0; //@line 13534
   $67 = HEAP32[$66 >> 2] | 0; //@line 13535
   $70 = HEAP32[$ext + 44 >> 2] | 0; //@line 13538
   if ($67 >>> 0 >= $70 >>> 0) {
    $val_0 = 0; //@line 13542
    break;
   }
   $77 = HEAP8[(HEAP32[$ext + 52 >> 2] | 0) + $67 | 0] | 0; //@line 13549
   $78 = $67 + 1 | 0; //@line 13550
   HEAP32[$66 >> 2] = $78; //@line 13551
   if ($78 >>> 0 < $70 >>> 0) {
    $val_0 = $77; //@line 13555
    break;
   }
   HEAP32[$61 >> 2] = 7; //@line 13558
   $81 = $ext + 9 | 0; //@line 13559
   HEAP8[$81] = HEAP8[$81] & -125 | 108; //@line 13563
   HEAP8[$ext + 5 | 0] = 0; //@line 13565
   $val_0 = $77; //@line 13567
  } else if (($8 | 0) == 7) {
   $val_0 = -1; //@line 13569
  } else if (($8 | 0) == 5) {
   $30 = $ext + 11 | 0; //@line 13579
   $31 = HEAP8[$30] | 0; //@line 13580
   $storemerge_i = (((HEAPU8[$ext + 9 | 0] | 0) >>> 2 ^ HEAP8[$ext + 8 | 0]) & 7) == 0 ? $31 | 8 : $31 & -9; //@line 13583
   HEAP8[$30] = $storemerge_i; //@line 13584
   $val_0 = $storemerge_i; //@line 13586
  } else if (($8 | 0) == 3) {
   $val_0 = HEAP8[$ext + 8 | 0] & 15; //@line 13592
  } else {
   _mac_log_deb(48944, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $8, HEAP32[tempInt + 8 >> 2] = 255, tempInt) | 0); //@line 13594
   $val_0 = -1; //@line 13596
  }
 } while (0);
 STACKTOP = sp; //@line 13600
 return $val_0 | 0; //@line 13601
}
function _mac_scsi_set_uint16($ext, $addr, $val) {
 $ext = $ext | 0;
 $addr = $addr | 0;
 $val = $val | 0;
 return;
}
function _mac_scsi_reset($scsi) {
 $scsi = $scsi | 0;
 var $4 = 0;
 HEAP8[$scsi + 9 | 0] = 0; //@line 13623
 HEAP8[$scsi + 10 | 0] = 0; //@line 13625
 $4 = $scsi; //@line 13627
 HEAP32[$4 >> 2] = 0; //@line 13631
 HEAP32[$4 + 4 >> 2] = 0; //@line 13633
 HEAP8[$scsi + 11 | 0] = 8; //@line 13634
 HEAP8[$scsi + 12 | 0] = 0; //@line 13636
 HEAP32[$scsi + 16 >> 2] = 0; //@line 13638
 HEAP32[$scsi + 20 >> 2] = 0; //@line 13640
 HEAP32[$scsi + 40 >> 2] = 0; //@line 13642
 HEAP32[$scsi + 44 >> 2] = 0; //@line 13644
 HEAP32[$scsi + 68 >> 2] = 0; //@line 13646
 HEAP32[$scsi + 72 >> 2] = 0; //@line 13648
 return;
}
function _mac_scsi_cmd_test_unit_ready($scsi) {
 $scsi = $scsi | 0;
 var $2 = 0;
 HEAP32[$scsi >> 2] = 7; //@line 13660
 $2 = $scsi + 9 | 0; //@line 13661
 HEAP8[$2] = HEAP8[$2] & -125 | 108; //@line 13665
 HEAP8[$scsi + 5 | 0] = 0; //@line 13667
 return;
}
function _mac_scsi_cmd_format_unit($scsi) {
 $scsi = $scsi | 0;
 var $2 = 0;
 HEAP32[$scsi >> 2] = 7; //@line 13679
 $2 = $scsi + 9 | 0; //@line 13680
 HEAP8[$2] = HEAP8[$2] & -125 | 108; //@line 13684
 HEAP8[$scsi + 5 | 0] = 0; //@line 13686
 return;
}
function _mac_scsi_set_uint8($ext, $addr, $val) {
 $ext = $ext | 0;
 $addr = $addr | 0;
 $val = $val | 0;
 var $1 = 0, $9 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $26 = 0, $32 = 0, $33 = 0, $35 = 0, $43 = 0, $45 = 0, $49 = 0, $51 = 0, $54 = 0, $70 = 0, $75 = 0, $94 = 0, $99 = 0, $105 = 0, $114 = 0, $124 = 0, $126 = 0, $138 = 0, $142 = 0, $148 = 0, $154 = 0, $155 = 0, $170 = 0, $187 = 0, $193 = 0, $202 = 0, $211 = 0, $221 = 0, $230 = 0, $234 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $248 = 0, $259 = 0, $260 = 0, $i_09_i_i = 0, $_08_i_i = 0, $264 = 0, $265 = 0, $i_0_lcssa_i_i = 0, $271 = 0, $274 = 0, $280 = 0, $288 = 0, $296 = 0, $312 = 0, $328 = 0, $338 = 0, $342 = 0, $343 = 0, $349 = 0, $350 = 0, $351 = 0, $357 = 0, $365 = 0, $369 = 0, $374 = 0, $375 = 0, $377 = 0, $386 = 0, $392 = 0, $397 = 0, sp = 0;
 sp = STACKTOP; //@line 13739
 $1 = $ext; //@line 13740
 $9 = (HEAP32[$ext + 60 >> 2] & $addr) >>> ((HEAP32[$ext + 64 >> 2] | 0) >>> 0); //@line 13748
 if (($9 | 0) == 0) {
  HEAP8[$ext + 4 | 0] = $val; //@line 13751
  STACKTOP = sp; //@line 13753
  return;
 } else if (($9 | 0) == 3) {
  $342 = $ext + 8 | 0; //@line 13756
  $343 = HEAP8[$342] | 0; //@line 13757
  HEAP8[$342] = $val; //@line 13758
  if (($val & 2 & ($343 ^ 2)) << 24 >> 24 == 0) {
   STACKTOP = sp; //@line 13765
   return;
  }
  $349 = $ext; //@line 13768
  $350 = HEAP32[$349 >> 2] | 0; //@line 13769
  if (($350 | 0) == 5) {
   HEAP32[$349 >> 2] = 7; //@line 13771
   $351 = $ext + 9 | 0; //@line 13772
   HEAP8[$351] = HEAP8[$351] & -125 | 108; //@line 13776
   HEAP8[$ext + 5 | 0] = 0; //@line 13778
   STACKTOP = sp; //@line 13780
   return;
  } else if (($350 | 0) == 6) {
   HEAP32[$349 >> 2] = 7; //@line 13783
   $357 = $ext + 9 | 0; //@line 13784
   HEAP8[$357] = HEAP8[$357] & -125 | 108; //@line 13788
   HEAP8[$ext + 5 | 0] = 0; //@line 13790
   STACKTOP = sp; //@line 13792
   return;
  } else {
   STACKTOP = sp; //@line 13795
   return;
  }
 } else if (($9 | 0) == 4) {
  HEAP8[$ext + 10 | 0] = $val; //@line 13800
  STACKTOP = sp; //@line 13802
  return;
 } else if (($9 | 0) == 5) {
  $365 = $ext + 11 | 0; //@line 13805
  HEAP8[$365] = HEAP8[$365] | 64; //@line 13808
  STACKTOP = sp; //@line 13810
  return;
 } else if (($9 | 0) == 32) {
  $369 = $ext; //@line 13813
  if ((HEAP32[$369 >> 2] | 0) != 6) {
   STACKTOP = sp; //@line 13818
   return;
  }
  $374 = $ext + 40 | 0; //@line 13822
  $375 = HEAP32[$374 >> 2] | 0; //@line 13823
  $377 = $ext + 44 | 0; //@line 13825
  if ($375 >>> 0 >= (HEAP32[$377 >> 2] | 0) >>> 0) {
   STACKTOP = sp; //@line 13830
   return;
  }
  HEAP8[(HEAP32[$ext + 52 >> 2] | 0) + $375 | 0] = $val; //@line 13837
  $386 = (HEAP32[$374 >> 2] | 0) + 1 | 0; //@line 13839
  HEAP32[$374 >> 2] = $386; //@line 13840
  if ($386 >>> 0 < (HEAP32[$377 >> 2] | 0) >>> 0) {
   STACKTOP = sp; //@line 13845
   return;
  }
  $392 = HEAP32[$ext + 72 >> 2] | 0; //@line 13850
  if (($392 | 0) == 0) {
   HEAP32[$369 >> 2] = 7; //@line 13854
   $397 = $ext + 9 | 0; //@line 13855
   HEAP8[$397] = HEAP8[$397] & -125 | 108; //@line 13859
   HEAP8[$ext + 5 | 0] = 2; //@line 13861
   STACKTOP = sp; //@line 13862
   return;
  } else {
   FUNCTION_TABLE_vi[$392 & 1023]($1); //@line 13866
   STACKTOP = sp; //@line 13868
   return;
  }
 } else if (($9 | 0) == 1) {
  $13 = $val & -97; //@line 13872
  $14 = $ext + 6 | 0; //@line 13873
  $16 = $13 & 255; //@line 13875
  $17 = HEAP8[$14] ^ $13; //@line 13876
  HEAP8[$14] = $13; //@line 13877
  $18 = $ext; //@line 13878
  $19 = HEAP32[$18 >> 2] | 0; //@line 13879
  if (($19 | 0) == 4) {
   $26 = $17 & 255; //@line 13881
   if (($val & 16 & $17) << 24 >> 24 != 0) {
    $32 = $ext + 16 | 0; //@line 13888
    $33 = HEAP32[$32 >> 2] | 0; //@line 13889
    $35 = $ext + 20 | 0; //@line 13891
    if ($33 >>> 0 < (HEAP32[$35 >> 2] | 0) >>> 0) {
     HEAP8[$1 + 24 + $33 | 0] = HEAP8[$ext + 4 | 0] | 0; //@line 13899
     $43 = (HEAP32[$32 >> 2] | 0) + 1 | 0; //@line 13901
     HEAP32[$32 >> 2] = $43; //@line 13902
     $45 = $43; //@line 13904
    } else {
     $45 = $33; //@line 13906
    }
    do {
     if (($45 | 0) == 1) {
      $49 = HEAP8[$ext + 24 | 0] | 0; //@line 13914
      $51 = $ext + 68 | 0; //@line 13916
      HEAP32[$51 >> 2] = 0; //@line 13917
      HEAP32[$ext + 72 >> 2] = 0; //@line 13920
      $54 = $49 & 255; //@line 13921
      if (($54 | 0) == 0) {
       HEAP32[$35 >> 2] = 6; //@line 13923
       HEAP32[$51 >> 2] = 402; //@line 13924
       break;
      } else if (($54 | 0) == 60) {
       HEAP32[$35 >> 2] = 6; //@line 13928
       HEAP32[$51 >> 2] = 366; //@line 13929
       break;
      } else if (($54 | 0) == 40) {
       HEAP32[$35 >> 2] = 10; //@line 13933
       HEAP32[$51 >> 2] = 156; //@line 13934
       break;
      } else if (($54 | 0) == 47) {
       HEAP32[$35 >> 2] = 10; //@line 13938
       HEAP32[$51 >> 2] = 300; //@line 13939
       break;
      } else if (($54 | 0) == 42) {
       HEAP32[$35 >> 2] = 10; //@line 13943
       HEAP32[$51 >> 2] = 514; //@line 13944
       break;
      } else if (($54 | 0) == 21) {
       HEAP32[$35 >> 2] = 6; //@line 13948
       HEAP32[$51 >> 2] = 22; //@line 13949
       break;
      } else if (($54 | 0) == 26) {
       HEAP32[$35 >> 2] = 6; //@line 13953
       HEAP32[$51 >> 2] = 354; //@line 13954
       break;
      } else if (($54 | 0) == 10) {
       HEAP32[$35 >> 2] = 6; //@line 13958
       HEAP32[$51 >> 2] = 494; //@line 13959
       break;
      } else if (($54 | 0) == 3) {
       HEAP32[$35 >> 2] = 6; //@line 13963
       HEAP32[$51 >> 2] = 356; //@line 13964
       break;
      } else if (($54 | 0) == 18) {
       HEAP32[$35 >> 2] = 6; //@line 13968
       HEAP32[$51 >> 2] = 460; //@line 13969
       break;
      } else if (($54 | 0) == 4) {
       HEAP32[$35 >> 2] = 6; //@line 13973
       HEAP32[$51 >> 2] = 178; //@line 13974
       break;
      } else if (($54 | 0) == 27) {
       HEAP32[$35 >> 2] = 6; //@line 13978
       HEAP32[$51 >> 2] = 456; //@line 13979
       break;
      } else if (($54 | 0) == 8) {
       HEAP32[$35 >> 2] = 6; //@line 13983
       HEAP32[$51 >> 2] = 232; //@line 13984
       break;
      } else if (($54 | 0) == 37) {
       HEAP32[$35 >> 2] = 10; //@line 13988
       HEAP32[$51 >> 2] = 206; //@line 13989
       break;
      } else {
       _mac_log_deb(41832, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $54, tempInt) | 0); //@line 13993
       HEAP32[$18 >> 2] = 7; //@line 13994
       $70 = $ext + 9 | 0; //@line 13995
       HEAP8[$70] = HEAP8[$70] & -125 | 108; //@line 13999
       HEAP8[$ext + 5 | 0] = 2; //@line 14001
       break;
      }
     }
    } while (0);
    $75 = $ext + 9 | 0; //@line 14007
    HEAP8[$75] = HEAP8[$75] & -33; //@line 14010
   }
   if (($26 & ($16 & 16 ^ 16) | 0) == 0) {
    STACKTOP = sp; //@line 14019
    return;
   }
   if ((HEAP32[$ext + 16 >> 2] | 0) >>> 0 < (HEAP32[$ext + 20 >> 2] | 0) >>> 0) {
    $105 = $ext + 9 | 0; //@line 14031
    HEAP8[$105] = HEAP8[$105] | 32; //@line 14034
    STACKTOP = sp; //@line 14035
    return;
   }
   $94 = HEAP32[$ext + 68 >> 2] | 0; //@line 14040
   if (($94 | 0) == 0) {
    HEAP32[$18 >> 2] = 7; //@line 14044
    $99 = $ext + 9 | 0; //@line 14045
    HEAP8[$99] = HEAP8[$99] & -125 | 108; //@line 14049
    HEAP8[$ext + 5 | 0] = 2; //@line 14051
    STACKTOP = sp; //@line 14052
    return;
   } else {
    FUNCTION_TABLE_vi[$94 & 1023]($1); //@line 14056
    STACKTOP = sp; //@line 14058
    return;
   }
  } else if (($19 | 0) == 5) {
   if (($val & 16 & $17) << 24 >> 24 != 0) {
    $114 = $ext + 9 | 0; //@line 14068
    HEAP8[$114] = HEAP8[$114] & -33; //@line 14071
   }
   if (($17 & 255 & ($16 & 16 ^ 16) | 0) == 0) {
    STACKTOP = sp; //@line 14080
    return;
   }
   $124 = $ext + 40 | 0; //@line 14084
   $126 = (HEAP32[$124 >> 2] | 0) + 1 | 0; //@line 14086
   HEAP32[$124 >> 2] = $126; //@line 14087
   if ($126 >>> 0 < (HEAP32[$ext + 44 >> 2] | 0) >>> 0) {
    HEAP8[$ext + 5 | 0] = HEAP8[(HEAP32[$ext + 52 >> 2] | 0) + $126 | 0] | 0; //@line 14100
    $138 = $ext + 9 | 0; //@line 14101
    HEAP8[$138] = HEAP8[$138] | 32; //@line 14104
    STACKTOP = sp; //@line 14106
    return;
   } else {
    HEAP32[$18 >> 2] = 7; //@line 14109
    $142 = $ext + 9 | 0; //@line 14110
    HEAP8[$142] = HEAP8[$142] & -125 | 108; //@line 14114
    HEAP8[$ext + 5 | 0] = 0; //@line 14116
    STACKTOP = sp; //@line 14117
    return;
   }
  } else if (($19 | 0) == 1) {
   if (($val & 4 & $17) << 24 >> 24 == 0) {
    STACKTOP = sp; //@line 14126
    return;
   }
   HEAP32[$18 >> 2] = 2; //@line 14129
   STACKTOP = sp; //@line 14131
   return;
  } else if (($19 | 0) == 8) {
   if (($val & 16 & $17) << 24 >> 24 != 0) {
    $221 = $ext + 9 | 0; //@line 14140
    HEAP8[$221] = HEAP8[$221] & -33; //@line 14143
   }
   if (($17 & 255 & ($16 & 16 ^ 16) | 0) == 0) {
    STACKTOP = sp; //@line 14152
    return;
   }
   HEAP32[$18 >> 2] = 0; //@line 14155
   $230 = $ext + 9 | 0; //@line 14156
   HEAP8[$230] = HEAP8[$230] & -125; //@line 14159
   STACKTOP = sp; //@line 14161
   return;
  } else if (($19 | 0) == 7) {
   if (($val & 16 & $17) << 24 >> 24 != 0) {
    $202 = $ext + 9 | 0; //@line 14170
    HEAP8[$202] = HEAP8[$202] & -33; //@line 14173
   }
   if (($17 & 255 & ($16 & 16 ^ 16) | 0) == 0) {
    STACKTOP = sp; //@line 14182
    return;
   }
   HEAP32[$18 >> 2] = 8; //@line 14185
   $211 = $ext + 9 | 0; //@line 14186
   HEAP8[$211] = HEAP8[$211] | 124; //@line 14189
   HEAP8[$ext + 5 | 0] = 0; //@line 14191
   STACKTOP = sp; //@line 14193
   return;
  } else if (($19 | 0) == 6) {
   $148 = $17 & 255; //@line 14196
   if (($val & 16 & $17) << 24 >> 24 != 0) {
    $154 = $ext + 40 | 0; //@line 14203
    $155 = HEAP32[$154 >> 2] | 0; //@line 14204
    if ($155 >>> 0 < (HEAP32[$ext + 44 >> 2] | 0) >>> 0) {
     HEAP8[(HEAP32[$ext + 52 >> 2] | 0) + $155 | 0] = HEAP8[$ext + 4 | 0] | 0; //@line 14217
     HEAP32[$154 >> 2] = (HEAP32[$154 >> 2] | 0) + 1; //@line 14220
    }
    $170 = $ext + 9 | 0; //@line 14223
    HEAP8[$170] = HEAP8[$170] & -33; //@line 14226
   }
   if (($148 & ($16 & 16 ^ 16) | 0) == 0) {
    STACKTOP = sp; //@line 14235
    return;
   }
   if ((HEAP32[$ext + 40 >> 2] | 0) >>> 0 < (HEAP32[$ext + 44 >> 2] | 0) >>> 0) {
    $193 = $ext + 9 | 0; //@line 14247
    HEAP8[$193] = HEAP8[$193] | 32; //@line 14250
    STACKTOP = sp; //@line 14251
    return;
   } else {
    HEAP32[$18 >> 2] = 7; //@line 14254
    $187 = $ext + 9 | 0; //@line 14255
    HEAP8[$187] = HEAP8[$187] & -125 | 108; //@line 14259
    HEAP8[$ext + 5 | 0] = 2; //@line 14261
    STACKTOP = sp; //@line 14263
    return;
   }
  } else {
   STACKTOP = sp; //@line 14267
   return;
  }
 } else if (($9 | 0) == 6 | ($9 | 0) == 7) {
  STACKTOP = sp; //@line 14271
  return;
 } else if (($9 | 0) == 2) {
  $234 = $ext + 7 | 0; //@line 14274
  $236 = $val & 255; //@line 14276
  $237 = HEAP8[$234] ^ $val; //@line 14277
  HEAP8[$234] = $val; //@line 14278
  $238 = $ext; //@line 14279
  $239 = HEAP32[$238 >> 2] | 0; //@line 14280
  L2325 : do {
   if (($239 | 0) == 2) {
    if (($237 & 255 & ($236 & 1 ^ 1) | 0) == 0) {
     break;
    }
    $259 = HEAP8[$ext + 4 | 0] | 0; //@line 14293
    $260 = $259 & 127; //@line 14294
    if ($260 << 24 >> 24 != 0 & ($259 & 1) == 0) {
     $_08_i_i = $260;
     $i_09_i_i = 0;
     while (1) {
      $264 = $i_09_i_i + 1 | 0; //@line 14305
      $265 = ($_08_i_i & 255) >>> 1; //@line 14306
      if ($265 << 24 >> 24 != 0 & ($265 & 1) == 0) {
       $_08_i_i = $265;
       $i_09_i_i = $264;
      } else {
       $i_0_lcssa_i_i = $264; //@line 14315
       break;
      }
     }
    } else {
     $i_0_lcssa_i_i = 0; //@line 14320
    }
    HEAP32[$ext + 56 >> 2] = $i_0_lcssa_i_i; //@line 14325
    $271 = $ext + 6 | 0; //@line 14326
    HEAP8[$271] = HEAP8[$271] & -9; //@line 14329
    $274 = $i_0_lcssa_i_i & 7; //@line 14330
    do {
     if ((HEAP32[$1 + 76 + ($274 << 5) >> 2] | 0) != 0) {
      $280 = HEAP32[$1 + 76 + ($274 << 5) + 4 >> 2] | 0; //@line 14338
      if (($280 | 0) == 65535) {
       break;
      }
      if ((_dsks_get_disk(HEAP32[$ext + 332 >> 2] | 0, $280) | 0) == 0) {
       break;
      }
      HEAP32[$238 >> 2] = 4; //@line 14353
      $288 = $ext + 9 | 0; //@line 14354
      HEAP8[$288] = HEAP8[$288] & -125 | 104; //@line 14358
      HEAP32[$ext + 16 >> 2] = 0; //@line 14361
      HEAP32[$ext + 20 >> 2] = 16; //@line 14364
      break L2325;
     }
    } while (0);
    HEAP32[$238 >> 2] = 0; //@line 14369
    $296 = $ext + 9 | 0; //@line 14370
    HEAP8[$296] = HEAP8[$296] & -125; //@line 14373
   } else if (($239 | 0) == 5) {
    if (($val & 2 & $237) << 24 >> 24 == 0) {
     break;
    }
    if ((HEAP32[$ext + 40 >> 2] | 0) >>> 0 >= (HEAP32[$ext + 44 >> 2] | 0) >>> 0) {
     break;
    }
    $312 = $ext + 11 | 0; //@line 14393
    HEAP8[$312] = HEAP8[$312] | 64; //@line 14396
   } else if (($239 | 0) == 6) {
    if (($val & 2 & $237) << 24 >> 24 == 0) {
     break;
    }
    if ((HEAP32[$ext + 40 >> 2] | 0) >>> 0 >= (HEAP32[$ext + 44 >> 2] | 0) >>> 0) {
     break;
    }
    $328 = $ext + 11 | 0; //@line 14417
    HEAP8[$328] = HEAP8[$328] | 64; //@line 14420
   } else if (($239 | 0) == 0) {
    if (($val & 1 & $237) << 24 >> 24 == 0) {
     break;
    }
    HEAP32[$238 >> 2] = 1; //@line 14430
    HEAP8[$ext + 5 | 0] = HEAP8[$ext + 4 | 0] | 0; //@line 14434
    $248 = $ext + 6 | 0; //@line 14435
    HEAP8[$248] = HEAP8[$248] | 64; //@line 14438
   }
  } while (0);
  if (($237 & 255 & ($236 & 2 ^ 2) | 0) == 0) {
   STACKTOP = sp; //@line 14449
   return;
  }
  $338 = $ext + 11 | 0; //@line 14452
  HEAP8[$338] = HEAP8[$338] & -65; //@line 14455
  STACKTOP = sp; //@line 14457
  return;
 } else {
  _mac_log_deb(45304, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $9, HEAP32[tempInt + 8 >> 2] = $val & 255, tempInt) | 0); //@line 14461
  STACKTOP = sp; //@line 14463
  return;
 }
}
function _mac_scsi_cmd_sense($scsi) {
 $scsi = $scsi | 0;
 var $1 = 0, $7 = 0;
 $1 = $scsi + 52 | 0; //@line 14475
 _memset(HEAP32[$1 >> 2] | 0, 0, 13); //@line 14477
 HEAP8[HEAP32[$1 >> 2] | 0] = -16; //@line 14479
 HEAP32[$scsi + 40 >> 2] = 0; //@line 14481
 HEAP32[$scsi + 44 >> 2] = 13; //@line 14483
 HEAP32[$scsi >> 2] = 5; //@line 14485
 $7 = $scsi + 9 | 0; //@line 14486
 HEAP8[$7] = HEAP8[$7] & -125 | 100; //@line 14490
 HEAP8[$scsi + 5 | 0] = HEAP8[HEAP32[$1 >> 2] | 0] | 0; //@line 14494
 return;
}
function _mac_scsi_cmd_read6($scsi) {
 $scsi = $scsi | 0;
 var $16 = 0;
 $16 = HEAP8[$scsi + 28 | 0] | 0; //@line 14522
 _mac_scsi_cmd_read($scsi, ((HEAPU8[$scsi + 25 | 0] | 0) << 8 & 7936 | (HEAPU8[$scsi + 26 | 0] | 0)) << 8 | (HEAPU8[$scsi + 27 | 0] | 0), $16 << 24 >> 24 == 0 ? 256 : $16 & 255); //@line 14526
 return;
}
function _mac_scsi_cmd_write6($scsi) {
 $scsi = $scsi | 0;
 var $2 = 0, $_ = 0, $5 = 0, $6 = 0, $10 = 0, $12 = 0, $17 = 0, $27 = 0, sp = 0;
 sp = STACKTOP; //@line 14539
 $2 = HEAP8[$scsi + 28 | 0] | 0; //@line 14541
 $_ = $2 << 24 >> 24 == 0 ? 256 : $2 & 255; //@line 14544
 $5 = $_ << 9; //@line 14545
 $6 = $scsi + 48 | 0; //@line 14546
 do {
  if ((HEAP32[$6 >> 2] | 0) >>> 0 < $5 >>> 0) {
   $10 = $scsi + 52 | 0; //@line 14552
   $12 = _realloc(HEAP32[$10 >> 2] | 0, $5) | 0; //@line 14554
   if (($12 | 0) != 0) {
    HEAP32[$10 >> 2] = $12; //@line 14558
    HEAP32[$6 >> 2] = $5; //@line 14559
    break;
   }
   _mac_log_deb(38808, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $_, tempInt) | 0); //@line 14563
   HEAP32[$scsi >> 2] = 7; //@line 14565
   $17 = $scsi + 9 | 0; //@line 14566
   HEAP8[$17] = HEAP8[$17] & -125 | 108; //@line 14570
   HEAP8[$scsi + 5 | 0] = 2; //@line 14572
   STACKTOP = sp; //@line 14574
   return;
  }
 } while (0);
 HEAP32[$scsi + 40 >> 2] = 0; //@line 14579
 HEAP32[$scsi + 44 >> 2] = $5; //@line 14581
 HEAP32[$scsi + 72 >> 2] = 144; //@line 14583
 HEAP32[$scsi >> 2] = 6; //@line 14585
 $27 = $scsi + 9 | 0; //@line 14586
 HEAP8[$27] = HEAP8[$27] & -125 | 96; //@line 14590
 STACKTOP = sp; //@line 14592
 return;
}
function _mac_scsi_cmd_mode_select($scsi) {
 $scsi = $scsi | 0;
 var $4 = 0;
 HEAP32[$scsi + 40 >> 2] = 0; //@line 14603
 HEAP32[$scsi + 44 >> 2] = 0; //@line 14605
 HEAP32[$scsi >> 2] = 6; //@line 14607
 $4 = $scsi + 9 | 0; //@line 14608
 HEAP8[$4] = HEAP8[$4] & -125 | 96; //@line 14612
 return;
}
function _mac_scsi_cmd_inquiry($scsi) {
 $scsi = $scsi | 0;
 var $4 = 0, $__i = 0, $8 = 0, $15 = 0, $16 = 0, $ld$0$0 = 0, $ld$1$1 = 0, $17$1 = 0, $st$2$0 = 0, $st$3$1 = 0, $19 = 0, $20 = 0, $26 = 0, $32 = 0;
 $4 = $scsi + 76 + ((HEAP32[$scsi + 56 >> 2] & 7) << 5) | 0; //@line 14631
 $__i = (HEAP32[$4 >> 2] | 0) == 0 ? 0 : $4; //@line 14635
 $8 = $scsi + 52 | 0; //@line 14636
 _memset(HEAP32[$8 >> 2] | 0, 0, 256); //@line 14638
 if (($__i | 0) != 0) {
  $15 = $__i + 8 | 0; //@line 14645
  $16 = (HEAP32[$8 >> 2] | 0) + 8 | 0; //@line 14646
  $ld$0$0 = $15 | 0; //@line 14647
  $ld$1$1 = $15 + 4 | 0; //@line 14649
  $17$1 = HEAPU8[$ld$1$1] | HEAPU8[$ld$1$1 + 1 | 0] << 8 | HEAPU8[$ld$1$1 + 2 | 0] << 16 | HEAPU8[$ld$1$1 + 3 | 0] << 24 | 0; //@line 14650
  $st$2$0 = $16 | 0; //@line 14651
  tempBigInt = HEAPU8[$ld$0$0] | HEAPU8[$ld$0$0 + 1 | 0] << 8 | HEAPU8[$ld$0$0 + 2 | 0] << 16 | HEAPU8[$ld$0$0 + 3 | 0] << 24 | 0; //@line 14652
  HEAP8[$st$2$0] = tempBigInt & 255; //@line 14652
  tempBigInt = tempBigInt >> 8; //@line 14652
  HEAP8[$st$2$0 + 1 | 0] = tempBigInt & 255; //@line 14652
  tempBigInt = tempBigInt >> 8; //@line 14652
  HEAP8[$st$2$0 + 2 | 0] = tempBigInt & 255; //@line 14652
  tempBigInt = tempBigInt >> 8; //@line 14652
  HEAP8[$st$2$0 + 3 | 0] = tempBigInt & 255; //@line 14652
  $st$3$1 = $16 + 4 | 0; //@line 14653
  tempBigInt = $17$1; //@line 14654
  HEAP8[$st$3$1] = tempBigInt & 255; //@line 14654
  tempBigInt = tempBigInt >> 8; //@line 14654
  HEAP8[$st$3$1 + 1 | 0] = tempBigInt & 255; //@line 14654
  tempBigInt = tempBigInt >> 8; //@line 14654
  HEAP8[$st$3$1 + 2 | 0] = tempBigInt & 255; //@line 14654
  tempBigInt = tempBigInt >> 8; //@line 14654
  HEAP8[$st$3$1 + 3 | 0] = tempBigInt & 255; //@line 14654
  $19 = (HEAP32[$8 >> 2] | 0) + 16 | 0; //@line 14656
  $20 = $__i + 16 | 0; //@line 14657
  _memcpy($19 | 0, $20 | 0, 16) | 0; //@line 14658
 }
 HEAP8[(HEAP32[$8 >> 2] | 0) + 4 | 0] = 32; //@line 14663
 HEAP32[$scsi + 40 >> 2] = 0; //@line 14665
 $26 = HEAP8[$scsi + 28 | 0] | 0; //@line 14667
 HEAP32[$scsi + 44 >> 2] = ($26 & 255) < 36 ? $26 & 255 : 36; //@line 14672
 HEAP32[$scsi >> 2] = 5; //@line 14674
 $32 = $scsi + 9 | 0; //@line 14675
 HEAP8[$32] = HEAP8[$32] & -125 | 100; //@line 14679
 HEAP8[$scsi + 5 | 0] = HEAP8[HEAP32[$8 >> 2] | 0] | 0; //@line 14683
 return;
}
function _mac_scsi_cmd_mode_sense($scsi) {
 $scsi = $scsi | 0;
 var $3 = 0, $9 = 0, $13 = 0, $16 = 0, $22 = 0, $24 = 0, $25 = 0, $28 = 0, $29 = 0, $59 = 0, $63 = 0, $74 = 0, sp = 0;
 sp = STACKTOP; //@line 14701
 $3 = HEAP32[$scsi + 56 >> 2] & 7; //@line 14704
 do {
  if ((HEAP32[$scsi + 76 + ($3 << 5) >> 2] | 0) != 0) {
   $9 = HEAP32[$scsi + 76 + ($3 << 5) + 4 >> 2] | 0; //@line 14712
   if (($9 | 0) == 65535) {
    break;
   }
   $13 = _dsks_get_disk(HEAP32[$scsi + 332 >> 2] | 0, $9) | 0; //@line 14720
   if (($13 | 0) == 0) {
    break;
   }
   $22 = $scsi + 52 | 0; //@line 14726
   _memset(HEAP32[$22 >> 2] | 0, 0, 512); //@line 14728
   $24 = $scsi + 40 | 0; //@line 14729
   HEAP32[$24 >> 2] = 0; //@line 14730
   $25 = $scsi + 44 | 0; //@line 14731
   HEAP32[$25 >> 2] = 0; //@line 14732
   $28 = HEAPU8[$scsi + 26 | 0] | 0; //@line 14735
   $29 = $28 & 63; //@line 14736
   do {
    if (($29 | 0) == 1) {
     HEAP8[HEAP32[$22 >> 2] | 0] = 1; //@line 14740
     HEAP8[(HEAP32[$22 >> 2] | 0) + 1 | 0] = 10; //@line 14743
     HEAP32[$25 >> 2] = 12; //@line 14744
    } else if (($29 | 0) == 3) {
     HEAP8[HEAP32[$22 >> 2] | 0] = 3; //@line 14748
     HEAP8[(HEAP32[$22 >> 2] | 0) + 1 | 0] = 22; //@line 14751
     HEAP32[$25 >> 2] = 24; //@line 14752
    } else if (($29 | 0) == 4) {
     HEAP8[HEAP32[$22 >> 2] | 0] = 4; //@line 14756
     HEAP8[(HEAP32[$22 >> 2] | 0) + 1 | 0] = 22; //@line 14759
     HEAP8[(HEAP32[$22 >> 2] | 0) + 2 | 0] = 0; //@line 14762
     _buf_set_uint16_be(HEAP32[$22 >> 2] | 0, 3, HEAP32[$13 + 32 >> 2] & 65535); //@line 14767
     HEAP8[(HEAP32[$22 >> 2] | 0) + 5 | 0] = HEAP32[$13 + 36 >> 2] & 255; //@line 14773
     _buf_set_uint16_be(HEAP32[$22 >> 2] | 0, 20, 3600); //@line 14775
     HEAP32[$25 >> 2] = 32; //@line 14776
    } else if (($29 | 0) == 48) {
     HEAP8[HEAP32[$22 >> 2] | 0] = 48; //@line 14780
     HEAP8[(HEAP32[$22 >> 2] | 0) + 1 | 0] = 33; //@line 14783
     $59 = (HEAP32[$22 >> 2] | 0) + 14 | 0; //@line 14785
     _memcpy($59 | 0, 53696, 20) | 0; //@line 14786
     HEAP32[$25 >> 2] = 34; //@line 14787
    } else {
     _mac_log_deb(53040, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $28, tempInt) | 0); //@line 14790
     if ((HEAP32[$25 >> 2] | 0) != 0) {
      break;
     }
     HEAP32[$scsi >> 2] = 7; //@line 14798
     $74 = $scsi + 9 | 0; //@line 14799
     HEAP8[$74] = HEAP8[$74] & -125 | 108; //@line 14803
     HEAP8[$scsi + 5 | 0] = 2; //@line 14805
     STACKTOP = sp; //@line 14806
     return;
    }
   } while (0);
   HEAP32[$scsi >> 2] = 5; //@line 14811
   $63 = $scsi + 9 | 0; //@line 14812
   HEAP8[$63] = HEAP8[$63] & -125 | 100; //@line 14816
   HEAP8[$scsi + 5 | 0] = HEAP8[(HEAP32[$22 >> 2] | 0) + (HEAP32[$24 >> 2] | 0) | 0] | 0; //@line 14822
   STACKTOP = sp; //@line 14824
   return;
  }
 } while (0);
 HEAP32[$scsi >> 2] = 7; //@line 14829
 $16 = $scsi + 9 | 0; //@line 14830
 HEAP8[$16] = HEAP8[$16] & -125 | 108; //@line 14834
 HEAP8[$scsi + 5 | 0] = 2; //@line 14836
 STACKTOP = sp; //@line 14838
 return;
}
function _mac_scsi_cmd_start_stop($scsi) {
 $scsi = $scsi | 0;
 var $4 = 0, $str_0 = 0, $13 = 0, sp = 0;
 sp = STACKTOP; //@line 14848
 $4 = HEAP8[$scsi + 28 | 0] & 3; //@line 14852
 if (($4 | 0) == 3) {
  $str_0 = 55048; //@line 14855
 } else if (($4 | 0) == 2) {
  $str_0 = 55712; //@line 14858
 } else if (($4 | 0) == 1) {
  $str_0 = 56888; //@line 14861
 } else if (($4 | 0) == 0) {
  $str_0 = 57720; //@line 14864
 } else {
  $str_0 = 0; //@line 14866
 }
 _mac_log_deb(54312, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = HEAP32[$scsi + 56 >> 2], HEAP32[tempInt + 8 >> 2] = $str_0, tempInt) | 0); //@line 14871
 HEAP32[$scsi >> 2] = 7; //@line 14873
 $13 = $scsi + 9 | 0; //@line 14874
 HEAP8[$13] = HEAP8[$13] & -125 | 108; //@line 14878
 HEAP8[$scsi + 5 | 0] = 0; //@line 14880
 STACKTOP = sp; //@line 14881
 return;
}
function _mac_scsi_cmd_read_capacity($scsi) {
 $scsi = $scsi | 0;
 var $3 = 0, $9 = 0, $13 = 0, $16 = 0, $22 = 0, $23 = 0, $30 = 0;
 $3 = HEAP32[$scsi + 56 >> 2] & 7; //@line 14897
 do {
  if ((HEAP32[$scsi + 76 + ($3 << 5) >> 2] | 0) != 0) {
   $9 = HEAP32[$scsi + 76 + ($3 << 5) + 4 >> 2] | 0; //@line 14905
   if (($9 | 0) == 65535) {
    break;
   }
   $13 = _dsks_get_disk(HEAP32[$scsi + 332 >> 2] | 0, $9) | 0; //@line 14913
   if (($13 | 0) == 0) {
    break;
   }
   $22 = _dsk_get_block_cnt($13) | 0; //@line 14919
   $23 = $scsi + 52 | 0; //@line 14920
   _buf_set_uint32_be(HEAP32[$23 >> 2] | 0, 0, $22 - 1 | 0); //@line 14923
   _buf_set_uint32_be(HEAP32[$23 >> 2] | 0, 4, 512); //@line 14925
   HEAP32[$scsi + 40 >> 2] = 0; //@line 14927
   HEAP32[$scsi + 44 >> 2] = 8; //@line 14929
   HEAP32[$scsi >> 2] = 5; //@line 14931
   $30 = $scsi + 9 | 0; //@line 14932
   HEAP8[$30] = HEAP8[$30] & -125 | 100; //@line 14936
   HEAP8[$scsi + 5 | 0] = HEAP8[HEAP32[$23 >> 2] | 0] | 0; //@line 14940
   return;
  }
 } while (0);
 HEAP32[$scsi >> 2] = 7; //@line 14947
 $16 = $scsi + 9 | 0; //@line 14948
 HEAP8[$16] = HEAP8[$16] & -125 | 108; //@line 14952
 HEAP8[$scsi + 5 | 0] = 2; //@line 14954
 return;
}
function _mac_scsi_cmd_read10($scsi) {
 $scsi = $scsi | 0;
 _mac_scsi_cmd_read($scsi, (((HEAPU8[$scsi + 26 | 0] | 0) << 8 | (HEAPU8[$scsi + 27 | 0] | 0)) << 8 | (HEAPU8[$scsi + 28 | 0] | 0)) << 8 | (HEAPU8[$scsi + 29 | 0] | 0), (HEAPU8[$scsi + 31 | 0] | 0) << 8 | (HEAPU8[$scsi + 32 | 0] | 0)); //@line 14995
 return;
}
function _mac_scsi_cmd_write10($scsi) {
 $scsi = $scsi | 0;
 var $8 = 0, $9 = 0, $10 = 0, $14 = 0, $16 = 0, $21 = 0, $31 = 0, sp = 0;
 sp = STACKTOP; //@line 15008
 $8 = (HEAPU8[$scsi + 31 | 0] | 0) << 8 | (HEAPU8[$scsi + 32 | 0] | 0); //@line 15016
 $9 = $8 << 9; //@line 15017
 $10 = $scsi + 48 | 0; //@line 15018
 do {
  if ((HEAP32[$10 >> 2] | 0) >>> 0 < $9 >>> 0) {
   $14 = $scsi + 52 | 0; //@line 15024
   $16 = _realloc(HEAP32[$14 >> 2] | 0, $9) | 0; //@line 15026
   if (($16 | 0) != 0) {
    HEAP32[$14 >> 2] = $16; //@line 15030
    HEAP32[$10 >> 2] = $9; //@line 15031
    break;
   }
   _mac_log_deb(38808, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $8, tempInt) | 0); //@line 15035
   HEAP32[$scsi >> 2] = 7; //@line 15037
   $21 = $scsi + 9 | 0; //@line 15038
   HEAP8[$21] = HEAP8[$21] & -125 | 108; //@line 15042
   HEAP8[$scsi + 5 | 0] = 2; //@line 15044
   STACKTOP = sp; //@line 15046
   return;
  }
 } while (0);
 HEAP32[$scsi + 40 >> 2] = 0; //@line 15051
 HEAP32[$scsi + 44 >> 2] = $9; //@line 15053
 HEAP32[$scsi + 72 >> 2] = 520; //@line 15055
 HEAP32[$scsi >> 2] = 6; //@line 15057
 $31 = $scsi + 9 | 0; //@line 15058
 HEAP8[$31] = HEAP8[$31] & -125 | 96; //@line 15062
 STACKTOP = sp; //@line 15064
 return;
}
function _mac_scsi_cmd_verify10($scsi) {
 $scsi = $scsi | 0;
 var $3 = 0, $9 = 0, $16 = 0, $25 = 0;
 $3 = HEAP32[$scsi + 56 >> 2] & 7; //@line 15079
 do {
  if ((HEAP32[$scsi + 76 + ($3 << 5) >> 2] | 0) != 0) {
   $9 = HEAP32[$scsi + 76 + ($3 << 5) + 4 >> 2] | 0; //@line 15087
   if (($9 | 0) == 65535) {
    break;
   }
   if ((_dsks_get_disk(HEAP32[$scsi + 332 >> 2] | 0, $9) | 0) == 0) {
    break;
   }
   HEAP32[$scsi + 40 >> 2] = 0; //@line 15102
   HEAP32[$scsi + 44 >> 2] = 0; //@line 15104
   HEAP32[$scsi >> 2] = 7; //@line 15106
   $25 = $scsi + 9 | 0; //@line 15107
   HEAP8[$25] = HEAP8[$25] & -125 | 108; //@line 15111
   HEAP8[$scsi + 5 | 0] = 0; //@line 15113
   return;
  }
 } while (0);
 HEAP32[$scsi >> 2] = 7; //@line 15120
 $16 = $scsi + 9 | 0; //@line 15121
 HEAP8[$16] = HEAP8[$16] & -125 | 108; //@line 15125
 HEAP8[$scsi + 5 | 0] = 2; //@line 15127
 return;
}
function _mac_scsi_cmd_read_buffer($scsi) {
 $scsi = $scsi | 0;
 var $1 = 0, $6 = 0;
 $1 = $scsi + 52 | 0; //@line 15140
 _memset(HEAP32[$1 >> 2] | 0, 0, 512); //@line 15142
 HEAP32[$scsi + 40 >> 2] = 0; //@line 15144
 HEAP32[$scsi + 44 >> 2] = 4; //@line 15146
 HEAP32[$scsi >> 2] = 5; //@line 15148
 $6 = $scsi + 9 | 0; //@line 15149
 HEAP8[$6] = HEAP8[$6] & -125 | 100; //@line 15153
 HEAP8[$scsi + 5 | 0] = HEAP8[HEAP32[$1 >> 2] | 0] | 0; //@line 15157
 return;
}
function _mac_scsi_cmd_write10_finish($scsi) {
 $scsi = $scsi | 0;
 _mac_scsi_cmd_write_finish($scsi, (((HEAPU8[$scsi + 26 | 0] | 0) << 8 | (HEAPU8[$scsi + 27 | 0] | 0)) << 8 | (HEAPU8[$scsi + 28 | 0] | 0)) << 8 | (HEAPU8[$scsi + 29 | 0] | 0), (HEAPU8[$scsi + 31 | 0] | 0) << 8 | (HEAPU8[$scsi + 32 | 0] | 0)); //@line 15197
 return;
}
function _mac_scsi_cmd_write_finish($scsi, $lba, $cnt) {
 $scsi = $scsi | 0;
 $lba = $lba | 0;
 $cnt = $cnt | 0;
 var $3 = 0, $9 = 0, $13 = 0, $16 = 0, $22 = 0, $23 = 0, $24 = 0, $28 = 0, $40 = 0, $49 = 0, sp = 0;
 sp = STACKTOP; //@line 15214
 $3 = HEAP32[$scsi + 56 >> 2] & 7; //@line 15217
 do {
  if ((HEAP32[$scsi + 76 + ($3 << 5) >> 2] | 0) != 0) {
   $9 = HEAP32[$scsi + 76 + ($3 << 5) + 4 >> 2] | 0; //@line 15225
   if (($9 | 0) == 65535) {
    break;
   }
   $13 = _dsks_get_disk(HEAP32[$scsi + 332 >> 2] | 0, $9) | 0; //@line 15233
   if (($13 | 0) == 0) {
    break;
   }
   $22 = $cnt << 9; //@line 15239
   $23 = $scsi + 40 | 0; //@line 15240
   $24 = HEAP32[$23 >> 2] | 0; //@line 15241
   if (($22 | 0) != ($24 | 0)) {
    _mac_log_deb(35904, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $22, HEAP32[tempInt + 8 >> 2] = $24, tempInt) | 0); //@line 15245
    HEAP32[$scsi >> 2] = 7; //@line 15247
    $28 = $scsi + 9 | 0; //@line 15248
    HEAP8[$28] = HEAP8[$28] & -125 | 108; //@line 15252
    HEAP8[$scsi + 5 | 0] = 2; //@line 15254
    STACKTOP = sp; //@line 15256
    return;
   }
   if ((_dsk_write_lba($13, HEAP32[$scsi + 52 >> 2] | 0, $lba, $cnt) | 0) == 0) {
    HEAP32[$23 >> 2] = 0; //@line 15265
    HEAP32[$scsi + 44 >> 2] = 0; //@line 15267
    HEAP32[$scsi + 72 >> 2] = 0; //@line 15269
    HEAP32[$scsi >> 2] = 7; //@line 15271
    $49 = $scsi + 9 | 0; //@line 15272
    HEAP8[$49] = HEAP8[$49] & -125 | 108; //@line 15276
    HEAP8[$scsi + 5 | 0] = 0; //@line 15278
    STACKTOP = sp; //@line 15280
    return;
   } else {
    _mac_log_deb(32904, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 15283
    HEAP32[$scsi >> 2] = 7; //@line 15285
    $40 = $scsi + 9 | 0; //@line 15286
    HEAP8[$40] = HEAP8[$40] & -125 | 108; //@line 15290
    HEAP8[$scsi + 5 | 0] = 2; //@line 15292
    STACKTOP = sp; //@line 15294
    return;
   }
  }
 } while (0);
 HEAP32[$scsi >> 2] = 7; //@line 15300
 $16 = $scsi + 9 | 0; //@line 15301
 HEAP8[$16] = HEAP8[$16] & -125 | 108; //@line 15305
 HEAP8[$scsi + 5 | 0] = 2; //@line 15307
 STACKTOP = sp; //@line 15309
 return;
}
function _mac_scsi_cmd_read($scsi, $lba, $cnt) {
 $scsi = $scsi | 0;
 $lba = $lba | 0;
 $cnt = $cnt | 0;
 var $3 = 0, $9 = 0, $13 = 0, $16 = 0, $22 = 0, $23 = 0, $26 = 0, $27 = 0, $29 = 0, $34 = 0, $39 = 0, $44 = 0, $54 = 0, sp = 0;
 sp = STACKTOP; //@line 15326
 $3 = HEAP32[$scsi + 56 >> 2] & 7; //@line 15329
 do {
  if ((HEAP32[$scsi + 76 + ($3 << 5) >> 2] | 0) != 0) {
   $9 = HEAP32[$scsi + 76 + ($3 << 5) + 4 >> 2] | 0; //@line 15337
   if (($9 | 0) == 65535) {
    break;
   }
   $13 = _dsks_get_disk(HEAP32[$scsi + 332 >> 2] | 0, $9) | 0; //@line 15345
   if (($13 | 0) == 0) {
    break;
   }
   $22 = $cnt << 9; //@line 15351
   $23 = $scsi + 48 | 0; //@line 15352
   $26 = $scsi + 52 | 0; //@line 15355
   $27 = HEAP32[$26 >> 2] | 0; //@line 15356
   do {
    if ((HEAP32[$23 >> 2] | 0) >>> 0 < $22 >>> 0) {
     $29 = _realloc($27, $22) | 0; //@line 15360
     if (($29 | 0) != 0) {
      HEAP32[$26 >> 2] = $29; //@line 15364
      HEAP32[$23 >> 2] = $22; //@line 15365
      $39 = $29; //@line 15367
      break;
     }
     _mac_log_deb(31472, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $cnt, tempInt) | 0); //@line 15370
     HEAP32[$scsi >> 2] = 7; //@line 15372
     $34 = $scsi + 9 | 0; //@line 15373
     HEAP8[$34] = HEAP8[$34] & -125 | 108; //@line 15377
     HEAP8[$scsi + 5 | 0] = 2; //@line 15379
     STACKTOP = sp; //@line 15381
     return;
    } else {
     $39 = $27; //@line 15384
    }
   } while (0);
   if ((_dsk_read_lba($13, $39, $lba, $cnt) | 0) == 0) {
    HEAP32[$scsi + 40 >> 2] = 0; //@line 15394
    HEAP32[$scsi + 44 >> 2] = $22; //@line 15396
    HEAP32[$scsi >> 2] = 5; //@line 15398
    $54 = $scsi + 9 | 0; //@line 15399
    HEAP8[$54] = HEAP8[$54] & -125 | 100; //@line 15403
    HEAP8[$scsi + 5 | 0] = HEAP8[HEAP32[$scsi + 52 >> 2] | 0] | 0; //@line 15407
    STACKTOP = sp; //@line 15409
    return;
   } else {
    _mac_log_deb(30512, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $lba, HEAP32[tempInt + 8 >> 2] = $cnt, tempInt) | 0); //@line 15412
    HEAP32[$scsi >> 2] = 7; //@line 15414
    $44 = $scsi + 9 | 0; //@line 15415
    HEAP8[$44] = HEAP8[$44] & -125 | 108; //@line 15419
    HEAP8[$scsi + 5 | 0] = 2; //@line 15421
    STACKTOP = sp; //@line 15423
    return;
   }
  }
 } while (0);
 HEAP32[$scsi >> 2] = 7; //@line 15429
 $16 = $scsi + 9 | 0; //@line 15430
 HEAP8[$16] = HEAP8[$16] & -125 | 108; //@line 15434
 HEAP8[$scsi + 5 | 0] = 2; //@line 15436
 STACKTOP = sp; //@line 15438
 return;
}
function _mac_scsi_cmd_write6_finish($scsi) {
 $scsi = $scsi | 0;
 var $16 = 0;
 $16 = HEAP8[$scsi + 28 | 0] | 0; //@line 15465
 _mac_scsi_cmd_write_finish($scsi, ((HEAPU8[$scsi + 25 | 0] | 0) << 8 & 7936 | (HEAPU8[$scsi + 26 | 0] | 0)) << 8 | (HEAPU8[$scsi + 27 | 0] | 0), $16 << 24 >> 24 == 0 ? 256 : $16 & 255); //@line 15469
 return;
}
function _mac_ser_init($ser) {
 $ser = $ser | 0;
 HEAP32[$ser + 300 >> 2] = 0; //@line 15481
 HEAP32[$ser + 304 >> 2] = 0; //@line 15483
 HEAP32[$ser + 564 >> 2] = 0; //@line 15485
 _memset($ser | 0, 0, 44); //@line 15487
 return;
}
function _mac_ser_set_driver($ser, $name) {
 $ser = $ser | 0;
 $name = $name | 0;
 var $1 = 0, $2 = 0, $6 = 0;
 $1 = $ser + 564 | 0; //@line 15499
 $2 = HEAP32[$1 >> 2] | 0; //@line 15500
 if (($2 | 0) != 0) {
  _chr_close($2); //@line 15504
 }
 $6 = _chr_open($name) | 0; //@line 15507
 HEAP32[$1 >> 2] = $6; //@line 15508
 return ($6 | 0) == 0 | 0; //@line 15512
}
function _mac_ser_set_file($ser, $fname) {
 $ser = $ser | 0;
 $fname = $fname | 0;
 var $1 = 0, $2 = 0, $3 = 0, $6 = 0;
 $1 = _str_cat_alloc(44248, $fname) | 0; //@line 15522
 $2 = $ser + 564 | 0; //@line 15523
 $3 = HEAP32[$2 >> 2] | 0; //@line 15524
 if (($3 | 0) != 0) {
  _chr_close($3); //@line 15528
 }
 $6 = _chr_open($1) | 0; //@line 15531
 HEAP32[$2 >> 2] = $6; //@line 15532
 _free($1); //@line 15535
 return ($6 | 0) == 0 | 0; //@line 15537
}
function _mac_ser_set_scc($ser, $scc, $chn) {
 $ser = $ser | 0;
 $scc = $scc | 0;
 $chn = $chn | 0;
 var $1 = 0, $2 = 0, $3 = 0;
 $1 = $ser | 0; //@line 15548
 HEAP32[$1 >> 2] = $scc; //@line 15549
 $2 = $ser + 4 | 0; //@line 15550
 HEAP32[$2 >> 2] = $chn; //@line 15551
 $3 = $ser; //@line 15552
 _e8530_set_inp_fct($scc, $chn, $3, 274); //@line 15553
 _e8530_set_out_fct($scc, $chn, $3, 256); //@line 15554
 _e8530_set_rts_fct($scc, $chn, $3, 310); //@line 15555
 _e8530_set_comm_fct($scc, $chn, $3, 2); //@line 15556
 _e8530_set_cts(HEAP32[$1 >> 2] | 0, HEAP32[$2 >> 2] | 0, 1); //@line 15559
 return;
}
function _mac_ser_set_inp($ext, $val) {
 $ext = $ext | 0;
 $val = $val | 0;
 _mac_ser_process_input($ext); //@line 15572
 return;
}
function _mac_ser_set_out($ext, $val) {
 $ext = $ext | 0;
 $val = $val | 0;
 _mac_ser_process_output($ext); //@line 15585
 return;
}
function _mac_ser_set_rts($ext, $val) {
 $ext = $ext | 0;
 $val = $val | 0;
 var $2 = 0, $4 = 0;
 $2 = $ext + 32 | 0; //@line 15599
 $4 = $val & 255; //@line 15601
 if ((HEAP32[$2 >> 2] | 0) == ($4 | 0)) {
  return;
 }
 HEAP32[$2 >> 2] = $val << 24 >> 24 != 0; //@line 15610
 _chr_set_ctl(HEAP32[$ext + 564 >> 2] | 0, $4) | 0; //@line 15614
 return;
}
function _mac_ser_set_comm($ext, $bps, $parity, $bpc, $stop) {
 $ext = $ext | 0;
 $bps = $bps | 0;
 $parity = $parity | 0;
 $bpc = $bpc | 0;
 $stop = $stop | 0;
 var $1 = 0;
 $1 = $stop >>> 1; //@line 15631
 HEAP32[$ext + 12 >> 2] = $bps; //@line 15634
 HEAP32[$ext + 16 >> 2] = $parity; //@line 15637
 HEAP32[$ext + 20 >> 2] = $bpc; //@line 15640
 HEAP32[$ext + 24 >> 2] = $1; //@line 15643
 _chr_set_params(HEAP32[$ext + 564 >> 2] | 0, $bps, $bpc, $parity, $1) | 0; //@line 15647
 return;
}
function _mac_ser_clock($ser, $n) {
 $ser = $ser | 0;
 $n = $n | 0;
 var $ser_idx = 0, $2 = 0, $4 = 0;
 _mac_ser_process_output($ser); //@line 15660
 _mac_ser_process_input($ser); //@line 15661
 $ser_idx = $ser | 0; //@line 15662
 _e8530_set_cts(HEAP32[$ser_idx >> 2] | 0, HEAP32[$ser + 4 >> 2] | 0, 1); //@line 15666
 $2 = $ser + 8 | 0; //@line 15668
 $4 = (HEAP32[$2 >> 2] | 0) + ($n * 15 | 0) | 0; //@line 15670
 HEAP32[$2 >> 2] = $4; //@line 15671
 _e8530_clock(HEAP32[$ser_idx >> 2] | 0, $4 >>> 5); //@line 15674
 HEAP32[$2 >> 2] = HEAP32[$2 >> 2] & 31; //@line 15677
 return;
}
function _mac_sony_set_mem($sony, $mem) {
 $sony = $sony | 0;
 $mem = $mem | 0;
 HEAP32[$sony + 4 >> 2] = $mem; //@line 15690
 return;
}
function _mac_sony_set_disks($sony, $dsks) {
 $sony = $sony | 0;
 $dsks = $dsks | 0;
 HEAP32[$sony + 8 >> 2] = $dsks; //@line 15703
 return;
}
function _mac_sony_set_delay($sony, $drive, $delay) {
 $sony = $sony | 0;
 $drive = $drive | 0;
 $delay = $delay | 0;
 if ($drive >>> 0 >= 4) {
  return;
 }
 HEAP32[$sony + 12 + ($drive << 2) >> 2] = $delay; //@line 15723
 HEAP32[$sony + 28 + ($drive << 2) >> 2] = $delay; //@line 15725
 return;
}
function _mac_ser_process_output($ser) {
 $ser = $ser | 0;
 var $1 = 0, $2 = 0, $7 = 0, $10 = 0, $13 = 0, $18 = 0, $20 = 0, $24 = 0, $25 = 0, $26 = 0, $31 = 0, $34 = 0, $37 = 0, $44 = 0, $50 = 0, $51 = 0, $62 = 0, $65 = 0;
 $1 = $ser + 304 | 0; //@line 15744
 $2 = HEAP32[$1 >> 2] | 0; //@line 15745
 do {
  if (($2 | 0) != 0) {
   $7 = $ser + 300 | 0; //@line 15752
   $10 = _chr_write(HEAP32[$ser + 564 >> 2] | 0, (HEAP32[$7 >> 2] | 0) + ($ser + 308) | 0, $2) | 0; //@line 15755
   HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + $10; //@line 15758
   $13 = HEAP32[$1 >> 2] | 0; //@line 15759
   HEAP32[$1 >> 2] = $13 - $10; //@line 15761
   if (($13 | 0) == ($10 | 0)) {
    HEAP32[$7 >> 2] = 0; //@line 15765
   }
   if (($13 | 0) == ($10 | 0)) {
    break;
   }
   return;
  }
 } while (0);
 $18 = $ser | 0; //@line 15777
 $20 = $ser + 4 | 0; //@line 15779
 L2488 : do {
  if ((_e8530_out_empty(HEAP32[$18 >> 2] | 0, HEAP32[$20 >> 2] | 0) | 0) == 0) {
   $24 = $ser + 300 | 0; //@line 15786
   $25 = $ser + 564 | 0; //@line 15787
   while (1) {
    $44 = _e8530_send(HEAP32[$18 >> 2] | 0, HEAP32[$20 >> 2] | 0) | 0; //@line 15792
    HEAP8[(HEAP32[$1 >> 2] | 0) + (HEAP32[$24 >> 2] | 0) + ($ser + 308) | 0] = $44; //@line 15797
    $50 = (HEAP32[$1 >> 2] | 0) + 1 | 0; //@line 15799
    HEAP32[$1 >> 2] = $50; //@line 15800
    $51 = HEAP32[$24 >> 2] | 0; //@line 15801
    if (!(($51 + $50 | 0) >>> 0 < 256 | ($50 | 0) == 0)) {
     $62 = _chr_write(HEAP32[$25 >> 2] | 0, $ser + 308 + $51 | 0, $50) | 0; //@line 15810
     HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + $62; //@line 15813
     $65 = HEAP32[$1 >> 2] | 0; //@line 15814
     HEAP32[$1 >> 2] = $65 - $62; //@line 15816
     if (($65 | 0) == ($62 | 0)) {
      HEAP32[$24 >> 2] = 0; //@line 15820
     }
     if (($65 | 0) != ($62 | 0)) {
      break;
     }
    }
    if ((_e8530_out_empty(HEAP32[$18 >> 2] | 0, HEAP32[$20 >> 2] | 0) | 0) != 0) {
     break L2488;
    }
   }
   return;
  }
 } while (0);
 $26 = HEAP32[$1 >> 2] | 0; //@line 15842
 if (($26 | 0) == 0) {
  return;
 }
 $31 = $ser + 300 | 0; //@line 15851
 $34 = _chr_write(HEAP32[$ser + 564 >> 2] | 0, (HEAP32[$31 >> 2] | 0) + ($ser + 308) | 0, $26) | 0; //@line 15854
 HEAP32[$31 >> 2] = (HEAP32[$31 >> 2] | 0) + $34; //@line 15857
 $37 = HEAP32[$1 >> 2] | 0; //@line 15858
 HEAP32[$1 >> 2] = $37 - $34; //@line 15860
 if (($37 | 0) != ($34 | 0)) {
  return;
 }
 HEAP32[$31 >> 2] = 0; //@line 15867
 return;
}
function _mac_ser_process_input($ser) {
 $ser = $ser | 0;
 var $1 = 0, $2 = 0, $4 = 0, $8 = 0, $9 = 0, $16 = 0, $18 = 0, label = 0;
 $1 = $ser + 36 | 0; //@line 15882
 $2 = $ser | 0; //@line 15883
 $4 = $ser + 4 | 0; //@line 15885
 if ((_e8530_inp_full(HEAP32[$2 >> 2] | 0, HEAP32[$4 >> 2] | 0) | 0) != 0) {
  return;
 }
 $8 = $ser + 40 | 0; //@line 15894
 $9 = $ser + 564 | 0; //@line 15895
 while (1) {
  if ((HEAP32[$8 >> 2] | 0) == 0) {
   HEAP32[$1 >> 2] = 0; //@line 15902
   $16 = _chr_read(HEAP32[$9 >> 2] | 0, $ser + 44 | 0, 256) | 0; //@line 15905
   $18 = (HEAP32[$8 >> 2] | 0) + $16 | 0; //@line 15907
   HEAP32[$8 >> 2] = $18; //@line 15908
   if (($18 | 0) == 0) {
    label = 2013; //@line 15912
    break;
   }
  }
  _e8530_receive(HEAP32[$2 >> 2] | 0, HEAP32[$4 >> 2] | 0, HEAP8[(HEAP32[$1 >> 2] | 0) + ($ser + 44) | 0] | 0); //@line 15921
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 1; //@line 15924
  HEAP32[$8 >> 2] = (HEAP32[$8 >> 2] | 0) - 1; //@line 15927
  if ((_e8530_inp_full(HEAP32[$2 >> 2] | 0, HEAP32[$4 >> 2] | 0) | 0) != 0) {
   label = 2014; //@line 15934
   break;
  }
 }
 if ((label | 0) == 2013) {
  return;
 } else if ((label | 0) == 2014) {
  return;
 }
}
function _mac_sony_init($sony, $enable) {
 $sony = $sony | 0;
 $enable = $enable | 0;
 HEAP8[$sony | 0] = 0; //@line 15956
 HEAP8[$sony + 1 | 0] = 0; //@line 15958
 HEAP8[$sony + 2 | 0] = ($enable | 0) != 0 | 0; //@line 15962
 HEAP32[$sony + 64 >> 2] = 0; //@line 15965
 _memset($sony + 4 | 0, 0, 57); //@line 15967
 return;
}
function _mac_sony_patch($sony) {
 $sony = $sony | 0;
 var $5 = 0, $9 = 0, $10 = 0, $11 = 0, $33 = 0, $_0112_i = 0, $_0121_i = 0, $38 = 0, $39 = 0, $50 = 0, $57 = 0, $65 = 0, $buf_031_i = 0, $i_030_i = 0, $68 = 0, $71 = 0, $73 = 0, $77 = 0, $78 = 0, $83 = 0, $87 = 0, $91 = 0, $95 = 0, $99 = 0, $103 = 0, $116 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 15990
 if ((HEAP8[$sony + 2 | 0] | 0) == 0) {
  STACKTOP = sp; //@line 15996
  return;
 }
 $5 = $sony + 1 | 0; //@line 15999
 if ((HEAP8[$5] | 0) != 0) {
  STACKTOP = sp; //@line 16004
  return;
 }
 HEAP8[$5] = 1; //@line 16007
 $9 = $sony + 132 | 0; //@line 16008
 HEAP32[$9 >> 2] = 0; //@line 16009
 $10 = $sony + 136 | 0; //@line 16010
 HEAP32[$10 >> 2] = 0; //@line 16011
 $11 = $sony + 4 | 0; //@line 16012
 do {
  if ((_mem_get_uint32_be(HEAP32[$11 >> 2] | 0, 16252928) | 0) == 1346585944) {
   if ((_mem_get_uint32_be(HEAP32[$11 >> 2] | 0, 16252936) | 0) >>> 0 < 4) {
    label = 2020; //@line 16024
    break;
   }
   HEAP32[$sony + 44 >> 2] = (_mem_get_uint32_be(HEAP32[$11 >> 2] | 0, 16252944) | 0) + 16252928; //@line 16031
   HEAP32[$sony + 48 >> 2] = (_mem_get_uint32_be(HEAP32[$11 >> 2] | 0, 16252948) | 0) + 16252928; //@line 16036
   HEAP32[$sony + 52 >> 2] = (_mem_get_uint32_be(HEAP32[$11 >> 2] | 0, 16252952) | 0) + 16252928; //@line 16041
   $33 = (_mem_get_uint32_be(HEAP32[$11 >> 2] | 0, 16252940) | 0) + 16252928 | 0; //@line 16044
   HEAP32[$9 >> 2] = $33; //@line 16045
   if (($33 | 0) == 0) {
    break;
   }
   _pce_log_tag(2, 43912, 48784, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $33, tempInt) | 0); //@line 16051
   $_0121_i = 4194304;
   $_0112_i = 1048576;
   L2531 : while (1) {
    $38 = $_0121_i + 1 | 0; //@line 16057
    $39 = $_0112_i - 1 | 0; //@line 16058
    do {
     if ((_mem_get_uint16_be(HEAP32[$11 >> 2] | 0, $_0121_i) | 0) << 16 >> 16 == 1326) {
      if ((_mem_get_uint32_be(HEAP32[$11 >> 2] | 0, $_0121_i + 2 | 0) | 0) != 1399811705) {
       break;
      }
      $50 = $_0121_i - 18 | 0; //@line 16073
      if ((_mem_get_uint16_be(HEAP32[$11 >> 2] | 0, $50) | 0) << 16 >> 16 == 20224) {
       label = 2029; //@line 16079
       break L2531;
      }
     }
    } while (0);
    if (($39 | 0) == 0) {
     label = 2026; //@line 16087
     break;
    } else {
     $_0121_i = $38;
     $_0112_i = $39;
    }
   }
   do {
    if ((label | 0) == 2026) {
     HEAP32[$10 >> 2] = 0; //@line 16095
    } else if ((label | 0) == 2029) {
     HEAP32[$10 >> 2] = $50; //@line 16099
     if (($50 | 0) == 0) {
      break;
     }
     _pce_log_tag(2, 43912, 41680, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $50, tempInt) | 0); //@line 16105
     $57 = HEAP32[$10 >> 2] | 0; //@line 16106
     if (($57 | 0) == 0) {
      STACKTOP = sp; //@line 16110
      return;
     }
     if ((HEAP32[$9 >> 2] | 0) == 0) {
      STACKTOP = sp; //@line 16117
      return;
     }
     $i_030_i = 0;
     $buf_031_i = $sony + 140 | 0;
     $65 = $57;
     while (1) {
      $68 = ($i_030_i << 1) + 8 | 0; //@line 16129
      $71 = (_mem_get_uint16_be(HEAP32[$11 >> 2] | 0, $68 + $65 | 0) | 0) & 65535; //@line 16132
      $73 = (HEAP32[$10 >> 2] | 0) + $71 | 0; //@line 16134
      $77 = _mem_get_uint16_be(HEAP32[$11 >> 2] | 0, (HEAP32[$9 >> 2] | 0) + $68 | 0) | 0; //@line 16138
      $78 = HEAP32[$9 >> 2] | 0; //@line 16139
      HEAP8[$buf_031_i] = _mem_get_uint8(HEAP32[$11 >> 2] | 0, $73) | 0; //@line 16143
      $83 = $73 + 1 | 0; //@line 16145
      HEAP8[$buf_031_i + 1 | 0] = _mem_get_uint8(HEAP32[$11 >> 2] | 0, $83) | 0; //@line 16148
      $87 = $73 + 2 | 0; //@line 16150
      HEAP8[$buf_031_i + 2 | 0] = _mem_get_uint8(HEAP32[$11 >> 2] | 0, $87) | 0; //@line 16153
      $91 = $73 + 3 | 0; //@line 16155
      HEAP8[$buf_031_i + 3 | 0] = _mem_get_uint8(HEAP32[$11 >> 2] | 0, $91) | 0; //@line 16158
      $95 = $73 + 4 | 0; //@line 16160
      HEAP8[$buf_031_i + 4 | 0] = _mem_get_uint8(HEAP32[$11 >> 2] | 0, $95) | 0; //@line 16163
      $99 = $73 + 5 | 0; //@line 16165
      HEAP8[$buf_031_i + 5 | 0] = _mem_get_uint8(HEAP32[$11 >> 2] | 0, $99) | 0; //@line 16167
      $103 = $78 + ($77 & 65535) | 0; //@line 16170
      _mem_set_uint8_rw(HEAP32[$11 >> 2] | 0, $73, 78); //@line 16171
      _mem_set_uint8_rw(HEAP32[$11 >> 2] | 0, $83, -7); //@line 16173
      _mem_set_uint8_rw(HEAP32[$11 >> 2] | 0, $87, $103 >>> 24 & 255); //@line 16177
      _mem_set_uint8_rw(HEAP32[$11 >> 2] | 0, $91, $103 >>> 16 & 255); //@line 16181
      _mem_set_uint8_rw(HEAP32[$11 >> 2] | 0, $95, $103 >>> 8 & 255); //@line 16185
      _mem_set_uint8_rw(HEAP32[$11 >> 2] | 0, $99, $103 & 255); //@line 16188
      $116 = $i_030_i + 1 | 0; //@line 16189
      if ($116 >>> 0 >= 5) {
       break;
      }
      $i_030_i = $116;
      $buf_031_i = $buf_031_i + 6 | 0;
      $65 = HEAP32[$10 >> 2] | 0;
     }
     STACKTOP = sp; //@line 16200
     return;
    }
   } while (0);
   _pce_log_tag(0, 43912, 45176, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 16204
   STACKTOP = sp; //@line 16206
   return;
  } else {
   label = 2020; //@line 16209
  }
 } while (0);
 if ((label | 0) == 2020) {
  HEAP32[$9 >> 2] = 0; //@line 16213
 }
 _pce_log_tag(0, 43912, 54792, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 16216
 STACKTOP = sp; //@line 16218
 return;
}
function _mac_sony_insert($sony, $drive) {
 $sony = $sony | 0;
 $drive = $drive | 0;
 var $10 = 0, $sony_idx = 0, $13 = 0, $ret_0_i = 0, $20 = 0, $26 = 0, $27 = 0, $28 = 0, $35 = 0, $36 = 0, $37 = 0, sp = 0;
 sp = STACKTOP; //@line 16232
 if ((HEAP8[$sony | 0] | 0) == 0) {
  STACKTOP = sp; //@line 16238
  return;
 }
 if (($drive | 0) == 0 | $drive >>> 0 > 4) {
  STACKTOP = sp; //@line 16246
  return;
 }
 $10 = _dsks_get_disk(HEAP32[$sony + 8 >> 2] | 0, $drive) | 0; //@line 16251
 if (($10 | 0) == 0) {
  STACKTOP = sp; //@line 16255
  return;
 }
 $sony_idx = $sony + 4 | 0; //@line 16258
 $13 = _mem_get_uint32_be(HEAP32[$sony_idx >> 2] | 0, 308) | 0; //@line 16260
 if ($drive >>> 0 < 5) {
  $ret_0_i = ($drive * 66 | 0) + 8 + $13 | 0; //@line 16268
 } else {
  $ret_0_i = $13; //@line 16270
 }
 $20 = $ret_0_i + 3 | 0; //@line 16274
 if ((_mem_get_uint8(HEAP32[$sony_idx >> 2] | 0, $20) | 0) << 24 >> 24 != 0) {
  STACKTOP = sp; //@line 16279
  return;
 }
 _pce_log_tag(2, 43912, 38688, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $drive, tempInt) | 0); //@line 16282
 _mem_set_uint8(HEAP32[$sony_idx >> 2] | 0, $20, 1); //@line 16284
 $26 = (_dsk_get_block_cnt($10) | 0) >>> 0 < 1600; //@line 16286
 $27 = HEAP32[$sony_idx >> 2] | 0; //@line 16287
 $28 = $ret_0_i + 18 | 0; //@line 16288
 if ($26) {
  _mem_set_uint8($27, $28, 0); //@line 16291
 } else {
  _mem_set_uint8($27, $28, -1); //@line 16294
 }
 _mem_set_uint8(HEAP32[$sony_idx >> 2] | 0, $ret_0_i + 19 | 0, -1); //@line 16298
 $35 = (_dsk_get_readonly($10) | 0) == 0; //@line 16300
 $36 = HEAP32[$sony_idx >> 2] | 0; //@line 16301
 $37 = $ret_0_i + 2 | 0; //@line 16302
 if ($35) {
  _mem_set_uint8($36, $37, 0); //@line 16305
  STACKTOP = sp; //@line 16306
  return;
 } else {
  _mem_set_uint8($36, $37, -1); //@line 16309
  STACKTOP = sp; //@line 16311
  return;
 }
}
function _mac_sony_check($sony) {
 $sony = $sony | 0;
 var $4 = 0, $sony_idx = 0, $i_0_ph = 0, $check_0_ph = 0, $i_0 = 0, $8 = 0, $9 = 0, $12 = 0, $22 = 0, $ret_0_i = 0, $_0 = 0;
 if ((HEAP8[$sony | 0] | 0) == 0) {
  $_0 = 0; //@line 16331
  return $_0 | 0; //@line 16334
 }
 $4 = $sony + 8 | 0; //@line 16336
 $sony_idx = $sony + 4 | 0; //@line 16337
 $check_0_ph = 0;
 $i_0_ph = 0;
 L2586 : while (1) {
  $i_0 = $i_0_ph; //@line 16343
  do {
   if ($i_0 >>> 0 >= 4) {
    $_0 = $check_0_ph; //@line 16349
    break L2586;
   }
   $8 = $sony + 28 + ($i_0 << 2) | 0; //@line 16352
   $9 = HEAP32[$8 >> 2] | 0; //@line 16353
   do {
    if (($9 | 0) != 0) {
     $12 = $9 - 1 | 0; //@line 16358
     HEAP32[$8 >> 2] = $12; //@line 16359
     if (($12 | 0) != 0) {
      break;
     }
     _mac_sony_insert($sony, $i_0 + 1 | 0); //@line 16366
    }
   } while (0);
   $i_0 = $i_0 + 1 | 0; //@line 16371
  } while ((_dsks_get_disk(HEAP32[$4 >> 2] | 0, $i_0) | 0) == 0);
  $22 = _mem_get_uint32_be(HEAP32[$sony_idx >> 2] | 0, 308) | 0; //@line 16382
  if (($i_0 | 0) != 0 & $i_0 >>> 0 < 5) {
   $ret_0_i = ($i_0 * 66 | 0) + 8 + $22 | 0; //@line 16392
  } else {
   $ret_0_i = $22; //@line 16394
  }
  $check_0_ph = (_mem_get_uint8(HEAP32[$sony_idx >> 2] | 0, $ret_0_i + 3 | 0) | 0) << 24 >> 24 == 1 ? 1 : $check_0_ph;
  $i_0_ph = $i_0;
 }
 return $_0 | 0; //@line 16407
}
function _mac_sony_hook($sony, $val) {
 $sony = $sony | 0;
 $val = $val | 0;
 var $c_i_i_i = 0, $h_i_i_i = 0, $s_i_i_i = 0, $cnt_i_i_i = 0, $buf_i_i = 0, $tag_i_i = 0, $10 = 0, $12 = 0, $16 = 0, $20 = 0, $21 = 0, $29 = 0, $37 = 0, $45 = 0, $46 = 0, $ret_0_i_i = 0, $52 = 0, $60 = 0, $68 = 0, $77 = 0, $79 = 0, $80 = 0, $86 = 0, $99 = 0, $_0_i_i_i = 0, $106 = 0, $111 = 0, $115 = 0, $118 = 0, $125 = 0, $133 = 0, $148 = 0, $156 = 0, $174 = 0, $182 = 0, $190 = 0, $192 = 0, $197 = 0, $198 = 0, $199 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $i_074_i_i = 0, $211 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $231 = 0, $236 = 0, $244 = 0, $j_064_i_i = 0, $281 = 0, $283 = 0, $333 = 0, $ret_0_i_i_i = 0, $sony_idx43_i_i = 0, $345 = 0, $351 = 0, $359 = 0, $366 = 0, $367 = 0, $373 = 0, $386 = 0, $_0_i_i24_i = 0, $393 = 0, $398 = 0, $401 = 0, $408 = 0, $416 = 0, $431 = 0, $439 = 0, $457 = 0, $465 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $i_0_i_i = 0, $493 = 0, $j_062_i_i = 0, $502 = 0, $504 = 0, $506 = 0, $j_164_i_i = 0, $510 = 0, $514 = 0, $552 = 0, $560 = 0, $sony_idx45_i_i = 0, $573 = 0, $579 = 0, $587 = 0, $598 = 0, $606 = 0, $614 = 0, $616 = 0, $620 = 0, $634 = 0, $642 = 0, $650 = 0, $663 = 0, $668 = 0, $676 = 0, $687 = 0, $695 = 0, $706 = 0, $707 = 0, $715 = 0, $723 = 0, $731 = 0, $ret_0_i_i_i9 = 0, $747 = 0, $755 = 0, $773 = 0, $781 = 0, $793 = 0, $801 = 0, $812 = 0, $813 = 0, $817 = 0, $818 = 0, $826 = 0, $834 = 0, $844 = 0, $851 = 0, $859 = 0, $875 = 0, $883 = 0, $902 = 0, $blk_0_i_i = 0, $915 = 0, $923 = 0, $931 = 0, $ret_0_i_i16_i = 0, $948 = 0, $956 = 0, $969 = 0, $977 = 0, $985 = 0, $994 = 0, $1009 = 0, $1017 = 0, $1025 = 0, $1026 = 0, $1030 = 0, $1034 = 0, $1035 = 0, $1039 = 0, $1043 = 0, $1051 = 0, $1059 = 0, $1070 = 0, $1077 = 0, $1085 = 0, $1101 = 0, $1109 = 0, $1126 = 0, $_0_i_i_i12 = 0, $1141 = 0, $1149 = 0, $1161 = 0, $1169 = 0, $1177 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $1190 = 0, $1191 = 0, $data_060_us_i_i = 0, $idx_059_us_i_i = 0, $tags_057_us_i_i = 0, $1233 = 0, $i_054_us_i_i = 0, $data_060_i_i = 0, $idx_059_i_i = 0, $i_054_i_i = 0, $1256 = 0, $1264 = 0, $1273 = 0, $1279 = 0, $1287 = 0, $1299 = 0, $1307 = 0, $1315 = 0, $1317 = 0, $1321 = 0, $1326 = 0, $1331 = 0, $1335 = 0, $1343 = 0, $1351 = 0, $1362 = 0, $1369 = 0, $1377 = 0, $1385 = 0, $1386 = 0, $1389 = 0, $1391 = 0, $1393 = 0, $1395 = 0, $1397 = 0, $1411 = 0, $__i_i17 = 0, $1414 = 0, $1415 = 0, $i_052_i_i = 0, $1417 = 0, $1418 = 0, $1426 = 0, $1428 = 0, $_lcssa_i_i = 0, $1436 = 0, $1444 = 0, $1455 = 0, $1456 = 0, $1464 = 0, $1472 = 0, $1489 = 0, $1497 = 0, $1505 = 0, $ret_0_i_i_i21 = 0, $i_014_i_i = 0, $1513 = 0, $1515 = 0, $1527 = 0, $1535 = 0, $1547 = 0, $1555 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 16601
 STACKTOP = STACKTOP + 560 | 0; //@line 16601
 $c_i_i_i = sp | 0; //@line 16602
 $h_i_i_i = sp + 8 | 0; //@line 16603
 $s_i_i_i = sp + 16 | 0; //@line 16604
 $cnt_i_i_i = sp + 24 | 0; //@line 16605
 $buf_i_i = sp + 32 | 0; //@line 16606
 $tag_i_i = sp + 544 | 0; //@line 16607
 if (($val | 0) == 16) {
  HEAP8[$sony | 0] = 1; //@line 16610
  if ((_mac_sony_check($sony) | 0) == 0) {
   $_0 = 0; //@line 16615
   STACKTOP = sp; //@line 16617
   return $_0 | 0; //@line 16618
  }
  HEAP32[$sony + 216 >> 2] = HEAP32[$sony + 44 >> 2]; //@line 16623
  $_0 = 0; //@line 16625
  STACKTOP = sp; //@line 16627
  return $_0 | 0; //@line 16628
 } else if (($val | 0) == 17) {
  $10 = $sony + 4 | 0; //@line 16630
  $12 = $sony + 208 | 0; //@line 16632
  $16 = (_mem_get_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 6 | 0) | 0) & 65535; //@line 16636
  $20 = _mem_get_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 22 | 0) | 0; //@line 16640
  $21 = $20 & 65535; //@line 16641
  if ($20 << 16 >> 16 == 0 | ($20 & 65535) > 4) {
   HEAP32[$sony + 204 >> 2] = -56; //@line 16648
   $29 = _mem_get_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 6 | 0) | 0; //@line 16652
   _mem_set_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 16 | 0, -56); //@line 16656
   if (($29 & 512) != 0) {
    $_0 = 0; //@line 16661
    STACKTOP = sp; //@line 16663
    return $_0 | 0; //@line 16664
   }
   $37 = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, 308) | 0; //@line 16667
   HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, $37) | 0; //@line 16671
   HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, 2300) | 0; //@line 16675
   $_0 = 0; //@line 16677
   STACKTOP = sp; //@line 16679
   return $_0 | 0; //@line 16680
  }
  $45 = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, 308) | 0; //@line 16683
  $46 = ($20 & 65535) < 5; //@line 16684
  if ($46) {
   $ret_0_i_i = ($21 * 66 | 0) + 8 + $45 | 0; //@line 16691
  } else {
   $ret_0_i_i = $45; //@line 16693
  }
  $52 = $ret_0_i_i + 3 | 0; //@line 16697
  if ((_mem_get_uint8(HEAP32[$10 >> 2] | 0, $52) | 0) << 24 >> 24 == 0) {
   HEAP32[$sony + 204 >> 2] = -65; //@line 16703
   $60 = _mem_get_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 6 | 0) | 0; //@line 16707
   _mem_set_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 16 | 0, -65); //@line 16711
   if (($60 & 512) != 0) {
    $_0 = 0; //@line 16716
    STACKTOP = sp; //@line 16718
    return $_0 | 0; //@line 16719
   }
   $68 = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, 308) | 0; //@line 16722
   HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, $68) | 0; //@line 16726
   HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, 2300) | 0; //@line 16730
   $_0 = 0; //@line 16732
   STACKTOP = sp; //@line 16734
   return $_0 | 0; //@line 16735
  }
  _mem_set_uint8(HEAP32[$10 >> 2] | 0, $52, 2); //@line 16738
  $77 = $16 & 255; //@line 16739
  if (($77 | 0) == 2) {
   $79 = $buf_i_i | 0; //@line 16741
   $80 = $tag_i_i | 0; //@line 16742
   $86 = (_mem_get_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 44 | 0) | 0) & 15; //@line 16748
   if (($86 | 0) == 0) {
    $_0_i_i_i = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, (HEAP32[$sony + 212 >> 2] | 0) + 16 | 0) | 0; //@line 16756
   } else if (($86 | 0) == 1) {
    $_0_i_i_i = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 46 | 0) | 0; //@line 16763
   } else if (($86 | 0) == 3) {
    $99 = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 46 | 0) | 0; //@line 16768
    $_0_i_i_i = (_mem_get_uint32_be(HEAP32[$10 >> 2] | 0, (HEAP32[$sony + 212 >> 2] | 0) + 16 | 0) | 0) + $99 | 0; //@line 16776
   } else {
    $_0_i_i_i = 0; //@line 16778
   }
   $106 = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 36 | 0) | 0; //@line 16784
   $111 = (_mem_get_uint32_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 32 | 0) | 0) & 16777215; //@line 16789
   $115 = _mem_get_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 44 | 0) | 0; //@line 16793
   $118 = _dsks_get_disk(HEAP32[$sony + 8 >> 2] | 0, $21) | 0; //@line 16796
   if (($118 | 0) == 0) {
    HEAP32[$sony + 204 >> 2] = -65; //@line 16801
    $125 = _mem_get_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 6 | 0) | 0; //@line 16805
    _mem_set_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 16 | 0, -65); //@line 16809
    if (($125 & 512) != 0) {
     $_0 = 0; //@line 16814
     STACKTOP = sp; //@line 16816
     return $_0 | 0; //@line 16817
    }
    $133 = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, 308) | 0; //@line 16820
    HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, $133) | 0; //@line 16824
    HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, 2300) | 0; //@line 16828
    $_0 = 0; //@line 16830
    STACKTOP = sp; //@line 16832
    return $_0 | 0; //@line 16833
   }
   if (($115 & 64) != 0) {
    HEAP32[$sony + 204 >> 2] = 0; //@line 16840
    $148 = _mem_get_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 6 | 0) | 0; //@line 16844
    _mem_set_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 16 | 0, 0); //@line 16848
    if (($148 & 512) != 0) {
     $_0 = 0; //@line 16853
     STACKTOP = sp; //@line 16855
     return $_0 | 0; //@line 16856
    }
    $156 = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, 308) | 0; //@line 16859
    HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, $156) | 0; //@line 16863
    HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, 2300) | 0; //@line 16867
    $_0 = 0; //@line 16869
    STACKTOP = sp; //@line 16871
    return $_0 | 0; //@line 16872
   }
   do {
    if (($_0_i_i_i & 511 | 0) == 0) {
     if (($106 & 511 | 0) != 0) {
      break;
     }
     $190 = $106 >>> 9; //@line 16885
     L2649 : do {
      if (($190 | 0) != 0) {
       $192 = $_0_i_i_i >>> 9; //@line 16890
       $197 = $118 + 64 | 0; //@line 16895
       $198 = $sony + 56 | 0; //@line 16896
       $199 = $tag_i_i + 1 | 0; //@line 16897
       $200 = $tag_i_i + 2 | 0; //@line 16898
       $201 = $tag_i_i + 3 | 0; //@line 16899
       $202 = $tag_i_i + 4 | 0; //@line 16900
       $203 = $tag_i_i + 5 | 0; //@line 16901
       $204 = $tag_i_i + 6 | 0; //@line 16902
       $205 = $tag_i_i + 7 | 0; //@line 16903
       $206 = $tag_i_i + 8 | 0; //@line 16904
       $207 = $tag_i_i + 9 | 0; //@line 16905
       $208 = $tag_i_i + 10 | 0; //@line 16906
       $209 = $tag_i_i + 11 | 0; //@line 16907
       $i_074_i_i = 0; //@line 16909
       while (1) {
        $211 = $i_074_i_i + $192 | 0; //@line 16912
        if ((_dsk_get_type($118) | 0) == 6) {
         if ((_mac_sony_get_chs(_dsk_get_block_cnt($118) | 0, $211, $c_i_i_i, $h_i_i_i, $s_i_i_i) | 0) != 0) {
          break;
         }
         $221 = HEAP32[$197 >> 2] | 0; //@line 16925
         $222 = HEAP32[$c_i_i_i >> 2] | 0; //@line 16926
         $223 = HEAP32[$h_i_i_i >> 2] | 0; //@line 16927
         $224 = HEAP32[$s_i_i_i >> 2] | 0; //@line 16928
         _dsk_psi_read_tags($221, $80, 12, $222, $223, $224, 0) | 0; //@line 16929
         HEAP32[$cnt_i_i_i >> 2] = 512; //@line 16930
         if ((_dsk_psi_read_chs(HEAP32[$197 >> 2] | 0, $79, $cnt_i_i_i, $222, $223, $224, 0) | 0) != 0) {
          label = 2110; //@line 16937
          break;
         }
        } else {
         _memset($80 | 0, 0, 12); //@line 16941
         if ((_dsk_read_lba($118, $79, $211, 1) | 0) != 0) {
          break;
         }
        }
        $231 = ($i_074_i_i << 9) + $111 | 0; //@line 16950
        $j_064_i_i = 0; //@line 16952
        do {
         _mem_set_uint8(HEAP32[$10 >> 2] | 0, $231 + $j_064_i_i | 0, HEAP8[$buf_i_i + $j_064_i_i | 0] | 0); //@line 16959
         $j_064_i_i = $j_064_i_i + 1 | 0; //@line 16960
        } while ($j_064_i_i >>> 0 < 512);
        _mem_set_uint8(HEAP32[$10 >> 2] | 0, 764, HEAP8[$80] | 0); //@line 16971
        _mem_set_uint8(HEAP32[$10 >> 2] | 0, 765, HEAP8[$199] | 0); //@line 16974
        _mem_set_uint8(HEAP32[$10 >> 2] | 0, 766, HEAP8[$200] | 0); //@line 16977
        _mem_set_uint8(HEAP32[$10 >> 2] | 0, 767, HEAP8[$201] | 0); //@line 16980
        _mem_set_uint8(HEAP32[$10 >> 2] | 0, 768, HEAP8[$202] | 0); //@line 16983
        _mem_set_uint8(HEAP32[$10 >> 2] | 0, 769, HEAP8[$203] | 0); //@line 16986
        _mem_set_uint8(HEAP32[$10 >> 2] | 0, 770, HEAP8[$204] | 0); //@line 16989
        _mem_set_uint8(HEAP32[$10 >> 2] | 0, 771, HEAP8[$205] | 0); //@line 16992
        _mem_set_uint8(HEAP32[$10 >> 2] | 0, 772, HEAP8[$206] | 0); //@line 16995
        _mem_set_uint8(HEAP32[$10 >> 2] | 0, 773, HEAP8[$207] | 0); //@line 16998
        _mem_set_uint8(HEAP32[$10 >> 2] | 0, 774, HEAP8[$208] | 0); //@line 17001
        _mem_set_uint8(HEAP32[$10 >> 2] | 0, 775, HEAP8[$209] | 0); //@line 17004
        $281 = HEAP32[$198 >> 2] | 0; //@line 17005
        if (($281 | 0) != 0) {
         $283 = $i_074_i_i * 12 | 0; //@line 17009
         _mem_set_uint8(HEAP32[$10 >> 2] | 0, $281 + $283 | 0, HEAP8[$80] | 0); //@line 17013
         _mem_set_uint8(HEAP32[$10 >> 2] | 0, ($283 | 1) + (HEAP32[$198 >> 2] | 0) | 0, HEAP8[$199] | 0); //@line 17019
         _mem_set_uint8(HEAP32[$10 >> 2] | 0, ($283 | 2) + (HEAP32[$198 >> 2] | 0) | 0, HEAP8[$200] | 0); //@line 17025
         _mem_set_uint8(HEAP32[$10 >> 2] | 0, ($283 | 3) + (HEAP32[$198 >> 2] | 0) | 0, HEAP8[$201] | 0); //@line 17031
         _mem_set_uint8(HEAP32[$10 >> 2] | 0, $283 + 4 + (HEAP32[$198 >> 2] | 0) | 0, HEAP8[$202] | 0); //@line 17037
         _mem_set_uint8(HEAP32[$10 >> 2] | 0, $283 + 5 + (HEAP32[$198 >> 2] | 0) | 0, HEAP8[$203] | 0); //@line 17043
         _mem_set_uint8(HEAP32[$10 >> 2] | 0, $283 + 6 + (HEAP32[$198 >> 2] | 0) | 0, HEAP8[$204] | 0); //@line 17049
         _mem_set_uint8(HEAP32[$10 >> 2] | 0, $283 + 7 + (HEAP32[$198 >> 2] | 0) | 0, HEAP8[$205] | 0); //@line 17055
         _mem_set_uint8(HEAP32[$10 >> 2] | 0, $283 + 8 + (HEAP32[$198 >> 2] | 0) | 0, HEAP8[$206] | 0); //@line 17061
         _mem_set_uint8(HEAP32[$10 >> 2] | 0, $283 + 9 + (HEAP32[$198 >> 2] | 0) | 0, HEAP8[$207] | 0); //@line 17067
         _mem_set_uint8(HEAP32[$10 >> 2] | 0, $283 + 10 + (HEAP32[$198 >> 2] | 0) | 0, HEAP8[$208] | 0); //@line 17073
         _mem_set_uint8(HEAP32[$10 >> 2] | 0, $283 + 11 + (HEAP32[$198 >> 2] | 0) | 0, HEAP8[$209] | 0); //@line 17079
        }
        $i_074_i_i = $i_074_i_i + 1 | 0; //@line 17081
        if ($i_074_i_i >>> 0 >= $190 >>> 0) {
         break L2649;
        }
       }
       if ((label | 0) == 2110) {
        _mac_log_deb(52944, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = $222, HEAP32[tempInt + 8 >> 2] = $223, HEAP32[tempInt + 16 >> 2] = $224, tempInt) | 0); //@line 17091
       }
       _mac_log_deb(53664, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 17093
       HEAP32[$sony + 204 >> 2] = -1; //@line 17095
       $236 = _mem_get_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 6 | 0) | 0; //@line 17099
       _mem_set_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 16 | 0, -1); //@line 17103
       if (($236 & 512) != 0) {
        $_0 = 0; //@line 17108
        STACKTOP = sp; //@line 17110
        return $_0 | 0; //@line 17111
       }
       $244 = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, 308) | 0; //@line 17114
       HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, $244) | 0; //@line 17118
       HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, 2300) | 0; //@line 17122
       $_0 = 0; //@line 17124
       STACKTOP = sp; //@line 17126
       return $_0 | 0; //@line 17127
      }
     } while (0);
     $333 = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, 308) | 0; //@line 17131
     if ($46) {
      $ret_0_i_i_i = ($21 * 66 | 0) + 8 + $333 | 0; //@line 17138
     } else {
      $ret_0_i_i_i = $333; //@line 17140
     }
     _mem_set_uint8(HEAP32[$10 >> 2] | 0, $ret_0_i_i_i + 3 | 0, 2); //@line 17145
     _mem_set_uint32_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 40 | 0, $106); //@line 17149
     $sony_idx43_i_i = $sony + 212 | 0; //@line 17151
     $345 = (_mem_get_uint32_be(HEAP32[$10 >> 2] | 0, (HEAP32[$sony_idx43_i_i >> 2] | 0) + 16 | 0) | 0) + $106 | 0; //@line 17155
     _mem_set_uint32_be(HEAP32[$10 >> 2] | 0, (HEAP32[$sony_idx43_i_i >> 2] | 0) + 16 | 0, $345); //@line 17159
     HEAP32[$sony + 204 >> 2] = 0; //@line 17161
     $351 = _mem_get_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 6 | 0) | 0; //@line 17165
     _mem_set_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 16 | 0, 0); //@line 17169
     if (($351 & 512) != 0) {
      $_0 = 0; //@line 17174
      STACKTOP = sp; //@line 17176
      return $_0 | 0; //@line 17177
     }
     $359 = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, 308) | 0; //@line 17180
     HEAP32[$sony_idx43_i_i >> 2] = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, $359) | 0; //@line 17183
     HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, 2300) | 0; //@line 17187
     $_0 = 0; //@line 17189
     STACKTOP = sp; //@line 17191
     return $_0 | 0; //@line 17192
    }
   } while (0);
   _mac_log_deb(54272, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 17195
   HEAP32[$sony + 204 >> 2] = -50; //@line 17197
   $174 = _mem_get_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 6 | 0) | 0; //@line 17201
   _mem_set_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 16 | 0, -50); //@line 17205
   if (($174 & 512) != 0) {
    $_0 = 0; //@line 17210
    STACKTOP = sp; //@line 17212
    return $_0 | 0; //@line 17213
   }
   $182 = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, 308) | 0; //@line 17216
   HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, $182) | 0; //@line 17220
   HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, 2300) | 0; //@line 17224
   $_0 = 0; //@line 17226
   STACKTOP = sp; //@line 17228
   return $_0 | 0; //@line 17229
  } else if (($77 | 0) == 3) {
   $366 = $buf_i_i | 0; //@line 17231
   $367 = $tag_i_i | 0; //@line 17232
   $373 = (_mem_get_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 44 | 0) | 0) & 15; //@line 17238
   if (($373 | 0) == 0) {
    $_0_i_i24_i = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, (HEAP32[$sony + 212 >> 2] | 0) + 16 | 0) | 0; //@line 17246
   } else if (($373 | 0) == 1) {
    $_0_i_i24_i = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 46 | 0) | 0; //@line 17253
   } else if (($373 | 0) == 3) {
    $386 = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 46 | 0) | 0; //@line 17258
    $_0_i_i24_i = (_mem_get_uint32_be(HEAP32[$10 >> 2] | 0, (HEAP32[$sony + 212 >> 2] | 0) + 16 | 0) | 0) + $386 | 0; //@line 17266
   } else {
    $_0_i_i24_i = 0; //@line 17268
   }
   $393 = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 36 | 0) | 0; //@line 17274
   $398 = (_mem_get_uint32_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 32 | 0) | 0) & 16777215; //@line 17279
   $401 = _dsks_get_disk(HEAP32[$sony + 8 >> 2] | 0, $21) | 0; //@line 17282
   if (($401 | 0) == 0) {
    HEAP32[$sony + 204 >> 2] = -65; //@line 17287
    $408 = _mem_get_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 6 | 0) | 0; //@line 17291
    _mem_set_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 16 | 0, -65); //@line 17295
    if (($408 & 512) != 0) {
     $_0 = 0; //@line 17300
     STACKTOP = sp; //@line 17302
     return $_0 | 0; //@line 17303
    }
    $416 = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, 308) | 0; //@line 17306
    HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, $416) | 0; //@line 17310
    HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, 2300) | 0; //@line 17314
    $_0 = 0; //@line 17316
    STACKTOP = sp; //@line 17318
    return $_0 | 0; //@line 17319
   }
   if ((_dsk_get_readonly($401) | 0) != 0) {
    HEAP32[$sony + 204 >> 2] = -44; //@line 17326
    $431 = _mem_get_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 6 | 0) | 0; //@line 17330
    _mem_set_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 16 | 0, -44); //@line 17334
    if (($431 & 512) != 0) {
     $_0 = 0; //@line 17339
     STACKTOP = sp; //@line 17341
     return $_0 | 0; //@line 17342
    }
    $439 = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, 308) | 0; //@line 17345
    HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, $439) | 0; //@line 17349
    HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, 2300) | 0; //@line 17353
    $_0 = 0; //@line 17355
    STACKTOP = sp; //@line 17357
    return $_0 | 0; //@line 17358
   }
   do {
    if (($393 & 511 | 0) == 0) {
     if (($_0_i_i24_i & 511 | 0) != 0) {
      break;
     }
     _memset($367 | 0, 0, 12); //@line 17371
     $475 = (_mem_get_uint16_be(HEAP32[$10 >> 2] | 0, 770) | 0) & 65535; //@line 17374
     $476 = $393 >>> 9; //@line 17375
     $477 = $sony + 56 | 0; //@line 17376
     $478 = $_0_i_i24_i >>> 9; //@line 17377
     $479 = $tag_i_i + 1 | 0; //@line 17378
     $480 = $tag_i_i + 2 | 0; //@line 17379
     $481 = $tag_i_i + 3 | 0; //@line 17380
     $482 = $tag_i_i + 4 | 0; //@line 17381
     $483 = $tag_i_i + 5 | 0; //@line 17382
     $484 = $tag_i_i + 6 | 0; //@line 17383
     $485 = $tag_i_i + 7 | 0; //@line 17384
     $486 = $tag_i_i + 8 | 0; //@line 17385
     $487 = $tag_i_i + 9 | 0; //@line 17386
     $488 = $tag_i_i + 10 | 0; //@line 17387
     $489 = $tag_i_i + 11 | 0; //@line 17388
     $i_0_i_i = 0; //@line 17390
     while (1) {
      if ($i_0_i_i >>> 0 >= $476 >>> 0) {
       label = 2147; //@line 17396
       break;
      }
      $493 = ($i_0_i_i << 9) + $398 | 0; //@line 17400
      $j_062_i_i = 0; //@line 17402
      do {
       HEAP8[$buf_i_i + $j_062_i_i | 0] = _mem_get_uint8(HEAP32[$10 >> 2] | 0, $493 + $j_062_i_i | 0) | 0; //@line 17409
       $j_062_i_i = $j_062_i_i + 1 | 0; //@line 17410
      } while ($j_062_i_i >>> 0 < 512);
      $502 = HEAP32[$477 >> 2] | 0; //@line 17419
      L2713 : do {
       if (($502 | 0) == 0) {
        _mem_set_uint16_be(HEAP32[$10 >> 2] | 0, 770, $i_0_i_i + $475 & 65535); //@line 17427
        HEAP8[$367] = _mem_get_uint8(HEAP32[$10 >> 2] | 0, 764) | 0; //@line 17430
        HEAP8[$479] = _mem_get_uint8(HEAP32[$10 >> 2] | 0, 765) | 0; //@line 17433
        HEAP8[$480] = _mem_get_uint8(HEAP32[$10 >> 2] | 0, 766) | 0; //@line 17436
        HEAP8[$481] = _mem_get_uint8(HEAP32[$10 >> 2] | 0, 767) | 0; //@line 17439
        HEAP8[$482] = _mem_get_uint8(HEAP32[$10 >> 2] | 0, 768) | 0; //@line 17442
        HEAP8[$483] = _mem_get_uint8(HEAP32[$10 >> 2] | 0, 769) | 0; //@line 17445
        HEAP8[$484] = _mem_get_uint8(HEAP32[$10 >> 2] | 0, 770) | 0; //@line 17448
        HEAP8[$485] = _mem_get_uint8(HEAP32[$10 >> 2] | 0, 771) | 0; //@line 17451
        HEAP8[$486] = _mem_get_uint8(HEAP32[$10 >> 2] | 0, 772) | 0; //@line 17454
        HEAP8[$487] = _mem_get_uint8(HEAP32[$10 >> 2] | 0, 773) | 0; //@line 17457
        HEAP8[$488] = _mem_get_uint8(HEAP32[$10 >> 2] | 0, 774) | 0; //@line 17460
        HEAP8[$489] = _mem_get_uint8(HEAP32[$10 >> 2] | 0, 775) | 0; //@line 17463
       } else {
        $504 = $i_0_i_i * 12 | 0; //@line 17465
        $j_164_i_i = 0;
        $506 = $502;
        while (1) {
         $510 = _mem_get_uint8(HEAP32[$10 >> 2] | 0, $506 + $504 + $j_164_i_i | 0) | 0; //@line 17474
         HEAP8[$tag_i_i + $j_164_i_i | 0] = $510; //@line 17476
         _mem_set_uint8(HEAP32[$10 >> 2] | 0, $j_164_i_i + 764 | 0, $510); //@line 17479
         $514 = $j_164_i_i + 1 | 0; //@line 17480
         if ($514 >>> 0 >= 12) {
          break L2713;
         }
         $j_164_i_i = $514;
         $506 = HEAP32[$477 >> 2] | 0;
        }
       }
      } while (0);
      if ((_mac_sony_write_block($401, $366, $367, $i_0_i_i + $478 | 0) | 0) == 0) {
       $i_0_i_i = $i_0_i_i + 1 | 0; //@line 17498
      } else {
       label = 2145; //@line 17500
       break;
      }
     }
     if ((label | 0) == 2145) {
      _mac_log_deb(55016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 17505
      HEAP32[$sony + 204 >> 2] = -1; //@line 17507
      $552 = _mem_get_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 6 | 0) | 0; //@line 17511
      _mem_set_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 16 | 0, -1); //@line 17515
      if (($552 & 512) != 0) {
       $_0 = 0; //@line 17520
       STACKTOP = sp; //@line 17522
       return $_0 | 0; //@line 17523
      }
      $560 = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, 308) | 0; //@line 17526
      HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, $560) | 0; //@line 17530
      HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, 2300) | 0; //@line 17534
      $_0 = 0; //@line 17536
      STACKTOP = sp; //@line 17538
      return $_0 | 0; //@line 17539
     } else if ((label | 0) == 2147) {
      _mem_set_uint32_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 40 | 0, $393); //@line 17545
      $sony_idx45_i_i = $sony + 212 | 0; //@line 17547
      $573 = (_mem_get_uint32_be(HEAP32[$10 >> 2] | 0, (HEAP32[$sony_idx45_i_i >> 2] | 0) + 16 | 0) | 0) + $393 | 0; //@line 17551
      _mem_set_uint32_be(HEAP32[$10 >> 2] | 0, (HEAP32[$sony_idx45_i_i >> 2] | 0) + 16 | 0, $573); //@line 17555
      HEAP32[$sony + 204 >> 2] = 0; //@line 17557
      $579 = _mem_get_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 6 | 0) | 0; //@line 17561
      _mem_set_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 16 | 0, 0); //@line 17565
      if (($579 & 512) != 0) {
       $_0 = 0; //@line 17570
       STACKTOP = sp; //@line 17572
       return $_0 | 0; //@line 17573
      }
      $587 = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, 308) | 0; //@line 17576
      HEAP32[$sony_idx45_i_i >> 2] = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, $587) | 0; //@line 17579
      HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, 2300) | 0; //@line 17583
      $_0 = 0; //@line 17585
      STACKTOP = sp; //@line 17587
      return $_0 | 0; //@line 17588
     }
    }
   } while (0);
   _mac_log_deb(55672, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 17592
   HEAP32[$sony + 204 >> 2] = -50; //@line 17594
   $457 = _mem_get_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 6 | 0) | 0; //@line 17598
   _mem_set_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 16 | 0, -50); //@line 17602
   if (($457 & 512) != 0) {
    $_0 = 0; //@line 17607
    STACKTOP = sp; //@line 17609
    return $_0 | 0; //@line 17610
   }
   $465 = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, 308) | 0; //@line 17613
   HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, $465) | 0; //@line 17617
   HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, 2300) | 0; //@line 17621
   $_0 = 0; //@line 17623
   STACKTOP = sp; //@line 17625
   return $_0 | 0; //@line 17626
  } else {
   _mac_log_deb(56808, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $16, tempInt) | 0); //@line 17628
   HEAP32[$sony + 204 >> 2] = -17; //@line 17630
   $598 = _mem_get_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 6 | 0) | 0; //@line 17634
   _mem_set_uint16_be(HEAP32[$10 >> 2] | 0, (HEAP32[$12 >> 2] | 0) + 16 | 0, -17); //@line 17638
   if (($598 & 512) != 0) {
    $_0 = 0; //@line 17643
    STACKTOP = sp; //@line 17645
    return $_0 | 0; //@line 17646
   }
   $606 = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, 308) | 0; //@line 17649
   HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, $606) | 0; //@line 17653
   HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$10 >> 2] | 0, 2300) | 0; //@line 17657
   $_0 = 0; //@line 17659
   STACKTOP = sp; //@line 17661
   return $_0 | 0; //@line 17662
  }
 } else if (($val | 0) == 18) {
  $614 = $sony + 4 | 0; //@line 17665
  $616 = $sony + 208 | 0; //@line 17667
  $620 = (_mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 26 | 0) | 0) & 65535; //@line 17671
  if (($620 | 0) == 7) {
   $706 = _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 22 | 0) | 0; //@line 17676
   $707 = $706 & 65535; //@line 17677
   if ($706 << 16 >> 16 == 0 | ($706 & 65535) > 4) {
    HEAP32[$sony + 204 >> 2] = -56; //@line 17684
    $715 = _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 6 | 0) | 0; //@line 17688
    _mem_set_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 16 | 0, -56); //@line 17692
    if (($715 & 512) != 0) {
     $_0 = 0; //@line 17697
     STACKTOP = sp; //@line 17699
     return $_0 | 0; //@line 17700
    }
    $723 = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 308) | 0; //@line 17703
    HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, $723) | 0; //@line 17707
    HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 2300) | 0; //@line 17711
    $_0 = 0; //@line 17713
    STACKTOP = sp; //@line 17715
    return $_0 | 0; //@line 17716
   }
   $731 = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 308) | 0; //@line 17719
   if (($706 & 65535) < 5) {
    $ret_0_i_i_i9 = ($707 * 66 | 0) + 8 + $731 | 0; //@line 17727
   } else {
    $ret_0_i_i_i9 = $731; //@line 17729
   }
   _mem_set_uint8(HEAP32[$614 >> 2] | 0, $ret_0_i_i_i9 + 3 | 0, 0); //@line 17734
   _mem_set_uint8(HEAP32[$614 >> 2] | 0, $ret_0_i_i_i9 + 2 | 0, 0); //@line 17737
   _mem_set_uint8(HEAP32[$614 >> 2] | 0, $ret_0_i_i_i9 + 18 | 0, 0); //@line 17740
   HEAP32[$sony + 204 >> 2] = 0; //@line 17742
   $747 = _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 6 | 0) | 0; //@line 17746
   _mem_set_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 16 | 0, 0); //@line 17750
   if (($747 & 512) != 0) {
    $_0 = 0; //@line 17755
    STACKTOP = sp; //@line 17757
    return $_0 | 0; //@line 17758
   }
   $755 = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 308) | 0; //@line 17761
   HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, $755) | 0; //@line 17765
   HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 2300) | 0; //@line 17769
   $_0 = 0; //@line 17771
   STACKTOP = sp; //@line 17773
   return $_0 | 0; //@line 17774
  } else if (($620 | 0) == 21) {
   _mac_sony_ctl_get_icon($sony); //@line 17776
   $_0 = 0; //@line 17778
   STACKTOP = sp; //@line 17780
   return $_0 | 0; //@line 17781
  } else if (($620 | 0) == 22) {
   _mac_sony_ctl_get_icon($sony); //@line 17783
   $_0 = 0; //@line 17785
   STACKTOP = sp; //@line 17787
   return $_0 | 0; //@line 17788
  } else if (($620 | 0) == 1) {
   HEAP32[$sony + 204 >> 2] = -27; //@line 17791
   _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 6 | 0) | 0; //@line 17795
   _mem_set_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 16 | 0, -27); //@line 17799
   $_0 = 0; //@line 17801
   STACKTOP = sp; //@line 17803
   return $_0 | 0; //@line 17804
  } else if (($620 | 0) == 21315) {
   $1025 = $buf_i_i | 0; //@line 17806
   $1026 = $tag_i_i | 0; //@line 17807
   $1030 = _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 22 | 0) | 0; //@line 17811
   $1034 = _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 28 | 0) | 0; //@line 17815
   $1035 = $1034 & 65535; //@line 17816
   $1039 = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 30 | 0) | 0; //@line 17820
   $1043 = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 34 | 0) | 0; //@line 17824
   if ($1030 << 16 >> 16 == 0 | ($1030 & 65535) > 4) {
    HEAP32[$sony + 204 >> 2] = -56; //@line 17831
    $1051 = _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 6 | 0) | 0; //@line 17835
    _mem_set_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 16 | 0, -56); //@line 17839
    if (($1051 & 512) != 0) {
     $_0 = 0; //@line 17844
     STACKTOP = sp; //@line 17846
     return $_0 | 0; //@line 17847
    }
    $1059 = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 308) | 0; //@line 17850
    HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, $1059) | 0; //@line 17854
    HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 2300) | 0; //@line 17858
    $_0 = 0; //@line 17860
    STACKTOP = sp; //@line 17862
    return $_0 | 0; //@line 17863
   }
   $1070 = _dsks_get_disk(HEAP32[$sony + 8 >> 2] | 0, $1030 & 65535) | 0; //@line 17868
   if (($1070 | 0) == 0) {
    HEAP32[$sony + 204 >> 2] = -64; //@line 17873
    $1077 = _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 6 | 0) | 0; //@line 17877
    _mem_set_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 16 | 0, -64); //@line 17881
    if (($1077 & 512) != 0) {
     $_0 = 0; //@line 17886
     STACKTOP = sp; //@line 17888
     return $_0 | 0; //@line 17889
    }
    $1085 = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 308) | 0; //@line 17892
    HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, $1085) | 0; //@line 17896
    HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 2300) | 0; //@line 17900
    $_0 = 0; //@line 17902
    STACKTOP = sp; //@line 17904
    return $_0 | 0; //@line 17905
   }
   if ((HEAP8[$1070 + 56 | 0] | 0) != 0) {
    HEAP32[$sony + 204 >> 2] = -44; //@line 17913
    $1101 = _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 6 | 0) | 0; //@line 17917
    _mem_set_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 16 | 0, -44); //@line 17921
    if (($1101 & 512) != 0) {
     $_0 = 0; //@line 17926
     STACKTOP = sp; //@line 17928
     return $_0 | 0; //@line 17929
    }
    $1109 = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 308) | 0; //@line 17932
    HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, $1109) | 0; //@line 17936
    HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 2300) | 0; //@line 17940
    $_0 = 0; //@line 17942
    STACKTOP = sp; //@line 17944
    return $_0 | 0; //@line 17945
   }
   do {
    if ($1034 << 16 >> 16 != 0) {
     if ($1035 >>> 0 > (HEAP32[$sony + 64 >> 2] | 0) >>> 0) {
      break;
     }
     $1126 = HEAP32[$sony + 68 + (($1035 << 1) - 2 << 2) >> 2] | 0; //@line 17961
     do {
      if ($1126 >>> 0 < 1120) {
       $_0_i_i_i12 = -2; //@line 17966
      } else {
       if ($1126 >>> 0 < 1520) {
        $_0_i_i_i12 = 0; //@line 17971
        break;
       }
       if ($1126 >>> 0 < 2240) {
        $_0_i_i_i12 = -1; //@line 17977
        break;
       }
       $_0_i_i_i12 = $1126 >>> 0 < 5760 ? 1 : 253; //@line 17983
      }
     } while (0);
     if ((_mac_sony_format($1070, $1126) | 0) != 0) {
      HEAP32[$sony + 204 >> 2] = -50; //@line 17992
      $1161 = _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 6 | 0) | 0; //@line 17996
      _mem_set_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 16 | 0, -50); //@line 18000
      if (($1161 & 512) != 0) {
       $_0 = 0; //@line 18005
       STACKTOP = sp; //@line 18007
       return $_0 | 0; //@line 18008
      }
      $1169 = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 308) | 0; //@line 18011
      HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, $1169) | 0; //@line 18015
      HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 2300) | 0; //@line 18019
      $_0 = 0; //@line 18021
      STACKTOP = sp; //@line 18023
      return $_0 | 0; //@line 18024
     }
     $1177 = $1039 & 16777215; //@line 18026
     _memset($1026 | 0, 0, 12); //@line 18027
     L2801 : do {
      if (($1126 | 0) != 0) {
       L2803 : do {
        if ($_0_i_i_i12 >>> 0 > 1) {
         $1181 = $tag_i_i + 1 | 0; //@line 18036
         $1182 = $tag_i_i + 2 | 0; //@line 18037
         $1183 = $tag_i_i + 3 | 0; //@line 18038
         $1184 = $tag_i_i + 4 | 0; //@line 18039
         $1185 = $tag_i_i + 5 | 0; //@line 18040
         $1186 = $tag_i_i + 6 | 0; //@line 18041
         $1187 = $tag_i_i + 7 | 0; //@line 18042
         $1188 = $tag_i_i + 8 | 0; //@line 18043
         $1189 = $tag_i_i + 9 | 0; //@line 18044
         $1190 = $tag_i_i + 10 | 0; //@line 18045
         $1191 = $tag_i_i + 11 | 0; //@line 18046
         $tags_057_us_i_i = $1043 & 16777215;
         $idx_059_us_i_i = 0;
         $data_060_us_i_i = $1177;
         while (1) {
          $i_054_us_i_i = 0; //@line 18054
          do {
           HEAP8[$buf_i_i + $i_054_us_i_i | 0] = _mem_get_uint8(HEAP32[$614 >> 2] | 0, $i_054_us_i_i + $data_060_us_i_i | 0) | 0; //@line 18061
           $i_054_us_i_i = $i_054_us_i_i + 1 | 0; //@line 18062
          } while ($i_054_us_i_i >>> 0 < 512);
          HEAP8[$1026] = _mem_get_uint8(HEAP32[$614 >> 2] | 0, $tags_057_us_i_i) | 0; //@line 18073
          HEAP8[$1181] = _mem_get_uint8(HEAP32[$614 >> 2] | 0, $tags_057_us_i_i + 1 | 0) | 0; //@line 18077
          HEAP8[$1182] = _mem_get_uint8(HEAP32[$614 >> 2] | 0, $tags_057_us_i_i + 2 | 0) | 0; //@line 18081
          HEAP8[$1183] = _mem_get_uint8(HEAP32[$614 >> 2] | 0, $tags_057_us_i_i + 3 | 0) | 0; //@line 18085
          HEAP8[$1184] = _mem_get_uint8(HEAP32[$614 >> 2] | 0, $tags_057_us_i_i + 4 | 0) | 0; //@line 18089
          HEAP8[$1185] = _mem_get_uint8(HEAP32[$614 >> 2] | 0, $tags_057_us_i_i + 5 | 0) | 0; //@line 18093
          HEAP8[$1186] = _mem_get_uint8(HEAP32[$614 >> 2] | 0, $tags_057_us_i_i + 6 | 0) | 0; //@line 18097
          HEAP8[$1187] = _mem_get_uint8(HEAP32[$614 >> 2] | 0, $tags_057_us_i_i + 7 | 0) | 0; //@line 18101
          HEAP8[$1188] = _mem_get_uint8(HEAP32[$614 >> 2] | 0, $tags_057_us_i_i + 8 | 0) | 0; //@line 18105
          HEAP8[$1189] = _mem_get_uint8(HEAP32[$614 >> 2] | 0, $tags_057_us_i_i + 9 | 0) | 0; //@line 18109
          HEAP8[$1190] = _mem_get_uint8(HEAP32[$614 >> 2] | 0, $tags_057_us_i_i + 10 | 0) | 0; //@line 18113
          HEAP8[$1191] = _mem_get_uint8(HEAP32[$614 >> 2] | 0, $tags_057_us_i_i + 11 | 0) | 0; //@line 18117
          if ((_mac_sony_write_block($1070, $1025, $1026, $idx_059_us_i_i) | 0) != 0) {
           break L2803;
          }
          $1233 = $idx_059_us_i_i + 1 | 0; //@line 18126
          if ($1233 >>> 0 < $1126 >>> 0) {
           $tags_057_us_i_i = $tags_057_us_i_i + 12 | 0;
           $idx_059_us_i_i = $1233;
           $data_060_us_i_i = $data_060_us_i_i + 512 | 0;
          } else {
           break L2801;
          }
         }
        } else {
         $idx_059_i_i = 0;
         $data_060_i_i = $1177;
         while (1) {
          $i_054_i_i = 0; //@line 18141
          do {
           HEAP8[$buf_i_i + $i_054_i_i | 0] = _mem_get_uint8(HEAP32[$614 >> 2] | 0, $i_054_i_i + $data_060_i_i | 0) | 0; //@line 18148
           $i_054_i_i = $i_054_i_i + 1 | 0; //@line 18149
          } while ($i_054_i_i >>> 0 < 512);
          if ((_mac_sony_write_block($1070, $1025, $1026, $idx_059_i_i) | 0) != 0) {
           break L2803;
          }
          $1273 = $idx_059_i_i + 1 | 0; //@line 18165
          if ($1273 >>> 0 < $1126 >>> 0) {
           $idx_059_i_i = $1273;
           $data_060_i_i = $data_060_i_i + 512 | 0;
          } else {
           break L2801;
          }
         }
        }
       } while (0);
       HEAP32[$sony + 204 >> 2] = -1; //@line 18177
       $1256 = _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 6 | 0) | 0; //@line 18181
       _mem_set_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 16 | 0, -1); //@line 18185
       if (($1256 & 512) != 0) {
        $_0 = 0; //@line 18190
        STACKTOP = sp; //@line 18192
        return $_0 | 0; //@line 18193
       }
       $1264 = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 308) | 0; //@line 18196
       HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, $1264) | 0; //@line 18200
       HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 2300) | 0; //@line 18204
       $_0 = 0; //@line 18206
       STACKTOP = sp; //@line 18208
       return $_0 | 0; //@line 18209
      }
     } while (0);
     HEAP32[$sony + 204 >> 2] = 0; //@line 18213
     $1279 = _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 6 | 0) | 0; //@line 18217
     _mem_set_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 16 | 0, 0); //@line 18221
     if (($1279 & 512) != 0) {
      $_0 = 0; //@line 18226
      STACKTOP = sp; //@line 18228
      return $_0 | 0; //@line 18229
     }
     $1287 = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 308) | 0; //@line 18232
     HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, $1287) | 0; //@line 18236
     HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 2300) | 0; //@line 18240
     $_0 = 0; //@line 18242
     STACKTOP = sp; //@line 18244
     return $_0 | 0; //@line 18245
    }
   } while (0);
   HEAP32[$sony + 204 >> 2] = -50; //@line 18249
   $1141 = _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 6 | 0) | 0; //@line 18253
   _mem_set_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 16 | 0, -50); //@line 18257
   if (($1141 & 512) != 0) {
    $_0 = 0; //@line 18262
    STACKTOP = sp; //@line 18264
    return $_0 | 0; //@line 18265
   }
   $1149 = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 308) | 0; //@line 18268
   HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, $1149) | 0; //@line 18272
   HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 2300) | 0; //@line 18276
   $_0 = 0; //@line 18278
   STACKTOP = sp; //@line 18280
   return $_0 | 0; //@line 18281
  } else if (($620 | 0) == 23) {
   $969 = _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 22 | 0) | 0; //@line 18286
   if ($969 << 16 >> 16 == 0 | ($969 & 65535) > 4) {
    HEAP32[$sony + 204 >> 2] = -56; //@line 18293
    $977 = _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 6 | 0) | 0; //@line 18297
    _mem_set_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 16 | 0, -56); //@line 18301
    if (($977 & 512) != 0) {
     $_0 = 0; //@line 18306
     STACKTOP = sp; //@line 18308
     return $_0 | 0; //@line 18309
    }
    $985 = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 308) | 0; //@line 18312
    HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, $985) | 0; //@line 18316
    HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 2300) | 0; //@line 18320
    $_0 = 0; //@line 18322
    STACKTOP = sp; //@line 18324
    return $_0 | 0; //@line 18325
   } else {
    $994 = ($969 & 65535) - 1 | 0; //@line 18328
    _mem_set_uint32_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 28 | 0, ($994 << 3 & 8 | $994 >>> 1 & 1) << 8 | 4); //@line 18339
    HEAP32[$sony + 204 >> 2] = 0; //@line 18341
    $1009 = _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 6 | 0) | 0; //@line 18345
    _mem_set_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 16 | 0, 0); //@line 18349
    if (($1009 & 512) != 0) {
     $_0 = 0; //@line 18354
     STACKTOP = sp; //@line 18356
     return $_0 | 0; //@line 18357
    }
    $1017 = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 308) | 0; //@line 18360
    HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, $1017) | 0; //@line 18364
    HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 2300) | 0; //@line 18368
    $_0 = 0; //@line 18370
    STACKTOP = sp; //@line 18372
    return $_0 | 0; //@line 18373
   }
  } else if (($620 | 0) == 5) {
   $634 = _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 22 | 0) | 0; //@line 18379
   if ($634 << 16 >> 16 == 0 | ($634 & 65535) > 4) {
    HEAP32[$sony + 204 >> 2] = -56; //@line 18386
    $642 = _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 6 | 0) | 0; //@line 18390
    _mem_set_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 16 | 0, -56); //@line 18394
    if (($642 & 512) != 0) {
     $_0 = 0; //@line 18399
     STACKTOP = sp; //@line 18401
     return $_0 | 0; //@line 18402
    }
    $650 = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 308) | 0; //@line 18405
    HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, $650) | 0; //@line 18409
    HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 2300) | 0; //@line 18413
    $_0 = 0; //@line 18415
    STACKTOP = sp; //@line 18417
    return $_0 | 0; //@line 18418
   }
   $663 = $sony + 204 | 0; //@line 18425
   if ((_dsks_get_disk(HEAP32[$sony + 8 >> 2] | 0, $634 & 65535) | 0) == 0) {
    HEAP32[$663 >> 2] = -64; //@line 18428
    $668 = _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 6 | 0) | 0; //@line 18432
    _mem_set_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 16 | 0, -64); //@line 18436
    if (($668 & 512) != 0) {
     $_0 = 0; //@line 18441
     STACKTOP = sp; //@line 18443
     return $_0 | 0; //@line 18444
    }
    $676 = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 308) | 0; //@line 18447
    HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, $676) | 0; //@line 18451
    HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 2300) | 0; //@line 18455
    $_0 = 0; //@line 18457
    STACKTOP = sp; //@line 18459
    return $_0 | 0; //@line 18460
   } else {
    HEAP32[$663 >> 2] = 0; //@line 18462
    $687 = _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 6 | 0) | 0; //@line 18466
    _mem_set_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 16 | 0, 0); //@line 18470
    if (($687 & 512) != 0) {
     $_0 = 0; //@line 18475
     STACKTOP = sp; //@line 18477
     return $_0 | 0; //@line 18478
    }
    $695 = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 308) | 0; //@line 18481
    HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, $695) | 0; //@line 18485
    HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 2300) | 0; //@line 18489
    $_0 = 0; //@line 18491
    STACKTOP = sp; //@line 18493
    return $_0 | 0; //@line 18494
   }
  } else if (($620 | 0) == 8) {
   HEAP32[$sony + 56 >> 2] = (_mem_get_uint32_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 28 | 0) | 0) & 16777215; //@line 18503
   HEAP32[$sony + 204 >> 2] = 0; //@line 18505
   $773 = _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 6 | 0) | 0; //@line 18509
   _mem_set_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 16 | 0, 0); //@line 18513
   if (($773 & 512) != 0) {
    $_0 = 0; //@line 18518
    STACKTOP = sp; //@line 18520
    return $_0 | 0; //@line 18521
   }
   $781 = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 308) | 0; //@line 18524
   HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, $781) | 0; //@line 18528
   HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 2300) | 0; //@line 18532
   $_0 = 0; //@line 18534
   STACKTOP = sp; //@line 18536
   return $_0 | 0; //@line 18537
  } else if (($620 | 0) == 9) {
   HEAP32[$sony + 204 >> 2] = -56; //@line 18540
   $793 = _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 6 | 0) | 0; //@line 18544
   _mem_set_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 16 | 0, -56); //@line 18548
   if (($793 & 512) != 0) {
    $_0 = 0; //@line 18553
    STACKTOP = sp; //@line 18555
    return $_0 | 0; //@line 18556
   }
   $801 = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 308) | 0; //@line 18559
   HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, $801) | 0; //@line 18563
   HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 2300) | 0; //@line 18567
   $_0 = 0; //@line 18569
   STACKTOP = sp; //@line 18571
   return $_0 | 0; //@line 18572
  } else if (($620 | 0) == 6) {
   $812 = _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 22 | 0) | 0; //@line 18577
   $813 = $812 & 65535; //@line 18578
   $817 = _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 28 | 0) | 0; //@line 18582
   $818 = $817 & 65535; //@line 18583
   if ($812 << 16 >> 16 == 0 | ($812 & 65535) > 4) {
    HEAP32[$sony + 204 >> 2] = -56; //@line 18590
    $826 = _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 6 | 0) | 0; //@line 18594
    _mem_set_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 16 | 0, -56); //@line 18598
    if (($826 & 512) != 0) {
     $_0 = 0; //@line 18603
     STACKTOP = sp; //@line 18605
     return $_0 | 0; //@line 18606
    }
    $834 = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 308) | 0; //@line 18609
    HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, $834) | 0; //@line 18613
    HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 2300) | 0; //@line 18617
    $_0 = 0; //@line 18619
    STACKTOP = sp; //@line 18621
    return $_0 | 0; //@line 18622
   }
   $844 = _dsks_get_disk(HEAP32[$sony + 8 >> 2] | 0, $813) | 0; //@line 18626
   if (($844 | 0) == 0) {
    HEAP32[$sony + 204 >> 2] = -64; //@line 18631
    $851 = _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 6 | 0) | 0; //@line 18635
    _mem_set_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 16 | 0, -64); //@line 18639
    if (($851 & 512) != 0) {
     $_0 = 0; //@line 18644
     STACKTOP = sp; //@line 18646
     return $_0 | 0; //@line 18647
    }
    $859 = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 308) | 0; //@line 18650
    HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, $859) | 0; //@line 18654
    HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 2300) | 0; //@line 18658
    $_0 = 0; //@line 18660
    STACKTOP = sp; //@line 18662
    return $_0 | 0; //@line 18663
   }
   if ((HEAP8[$844 + 56 | 0] | 0) != 0) {
    HEAP32[$sony + 204 >> 2] = -44; //@line 18671
    $875 = _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 6 | 0) | 0; //@line 18675
    _mem_set_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 16 | 0, -44); //@line 18679
    if (($875 & 512) != 0) {
     $_0 = 0; //@line 18684
     STACKTOP = sp; //@line 18686
     return $_0 | 0; //@line 18687
    }
    $883 = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 308) | 0; //@line 18690
    HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, $883) | 0; //@line 18694
    HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 2300) | 0; //@line 18698
    $_0 = 0; //@line 18700
    STACKTOP = sp; //@line 18702
    return $_0 | 0; //@line 18703
   }
   do {
    if ($817 << 16 >> 16 == 0) {
     label = 2184; //@line 18709
    } else {
     if ($818 >>> 0 > (HEAP32[$sony + 64 >> 2] | 0) >>> 0) {
      label = 2184; //@line 18716
      break;
     }
     $blk_0_i_i = HEAP32[$sony + 68 + (($818 << 1) - 2 << 2) >> 2] | 0; //@line 18724
    }
   } while (0);
   do {
    if ((label | 0) == 2184) {
     $902 = _dsk_get_block_cnt($844) | 0; //@line 18729
     if ((_dsk_get_type($844) | 0) != 6) {
      $blk_0_i_i = $902; //@line 18734
      break;
     }
     $blk_0_i_i = $817 << 16 >> 16 == 1 ? 800 : 1600; //@line 18740
    }
   } while (0);
   if ((_mac_sony_format($844, $blk_0_i_i) | 0) != 0) {
    HEAP32[$sony + 204 >> 2] = -50; //@line 18749
    $915 = _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 6 | 0) | 0; //@line 18753
    _mem_set_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 16 | 0, -50); //@line 18757
    if (($915 & 512) != 0) {
     $_0 = 0; //@line 18762
     STACKTOP = sp; //@line 18764
     return $_0 | 0; //@line 18765
    }
    $923 = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 308) | 0; //@line 18768
    HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, $923) | 0; //@line 18772
    HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 2300) | 0; //@line 18776
    $_0 = 0; //@line 18778
    STACKTOP = sp; //@line 18780
    return $_0 | 0; //@line 18781
   }
   $931 = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 308) | 0; //@line 18784
   if (($812 & 65535) < 5) {
    $ret_0_i_i16_i = ($813 * 66 | 0) + 8 + $931 | 0; //@line 18792
   } else {
    $ret_0_i_i16_i = $931; //@line 18794
   }
   _mem_set_uint16_be(HEAP32[$614 >> 2] | 0, $ret_0_i_i16_i + 18 | 0, $blk_0_i_i & 65535); //@line 18800
   _mem_set_uint16_be(HEAP32[$614 >> 2] | 0, $ret_0_i_i16_i + 20 | 0, $blk_0_i_i >>> 16 & 65535); //@line 18805
   HEAP32[$sony + 204 >> 2] = 0; //@line 18807
   $948 = _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 6 | 0) | 0; //@line 18811
   _mem_set_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 16 | 0, 0); //@line 18815
   if (($948 & 512) != 0) {
    $_0 = 0; //@line 18820
    STACKTOP = sp; //@line 18822
    return $_0 | 0; //@line 18823
   }
   $956 = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 308) | 0; //@line 18826
   HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, $956) | 0; //@line 18830
   HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 2300) | 0; //@line 18834
   $_0 = 0; //@line 18836
   STACKTOP = sp; //@line 18838
   return $_0 | 0; //@line 18839
  } else {
   _mac_log_deb(32752, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $620, tempInt) | 0); //@line 18841
   HEAP32[$sony + 204 >> 2] = -17; //@line 18843
   $1299 = _mem_get_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 6 | 0) | 0; //@line 18847
   _mem_set_uint16_be(HEAP32[$614 >> 2] | 0, (HEAP32[$616 >> 2] | 0) + 16 | 0, -17); //@line 18851
   if (($1299 & 512) != 0) {
    $_0 = 0; //@line 18856
    STACKTOP = sp; //@line 18858
    return $_0 | 0; //@line 18859
   }
   $1307 = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 308) | 0; //@line 18862
   HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, $1307) | 0; //@line 18866
   HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$614 >> 2] | 0, 2300) | 0; //@line 18870
   $_0 = 0; //@line 18872
   STACKTOP = sp; //@line 18874
   return $_0 | 0; //@line 18875
  }
 } else if (($val | 0) == 19) {
  $1315 = $sony + 4 | 0; //@line 18878
  $1317 = $sony + 208 | 0; //@line 18880
  $1321 = (_mem_get_uint16_be(HEAP32[$1315 >> 2] | 0, (HEAP32[$1317 >> 2] | 0) + 26 | 0) | 0) & 65535; //@line 18884
  if (($1321 | 0) == 6) {
   $1326 = _mem_get_uint16_be(HEAP32[$1315 >> 2] | 0, (HEAP32[$1317 >> 2] | 0) + 22 | 0) | 0; //@line 18889
   $1331 = (_mem_get_uint16_be(HEAP32[$1315 >> 2] | 0, (HEAP32[$1317 >> 2] | 0) + 28 | 0) | 0) & 65535; //@line 18894
   $1335 = _mem_get_uint32_be(HEAP32[$1315 >> 2] | 0, (HEAP32[$1317 >> 2] | 0) + 30 | 0) | 0; //@line 18898
   if ($1326 << 16 >> 16 == 0 | ($1326 & 65535) > 4) {
    HEAP32[$sony + 204 >> 2] = -56; //@line 18905
    $1343 = _mem_get_uint16_be(HEAP32[$1315 >> 2] | 0, (HEAP32[$1317 >> 2] | 0) + 6 | 0) | 0; //@line 18909
    _mem_set_uint16_be(HEAP32[$1315 >> 2] | 0, (HEAP32[$1317 >> 2] | 0) + 16 | 0, -56); //@line 18913
    if (($1343 & 512) != 0) {
     $_0 = 0; //@line 18918
     STACKTOP = sp; //@line 18920
     return $_0 | 0; //@line 18921
    }
    $1351 = _mem_get_uint32_be(HEAP32[$1315 >> 2] | 0, 308) | 0; //@line 18924
    HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$1315 >> 2] | 0, $1351) | 0; //@line 18928
    HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$1315 >> 2] | 0, 2300) | 0; //@line 18932
    $_0 = 0; //@line 18934
    STACKTOP = sp; //@line 18936
    return $_0 | 0; //@line 18937
   }
   $1362 = _dsks_get_disk(HEAP32[$sony + 8 >> 2] | 0, $1326 & 65535) | 0; //@line 18942
   if (($1362 | 0) == 0) {
    HEAP32[$sony + 204 >> 2] = -64; //@line 18947
    $1369 = _mem_get_uint16_be(HEAP32[$1315 >> 2] | 0, (HEAP32[$1317 >> 2] | 0) + 6 | 0) | 0; //@line 18951
    _mem_set_uint16_be(HEAP32[$1315 >> 2] | 0, (HEAP32[$1317 >> 2] | 0) + 16 | 0, -64); //@line 18955
    if (($1369 & 512) != 0) {
     $_0 = 0; //@line 18960
     STACKTOP = sp; //@line 18962
     return $_0 | 0; //@line 18963
    }
    $1377 = _mem_get_uint32_be(HEAP32[$1315 >> 2] | 0, 308) | 0; //@line 18966
    HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$1315 >> 2] | 0, $1377) | 0; //@line 18970
    HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$1315 >> 2] | 0, 2300) | 0; //@line 18974
    $_0 = 0; //@line 18976
    STACKTOP = sp; //@line 18978
    return $_0 | 0; //@line 18979
   }
   $1385 = _dsk_get_block_cnt($1362) | 0; //@line 18981
   $1386 = $sony + 68 | 0; //@line 18982
   $1389 = $sony + 64 | 0; //@line 18985
   do {
    if ((_dsk_get_type($1362) | 0) == 6) {
     HEAP32[$1389 >> 2] = 4; //@line 18989
     HEAP32[$1386 >> 2] = 800; //@line 18990
     $1391 = $sony + 72 | 0; //@line 18991
     HEAP32[$1391 >> 2] = -2130050992; //@line 18992
     HEAP32[$sony + 76 >> 2] = 1600; //@line 18994
     $1393 = $sony + 80 | 0; //@line 18995
     HEAP32[$1393 >> 2] = -2113273776; //@line 18996
     HEAP32[$sony + 84 >> 2] = 1440; //@line 18998
     $1395 = $sony + 88 | 0; //@line 18999
     HEAP32[$1395 >> 2] = -2113339312; //@line 19000
     HEAP32[$sony + 92 >> 2] = 2880; //@line 19002
     $1397 = $sony + 96 | 0; //@line 19003
     HEAP32[$1397 >> 2] = -1844314032; //@line 19004
     if ($1385 >>> 0 < 1120) {
      HEAP32[$1391 >> 2] = -1056309168; //@line 19008
      $1411 = 4; //@line 19010
      break;
     }
     if ($1385 >>> 0 < 1520) {
      HEAP32[$1395 >> 2] = -1039597488; //@line 19016
      $1411 = 4; //@line 19018
      break;
     }
     if ($1385 >>> 0 < 2240) {
      HEAP32[$1393 >> 2] = -1039531952; //@line 19024
      $1411 = 4; //@line 19026
      break;
     }
     if ((HEAP8[$sony + 60 | 0] | 0) == 0) {
      HEAP32[$1389 >> 2] = 1; //@line 19034
      HEAP32[$1386 >> 2] = 2880; //@line 19035
      HEAP32[$1391 >> 2] = -770572208; //@line 19036
      $1411 = 1; //@line 19037
      break;
     } else {
      HEAP32[$1397 >> 2] = -770572208; //@line 19040
      $1411 = 4; //@line 19042
      break;
     }
    } else {
     HEAP32[$1389 >> 2] = 1; //@line 19046
     HEAP32[$1386 >> 2] = $1385; //@line 19047
     HEAP32[$sony + 72 >> 2] = 0; //@line 19049
     $1411 = 1; //@line 19050
    }
   } while (0);
   $__i_i17 = $1331 >>> 0 > $1411 >>> 0 ? $1411 : $1331; //@line 19055
   $1414 = HEAP32[$1315 >> 2] | 0; //@line 19057
   if (($__i_i17 | 0) == 0) {
    $_lcssa_i_i = $1414; //@line 19060
   } else {
    $i_052_i_i = 0;
    $1415 = $1414;
    while (1) {
     $1417 = ($i_052_i_i << 3) + $1335 | 0; //@line 19067
     $1418 = $i_052_i_i << 1; //@line 19068
     _mem_set_uint32_be($1415, $1417, HEAP32[$sony + 68 + ($1418 << 2) >> 2] | 0); //@line 19071
     _mem_set_uint32_be(HEAP32[$1315 >> 2] | 0, $1417 + 4 | 0, HEAP32[$sony + 68 + (($1418 | 1) << 2) >> 2] | 0); //@line 19077
     $1426 = $i_052_i_i + 1 | 0; //@line 19078
     $1428 = HEAP32[$1315 >> 2] | 0; //@line 19080
     if ($1426 >>> 0 < $__i_i17 >>> 0) {
      $i_052_i_i = $1426;
      $1415 = $1428;
     } else {
      $_lcssa_i_i = $1428; //@line 19085
      break;
     }
    }
   }
   _mem_set_uint16_be($_lcssa_i_i, (HEAP32[$1317 >> 2] | 0) + 28 | 0, $__i_i17 & 65535); //@line 19094
   HEAP32[$sony + 204 >> 2] = 0; //@line 19096
   $1436 = _mem_get_uint16_be(HEAP32[$1315 >> 2] | 0, (HEAP32[$1317 >> 2] | 0) + 6 | 0) | 0; //@line 19100
   _mem_set_uint16_be(HEAP32[$1315 >> 2] | 0, (HEAP32[$1317 >> 2] | 0) + 16 | 0, 0); //@line 19104
   if (($1436 & 512) != 0) {
    $_0 = 0; //@line 19109
    STACKTOP = sp; //@line 19111
    return $_0 | 0; //@line 19112
   }
   $1444 = _mem_get_uint32_be(HEAP32[$1315 >> 2] | 0, 308) | 0; //@line 19115
   HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$1315 >> 2] | 0, $1444) | 0; //@line 19119
   HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$1315 >> 2] | 0, 2300) | 0; //@line 19123
   $_0 = 0; //@line 19125
   STACKTOP = sp; //@line 19127
   return $_0 | 0; //@line 19128
  } else if (($1321 | 0) == 8) {
   $1455 = _mem_get_uint16_be(HEAP32[$1315 >> 2] | 0, (HEAP32[$1317 >> 2] | 0) + 22 | 0) | 0; //@line 19133
   $1456 = $1455 & 65535; //@line 19134
   if ($1455 << 16 >> 16 == 0 | ($1455 & 65535) > 4) {
    HEAP32[$sony + 204 >> 2] = -56; //@line 19141
    $1464 = _mem_get_uint16_be(HEAP32[$1315 >> 2] | 0, (HEAP32[$1317 >> 2] | 0) + 6 | 0) | 0; //@line 19145
    _mem_set_uint16_be(HEAP32[$1315 >> 2] | 0, (HEAP32[$1317 >> 2] | 0) + 16 | 0, -56); //@line 19149
    if (($1464 & 512) != 0) {
     $_0 = 0; //@line 19154
     STACKTOP = sp; //@line 19156
     return $_0 | 0; //@line 19157
    }
    $1472 = _mem_get_uint32_be(HEAP32[$1315 >> 2] | 0, 308) | 0; //@line 19160
    HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$1315 >> 2] | 0, $1472) | 0; //@line 19164
    HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$1315 >> 2] | 0, 2300) | 0; //@line 19168
    $_0 = 0; //@line 19170
    STACKTOP = sp; //@line 19172
    return $_0 | 0; //@line 19173
   }
   if ((_dsks_get_disk(HEAP32[$sony + 8 >> 2] | 0, $1456) | 0) == 0) {
    HEAP32[$sony + 204 >> 2] = -64; //@line 19182
    $1489 = _mem_get_uint16_be(HEAP32[$1315 >> 2] | 0, (HEAP32[$1317 >> 2] | 0) + 6 | 0) | 0; //@line 19186
    _mem_set_uint16_be(HEAP32[$1315 >> 2] | 0, (HEAP32[$1317 >> 2] | 0) + 16 | 0, -64); //@line 19190
    if (($1489 & 512) != 0) {
     $_0 = 0; //@line 19195
     STACKTOP = sp; //@line 19197
     return $_0 | 0; //@line 19198
    }
    $1497 = _mem_get_uint32_be(HEAP32[$1315 >> 2] | 0, 308) | 0; //@line 19201
    HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$1315 >> 2] | 0, $1497) | 0; //@line 19205
    HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$1315 >> 2] | 0, 2300) | 0; //@line 19209
    $_0 = 0; //@line 19211
    STACKTOP = sp; //@line 19213
    return $_0 | 0; //@line 19214
   }
   $1505 = _mem_get_uint32_be(HEAP32[$1315 >> 2] | 0, 308) | 0; //@line 19217
   if (($1455 & 65535) < 5) {
    $ret_0_i_i_i21 = ($1456 * 66 | 0) + 8 + $1505 | 0; //@line 19225
   } else {
    $ret_0_i_i_i21 = $1505; //@line 19227
   }
   $i_014_i_i = 0; //@line 19231
   do {
    $1513 = $i_014_i_i << 1; //@line 19235
    $1515 = _mem_get_uint16_be(HEAP32[$1315 >> 2] | 0, $1513 + $ret_0_i_i_i21 | 0) | 0; //@line 19237
    _mem_set_uint16_be(HEAP32[$1315 >> 2] | 0, $1513 + 28 + (HEAP32[$1317 >> 2] | 0) | 0, $1515); //@line 19242
    $i_014_i_i = $i_014_i_i + 1 | 0; //@line 19243
   } while ($i_014_i_i >>> 0 < 11);
   HEAP32[$sony + 204 >> 2] = 0; //@line 19253
   $1527 = _mem_get_uint16_be(HEAP32[$1315 >> 2] | 0, (HEAP32[$1317 >> 2] | 0) + 6 | 0) | 0; //@line 19257
   _mem_set_uint16_be(HEAP32[$1315 >> 2] | 0, (HEAP32[$1317 >> 2] | 0) + 16 | 0, 0); //@line 19261
   if (($1527 & 512) != 0) {
    $_0 = 0; //@line 19266
    STACKTOP = sp; //@line 19268
    return $_0 | 0; //@line 19269
   }
   $1535 = _mem_get_uint32_be(HEAP32[$1315 >> 2] | 0, 308) | 0; //@line 19272
   HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$1315 >> 2] | 0, $1535) | 0; //@line 19276
   HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$1315 >> 2] | 0, 2300) | 0; //@line 19280
   $_0 = 0; //@line 19282
   STACKTOP = sp; //@line 19284
   return $_0 | 0; //@line 19285
  } else {
   HEAP32[$sony + 204 >> 2] = -18; //@line 19288
   $1547 = _mem_get_uint16_be(HEAP32[$1315 >> 2] | 0, (HEAP32[$1317 >> 2] | 0) + 6 | 0) | 0; //@line 19292
   _mem_set_uint16_be(HEAP32[$1315 >> 2] | 0, (HEAP32[$1317 >> 2] | 0) + 16 | 0, -18); //@line 19296
   if (($1547 & 512) == 0) {
    $1555 = _mem_get_uint32_be(HEAP32[$1315 >> 2] | 0, 308) | 0; //@line 19302
    HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$1315 >> 2] | 0, $1555) | 0; //@line 19306
    HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$1315 >> 2] | 0, 2300) | 0; //@line 19310
   }
   _mac_log_deb(35784, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $1321, tempInt) | 0); //@line 19313
   $_0 = 0; //@line 19315
   STACKTOP = sp; //@line 19317
   return $_0 | 0; //@line 19318
  }
 } else if (($val | 0) == 20) {
  $_0 = 0; //@line 19321
  STACKTOP = sp; //@line 19323
  return $_0 | 0; //@line 19324
 } else {
  $_0 = 1; //@line 19327
  STACKTOP = sp; //@line 19329
  return $_0 | 0; //@line 19330
 }
 return 0;
}
function _mac_sound_set_sbuf($ms, $sbuf) {
 $ms = $ms | 0;
 $sbuf = $sbuf | 0;
 HEAP32[$ms + 4 >> 2] = $sbuf; //@line 19342
 return;
}
function _mac_sound_set_volume($ms, $vol) {
 $ms = $ms | 0;
 $vol = $vol | 0;
 HEAP32[$ms + 764 >> 2] = $vol; //@line 19355
 return;
}
function _mac_sound_set_enable($ms, $val) {
 $ms = $ms | 0;
 $val = $val | 0;
 var $2 = 0, $3 = 0;
 $2 = ($val | 0) != 0 | 0; //@line 19368
 $3 = $ms + 760 | 0; //@line 19369
 if ((HEAP32[$3 >> 2] | 0) == ($2 | 0)) {
  return;
 }
 HEAP32[$3 >> 2] = $2; //@line 19377
 return;
}
function _mac_sony_reset($sony) {
 $sony = $sony | 0;
 var $1 = 0, $5 = 0, $6 = 0, $14 = 0, $16 = 0, $buf_015_i = 0, $i_014_i = 0, $22 = 0, $24 = 0, $47 = 0;
 $1 = $sony + 1 | 0; //@line 19396
 do {
  if ((HEAP8[$1] | 0) != 0) {
   $5 = $sony + 136 | 0; //@line 19402
   $6 = HEAP32[$5 >> 2] | 0; //@line 19403
   if (($6 | 0) == 0) {
    break;
   }
   if ((HEAP32[$sony + 132 >> 2] | 0) == 0) {
    break;
   }
   $14 = $sony + 4 | 0; //@line 19417
   $i_014_i = 0;
   $buf_015_i = $sony + 140 | 0;
   $16 = $6;
   while (1) {
    $22 = (_mem_get_uint16_be(HEAP32[$14 >> 2] | 0, $16 + 8 + ($i_014_i << 1) | 0) | 0) & 65535; //@line 19429
    $24 = (HEAP32[$5 >> 2] | 0) + $22 | 0; //@line 19431
    _mem_set_uint8_rw(HEAP32[$14 >> 2] | 0, $24, HEAP8[$buf_015_i] | 0); //@line 19435
    _mem_set_uint8_rw(HEAP32[$14 >> 2] | 0, $24 + 1 | 0, HEAP8[$buf_015_i + 1 | 0] | 0); //@line 19440
    _mem_set_uint8_rw(HEAP32[$14 >> 2] | 0, $24 + 2 | 0, HEAP8[$buf_015_i + 2 | 0] | 0); //@line 19445
    _mem_set_uint8_rw(HEAP32[$14 >> 2] | 0, $24 + 3 | 0, HEAP8[$buf_015_i + 3 | 0] | 0); //@line 19450
    _mem_set_uint8_rw(HEAP32[$14 >> 2] | 0, $24 + 4 | 0, HEAP8[$buf_015_i + 4 | 0] | 0); //@line 19455
    _mem_set_uint8_rw(HEAP32[$14 >> 2] | 0, $24 + 5 | 0, HEAP8[$buf_015_i + 5 | 0] | 0); //@line 19459
    $47 = $i_014_i + 1 | 0; //@line 19460
    if ($47 >>> 0 >= 5) {
     break;
    }
    $i_014_i = $47;
    $buf_015_i = $buf_015_i + 6 | 0;
    $16 = HEAP32[$5 >> 2] | 0;
   }
   HEAP8[$1] = 0; //@line 19471
  }
 } while (0);
 HEAP8[$sony | 0] = 0; //@line 19476
 HEAP32[$sony + 28 >> 2] = HEAP32[$sony + 12 >> 2]; //@line 19480
 HEAP32[$sony + 32 >> 2] = HEAP32[$sony + 16 >> 2]; //@line 19484
 HEAP32[$sony + 36 >> 2] = HEAP32[$sony + 20 >> 2]; //@line 19488
 HEAP32[$sony + 40 >> 2] = HEAP32[$sony + 24 >> 2]; //@line 19492
 return;
}
function _mac_sony_ctl_get_icon($sony) {
 $sony = $sony | 0;
 var $1 = 0, $3 = 0, $6 = 0, $14 = 0, $22 = 0, $32 = 0, $34 = 0, $37 = 0, $40 = 0, $addr_0 = 0, $50 = 0, $58 = 0;
 $1 = $sony + 4 | 0; //@line 19510
 $3 = $sony + 208 | 0; //@line 19512
 $6 = _mem_get_uint16_be(HEAP32[$1 >> 2] | 0, (HEAP32[$3 >> 2] | 0) + 22 | 0) | 0; //@line 19515
 if ($6 << 16 >> 16 == 0 | ($6 & 65535) > 4) {
  HEAP32[$sony + 204 >> 2] = -56; //@line 19522
  $14 = _mem_get_uint16_be(HEAP32[$1 >> 2] | 0, (HEAP32[$3 >> 2] | 0) + 6 | 0) | 0; //@line 19526
  _mem_set_uint16_be(HEAP32[$1 >> 2] | 0, (HEAP32[$3 >> 2] | 0) + 16 | 0, -56); //@line 19530
  if (($14 & 512) != 0) {
   return;
  }
  $22 = _mem_get_uint32_be(HEAP32[$1 >> 2] | 0, 308) | 0; //@line 19539
  HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$1 >> 2] | 0, $22) | 0; //@line 19543
  HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$1 >> 2] | 0, 2300) | 0; //@line 19547
  return;
 }
 $32 = HEAP32[$sony + 48 >> 2] | 0; //@line 19554
 $34 = HEAP32[$sony + 52 >> 2] | 0; //@line 19556
 $37 = _dsks_get_disk(HEAP32[$sony + 8 >> 2] | 0, $6 & 65535) | 0; //@line 19559
 do {
  if (($37 | 0) == 0) {
   $addr_0 = $32; //@line 19564
  } else {
   $40 = _dsk_get_block_cnt($37) | 0; //@line 19566
   if (($40 | 0) == 800 | ($40 | 0) == 1600 | ($40 | 0) == 1440 | ($40 | 0) == 2880) {
    $addr_0 = $32;
    break;
   }
   $addr_0 = $34; //@line 19572
  }
 } while (0);
 _mem_set_uint32_be(HEAP32[$1 >> 2] | 0, (HEAP32[$3 >> 2] | 0) + 28 | 0, $addr_0); //@line 19579
 HEAP32[$sony + 204 >> 2] = 0; //@line 19581
 $50 = _mem_get_uint16_be(HEAP32[$1 >> 2] | 0, (HEAP32[$3 >> 2] | 0) + 6 | 0) | 0; //@line 19585
 _mem_set_uint16_be(HEAP32[$1 >> 2] | 0, (HEAP32[$3 >> 2] | 0) + 16 | 0, 0); //@line 19589
 if (($50 & 512) != 0) {
  return;
 }
 $58 = _mem_get_uint32_be(HEAP32[$1 >> 2] | 0, 308) | 0; //@line 19598
 HEAP32[$sony + 212 >> 2] = _mem_get_uint32_be(HEAP32[$1 >> 2] | 0, $58) | 0; //@line 19602
 HEAP32[$sony + 216 >> 2] = _mem_get_uint32_be(HEAP32[$1 >> 2] | 0, 2300) | 0; //@line 19606
 return;
}
function _mac_sony_format($dsk, $blk) {
 $dsk = $dsk | 0;
 $blk = $blk | 0;
 var $buf = 0, $7 = 0, $i_067 = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $_0_i_ph = 0, $27 = 0, $c_058 = 0, $sn_057 = 0, $s_055_us = 0, $39 = 0, $h_056_us = 0, $_0_i_ph52 = 0, $50 = 0, $54 = 0, $c_165 = 0, $s_161 = 0, $56 = 0, $59 = 0, $_0 = 0, $s_161_1 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 19625
 STACKTOP = STACKTOP + 512 | 0; //@line 19625
 $buf = sp | 0; //@line 19626
 if ((_dsk_get_type($dsk) | 0) != 6) {
  if ((_dsk_get_block_cnt($dsk) | 0) != ($blk | 0)) {
   $_0 = 1; //@line 19635
   STACKTOP = sp; //@line 19637
   return $_0 | 0; //@line 19638
  }
  $7 = $buf | 0; //@line 19640
  _memset($7 | 0, 0, 512); //@line 19641
  if (($blk | 0) == 0) {
   $_0 = 0; //@line 19645
   STACKTOP = sp; //@line 19647
   return $_0 | 0; //@line 19648
  } else {
   $i_067 = 0; //@line 19650
  }
  while (1) {
   _dsk_write_lba($dsk, $7, $i_067, 1) | 0; //@line 19654
   $10 = $i_067 + 1 | 0; //@line 19655
   if ($10 >>> 0 < $blk >>> 0) {
    $i_067 = $10; //@line 19659
   } else {
    $_0 = 0; //@line 19661
    break;
   }
  }
  STACKTOP = sp; //@line 19666
  return $_0 | 0; //@line 19667
 }
 $14 = HEAP32[$dsk + 64 >> 2] | 0; //@line 19670
 $15 = $14; //@line 19671
 $16 = $buf | 0; //@line 19672
 _memset($16 | 0, 0, 12); //@line 19673
 do {
  if ($blk >>> 0 < 1120) {
   $_0_i_ph = 1; //@line 19678
   label = 2402; //@line 19679
  } else {
   if ($blk >>> 0 < 1520) {
    $_0_i_ph52 = 2; //@line 19684
   } else {
    if ($blk >>> 0 < 2240) {
     $_0_i_ph = 2; //@line 19689
     label = 2402; //@line 19690
     break;
    }
    $_0_i_ph52 = $blk >>> 0 < 5760 ? 3 : 255; //@line 19696
   }
   _dsk_psi_erase_disk($15) | 0; //@line 19699
   $50 = ($_0_i_ph52 | 0) == 2; //@line 19700
   if (($_0_i_ph52 - 2 | 0) >>> 0 >= 2) {
    $_0 = 1; //@line 19705
    STACKTOP = sp; //@line 19707
    return $_0 | 0; //@line 19708
   }
   _dsk_psi_set_encoding($15, $50 ? 2 : 32770); //@line 19711
   $54 = $50 ? 9 : 18; //@line 19712
   $c_165 = 0; //@line 19714
   do {
    $s_161 = 0; //@line 19718
    while (1) {
     $56 = $s_161 + 1 | 0; //@line 19721
     _dsk_psi_format_sector($15, $c_165, 0, $c_165, 0, $56, 512, 0) | 0; //@line 19722
     if ($56 >>> 0 < $54 >>> 0) {
      $s_161 = $56; //@line 19726
     } else {
      $s_161_1 = 0; //@line 19728
      break;
     }
    }
    do {
     $s_161_1 = $s_161_1 + 1 | 0; //@line 19734
     _dsk_psi_format_sector($15, $c_165, 1, $c_165, 1, $s_161_1, 512, 0) | 0; //@line 19735
    } while ($s_161_1 >>> 0 < $54 >>> 0);
    $c_165 = $c_165 + 1 | 0; //@line 19744
   } while ($c_165 >>> 0 < 80);
  }
 } while (0);
 if ((label | 0) == 2402) {
  _dsk_psi_erase_disk($15) | 0; //@line 19757
  _dsk_psi_set_encoding($15, 3); //@line 19758
  $27 = $14 + 68 | 0; //@line 19760
  $sn_057 = 13;
  $c_058 = 0;
  do {
   $sn_057 = ((($c_058 & 15 | 0) == 0) << 31 >> 31) + $sn_057 | 0; //@line 19769
   if (($sn_057 | 0) != 0) {
    $h_056_us = 0; //@line 19772
    do {
     $s_055_us = 0; //@line 19776
     do {
      _dsk_psi_format_sector($15, $c_058, $h_056_us, $c_058, $h_056_us, $s_055_us, 512, 0) | 0; //@line 19779
      $39 = _psi_img_get_sector(HEAP32[$27 >> 2] | 0, $c_058, $h_056_us, $s_055_us, 1) | 0; //@line 19781
      if (($39 | 0) != 0) {
       _psi_sct_set_tags($39, $16, 12) | 0; //@line 19785
      }
      $s_055_us = $s_055_us + 1 | 0; //@line 19788
     } while ($s_055_us >>> 0 < $sn_057 >>> 0);
     $h_056_us = $h_056_us + 1 | 0; //@line 19797
    } while ($h_056_us >>> 0 < $_0_i_ph >>> 0);
   }
   $c_058 = $c_058 + 1 | 0; //@line 19807
  } while ($c_058 >>> 0 < 80);
 }
 $59 = _dsk_get_block_cnt($dsk) | 0; //@line 19817
 _mac_log_deb(57656, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $59, tempInt) | 0); //@line 19818
 $_0 = 0; //@line 19820
 STACKTOP = sp; //@line 19822
 return $_0 | 0; //@line 19823
}
function _mac_sony_write_block($dsk, $buf, $tag, $idx) {
 $dsk = $dsk | 0;
 $buf = $buf | 0;
 $tag = $tag | 0;
 $idx = $idx | 0;
 var $c = 0, $h = 0, $s = 0, $cnt = 0, $10 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $_pre_phi = 0, $21 = 0, $22 = 0, $23 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 19838
 STACKTOP = STACKTOP + 32 | 0; //@line 19838
 $c = sp | 0; //@line 19839
 $h = sp + 8 | 0; //@line 19840
 $s = sp + 16 | 0; //@line 19841
 $cnt = sp + 24 | 0; //@line 19842
 if ((_dsk_get_type($dsk) | 0) != 6) {
  $_0 = (_dsk_write_lba($dsk, $buf, $idx, 1) | 0) != 0 | 0; //@line 19851
  STACKTOP = sp; //@line 19853
  return $_0 | 0; //@line 19854
 }
 if ((_mac_sony_get_chs(_dsk_get_block_cnt($dsk) | 0, $idx, $c, $h, $s) | 0) != 0) {
  $_0 = 1; //@line 19861
  STACKTOP = sp; //@line 19863
  return $_0 | 0; //@line 19864
 }
 $10 = _dsk_get_block_cnt($dsk) | 0; //@line 19866
 if ($10 >>> 0 < 1120 | ($10 - 1520 | 0) >>> 0 < 720) {
  $14 = $dsk + 64 | 0; //@line 19873
  $16 = HEAP32[$14 >> 2] | 0; //@line 19875
  $17 = HEAP32[$c >> 2] | 0; //@line 19876
  $18 = HEAP32[$h >> 2] | 0; //@line 19877
  $19 = HEAP32[$s >> 2] | 0; //@line 19878
  _dsk_psi_write_tags($16, $tag, 12, $17, $18, $19, 0) | 0; //@line 19879
  $23 = $17;
  $22 = $18;
  $21 = $19;
  $_pre_phi = $14;
 } else {
  $23 = HEAP32[$c >> 2] | 0;
  $22 = HEAP32[$h >> 2] | 0;
  $21 = HEAP32[$s >> 2] | 0;
  $_pre_phi = $dsk + 64 | 0;
 }
 HEAP32[$cnt >> 2] = 512; //@line 19894
 if ((_dsk_psi_write_chs(HEAP32[$_pre_phi >> 2] | 0, $buf, $cnt, $23, $22, $21, 0) | 0) == 0) {
  $_0 = 0; //@line 19901
  STACKTOP = sp; //@line 19903
  return $_0 | 0; //@line 19904
 }
 _mac_log_deb(31416, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = $23, HEAP32[tempInt + 8 >> 2] = $22, HEAP32[tempInt + 16 >> 2] = $21, tempInt) | 0); //@line 19906
 $_0 = 1; //@line 19908
 STACKTOP = sp; //@line 19910
 return $_0 | 0; //@line 19911
}
function _mac_sony_get_chs($blk, $lba, $c, $h, $s) {
 $blk = $blk | 0;
 $lba = $lba | 0;
 $c = $c | 0;
 $h = $h | 0;
 $s = $s | 0;
 var $_0_i_ph = 0, $7 = 0, $8 = 0, $_03947_lcssa = 0, $sn_049_lcssa = 0, $16 = 0, $20 = 0, $21 = 0, $storemerge = 0, $_0 = 0, $40 = 0, $41 = 0, $44 = 0, $45 = 0, $48 = 0, sp = 0;
 sp = STACKTOP; //@line 19928
 L3089 : do {
  if ($blk >>> 0 < 1120) {
   $_0_i_ph = 1; //@line 19933
  } else {
   do {
    if ($blk >>> 0 < 1520) {
     HEAP32[$s >> 2] = (($lba >>> 0) % 9 | 0) + 1; //@line 19941
     HEAP32[$h >> 2] = (($lba >>> 0) / 9 | 0) & 1; //@line 19944
     $storemerge = ($lba >>> 0) / 18 | 0; //@line 19947
    } else {
     if ($blk >>> 0 < 2240) {
      $_0_i_ph = 0; //@line 19952
      break L3089;
     }
     if ($blk >>> 0 < 5760) {
      HEAP32[$s >> 2] = (($lba >>> 0) % 18 | 0) + 1; //@line 19960
      HEAP32[$h >> 2] = (($lba >>> 0) / 18 | 0) & 1; //@line 19963
      $storemerge = ($lba >>> 0) / 36 | 0; //@line 19965
      break;
     }
     _mac_log_deb(30448, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $blk, HEAP32[tempInt + 8 >> 2] = $lba, tempInt) | 0); //@line 19968
     $_0 = 1; //@line 19970
     STACKTOP = sp; //@line 19972
     return $_0 | 0; //@line 19973
    }
   } while (0);
   HEAP32[$c >> 2] = $storemerge; //@line 19977
   $_0 = 0; //@line 19979
   STACKTOP = sp; //@line 19981
   return $_0 | 0; //@line 19982
  }
 } while (0);
 $7 = $_0_i_ph ? 1 : 2; //@line 19986
 HEAP32[$c >> 2] = 0; //@line 19987
 $8 = $7 * 192 | 0; //@line 19988
 do {
  if ($8 >>> 0 > $lba >>> 0) {
   $sn_049_lcssa = 12;
   $_03947_lcssa = $lba;
  } else {
   $20 = $lba - $8 | 0; //@line 19995
   HEAP32[$c >> 2] = 16; //@line 19996
   $21 = $7 * 176 | 0; //@line 19997
   if ($20 >>> 0 < $21 >>> 0) {
    $sn_049_lcssa = 11;
    $_03947_lcssa = $20;
    break;
   }
   $40 = $20 - $21 | 0; //@line 20004
   HEAP32[$c >> 2] = 32; //@line 20005
   $41 = $7 * 160 | 0; //@line 20006
   if ($40 >>> 0 < $41 >>> 0) {
    $sn_049_lcssa = 10;
    $_03947_lcssa = $40;
    break;
   }
   $44 = $40 - $41 | 0; //@line 20013
   HEAP32[$c >> 2] = 48; //@line 20014
   $45 = $7 * 144 | 0; //@line 20015
   if ($44 >>> 0 < $45 >>> 0) {
    $sn_049_lcssa = 9;
    $_03947_lcssa = $44;
    break;
   }
   $48 = $44 - $45 | 0; //@line 20022
   HEAP32[$c >> 2] = 64; //@line 20023
   if ($48 >>> 0 < $7 << 7 >>> 0) {
    $sn_049_lcssa = 8;
    $_03947_lcssa = $48;
    break;
   }
   HEAP32[$c >> 2] = 80; //@line 20031
   $_0 = 1; //@line 20032
   STACKTOP = sp; //@line 20034
   return $_0 | 0; //@line 20035
  }
 } while (0);
 HEAP32[$s >> 2] = ($_03947_lcssa >>> 0) % ($sn_049_lcssa >>> 0) | 0; //@line 20041
 HEAP32[$h >> 2] = (($_03947_lcssa >>> 0) / ($sn_049_lcssa >>> 0) | 0) & ($_0_i_ph & 1 ^ 1); //@line 20046
 $16 = ($_03947_lcssa >>> 0) / ((Math_imul($sn_049_lcssa, $7) | 0) >>> 0) | 0; //@line 20048
 HEAP32[$c >> 2] = (HEAP32[$c >> 2] | 0) + $16; //@line 20051
 $_0 = 0; //@line 20053
 STACKTOP = sp; //@line 20055
 return $_0 | 0; //@line 20056
}
function _mac_sound_init($ms) {
 $ms = $ms | 0;
 HEAP32[$ms + 756 >> 2] = 0; //@line 20067
 HEAP32[$ms + 760 >> 2] = 0; //@line 20069
 HEAP32[$ms + 764 >> 2] = 0; //@line 20071
 _memset($ms | 0, 0, 16); //@line 20074
 HEAP32[$ms + 768 >> 2] = 8e3; //@line 20075
 _snd_iir2_init($ms + 772 | 0); //@line 20077
 HEAP16[$ms + 820 >> 1] = -32768; //@line 20079
 HEAP32[$ms + 824 >> 2] = 0; //@line 20081
 HEAP32[$ms + 828 >> 2] = 60; //@line 20083
 return;
}
function _mac_sound_set_lowpass($ms, $freq) {
 $ms = $ms | 0;
 $freq = $freq | 0;
 HEAP32[$ms + 768 >> 2] = $freq; //@line 20096
 _snd_iir2_set_lowpass($ms + 772 | 0, $freq, 22255); //@line 20098
 return;
}
function _mac_sound_set_driver($ms, $driver) {
 $ms = $ms | 0;
 $driver = $driver | 0;
 var $1 = 0, $2 = 0, $6 = 0, $_0 = 0;
 $1 = $ms | 0; //@line 20111
 $2 = HEAP32[$1 >> 2] | 0; //@line 20112
 if (($2 | 0) != 0) {
  _snd_close($2); //@line 20116
 }
 $6 = _snd_open($driver) | 0; //@line 20119
 HEAP32[$1 >> 2] = $6; //@line 20120
 if (($6 | 0) == 0) {
  $_0 = 1; //@line 20124
  return $_0 | 0; //@line 20127
 }
 if ((_snd_set_params($6, 1, 22255, 0) | 0) == 0) {
  $_0 = 0; //@line 20133
  return $_0 | 0; //@line 20136
 }
 _snd_close(HEAP32[$1 >> 2] | 0); //@line 20139
 HEAP32[$1 >> 2] = 0; //@line 20140
 $_0 = 1; //@line 20142
 return $_0 | 0; //@line 20145
}
function _mac_sound_vbl($ms) {
 $ms = $ms | 0;
 var $buf_i = 0, $1 = 0, $5 = 0, $9 = 0, $10 = 0, $13 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $24 = 0, $_024_i = 0, $_pre_i = 0, $35 = 0, $val_0_i = 0, $45 = 0, $_pre26_i = 0, $63 = 0, $68 = 0, $70 = 0, $_013_i = 0, $75 = 0, $81 = 0, $84 = 0, $85 = 0, $ms_idx_val = 0, $90 = 0, $94 = 0, $102 = 0, $_pre_phi = 0, $105 = 0, $106 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 20165
 STACKTOP = STACKTOP + 8192 | 0; //@line 20165
 $buf_i = sp | 0; //@line 20166
 $1 = $ms + 4 | 0; //@line 20167
 if ((HEAP32[$1 >> 2] | 0) == 0) {
  STACKTOP = sp; //@line 20172
  return;
 }
 $5 = $ms | 0; //@line 20175
 if ((HEAP32[$5 >> 2] | 0) == 0) {
  STACKTOP = sp; //@line 20180
  return;
 }
 $9 = $ms + 12 | 0; //@line 20183
 $10 = HEAP32[$9 >> 2] | 0; //@line 20184
 L3131 : do {
  if ($10 >>> 0 < 370) {
   $13 = $ms + 760 | 0; //@line 20189
   if ((HEAP32[$13 >> 2] | 0) == 0) {
    if ((HEAP32[$ms + 828 >> 2] | 0) >>> 0 > 59 & ($10 | 0) == 0) {
     break;
    }
    $63 = $ms + 820 | 0; //@line 20204
    if ((HEAP16[$63 >> 1] | 0) != -32768) {
     HEAP32[$ms + 824 >> 2] = 1; //@line 20210
    }
    $68 = $ms + 8 | 0; //@line 20213
    $_013_i = 370 - $10 | 0;
    $70 = $10;
    do {
     if ($70 >>> 0 >= 370) {
      break;
     }
     HEAP16[$ms + 16 + ($70 << 1) >> 1] = -32768; //@line 20224
     $75 = (HEAP32[$68 >> 2] | 0) + 1 | 0; //@line 20226
     HEAP32[$68 >> 2] = $75 >>> 0 > 369 ? 0 : $75; //@line 20229
     $70 = (HEAP32[$9 >> 2] | 0) + 1 | 0; //@line 20231
     HEAP32[$9 >> 2] = $70; //@line 20232
     $_013_i = $_013_i - 1 | 0; //@line 20233
    } while (($_013_i | 0) != 0);
    HEAP16[$63 >> 1] = -32768; //@line 20242
    break;
   }
   $19 = 8 - (HEAP32[$ms + 764 >> 2] | 0) | 0; //@line 20249
   $20 = $ms + 8 | 0; //@line 20250
   $21 = $ms + 820 | 0; //@line 20251
   $22 = $ms + 824 | 0; //@line 20252
   $_024_i = 370 - $10 | 0;
   $24 = $10;
   do {
    if ($24 >>> 0 >= 370) {
     break L3131;
    }
    $_pre_i = HEAP32[$20 >> 2] | 0; //@line 20264
    do {
     if ((HEAP32[$13 >> 2] | 0) == 0) {
      $val_0_i = 32768; //@line 20268
     } else {
      $35 = HEAPU8[(HEAP32[$1 >> 2] | 0) + ($_pre_i << 1) | 0] << 8; //@line 20275
      if ($35 >>> 0 < 32768) {
       $val_0_i = 32768 - (((32768 - $35 | 0) >>> 0) / ($19 >>> 0) | 0) | 0; //@line 20283
       break;
      } else {
       $val_0_i = ((($35 - 32768 | 0) >>> 0) / ($19 >>> 0) | 0) + 32768 | 0; //@line 20289
       break;
      }
     }
    } while (0);
    $45 = $_pre_i + 1 | 0; //@line 20295
    HEAP32[$20 >> 2] = $45 >>> 0 > 369 ? 0 : $45; //@line 20298
    $_pre26_i = $val_0_i & 65535; //@line 20302
    if (($val_0_i | 0) != (HEAPU16[$21 >> 1] | 0)) {
     HEAP16[$21 >> 1] = $_pre26_i; //@line 20305
     HEAP32[$22 >> 2] = 1; //@line 20306
    }
    HEAP16[$ms + 16 + ($24 << 1) >> 1] = $_pre26_i; //@line 20310
    $24 = (HEAP32[$9 >> 2] | 0) + 1 | 0; //@line 20312
    HEAP32[$9 >> 2] = $24; //@line 20313
    $_024_i = $_024_i - 1 | 0; //@line 20314
   } while (($_024_i | 0) != 0);
  }
 } while (0);
 $81 = $ms + 824 | 0; //@line 20325
 $84 = $ms + 828 | 0; //@line 20328
 $85 = HEAP32[$84 >> 2] | 0; //@line 20329
 do {
  if ((HEAP32[$81 >> 2] | 0) == 0) {
   if ($85 >>> 0 >= 60) {
    break;
   }
   $94 = $85 + 1 | 0; //@line 20338
   HEAP32[$84 >> 2] = $94; //@line 20339
   if ($94 >>> 0 < 60) {
    label = 2493; //@line 20343
   }
  } else {
   if ($85 >>> 0 > 59) {
    $ms_idx_val = HEAP32[$5 >> 2] | 0; //@line 20349
    _memset($buf_i | 0, 0, 8192); //@line 20351
    $90 = $buf_i | 0; //@line 20352
    _snd_write($ms_idx_val, $90, 4096) | 0; //@line 20353
   }
   HEAP32[$84 >> 2] = 0; //@line 20356
   label = 2493; //@line 20358
  }
 } while (0);
 if ((label | 0) == 2493) {
  if ((HEAP32[$ms + 768 >> 2] | 0) == 0) {
   $_pre_phi = $ms + 16 | 0; //@line 20369
  } else {
   $102 = $ms + 16 | 0; //@line 20372
   _snd_iir2_filter($ms + 772 | 0, $102, $102, HEAP32[$9 >> 2] | 0, 1, 0); //@line 20374
   $_pre_phi = $102; //@line 20376
  }
  $105 = HEAP32[$5 >> 2] | 0; //@line 20379
  $106 = HEAP32[$9 >> 2] | 0; //@line 20380
  _snd_write($105, $_pre_phi, $106) | 0; //@line 20381
 }
 HEAP32[$81 >> 2] = 0; //@line 20384
 HEAP32[$ms + 8 >> 2] = 16; //@line 20386
 HEAP32[$9 >> 2] = 0; //@line 20387
 HEAP32[$ms + 756 >> 2] = 0; //@line 20389
 STACKTOP = sp; //@line 20391
 return;
}
function _mac_sound_clock($ms, $n) {
 $ms = $ms | 0;
 $n = $n | 0;
 var $1 = 0, $5 = 0, $9 = 0, $10 = 0, $13 = 0, $15 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $26 = 0, $_024_i = 0, $_pre_i = 0, $37 = 0, $val_0_i = 0, $47 = 0, $_pre26_i = 0, $55 = 0, $56 = 0, label = 0;
 $1 = $ms + 760 | 0; //@line 20408
 if ((HEAP32[$1 >> 2] | 0) == 0) {
  return;
 }
 $5 = $ms + 4 | 0; //@line 20416
 if ((HEAP32[$5 >> 2] | 0) == 0) {
  return;
 }
 $9 = $ms + 12 | 0; //@line 20424
 $10 = HEAP32[$9 >> 2] | 0; //@line 20425
 if ($10 >>> 0 > 369) {
  return;
 }
 $13 = $ms + 756 | 0; //@line 20432
 $15 = (HEAP32[$13 >> 2] | 0) + $n | 0; //@line 20434
 HEAP32[$13 >> 2] = $15; //@line 20435
 if ($15 >>> 0 <= 351) {
  return;
 }
 HEAP32[$13 >> 2] = ($15 >>> 0) % 352 | 0; //@line 20444
 $21 = 8 - (HEAP32[$ms + 764 >> 2] | 0) | 0; //@line 20447
 $22 = $ms + 8 | 0; //@line 20448
 $23 = $ms + 820 | 0; //@line 20449
 $24 = $ms + 824 | 0; //@line 20450
 $_024_i = ($15 >>> 0) / 352 | 0;
 $26 = $10;
 while (1) {
  if ($26 >>> 0 >= 370) {
   label = 2518; //@line 20458
   break;
  }
  $_pre_i = HEAP32[$22 >> 2] | 0; //@line 20463
  do {
   if ((HEAP32[$1 >> 2] | 0) == 0) {
    $val_0_i = 32768; //@line 20467
   } else {
    $37 = (HEAPU8[(HEAP32[$5 >> 2] | 0) + ($_pre_i << 1) | 0] | 0) << 8; //@line 20474
    if ($37 >>> 0 < 32768) {
     $val_0_i = 32768 - (((32768 - $37 | 0) >>> 0) / ($21 >>> 0) | 0) | 0; //@line 20482
     break;
    } else {
     $val_0_i = ((($37 - 32768 | 0) >>> 0) / ($21 >>> 0) | 0) + 32768 | 0; //@line 20488
     break;
    }
   }
  } while (0);
  $47 = $_pre_i + 1 | 0; //@line 20494
  HEAP32[$22 >> 2] = $47 >>> 0 > 369 ? 0 : $47; //@line 20497
  $_pre26_i = $val_0_i & 65535; //@line 20501
  if (($val_0_i | 0) != (HEAPU16[$23 >> 1] | 0 | 0)) {
   HEAP16[$23 >> 1] = $_pre26_i; //@line 20504
   HEAP32[$24 >> 2] = 1; //@line 20505
  }
  HEAP16[$ms + 16 + ($26 << 1) >> 1] = $_pre26_i; //@line 20509
  $55 = (HEAP32[$9 >> 2] | 0) + 1 | 0; //@line 20511
  HEAP32[$9 >> 2] = $55; //@line 20512
  $56 = $_024_i - 1 | 0; //@line 20513
  if (($56 | 0) == 0) {
   label = 2516; //@line 20517
   break;
  } else {
   $_024_i = $56;
   $26 = $55;
  }
 }
 if ((label | 0) == 2518) {
  return;
 } else if ((label | 0) == 2516) {
  return;
 }
}
function _mac_get_trap_name($trap) {
 $trap = $trap | 0;
 var $5 = 0, $_ = 0, $_9 = 0, $i_0 = 0, $8 = 0, $_0 = 0, label = 0;
 if (($trap & 61440 | 0) != 40960) {
  $_0 = 0; //@line 20545
  return $_0 | 0; //@line 20548
 }
 $5 = ($trap & 2048 | 0) == 0; //@line 20551
 $_ = $5 ? 63743 : 64511; //@line 20552
 $_9 = $5 ? 5208 : 400; //@line 20553
 $i_0 = 0; //@line 20555
 while (1) {
  $8 = HEAP32[$_9 + ($i_0 << 3) + 4 >> 2] | 0; //@line 20559
  if (($8 | 0) == 0) {
   $_0 = 0; //@line 20563
   label = 2528; //@line 20564
   break;
  }
  if ((((HEAPU16[$_9 + ($i_0 << 3) >> 1] | 0) ^ $trap) & $_ | 0) == 0) {
   $_0 = $8; //@line 20576
   label = 2529; //@line 20577
   break;
  } else {
   $i_0 = $i_0 + 1 | 0; //@line 20580
  }
 }
 if ((label | 0) == 2529) {
  return $_0 | 0; //@line 20586
 } else if ((label | 0) == 2528) {
  return $_0 | 0; //@line 20591
 }
 return 0;
}
function _mac_video_set_vbi_fct($mv, $ext, $fct) {
 $mv = $mv | 0;
 $ext = $ext | 0;
 $fct = $fct | 0;
 HEAP32[$mv + 52 >> 2] = $ext; //@line 20604
 HEAP32[$mv + 56 >> 2] = $fct; //@line 20607
 return;
}
function _mac_video_set_vbuf($mv, $vbuf) {
 $mv = $mv | 0;
 $vbuf = $vbuf | 0;
 HEAP32[$mv >> 2] = $vbuf; //@line 20620
 return;
}
function _mac_video_set_color($mv, $col0, $col1) {
 $mv = $mv | 0;
 $col0 = $col0 | 0;
 $col1 = $col1 | 0;
 HEAP8[$mv + 32 | 0] = $col0 >>> 16 & 255; //@line 20638
 HEAP8[$mv + 35 | 0] = $col1 >>> 16 & 255; //@line 20642
 HEAP8[$mv + 33 | 0] = $col0 >>> 8 & 255; //@line 20646
 HEAP8[$mv + 36 | 0] = $col1 >>> 8 & 255; //@line 20650
 HEAP8[$mv + 34 | 0] = $col0 & 255; //@line 20653
 HEAP8[$mv + 37 | 0] = $col1 & 255; //@line 20656
 HEAP8[$mv + 12 | 0] = 1; //@line 20658
 return;
}
function _mac_video_set_brightness($mv, $val) {
 $mv = $mv | 0;
 $val = $val | 0;
 var $_val = 0, $2 = 0;
 $_val = $val >>> 0 > 255 ? 255 : $val; //@line 20671
 $2 = $mv + 28 | 0; //@line 20672
 if ((HEAP32[$2 >> 2] | 0) == ($_val | 0)) {
  return;
 }
 HEAP8[$mv + 12 | 0] = 1; //@line 20681
 HEAP32[$2 >> 2] = $_val; //@line 20682
 return;
}
function _mac_video_new($w, $h) {
 $w = $w | 0;
 $h = $h | 0;
 var $1 = 0, $2 = 0, $18 = 0, $24 = 0, $_0 = 0;
 $1 = _malloc(60) | 0; //@line 20700
 $2 = $1; //@line 20701
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 20705
  return $_0 | 0; //@line 20708
 }
 HEAP32[$1 >> 2] = 0; //@line 20711
 HEAP32[$1 + 44 >> 2] = 0; //@line 20714
 HEAP32[$1 + 4 >> 2] = $w; //@line 20717
 HEAP32[$1 + 8 >> 2] = $h; //@line 20720
 HEAP8[$1 + 12 | 0] = 0; //@line 20722
 HEAP32[$1 + 16 >> 2] = 8; //@line 20725
 $18 = _malloc(Math_imul(($w + 7 | 0) >>> 3, $h) | 0) | 0; //@line 20729
 HEAP32[$1 + 20 >> 2] = $18; //@line 20732
 do {
  if (($18 | 0) != 0) {
   $24 = _malloc($w * 24 | 0) | 0; //@line 20738
   HEAP32[$1 + 24 >> 2] = $24; //@line 20741
   if (($24 | 0) == 0) {
    break;
   }
   HEAP32[$1 + 28 >> 2] = 255; //@line 20749
   HEAP8[$1 + 32 | 0] = 0; //@line 20751
   HEAP8[$1 + 33 | 0] = 0; //@line 20753
   HEAP8[$1 + 34 | 0] = 0; //@line 20755
   HEAP8[$1 + 35 | 0] = -1; //@line 20757
   HEAP8[$1 + 36 | 0] = -1; //@line 20759
   HEAP8[$1 + 37 | 0] = -1; //@line 20761
   HEAP32[$1 + 40 >> 2] = 0; //@line 20764
   HEAP8[$1 + 48 | 0] = 0; //@line 20766
   HEAP32[$1 + 52 >> 2] = 0; //@line 20769
   HEAP32[$1 + 56 >> 2] = 0; //@line 20772
   $_0 = $2; //@line 20774
   return $_0 | 0; //@line 20777
  }
 } while (0);
 _free($1); //@line 20780
 $_0 = 0; //@line 20782
 return $_0 | 0; //@line 20785
}
function _mac_video_set_terminal($mv, $trm) {
 $mv = $mv | 0;
 $trm = $trm | 0;
 HEAP32[$mv + 44 >> 2] = $trm; //@line 20796
 if (($trm | 0) == 0) {
  return;
 }
 _trm_open($trm, HEAP32[$mv + 4 >> 2] | 0, HEAP32[$mv + 8 >> 2] | 0) | 0; //@line 20807
 return;
}
function _mac_video_update($mv) {
 $mv = $mv | 0;
 var $col0 = 0, $col1 = 0, $1 = 0, $2 = 0, $5 = 0, $9 = 0, $16 = 0, $23 = 0, $30 = 0, $37 = 0, $44 = 0, $51 = 0, $52 = 0, $54 = 0, $57 = 0, $58 = 0, $63 = 0, $64 = 0, $66 = 0, $y_059 = 0, $dst_058 = 0, $src_057 = 0, $67 = 0, $68 = 0, $_ = 0, $73 = 0, $80 = 0, $i_156 = 0, $j_055 = 0, $110 = 0, $114 = 0, $115 = 0, $_pre_phi = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 20833
 STACKTOP = STACKTOP + 16 | 0; //@line 20833
 $col0 = sp | 0; //@line 20834
 $col1 = sp + 8 | 0; //@line 20835
 $1 = $mv + 44 | 0; //@line 20836
 $2 = HEAP32[$1 >> 2] | 0; //@line 20837
 if (($2 | 0) == 0) {
  STACKTOP = sp; //@line 20841
  return;
 }
 $5 = $mv | 0; //@line 20844
 if ((HEAP32[$5 >> 2] | 0) == 0) {
  STACKTOP = sp; //@line 20849
  return;
 }
 $9 = HEAP32[$mv + 28 >> 2] | 0; //@line 20853
 $16 = $col0 | 0; //@line 20860
 HEAP8[$16] = (((Math_imul(HEAPU8[$mv + 32 | 0] | 0, $9) | 0) >>> 0) / 255 | 0) & 255; //@line 20861
 $23 = $col1 | 0; //@line 20868
 HEAP8[$23] = (((Math_imul(HEAPU8[$mv + 35 | 0] | 0, $9) | 0) >>> 0) / 255 | 0) & 255; //@line 20869
 $30 = $col0 + 1 | 0; //@line 20876
 HEAP8[$30] = (((Math_imul(HEAPU8[$mv + 33 | 0] | 0, $9) | 0) >>> 0) / 255 | 0) & 255; //@line 20877
 $37 = $col1 + 1 | 0; //@line 20884
 HEAP8[$37] = (((Math_imul(HEAPU8[$mv + 36 | 0] | 0, $9) | 0) >>> 0) / 255 | 0) & 255; //@line 20885
 $44 = $col0 + 2 | 0; //@line 20892
 HEAP8[$44] = (((Math_imul(HEAPU8[$mv + 34 | 0] | 0, $9) | 0) >>> 0) / 255 | 0) & 255; //@line 20893
 $51 = $col1 + 2 | 0; //@line 20900
 HEAP8[$51] = (((Math_imul(HEAPU8[$mv + 37 | 0] | 0, $9) | 0) >>> 0) / 255 | 0) & 255; //@line 20901
 $52 = $mv + 4 | 0; //@line 20902
 $54 = $mv + 8 | 0; //@line 20904
 _trm_set_size($2, HEAP32[$52 >> 2] | 0, HEAP32[$54 >> 2] | 0); //@line 20906
 $57 = HEAP32[$mv + 24 >> 2] | 0; //@line 20908
 $58 = HEAP32[$54 >> 2] | 0; //@line 20909
 L3240 : do {
  if (($58 | 0) == 0) {
   $_pre_phi = $mv + 12 | 0; //@line 20916
  } else {
   $63 = $mv + 16 | 0; //@line 20921
   $64 = $mv + 12 | 0; //@line 20922
   $src_057 = HEAP32[$5 >> 2] | 0;
   $dst_058 = HEAP32[$mv + 20 >> 2] | 0;
   $y_059 = 0;
   $66 = $58;
   while (1) {
    $67 = $66 - $y_059 | 0; //@line 20930
    $68 = HEAP32[$63 >> 2] | 0; //@line 20931
    $_ = $67 >>> 0 > $68 >>> 0 ? $68 : $67; //@line 20933
    $73 = Math_imul(((HEAP32[$52 >> 2] | 0) + 7 | 0) >>> 3, $_) | 0; //@line 20937
    if ((HEAP8[$64] | 0) == 0) {
     if ((_memcmp($dst_058 | 0, $src_057 | 0, $73 | 0) | 0) == 0) {
      $114 = $66; //@line 20946
     } else {
      label = 2559; //@line 20948
     }
    } else {
     label = 2559; //@line 20951
    }
    if ((label | 0) == 2559) {
     label = 0; //@line 20954
     _memcpy($dst_058 | 0, $src_057 | 0, $73) | 0; //@line 20955
     $80 = $73 << 3; //@line 20956
     if (($80 | 0) != 0) {
      $j_055 = 0;
      $i_156 = 0;
      while (1) {
       if ((HEAPU8[$dst_058 + ($i_156 >>> 3) | 0] & 128 >>> (($i_156 & 7) >>> 0) | 0) == 0) {
        HEAP8[$57 + $j_055 | 0] = HEAP8[$23] | 0; //@line 20976
        HEAP8[$57 + ($j_055 + 1) | 0] = HEAP8[$37] | 0; //@line 20980
        HEAP8[$57 + ($j_055 + 2) | 0] = HEAP8[$51] | 0; //@line 20984
       } else {
        HEAP8[$57 + $j_055 | 0] = HEAP8[$16] | 0; //@line 20988
        HEAP8[$57 + ($j_055 + 1) | 0] = HEAP8[$30] | 0; //@line 20992
        HEAP8[$57 + ($j_055 + 2) | 0] = HEAP8[$44] | 0; //@line 20996
       }
       $110 = $i_156 + 1 | 0; //@line 21000
       if ($110 >>> 0 < $80 >>> 0) {
        $j_055 = $j_055 + 3 | 0;
        $i_156 = $110;
       } else {
        break;
       }
      }
     }
     _trm_set_lines(HEAP32[$1 >> 2] | 0, $57, $y_059, $_); //@line 21011
     $114 = HEAP32[$54 >> 2] | 0; //@line 21014
    }
    $115 = $_ + $y_059 | 0; //@line 21017
    if ($115 >>> 0 >= $114 >>> 0) {
     $_pre_phi = $64; //@line 21021
     break L3240;
    }
    $src_057 = $src_057 + $73 | 0;
    $dst_058 = $dst_058 + $73 | 0;
    $y_059 = $115;
    $66 = $114;
   }
  }
 } while (0);
 HEAP8[$_pre_phi] = 0; //@line 21032
 _trm_update(HEAP32[$1 >> 2] | 0); //@line 21034
 STACKTOP = sp; //@line 21036
 return;
}
function _mac_video_clock($mv, $n) {
 $mv = $mv | 0;
 $n = $n | 0;
 var $1 = 0, $2 = 0, $3 = 0, $8 = 0, $13 = 0, $18 = 0, $21 = 0, $26 = 0, $31 = 0;
 $1 = $mv + 40 | 0; //@line 21050
 $2 = HEAP32[$1 >> 2] | 0; //@line 21051
 $3 = $2 + $n | 0; //@line 21052
 HEAP32[$1 >> 2] = $3; //@line 21053
 if ($3 >>> 0 < 120384) {
  return;
 }
 do {
  if ($2 >>> 0 < 120384) {
   _mac_video_update($mv); //@line 21064
   $8 = $mv + 48 | 0; //@line 21065
   if ((HEAP8[$8] | 0) == 1) {
    break;
   }
   HEAP8[$8] = 1; //@line 21072
   $13 = HEAP32[$mv + 56 >> 2] | 0; //@line 21074
   if (($13 | 0) == 0) {
    break;
   }
   FUNCTION_TABLE_vii[$13 & 511](HEAP32[$mv + 52 >> 2] | 0, 1); //@line 21082
  }
 } while (0);
 $18 = HEAP32[$1 >> 2] | 0; //@line 21086
 if ($18 >>> 0 <= 130239) {
  return;
 }
 $21 = $mv + 48 | 0; //@line 21093
 do {
  if ((HEAP8[$21] | 0) == 0) {
   $31 = $18; //@line 21099
  } else {
   HEAP8[$21] = 0; //@line 21101
   $26 = HEAP32[$mv + 56 >> 2] | 0; //@line 21103
   if (($26 | 0) == 0) {
    $31 = $18; //@line 21107
    break;
   }
   FUNCTION_TABLE_vii[$26 & 511](HEAP32[$mv + 52 >> 2] | 0, 0); //@line 21112
   $31 = HEAP32[$1 >> 2] | 0; //@line 21115
  }
 } while (0);
 HEAP32[$1 >> 2] = $31 - 130240; //@line 21120
 return;
}
function _e68_dasm_mem($c, $da, $pc) {
 $c = $c | 0;
 $da = $da | 0;
 $pc = $pc | 0;
 var $src = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $i_07 = 0, $6 = 0, $_0_i = 0, $21 = 0, $25 = 0, $29 = 0, $33 = 0, $i_018_i = 0, $43 = 0, sp = 0;
 sp = STACKTOP; //@line 21140
 STACKTOP = STACKTOP + 16 | 0; //@line 21140
 $src = sp | 0; //@line 21141
 $1 = $c + 36 | 0; //@line 21142
 $2 = $c + 32 | 0; //@line 21143
 $3 = $c + 8 | 0; //@line 21144
 $4 = $c + 4 | 0; //@line 21145
 $i_07 = 0; //@line 21147
 do {
  $6 = $i_07 + $pc & 16777215; //@line 21151
  if ($6 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
   $_0_i = HEAP8[(HEAP32[$2 >> 2] | 0) + $6 | 0] | 0; //@line 21160
  } else {
   $_0_i = FUNCTION_TABLE_iii[HEAP32[$3 >> 2] & 63](HEAP32[$4 >> 2] | 0, $6) | 0; //@line 21166
  }
  HEAP8[$src + $i_07 | 0] = $_0_i; //@line 21170
  $i_07 = $i_07 + 1 | 0; //@line 21171
 } while ($i_07 >>> 0 < 16);
 $21 = $src | 0; //@line 21180
 HEAP32[$da >> 2] = 0; //@line 21182
 HEAP32[$da + 4 >> 2] = $pc; //@line 21184
 HEAP8[$da + 288 | 0] = 0; //@line 21186
 $25 = HEAP8[$21] | 0; //@line 21187
 $29 = HEAP8[$src + 1 | 0] | 0; //@line 21191
 HEAP16[$da + 12 >> 1] = ($25 & 255) << 8 | $29 & 255; //@line 21195
 $33 = $da + 8 | 0; //@line 21196
 HEAP32[$33 >> 2] = 1; //@line 21197
 FUNCTION_TABLE_vii[HEAP32[20824 + ((($29 & 255) >>> 6 | ($25 & 255) << 2) << 2) >> 2] & 511]($da, $21); //@line 21205
 if ((HEAP32[$33 >> 2] | 0) == 0) {
  STACKTOP = sp; //@line 21210
  return;
 } else {
  $i_018_i = 0; //@line 21213
 }
 do {
  $43 = $i_018_i << 1; //@line 21217
  HEAP16[$da + 12 + ($i_018_i << 1) >> 1] = (HEAPU8[$src + $43 | 0] | 0) << 8 | (HEAPU8[$src + ($43 | 1) | 0] | 0); //@line 21228
  $i_018_i = $i_018_i + 1 | 0; //@line 21229
 } while ($i_018_i >>> 0 < (HEAP32[$33 >> 2] | 0) >>> 0);
 STACKTOP = sp; //@line 21239
 return;
}
function _d_0000($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $4 = 0, $5 = 0, $10 = 0, $12 = 0, $15 = 0, $17 = 0, sp = 0;
 sp = STACKTOP; //@line 21251
 $4 = (HEAP16[$da + 12 >> 1] & 63) == 60; //@line 21255
 $5 = $da + 32 | 0; //@line 21256
 HEAP8[$5] = HEAP8[47648] | 0; //@line 21257
 HEAP8[$5 + 1 | 0] = HEAP8[47649 | 0] | 0; //@line 21257
 HEAP8[$5 + 2 | 0] = HEAP8[47650 | 0] | 0; //@line 21257
 HEAP8[$5 + 3 | 0] = HEAP8[47651 | 0] | 0; //@line 21257
 HEAP8[$5 + 4 | 0] = HEAP8[47652 | 0] | 0; //@line 21257
 HEAP8[$5 + 5 | 0] = HEAP8[47653 | 0] | 0; //@line 21257
 HEAP32[$da + 28 >> 2] = 2; //@line 21259
 $10 = HEAPU8[$src + 3 | 0] | 0; //@line 21263
 _sprintf($da + 96 | 0, 54856, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $10, tempInt) | 0) | 0; //@line 21264
 $12 = $da + 8 | 0; //@line 21265
 HEAP32[$12 >> 2] = (HEAP32[$12 >> 2] | 0) + 1; //@line 21268
 $15 = $da + 160 | 0; //@line 21269
 if ($4) {
  $17 = $15; //@line 21272
  tempBigInt = 5391171; //@line 21273
  HEAP8[$17] = tempBigInt & 255; //@line 21273
  tempBigInt = tempBigInt >> 8; //@line 21273
  HEAP8[$17 + 1 | 0] = tempBigInt & 255; //@line 21273
  tempBigInt = tempBigInt >> 8; //@line 21273
  HEAP8[$17 + 2 | 0] = tempBigInt & 255; //@line 21273
  tempBigInt = tempBigInt >> 8; //@line 21273
  HEAP8[$17 + 3 | 0] = tempBigInt & 255; //@line 21273
  STACKTOP = sp; //@line 21275
  return;
 } else {
  _dasm_ea($da, $15, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 21282
  STACKTOP = sp; //@line 21283
  return;
 }
}
function _d_0040($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $4 = 0, $5 = 0, $16 = 0, $18 = 0, $21 = 0, $23 = 0, sp = 0;
 sp = STACKTOP; //@line 21297
 $4 = (HEAP16[$da + 12 >> 1] & 63) == 60; //@line 21301
 $5 = $da + 32 | 0; //@line 21302
 HEAP8[$5] = HEAP8[47680] | 0; //@line 21303
 HEAP8[$5 + 1 | 0] = HEAP8[47681 | 0] | 0; //@line 21303
 HEAP8[$5 + 2 | 0] = HEAP8[47682 | 0] | 0; //@line 21303
 HEAP8[$5 + 3 | 0] = HEAP8[47683 | 0] | 0; //@line 21303
 HEAP8[$5 + 4 | 0] = HEAP8[47684 | 0] | 0; //@line 21303
 HEAP8[$5 + 5 | 0] = HEAP8[47685 | 0] | 0; //@line 21303
 HEAP32[$da + 28 >> 2] = 2; //@line 21305
 $16 = ((HEAPU8[$src + 2 | 0] | 0) << 8 | (HEAPU8[$src + 3 | 0] | 0)) & 65535; //@line 21315
 _sprintf($da + 96 | 0, 47464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $16, tempInt) | 0) | 0; //@line 21316
 $18 = $da + 8 | 0; //@line 21317
 HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 1; //@line 21320
 $21 = $da + 160 | 0; //@line 21321
 if ($4) {
  HEAP8[$21] = HEAP8[51464] | 0; //@line 21324
  HEAP8[$21 + 1 | 0] = HEAP8[51465 | 0] | 0; //@line 21324
  HEAP8[$21 + 2 | 0] = HEAP8[51466 | 0] | 0; //@line 21324
  $23 = $da | 0; //@line 21325
  HEAP32[$23 >> 2] = HEAP32[$23 >> 2] | 1; //@line 21328
  STACKTOP = sp; //@line 21330
  return;
 } else {
  _dasm_ea($da, $21, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 21337
  STACKTOP = sp; //@line 21338
  return;
 }
}
function _d_0080($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $21 = 0, $23 = 0, sp = 0;
 sp = STACKTOP; //@line 21352
 $1 = $da + 32 | 0; //@line 21353
 HEAP8[$1] = HEAP8[47704] | 0; //@line 21354
 HEAP8[$1 + 1 | 0] = HEAP8[47705 | 0] | 0; //@line 21354
 HEAP8[$1 + 2 | 0] = HEAP8[47706 | 0] | 0; //@line 21354
 HEAP8[$1 + 3 | 0] = HEAP8[47707 | 0] | 0; //@line 21354
 HEAP8[$1 + 4 | 0] = HEAP8[47708 | 0] | 0; //@line 21354
 HEAP8[$1 + 5 | 0] = HEAP8[47709 | 0] | 0; //@line 21354
 HEAP32[$da + 28 >> 2] = 2; //@line 21356
 $21 = (((HEAPU8[$src + 2 | 0] | 0) << 8 | (HEAPU8[$src + 3 | 0] | 0)) << 8 | (HEAPU8[$src + 4 | 0] | 0)) << 8 | (HEAPU8[$src + 5 | 0] | 0); //@line 21375
 _sprintf($da + 96 | 0, 54072, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $21, tempInt) | 0) | 0; //@line 21376
 $23 = $da + 8 | 0; //@line 21377
 HEAP32[$23 >> 2] = (HEAP32[$23 >> 2] | 0) + 2; //@line 21380
 _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 21386
 STACKTOP = sp; //@line 21387
 return;
}
function _d_00c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $2 = 0, $5 = 0, $9 = 0, $17 = 0, $20 = 0, $23 = 0, $25 = 0, $34 = 0, $37 = 0, $40 = 0, $42 = 0, $45 = 0, $46 = 0, $47 = 0, sp = 0;
 sp = STACKTOP; //@line 21402
 $1 = $da + 8 | 0; //@line 21403
 $2 = HEAP32[$1 >> 2] | 0; //@line 21404
 $5 = HEAP8[$src + ($2 << 1) | 0] | 0; //@line 21407
 HEAP32[$1 >> 2] = $2 + 1; //@line 21409
 $9 = $da + 32 | 0; //@line 21412
 if (($5 & 8) == 0) {
  HEAP8[$9] = HEAP8[47728] | 0; //@line 21415
  HEAP8[$9 + 1 | 0] = HEAP8[47729 | 0] | 0; //@line 21415
  HEAP8[$9 + 2 | 0] = HEAP8[47730 | 0] | 0; //@line 21415
  HEAP8[$9 + 3 | 0] = HEAP8[47731 | 0] | 0; //@line 21415
  HEAP8[$9 + 4 | 0] = HEAP8[47732 | 0] | 0; //@line 21415
  HEAP8[$9 + 5 | 0] = HEAP8[47733 | 0] | 0; //@line 21415
  HEAP8[$9 + 6 | 0] = HEAP8[47734 | 0] | 0; //@line 21415
  HEAP32[$da + 28 >> 2] = 2; //@line 21417
  _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 21423
  $34 = $da + 160 | 0; //@line 21424
  $37 = HEAPU8[$src + 2 | 0] | 0; //@line 21427
  $40 = ($37 & 128 | 0) != 0 ? 34768 : 32184; //@line 21430
  $42 = $37 >>> 4 & 7; //@line 21432
  _sprintf($34 | 0, 37704, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $40, HEAP32[tempInt + 8 >> 2] = $42, tempInt) | 0) | 0; //@line 21433
  $45 = $da | 0; //@line 21434
  $46 = HEAP32[$45 >> 2] | 0; //@line 21435
  $47 = $46 | 128; //@line 21436
  HEAP32[$45 >> 2] = $47; //@line 21437
  STACKTOP = sp; //@line 21438
  return;
 } else {
  HEAP8[$9] = HEAP8[47760] | 0; //@line 21441
  HEAP8[$9 + 1 | 0] = HEAP8[47761 | 0] | 0; //@line 21441
  HEAP8[$9 + 2 | 0] = HEAP8[47762 | 0] | 0; //@line 21441
  HEAP8[$9 + 3 | 0] = HEAP8[47763 | 0] | 0; //@line 21441
  HEAP8[$9 + 4 | 0] = HEAP8[47764 | 0] | 0; //@line 21441
  HEAP8[$9 + 5 | 0] = HEAP8[47765 | 0] | 0; //@line 21441
  HEAP8[$9 + 6 | 0] = HEAP8[47766 | 0] | 0; //@line 21441
  HEAP32[$da + 28 >> 2] = 2; //@line 21443
  _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 21449
  $17 = $da + 160 | 0; //@line 21450
  $20 = HEAPU8[$src + 2 | 0] | 0; //@line 21453
  $23 = ($20 & 128 | 0) != 0 ? 34768 : 32184; //@line 21456
  $25 = $20 >>> 4 & 7; //@line 21458
  _sprintf($17 | 0, 37704, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $23, HEAP32[tempInt + 8 >> 2] = $25, tempInt) | 0) | 0; //@line 21459
  $45 = $da | 0; //@line 21461
  $46 = HEAP32[$45 >> 2] | 0; //@line 21462
  $47 = $46 | 128; //@line 21463
  HEAP32[$45 >> 2] = $47; //@line 21464
  STACKTOP = sp; //@line 21465
  return;
 }
}
function _d_0100($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $2 = 0, $4 = 0, $6 = 0, $st$1$0 = 0, $st$2$1 = 0, $8 = 0, $17 = 0, $19 = 0, $20 = 0, $22 = 0, $24 = 0, $26 = 0, $29 = 0, $33 = 0, $37 = 0, $41 = 0, sp = 0;
 sp = STACKTOP; //@line 21482
 $2 = HEAP16[$da + 12 >> 1] | 0; //@line 21484
 $4 = $da + 32 | 0; //@line 21487
 if (($2 & 56) == 8) {
  $6 = $4; //@line 21490
  $st$1$0 = $6 | 0; //@line 21493
  tempBigInt = 1163284301; //@line 21494
  HEAP8[$st$1$0] = tempBigInt & 255; //@line 21494
  tempBigInt = tempBigInt >> 8; //@line 21494
  HEAP8[$st$1$0 + 1 | 0] = tempBigInt & 255; //@line 21494
  tempBigInt = tempBigInt >> 8; //@line 21494
  HEAP8[$st$1$0 + 2 | 0] = tempBigInt & 255; //@line 21494
  tempBigInt = tempBigInt >> 8; //@line 21494
  HEAP8[$st$1$0 + 3 | 0] = tempBigInt & 255; //@line 21494
  $st$2$1 = $6 + 4 | 0; //@line 21495
  tempBigInt = 5713488; //@line 21496
  HEAP8[$st$2$1] = tempBigInt & 255; //@line 21496
  tempBigInt = tempBigInt >> 8; //@line 21496
  HEAP8[$st$2$1 + 1 | 0] = tempBigInt & 255; //@line 21496
  tempBigInt = tempBigInt >> 8; //@line 21496
  HEAP8[$st$2$1 + 2 | 0] = tempBigInt & 255; //@line 21496
  tempBigInt = tempBigInt >> 8; //@line 21496
  HEAP8[$st$2$1 + 3 | 0] = tempBigInt & 255; //@line 21496
  HEAP32[$da + 28 >> 2] = 2; //@line 21498
  $8 = $da + 96 | 0; //@line 21499
  $17 = ((HEAPU8[$src + 2 | 0] | 0) << 8 | (HEAPU8[$src + 3 | 0] | 0)) & 65535; //@line 21508
  $19 = ($17 & 32768 | 0) != 0; //@line 21510
  $20 = $19 ? 56344 : 62888; //@line 21511
  $22 = ($19 ? -$17 | 0 : $17) & 65535; //@line 21514
  $24 = $2 & 7; //@line 21516
  _sprintf($8 | 0, 57472, (tempInt = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempInt >> 2] = $20, HEAP32[tempInt + 8 >> 2] = 41376, HEAP32[tempInt + 16 >> 2] = $22, HEAP32[tempInt + 24 >> 2] = $24, tempInt) | 0) | 0; //@line 21517
  $26 = $da + 8 | 0; //@line 21518
  HEAP32[$26 >> 2] = (HEAP32[$26 >> 2] | 0) + 1; //@line 21521
  $29 = $da + 160 | 0; //@line 21522
  $33 = (HEAPU8[$src] | 0) >>> 1 & 7; //@line 21526
  _sprintf($29 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $33, tempInt) | 0) | 0; //@line 21527
  STACKTOP = sp; //@line 21529
  return;
 } else {
  HEAP8[$4] = HEAP8[48320] | 0; //@line 21532
  HEAP8[$4 + 1 | 0] = HEAP8[48321 | 0] | 0; //@line 21532
  HEAP8[$4 + 2 | 0] = HEAP8[48322 | 0] | 0; //@line 21532
  HEAP8[$4 + 3 | 0] = HEAP8[48323 | 0] | 0; //@line 21532
  HEAP8[$4 + 4 | 0] = HEAP8[48324 | 0] | 0; //@line 21532
  HEAP32[$da + 28 >> 2] = 2; //@line 21534
  $37 = $da + 96 | 0; //@line 21535
  $41 = (HEAPU8[$src] | 0) >>> 1 & 7; //@line 21539
  _sprintf($37 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $41, tempInt) | 0) | 0; //@line 21540
  _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 21546
  STACKTOP = sp; //@line 21548
  return;
 }
}
function _d_0140($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $2 = 0, $4 = 0, $6 = 0, $st$1$0 = 0, $st$2$1 = 0, $8 = 0, $17 = 0, $19 = 0, $20 = 0, $22 = 0, $24 = 0, $26 = 0, $29 = 0, $33 = 0, $37 = 0, $41 = 0, sp = 0;
 sp = STACKTOP; //@line 21565
 $2 = HEAP16[$da + 12 >> 1] | 0; //@line 21567
 $4 = $da + 32 | 0; //@line 21570
 if (($2 & 56) == 8) {
  $6 = $4; //@line 21573
  $st$1$0 = $6 | 0; //@line 21576
  tempBigInt = 1163284301; //@line 21577
  HEAP8[$st$1$0] = tempBigInt & 255; //@line 21577
  tempBigInt = tempBigInt >> 8; //@line 21577
  HEAP8[$st$1$0 + 1 | 0] = tempBigInt & 255; //@line 21577
  tempBigInt = tempBigInt >> 8; //@line 21577
  HEAP8[$st$1$0 + 2 | 0] = tempBigInt & 255; //@line 21577
  tempBigInt = tempBigInt >> 8; //@line 21577
  HEAP8[$st$1$0 + 3 | 0] = tempBigInt & 255; //@line 21577
  $st$2$1 = $6 + 4 | 0; //@line 21578
  tempBigInt = 4992592; //@line 21579
  HEAP8[$st$2$1] = tempBigInt & 255; //@line 21579
  tempBigInt = tempBigInt >> 8; //@line 21579
  HEAP8[$st$2$1 + 1 | 0] = tempBigInt & 255; //@line 21579
  tempBigInt = tempBigInt >> 8; //@line 21579
  HEAP8[$st$2$1 + 2 | 0] = tempBigInt & 255; //@line 21579
  tempBigInt = tempBigInt >> 8; //@line 21579
  HEAP8[$st$2$1 + 3 | 0] = tempBigInt & 255; //@line 21579
  HEAP32[$da + 28 >> 2] = 2; //@line 21581
  $8 = $da + 96 | 0; //@line 21582
  $17 = ((HEAPU8[$src + 2 | 0] | 0) << 8 | (HEAPU8[$src + 3 | 0] | 0)) & 65535; //@line 21591
  $19 = ($17 & 32768 | 0) != 0; //@line 21593
  $20 = $19 ? 56344 : 62888; //@line 21594
  $22 = ($19 ? -$17 | 0 : $17) & 65535; //@line 21597
  $24 = $2 & 7; //@line 21599
  _sprintf($8 | 0, 57472, (tempInt = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempInt >> 2] = $20, HEAP32[tempInt + 8 >> 2] = 41376, HEAP32[tempInt + 16 >> 2] = $22, HEAP32[tempInt + 24 >> 2] = $24, tempInt) | 0) | 0; //@line 21600
  $26 = $da + 8 | 0; //@line 21601
  HEAP32[$26 >> 2] = (HEAP32[$26 >> 2] | 0) + 1; //@line 21604
  $29 = $da + 160 | 0; //@line 21605
  $33 = (HEAPU8[$src] | 0) >>> 1 & 7; //@line 21609
  _sprintf($29 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $33, tempInt) | 0) | 0; //@line 21610
  STACKTOP = sp; //@line 21612
  return;
 } else {
  HEAP8[$4] = HEAP8[48368] | 0; //@line 21615
  HEAP8[$4 + 1 | 0] = HEAP8[48369 | 0] | 0; //@line 21615
  HEAP8[$4 + 2 | 0] = HEAP8[48370 | 0] | 0; //@line 21615
  HEAP8[$4 + 3 | 0] = HEAP8[48371 | 0] | 0; //@line 21615
  HEAP8[$4 + 4 | 0] = HEAP8[48372 | 0] | 0; //@line 21615
  HEAP32[$da + 28 >> 2] = 2; //@line 21617
  $37 = $da + 96 | 0; //@line 21618
  $41 = (HEAPU8[$src] | 0) >>> 1 & 7; //@line 21622
  _sprintf($37 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $41, tempInt) | 0) | 0; //@line 21623
  _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 21629
  STACKTOP = sp; //@line 21631
  return;
 }
}
function _d_0180($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $4 = 0, $6 = 0, $st$1$0 = 0, $st$2$1 = 0, $8 = 0, $12 = 0, $14 = 0, $23 = 0, $25 = 0, $26 = 0, $28 = 0, $31 = 0, $33 = 0, $38 = 0, $42 = 0, sp = 0;
 sp = STACKTOP; //@line 21648
 $1 = $da + 12 | 0; //@line 21649
 $4 = $da + 32 | 0; //@line 21653
 if ((HEAP16[$1 >> 1] & 56) == 8) {
  $6 = $4; //@line 21656
  $st$1$0 = $6 | 0; //@line 21659
  tempBigInt = 1163284301; //@line 21660
  HEAP8[$st$1$0] = tempBigInt & 255; //@line 21660
  tempBigInt = tempBigInt >> 8; //@line 21660
  HEAP8[$st$1$0 + 1 | 0] = tempBigInt & 255; //@line 21660
  tempBigInt = tempBigInt >> 8; //@line 21660
  HEAP8[$st$1$0 + 2 | 0] = tempBigInt & 255; //@line 21660
  tempBigInt = tempBigInt >> 8; //@line 21660
  HEAP8[$st$1$0 + 3 | 0] = tempBigInt & 255; //@line 21660
  $st$2$1 = $6 + 4 | 0; //@line 21661
  tempBigInt = 5713488; //@line 21662
  HEAP8[$st$2$1] = tempBigInt & 255; //@line 21662
  tempBigInt = tempBigInt >> 8; //@line 21662
  HEAP8[$st$2$1 + 1 | 0] = tempBigInt & 255; //@line 21662
  tempBigInt = tempBigInt >> 8; //@line 21662
  HEAP8[$st$2$1 + 2 | 0] = tempBigInt & 255; //@line 21662
  tempBigInt = tempBigInt >> 8; //@line 21662
  HEAP8[$st$2$1 + 3 | 0] = tempBigInt & 255; //@line 21662
  HEAP32[$da + 28 >> 2] = 2; //@line 21664
  $8 = $da + 96 | 0; //@line 21665
  $12 = (HEAPU8[$src] | 0) >>> 1 & 7; //@line 21669
  _sprintf($8 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $12, tempInt) | 0) | 0; //@line 21670
  $14 = $da + 160 | 0; //@line 21671
  $23 = ((HEAPU8[$src + 2 | 0] | 0) << 8 | (HEAPU8[$src + 3 | 0] | 0)) & 65535; //@line 21680
  $25 = ($23 & 32768 | 0) != 0; //@line 21682
  $26 = $25 ? 56344 : 62888; //@line 21683
  $28 = ($25 ? -$23 | 0 : $23) & 65535; //@line 21686
  $31 = HEAP16[$1 >> 1] & 7; //@line 21689
  _sprintf($14 | 0, 57472, (tempInt = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempInt >> 2] = $26, HEAP32[tempInt + 8 >> 2] = 41376, HEAP32[tempInt + 16 >> 2] = $28, HEAP32[tempInt + 24 >> 2] = $31, tempInt) | 0) | 0; //@line 21690
  $33 = $da + 8 | 0; //@line 21691
  HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 1; //@line 21694
  STACKTOP = sp; //@line 21696
  return;
 } else {
  HEAP8[$4] = HEAP8[48392] | 0; //@line 21699
  HEAP8[$4 + 1 | 0] = HEAP8[48393 | 0] | 0; //@line 21699
  HEAP8[$4 + 2 | 0] = HEAP8[48394 | 0] | 0; //@line 21699
  HEAP8[$4 + 3 | 0] = HEAP8[48395 | 0] | 0; //@line 21699
  HEAP8[$4 + 4 | 0] = HEAP8[48396 | 0] | 0; //@line 21699
  HEAP32[$da + 28 >> 2] = 2; //@line 21701
  $38 = $da + 96 | 0; //@line 21702
  $42 = (HEAPU8[$src] | 0) >>> 1 & 7; //@line 21706
  _sprintf($38 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $42, tempInt) | 0) | 0; //@line 21707
  _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 21713
  STACKTOP = sp; //@line 21715
  return;
 }
}
function _d_01c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $4 = 0, $6 = 0, $st$1$0 = 0, $st$2$1 = 0, $8 = 0, $12 = 0, $14 = 0, $23 = 0, $25 = 0, $26 = 0, $28 = 0, $31 = 0, $33 = 0, $38 = 0, $42 = 0, sp = 0;
 sp = STACKTOP; //@line 21732
 $1 = $da + 12 | 0; //@line 21733
 $4 = $da + 32 | 0; //@line 21737
 if ((HEAP16[$1 >> 1] & 56) == 8) {
  $6 = $4; //@line 21740
  $st$1$0 = $6 | 0; //@line 21743
  tempBigInt = 1163284301; //@line 21744
  HEAP8[$st$1$0] = tempBigInt & 255; //@line 21744
  tempBigInt = tempBigInt >> 8; //@line 21744
  HEAP8[$st$1$0 + 1 | 0] = tempBigInt & 255; //@line 21744
  tempBigInt = tempBigInt >> 8; //@line 21744
  HEAP8[$st$1$0 + 2 | 0] = tempBigInt & 255; //@line 21744
  tempBigInt = tempBigInt >> 8; //@line 21744
  HEAP8[$st$1$0 + 3 | 0] = tempBigInt & 255; //@line 21744
  $st$2$1 = $6 + 4 | 0; //@line 21745
  tempBigInt = 4992592; //@line 21746
  HEAP8[$st$2$1] = tempBigInt & 255; //@line 21746
  tempBigInt = tempBigInt >> 8; //@line 21746
  HEAP8[$st$2$1 + 1 | 0] = tempBigInt & 255; //@line 21746
  tempBigInt = tempBigInt >> 8; //@line 21746
  HEAP8[$st$2$1 + 2 | 0] = tempBigInt & 255; //@line 21746
  tempBigInt = tempBigInt >> 8; //@line 21746
  HEAP8[$st$2$1 + 3 | 0] = tempBigInt & 255; //@line 21746
  HEAP32[$da + 28 >> 2] = 2; //@line 21748
  $8 = $da + 96 | 0; //@line 21749
  $12 = (HEAPU8[$src] | 0) >>> 1 & 7; //@line 21753
  _sprintf($8 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $12, tempInt) | 0) | 0; //@line 21754
  $14 = $da + 160 | 0; //@line 21755
  $23 = ((HEAPU8[$src + 2 | 0] | 0) << 8 | (HEAPU8[$src + 3 | 0] | 0)) & 65535; //@line 21764
  $25 = ($23 & 32768 | 0) != 0; //@line 21766
  $26 = $25 ? 56344 : 62888; //@line 21767
  $28 = ($25 ? -$23 | 0 : $23) & 65535; //@line 21770
  $31 = HEAP16[$1 >> 1] & 7; //@line 21773
  _sprintf($14 | 0, 57472, (tempInt = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempInt >> 2] = $26, HEAP32[tempInt + 8 >> 2] = 41376, HEAP32[tempInt + 16 >> 2] = $28, HEAP32[tempInt + 24 >> 2] = $31, tempInt) | 0) | 0; //@line 21774
  $33 = $da + 8 | 0; //@line 21775
  HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 1; //@line 21778
  STACKTOP = sp; //@line 21780
  return;
 } else {
  HEAP8[$4] = HEAP8[48416] | 0; //@line 21783
  HEAP8[$4 + 1 | 0] = HEAP8[48417 | 0] | 0; //@line 21783
  HEAP8[$4 + 2 | 0] = HEAP8[48418 | 0] | 0; //@line 21783
  HEAP8[$4 + 3 | 0] = HEAP8[48419 | 0] | 0; //@line 21783
  HEAP8[$4 + 4 | 0] = HEAP8[48420 | 0] | 0; //@line 21783
  HEAP32[$da + 28 >> 2] = 2; //@line 21785
  $38 = $da + 96 | 0; //@line 21786
  $42 = (HEAPU8[$src] | 0) >>> 1 & 7; //@line 21790
  _sprintf($38 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $42, tempInt) | 0) | 0; //@line 21791
  _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 21797
  STACKTOP = sp; //@line 21799
  return;
 }
}
function _d_0200($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $4 = 0, $5 = 0, $10 = 0, $12 = 0, $15 = 0, $17 = 0, sp = 0;
 sp = STACKTOP; //@line 21812
 $4 = (HEAP16[$da + 12 >> 1] & 63) == 60; //@line 21816
 $5 = $da + 32 | 0; //@line 21817
 HEAP8[$5] = HEAP8[47800] | 0; //@line 21818
 HEAP8[$5 + 1 | 0] = HEAP8[47801 | 0] | 0; //@line 21818
 HEAP8[$5 + 2 | 0] = HEAP8[47802 | 0] | 0; //@line 21818
 HEAP8[$5 + 3 | 0] = HEAP8[47803 | 0] | 0; //@line 21818
 HEAP8[$5 + 4 | 0] = HEAP8[47804 | 0] | 0; //@line 21818
 HEAP8[$5 + 5 | 0] = HEAP8[47805 | 0] | 0; //@line 21818
 HEAP8[$5 + 6 | 0] = HEAP8[47806 | 0] | 0; //@line 21818
 HEAP32[$da + 28 >> 2] = 2; //@line 21820
 $10 = HEAPU8[$src + 3 | 0] | 0; //@line 21824
 _sprintf($da + 96 | 0, 54856, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $10, tempInt) | 0) | 0; //@line 21825
 $12 = $da + 8 | 0; //@line 21826
 HEAP32[$12 >> 2] = (HEAP32[$12 >> 2] | 0) + 1; //@line 21829
 $15 = $da + 160 | 0; //@line 21830
 if ($4) {
  $17 = $15; //@line 21833
  tempBigInt = 5391171; //@line 21834
  HEAP8[$17] = tempBigInt & 255; //@line 21834
  tempBigInt = tempBigInt >> 8; //@line 21834
  HEAP8[$17 + 1 | 0] = tempBigInt & 255; //@line 21834
  tempBigInt = tempBigInt >> 8; //@line 21834
  HEAP8[$17 + 2 | 0] = tempBigInt & 255; //@line 21834
  tempBigInt = tempBigInt >> 8; //@line 21834
  HEAP8[$17 + 3 | 0] = tempBigInt & 255; //@line 21834
  STACKTOP = sp; //@line 21836
  return;
 } else {
  _dasm_ea($da, $15, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 21843
  STACKTOP = sp; //@line 21844
  return;
 }
}
function _d_0240($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $4 = 0, $5 = 0, $16 = 0, $18 = 0, $21 = 0, $23 = 0, sp = 0;
 sp = STACKTOP; //@line 21858
 $4 = (HEAP16[$da + 12 >> 1] & 63) == 60; //@line 21862
 $5 = $da + 32 | 0; //@line 21863
 HEAP8[$5] = HEAP8[47816] | 0; //@line 21864
 HEAP8[$5 + 1 | 0] = HEAP8[47817 | 0] | 0; //@line 21864
 HEAP8[$5 + 2 | 0] = HEAP8[47818 | 0] | 0; //@line 21864
 HEAP8[$5 + 3 | 0] = HEAP8[47819 | 0] | 0; //@line 21864
 HEAP8[$5 + 4 | 0] = HEAP8[47820 | 0] | 0; //@line 21864
 HEAP8[$5 + 5 | 0] = HEAP8[47821 | 0] | 0; //@line 21864
 HEAP8[$5 + 6 | 0] = HEAP8[47822 | 0] | 0; //@line 21864
 HEAP32[$da + 28 >> 2] = 2; //@line 21866
 $16 = ((HEAPU8[$src + 2 | 0] | 0) << 8 | (HEAPU8[$src + 3 | 0] | 0)) & 65535; //@line 21876
 _sprintf($da + 96 | 0, 47464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $16, tempInt) | 0) | 0; //@line 21877
 $18 = $da + 8 | 0; //@line 21878
 HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 1; //@line 21881
 $21 = $da + 160 | 0; //@line 21882
 if ($4) {
  HEAP8[$21] = HEAP8[51464] | 0; //@line 21885
  HEAP8[$21 + 1 | 0] = HEAP8[51465 | 0] | 0; //@line 21885
  HEAP8[$21 + 2 | 0] = HEAP8[51466 | 0] | 0; //@line 21885
  $23 = $da | 0; //@line 21886
  HEAP32[$23 >> 2] = HEAP32[$23 >> 2] | 1; //@line 21889
  STACKTOP = sp; //@line 21891
  return;
 } else {
  _dasm_ea($da, $21, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 21898
  STACKTOP = sp; //@line 21899
  return;
 }
}
function _d_0280($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $21 = 0, $23 = 0, sp = 0;
 sp = STACKTOP; //@line 21913
 $1 = $da + 32 | 0; //@line 21914
 HEAP8[$1] = HEAP8[47880] | 0; //@line 21915
 HEAP8[$1 + 1 | 0] = HEAP8[47881 | 0] | 0; //@line 21915
 HEAP8[$1 + 2 | 0] = HEAP8[47882 | 0] | 0; //@line 21915
 HEAP8[$1 + 3 | 0] = HEAP8[47883 | 0] | 0; //@line 21915
 HEAP8[$1 + 4 | 0] = HEAP8[47884 | 0] | 0; //@line 21915
 HEAP8[$1 + 5 | 0] = HEAP8[47885 | 0] | 0; //@line 21915
 HEAP8[$1 + 6 | 0] = HEAP8[47886 | 0] | 0; //@line 21915
 HEAP32[$da + 28 >> 2] = 2; //@line 21917
 $21 = (((HEAPU8[$src + 2 | 0] | 0) << 8 | (HEAPU8[$src + 3 | 0] | 0)) << 8 | (HEAPU8[$src + 4 | 0] | 0)) << 8 | (HEAPU8[$src + 5 | 0] | 0); //@line 21936
 _sprintf($da + 96 | 0, 54072, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $21, tempInt) | 0) | 0; //@line 21937
 $23 = $da + 8 | 0; //@line 21938
 HEAP32[$23 >> 2] = (HEAP32[$23 >> 2] | 0) + 2; //@line 21941
 _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 21947
 STACKTOP = sp; //@line 21948
 return;
}
function _d_02c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $2 = 0, $5 = 0, $9 = 0, $17 = 0, $20 = 0, $23 = 0, $25 = 0, $34 = 0, $37 = 0, $40 = 0, $42 = 0, $45 = 0, $46 = 0, $47 = 0, sp = 0;
 sp = STACKTOP; //@line 21963
 $1 = $da + 8 | 0; //@line 21964
 $2 = HEAP32[$1 >> 2] | 0; //@line 21965
 $5 = HEAP8[$src + ($2 << 1) | 0] | 0; //@line 21968
 HEAP32[$1 >> 2] = $2 + 1; //@line 21970
 $9 = $da + 32 | 0; //@line 21973
 if (($5 & 8) == 0) {
  HEAP8[$9] = HEAP8[47952] | 0; //@line 21976
  HEAP8[$9 + 1 | 0] = HEAP8[47953 | 0] | 0; //@line 21976
  HEAP8[$9 + 2 | 0] = HEAP8[47954 | 0] | 0; //@line 21976
  HEAP8[$9 + 3 | 0] = HEAP8[47955 | 0] | 0; //@line 21976
  HEAP8[$9 + 4 | 0] = HEAP8[47956 | 0] | 0; //@line 21976
  HEAP8[$9 + 5 | 0] = HEAP8[47957 | 0] | 0; //@line 21976
  HEAP8[$9 + 6 | 0] = HEAP8[47958 | 0] | 0; //@line 21976
  HEAP32[$da + 28 >> 2] = 2; //@line 21978
  _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 21984
  $34 = $da + 160 | 0; //@line 21985
  $37 = HEAPU8[$src + 2 | 0] | 0; //@line 21988
  $40 = ($37 & 128 | 0) != 0 ? 34768 : 32184; //@line 21991
  $42 = $37 >>> 4 & 7; //@line 21993
  _sprintf($34 | 0, 37704, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $40, HEAP32[tempInt + 8 >> 2] = $42, tempInt) | 0) | 0; //@line 21994
  $45 = $da | 0; //@line 21995
  $46 = HEAP32[$45 >> 2] | 0; //@line 21996
  $47 = $46 | 128; //@line 21997
  HEAP32[$45 >> 2] = $47; //@line 21998
  STACKTOP = sp; //@line 21999
  return;
 } else {
  HEAP8[$9] = HEAP8[47984] | 0; //@line 22002
  HEAP8[$9 + 1 | 0] = HEAP8[47985 | 0] | 0; //@line 22002
  HEAP8[$9 + 2 | 0] = HEAP8[47986 | 0] | 0; //@line 22002
  HEAP8[$9 + 3 | 0] = HEAP8[47987 | 0] | 0; //@line 22002
  HEAP8[$9 + 4 | 0] = HEAP8[47988 | 0] | 0; //@line 22002
  HEAP8[$9 + 5 | 0] = HEAP8[47989 | 0] | 0; //@line 22002
  HEAP8[$9 + 6 | 0] = HEAP8[47990 | 0] | 0; //@line 22002
  HEAP32[$da + 28 >> 2] = 2; //@line 22004
  _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 22010
  $17 = $da + 160 | 0; //@line 22011
  $20 = HEAPU8[$src + 2 | 0] | 0; //@line 22014
  $23 = ($20 & 128 | 0) != 0 ? 34768 : 32184; //@line 22017
  $25 = $20 >>> 4 & 7; //@line 22019
  _sprintf($17 | 0, 37704, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $23, HEAP32[tempInt + 8 >> 2] = $25, tempInt) | 0) | 0; //@line 22020
  $45 = $da | 0; //@line 22022
  $46 = HEAP32[$45 >> 2] | 0; //@line 22023
  $47 = $46 | 128; //@line 22024
  HEAP32[$45 >> 2] = $47; //@line 22025
  STACKTOP = sp; //@line 22026
  return;
 }
}
function _d_0400($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP; //@line 22038
 $1 = $da + 32 | 0; //@line 22039
 HEAP8[$1] = HEAP8[48e3] | 0; //@line 22040
 HEAP8[$1 + 1 | 0] = HEAP8[48001 | 0] | 0; //@line 22040
 HEAP8[$1 + 2 | 0] = HEAP8[48002 | 0] | 0; //@line 22040
 HEAP8[$1 + 3 | 0] = HEAP8[48003 | 0] | 0; //@line 22040
 HEAP8[$1 + 4 | 0] = HEAP8[48004 | 0] | 0; //@line 22040
 HEAP8[$1 + 5 | 0] = HEAP8[48005 | 0] | 0; //@line 22040
 HEAP8[$1 + 6 | 0] = HEAP8[48006 | 0] | 0; //@line 22040
 HEAP32[$da + 28 >> 2] = 2; //@line 22042
 $6 = HEAPU8[$src + 3 | 0] | 0; //@line 22046
 _sprintf($da + 96 | 0, 54856, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $6, tempInt) | 0) | 0; //@line 22047
 $8 = $da + 8 | 0; //@line 22048
 HEAP32[$8 >> 2] = (HEAP32[$8 >> 2] | 0) + 1; //@line 22051
 _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 22057
 STACKTOP = sp; //@line 22058
 return;
}
function _d_0440($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $12 = 0, $14 = 0, sp = 0;
 sp = STACKTOP; //@line 22070
 $1 = $da + 32 | 0; //@line 22071
 HEAP8[$1] = HEAP8[48024] | 0; //@line 22072
 HEAP8[$1 + 1 | 0] = HEAP8[48025 | 0] | 0; //@line 22072
 HEAP8[$1 + 2 | 0] = HEAP8[48026 | 0] | 0; //@line 22072
 HEAP8[$1 + 3 | 0] = HEAP8[48027 | 0] | 0; //@line 22072
 HEAP8[$1 + 4 | 0] = HEAP8[48028 | 0] | 0; //@line 22072
 HEAP8[$1 + 5 | 0] = HEAP8[48029 | 0] | 0; //@line 22072
 HEAP8[$1 + 6 | 0] = HEAP8[48030 | 0] | 0; //@line 22072
 HEAP32[$da + 28 >> 2] = 2; //@line 22074
 $12 = ((HEAPU8[$src + 2 | 0] | 0) << 8 | (HEAPU8[$src + 3 | 0] | 0)) & 65535; //@line 22084
 _sprintf($da + 96 | 0, 47464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $12, tempInt) | 0) | 0; //@line 22085
 $14 = $da + 8 | 0; //@line 22086
 HEAP32[$14 >> 2] = (HEAP32[$14 >> 2] | 0) + 1; //@line 22089
 _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 22095
 STACKTOP = sp; //@line 22096
 return;
}
function _d_0480($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $21 = 0, $23 = 0, sp = 0;
 sp = STACKTOP; //@line 22109
 $1 = $da + 32 | 0; //@line 22110
 HEAP8[$1] = HEAP8[48048] | 0; //@line 22111
 HEAP8[$1 + 1 | 0] = HEAP8[48049 | 0] | 0; //@line 22111
 HEAP8[$1 + 2 | 0] = HEAP8[48050 | 0] | 0; //@line 22111
 HEAP8[$1 + 3 | 0] = HEAP8[48051 | 0] | 0; //@line 22111
 HEAP8[$1 + 4 | 0] = HEAP8[48052 | 0] | 0; //@line 22111
 HEAP8[$1 + 5 | 0] = HEAP8[48053 | 0] | 0; //@line 22111
 HEAP8[$1 + 6 | 0] = HEAP8[48054 | 0] | 0; //@line 22111
 HEAP32[$da + 28 >> 2] = 2; //@line 22113
 $21 = (((HEAPU8[$src + 2 | 0] | 0) << 8 | (HEAPU8[$src + 3 | 0] | 0)) << 8 | (HEAPU8[$src + 4 | 0] | 0)) << 8 | (HEAPU8[$src + 5 | 0] | 0); //@line 22132
 _sprintf($da + 96 | 0, 54072, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $21, tempInt) | 0) | 0; //@line 22133
 $23 = $da + 8 | 0; //@line 22134
 HEAP32[$23 >> 2] = (HEAP32[$23 >> 2] | 0) + 2; //@line 22137
 _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 22143
 STACKTOP = sp; //@line 22144
 return;
}
function _d_04c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $2 = 0, $5 = 0, $9 = 0, $17 = 0, $20 = 0, $23 = 0, $25 = 0, $34 = 0, $37 = 0, $40 = 0, $42 = 0, $45 = 0, $46 = 0, $47 = 0, sp = 0;
 sp = STACKTOP; //@line 22159
 $1 = $da + 8 | 0; //@line 22160
 $2 = HEAP32[$1 >> 2] | 0; //@line 22161
 $5 = HEAP8[$src + ($2 << 1) | 0] | 0; //@line 22164
 HEAP32[$1 >> 2] = $2 + 1; //@line 22166
 $9 = $da + 32 | 0; //@line 22169
 if (($5 & 8) == 0) {
  HEAP8[$9] = HEAP8[48064] | 0; //@line 22172
  HEAP8[$9 + 1 | 0] = HEAP8[48065 | 0] | 0; //@line 22172
  HEAP8[$9 + 2 | 0] = HEAP8[48066 | 0] | 0; //@line 22172
  HEAP8[$9 + 3 | 0] = HEAP8[48067 | 0] | 0; //@line 22172
  HEAP8[$9 + 4 | 0] = HEAP8[48068 | 0] | 0; //@line 22172
  HEAP8[$9 + 5 | 0] = HEAP8[48069 | 0] | 0; //@line 22172
  HEAP8[$9 + 6 | 0] = HEAP8[48070 | 0] | 0; //@line 22172
  HEAP32[$da + 28 >> 2] = 2; //@line 22174
  _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 22180
  $34 = $da + 160 | 0; //@line 22181
  $37 = HEAPU8[$src + 2 | 0] | 0; //@line 22184
  $40 = ($37 & 128 | 0) != 0 ? 34768 : 32184; //@line 22187
  $42 = $37 >>> 4 & 7; //@line 22189
  _sprintf($34 | 0, 37704, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $40, HEAP32[tempInt + 8 >> 2] = $42, tempInt) | 0) | 0; //@line 22190
  $45 = $da | 0; //@line 22191
  $46 = HEAP32[$45 >> 2] | 0; //@line 22192
  $47 = $46 | 128; //@line 22193
  HEAP32[$45 >> 2] = $47; //@line 22194
  STACKTOP = sp; //@line 22195
  return;
 } else {
  HEAP8[$9] = HEAP8[48096] | 0; //@line 22198
  HEAP8[$9 + 1 | 0] = HEAP8[48097 | 0] | 0; //@line 22198
  HEAP8[$9 + 2 | 0] = HEAP8[48098 | 0] | 0; //@line 22198
  HEAP8[$9 + 3 | 0] = HEAP8[48099 | 0] | 0; //@line 22198
  HEAP8[$9 + 4 | 0] = HEAP8[48100 | 0] | 0; //@line 22198
  HEAP8[$9 + 5 | 0] = HEAP8[48101 | 0] | 0; //@line 22198
  HEAP8[$9 + 6 | 0] = HEAP8[48102 | 0] | 0; //@line 22198
  HEAP32[$da + 28 >> 2] = 2; //@line 22200
  _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 22206
  $17 = $da + 160 | 0; //@line 22207
  $20 = HEAPU8[$src + 2 | 0] | 0; //@line 22210
  $23 = ($20 & 128 | 0) != 0 ? 34768 : 32184; //@line 22213
  $25 = $20 >>> 4 & 7; //@line 22215
  _sprintf($17 | 0, 37704, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $23, HEAP32[tempInt + 8 >> 2] = $25, tempInt) | 0) | 0; //@line 22216
  $45 = $da | 0; //@line 22218
  $46 = HEAP32[$45 >> 2] | 0; //@line 22219
  $47 = $46 | 128; //@line 22220
  HEAP32[$45 >> 2] = $47; //@line 22221
  STACKTOP = sp; //@line 22222
  return;
 }
}
function _d_0600($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP; //@line 22234
 $1 = $da + 32 | 0; //@line 22235
 HEAP8[$1] = HEAP8[48136] | 0; //@line 22236
 HEAP8[$1 + 1 | 0] = HEAP8[48137 | 0] | 0; //@line 22236
 HEAP8[$1 + 2 | 0] = HEAP8[48138 | 0] | 0; //@line 22236
 HEAP8[$1 + 3 | 0] = HEAP8[48139 | 0] | 0; //@line 22236
 HEAP8[$1 + 4 | 0] = HEAP8[48140 | 0] | 0; //@line 22236
 HEAP8[$1 + 5 | 0] = HEAP8[48141 | 0] | 0; //@line 22236
 HEAP8[$1 + 6 | 0] = HEAP8[48142 | 0] | 0; //@line 22236
 HEAP32[$da + 28 >> 2] = 2; //@line 22238
 $6 = HEAPU8[$src + 3 | 0] | 0; //@line 22242
 _sprintf($da + 96 | 0, 54856, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $6, tempInt) | 0) | 0; //@line 22243
 $8 = $da + 8 | 0; //@line 22244
 HEAP32[$8 >> 2] = (HEAP32[$8 >> 2] | 0) + 1; //@line 22247
 _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 22253
 STACKTOP = sp; //@line 22254
 return;
}
function _d_0640($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $12 = 0, $14 = 0, sp = 0;
 sp = STACKTOP; //@line 22266
 $1 = $da + 32 | 0; //@line 22267
 HEAP8[$1] = HEAP8[48160] | 0; //@line 22268
 HEAP8[$1 + 1 | 0] = HEAP8[48161 | 0] | 0; //@line 22268
 HEAP8[$1 + 2 | 0] = HEAP8[48162 | 0] | 0; //@line 22268
 HEAP8[$1 + 3 | 0] = HEAP8[48163 | 0] | 0; //@line 22268
 HEAP8[$1 + 4 | 0] = HEAP8[48164 | 0] | 0; //@line 22268
 HEAP8[$1 + 5 | 0] = HEAP8[48165 | 0] | 0; //@line 22268
 HEAP8[$1 + 6 | 0] = HEAP8[48166 | 0] | 0; //@line 22268
 HEAP32[$da + 28 >> 2] = 2; //@line 22270
 $12 = ((HEAPU8[$src + 2 | 0] | 0) << 8 | (HEAPU8[$src + 3 | 0] | 0)) & 65535; //@line 22280
 _sprintf($da + 96 | 0, 47464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $12, tempInt) | 0) | 0; //@line 22281
 $14 = $da + 8 | 0; //@line 22282
 HEAP32[$14 >> 2] = (HEAP32[$14 >> 2] | 0) + 1; //@line 22285
 _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 22291
 STACKTOP = sp; //@line 22292
 return;
}
function _d_0680($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $21 = 0, $23 = 0, sp = 0;
 sp = STACKTOP; //@line 22305
 $1 = $da + 32 | 0; //@line 22306
 HEAP8[$1] = HEAP8[48256] | 0; //@line 22307
 HEAP8[$1 + 1 | 0] = HEAP8[48257 | 0] | 0; //@line 22307
 HEAP8[$1 + 2 | 0] = HEAP8[48258 | 0] | 0; //@line 22307
 HEAP8[$1 + 3 | 0] = HEAP8[48259 | 0] | 0; //@line 22307
 HEAP8[$1 + 4 | 0] = HEAP8[48260 | 0] | 0; //@line 22307
 HEAP8[$1 + 5 | 0] = HEAP8[48261 | 0] | 0; //@line 22307
 HEAP8[$1 + 6 | 0] = HEAP8[48262 | 0] | 0; //@line 22307
 HEAP32[$da + 28 >> 2] = 2; //@line 22309
 $21 = (((HEAPU8[$src + 2 | 0] | 0) << 8 | (HEAPU8[$src + 3 | 0] | 0)) << 8 | (HEAPU8[$src + 4 | 0] | 0)) << 8 | (HEAPU8[$src + 5 | 0] | 0); //@line 22328
 _sprintf($da + 96 | 0, 54072, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $21, tempInt) | 0) | 0; //@line 22329
 $23 = $da + 8 | 0; //@line 22330
 HEAP32[$23 >> 2] = (HEAP32[$23 >> 2] | 0) + 2; //@line 22333
 _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 22339
 STACKTOP = sp; //@line 22340
 return;
}
function _di_und($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $11 = 0, sp = 0;
 sp = STACKTOP; //@line 22351
 $1 = $da + 32 | 0; //@line 22352
 HEAP8[$1] = HEAP8[36120] | 0; //@line 22353
 HEAP8[$1 + 1 | 0] = HEAP8[36121 | 0] | 0; //@line 22353
 HEAP8[$1 + 2 | 0] = HEAP8[36122 | 0] | 0; //@line 22353
 HEAP32[$da + 28 >> 2] = 1; //@line 22355
 $11 = ((HEAPU8[$src] | 0) << 8 | (HEAPU8[$src + 1 | 0] | 0)) & 65535; //@line 22364
 _sprintf($da + 96 | 0, 47464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $11, tempInt) | 0) | 0; //@line 22365
 STACKTOP = sp; //@line 22366
 return;
}
function _d_0800($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP; //@line 22377
 $1 = $da + 32 | 0; //@line 22378
 HEAP8[$1] = HEAP8[48320] | 0; //@line 22379
 HEAP8[$1 + 1 | 0] = HEAP8[48321 | 0] | 0; //@line 22379
 HEAP8[$1 + 2 | 0] = HEAP8[48322 | 0] | 0; //@line 22379
 HEAP8[$1 + 3 | 0] = HEAP8[48323 | 0] | 0; //@line 22379
 HEAP8[$1 + 4 | 0] = HEAP8[48324 | 0] | 0; //@line 22379
 HEAP32[$da + 28 >> 2] = 2; //@line 22381
 $6 = HEAPU8[$src + 3 | 0] | 0; //@line 22385
 _sprintf($da + 96 | 0, 54856, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $6, tempInt) | 0) | 0; //@line 22386
 $8 = $da + 8 | 0; //@line 22387
 HEAP32[$8 >> 2] = (HEAP32[$8 >> 2] | 0) + 1; //@line 22390
 _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 22396
 STACKTOP = sp; //@line 22397
 return;
}
function _d_0840($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP; //@line 22408
 $1 = $da + 32 | 0; //@line 22409
 HEAP8[$1] = HEAP8[48368] | 0; //@line 22410
 HEAP8[$1 + 1 | 0] = HEAP8[48369 | 0] | 0; //@line 22410
 HEAP8[$1 + 2 | 0] = HEAP8[48370 | 0] | 0; //@line 22410
 HEAP8[$1 + 3 | 0] = HEAP8[48371 | 0] | 0; //@line 22410
 HEAP8[$1 + 4 | 0] = HEAP8[48372 | 0] | 0; //@line 22410
 HEAP32[$da + 28 >> 2] = 2; //@line 22412
 $6 = HEAPU8[$src + 3 | 0] | 0; //@line 22416
 _sprintf($da + 96 | 0, 54856, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $6, tempInt) | 0) | 0; //@line 22417
 $8 = $da + 8 | 0; //@line 22418
 HEAP32[$8 >> 2] = (HEAP32[$8 >> 2] | 0) + 1; //@line 22421
 _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 22427
 STACKTOP = sp; //@line 22428
 return;
}
function _d_0880($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP; //@line 22439
 $1 = $da + 32 | 0; //@line 22440
 HEAP8[$1] = HEAP8[48392] | 0; //@line 22441
 HEAP8[$1 + 1 | 0] = HEAP8[48393 | 0] | 0; //@line 22441
 HEAP8[$1 + 2 | 0] = HEAP8[48394 | 0] | 0; //@line 22441
 HEAP8[$1 + 3 | 0] = HEAP8[48395 | 0] | 0; //@line 22441
 HEAP8[$1 + 4 | 0] = HEAP8[48396 | 0] | 0; //@line 22441
 HEAP32[$da + 28 >> 2] = 2; //@line 22443
 $6 = HEAPU8[$src + 3 | 0] | 0; //@line 22447
 _sprintf($da + 96 | 0, 54856, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $6, tempInt) | 0) | 0; //@line 22448
 $8 = $da + 8 | 0; //@line 22449
 HEAP32[$8 >> 2] = (HEAP32[$8 >> 2] | 0) + 1; //@line 22452
 _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 22458
 STACKTOP = sp; //@line 22459
 return;
}
function _d_08c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP; //@line 22470
 $1 = $da + 32 | 0; //@line 22471
 HEAP8[$1] = HEAP8[48416] | 0; //@line 22472
 HEAP8[$1 + 1 | 0] = HEAP8[48417 | 0] | 0; //@line 22472
 HEAP8[$1 + 2 | 0] = HEAP8[48418 | 0] | 0; //@line 22472
 HEAP8[$1 + 3 | 0] = HEAP8[48419 | 0] | 0; //@line 22472
 HEAP8[$1 + 4 | 0] = HEAP8[48420 | 0] | 0; //@line 22472
 HEAP32[$da + 28 >> 2] = 2; //@line 22474
 $6 = HEAPU8[$src + 3 | 0] | 0; //@line 22478
 _sprintf($da + 96 | 0, 54856, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $6, tempInt) | 0) | 0; //@line 22479
 $8 = $da + 8 | 0; //@line 22480
 HEAP32[$8 >> 2] = (HEAP32[$8 >> 2] | 0) + 1; //@line 22483
 _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 22489
 STACKTOP = sp; //@line 22490
 return;
}
function _d_0a00($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $4 = 0, $5 = 0, $10 = 0, $12 = 0, $15 = 0, $17 = 0, sp = 0;
 sp = STACKTOP; //@line 22502
 $4 = (HEAP16[$da + 12 >> 1] & 63) == 60; //@line 22506
 $5 = $da + 32 | 0; //@line 22507
 HEAP8[$5] = HEAP8[48464] | 0; //@line 22508
 HEAP8[$5 + 1 | 0] = HEAP8[48465 | 0] | 0; //@line 22508
 HEAP8[$5 + 2 | 0] = HEAP8[48466 | 0] | 0; //@line 22508
 HEAP8[$5 + 3 | 0] = HEAP8[48467 | 0] | 0; //@line 22508
 HEAP8[$5 + 4 | 0] = HEAP8[48468 | 0] | 0; //@line 22508
 HEAP8[$5 + 5 | 0] = HEAP8[48469 | 0] | 0; //@line 22508
 HEAP8[$5 + 6 | 0] = HEAP8[48470 | 0] | 0; //@line 22508
 HEAP32[$da + 28 >> 2] = 2; //@line 22510
 $10 = HEAPU8[$src + 3 | 0] | 0; //@line 22514
 _sprintf($da + 96 | 0, 54856, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $10, tempInt) | 0) | 0; //@line 22515
 $12 = $da + 8 | 0; //@line 22516
 HEAP32[$12 >> 2] = (HEAP32[$12 >> 2] | 0) + 1; //@line 22519
 $15 = $da + 160 | 0; //@line 22520
 if ($4) {
  $17 = $15; //@line 22523
  tempBigInt = 5391171; //@line 22524
  HEAP8[$17] = tempBigInt & 255; //@line 22524
  tempBigInt = tempBigInt >> 8; //@line 22524
  HEAP8[$17 + 1 | 0] = tempBigInt & 255; //@line 22524
  tempBigInt = tempBigInt >> 8; //@line 22524
  HEAP8[$17 + 2 | 0] = tempBigInt & 255; //@line 22524
  tempBigInt = tempBigInt >> 8; //@line 22524
  HEAP8[$17 + 3 | 0] = tempBigInt & 255; //@line 22524
  STACKTOP = sp; //@line 22526
  return;
 } else {
  _dasm_ea($da, $15, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 22533
  STACKTOP = sp; //@line 22534
  return;
 }
}
function _d_0a40($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $4 = 0, $5 = 0, $16 = 0, $18 = 0, $21 = 0, $23 = 0, sp = 0;
 sp = STACKTOP; //@line 22548
 $4 = (HEAP16[$da + 12 >> 1] & 63) == 60; //@line 22552
 $5 = $da + 32 | 0; //@line 22553
 HEAP8[$5] = HEAP8[48488] | 0; //@line 22554
 HEAP8[$5 + 1 | 0] = HEAP8[48489 | 0] | 0; //@line 22554
 HEAP8[$5 + 2 | 0] = HEAP8[48490 | 0] | 0; //@line 22554
 HEAP8[$5 + 3 | 0] = HEAP8[48491 | 0] | 0; //@line 22554
 HEAP8[$5 + 4 | 0] = HEAP8[48492 | 0] | 0; //@line 22554
 HEAP8[$5 + 5 | 0] = HEAP8[48493 | 0] | 0; //@line 22554
 HEAP8[$5 + 6 | 0] = HEAP8[48494 | 0] | 0; //@line 22554
 HEAP32[$da + 28 >> 2] = 2; //@line 22556
 $16 = ((HEAPU8[$src + 2 | 0] | 0) << 8 | (HEAPU8[$src + 3 | 0] | 0)) & 65535; //@line 22566
 _sprintf($da + 96 | 0, 47464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $16, tempInt) | 0) | 0; //@line 22567
 $18 = $da + 8 | 0; //@line 22568
 HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 1; //@line 22571
 $21 = $da + 160 | 0; //@line 22572
 if ($4) {
  HEAP8[$21] = HEAP8[51464] | 0; //@line 22575
  HEAP8[$21 + 1 | 0] = HEAP8[51465 | 0] | 0; //@line 22575
  HEAP8[$21 + 2 | 0] = HEAP8[51466 | 0] | 0; //@line 22575
  $23 = $da | 0; //@line 22576
  HEAP32[$23 >> 2] = HEAP32[$23 >> 2] | 1; //@line 22579
  STACKTOP = sp; //@line 22581
  return;
 } else {
  _dasm_ea($da, $21, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 22588
  STACKTOP = sp; //@line 22589
  return;
 }
}
function _d_0a80($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $21 = 0, $23 = 0, sp = 0;
 sp = STACKTOP; //@line 22603
 $1 = $da + 32 | 0; //@line 22604
 HEAP8[$1] = HEAP8[48528] | 0; //@line 22605
 HEAP8[$1 + 1 | 0] = HEAP8[48529 | 0] | 0; //@line 22605
 HEAP8[$1 + 2 | 0] = HEAP8[48530 | 0] | 0; //@line 22605
 HEAP8[$1 + 3 | 0] = HEAP8[48531 | 0] | 0; //@line 22605
 HEAP8[$1 + 4 | 0] = HEAP8[48532 | 0] | 0; //@line 22605
 HEAP8[$1 + 5 | 0] = HEAP8[48533 | 0] | 0; //@line 22605
 HEAP8[$1 + 6 | 0] = HEAP8[48534 | 0] | 0; //@line 22605
 HEAP32[$da + 28 >> 2] = 2; //@line 22607
 $21 = (((HEAPU8[$src + 2 | 0] | 0) << 8 | (HEAPU8[$src + 3 | 0] | 0)) << 8 | (HEAPU8[$src + 4 | 0] | 0)) << 8 | (HEAPU8[$src + 5 | 0] | 0); //@line 22626
 _sprintf($da + 96 | 0, 54072, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $21, tempInt) | 0) | 0; //@line 22627
 $23 = $da + 8 | 0; //@line 22628
 HEAP32[$23 >> 2] = (HEAP32[$23 >> 2] | 0) + 2; //@line 22631
 _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 22637
 STACKTOP = sp; //@line 22638
 return;
}
function _d_0c00($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP; //@line 22649
 $1 = $da + 32 | 0; //@line 22650
 HEAP8[$1] = HEAP8[48560] | 0; //@line 22651
 HEAP8[$1 + 1 | 0] = HEAP8[48561 | 0] | 0; //@line 22651
 HEAP8[$1 + 2 | 0] = HEAP8[48562 | 0] | 0; //@line 22651
 HEAP8[$1 + 3 | 0] = HEAP8[48563 | 0] | 0; //@line 22651
 HEAP8[$1 + 4 | 0] = HEAP8[48564 | 0] | 0; //@line 22651
 HEAP8[$1 + 5 | 0] = HEAP8[48565 | 0] | 0; //@line 22651
 HEAP8[$1 + 6 | 0] = HEAP8[48566 | 0] | 0; //@line 22651
 HEAP32[$da + 28 >> 2] = 2; //@line 22653
 $6 = HEAPU8[$src + 3 | 0] | 0; //@line 22657
 _sprintf($da + 96 | 0, 54856, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $6, tempInt) | 0) | 0; //@line 22658
 $8 = $da + 8 | 0; //@line 22659
 HEAP32[$8 >> 2] = (HEAP32[$8 >> 2] | 0) + 1; //@line 22662
 _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 22668
 STACKTOP = sp; //@line 22669
 return;
}
function _d_0c40($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $12 = 0, $14 = 0, sp = 0;
 sp = STACKTOP; //@line 22681
 $1 = $da + 32 | 0; //@line 22682
 HEAP8[$1] = HEAP8[48592] | 0; //@line 22683
 HEAP8[$1 + 1 | 0] = HEAP8[48593 | 0] | 0; //@line 22683
 HEAP8[$1 + 2 | 0] = HEAP8[48594 | 0] | 0; //@line 22683
 HEAP8[$1 + 3 | 0] = HEAP8[48595 | 0] | 0; //@line 22683
 HEAP8[$1 + 4 | 0] = HEAP8[48596 | 0] | 0; //@line 22683
 HEAP8[$1 + 5 | 0] = HEAP8[48597 | 0] | 0; //@line 22683
 HEAP8[$1 + 6 | 0] = HEAP8[48598 | 0] | 0; //@line 22683
 HEAP32[$da + 28 >> 2] = 2; //@line 22685
 $12 = ((HEAPU8[$src + 2 | 0] | 0) << 8 | (HEAPU8[$src + 3 | 0] | 0)) & 65535; //@line 22695
 _sprintf($da + 96 | 0, 47464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $12, tempInt) | 0) | 0; //@line 22696
 $14 = $da + 8 | 0; //@line 22697
 HEAP32[$14 >> 2] = (HEAP32[$14 >> 2] | 0) + 1; //@line 22700
 _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 22706
 STACKTOP = sp; //@line 22707
 return;
}
function _d_0c80($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $21 = 0, $23 = 0, sp = 0;
 sp = STACKTOP; //@line 22720
 $1 = $da + 32 | 0; //@line 22721
 HEAP8[$1] = HEAP8[48656] | 0; //@line 22722
 HEAP8[$1 + 1 | 0] = HEAP8[48657 | 0] | 0; //@line 22722
 HEAP8[$1 + 2 | 0] = HEAP8[48658 | 0] | 0; //@line 22722
 HEAP8[$1 + 3 | 0] = HEAP8[48659 | 0] | 0; //@line 22722
 HEAP8[$1 + 4 | 0] = HEAP8[48660 | 0] | 0; //@line 22722
 HEAP8[$1 + 5 | 0] = HEAP8[48661 | 0] | 0; //@line 22722
 HEAP8[$1 + 6 | 0] = HEAP8[48662 | 0] | 0; //@line 22722
 HEAP32[$da + 28 >> 2] = 2; //@line 22724
 $21 = (((HEAPU8[$src + 2 | 0] | 0) << 8 | (HEAPU8[$src + 3 | 0] | 0)) << 8 | (HEAPU8[$src + 4 | 0] | 0)) << 8 | (HEAPU8[$src + 5 | 0] | 0); //@line 22743
 _sprintf($da + 96 | 0, 54072, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $21, tempInt) | 0) | 0; //@line 22744
 $23 = $da + 8 | 0; //@line 22745
 HEAP32[$23 >> 2] = (HEAP32[$23 >> 2] | 0) + 2; //@line 22748
 _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 22754
 STACKTOP = sp; //@line 22755
 return;
}
function _d_0e00($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $2 = 0, $5 = 0, $9 = 0, $11 = 0, $15 = 0, $18 = 0, $20 = 0, $32 = 0, $35 = 0, $38 = 0, $40 = 0, $43 = 0, $44 = 0, $45 = 0, sp = 0;
 sp = STACKTOP; //@line 22770
 $1 = $da + 8 | 0; //@line 22771
 $2 = HEAP32[$1 >> 2] | 0; //@line 22772
 $5 = HEAP8[$src + ($2 << 1) | 0] | 0; //@line 22775
 HEAP32[$1 >> 2] = $2 + 1; //@line 22777
 $9 = $da + 32 | 0; //@line 22780
 HEAP8[$9] = HEAP8[48728] | 0; //@line 22781
 HEAP8[$9 + 1 | 0] = HEAP8[48729 | 0] | 0; //@line 22781
 HEAP8[$9 + 2 | 0] = HEAP8[48730 | 0] | 0; //@line 22781
 HEAP8[$9 + 3 | 0] = HEAP8[48731 | 0] | 0; //@line 22781
 HEAP8[$9 + 4 | 0] = HEAP8[48732 | 0] | 0; //@line 22781
 HEAP8[$9 + 5 | 0] = HEAP8[48733 | 0] | 0; //@line 22781
 HEAP8[$9 + 6 | 0] = HEAP8[48734 | 0] | 0; //@line 22781
 HEAP32[$da + 28 >> 2] = 2; //@line 22783
 $11 = $da + 96 | 0; //@line 22784
 if (($5 & 8) == 0) {
  _dasm_ea($da, $11, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 22791
  $32 = $da + 160 | 0; //@line 22792
  $35 = HEAPU8[$src + 2 | 0] | 0; //@line 22795
  $38 = ($35 & 128 | 0) != 0 ? 34768 : 32184; //@line 22798
  $40 = $35 >>> 4 & 7; //@line 22800
  _sprintf($32 | 0, 37704, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $38, HEAP32[tempInt + 8 >> 2] = $40, tempInt) | 0) | 0; //@line 22801
  $43 = $da | 0; //@line 22802
  $44 = HEAP32[$43 >> 2] | 0; //@line 22803
  $45 = $44 | 64; //@line 22804
  HEAP32[$43 >> 2] = $45; //@line 22805
  STACKTOP = sp; //@line 22806
  return;
 } else {
  $15 = HEAPU8[$src + 2 | 0] | 0; //@line 22811
  $18 = ($15 & 128 | 0) != 0 ? 34768 : 32184; //@line 22814
  $20 = $15 >>> 4 & 7; //@line 22816
  _sprintf($11 | 0, 37704, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $18, HEAP32[tempInt + 8 >> 2] = $20, tempInt) | 0) | 0; //@line 22817
  _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 22823
  $43 = $da | 0; //@line 22825
  $44 = HEAP32[$43 >> 2] | 0; //@line 22826
  $45 = $44 | 64; //@line 22827
  HEAP32[$43 >> 2] = $45; //@line 22828
  STACKTOP = sp; //@line 22829
  return;
 }
}
function _d_0e40($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $2 = 0, $5 = 0, $9 = 0, $11 = 0, $15 = 0, $18 = 0, $20 = 0, $32 = 0, $35 = 0, $38 = 0, $40 = 0, $43 = 0, $44 = 0, $45 = 0, sp = 0;
 sp = STACKTOP; //@line 22845
 $1 = $da + 8 | 0; //@line 22846
 $2 = HEAP32[$1 >> 2] | 0; //@line 22847
 $5 = HEAP8[$src + ($2 << 1) | 0] | 0; //@line 22850
 HEAP32[$1 >> 2] = $2 + 1; //@line 22852
 $9 = $da + 32 | 0; //@line 22855
 HEAP8[$9] = HEAP8[48760] | 0; //@line 22856
 HEAP8[$9 + 1 | 0] = HEAP8[48761 | 0] | 0; //@line 22856
 HEAP8[$9 + 2 | 0] = HEAP8[48762 | 0] | 0; //@line 22856
 HEAP8[$9 + 3 | 0] = HEAP8[48763 | 0] | 0; //@line 22856
 HEAP8[$9 + 4 | 0] = HEAP8[48764 | 0] | 0; //@line 22856
 HEAP8[$9 + 5 | 0] = HEAP8[48765 | 0] | 0; //@line 22856
 HEAP8[$9 + 6 | 0] = HEAP8[48766 | 0] | 0; //@line 22856
 HEAP32[$da + 28 >> 2] = 2; //@line 22858
 $11 = $da + 96 | 0; //@line 22859
 if (($5 & 8) == 0) {
  _dasm_ea($da, $11, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 22866
  $32 = $da + 160 | 0; //@line 22867
  $35 = HEAPU8[$src + 2 | 0] | 0; //@line 22870
  $38 = ($35 & 128 | 0) != 0 ? 34768 : 32184; //@line 22873
  $40 = $35 >>> 4 & 7; //@line 22875
  _sprintf($32 | 0, 37704, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $38, HEAP32[tempInt + 8 >> 2] = $40, tempInt) | 0) | 0; //@line 22876
  $43 = $da | 0; //@line 22877
  $44 = HEAP32[$43 >> 2] | 0; //@line 22878
  $45 = $44 | 64; //@line 22879
  HEAP32[$43 >> 2] = $45; //@line 22880
  STACKTOP = sp; //@line 22881
  return;
 } else {
  $15 = HEAPU8[$src + 2 | 0] | 0; //@line 22886
  $18 = ($15 & 128 | 0) != 0 ? 34768 : 32184; //@line 22889
  $20 = $15 >>> 4 & 7; //@line 22891
  _sprintf($11 | 0, 37704, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $18, HEAP32[tempInt + 8 >> 2] = $20, tempInt) | 0) | 0; //@line 22892
  _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 22898
  $43 = $da | 0; //@line 22900
  $44 = HEAP32[$43 >> 2] | 0; //@line 22901
  $45 = $44 | 64; //@line 22902
  HEAP32[$43 >> 2] = $45; //@line 22903
  STACKTOP = sp; //@line 22904
  return;
 }
}
function _d_0e80($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $2 = 0, $5 = 0, $9 = 0, $11 = 0, $15 = 0, $18 = 0, $20 = 0, $32 = 0, $35 = 0, $38 = 0, $40 = 0, $43 = 0, $44 = 0, $45 = 0, sp = 0;
 sp = STACKTOP; //@line 22920
 $1 = $da + 8 | 0; //@line 22921
 $2 = HEAP32[$1 >> 2] | 0; //@line 22922
 $5 = HEAP8[$src + ($2 << 1) | 0] | 0; //@line 22925
 HEAP32[$1 >> 2] = $2 + 1; //@line 22927
 $9 = $da + 32 | 0; //@line 22930
 HEAP8[$9] = HEAP8[48776] | 0; //@line 22931
 HEAP8[$9 + 1 | 0] = HEAP8[48777 | 0] | 0; //@line 22931
 HEAP8[$9 + 2 | 0] = HEAP8[48778 | 0] | 0; //@line 22931
 HEAP8[$9 + 3 | 0] = HEAP8[48779 | 0] | 0; //@line 22931
 HEAP8[$9 + 4 | 0] = HEAP8[48780 | 0] | 0; //@line 22931
 HEAP8[$9 + 5 | 0] = HEAP8[48781 | 0] | 0; //@line 22931
 HEAP8[$9 + 6 | 0] = HEAP8[48782 | 0] | 0; //@line 22931
 HEAP32[$da + 28 >> 2] = 2; //@line 22933
 $11 = $da + 96 | 0; //@line 22934
 if (($5 & 8) == 0) {
  _dasm_ea($da, $11, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 22941
  $32 = $da + 160 | 0; //@line 22942
  $35 = HEAPU8[$src + 2 | 0] | 0; //@line 22945
  $38 = ($35 & 128 | 0) != 0 ? 34768 : 32184; //@line 22948
  $40 = $35 >>> 4 & 7; //@line 22950
  _sprintf($32 | 0, 37704, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $38, HEAP32[tempInt + 8 >> 2] = $40, tempInt) | 0) | 0; //@line 22951
  $43 = $da | 0; //@line 22952
  $44 = HEAP32[$43 >> 2] | 0; //@line 22953
  $45 = $44 | 64; //@line 22954
  HEAP32[$43 >> 2] = $45; //@line 22955
  STACKTOP = sp; //@line 22956
  return;
 } else {
  $15 = HEAPU8[$src + 2 | 0] | 0; //@line 22961
  $18 = ($15 & 128 | 0) != 0 ? 34768 : 32184; //@line 22964
  $20 = $15 >>> 4 & 7; //@line 22966
  _sprintf($11 | 0, 37704, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $18, HEAP32[tempInt + 8 >> 2] = $20, tempInt) | 0) | 0; //@line 22967
  _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 22973
  $43 = $da | 0; //@line 22975
  $44 = HEAP32[$43 >> 2] | 0; //@line 22976
  $45 = $44 | 64; //@line 22977
  HEAP32[$43 >> 2] = $45; //@line 22978
  STACKTOP = sp; //@line 22979
  return;
 }
}
function _d_4ec0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $2 = 0, $9 = 0;
 $2 = $da + 32 | 0; //@line 22993
 tempBigInt = 5262666; //@line 22994
 HEAP8[$2] = tempBigInt & 255; //@line 22994
 tempBigInt = tempBigInt >> 8; //@line 22994
 HEAP8[$2 + 1 | 0] = tempBigInt & 255; //@line 22994
 tempBigInt = tempBigInt >> 8; //@line 22994
 HEAP8[$2 + 2 | 0] = tempBigInt & 255; //@line 22994
 tempBigInt = tempBigInt >> 8; //@line 22994
 HEAP8[$2 + 3 | 0] = tempBigInt & 255; //@line 22994
 HEAP32[$da + 28 >> 2] = 1; //@line 22996
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 0); //@line 23002
 $9 = $da | 0; //@line 23003
 HEAP32[$9 >> 2] = HEAP32[$9 >> 2] | 2; //@line 23006
 return;
}
function _d_1000($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $4 = 0, $15 = 0;
 $1 = $da + 32 | 0; //@line 23020
 HEAP8[$1] = HEAP8[48848] | 0; //@line 23021
 HEAP8[$1 + 1 | 0] = HEAP8[48849 | 0] | 0; //@line 23021
 HEAP8[$1 + 2 | 0] = HEAP8[48850 | 0] | 0; //@line 23021
 HEAP8[$1 + 3 | 0] = HEAP8[48851 | 0] | 0; //@line 23021
 HEAP8[$1 + 4 | 0] = HEAP8[48852 | 0] | 0; //@line 23021
 HEAP8[$1 + 5 | 0] = HEAP8[48853 | 0] | 0; //@line 23021
 HEAP8[$1 + 6 | 0] = HEAP8[48854 | 0] | 0; //@line 23021
 HEAP32[$da + 28 >> 2] = 2; //@line 23023
 $4 = $src + 1 | 0; //@line 23025
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$4] & 63, 8); //@line 23029
 $15 = ((HEAPU8[$src] | 0) << 8 | (HEAPU8[$4] | 0)) & 65535; //@line 23037
 _dasm_ea($da, $da + 160 | 0, $src, $15 >>> 3 & 56 | $15 >>> 9 & 7, 8); //@line 23043
 return;
}
function _d_2000($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $4 = 0, $15 = 0;
 $1 = $da + 32 | 0; //@line 23057
 HEAP8[$1] = HEAP8[48872] | 0; //@line 23058
 HEAP8[$1 + 1 | 0] = HEAP8[48873 | 0] | 0; //@line 23058
 HEAP8[$1 + 2 | 0] = HEAP8[48874 | 0] | 0; //@line 23058
 HEAP8[$1 + 3 | 0] = HEAP8[48875 | 0] | 0; //@line 23058
 HEAP8[$1 + 4 | 0] = HEAP8[48876 | 0] | 0; //@line 23058
 HEAP8[$1 + 5 | 0] = HEAP8[48877 | 0] | 0; //@line 23058
 HEAP8[$1 + 6 | 0] = HEAP8[48878 | 0] | 0; //@line 23058
 HEAP32[$da + 28 >> 2] = 2; //@line 23060
 $4 = $src + 1 | 0; //@line 23062
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$4] & 63, 32); //@line 23066
 $15 = ((HEAPU8[$src] | 0) << 8 | (HEAPU8[$4] | 0)) & 65535; //@line 23074
 _dasm_ea($da, $da + 160 | 0, $src, $15 >>> 3 & 56 | $15 >>> 9 & 7, 32); //@line 23080
 return;
}
function _d_2040($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $2 = 0, $st$1$0 = 0, $st$2$1 = 0, sp = 0;
 sp = STACKTOP; //@line 23093
 $2 = $da + 32 | 0; //@line 23095
 $st$1$0 = $2 | 0; //@line 23098
 tempBigInt = 1163284301; //@line 23099
 HEAP8[$st$1$0] = tempBigInt & 255; //@line 23099
 tempBigInt = tempBigInt >> 8; //@line 23099
 HEAP8[$st$1$0 + 1 | 0] = tempBigInt & 255; //@line 23099
 tempBigInt = tempBigInt >> 8; //@line 23099
 HEAP8[$st$1$0 + 2 | 0] = tempBigInt & 255; //@line 23099
 tempBigInt = tempBigInt >> 8; //@line 23099
 HEAP8[$st$1$0 + 3 | 0] = tempBigInt & 255; //@line 23099
 $st$2$1 = $2 + 4 | 0; //@line 23100
 tempBigInt = 4992577; //@line 23101
 HEAP8[$st$2$1] = tempBigInt & 255; //@line 23101
 tempBigInt = tempBigInt >> 8; //@line 23101
 HEAP8[$st$2$1 + 1 | 0] = tempBigInt & 255; //@line 23101
 tempBigInt = tempBigInt >> 8; //@line 23101
 HEAP8[$st$2$1 + 2 | 0] = tempBigInt & 255; //@line 23101
 tempBigInt = tempBigInt >> 8; //@line 23101
 HEAP8[$st$2$1 + 3 | 0] = tempBigInt & 255; //@line 23101
 HEAP32[$da + 28 >> 2] = 2; //@line 23103
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 23109
 _sprintf($da + 160 | 0, 40696, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 23115
 STACKTOP = sp; //@line 23116
 return;
}
function _d_3000($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $4 = 0, $15 = 0;
 $1 = $da + 32 | 0; //@line 23129
 HEAP8[$1] = HEAP8[49704] | 0; //@line 23130
 HEAP8[$1 + 1 | 0] = HEAP8[49705 | 0] | 0; //@line 23130
 HEAP8[$1 + 2 | 0] = HEAP8[49706 | 0] | 0; //@line 23130
 HEAP8[$1 + 3 | 0] = HEAP8[49707 | 0] | 0; //@line 23130
 HEAP8[$1 + 4 | 0] = HEAP8[49708 | 0] | 0; //@line 23130
 HEAP8[$1 + 5 | 0] = HEAP8[49709 | 0] | 0; //@line 23130
 HEAP8[$1 + 6 | 0] = HEAP8[49710 | 0] | 0; //@line 23130
 HEAP32[$da + 28 >> 2] = 2; //@line 23132
 $4 = $src + 1 | 0; //@line 23134
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$4] & 63, 16); //@line 23138
 $15 = ((HEAPU8[$src] | 0) << 8 | (HEAPU8[$4] | 0)) & 65535; //@line 23146
 _dasm_ea($da, $da + 160 | 0, $src, $15 >>> 3 & 56 | $15 >>> 9 & 7, 16); //@line 23152
 return;
}
function _d_3040($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $2 = 0, $st$1$0 = 0, $st$2$1 = 0, sp = 0;
 sp = STACKTOP; //@line 23165
 $2 = $da + 32 | 0; //@line 23167
 $st$1$0 = $2 | 0; //@line 23170
 tempBigInt = 1163284301; //@line 23171
 HEAP8[$st$1$0] = tempBigInt & 255; //@line 23171
 tempBigInt = tempBigInt >> 8; //@line 23171
 HEAP8[$st$1$0 + 1 | 0] = tempBigInt & 255; //@line 23171
 tempBigInt = tempBigInt >> 8; //@line 23171
 HEAP8[$st$1$0 + 2 | 0] = tempBigInt & 255; //@line 23171
 tempBigInt = tempBigInt >> 8; //@line 23171
 HEAP8[$st$1$0 + 3 | 0] = tempBigInt & 255; //@line 23171
 $st$2$1 = $2 + 4 | 0; //@line 23172
 tempBigInt = 5713473; //@line 23173
 HEAP8[$st$2$1] = tempBigInt & 255; //@line 23173
 tempBigInt = tempBigInt >> 8; //@line 23173
 HEAP8[$st$2$1 + 1 | 0] = tempBigInt & 255; //@line 23173
 tempBigInt = tempBigInt >> 8; //@line 23173
 HEAP8[$st$2$1 + 2 | 0] = tempBigInt & 255; //@line 23173
 tempBigInt = tempBigInt >> 8; //@line 23173
 HEAP8[$st$2$1 + 3 | 0] = tempBigInt & 255; //@line 23173
 HEAP32[$da + 28 >> 2] = 2; //@line 23175
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 23181
 _sprintf($da + 160 | 0, 40696, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 23187
 STACKTOP = sp; //@line 23188
 return;
}
function _d_4000($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $8 = 0;
 $1 = $da + 32 | 0; //@line 23200
 HEAP8[$1] = HEAP8[48936] | 0; //@line 23201
 HEAP8[$1 + 1 | 0] = HEAP8[48937 | 0] | 0; //@line 23201
 HEAP8[$1 + 2 | 0] = HEAP8[48938 | 0] | 0; //@line 23201
 HEAP8[$1 + 3 | 0] = HEAP8[48939 | 0] | 0; //@line 23201
 HEAP8[$1 + 4 | 0] = HEAP8[48940 | 0] | 0; //@line 23201
 HEAP8[$1 + 5 | 0] = HEAP8[48941 | 0] | 0; //@line 23201
 HEAP8[$1 + 6 | 0] = HEAP8[48942 | 0] | 0; //@line 23201
 HEAP32[$da + 28 >> 2] = 1; //@line 23203
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 23209
 $8 = $da | 0; //@line 23210
 HEAP32[$8 >> 2] = HEAP32[$8 >> 2] | 32; //@line 23213
 return;
}
function _d_4040($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $8 = 0;
 $1 = $da + 32 | 0; //@line 23226
 HEAP8[$1] = HEAP8[49048] | 0; //@line 23227
 HEAP8[$1 + 1 | 0] = HEAP8[49049 | 0] | 0; //@line 23227
 HEAP8[$1 + 2 | 0] = HEAP8[49050 | 0] | 0; //@line 23227
 HEAP8[$1 + 3 | 0] = HEAP8[49051 | 0] | 0; //@line 23227
 HEAP8[$1 + 4 | 0] = HEAP8[49052 | 0] | 0; //@line 23227
 HEAP8[$1 + 5 | 0] = HEAP8[49053 | 0] | 0; //@line 23227
 HEAP8[$1 + 6 | 0] = HEAP8[49054 | 0] | 0; //@line 23227
 HEAP32[$da + 28 >> 2] = 1; //@line 23229
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 23235
 $8 = $da | 0; //@line 23236
 HEAP32[$8 >> 2] = HEAP32[$8 >> 2] | 32; //@line 23239
 return;
}
function _d_4080($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $8 = 0;
 $1 = $da + 32 | 0; //@line 23252
 HEAP8[$1] = HEAP8[49128] | 0; //@line 23253
 HEAP8[$1 + 1 | 0] = HEAP8[49129 | 0] | 0; //@line 23253
 HEAP8[$1 + 2 | 0] = HEAP8[49130 | 0] | 0; //@line 23253
 HEAP8[$1 + 3 | 0] = HEAP8[49131 | 0] | 0; //@line 23253
 HEAP8[$1 + 4 | 0] = HEAP8[49132 | 0] | 0; //@line 23253
 HEAP8[$1 + 5 | 0] = HEAP8[49133 | 0] | 0; //@line 23253
 HEAP8[$1 + 6 | 0] = HEAP8[49134 | 0] | 0; //@line 23253
 HEAP32[$da + 28 >> 2] = 1; //@line 23255
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 23261
 $8 = $da | 0; //@line 23262
 HEAP32[$8 >> 2] = HEAP32[$8 >> 2] | 32; //@line 23265
 return;
}
function _d_40c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $3 = 0;
 $1 = $da + 32 | 0; //@line 23277
 HEAP8[$1] = HEAP8[49704] | 0; //@line 23278
 HEAP8[$1 + 1 | 0] = HEAP8[49705 | 0] | 0; //@line 23278
 HEAP8[$1 + 2 | 0] = HEAP8[49706 | 0] | 0; //@line 23278
 HEAP8[$1 + 3 | 0] = HEAP8[49707 | 0] | 0; //@line 23278
 HEAP8[$1 + 4 | 0] = HEAP8[49708 | 0] | 0; //@line 23278
 HEAP8[$1 + 5 | 0] = HEAP8[49709 | 0] | 0; //@line 23278
 HEAP8[$1 + 6 | 0] = HEAP8[49710 | 0] | 0; //@line 23278
 HEAP32[$da + 28 >> 2] = 2; //@line 23280
 $3 = $da + 96 | 0; //@line 23281
 HEAP8[$3] = HEAP8[51464] | 0; //@line 23282
 HEAP8[$3 + 1 | 0] = HEAP8[51465 | 0] | 0; //@line 23282
 HEAP8[$3 + 2 | 0] = HEAP8[51466 | 0] | 0; //@line 23282
 _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 23288
 return;
}
function _d_4180($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $2 = 0, sp = 0;
 sp = STACKTOP; //@line 23300
 $2 = $da + 32 | 0; //@line 23302
 tempBigInt = 4933699; //@line 23303
 HEAP8[$2] = tempBigInt & 255; //@line 23303
 tempBigInt = tempBigInt >> 8; //@line 23303
 HEAP8[$2 + 1 | 0] = tempBigInt & 255; //@line 23303
 tempBigInt = tempBigInt >> 8; //@line 23303
 HEAP8[$2 + 2 | 0] = tempBigInt & 255; //@line 23303
 tempBigInt = tempBigInt >> 8; //@line 23303
 HEAP8[$2 + 3 | 0] = tempBigInt & 255; //@line 23303
 HEAP32[$da + 28 >> 2] = 2; //@line 23305
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 23311
 _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 23317
 STACKTOP = sp; //@line 23318
 return;
}
function _d_41c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $2 = 0, sp = 0;
 sp = STACKTOP; //@line 23329
 $2 = $da + 32 | 0; //@line 23331
 tempBigInt = 4277580; //@line 23332
 HEAP8[$2] = tempBigInt & 255; //@line 23332
 tempBigInt = tempBigInt >> 8; //@line 23332
 HEAP8[$2 + 1 | 0] = tempBigInt & 255; //@line 23332
 tempBigInt = tempBigInt >> 8; //@line 23332
 HEAP8[$2 + 2 | 0] = tempBigInt & 255; //@line 23332
 tempBigInt = tempBigInt >> 8; //@line 23332
 HEAP8[$2 + 3 | 0] = tempBigInt & 255; //@line 23332
 HEAP32[$da + 28 >> 2] = 2; //@line 23334
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 23340
 _sprintf($da + 160 | 0, 40696, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 23346
 STACKTOP = sp; //@line 23347
 return;
}
function _d_4200($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0;
 $1 = $da + 32 | 0; //@line 23358
 HEAP8[$1] = HEAP8[49200] | 0; //@line 23359
 HEAP8[$1 + 1 | 0] = HEAP8[49201 | 0] | 0; //@line 23359
 HEAP8[$1 + 2 | 0] = HEAP8[49202 | 0] | 0; //@line 23359
 HEAP8[$1 + 3 | 0] = HEAP8[49203 | 0] | 0; //@line 23359
 HEAP8[$1 + 4 | 0] = HEAP8[49204 | 0] | 0; //@line 23359
 HEAP8[$1 + 5 | 0] = HEAP8[49205 | 0] | 0; //@line 23359
 HEAP32[$da + 28 >> 2] = 1; //@line 23361
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 23367
 return;
}
function _d_4240($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0;
 $1 = $da + 32 | 0; //@line 23379
 HEAP8[$1] = HEAP8[49224] | 0; //@line 23380
 HEAP8[$1 + 1 | 0] = HEAP8[49225 | 0] | 0; //@line 23380
 HEAP8[$1 + 2 | 0] = HEAP8[49226 | 0] | 0; //@line 23380
 HEAP8[$1 + 3 | 0] = HEAP8[49227 | 0] | 0; //@line 23380
 HEAP8[$1 + 4 | 0] = HEAP8[49228 | 0] | 0; //@line 23380
 HEAP8[$1 + 5 | 0] = HEAP8[49229 | 0] | 0; //@line 23380
 HEAP32[$da + 28 >> 2] = 1; //@line 23382
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 23388
 return;
}
function _d_4280($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0;
 $1 = $da + 32 | 0; //@line 23400
 HEAP8[$1] = HEAP8[49240] | 0; //@line 23401
 HEAP8[$1 + 1 | 0] = HEAP8[49241 | 0] | 0; //@line 23401
 HEAP8[$1 + 2 | 0] = HEAP8[49242 | 0] | 0; //@line 23401
 HEAP8[$1 + 3 | 0] = HEAP8[49243 | 0] | 0; //@line 23401
 HEAP8[$1 + 4 | 0] = HEAP8[49244 | 0] | 0; //@line 23401
 HEAP8[$1 + 5 | 0] = HEAP8[49245 | 0] | 0; //@line 23401
 HEAP32[$da + 28 >> 2] = 1; //@line 23403
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 23409
 return;
}
function _d_42c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $4 = 0, $10 = 0;
 $1 = $da + 32 | 0; //@line 23422
 HEAP8[$1] = HEAP8[49704] | 0; //@line 23423
 HEAP8[$1 + 1 | 0] = HEAP8[49705 | 0] | 0; //@line 23423
 HEAP8[$1 + 2 | 0] = HEAP8[49706 | 0] | 0; //@line 23423
 HEAP8[$1 + 3 | 0] = HEAP8[49707 | 0] | 0; //@line 23423
 HEAP8[$1 + 4 | 0] = HEAP8[49708 | 0] | 0; //@line 23423
 HEAP8[$1 + 5 | 0] = HEAP8[49709 | 0] | 0; //@line 23423
 HEAP8[$1 + 6 | 0] = HEAP8[49710 | 0] | 0; //@line 23423
 HEAP32[$da + 28 >> 2] = 2; //@line 23425
 $4 = $da + 96 | 0; //@line 23427
 tempBigInt = 5391171; //@line 23428
 HEAP8[$4] = tempBigInt & 255; //@line 23428
 tempBigInt = tempBigInt >> 8; //@line 23428
 HEAP8[$4 + 1 | 0] = tempBigInt & 255; //@line 23428
 tempBigInt = tempBigInt >> 8; //@line 23428
 HEAP8[$4 + 2 | 0] = tempBigInt & 255; //@line 23428
 tempBigInt = tempBigInt >> 8; //@line 23428
 HEAP8[$4 + 3 | 0] = tempBigInt & 255; //@line 23428
 _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 23434
 $10 = $da | 0; //@line 23435
 HEAP32[$10 >> 2] = HEAP32[$10 >> 2] | 64; //@line 23438
 return;
}
function _d_4400($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0;
 $1 = $da + 32 | 0; //@line 23450
 HEAP8[$1] = HEAP8[49296] | 0; //@line 23451
 HEAP8[$1 + 1 | 0] = HEAP8[49297 | 0] | 0; //@line 23451
 HEAP8[$1 + 2 | 0] = HEAP8[49298 | 0] | 0; //@line 23451
 HEAP8[$1 + 3 | 0] = HEAP8[49299 | 0] | 0; //@line 23451
 HEAP8[$1 + 4 | 0] = HEAP8[49300 | 0] | 0; //@line 23451
 HEAP8[$1 + 5 | 0] = HEAP8[49301 | 0] | 0; //@line 23451
 HEAP32[$da + 28 >> 2] = 1; //@line 23453
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 23459
 return;
}
function _d_4440($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0;
 $1 = $da + 32 | 0; //@line 23471
 HEAP8[$1] = HEAP8[49344] | 0; //@line 23472
 HEAP8[$1 + 1 | 0] = HEAP8[49345 | 0] | 0; //@line 23472
 HEAP8[$1 + 2 | 0] = HEAP8[49346 | 0] | 0; //@line 23472
 HEAP8[$1 + 3 | 0] = HEAP8[49347 | 0] | 0; //@line 23472
 HEAP8[$1 + 4 | 0] = HEAP8[49348 | 0] | 0; //@line 23472
 HEAP8[$1 + 5 | 0] = HEAP8[49349 | 0] | 0; //@line 23472
 HEAP32[$da + 28 >> 2] = 1; //@line 23474
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 23480
 return;
}
function _d_4480($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0;
 $1 = $da + 32 | 0; //@line 23492
 HEAP8[$1] = HEAP8[49368] | 0; //@line 23493
 HEAP8[$1 + 1 | 0] = HEAP8[49369 | 0] | 0; //@line 23493
 HEAP8[$1 + 2 | 0] = HEAP8[49370 | 0] | 0; //@line 23493
 HEAP8[$1 + 3 | 0] = HEAP8[49371 | 0] | 0; //@line 23493
 HEAP8[$1 + 4 | 0] = HEAP8[49372 | 0] | 0; //@line 23493
 HEAP8[$1 + 5 | 0] = HEAP8[49373 | 0] | 0; //@line 23493
 HEAP32[$da + 28 >> 2] = 1; //@line 23495
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 23501
 return;
}
function _d_44c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $9 = 0;
 $1 = $da + 32 | 0; //@line 23514
 HEAP8[$1] = HEAP8[49704] | 0; //@line 23515
 HEAP8[$1 + 1 | 0] = HEAP8[49705 | 0] | 0; //@line 23515
 HEAP8[$1 + 2 | 0] = HEAP8[49706 | 0] | 0; //@line 23515
 HEAP8[$1 + 3 | 0] = HEAP8[49707 | 0] | 0; //@line 23515
 HEAP8[$1 + 4 | 0] = HEAP8[49708 | 0] | 0; //@line 23515
 HEAP8[$1 + 5 | 0] = HEAP8[49709 | 0] | 0; //@line 23515
 HEAP8[$1 + 6 | 0] = HEAP8[49710 | 0] | 0; //@line 23515
 HEAP32[$da + 28 >> 2] = 2; //@line 23517
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 23523
 $9 = $da + 160 | 0; //@line 23525
 tempBigInt = 5391171; //@line 23526
 HEAP8[$9] = tempBigInt & 255; //@line 23526
 tempBigInt = tempBigInt >> 8; //@line 23526
 HEAP8[$9 + 1 | 0] = tempBigInt & 255; //@line 23526
 tempBigInt = tempBigInt >> 8; //@line 23526
 HEAP8[$9 + 2 | 0] = tempBigInt & 255; //@line 23526
 tempBigInt = tempBigInt >> 8; //@line 23526
 HEAP8[$9 + 3 | 0] = tempBigInt & 255; //@line 23526
 return;
}
function _d_4600($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0;
 $1 = $da + 32 | 0; //@line 23538
 HEAP8[$1] = HEAP8[49512] | 0; //@line 23539
 HEAP8[$1 + 1 | 0] = HEAP8[49513 | 0] | 0; //@line 23539
 HEAP8[$1 + 2 | 0] = HEAP8[49514 | 0] | 0; //@line 23539
 HEAP8[$1 + 3 | 0] = HEAP8[49515 | 0] | 0; //@line 23539
 HEAP8[$1 + 4 | 0] = HEAP8[49516 | 0] | 0; //@line 23539
 HEAP8[$1 + 5 | 0] = HEAP8[49517 | 0] | 0; //@line 23539
 HEAP32[$da + 28 >> 2] = 1; //@line 23541
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 23547
 return;
}
function _d_4640($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0;
 $1 = $da + 32 | 0; //@line 23559
 HEAP8[$1] = HEAP8[49584] | 0; //@line 23560
 HEAP8[$1 + 1 | 0] = HEAP8[49585 | 0] | 0; //@line 23560
 HEAP8[$1 + 2 | 0] = HEAP8[49586 | 0] | 0; //@line 23560
 HEAP8[$1 + 3 | 0] = HEAP8[49587 | 0] | 0; //@line 23560
 HEAP8[$1 + 4 | 0] = HEAP8[49588 | 0] | 0; //@line 23560
 HEAP8[$1 + 5 | 0] = HEAP8[49589 | 0] | 0; //@line 23560
 HEAP32[$da + 28 >> 2] = 1; //@line 23562
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 23568
 return;
}
function _d_4680($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0;
 $1 = $da + 32 | 0; //@line 23580
 HEAP8[$1] = HEAP8[49640] | 0; //@line 23581
 HEAP8[$1 + 1 | 0] = HEAP8[49641 | 0] | 0; //@line 23581
 HEAP8[$1 + 2 | 0] = HEAP8[49642 | 0] | 0; //@line 23581
 HEAP8[$1 + 3 | 0] = HEAP8[49643 | 0] | 0; //@line 23581
 HEAP8[$1 + 4 | 0] = HEAP8[49644 | 0] | 0; //@line 23581
 HEAP8[$1 + 5 | 0] = HEAP8[49645 | 0] | 0; //@line 23581
 HEAP32[$da + 28 >> 2] = 1; //@line 23583
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 23589
 return;
}
function _d_46c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $8 = 0, $9 = 0;
 $1 = $da + 32 | 0; //@line 23602
 HEAP8[$1] = HEAP8[49704] | 0; //@line 23603
 HEAP8[$1 + 1 | 0] = HEAP8[49705 | 0] | 0; //@line 23603
 HEAP8[$1 + 2 | 0] = HEAP8[49706 | 0] | 0; //@line 23603
 HEAP8[$1 + 3 | 0] = HEAP8[49707 | 0] | 0; //@line 23603
 HEAP8[$1 + 4 | 0] = HEAP8[49708 | 0] | 0; //@line 23603
 HEAP8[$1 + 5 | 0] = HEAP8[49709 | 0] | 0; //@line 23603
 HEAP8[$1 + 6 | 0] = HEAP8[49710 | 0] | 0; //@line 23603
 HEAP32[$da + 28 >> 2] = 2; //@line 23605
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 23611
 $8 = $da + 160 | 0; //@line 23612
 HEAP8[$8] = HEAP8[51464] | 0; //@line 23613
 HEAP8[$8 + 1 | 0] = HEAP8[51465 | 0] | 0; //@line 23613
 HEAP8[$8 + 2 | 0] = HEAP8[51466 | 0] | 0; //@line 23613
 $9 = $da | 0; //@line 23614
 HEAP32[$9 >> 2] = HEAP32[$9 >> 2] | 1; //@line 23617
 return;
}
function _d_4800($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $8 = 0;
 $1 = $da + 32 | 0; //@line 23630
 HEAP8[$1] = HEAP8[49832] | 0; //@line 23631
 HEAP8[$1 + 1 | 0] = HEAP8[49833 | 0] | 0; //@line 23631
 HEAP8[$1 + 2 | 0] = HEAP8[49834 | 0] | 0; //@line 23631
 HEAP8[$1 + 3 | 0] = HEAP8[49835 | 0] | 0; //@line 23631
 HEAP8[$1 + 4 | 0] = HEAP8[49836 | 0] | 0; //@line 23631
 HEAP8[$1 + 5 | 0] = HEAP8[49837 | 0] | 0; //@line 23631
 HEAP8[$1 + 6 | 0] = HEAP8[49838 | 0] | 0; //@line 23631
 HEAP32[$da + 28 >> 2] = 1; //@line 23633
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 23639
 $8 = $da | 0; //@line 23640
 HEAP32[$8 >> 2] = HEAP32[$8 >> 2] | 32; //@line 23643
 return;
}
function _d_4840($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $2 = 0, $4 = 0, $7 = 0, $9 = 0, $12 = 0, sp = 0;
 sp = STACKTOP; //@line 23656
 $2 = HEAP16[$da + 12 >> 1] | 0; //@line 23658
 $4 = $da + 32 | 0; //@line 23661
 if (($2 & 56) == 0) {
  HEAP8[$4] = HEAP8[50072] | 0; //@line 23664
  HEAP8[$4 + 1 | 0] = HEAP8[50073 | 0] | 0; //@line 23664
  HEAP8[$4 + 2 | 0] = HEAP8[50074 | 0] | 0; //@line 23664
  HEAP8[$4 + 3 | 0] = HEAP8[50075 | 0] | 0; //@line 23664
  HEAP8[$4 + 4 | 0] = HEAP8[50076 | 0] | 0; //@line 23664
  HEAP32[$da + 28 >> 2] = 1; //@line 23666
  $7 = $da + 96 | 0; //@line 23667
  $9 = $2 & 7; //@line 23669
  _sprintf($7 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $9, tempInt) | 0) | 0; //@line 23670
  STACKTOP = sp; //@line 23672
  return;
 } else {
  $12 = $4; //@line 23675
  tempBigInt = 4277584; //@line 23676
  HEAP8[$12] = tempBigInt & 255; //@line 23676
  tempBigInt = tempBigInt >> 8; //@line 23676
  HEAP8[$12 + 1 | 0] = tempBigInt & 255; //@line 23676
  tempBigInt = tempBigInt >> 8; //@line 23676
  HEAP8[$12 + 2 | 0] = tempBigInt & 255; //@line 23676
  tempBigInt = tempBigInt >> 8; //@line 23676
  HEAP8[$12 + 3 | 0] = tempBigInt & 255; //@line 23676
  HEAP32[$da + 28 >> 2] = 1; //@line 23678
  _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 23684
  STACKTOP = sp; //@line 23686
  return;
 }
}
function _d_4880($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $3 = 0, $5 = 0, $7 = 0, $9 = 0, $10 = 0, $14 = 0, $st$1$0 = 0, $st$2$1 = 0, $24 = 0, $st$4$0 = 0, $st$5$1 = 0, sp = 0;
 sp = STACKTOP; //@line 23701
 $3 = HEAPU16[$da + 12 >> 1] | 0; //@line 23704
 $5 = $3 >>> 3 & 7; //@line 23706
 if (($5 | 0) == 0) {
  $7 = $da + 32 | 0; //@line 23708
  HEAP8[$7] = HEAP8[50216] | 0; //@line 23709
  HEAP8[$7 + 1 | 0] = HEAP8[50217 | 0] | 0; //@line 23709
  HEAP8[$7 + 2 | 0] = HEAP8[50218 | 0] | 0; //@line 23709
  HEAP8[$7 + 3 | 0] = HEAP8[50219 | 0] | 0; //@line 23709
  HEAP8[$7 + 4 | 0] = HEAP8[50220 | 0] | 0; //@line 23709
  HEAP8[$7 + 5 | 0] = HEAP8[50221 | 0] | 0; //@line 23709
  HEAP32[$da + 28 >> 2] = 1; //@line 23711
  $9 = $da + 96 | 0; //@line 23712
  $10 = $3 & 7; //@line 23713
  _sprintf($9 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $10, tempInt) | 0) | 0; //@line 23714
  STACKTOP = sp; //@line 23716
  return;
 } else if (($5 | 0) == 4) {
  $14 = $da + 32 | 0; //@line 23720
  $st$1$0 = $14 | 0; //@line 23723
  tempBigInt = 1163284301; //@line 23724
  HEAP8[$st$1$0] = tempBigInt & 255; //@line 23724
  tempBigInt = tempBigInt >> 8; //@line 23724
  HEAP8[$st$1$0 + 1 | 0] = tempBigInt & 255; //@line 23724
  tempBigInt = tempBigInt >> 8; //@line 23724
  HEAP8[$st$1$0 + 2 | 0] = tempBigInt & 255; //@line 23724
  tempBigInt = tempBigInt >> 8; //@line 23724
  HEAP8[$st$1$0 + 3 | 0] = tempBigInt & 255; //@line 23724
  $st$2$1 = $14 + 4 | 0; //@line 23725
  tempBigInt = 5713485; //@line 23726
  HEAP8[$st$2$1] = tempBigInt & 255; //@line 23726
  tempBigInt = tempBigInt >> 8; //@line 23726
  HEAP8[$st$2$1 + 1 | 0] = tempBigInt & 255; //@line 23726
  tempBigInt = tempBigInt >> 8; //@line 23726
  HEAP8[$st$2$1 + 2 | 0] = tempBigInt & 255; //@line 23726
  tempBigInt = tempBigInt >> 8; //@line 23726
  HEAP8[$st$2$1 + 3 | 0] = tempBigInt & 255; //@line 23726
  HEAP32[$da + 28 >> 2] = 2; //@line 23728
  _dasm_arg($da, $da + 96 | 0, $src, 25, 16); //@line 23730
  _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 23736
  STACKTOP = sp; //@line 23738
  return;
 } else {
  $24 = $da + 32 | 0; //@line 23742
  $st$4$0 = $24 | 0; //@line 23745
  tempBigInt = 1163284301; //@line 23746
  HEAP8[$st$4$0] = tempBigInt & 255; //@line 23746
  tempBigInt = tempBigInt >> 8; //@line 23746
  HEAP8[$st$4$0 + 1 | 0] = tempBigInt & 255; //@line 23746
  tempBigInt = tempBigInt >> 8; //@line 23746
  HEAP8[$st$4$0 + 2 | 0] = tempBigInt & 255; //@line 23746
  tempBigInt = tempBigInt >> 8; //@line 23746
  HEAP8[$st$4$0 + 3 | 0] = tempBigInt & 255; //@line 23746
  $st$5$1 = $24 + 4 | 0; //@line 23747
  tempBigInt = 5713485; //@line 23748
  HEAP8[$st$5$1] = tempBigInt & 255; //@line 23748
  tempBigInt = tempBigInt >> 8; //@line 23748
  HEAP8[$st$5$1 + 1 | 0] = tempBigInt & 255; //@line 23748
  tempBigInt = tempBigInt >> 8; //@line 23748
  HEAP8[$st$5$1 + 2 | 0] = tempBigInt & 255; //@line 23748
  tempBigInt = tempBigInt >> 8; //@line 23748
  HEAP8[$st$5$1 + 3 | 0] = tempBigInt & 255; //@line 23748
  HEAP32[$da + 28 >> 2] = 2; //@line 23750
  _dasm_arg($da, $da + 96 | 0, $src, 24, 16); //@line 23752
  _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 23758
  STACKTOP = sp; //@line 23760
  return;
 }
}
function _d_48c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $3 = 0, $5 = 0, $7 = 0, $14 = 0, $st$1$0 = 0, $st$2$1 = 0, $24 = 0, $st$4$0 = 0, $st$5$1 = 0, sp = 0;
 sp = STACKTOP; //@line 23775
 $3 = HEAPU16[$da + 12 >> 1] | 0; //@line 23778
 $5 = $3 >>> 3 & 7; //@line 23780
 if (($5 | 0) == 4) {
  $14 = $da + 32 | 0; //@line 23783
  $st$1$0 = $14 | 0; //@line 23786
  tempBigInt = 1163284301; //@line 23787
  HEAP8[$st$1$0] = tempBigInt & 255; //@line 23787
  tempBigInt = tempBigInt >> 8; //@line 23787
  HEAP8[$st$1$0 + 1 | 0] = tempBigInt & 255; //@line 23787
  tempBigInt = tempBigInt >> 8; //@line 23787
  HEAP8[$st$1$0 + 2 | 0] = tempBigInt & 255; //@line 23787
  tempBigInt = tempBigInt >> 8; //@line 23787
  HEAP8[$st$1$0 + 3 | 0] = tempBigInt & 255; //@line 23787
  $st$2$1 = $14 + 4 | 0; //@line 23788
  tempBigInt = 4992589; //@line 23789
  HEAP8[$st$2$1] = tempBigInt & 255; //@line 23789
  tempBigInt = tempBigInt >> 8; //@line 23789
  HEAP8[$st$2$1 + 1 | 0] = tempBigInt & 255; //@line 23789
  tempBigInt = tempBigInt >> 8; //@line 23789
  HEAP8[$st$2$1 + 2 | 0] = tempBigInt & 255; //@line 23789
  tempBigInt = tempBigInt >> 8; //@line 23789
  HEAP8[$st$2$1 + 3 | 0] = tempBigInt & 255; //@line 23789
  HEAP32[$da + 28 >> 2] = 2; //@line 23791
  _dasm_arg($da, $da + 96 | 0, $src, 25, 32); //@line 23793
  _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 23799
  STACKTOP = sp; //@line 23801
  return;
 } else if (($5 | 0) == 0) {
  $7 = $da + 32 | 0; //@line 23804
  HEAP8[$7] = HEAP8[50296] | 0; //@line 23805
  HEAP8[$7 + 1 | 0] = HEAP8[50297 | 0] | 0; //@line 23805
  HEAP8[$7 + 2 | 0] = HEAP8[50298 | 0] | 0; //@line 23805
  HEAP8[$7 + 3 | 0] = HEAP8[50299 | 0] | 0; //@line 23805
  HEAP8[$7 + 4 | 0] = HEAP8[50300 | 0] | 0; //@line 23805
  HEAP8[$7 + 5 | 0] = HEAP8[50301 | 0] | 0; //@line 23805
  HEAP32[$da + 28 >> 2] = 1; //@line 23807
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $3 & 7, tempInt) | 0) | 0; //@line 23810
  STACKTOP = sp; //@line 23812
  return;
 } else {
  $24 = $da + 32 | 0; //@line 23816
  $st$4$0 = $24 | 0; //@line 23819
  tempBigInt = 1163284301; //@line 23820
  HEAP8[$st$4$0] = tempBigInt & 255; //@line 23820
  tempBigInt = tempBigInt >> 8; //@line 23820
  HEAP8[$st$4$0 + 1 | 0] = tempBigInt & 255; //@line 23820
  tempBigInt = tempBigInt >> 8; //@line 23820
  HEAP8[$st$4$0 + 2 | 0] = tempBigInt & 255; //@line 23820
  tempBigInt = tempBigInt >> 8; //@line 23820
  HEAP8[$st$4$0 + 3 | 0] = tempBigInt & 255; //@line 23820
  $st$5$1 = $24 + 4 | 0; //@line 23821
  tempBigInt = 4992589; //@line 23822
  HEAP8[$st$5$1] = tempBigInt & 255; //@line 23822
  tempBigInt = tempBigInt >> 8; //@line 23822
  HEAP8[$st$5$1 + 1 | 0] = tempBigInt & 255; //@line 23822
  tempBigInt = tempBigInt >> 8; //@line 23822
  HEAP8[$st$5$1 + 2 | 0] = tempBigInt & 255; //@line 23822
  tempBigInt = tempBigInt >> 8; //@line 23822
  HEAP8[$st$5$1 + 3 | 0] = tempBigInt & 255; //@line 23822
  HEAP32[$da + 28 >> 2] = 2; //@line 23824
  _dasm_arg($da, $da + 96 | 0, $src, 24, 32); //@line 23826
  _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 23832
  STACKTOP = sp; //@line 23834
  return;
 }
}
function _d_49c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $2 = 0, $4 = 0, $7 = 0, $9 = 0, $11 = 0, $15 = 0, $22 = 0, $26 = 0, sp = 0;
 sp = STACKTOP; //@line 23848
 $2 = HEAP16[$da + 12 >> 1] | 0; //@line 23850
 $4 = $da + 32 | 0; //@line 23853
 if (($2 & 56) == 0) {
  HEAP8[$4] = HEAP8[50328] | 0; //@line 23856
  HEAP8[$4 + 1 | 0] = HEAP8[50329 | 0] | 0; //@line 23856
  HEAP8[$4 + 2 | 0] = HEAP8[50330 | 0] | 0; //@line 23856
  HEAP8[$4 + 3 | 0] = HEAP8[50331 | 0] | 0; //@line 23856
  HEAP8[$4 + 4 | 0] = HEAP8[50332 | 0] | 0; //@line 23856
  HEAP8[$4 + 5 | 0] = HEAP8[50333 | 0] | 0; //@line 23856
  HEAP8[$4 + 6 | 0] = HEAP8[50334 | 0] | 0; //@line 23856
  HEAP32[$da + 28 >> 2] = 1; //@line 23858
  $7 = $da + 96 | 0; //@line 23859
  $9 = $2 & 7; //@line 23861
  _sprintf($7 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $9, tempInt) | 0) | 0; //@line 23862
  $11 = $da | 0; //@line 23863
  HEAP32[$11 >> 2] = HEAP32[$11 >> 2] | 128; //@line 23866
  STACKTOP = sp; //@line 23868
  return;
 } else {
  $15 = $4; //@line 23871
  tempBigInt = 4277580; //@line 23872
  HEAP8[$15] = tempBigInt & 255; //@line 23872
  tempBigInt = tempBigInt >> 8; //@line 23872
  HEAP8[$15 + 1 | 0] = tempBigInt & 255; //@line 23872
  tempBigInt = tempBigInt >> 8; //@line 23872
  HEAP8[$15 + 2 | 0] = tempBigInt & 255; //@line 23872
  tempBigInt = tempBigInt >> 8; //@line 23872
  HEAP8[$15 + 3 | 0] = tempBigInt & 255; //@line 23872
  HEAP32[$da + 28 >> 2] = 2; //@line 23874
  _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 23880
  $22 = $da + 160 | 0; //@line 23881
  $26 = (HEAPU8[$src] | 0) >>> 1 & 7; //@line 23885
  _sprintf($22 | 0, 40696, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $26, tempInt) | 0) | 0; //@line 23886
  STACKTOP = sp; //@line 23888
  return;
 }
}
function _d_4a00($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0;
 $1 = $da + 32 | 0; //@line 23900
 HEAP8[$1] = HEAP8[50464] | 0; //@line 23901
 HEAP8[$1 + 1 | 0] = HEAP8[50465 | 0] | 0; //@line 23901
 HEAP8[$1 + 2 | 0] = HEAP8[50466 | 0] | 0; //@line 23901
 HEAP8[$1 + 3 | 0] = HEAP8[50467 | 0] | 0; //@line 23901
 HEAP8[$1 + 4 | 0] = HEAP8[50468 | 0] | 0; //@line 23901
 HEAP8[$1 + 5 | 0] = HEAP8[50469 | 0] | 0; //@line 23901
 HEAP32[$da + 28 >> 2] = 1; //@line 23903
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 23909
 return;
}
function _d_4a40($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0;
 $1 = $da + 32 | 0; //@line 23921
 HEAP8[$1] = HEAP8[50520] | 0; //@line 23922
 HEAP8[$1 + 1 | 0] = HEAP8[50521 | 0] | 0; //@line 23922
 HEAP8[$1 + 2 | 0] = HEAP8[50522 | 0] | 0; //@line 23922
 HEAP8[$1 + 3 | 0] = HEAP8[50523 | 0] | 0; //@line 23922
 HEAP8[$1 + 4 | 0] = HEAP8[50524 | 0] | 0; //@line 23922
 HEAP8[$1 + 5 | 0] = HEAP8[50525 | 0] | 0; //@line 23922
 HEAP32[$da + 28 >> 2] = 1; //@line 23924
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 23930
 return;
}
function _d_4a80($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0;
 $1 = $da + 32 | 0; //@line 23942
 HEAP8[$1] = HEAP8[50552] | 0; //@line 23943
 HEAP8[$1 + 1 | 0] = HEAP8[50553 | 0] | 0; //@line 23943
 HEAP8[$1 + 2 | 0] = HEAP8[50554 | 0] | 0; //@line 23943
 HEAP8[$1 + 3 | 0] = HEAP8[50555 | 0] | 0; //@line 23943
 HEAP8[$1 + 4 | 0] = HEAP8[50556 | 0] | 0; //@line 23943
 HEAP8[$1 + 5 | 0] = HEAP8[50557 | 0] | 0; //@line 23943
 HEAP32[$da + 28 >> 2] = 1; //@line 23945
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 23951
 return;
}
function _d_4ac0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $4 = 0, $6 = 0, $st$1$0 = 0, $st$2$1 = 0, $8 = 0, $12 = 0;
 $4 = $da + 32 | 0; //@line 23968
 if ((HEAP16[$da + 12 >> 1] | 0) == 19196) {
  $6 = $4; //@line 23971
  $st$1$0 = $6 | 0; //@line 23974
  tempBigInt = 1162628169; //@line 23975
  HEAP8[$st$1$0] = tempBigInt & 255; //@line 23975
  tempBigInt = tempBigInt >> 8; //@line 23975
  HEAP8[$st$1$0 + 1 | 0] = tempBigInt & 255; //@line 23975
  tempBigInt = tempBigInt >> 8; //@line 23975
  HEAP8[$st$1$0 + 2 | 0] = tempBigInt & 255; //@line 23975
  tempBigInt = tempBigInt >> 8; //@line 23975
  HEAP8[$st$1$0 + 3 | 0] = tempBigInt & 255; //@line 23975
  $st$2$1 = $6 + 4 | 0; //@line 23976
  tempBigInt = 4997447; //@line 23977
  HEAP8[$st$2$1] = tempBigInt & 255; //@line 23977
  tempBigInt = tempBigInt >> 8; //@line 23977
  HEAP8[$st$2$1 + 1 | 0] = tempBigInt & 255; //@line 23977
  tempBigInt = tempBigInt >> 8; //@line 23977
  HEAP8[$st$2$1 + 2 | 0] = tempBigInt & 255; //@line 23977
  tempBigInt = tempBigInt >> 8; //@line 23977
  HEAP8[$st$2$1 + 3 | 0] = tempBigInt & 255; //@line 23977
  HEAP32[$da + 28 >> 2] = 0; //@line 23979
  $8 = $da | 0; //@line 23980
  HEAP32[$8 >> 2] = HEAP32[$8 >> 2] | 4; //@line 23983
  return;
 } else {
  $12 = $4; //@line 23988
  tempBigInt = 5456212; //@line 23989
  HEAP8[$12] = tempBigInt & 255; //@line 23989
  tempBigInt = tempBigInt >> 8; //@line 23989
  HEAP8[$12 + 1 | 0] = tempBigInt & 255; //@line 23989
  tempBigInt = tempBigInt >> 8; //@line 23989
  HEAP8[$12 + 2 | 0] = tempBigInt & 255; //@line 23989
  tempBigInt = tempBigInt >> 8; //@line 23989
  HEAP8[$12 + 3 | 0] = tempBigInt & 255; //@line 23989
  HEAP32[$da + 28 >> 2] = 1; //@line 23991
  _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 23997
  return;
 }
}
function _d_4c00($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $2 = 0, $3 = 0, $7 = 0, $11 = 0, $13 = 0, $16 = 0, $23 = 0, $25 = 0, $27 = 0, $29 = 0, $33 = 0, $36 = 0, $37 = 0, $38 = 0, sp = 0;
 sp = STACKTOP; //@line 24013
 $1 = $da + 8 | 0; //@line 24014
 $2 = HEAP32[$1 >> 2] | 0; //@line 24015
 $3 = $2 << 1; //@line 24016
 $7 = (HEAPU8[$src + $3 | 0] | 0) << 8; //@line 24020
 $11 = $7 | (HEAPU8[$src + ($3 | 1) | 0] | 0); //@line 24025
 HEAP32[$1 >> 2] = $2 + 1; //@line 24027
 $13 = $da + 14 | 0; //@line 24028
 HEAP16[$13 >> 1] = $11; //@line 24029
 $16 = $da + 32 | 0; //@line 24032
 HEAP8[$16] = HEAP8[50600] | 0; //@line 24033
 HEAP8[$16 + 1 | 0] = HEAP8[50601 | 0] | 0; //@line 24033
 HEAP8[$16 + 2 | 0] = HEAP8[50602 | 0] | 0; //@line 24033
 HEAP8[$16 + 3 | 0] = HEAP8[50603 | 0] | 0; //@line 24033
 HEAP8[$16 + 4 | 0] = HEAP8[50604 | 0] | 0; //@line 24033
 HEAP8[$16 + 5 | 0] = HEAP8[50605 | 0] | 0; //@line 24033
 HEAP8[$16 + 6 | 0] = HEAP8[50606 | 0] | 0; //@line 24033
 HEAP32[$da + 28 >> 2] = 2; //@line 24035
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 24041
 $23 = $da + 160 | 0; //@line 24042
 $25 = HEAPU16[$13 >> 1] | 0; //@line 24044
 if (($7 & 1024) == 0) {
  $33 = $25 >>> 12 & 7; //@line 24048
  _sprintf($23 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $33, tempInt) | 0) | 0; //@line 24049
  $36 = $da | 0; //@line 24050
  $37 = HEAP32[$36 >> 2] | 0; //@line 24051
  $38 = $37 | 128; //@line 24052
  HEAP32[$36 >> 2] = $38; //@line 24053
  STACKTOP = sp; //@line 24054
  return;
 } else {
  $27 = $25 & 7; //@line 24057
  $29 = $25 >>> 12 & 7; //@line 24059
  _sprintf($23 | 0, 50584, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $27, HEAP32[tempInt + 8 >> 2] = $29, tempInt) | 0) | 0; //@line 24060
  $36 = $da | 0; //@line 24062
  $37 = HEAP32[$36 >> 2] | 0; //@line 24063
  $38 = $37 | 128; //@line 24064
  HEAP32[$36 >> 2] = $38; //@line 24065
  STACKTOP = sp; //@line 24066
  return;
 }
}
function _d_4c40($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $2 = 0, $3 = 0, $7 = 0, $11 = 0, $13 = 0, $16 = 0, $18 = 0, $st$1$0 = 0, $st$2$1 = 0, $25 = 0, $27 = 0, $28 = 0, $30 = 0, $39 = 0, $41 = 0, $42 = 0, $44 = 0, $47 = 0, $48 = 0, $49 = 0, sp = 0;
 sp = STACKTOP; //@line 24083
 $1 = $da + 8 | 0; //@line 24084
 $2 = HEAP32[$1 >> 2] | 0; //@line 24085
 $3 = $2 << 1; //@line 24086
 $7 = (HEAPU8[$src + $3 | 0] | 0) << 8; //@line 24090
 $11 = $7 | (HEAPU8[$src + ($3 | 1) | 0] | 0); //@line 24095
 HEAP32[$1 >> 2] = $2 + 1; //@line 24097
 $13 = $da + 14 | 0; //@line 24098
 HEAP16[$13 >> 1] = $11; //@line 24099
 $16 = $da + 32 | 0; //@line 24102
 if (($7 & 1024) == 0) {
  HEAP8[$16] = HEAP8[50616] | 0; //@line 24105
  HEAP8[$16 + 1 | 0] = HEAP8[50617 | 0] | 0; //@line 24105
  HEAP8[$16 + 2 | 0] = HEAP8[50618 | 0] | 0; //@line 24105
  HEAP8[$16 + 3 | 0] = HEAP8[50619 | 0] | 0; //@line 24105
  HEAP8[$16 + 4 | 0] = HEAP8[50620 | 0] | 0; //@line 24105
  HEAP8[$16 + 5 | 0] = HEAP8[50621 | 0] | 0; //@line 24105
  HEAP8[$16 + 6 | 0] = HEAP8[50622 | 0] | 0; //@line 24105
  HEAP32[$da + 28 >> 2] = 2; //@line 24107
  _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 24113
  $39 = $da + 160 | 0; //@line 24114
  $41 = HEAPU16[$13 >> 1] | 0; //@line 24116
  $42 = $41 & 7; //@line 24117
  $44 = $41 >>> 12 & 7; //@line 24119
  _sprintf($39 | 0, 50584, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $42, HEAP32[tempInt + 8 >> 2] = $44, tempInt) | 0) | 0; //@line 24120
  $47 = $da | 0; //@line 24121
  $48 = HEAP32[$47 >> 2] | 0; //@line 24122
  $49 = $48 | 128; //@line 24123
  HEAP32[$47 >> 2] = $49; //@line 24124
  STACKTOP = sp; //@line 24125
  return;
 } else {
  $18 = $16; //@line 24128
  $st$1$0 = $18 | 0; //@line 24131
  tempBigInt = 1431718212; //@line 24132
  HEAP8[$st$1$0] = tempBigInt & 255; //@line 24132
  tempBigInt = tempBigInt >> 8; //@line 24132
  HEAP8[$st$1$0 + 1 | 0] = tempBigInt & 255; //@line 24132
  tempBigInt = tempBigInt >> 8; //@line 24132
  HEAP8[$st$1$0 + 2 | 0] = tempBigInt & 255; //@line 24132
  tempBigInt = tempBigInt >> 8; //@line 24132
  HEAP8[$st$1$0 + 3 | 0] = tempBigInt & 255; //@line 24132
  $st$2$1 = $18 + 4 | 0; //@line 24133
  tempBigInt = 4992588; //@line 24134
  HEAP8[$st$2$1] = tempBigInt & 255; //@line 24134
  tempBigInt = tempBigInt >> 8; //@line 24134
  HEAP8[$st$2$1 + 1 | 0] = tempBigInt & 255; //@line 24134
  tempBigInt = tempBigInt >> 8; //@line 24134
  HEAP8[$st$2$1 + 2 | 0] = tempBigInt & 255; //@line 24134
  tempBigInt = tempBigInt >> 8; //@line 24134
  HEAP8[$st$2$1 + 3 | 0] = tempBigInt & 255; //@line 24134
  HEAP32[$da + 28 >> 2] = 2; //@line 24136
  _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 24142
  $25 = $da + 160 | 0; //@line 24143
  $27 = HEAPU16[$13 >> 1] | 0; //@line 24145
  $28 = $27 & 7; //@line 24146
  $30 = $27 >>> 12 & 7; //@line 24148
  _sprintf($25 | 0, 50584, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $28, HEAP32[tempInt + 8 >> 2] = $30, tempInt) | 0) | 0; //@line 24149
  $47 = $da | 0; //@line 24151
  $48 = HEAP32[$47 >> 2] | 0; //@line 24152
  $49 = $48 | 128; //@line 24153
  HEAP32[$47 >> 2] = $49; //@line 24154
  STACKTOP = sp; //@line 24155
  return;
 }
}
function _d_4c80($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $4 = 0, $7 = 0, $15 = 0, $18 = 0, $st$1$0 = 0, $st$2$1 = 0, sp = 0;
 sp = STACKTOP; //@line 24169
 $4 = $da + 32 | 0; //@line 24174
 if ((HEAP16[$da + 12 >> 1] & 56) == 0) {
  HEAP8[$4] = HEAP8[36120] | 0; //@line 24177
  HEAP8[$4 + 1 | 0] = HEAP8[36121 | 0] | 0; //@line 24177
  HEAP8[$4 + 2 | 0] = HEAP8[36122 | 0] | 0; //@line 24177
  HEAP32[$da + 28 >> 2] = 1; //@line 24179
  $7 = $da + 96 | 0; //@line 24180
  $15 = ((HEAPU8[$src] | 0) << 8 | (HEAPU8[$src + 1 | 0] | 0)) & 65535; //@line 24188
  _sprintf($7 | 0, 47464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $15, tempInt) | 0) | 0; //@line 24189
  STACKTOP = sp; //@line 24191
  return;
 } else {
  $18 = $4; //@line 24194
  $st$1$0 = $18 | 0; //@line 24197
  tempBigInt = 1163284301; //@line 24198
  HEAP8[$st$1$0] = tempBigInt & 255; //@line 24198
  tempBigInt = tempBigInt >> 8; //@line 24198
  HEAP8[$st$1$0 + 1 | 0] = tempBigInt & 255; //@line 24198
  tempBigInt = tempBigInt >> 8; //@line 24198
  HEAP8[$st$1$0 + 2 | 0] = tempBigInt & 255; //@line 24198
  tempBigInt = tempBigInt >> 8; //@line 24198
  HEAP8[$st$1$0 + 3 | 0] = tempBigInt & 255; //@line 24198
  $st$2$1 = $18 + 4 | 0; //@line 24199
  tempBigInt = 5713485; //@line 24200
  HEAP8[$st$2$1] = tempBigInt & 255; //@line 24200
  tempBigInt = tempBigInt >> 8; //@line 24200
  HEAP8[$st$2$1 + 1 | 0] = tempBigInt & 255; //@line 24200
  tempBigInt = tempBigInt >> 8; //@line 24200
  HEAP8[$st$2$1 + 2 | 0] = tempBigInt & 255; //@line 24200
  tempBigInt = tempBigInt >> 8; //@line 24200
  HEAP8[$st$2$1 + 3 | 0] = tempBigInt & 255; //@line 24200
  HEAP32[$da + 28 >> 2] = 2; //@line 24202
  _dasm_arg($da, $da + 160 | 0, $src, 24, 16); //@line 24204
  _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 24210
  STACKTOP = sp; //@line 24212
  return;
 }
}
function _d_4cc0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $4 = 0, $7 = 0, $15 = 0, $18 = 0, $st$1$0 = 0, $st$2$1 = 0, sp = 0;
 sp = STACKTOP; //@line 24226
 $4 = $da + 32 | 0; //@line 24231
 if ((HEAP16[$da + 12 >> 1] & 56) == 0) {
  HEAP8[$4] = HEAP8[36120] | 0; //@line 24234
  HEAP8[$4 + 1 | 0] = HEAP8[36121 | 0] | 0; //@line 24234
  HEAP8[$4 + 2 | 0] = HEAP8[36122 | 0] | 0; //@line 24234
  HEAP32[$da + 28 >> 2] = 1; //@line 24236
  $7 = $da + 96 | 0; //@line 24237
  $15 = ((HEAPU8[$src] | 0) << 8 | (HEAPU8[$src + 1 | 0] | 0)) & 65535; //@line 24245
  _sprintf($7 | 0, 47464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $15, tempInt) | 0) | 0; //@line 24246
  STACKTOP = sp; //@line 24248
  return;
 } else {
  $18 = $4; //@line 24251
  $st$1$0 = $18 | 0; //@line 24254
  tempBigInt = 1163284301; //@line 24255
  HEAP8[$st$1$0] = tempBigInt & 255; //@line 24255
  tempBigInt = tempBigInt >> 8; //@line 24255
  HEAP8[$st$1$0 + 1 | 0] = tempBigInt & 255; //@line 24255
  tempBigInt = tempBigInt >> 8; //@line 24255
  HEAP8[$st$1$0 + 2 | 0] = tempBigInt & 255; //@line 24255
  tempBigInt = tempBigInt >> 8; //@line 24255
  HEAP8[$st$1$0 + 3 | 0] = tempBigInt & 255; //@line 24255
  $st$2$1 = $18 + 4 | 0; //@line 24256
  tempBigInt = 4992589; //@line 24257
  HEAP8[$st$2$1] = tempBigInt & 255; //@line 24257
  tempBigInt = tempBigInt >> 8; //@line 24257
  HEAP8[$st$2$1 + 1 | 0] = tempBigInt & 255; //@line 24257
  tempBigInt = tempBigInt >> 8; //@line 24257
  HEAP8[$st$2$1 + 2 | 0] = tempBigInt & 255; //@line 24257
  tempBigInt = tempBigInt >> 8; //@line 24257
  HEAP8[$st$2$1 + 3 | 0] = tempBigInt & 255; //@line 24257
  HEAP32[$da + 28 >> 2] = 2; //@line 24259
  _dasm_arg($da, $da + 160 | 0, $src, 24, 32); //@line 24261
  _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 24267
  STACKTOP = sp; //@line 24269
  return;
 }
}
function _d_4e40($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $2 = 0, $3 = 0, $5 = 0, $7 = 0, $12 = 0, $15 = 0, $26 = 0, $28 = 0, $31 = 0, $36 = 0, $38 = 0, $43 = 0, $54 = 0, $56 = 0, $59 = 0, $64 = 0, $66 = 0, $70 = 0, $72 = 0, $77 = 0, $80 = 0, $83 = 0, $85 = 0, $86 = 0, $95 = 0, $97 = 0, $101 = 0, $105 = 0, $109 = 0, $114 = 0, $str_0_i_i = 0, $118 = 0, $119 = 0, $_pre_phi = 0, $123 = 0, $133 = 0, $136 = 0, $139 = 0, $141 = 0, $148 = 0, $157 = 0, $159 = 0, $161 = 0, $163 = 0, $165 = 0, $167 = 0, $169 = 0, $171 = 0, $173 = 0, $176 = 0, $178 = 0, $180 = 0, $str_0_i_i42 = 0, $181 = 0, $182 = 0, $_pre_phi45 = 0, $184 = 0, $190 = 0, $192 = 0, $193 = 0, $196 = 0, $198 = 0, $212 = 0, $214 = 0, $218 = 0, $220 = 0, $221 = 0, $224 = 0, $230 = 0, $231 = 0, $235 = 0, $238 = 0, $242 = 0, $246 = 0, $256 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 24309
 $2 = HEAP16[$da + 12 >> 1] | 0; //@line 24311
 $3 = $2 & 65535; //@line 24312
 if (($2 << 16 >> 16 | 0) == 20080) {
  $5 = $da + 32 | 0; //@line 24314
  HEAP8[$5] = HEAP8[51400] | 0; //@line 24315
  HEAP8[$5 + 1 | 0] = HEAP8[51401 | 0] | 0; //@line 24315
  HEAP8[$5 + 2 | 0] = HEAP8[51402 | 0] | 0; //@line 24315
  HEAP8[$5 + 3 | 0] = HEAP8[51403 | 0] | 0; //@line 24315
  HEAP8[$5 + 4 | 0] = HEAP8[51404 | 0] | 0; //@line 24315
  HEAP8[$5 + 5 | 0] = HEAP8[51405 | 0] | 0; //@line 24315
  HEAP32[$da + 28 >> 2] = 0; //@line 24317
  $7 = $da | 0; //@line 24318
  HEAP32[$7 >> 2] = HEAP32[$7 >> 2] | 1; //@line 24321
  STACKTOP = sp; //@line 24323
  return;
 } else if (($2 << 16 >> 16 | 0) == 20081) {
  $12 = $da + 32 | 0; //@line 24327
  tempBigInt = 5263182; //@line 24328
  HEAP8[$12] = tempBigInt & 255; //@line 24328
  tempBigInt = tempBigInt >> 8; //@line 24328
  HEAP8[$12 + 1 | 0] = tempBigInt & 255; //@line 24328
  tempBigInt = tempBigInt >> 8; //@line 24328
  HEAP8[$12 + 2 | 0] = tempBigInt & 255; //@line 24328
  tempBigInt = tempBigInt >> 8; //@line 24328
  HEAP8[$12 + 3 | 0] = tempBigInt & 255; //@line 24328
  HEAP32[$da + 28 >> 2] = 0; //@line 24330
  STACKTOP = sp; //@line 24332
  return;
 } else if (($2 << 16 >> 16 | 0) == 20086) {
  $70 = $da + 32 | 0; //@line 24335
  HEAP8[$70] = HEAP8[51024] | 0; //@line 24336
  HEAP8[$70 + 1 | 0] = HEAP8[51025 | 0] | 0; //@line 24336
  HEAP8[$70 + 2 | 0] = HEAP8[51026 | 0] | 0; //@line 24336
  HEAP8[$70 + 3 | 0] = HEAP8[51027 | 0] | 0; //@line 24336
  HEAP8[$70 + 4 | 0] = HEAP8[51028 | 0] | 0; //@line 24336
  HEAP8[$70 + 5 | 0] = HEAP8[51029 | 0] | 0; //@line 24336
  HEAP32[$da + 28 >> 2] = 0; //@line 24338
  $72 = $da | 0; //@line 24339
  HEAP32[$72 >> 2] = HEAP32[$72 >> 2] | 32; //@line 24342
  STACKTOP = sp; //@line 24344
  return;
 } else if (($2 << 16 >> 16 | 0) == 20085) {
  $64 = $da + 32 | 0; //@line 24348
  tempBigInt = 5461074; //@line 24349
  HEAP8[$64] = tempBigInt & 255; //@line 24349
  tempBigInt = tempBigInt >> 8; //@line 24349
  HEAP8[$64 + 1 | 0] = tempBigInt & 255; //@line 24349
  tempBigInt = tempBigInt >> 8; //@line 24349
  HEAP8[$64 + 2 | 0] = tempBigInt & 255; //@line 24349
  tempBigInt = tempBigInt >> 8; //@line 24349
  HEAP8[$64 + 3 | 0] = tempBigInt & 255; //@line 24349
  HEAP32[$da + 28 >> 2] = 0; //@line 24351
  $66 = $da | 0; //@line 24352
  HEAP32[$66 >> 2] = HEAP32[$66 >> 2] | 16; //@line 24355
  STACKTOP = sp; //@line 24357
  return;
 } else if (($2 << 16 >> 16 | 0) == 20083) {
  $36 = $da + 32 | 0; //@line 24361
  tempBigInt = 4543570; //@line 24362
  HEAP8[$36] = tempBigInt & 255; //@line 24362
  tempBigInt = tempBigInt >> 8; //@line 24362
  HEAP8[$36 + 1 | 0] = tempBigInt & 255; //@line 24362
  tempBigInt = tempBigInt >> 8; //@line 24362
  HEAP8[$36 + 2 | 0] = tempBigInt & 255; //@line 24362
  tempBigInt = tempBigInt >> 8; //@line 24362
  HEAP8[$36 + 3 | 0] = tempBigInt & 255; //@line 24362
  HEAP32[$da + 28 >> 2] = 0; //@line 24364
  $38 = $da | 0; //@line 24365
  HEAP32[$38 >> 2] = HEAP32[$38 >> 2] | 9; //@line 24368
  STACKTOP = sp; //@line 24370
  return;
 } else if (($2 << 16 >> 16 | 0) == 20091) {
  $133 = $da + 8 | 0; //@line 24373
  HEAP32[$133 >> 2] = (HEAP32[$133 >> 2] | 0) + 1; //@line 24376
  $136 = $da + 32 | 0; //@line 24377
  HEAP8[$136] = HEAP8[50968] | 0; //@line 24378
  HEAP8[$136 + 1 | 0] = HEAP8[50969 | 0] | 0; //@line 24378
  HEAP8[$136 + 2 | 0] = HEAP8[50970 | 0] | 0; //@line 24378
  HEAP8[$136 + 3 | 0] = HEAP8[50971 | 0] | 0; //@line 24378
  HEAP8[$136 + 4 | 0] = HEAP8[50972 | 0] | 0; //@line 24378
  HEAP8[$136 + 5 | 0] = HEAP8[50973 | 0] | 0; //@line 24378
  HEAP32[$da + 28 >> 2] = 2; //@line 24380
  $139 = $src + 2 | 0; //@line 24382
  $141 = HEAPU8[$139] | 0; //@line 24384
  _sprintf($da + 96 | 0, 37704, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = ($141 & 128 | 0) != 0 ? 34768 : 32184, HEAP32[tempInt + 8 >> 2] = $141 >>> 4 & 7, tempInt) | 0) | 0; //@line 24390
  $148 = $da + 160 | 0; //@line 24391
  $157 = ((HEAPU8[$139] | 0) << 8 | (HEAPU8[$src + 3 | 0] | 0)) & 4095; //@line 24400
  if (($157 | 0) == 2048) {
   $167 = $da | 0; //@line 24402
   $169 = HEAP32[$167 >> 2] | 64; //@line 24404
   HEAP32[$167 >> 2] = $169; //@line 24405
   $str_0_i_i42 = 50984;
   $180 = $169;
   label = 2818; //@line 24408
  } else if (($157 | 0) == 2049) {
   $171 = $da | 0; //@line 24410
   $173 = HEAP32[$171 >> 2] | 64; //@line 24412
   HEAP32[$171 >> 2] = $173; //@line 24413
   $str_0_i_i42 = 48032;
   $180 = $173;
   label = 2818; //@line 24416
  } else if (($157 | 0) == 1) {
   $163 = $da | 0; //@line 24418
   $165 = HEAP32[$163 >> 2] | 64; //@line 24420
   HEAP32[$163 >> 2] = $165; //@line 24421
   $str_0_i_i42 = 48424;
   $180 = $165;
   label = 2818; //@line 24424
  } else if (($157 | 0) == 0) {
   $159 = $da | 0; //@line 24426
   $161 = HEAP32[$159 >> 2] | 64; //@line 24428
   HEAP32[$159 >> 2] = $161; //@line 24429
   $str_0_i_i42 = 48824;
   $180 = $161;
   label = 2818; //@line 24432
  } else {
   _sprintf($148 | 0, 47736, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $157, tempInt) | 0) | 0; //@line 24434
   $176 = $da | 0; //@line 24435
   $178 = HEAP32[$176 >> 2] | 64; //@line 24437
   HEAP32[$176 >> 2] = $178; //@line 24438
   $184 = $178;
   $_pre_phi45 = $176;
  }
  if ((label | 0) == 2818) {
   $181 = $str_0_i_i42; //@line 24445
   $182 = $148; //@line 24446
   tempBigInt = HEAPU8[$181] | HEAPU8[$181 + 1 | 0] << 8 | HEAPU8[$181 + 2 | 0] << 16 | HEAPU8[$181 + 3 | 0] << 24 | 0; //@line 24448
   HEAP8[$182] = tempBigInt & 255; //@line 24448
   tempBigInt = tempBigInt >> 8; //@line 24448
   HEAP8[$182 + 1 | 0] = tempBigInt & 255; //@line 24448
   tempBigInt = tempBigInt >> 8; //@line 24448
   HEAP8[$182 + 2 | 0] = tempBigInt & 255; //@line 24448
   tempBigInt = tempBigInt >> 8; //@line 24448
   HEAP8[$182 + 3 | 0] = tempBigInt & 255; //@line 24448
   $184 = $180;
   $_pre_phi45 = $da | 0;
  }
  HEAP32[$_pre_phi45 >> 2] = $184 | 64; //@line 24456
  STACKTOP = sp; //@line 24458
  return;
 } else if (($2 << 16 >> 16 | 0) == 20090) {
  $80 = $da + 8 | 0; //@line 24461
  HEAP32[$80 >> 2] = (HEAP32[$80 >> 2] | 0) + 1; //@line 24464
  $83 = $da + 32 | 0; //@line 24465
  HEAP8[$83] = HEAP8[50968] | 0; //@line 24466
  HEAP8[$83 + 1 | 0] = HEAP8[50969 | 0] | 0; //@line 24466
  HEAP8[$83 + 2 | 0] = HEAP8[50970 | 0] | 0; //@line 24466
  HEAP8[$83 + 3 | 0] = HEAP8[50971 | 0] | 0; //@line 24466
  HEAP8[$83 + 4 | 0] = HEAP8[50972 | 0] | 0; //@line 24466
  HEAP8[$83 + 5 | 0] = HEAP8[50973 | 0] | 0; //@line 24466
  HEAP32[$da + 28 >> 2] = 2; //@line 24468
  $85 = $da + 96 | 0; //@line 24469
  $86 = $src + 2 | 0; //@line 24470
  $95 = ((HEAPU8[$86] | 0) << 8 | (HEAPU8[$src + 3 | 0] | 0)) & 4095; //@line 24479
  if (($95 | 0) == 2048) {
   $105 = $da | 0; //@line 24481
   HEAP32[$105 >> 2] = HEAP32[$105 >> 2] | 64; //@line 24484
   $str_0_i_i = 50984; //@line 24486
   label = 2810; //@line 24487
  } else if (($95 | 0) == 1) {
   $101 = $da | 0; //@line 24489
   HEAP32[$101 >> 2] = HEAP32[$101 >> 2] | 64; //@line 24492
   $str_0_i_i = 48424; //@line 24494
   label = 2810; //@line 24495
  } else if (($95 | 0) == 2049) {
   $109 = $da | 0; //@line 24497
   HEAP32[$109 >> 2] = HEAP32[$109 >> 2] | 64; //@line 24500
   $str_0_i_i = 48032; //@line 24502
   label = 2810; //@line 24503
  } else if (($95 | 0) == 0) {
   $97 = $da | 0; //@line 24505
   HEAP32[$97 >> 2] = HEAP32[$97 >> 2] | 64; //@line 24508
   $str_0_i_i = 48824; //@line 24510
   label = 2810; //@line 24511
  } else {
   _sprintf($85 | 0, 47736, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $95, tempInt) | 0) | 0; //@line 24513
   $114 = $da | 0; //@line 24514
   HEAP32[$114 >> 2] = HEAP32[$114 >> 2] | 64; //@line 24517
   $_pre_phi = $114; //@line 24519
  }
  if ((label | 0) == 2810) {
   $118 = $str_0_i_i; //@line 24523
   $119 = $85; //@line 24524
   tempBigInt = HEAPU8[$118] | HEAPU8[$118 + 1 | 0] << 8 | HEAPU8[$118 + 2 | 0] << 16 | HEAPU8[$118 + 3 | 0] << 24 | 0; //@line 24526
   HEAP8[$119] = tempBigInt & 255; //@line 24526
   tempBigInt = tempBigInt >> 8; //@line 24526
   HEAP8[$119 + 1 | 0] = tempBigInt & 255; //@line 24526
   tempBigInt = tempBigInt >> 8; //@line 24526
   HEAP8[$119 + 2 | 0] = tempBigInt & 255; //@line 24526
   tempBigInt = tempBigInt >> 8; //@line 24526
   HEAP8[$119 + 3 | 0] = tempBigInt & 255; //@line 24526
   $_pre_phi = $da | 0; //@line 24529
  }
  $123 = HEAPU8[$86] | 0; //@line 24534
  _sprintf($da + 160 | 0, 37704, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = ($123 & 128 | 0) != 0 ? 34768 : 32184, HEAP32[tempInt + 8 >> 2] = $123 >>> 4 & 7, tempInt) | 0) | 0; //@line 24540
  HEAP32[$_pre_phi >> 2] = HEAP32[$_pre_phi >> 2] | 64; //@line 24543
  STACKTOP = sp; //@line 24545
  return;
 } else if (($2 << 16 >> 16 | 0) == 20087) {
  $77 = $da + 32 | 0; //@line 24549
  tempBigInt = 5395538; //@line 24550
  HEAP8[$77] = tempBigInt & 255; //@line 24550
  tempBigInt = tempBigInt >> 8; //@line 24550
  HEAP8[$77 + 1 | 0] = tempBigInt & 255; //@line 24550
  tempBigInt = tempBigInt >> 8; //@line 24550
  HEAP8[$77 + 2 | 0] = tempBigInt & 255; //@line 24550
  tempBigInt = tempBigInt >> 8; //@line 24550
  HEAP8[$77 + 3 | 0] = tempBigInt & 255; //@line 24550
  HEAP32[$da + 28 >> 2] = 0; //@line 24552
  STACKTOP = sp; //@line 24554
  return;
 } else if (($2 << 16 >> 16 | 0) == 20084) {
  $43 = $da + 32 | 0; //@line 24558
  tempBigInt = 4478034; //@line 24559
  HEAP8[$43] = tempBigInt & 255; //@line 24559
  tempBigInt = tempBigInt >> 8; //@line 24559
  HEAP8[$43 + 1 | 0] = tempBigInt & 255; //@line 24559
  tempBigInt = tempBigInt >> 8; //@line 24559
  HEAP8[$43 + 2 | 0] = tempBigInt & 255; //@line 24559
  tempBigInt = tempBigInt >> 8; //@line 24559
  HEAP8[$43 + 3 | 0] = tempBigInt & 255; //@line 24559
  HEAP32[$da + 28 >> 2] = 1; //@line 24561
  $54 = ((HEAPU8[$src + 2 | 0] | 0) << 8 | (HEAPU8[$src + 3 | 0] | 0)) & 65535; //@line 24571
  _sprintf($da + 96 | 0, 47464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $54, tempInt) | 0) | 0; //@line 24572
  $56 = $da + 8 | 0; //@line 24573
  HEAP32[$56 >> 2] = (HEAP32[$56 >> 2] | 0) + 1; //@line 24576
  $59 = $da | 0; //@line 24577
  HEAP32[$59 >> 2] = HEAP32[$59 >> 2] | 80; //@line 24580
  STACKTOP = sp; //@line 24582
  return;
 } else if (($2 << 16 >> 16 | 0) == 20082) {
  $15 = $da + 32 | 0; //@line 24585
  HEAP8[$15] = HEAP8[51296] | 0; //@line 24586
  HEAP8[$15 + 1 | 0] = HEAP8[51297 | 0] | 0; //@line 24586
  HEAP8[$15 + 2 | 0] = HEAP8[51298 | 0] | 0; //@line 24586
  HEAP8[$15 + 3 | 0] = HEAP8[51299 | 0] | 0; //@line 24586
  HEAP8[$15 + 4 | 0] = HEAP8[51300 | 0] | 0; //@line 24586
  HEAP32[$da + 28 >> 2] = 1; //@line 24588
  $26 = ((HEAPU8[$src + 2 | 0] | 0) << 8 | (HEAPU8[$src + 3 | 0] | 0)) & 65535; //@line 24598
  _sprintf($da + 96 | 0, 47464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $26, tempInt) | 0) | 0; //@line 24599
  $28 = $da + 8 | 0; //@line 24600
  HEAP32[$28 >> 2] = (HEAP32[$28 >> 2] | 0) + 1; //@line 24603
  $31 = $da | 0; //@line 24604
  HEAP32[$31 >> 2] = HEAP32[$31 >> 2] | 1; //@line 24607
  STACKTOP = sp; //@line 24609
  return;
 } else {
  if (($3 & 48 | 0) == 0) {
   $190 = $da + 32 | 0; //@line 24616
   HEAP8[$190] = HEAP8[50944] | 0; //@line 24617
   HEAP8[$190 + 1 | 0] = HEAP8[50945 | 0] | 0; //@line 24617
   HEAP8[$190 + 2 | 0] = HEAP8[50946 | 0] | 0; //@line 24617
   HEAP8[$190 + 3 | 0] = HEAP8[50947 | 0] | 0; //@line 24617
   HEAP8[$190 + 4 | 0] = HEAP8[50948 | 0] | 0; //@line 24617
   HEAP32[$da + 28 >> 2] = 1; //@line 24619
   $192 = $da + 96 | 0; //@line 24620
   $193 = $3 & 15; //@line 24621
   _sprintf($192 | 0, 54856, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $193, tempInt) | 0) | 0; //@line 24622
   STACKTOP = sp; //@line 24624
   return;
  }
  $196 = $3 & 56; //@line 24627
  if (($196 | 0) == 24) {
   $218 = $da + 32 | 0; //@line 24629
   HEAP8[$218] = HEAP8[50848] | 0; //@line 24630
   HEAP8[$218 + 1 | 0] = HEAP8[50849 | 0] | 0; //@line 24630
   HEAP8[$218 + 2 | 0] = HEAP8[50850 | 0] | 0; //@line 24630
   HEAP8[$218 + 3 | 0] = HEAP8[50851 | 0] | 0; //@line 24630
   HEAP8[$218 + 4 | 0] = HEAP8[50852 | 0] | 0; //@line 24630
   HEAP32[$da + 28 >> 2] = 1; //@line 24632
   $220 = $da + 96 | 0; //@line 24633
   $221 = $3 & 7; //@line 24634
   _sprintf($220 | 0, 40696, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $221, tempInt) | 0) | 0; //@line 24635
   STACKTOP = sp; //@line 24637
   return;
  } else if (($196 | 0) == 32) {
   $224 = $da + 32 | 0; //@line 24640
   HEAP8[$224] = HEAP8[50792] | 0; //@line 24641
   HEAP8[$224 + 1 | 0] = HEAP8[50793 | 0] | 0; //@line 24641
   HEAP8[$224 + 2 | 0] = HEAP8[50794 | 0] | 0; //@line 24641
   HEAP8[$224 + 3 | 0] = HEAP8[50795 | 0] | 0; //@line 24641
   HEAP8[$224 + 4 | 0] = HEAP8[50796 | 0] | 0; //@line 24641
   HEAP32[$da + 28 >> 2] = 2; //@line 24643
   _sprintf($da + 96 | 0, 40696, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $3 & 7, tempInt) | 0) | 0; //@line 24646
   $230 = $da + 160 | 0; //@line 24648
   tempBigInt = 5264213; //@line 24649
   HEAP8[$230] = tempBigInt & 255; //@line 24649
   tempBigInt = tempBigInt >> 8; //@line 24649
   HEAP8[$230 + 1 | 0] = tempBigInt & 255; //@line 24649
   tempBigInt = tempBigInt >> 8; //@line 24649
   HEAP8[$230 + 2 | 0] = tempBigInt & 255; //@line 24649
   tempBigInt = tempBigInt >> 8; //@line 24649
   HEAP8[$230 + 3 | 0] = tempBigInt & 255; //@line 24649
   $231 = $da | 0; //@line 24650
   HEAP32[$231 >> 2] = HEAP32[$231 >> 2] | 1; //@line 24653
   STACKTOP = sp; //@line 24655
   return;
  } else if (($196 | 0) == 16) {
   $198 = $da + 32 | 0; //@line 24658
   HEAP8[$198] = HEAP8[50904] | 0; //@line 24659
   HEAP8[$198 + 1 | 0] = HEAP8[50905 | 0] | 0; //@line 24659
   HEAP8[$198 + 2 | 0] = HEAP8[50906 | 0] | 0; //@line 24659
   HEAP8[$198 + 3 | 0] = HEAP8[50907 | 0] | 0; //@line 24659
   HEAP8[$198 + 4 | 0] = HEAP8[50908 | 0] | 0; //@line 24659
   HEAP32[$da + 28 >> 2] = 2; //@line 24661
   _sprintf($da + 96 | 0, 40696, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $3 & 7, tempInt) | 0) | 0; //@line 24664
   $212 = ((HEAPU8[$src + 2 | 0] | 0) << 8 | (HEAPU8[$src + 3 | 0] | 0)) & 65535; //@line 24674
   _sprintf($da + 160 | 0, 47464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $212, tempInt) | 0) | 0; //@line 24675
   $214 = $da + 8 | 0; //@line 24676
   HEAP32[$214 >> 2] = (HEAP32[$214 >> 2] | 0) + 1; //@line 24679
   STACKTOP = sp; //@line 24681
   return;
  } else if (($196 | 0) == 40) {
   $235 = $da + 32 | 0; //@line 24684
   HEAP8[$235] = HEAP8[50792] | 0; //@line 24685
   HEAP8[$235 + 1 | 0] = HEAP8[50793 | 0] | 0; //@line 24685
   HEAP8[$235 + 2 | 0] = HEAP8[50794 | 0] | 0; //@line 24685
   HEAP8[$235 + 3 | 0] = HEAP8[50795 | 0] | 0; //@line 24685
   HEAP8[$235 + 4 | 0] = HEAP8[50796 | 0] | 0; //@line 24685
   HEAP32[$da + 28 >> 2] = 2; //@line 24687
   $238 = $da + 96 | 0; //@line 24689
   tempBigInt = 5264213; //@line 24690
   HEAP8[$238] = tempBigInt & 255; //@line 24690
   tempBigInt = tempBigInt >> 8; //@line 24690
   HEAP8[$238 + 1 | 0] = tempBigInt & 255; //@line 24690
   tempBigInt = tempBigInt >> 8; //@line 24690
   HEAP8[$238 + 2 | 0] = tempBigInt & 255; //@line 24690
   tempBigInt = tempBigInt >> 8; //@line 24690
   HEAP8[$238 + 3 | 0] = tempBigInt & 255; //@line 24690
   _sprintf($da + 160 | 0, 40696, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $3 & 7, tempInt) | 0) | 0; //@line 24693
   $242 = $da | 0; //@line 24694
   HEAP32[$242 >> 2] = HEAP32[$242 >> 2] | 1; //@line 24697
   STACKTOP = sp; //@line 24699
   return;
  } else {
   $246 = $da + 32 | 0; //@line 24702
   HEAP8[$246] = HEAP8[36120] | 0; //@line 24703
   HEAP8[$246 + 1 | 0] = HEAP8[36121 | 0] | 0; //@line 24703
   HEAP8[$246 + 2 | 0] = HEAP8[36122 | 0] | 0; //@line 24703
   HEAP32[$da + 28 >> 2] = 1; //@line 24705
   $256 = ((HEAPU8[$src] | 0) << 8 | (HEAPU8[$src + 1 | 0] | 0)) & 65535; //@line 24714
   _sprintf($da + 96 | 0, 47464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $256, tempInt) | 0) | 0; //@line 24715
   STACKTOP = sp; //@line 24716
   return;
  }
 }
}
function _d_4e80($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $2 = 0, $9 = 0;
 $2 = $da + 32 | 0; //@line 24731
 tempBigInt = 5395274; //@line 24732
 HEAP8[$2] = tempBigInt & 255; //@line 24732
 tempBigInt = tempBigInt >> 8; //@line 24732
 HEAP8[$2 + 1 | 0] = tempBigInt & 255; //@line 24732
 tempBigInt = tempBigInt >> 8; //@line 24732
 HEAP8[$2 + 2 | 0] = tempBigInt & 255; //@line 24732
 tempBigInt = tempBigInt >> 8; //@line 24732
 HEAP8[$2 + 3 | 0] = tempBigInt & 255; //@line 24732
 HEAP32[$da + 28 >> 2] = 1; //@line 24734
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 0); //@line 24740
 $9 = $da | 0; //@line 24741
 HEAP32[$9 >> 2] = HEAP32[$9 >> 2] | 4; //@line 24744
 return;
}
function _d_5000($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $7 = 0, sp = 0;
 sp = STACKTOP; //@line 24756
 $1 = $da + 32 | 0; //@line 24757
 HEAP8[$1] = HEAP8[51448] | 0; //@line 24758
 HEAP8[$1 + 1 | 0] = HEAP8[51449 | 0] | 0; //@line 24758
 HEAP8[$1 + 2 | 0] = HEAP8[51450 | 0] | 0; //@line 24758
 HEAP8[$1 + 3 | 0] = HEAP8[51451 | 0] | 0; //@line 24758
 HEAP8[$1 + 4 | 0] = HEAP8[51452 | 0] | 0; //@line 24758
 HEAP8[$1 + 5 | 0] = HEAP8[51453 | 0] | 0; //@line 24758
 HEAP8[$1 + 6 | 0] = HEAP8[51454 | 0] | 0; //@line 24758
 HEAP32[$da + 28 >> 2] = 2; //@line 24760
 $7 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 24765
 _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $7 << 16 >> 16 == 0 ? 8 : $7 & 65535, tempInt) | 0) | 0; //@line 24769
 _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 24775
 STACKTOP = sp; //@line 24776
 return;
}
function _d_5040($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $7 = 0, sp = 0;
 sp = STACKTOP; //@line 24787
 $1 = $da + 32 | 0; //@line 24788
 HEAP8[$1] = HEAP8[51496] | 0; //@line 24789
 HEAP8[$1 + 1 | 0] = HEAP8[51497 | 0] | 0; //@line 24789
 HEAP8[$1 + 2 | 0] = HEAP8[51498 | 0] | 0; //@line 24789
 HEAP8[$1 + 3 | 0] = HEAP8[51499 | 0] | 0; //@line 24789
 HEAP8[$1 + 4 | 0] = HEAP8[51500 | 0] | 0; //@line 24789
 HEAP8[$1 + 5 | 0] = HEAP8[51501 | 0] | 0; //@line 24789
 HEAP8[$1 + 6 | 0] = HEAP8[51502 | 0] | 0; //@line 24789
 HEAP32[$da + 28 >> 2] = 2; //@line 24791
 $7 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 24796
 _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $7 << 16 >> 16 == 0 ? 8 : $7 & 65535, tempInt) | 0) | 0; //@line 24800
 _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 24806
 STACKTOP = sp; //@line 24807
 return;
}
function _d_5080($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $7 = 0, sp = 0;
 sp = STACKTOP; //@line 24818
 $1 = $da + 32 | 0; //@line 24819
 HEAP8[$1] = HEAP8[51520] | 0; //@line 24820
 HEAP8[$1 + 1 | 0] = HEAP8[51521 | 0] | 0; //@line 24820
 HEAP8[$1 + 2 | 0] = HEAP8[51522 | 0] | 0; //@line 24820
 HEAP8[$1 + 3 | 0] = HEAP8[51523 | 0] | 0; //@line 24820
 HEAP8[$1 + 4 | 0] = HEAP8[51524 | 0] | 0; //@line 24820
 HEAP8[$1 + 5 | 0] = HEAP8[51525 | 0] | 0; //@line 24820
 HEAP8[$1 + 6 | 0] = HEAP8[51526 | 0] | 0; //@line 24820
 HEAP32[$da + 28 >> 2] = 2; //@line 24822
 $7 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 24827
 _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $7 << 16 >> 16 == 0 ? 8 : $7 & 65535, tempInt) | 0) | 0; //@line 24831
 _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 24837
 STACKTOP = sp; //@line 24838
 return;
}
function _d_50c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $3 = 0, $5 = 0, $6 = 0, $9 = 0, $15 = 0, $16 = 0, $19 = 0, $28 = 0, $30 = 0, $33 = 0, $60 = 0, $62 = 0, $65 = 0, $74 = 0, $82 = 0, $83 = 0, $86 = 0, $89 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $102 = 0, $107 = 0, $112 = 0, $114 = 0, $119 = 0, $120 = 0, sp = 0;
 sp = STACKTOP; //@line 24862
 $1 = $da + 12 | 0; //@line 24863
 $3 = HEAPU16[$1 >> 1] | 0; //@line 24865
 $5 = $3 >>> 8 & 15; //@line 24867
 $6 = $3 & 63; //@line 24868
 if ($5 >>> 0 > 1) {
  $9 = $da | 0; //@line 24872
  HEAP32[$9 >> 2] = HEAP32[$9 >> 2] | 32; //@line 24875
 }
 if (($6 | 0) == 58) {
  $15 = HEAP32[7400 + ($5 << 2) >> 2] | 0; //@line 24880
  $16 = $da + 32 | 0; //@line 24881
  _strcpy($16 | 0, $15 | 0) | 0; //@line 24882
  HEAP32[$da + 28 >> 2] = 1; //@line 24884
  $19 = $da + 96 | 0; //@line 24885
  $28 = ((HEAPU8[$src + 2 | 0] | 0) << 8 | (HEAPU8[$src + 3 | 0] | 0)) & 65535; //@line 24894
  _sprintf($19 | 0, 47464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $28, tempInt) | 0) | 0; //@line 24895
  $30 = $da + 8 | 0; //@line 24896
  HEAP32[$30 >> 2] = (HEAP32[$30 >> 2] | 0) + 1; //@line 24899
  $33 = $da | 0; //@line 24900
  HEAP32[$33 >> 2] = HEAP32[$33 >> 2] | 128; //@line 24903
  STACKTOP = sp; //@line 24905
  return;
 } else if (($6 | 0) == 60) {
  _strcpy($da + 32 | 0, HEAP32[7400 + ($5 << 2) >> 2] | 0) | 0; //@line 24911
  HEAP32[$da + 28 >> 2] = 0; //@line 24913
  $74 = $da | 0; //@line 24914
  HEAP32[$74 >> 2] = HEAP32[$74 >> 2] | 128; //@line 24917
  STACKTOP = sp; //@line 24919
  return;
 } else if (($6 | 0) == 59) {
  _strcpy($da + 32 | 0, HEAP32[7400 + ($5 << 2) >> 2] | 0) | 0; //@line 24925
  HEAP32[$da + 28 >> 2] = 1; //@line 24927
  $60 = (((HEAPU8[$src + 2 | 0] | 0) << 8 | (HEAPU8[$src + 3 | 0] | 0)) << 8 | (HEAPU8[$src + 4 | 0] | 0)) << 8 | (HEAPU8[$src + 5 | 0] | 0); //@line 24946
  _sprintf($da + 96 | 0, 54072, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $60, tempInt) | 0) | 0; //@line 24947
  $62 = $da + 8 | 0; //@line 24948
  HEAP32[$62 >> 2] = (HEAP32[$62 >> 2] | 0) + 2; //@line 24951
  $65 = $da | 0; //@line 24952
  HEAP32[$65 >> 2] = HEAP32[$65 >> 2] | 128; //@line 24955
  STACKTOP = sp; //@line 24957
  return;
 } else {
  if (($3 & 56 | 0) == 8) {
   $82 = HEAP32[7528 + ($5 << 2) >> 2] | 0; //@line 24965
   $83 = $da + 32 | 0; //@line 24966
   _strcpy($83 | 0, $82 | 0) | 0; //@line 24967
   HEAP32[$da + 28 >> 2] = 2; //@line 24969
   $86 = $da + 96 | 0; //@line 24970
   $89 = HEAP16[$1 >> 1] & 7; //@line 24973
   _sprintf($86 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $89, tempInt) | 0) | 0; //@line 24974
   $91 = $da + 160 | 0; //@line 24975
   $92 = $da + 8 | 0; //@line 24976
   $93 = HEAP32[$92 >> 2] | 0; //@line 24977
   $94 = $93 << 1; //@line 24978
   $102 = (HEAPU8[$src + $94 | 0] | 0) << 8 | (HEAPU8[$src + ($94 | 1) | 0] | 0); //@line 24987
   HEAP32[$92 >> 2] = $93 + 1; //@line 24989
   $107 = $102 & 65535; //@line 24993
   $112 = (HEAP32[$da + 4 >> 2] | 0) + 2 + (($107 & 32768 | 0) != 0 ? $107 | -65536 : $107) | 0; //@line 24998
   _sprintf($91 | 0, 52704, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $112, tempInt) | 0) | 0; //@line 24999
   $114 = $da | 0; //@line 25000
   HEAP32[$114 >> 2] = HEAP32[$114 >> 2] | 2; //@line 25003
   STACKTOP = sp; //@line 25005
   return;
  } else {
   $119 = HEAP32[7464 + ($5 << 2) >> 2] | 0; //@line 25009
   $120 = $da + 32 | 0; //@line 25010
   _strcpy($120 | 0, $119 | 0) | 0; //@line 25011
   HEAP32[$da + 28 >> 2] = 1; //@line 25013
   _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 25019
   STACKTOP = sp; //@line 25020
   return;
  }
 }
}
function _d_5100($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $7 = 0, sp = 0;
 sp = STACKTOP; //@line 25033
 $1 = $da + 32 | 0; //@line 25034
 HEAP8[$1] = HEAP8[54896] | 0; //@line 25035
 HEAP8[$1 + 1 | 0] = HEAP8[54897 | 0] | 0; //@line 25035
 HEAP8[$1 + 2 | 0] = HEAP8[54898 | 0] | 0; //@line 25035
 HEAP8[$1 + 3 | 0] = HEAP8[54899 | 0] | 0; //@line 25035
 HEAP8[$1 + 4 | 0] = HEAP8[54900 | 0] | 0; //@line 25035
 HEAP8[$1 + 5 | 0] = HEAP8[54901 | 0] | 0; //@line 25035
 HEAP8[$1 + 6 | 0] = HEAP8[54902 | 0] | 0; //@line 25035
 HEAP32[$da + 28 >> 2] = 2; //@line 25037
 $7 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 25042
 _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $7 << 16 >> 16 == 0 ? 8 : $7 & 65535, tempInt) | 0) | 0; //@line 25046
 _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 25052
 STACKTOP = sp; //@line 25053
 return;
}
function _d_5140($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $7 = 0, sp = 0;
 sp = STACKTOP; //@line 25064
 $1 = $da + 32 | 0; //@line 25065
 HEAP8[$1] = HEAP8[54936] | 0; //@line 25066
 HEAP8[$1 + 1 | 0] = HEAP8[54937 | 0] | 0; //@line 25066
 HEAP8[$1 + 2 | 0] = HEAP8[54938 | 0] | 0; //@line 25066
 HEAP8[$1 + 3 | 0] = HEAP8[54939 | 0] | 0; //@line 25066
 HEAP8[$1 + 4 | 0] = HEAP8[54940 | 0] | 0; //@line 25066
 HEAP8[$1 + 5 | 0] = HEAP8[54941 | 0] | 0; //@line 25066
 HEAP8[$1 + 6 | 0] = HEAP8[54942 | 0] | 0; //@line 25066
 HEAP32[$da + 28 >> 2] = 2; //@line 25068
 $7 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 25073
 _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $7 << 16 >> 16 == 0 ? 8 : $7 & 65535, tempInt) | 0) | 0; //@line 25077
 _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 25083
 STACKTOP = sp; //@line 25084
 return;
}
function _d_5180($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $7 = 0, sp = 0;
 sp = STACKTOP; //@line 25095
 $1 = $da + 32 | 0; //@line 25096
 HEAP8[$1] = HEAP8[54968] | 0; //@line 25097
 HEAP8[$1 + 1 | 0] = HEAP8[54969 | 0] | 0; //@line 25097
 HEAP8[$1 + 2 | 0] = HEAP8[54970 | 0] | 0; //@line 25097
 HEAP8[$1 + 3 | 0] = HEAP8[54971 | 0] | 0; //@line 25097
 HEAP8[$1 + 4 | 0] = HEAP8[54972 | 0] | 0; //@line 25097
 HEAP8[$1 + 5 | 0] = HEAP8[54973 | 0] | 0; //@line 25097
 HEAP8[$1 + 6 | 0] = HEAP8[54974 | 0] | 0; //@line 25097
 HEAP32[$da + 28 >> 2] = 2; //@line 25099
 $7 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 25104
 _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $7 << 16 >> 16 == 0 ? 8 : $7 & 65535, tempInt) | 0) | 0; //@line 25108
 _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 25114
 STACKTOP = sp; //@line 25115
 return;
}
function _d_6000($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $5 = 0, $6 = 0, $7 = 0, $11 = 0, $12 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $26 = 0, $31 = 0, $36 = 0, $endptr19 = 0, $42 = 0, $45 = 0, $47 = 0, $48 = 0, $49 = 0, $67 = 0, $72 = 0, $endptr17 = 0, $74 = 0, $82 = 0, $87 = 0, $endptr = 0, $90 = 0, $91 = 0, $92 = 0, $storemerge_v = 0, $storemerge = 0, $93 = 0, $94 = 0, $storemerge20 = 0, sp = 0;
 sp = STACKTOP; //@line 25137
 $5 = (HEAPU16[$da + 12 >> 1] | 0) >>> 8 & 15; //@line 25142
 $6 = $src + 1 | 0; //@line 25143
 $7 = HEAP8[$6] | 0; //@line 25144
 if ($7 << 24 >> 24 == 0) {
  $11 = HEAP32[7592 + ($5 << 2) >> 2] | 0; //@line 25149
  $12 = $da + 32 | 0; //@line 25150
  _strcpy($12 | 0, $11 | 0) | 0; //@line 25151
  HEAP32[$da + 28 >> 2] = 1; //@line 25153
  $15 = $da + 96 | 0; //@line 25154
  $16 = $da + 8 | 0; //@line 25155
  $17 = HEAP32[$16 >> 2] | 0; //@line 25156
  $18 = $17 << 1; //@line 25157
  $26 = (HEAPU8[$src + $18 | 0] | 0) << 8 | (HEAPU8[$src + ($18 | 1) | 0] | 0); //@line 25166
  HEAP32[$16 >> 2] = $17 + 1; //@line 25168
  $31 = $26 & 65535; //@line 25172
  $36 = (HEAP32[$da + 4 >> 2] | 0) + 2 + (($31 & 32768 | 0) != 0 ? $31 | -65536 : $31) | 0; //@line 25177
  _sprintf($15 | 0, 52704, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $36, tempInt) | 0) | 0; //@line 25178
  $endptr19 = (_strlen($12 | 0) | 0) + ($da + 32) | 0; //@line 25180
  HEAP8[$endptr19] = HEAP8[45216] | 0; //@line 25181
  HEAP8[$endptr19 + 1 | 0] = HEAP8[45217 | 0] | 0; //@line 25181
  HEAP8[$endptr19 + 2 | 0] = HEAP8[45218 | 0] | 0; //@line 25181
  $90 = ($5 | 0) == 1; //@line 25183
  $91 = $da | 0; //@line 25184
  $92 = HEAP32[$91 >> 2] | 0; //@line 25185
  $storemerge_v = $90 ? 4 : 2; //@line 25186
  $storemerge = $92 | $storemerge_v; //@line 25187
  $93 = $5 >>> 0 > 1; //@line 25188
  $94 = $storemerge | 32; //@line 25189
  $storemerge20 = $93 ? $94 : $storemerge; //@line 25190
  HEAP32[$91 >> 2] = $storemerge20; //@line 25191
  STACKTOP = sp; //@line 25192
  return;
 }
 $42 = $da + 32 | 0; //@line 25198
 _strcpy($42 | 0, HEAP32[7592 + ($5 << 2) >> 2] | 0) | 0; //@line 25199
 HEAP32[$da + 28 >> 2] = 1; //@line 25201
 $45 = $da + 96 | 0; //@line 25202
 if ($7 << 24 >> 24 == -1) {
  $47 = $da + 8 | 0; //@line 25205
  $48 = HEAP32[$47 >> 2] | 0; //@line 25206
  $49 = $48 << 1; //@line 25207
  $67 = (((HEAPU8[$src + $49 | 0] | 0) << 8 | (HEAPU8[$src + ($49 | 1) | 0] | 0)) << 8 | (HEAPU8[$src + ($49 + 2) | 0] | 0)) << 8 | (HEAPU8[$src + ($49 + 3) | 0] | 0); //@line 25228
  HEAP32[$47 >> 2] = $48 + 2; //@line 25230
  $72 = (HEAP32[$da + 4 >> 2] | 0) + 2 + $67 | 0; //@line 25234
  _sprintf($45 | 0, 52704, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $72, tempInt) | 0) | 0; //@line 25235
  $endptr17 = (_strlen($42 | 0) | 0) + ($da + 32) | 0; //@line 25237
  HEAP8[$endptr17] = HEAP8[45520] | 0; //@line 25238
  HEAP8[$endptr17 + 1 | 0] = HEAP8[45521 | 0] | 0; //@line 25238
  HEAP8[$endptr17 + 2 | 0] = HEAP8[45522 | 0] | 0; //@line 25238
  $74 = $da | 0; //@line 25239
  HEAP32[$74 >> 2] = HEAP32[$74 >> 2] | 128; //@line 25242
  $90 = ($5 | 0) == 1; //@line 25244
  $91 = $da | 0; //@line 25245
  $92 = HEAP32[$91 >> 2] | 0; //@line 25246
  $storemerge_v = $90 ? 4 : 2; //@line 25247
  $storemerge = $92 | $storemerge_v; //@line 25248
  $93 = $5 >>> 0 > 1; //@line 25249
  $94 = $storemerge | 32; //@line 25250
  $storemerge20 = $93 ? $94 : $storemerge; //@line 25251
  HEAP32[$91 >> 2] = $storemerge20; //@line 25252
  STACKTOP = sp; //@line 25253
  return;
 } else {
  $82 = HEAPU8[$6] | 0; //@line 25260
  $87 = (HEAP32[$da + 4 >> 2] | 0) + 2 + (($82 & 128 | 0) != 0 ? $82 | -256 : $82) | 0; //@line 25265
  _sprintf($45 | 0, 52704, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $87, tempInt) | 0) | 0; //@line 25266
  $endptr = (_strlen($42 | 0) | 0) + ($da + 32) | 0; //@line 25268
  HEAP8[$endptr] = HEAP8[56272] | 0; //@line 25269
  HEAP8[$endptr + 1 | 0] = HEAP8[56273 | 0] | 0; //@line 25269
  HEAP8[$endptr + 2 | 0] = HEAP8[56274 | 0] | 0; //@line 25269
  $90 = ($5 | 0) == 1; //@line 25270
  $91 = $da | 0; //@line 25271
  $92 = HEAP32[$91 >> 2] | 0; //@line 25272
  $storemerge_v = $90 ? 4 : 2; //@line 25273
  $storemerge = $92 | $storemerge_v; //@line 25274
  $93 = $5 >>> 0 > 1; //@line 25275
  $94 = $storemerge | 32; //@line 25276
  $storemerge20 = $93 ? $94 : $storemerge; //@line 25277
  HEAP32[$91 >> 2] = $storemerge20; //@line 25278
  STACKTOP = sp; //@line 25279
  return;
 }
}
function _d_7000($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $6 = 0, sp = 0;
 sp = STACKTOP; //@line 25292
 $1 = $da + 32 | 0; //@line 25293
 HEAP8[$1] = HEAP8[56440] | 0; //@line 25294
 HEAP8[$1 + 1 | 0] = HEAP8[56441 | 0] | 0; //@line 25294
 HEAP8[$1 + 2 | 0] = HEAP8[56442 | 0] | 0; //@line 25294
 HEAP8[$1 + 3 | 0] = HEAP8[56443 | 0] | 0; //@line 25294
 HEAP8[$1 + 4 | 0] = HEAP8[56444 | 0] | 0; //@line 25294
 HEAP8[$1 + 5 | 0] = HEAP8[56445 | 0] | 0; //@line 25294
 HEAP32[$da + 28 >> 2] = 2; //@line 25296
 $6 = HEAPU16[$da + 12 >> 1] | 0; //@line 25300
 _sprintf($da + 96 | 0, 54072, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = ($6 & 128 | 0) != 0 ? $6 | -256 : $6 & 255, tempInt) | 0) | 0; //@line 25306
 _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 25312
 STACKTOP = sp; //@line 25313
 return;
}
function _d_8000($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP; //@line 25324
 $1 = $da + 32 | 0; //@line 25325
 HEAP8[$1] = HEAP8[56680] | 0; //@line 25326
 HEAP8[$1 + 1 | 0] = HEAP8[56681 | 0] | 0; //@line 25326
 HEAP8[$1 + 2 | 0] = HEAP8[56682 | 0] | 0; //@line 25326
 HEAP8[$1 + 3 | 0] = HEAP8[56683 | 0] | 0; //@line 25326
 HEAP8[$1 + 4 | 0] = HEAP8[56684 | 0] | 0; //@line 25326
 HEAP32[$da + 28 >> 2] = 2; //@line 25328
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 25334
 _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 25340
 STACKTOP = sp; //@line 25341
 return;
}
function _d_8040($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP; //@line 25352
 $1 = $da + 32 | 0; //@line 25353
 HEAP8[$1] = HEAP8[56936] | 0; //@line 25354
 HEAP8[$1 + 1 | 0] = HEAP8[56937 | 0] | 0; //@line 25354
 HEAP8[$1 + 2 | 0] = HEAP8[56938 | 0] | 0; //@line 25354
 HEAP8[$1 + 3 | 0] = HEAP8[56939 | 0] | 0; //@line 25354
 HEAP8[$1 + 4 | 0] = HEAP8[56940 | 0] | 0; //@line 25354
 HEAP32[$da + 28 >> 2] = 2; //@line 25356
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 25362
 _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 25368
 STACKTOP = sp; //@line 25369
 return;
}
function _d_8080($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP; //@line 25380
 $1 = $da + 32 | 0; //@line 25381
 HEAP8[$1] = HEAP8[57152] | 0; //@line 25382
 HEAP8[$1 + 1 | 0] = HEAP8[57153 | 0] | 0; //@line 25382
 HEAP8[$1 + 2 | 0] = HEAP8[57154 | 0] | 0; //@line 25382
 HEAP8[$1 + 3 | 0] = HEAP8[57155 | 0] | 0; //@line 25382
 HEAP8[$1 + 4 | 0] = HEAP8[57156 | 0] | 0; //@line 25382
 HEAP32[$da + 28 >> 2] = 2; //@line 25384
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 25390
 _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 25396
 STACKTOP = sp; //@line 25397
 return;
}
function _d_80c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP; //@line 25408
 $1 = $da + 32 | 0; //@line 25409
 HEAP8[$1] = HEAP8[56608] | 0; //@line 25410
 HEAP8[$1 + 1 | 0] = HEAP8[56609 | 0] | 0; //@line 25410
 HEAP8[$1 + 2 | 0] = HEAP8[56610 | 0] | 0; //@line 25410
 HEAP8[$1 + 3 | 0] = HEAP8[56611 | 0] | 0; //@line 25410
 HEAP8[$1 + 4 | 0] = HEAP8[56612 | 0] | 0; //@line 25410
 HEAP8[$1 + 5 | 0] = HEAP8[56613 | 0] | 0; //@line 25410
 HEAP8[$1 + 6 | 0] = HEAP8[56614 | 0] | 0; //@line 25410
 HEAP32[$da + 28 >> 2] = 2; //@line 25412
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 25418
 _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 25424
 STACKTOP = sp; //@line 25425
 return;
}
function _d_8100($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $3 = 0, $5 = 0, $7 = 0, $9 = 0, $10 = 0, $12 = 0, $16 = 0, $18 = 0, $22 = 0, $33 = 0, $37 = 0, sp = 0;
 sp = STACKTOP; //@line 25440
 $1 = $da + 12 | 0; //@line 25441
 $3 = HEAPU16[$1 >> 1] | 0; //@line 25443
 $5 = $3 >>> 3 & 7; //@line 25445
 if (($5 | 0) == 0) {
  $7 = $da + 32 | 0; //@line 25447
  HEAP8[$7] = HEAP8[56856] | 0; //@line 25448
  HEAP8[$7 + 1 | 0] = HEAP8[56857 | 0] | 0; //@line 25448
  HEAP8[$7 + 2 | 0] = HEAP8[56858 | 0] | 0; //@line 25448
  HEAP8[$7 + 3 | 0] = HEAP8[56859 | 0] | 0; //@line 25448
  HEAP8[$7 + 4 | 0] = HEAP8[56860 | 0] | 0; //@line 25448
  HEAP8[$7 + 5 | 0] = HEAP8[56861 | 0] | 0; //@line 25448
  HEAP8[$7 + 6 | 0] = HEAP8[56862 | 0] | 0; //@line 25448
  HEAP32[$da + 28 >> 2] = 2; //@line 25450
  $9 = $da + 96 | 0; //@line 25451
  $10 = $3 & 7; //@line 25452
  _sprintf($9 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $10, tempInt) | 0) | 0; //@line 25453
  $12 = $da + 160 | 0; //@line 25454
  $16 = (HEAPU8[$src] | 0) >>> 1 & 7; //@line 25458
  _sprintf($12 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $16, tempInt) | 0) | 0; //@line 25459
  $18 = $da | 0; //@line 25460
  HEAP32[$18 >> 2] = HEAP32[$18 >> 2] | 32; //@line 25463
  STACKTOP = sp; //@line 25465
  return;
 } else if (($5 | 0) == 1) {
  $22 = $da + 32 | 0; //@line 25468
  HEAP8[$22] = HEAP8[56856] | 0; //@line 25469
  HEAP8[$22 + 1 | 0] = HEAP8[56857 | 0] | 0; //@line 25469
  HEAP8[$22 + 2 | 0] = HEAP8[56858 | 0] | 0; //@line 25469
  HEAP8[$22 + 3 | 0] = HEAP8[56859 | 0] | 0; //@line 25469
  HEAP8[$22 + 4 | 0] = HEAP8[56860 | 0] | 0; //@line 25469
  HEAP8[$22 + 5 | 0] = HEAP8[56861 | 0] | 0; //@line 25469
  HEAP8[$22 + 6 | 0] = HEAP8[56862 | 0] | 0; //@line 25469
  HEAP32[$da + 28 >> 2] = 2; //@line 25471
  _sprintf($da + 96 | 0, 30264, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $3 & 7, tempInt) | 0) | 0; //@line 25474
  _sprintf($da + 160 | 0, 30264, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU16[$1 >> 1] | 0) >>> 9 & 7, tempInt) | 0) | 0; //@line 25480
  $33 = $da | 0; //@line 25481
  HEAP32[$33 >> 2] = HEAP32[$33 >> 2] | 32; //@line 25484
  STACKTOP = sp; //@line 25486
  return;
 } else {
  $37 = $da + 32 | 0; //@line 25489
  HEAP8[$37] = HEAP8[56680] | 0; //@line 25490
  HEAP8[$37 + 1 | 0] = HEAP8[56681 | 0] | 0; //@line 25490
  HEAP8[$37 + 2 | 0] = HEAP8[56682 | 0] | 0; //@line 25490
  HEAP8[$37 + 3 | 0] = HEAP8[56683 | 0] | 0; //@line 25490
  HEAP8[$37 + 4 | 0] = HEAP8[56684 | 0] | 0; //@line 25490
  HEAP32[$da + 28 >> 2] = 2; //@line 25492
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 25498
  _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 25504
  STACKTOP = sp; //@line 25506
  return;
 }
}
function _d_8140($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $5 = 0, $8 = 0, $16 = 0, $20 = 0, $24 = 0, sp = 0;
 sp = STACKTOP; //@line 25520
 $5 = $da + 32 | 0; //@line 25526
 if ((HEAP16[$da + 12 >> 1] & 48) >>> 0 < 16) {
  HEAP8[$5] = HEAP8[36120] | 0; //@line 25529
  HEAP8[$5 + 1 | 0] = HEAP8[36121 | 0] | 0; //@line 25529
  HEAP8[$5 + 2 | 0] = HEAP8[36122 | 0] | 0; //@line 25529
  HEAP32[$da + 28 >> 2] = 1; //@line 25531
  $8 = $da + 96 | 0; //@line 25532
  $16 = ((HEAPU8[$src] | 0) << 8 | (HEAPU8[$src + 1 | 0] | 0)) & 65535; //@line 25540
  _sprintf($8 | 0, 47464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $16, tempInt) | 0) | 0; //@line 25541
  STACKTOP = sp; //@line 25543
  return;
 } else {
  HEAP8[$5] = HEAP8[56936] | 0; //@line 25546
  HEAP8[$5 + 1 | 0] = HEAP8[56937 | 0] | 0; //@line 25546
  HEAP8[$5 + 2 | 0] = HEAP8[56938 | 0] | 0; //@line 25546
  HEAP8[$5 + 3 | 0] = HEAP8[56939 | 0] | 0; //@line 25546
  HEAP8[$5 + 4 | 0] = HEAP8[56940 | 0] | 0; //@line 25546
  HEAP32[$da + 28 >> 2] = 2; //@line 25548
  $20 = $da + 96 | 0; //@line 25549
  $24 = (HEAPU8[$src] | 0) >>> 1 & 7; //@line 25553
  _sprintf($20 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $24, tempInt) | 0) | 0; //@line 25554
  _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 25560
  STACKTOP = sp; //@line 25562
  return;
 }
}
function _d_8180($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $5 = 0, $8 = 0, $16 = 0, $20 = 0, $24 = 0, sp = 0;
 sp = STACKTOP; //@line 25576
 $5 = $da + 32 | 0; //@line 25582
 if ((HEAP16[$da + 12 >> 1] & 48) >>> 0 < 16) {
  HEAP8[$5] = HEAP8[36120] | 0; //@line 25585
  HEAP8[$5 + 1 | 0] = HEAP8[36121 | 0] | 0; //@line 25585
  HEAP8[$5 + 2 | 0] = HEAP8[36122 | 0] | 0; //@line 25585
  HEAP32[$da + 28 >> 2] = 1; //@line 25587
  $8 = $da + 96 | 0; //@line 25588
  $16 = ((HEAPU8[$src] | 0) << 8 | (HEAPU8[$src + 1 | 0] | 0)) & 65535; //@line 25596
  _sprintf($8 | 0, 47464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $16, tempInt) | 0) | 0; //@line 25597
  STACKTOP = sp; //@line 25599
  return;
 } else {
  HEAP8[$5] = HEAP8[57152] | 0; //@line 25602
  HEAP8[$5 + 1 | 0] = HEAP8[57153 | 0] | 0; //@line 25602
  HEAP8[$5 + 2 | 0] = HEAP8[57154 | 0] | 0; //@line 25602
  HEAP8[$5 + 3 | 0] = HEAP8[57155 | 0] | 0; //@line 25602
  HEAP8[$5 + 4 | 0] = HEAP8[57156 | 0] | 0; //@line 25602
  HEAP32[$da + 28 >> 2] = 2; //@line 25604
  $20 = $da + 96 | 0; //@line 25605
  $24 = (HEAPU8[$src] | 0) >>> 1 & 7; //@line 25609
  _sprintf($20 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $24, tempInt) | 0) | 0; //@line 25610
  _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 25616
  STACKTOP = sp; //@line 25618
  return;
 }
}
function _d_81c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP; //@line 25630
 $1 = $da + 32 | 0; //@line 25631
 HEAP8[$1] = HEAP8[57296] | 0; //@line 25632
 HEAP8[$1 + 1 | 0] = HEAP8[57297 | 0] | 0; //@line 25632
 HEAP8[$1 + 2 | 0] = HEAP8[57298 | 0] | 0; //@line 25632
 HEAP8[$1 + 3 | 0] = HEAP8[57299 | 0] | 0; //@line 25632
 HEAP8[$1 + 4 | 0] = HEAP8[57300 | 0] | 0; //@line 25632
 HEAP8[$1 + 5 | 0] = HEAP8[57301 | 0] | 0; //@line 25632
 HEAP8[$1 + 6 | 0] = HEAP8[57302 | 0] | 0; //@line 25632
 HEAP32[$da + 28 >> 2] = 2; //@line 25634
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 25640
 _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 25646
 STACKTOP = sp; //@line 25647
 return;
}
function _d_9000($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP; //@line 25658
 $1 = $da + 32 | 0; //@line 25659
 HEAP8[$1] = HEAP8[57408] | 0; //@line 25660
 HEAP8[$1 + 1 | 0] = HEAP8[57409 | 0] | 0; //@line 25660
 HEAP8[$1 + 2 | 0] = HEAP8[57410 | 0] | 0; //@line 25660
 HEAP8[$1 + 3 | 0] = HEAP8[57411 | 0] | 0; //@line 25660
 HEAP8[$1 + 4 | 0] = HEAP8[57412 | 0] | 0; //@line 25660
 HEAP8[$1 + 5 | 0] = HEAP8[57413 | 0] | 0; //@line 25660
 HEAP32[$da + 28 >> 2] = 2; //@line 25662
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 25668
 _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 25674
 STACKTOP = sp; //@line 25675
 return;
}
function _d_9040($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP; //@line 25686
 $1 = $da + 32 | 0; //@line 25687
 HEAP8[$1] = HEAP8[57512] | 0; //@line 25688
 HEAP8[$1 + 1 | 0] = HEAP8[57513 | 0] | 0; //@line 25688
 HEAP8[$1 + 2 | 0] = HEAP8[57514 | 0] | 0; //@line 25688
 HEAP8[$1 + 3 | 0] = HEAP8[57515 | 0] | 0; //@line 25688
 HEAP8[$1 + 4 | 0] = HEAP8[57516 | 0] | 0; //@line 25688
 HEAP8[$1 + 5 | 0] = HEAP8[57517 | 0] | 0; //@line 25688
 HEAP32[$da + 28 >> 2] = 2; //@line 25690
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 25696
 _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 25702
 STACKTOP = sp; //@line 25703
 return;
}
function _d_9080($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP; //@line 25714
 $1 = $da + 32 | 0; //@line 25715
 HEAP8[$1] = HEAP8[57600] | 0; //@line 25716
 HEAP8[$1 + 1 | 0] = HEAP8[57601 | 0] | 0; //@line 25716
 HEAP8[$1 + 2 | 0] = HEAP8[57602 | 0] | 0; //@line 25716
 HEAP8[$1 + 3 | 0] = HEAP8[57603 | 0] | 0; //@line 25716
 HEAP8[$1 + 4 | 0] = HEAP8[57604 | 0] | 0; //@line 25716
 HEAP8[$1 + 5 | 0] = HEAP8[57605 | 0] | 0; //@line 25716
 HEAP32[$da + 28 >> 2] = 2; //@line 25718
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 25724
 _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 25730
 STACKTOP = sp; //@line 25731
 return;
}
function _d_90c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP; //@line 25742
 $1 = $da + 32 | 0; //@line 25743
 HEAP8[$1] = HEAP8[57360] | 0; //@line 25744
 HEAP8[$1 + 1 | 0] = HEAP8[57361 | 0] | 0; //@line 25744
 HEAP8[$1 + 2 | 0] = HEAP8[57362 | 0] | 0; //@line 25744
 HEAP8[$1 + 3 | 0] = HEAP8[57363 | 0] | 0; //@line 25744
 HEAP8[$1 + 4 | 0] = HEAP8[57364 | 0] | 0; //@line 25744
 HEAP8[$1 + 5 | 0] = HEAP8[57365 | 0] | 0; //@line 25744
 HEAP8[$1 + 6 | 0] = HEAP8[57366 | 0] | 0; //@line 25744
 HEAP32[$da + 28 >> 2] = 2; //@line 25746
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 25752
 _sprintf($da + 160 | 0, 40696, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 25758
 STACKTOP = sp; //@line 25759
 return;
}
function _d_9100($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $3 = 0, $5 = 0, $7 = 0, $18 = 0, $22 = 0, $24 = 0, $25 = 0, $27 = 0, $31 = 0, $33 = 0, $37 = 0, sp = 0;
 sp = STACKTOP; //@line 25774
 $1 = $da + 12 | 0; //@line 25775
 $3 = HEAPU16[$1 >> 1] | 0; //@line 25777
 $5 = $3 >>> 3 & 7; //@line 25779
 if (($5 | 0) == 1) {
  $22 = $da + 32 | 0; //@line 25781
  HEAP8[$22] = HEAP8[57448] | 0; //@line 25782
  HEAP8[$22 + 1 | 0] = HEAP8[57449 | 0] | 0; //@line 25782
  HEAP8[$22 + 2 | 0] = HEAP8[57450 | 0] | 0; //@line 25782
  HEAP8[$22 + 3 | 0] = HEAP8[57451 | 0] | 0; //@line 25782
  HEAP8[$22 + 4 | 0] = HEAP8[57452 | 0] | 0; //@line 25782
  HEAP8[$22 + 5 | 0] = HEAP8[57453 | 0] | 0; //@line 25782
  HEAP8[$22 + 6 | 0] = HEAP8[57454 | 0] | 0; //@line 25782
  HEAP32[$da + 28 >> 2] = 2; //@line 25784
  $24 = $da + 96 | 0; //@line 25785
  $25 = $3 & 7; //@line 25786
  _sprintf($24 | 0, 30264, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $25, tempInt) | 0) | 0; //@line 25787
  $27 = $da + 160 | 0; //@line 25788
  $31 = (HEAPU16[$1 >> 1] | 0) >>> 9 & 7; //@line 25792
  _sprintf($27 | 0, 30264, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $31, tempInt) | 0) | 0; //@line 25793
  $33 = $da | 0; //@line 25794
  HEAP32[$33 >> 2] = HEAP32[$33 >> 2] | 32; //@line 25797
  STACKTOP = sp; //@line 25799
  return;
 } else if (($5 | 0) == 0) {
  $7 = $da + 32 | 0; //@line 25802
  HEAP8[$7] = HEAP8[57448] | 0; //@line 25803
  HEAP8[$7 + 1 | 0] = HEAP8[57449 | 0] | 0; //@line 25803
  HEAP8[$7 + 2 | 0] = HEAP8[57450 | 0] | 0; //@line 25803
  HEAP8[$7 + 3 | 0] = HEAP8[57451 | 0] | 0; //@line 25803
  HEAP8[$7 + 4 | 0] = HEAP8[57452 | 0] | 0; //@line 25803
  HEAP8[$7 + 5 | 0] = HEAP8[57453 | 0] | 0; //@line 25803
  HEAP8[$7 + 6 | 0] = HEAP8[57454 | 0] | 0; //@line 25803
  HEAP32[$da + 28 >> 2] = 2; //@line 25805
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $3 & 7, tempInt) | 0) | 0; //@line 25808
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 25814
  $18 = $da | 0; //@line 25815
  HEAP32[$18 >> 2] = HEAP32[$18 >> 2] | 32; //@line 25818
  STACKTOP = sp; //@line 25820
  return;
 } else {
  $37 = $da + 32 | 0; //@line 25823
  HEAP8[$37] = HEAP8[57408] | 0; //@line 25824
  HEAP8[$37 + 1 | 0] = HEAP8[57409 | 0] | 0; //@line 25824
  HEAP8[$37 + 2 | 0] = HEAP8[57410 | 0] | 0; //@line 25824
  HEAP8[$37 + 3 | 0] = HEAP8[57411 | 0] | 0; //@line 25824
  HEAP8[$37 + 4 | 0] = HEAP8[57412 | 0] | 0; //@line 25824
  HEAP8[$37 + 5 | 0] = HEAP8[57413 | 0] | 0; //@line 25824
  HEAP32[$da + 28 >> 2] = 2; //@line 25826
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 25832
  _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 25838
  STACKTOP = sp; //@line 25840
  return;
 }
}
function _d_9140($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $3 = 0, $5 = 0, $7 = 0, $9 = 0, $10 = 0, $12 = 0, $16 = 0, $18 = 0, $22 = 0, $33 = 0, $37 = 0, sp = 0;
 sp = STACKTOP; //@line 25856
 $1 = $da + 12 | 0; //@line 25857
 $3 = HEAPU16[$1 >> 1] | 0; //@line 25859
 $5 = $3 >>> 3 & 7; //@line 25861
 if (($5 | 0) == 0) {
  $7 = $da + 32 | 0; //@line 25863
  HEAP8[$7] = HEAP8[57560] | 0; //@line 25864
  HEAP8[$7 + 1 | 0] = HEAP8[57561 | 0] | 0; //@line 25864
  HEAP8[$7 + 2 | 0] = HEAP8[57562 | 0] | 0; //@line 25864
  HEAP8[$7 + 3 | 0] = HEAP8[57563 | 0] | 0; //@line 25864
  HEAP8[$7 + 4 | 0] = HEAP8[57564 | 0] | 0; //@line 25864
  HEAP8[$7 + 5 | 0] = HEAP8[57565 | 0] | 0; //@line 25864
  HEAP8[$7 + 6 | 0] = HEAP8[57566 | 0] | 0; //@line 25864
  HEAP32[$da + 28 >> 2] = 2; //@line 25866
  $9 = $da + 96 | 0; //@line 25867
  $10 = $3 & 7; //@line 25868
  _sprintf($9 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $10, tempInt) | 0) | 0; //@line 25869
  $12 = $da + 160 | 0; //@line 25870
  $16 = (HEAPU8[$src] | 0) >>> 1 & 7; //@line 25874
  _sprintf($12 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $16, tempInt) | 0) | 0; //@line 25875
  $18 = $da | 0; //@line 25876
  HEAP32[$18 >> 2] = HEAP32[$18 >> 2] | 32; //@line 25879
  STACKTOP = sp; //@line 25881
  return;
 } else if (($5 | 0) == 1) {
  $22 = $da + 32 | 0; //@line 25884
  HEAP8[$22] = HEAP8[57560] | 0; //@line 25885
  HEAP8[$22 + 1 | 0] = HEAP8[57561 | 0] | 0; //@line 25885
  HEAP8[$22 + 2 | 0] = HEAP8[57562 | 0] | 0; //@line 25885
  HEAP8[$22 + 3 | 0] = HEAP8[57563 | 0] | 0; //@line 25885
  HEAP8[$22 + 4 | 0] = HEAP8[57564 | 0] | 0; //@line 25885
  HEAP8[$22 + 5 | 0] = HEAP8[57565 | 0] | 0; //@line 25885
  HEAP8[$22 + 6 | 0] = HEAP8[57566 | 0] | 0; //@line 25885
  HEAP32[$da + 28 >> 2] = 2; //@line 25887
  _sprintf($da + 96 | 0, 30264, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $3 & 7, tempInt) | 0) | 0; //@line 25890
  _sprintf($da + 160 | 0, 30264, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU16[$1 >> 1] | 0) >>> 9 & 7, tempInt) | 0) | 0; //@line 25896
  $33 = $da | 0; //@line 25897
  HEAP32[$33 >> 2] = HEAP32[$33 >> 2] | 32; //@line 25900
  STACKTOP = sp; //@line 25902
  return;
 } else {
  $37 = $da + 32 | 0; //@line 25905
  HEAP8[$37] = HEAP8[57512] | 0; //@line 25906
  HEAP8[$37 + 1 | 0] = HEAP8[57513 | 0] | 0; //@line 25906
  HEAP8[$37 + 2 | 0] = HEAP8[57514 | 0] | 0; //@line 25906
  HEAP8[$37 + 3 | 0] = HEAP8[57515 | 0] | 0; //@line 25906
  HEAP8[$37 + 4 | 0] = HEAP8[57516 | 0] | 0; //@line 25906
  HEAP8[$37 + 5 | 0] = HEAP8[57517 | 0] | 0; //@line 25906
  HEAP32[$da + 28 >> 2] = 2; //@line 25908
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 25914
  _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 25920
  STACKTOP = sp; //@line 25922
  return;
 }
}
function _d_9180($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $3 = 0, $5 = 0, $7 = 0, $18 = 0, $22 = 0, $24 = 0, $25 = 0, $27 = 0, $31 = 0, $33 = 0, $37 = 0, sp = 0;
 sp = STACKTOP; //@line 25938
 $1 = $da + 12 | 0; //@line 25939
 $3 = HEAPU16[$1 >> 1] | 0; //@line 25941
 $5 = $3 >>> 3 & 7; //@line 25943
 if (($5 | 0) == 1) {
  $22 = $da + 32 | 0; //@line 25945
  HEAP8[$22] = HEAP8[57696] | 0; //@line 25946
  HEAP8[$22 + 1 | 0] = HEAP8[57697 | 0] | 0; //@line 25946
  HEAP8[$22 + 2 | 0] = HEAP8[57698 | 0] | 0; //@line 25946
  HEAP8[$22 + 3 | 0] = HEAP8[57699 | 0] | 0; //@line 25946
  HEAP8[$22 + 4 | 0] = HEAP8[57700 | 0] | 0; //@line 25946
  HEAP8[$22 + 5 | 0] = HEAP8[57701 | 0] | 0; //@line 25946
  HEAP8[$22 + 6 | 0] = HEAP8[57702 | 0] | 0; //@line 25946
  HEAP32[$da + 28 >> 2] = 2; //@line 25948
  $24 = $da + 96 | 0; //@line 25949
  $25 = $3 & 7; //@line 25950
  _sprintf($24 | 0, 30264, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $25, tempInt) | 0) | 0; //@line 25951
  $27 = $da + 160 | 0; //@line 25952
  $31 = (HEAPU16[$1 >> 1] | 0) >>> 9 & 7; //@line 25956
  _sprintf($27 | 0, 30264, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $31, tempInt) | 0) | 0; //@line 25957
  $33 = $da | 0; //@line 25958
  HEAP32[$33 >> 2] = HEAP32[$33 >> 2] | 32; //@line 25961
  STACKTOP = sp; //@line 25963
  return;
 } else if (($5 | 0) == 0) {
  $7 = $da + 32 | 0; //@line 25966
  HEAP8[$7] = HEAP8[57696] | 0; //@line 25967
  HEAP8[$7 + 1 | 0] = HEAP8[57697 | 0] | 0; //@line 25967
  HEAP8[$7 + 2 | 0] = HEAP8[57698 | 0] | 0; //@line 25967
  HEAP8[$7 + 3 | 0] = HEAP8[57699 | 0] | 0; //@line 25967
  HEAP8[$7 + 4 | 0] = HEAP8[57700 | 0] | 0; //@line 25967
  HEAP8[$7 + 5 | 0] = HEAP8[57701 | 0] | 0; //@line 25967
  HEAP8[$7 + 6 | 0] = HEAP8[57702 | 0] | 0; //@line 25967
  HEAP32[$da + 28 >> 2] = 2; //@line 25969
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $3 & 7, tempInt) | 0) | 0; //@line 25972
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 25978
  $18 = $da | 0; //@line 25979
  HEAP32[$18 >> 2] = HEAP32[$18 >> 2] | 32; //@line 25982
  STACKTOP = sp; //@line 25984
  return;
 } else {
  $37 = $da + 32 | 0; //@line 25987
  HEAP8[$37] = HEAP8[57600] | 0; //@line 25988
  HEAP8[$37 + 1 | 0] = HEAP8[57601 | 0] | 0; //@line 25988
  HEAP8[$37 + 2 | 0] = HEAP8[57602 | 0] | 0; //@line 25988
  HEAP8[$37 + 3 | 0] = HEAP8[57603 | 0] | 0; //@line 25988
  HEAP8[$37 + 4 | 0] = HEAP8[57604 | 0] | 0; //@line 25988
  HEAP8[$37 + 5 | 0] = HEAP8[57605 | 0] | 0; //@line 25988
  HEAP32[$da + 28 >> 2] = 2; //@line 25990
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 25996
  _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 26002
  STACKTOP = sp; //@line 26004
  return;
 }
}
function _d_91c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP; //@line 26016
 $1 = $da + 32 | 0; //@line 26017
 HEAP8[$1] = HEAP8[57768] | 0; //@line 26018
 HEAP8[$1 + 1 | 0] = HEAP8[57769 | 0] | 0; //@line 26018
 HEAP8[$1 + 2 | 0] = HEAP8[57770 | 0] | 0; //@line 26018
 HEAP8[$1 + 3 | 0] = HEAP8[57771 | 0] | 0; //@line 26018
 HEAP8[$1 + 4 | 0] = HEAP8[57772 | 0] | 0; //@line 26018
 HEAP8[$1 + 5 | 0] = HEAP8[57773 | 0] | 0; //@line 26018
 HEAP8[$1 + 6 | 0] = HEAP8[57774 | 0] | 0; //@line 26018
 HEAP32[$da + 28 >> 2] = 2; //@line 26020
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 26026
 _sprintf($da + 160 | 0, 40696, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 26032
 STACKTOP = sp; //@line 26033
 return;
}
function _d_a000($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $9 = 0, sp = 0;
 sp = STACKTOP; //@line 26044
 STACKTOP = STACKTOP + 16 | 0; //@line 26044
 $1 = sp | 0; //@line 26046
 _sprintf($1 | 0, 32672, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAPU16[$da + 12 >> 1] | 0, tempInt) | 0) | 0; //@line 26050
 _strcpy($da + 32 | 0, $1 | 0) | 0; //@line 26052
 HEAP32[$da + 28 >> 2] = 0; //@line 26054
 $9 = $da | 0; //@line 26055
 HEAP32[$9 >> 2] = HEAP32[$9 >> 2] | 4; //@line 26058
 STACKTOP = sp; //@line 26059
 return;
}
function _d_b000($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP; //@line 26070
 $1 = $da + 32 | 0; //@line 26071
 HEAP8[$1] = HEAP8[57952] | 0; //@line 26072
 HEAP8[$1 + 1 | 0] = HEAP8[57953 | 0] | 0; //@line 26072
 HEAP8[$1 + 2 | 0] = HEAP8[57954 | 0] | 0; //@line 26072
 HEAP8[$1 + 3 | 0] = HEAP8[57955 | 0] | 0; //@line 26072
 HEAP8[$1 + 4 | 0] = HEAP8[57956 | 0] | 0; //@line 26072
 HEAP8[$1 + 5 | 0] = HEAP8[57957 | 0] | 0; //@line 26072
 HEAP32[$da + 28 >> 2] = 2; //@line 26074
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 26080
 _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 26086
 STACKTOP = sp; //@line 26087
 return;
}
function _d_b040($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP; //@line 26098
 $1 = $da + 32 | 0; //@line 26099
 HEAP8[$1] = HEAP8[58080] | 0; //@line 26100
 HEAP8[$1 + 1 | 0] = HEAP8[58081 | 0] | 0; //@line 26100
 HEAP8[$1 + 2 | 0] = HEAP8[58082 | 0] | 0; //@line 26100
 HEAP8[$1 + 3 | 0] = HEAP8[58083 | 0] | 0; //@line 26100
 HEAP8[$1 + 4 | 0] = HEAP8[58084 | 0] | 0; //@line 26100
 HEAP8[$1 + 5 | 0] = HEAP8[58085 | 0] | 0; //@line 26100
 HEAP32[$da + 28 >> 2] = 2; //@line 26102
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 26108
 _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 26114
 STACKTOP = sp; //@line 26115
 return;
}
function _d_b080($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP; //@line 26126
 $1 = $da + 32 | 0; //@line 26127
 HEAP8[$1] = HEAP8[30096] | 0; //@line 26128
 HEAP8[$1 + 1 | 0] = HEAP8[30097 | 0] | 0; //@line 26128
 HEAP8[$1 + 2 | 0] = HEAP8[30098 | 0] | 0; //@line 26128
 HEAP8[$1 + 3 | 0] = HEAP8[30099 | 0] | 0; //@line 26128
 HEAP8[$1 + 4 | 0] = HEAP8[30100 | 0] | 0; //@line 26128
 HEAP8[$1 + 5 | 0] = HEAP8[30101 | 0] | 0; //@line 26128
 HEAP32[$da + 28 >> 2] = 2; //@line 26130
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 26136
 _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 26142
 STACKTOP = sp; //@line 26143
 return;
}
function _d_b0c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP; //@line 26154
 $1 = $da + 32 | 0; //@line 26155
 HEAP8[$1] = HEAP8[30176] | 0; //@line 26156
 HEAP8[$1 + 1 | 0] = HEAP8[30177 | 0] | 0; //@line 26156
 HEAP8[$1 + 2 | 0] = HEAP8[30178 | 0] | 0; //@line 26156
 HEAP8[$1 + 3 | 0] = HEAP8[30179 | 0] | 0; //@line 26156
 HEAP8[$1 + 4 | 0] = HEAP8[30180 | 0] | 0; //@line 26156
 HEAP8[$1 + 5 | 0] = HEAP8[30181 | 0] | 0; //@line 26156
 HEAP8[$1 + 6 | 0] = HEAP8[30182 | 0] | 0; //@line 26156
 HEAP32[$da + 28 >> 2] = 2; //@line 26158
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 26164
 _sprintf($da + 160 | 0, 40696, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 26170
 STACKTOP = sp; //@line 26171
 return;
}
function _d_b100($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $2 = 0, $5 = 0, $8 = 0, $10 = 0, $12 = 0, $16 = 0, $20 = 0, $24 = 0, sp = 0;
 sp = STACKTOP; //@line 26184
 $1 = $da + 12 | 0; //@line 26185
 $2 = HEAP16[$1 >> 1] | 0; //@line 26186
 $5 = $da + 32 | 0; //@line 26189
 if (($2 & 56) == 8) {
  HEAP8[$5] = HEAP8[30312] | 0; //@line 26192
  HEAP8[$5 + 1 | 0] = HEAP8[30313 | 0] | 0; //@line 26192
  HEAP8[$5 + 2 | 0] = HEAP8[30314 | 0] | 0; //@line 26192
  HEAP8[$5 + 3 | 0] = HEAP8[30315 | 0] | 0; //@line 26192
  HEAP8[$5 + 4 | 0] = HEAP8[30316 | 0] | 0; //@line 26192
  HEAP8[$5 + 5 | 0] = HEAP8[30317 | 0] | 0; //@line 26192
  HEAP8[$5 + 6 | 0] = HEAP8[30318 | 0] | 0; //@line 26192
  HEAP32[$da + 28 >> 2] = 2; //@line 26194
  $8 = $da + 96 | 0; //@line 26195
  $10 = $2 & 7; //@line 26197
  _sprintf($8 | 0, 31160, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $10, tempInt) | 0) | 0; //@line 26198
  $12 = $da + 160 | 0; //@line 26199
  $16 = (HEAPU16[$1 >> 1] | 0) >>> 9 & 7; //@line 26203
  _sprintf($12 | 0, 31160, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $16, tempInt) | 0) | 0; //@line 26204
  STACKTOP = sp; //@line 26206
  return;
 } else {
  HEAP8[$5] = HEAP8[30240] | 0; //@line 26209
  HEAP8[$5 + 1 | 0] = HEAP8[30241 | 0] | 0; //@line 26209
  HEAP8[$5 + 2 | 0] = HEAP8[30242 | 0] | 0; //@line 26209
  HEAP8[$5 + 3 | 0] = HEAP8[30243 | 0] | 0; //@line 26209
  HEAP8[$5 + 4 | 0] = HEAP8[30244 | 0] | 0; //@line 26209
  HEAP8[$5 + 5 | 0] = HEAP8[30245 | 0] | 0; //@line 26209
  HEAP32[$da + 28 >> 2] = 2; //@line 26211
  $20 = $da + 96 | 0; //@line 26212
  $24 = (HEAPU8[$src] | 0) >>> 1 & 7; //@line 26216
  _sprintf($20 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $24, tempInt) | 0) | 0; //@line 26217
  _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 26223
  STACKTOP = sp; //@line 26224
  return;
 }
}
function _d_b140($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $2 = 0, $5 = 0, $8 = 0, $10 = 0, $12 = 0, $16 = 0, $20 = 0, $24 = 0, sp = 0;
 sp = STACKTOP; //@line 26238
 $1 = $da + 12 | 0; //@line 26239
 $2 = HEAP16[$1 >> 1] | 0; //@line 26240
 $5 = $da + 32 | 0; //@line 26243
 if (($2 & 56) == 8) {
  HEAP8[$5] = HEAP8[30400] | 0; //@line 26246
  HEAP8[$5 + 1 | 0] = HEAP8[30401 | 0] | 0; //@line 26246
  HEAP8[$5 + 2 | 0] = HEAP8[30402 | 0] | 0; //@line 26246
  HEAP8[$5 + 3 | 0] = HEAP8[30403 | 0] | 0; //@line 26246
  HEAP8[$5 + 4 | 0] = HEAP8[30404 | 0] | 0; //@line 26246
  HEAP8[$5 + 5 | 0] = HEAP8[30405 | 0] | 0; //@line 26246
  HEAP8[$5 + 6 | 0] = HEAP8[30406 | 0] | 0; //@line 26246
  HEAP32[$da + 28 >> 2] = 2; //@line 26248
  $8 = $da + 96 | 0; //@line 26249
  $10 = $2 & 7; //@line 26251
  _sprintf($8 | 0, 31160, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $10, tempInt) | 0) | 0; //@line 26252
  $12 = $da + 160 | 0; //@line 26253
  $16 = (HEAPU16[$1 >> 1] | 0) >>> 9 & 7; //@line 26257
  _sprintf($12 | 0, 31160, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $16, tempInt) | 0) | 0; //@line 26258
  STACKTOP = sp; //@line 26260
  return;
 } else {
  HEAP8[$5] = HEAP8[30360] | 0; //@line 26263
  HEAP8[$5 + 1 | 0] = HEAP8[30361 | 0] | 0; //@line 26263
  HEAP8[$5 + 2 | 0] = HEAP8[30362 | 0] | 0; //@line 26263
  HEAP8[$5 + 3 | 0] = HEAP8[30363 | 0] | 0; //@line 26263
  HEAP8[$5 + 4 | 0] = HEAP8[30364 | 0] | 0; //@line 26263
  HEAP8[$5 + 5 | 0] = HEAP8[30365 | 0] | 0; //@line 26263
  HEAP32[$da + 28 >> 2] = 2; //@line 26265
  $20 = $da + 96 | 0; //@line 26266
  $24 = (HEAPU8[$src] | 0) >>> 1 & 7; //@line 26270
  _sprintf($20 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $24, tempInt) | 0) | 0; //@line 26271
  _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 26277
  STACKTOP = sp; //@line 26278
  return;
 }
}
function _d_b180($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $2 = 0, $5 = 0, $8 = 0, $10 = 0, $12 = 0, $16 = 0, $20 = 0, $24 = 0, sp = 0;
 sp = STACKTOP; //@line 26292
 $1 = $da + 12 | 0; //@line 26293
 $2 = HEAP16[$1 >> 1] | 0; //@line 26294
 $5 = $da + 32 | 0; //@line 26297
 if (($2 & 56) == 8) {
  HEAP8[$5] = HEAP8[30576] | 0; //@line 26300
  HEAP8[$5 + 1 | 0] = HEAP8[30577 | 0] | 0; //@line 26300
  HEAP8[$5 + 2 | 0] = HEAP8[30578 | 0] | 0; //@line 26300
  HEAP8[$5 + 3 | 0] = HEAP8[30579 | 0] | 0; //@line 26300
  HEAP8[$5 + 4 | 0] = HEAP8[30580 | 0] | 0; //@line 26300
  HEAP8[$5 + 5 | 0] = HEAP8[30581 | 0] | 0; //@line 26300
  HEAP8[$5 + 6 | 0] = HEAP8[30582 | 0] | 0; //@line 26300
  HEAP32[$da + 28 >> 2] = 2; //@line 26302
  $8 = $da + 96 | 0; //@line 26303
  $10 = $2 & 7; //@line 26305
  _sprintf($8 | 0, 31160, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $10, tempInt) | 0) | 0; //@line 26306
  $12 = $da + 160 | 0; //@line 26307
  $16 = (HEAPU16[$1 >> 1] | 0) >>> 9 & 7; //@line 26311
  _sprintf($12 | 0, 31160, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $16, tempInt) | 0) | 0; //@line 26312
  STACKTOP = sp; //@line 26314
  return;
 } else {
  HEAP8[$5] = HEAP8[30488] | 0; //@line 26317
  HEAP8[$5 + 1 | 0] = HEAP8[30489 | 0] | 0; //@line 26317
  HEAP8[$5 + 2 | 0] = HEAP8[30490 | 0] | 0; //@line 26317
  HEAP8[$5 + 3 | 0] = HEAP8[30491 | 0] | 0; //@line 26317
  HEAP8[$5 + 4 | 0] = HEAP8[30492 | 0] | 0; //@line 26317
  HEAP8[$5 + 5 | 0] = HEAP8[30493 | 0] | 0; //@line 26317
  HEAP32[$da + 28 >> 2] = 2; //@line 26319
  $20 = $da + 96 | 0; //@line 26320
  $24 = (HEAPU8[$src] | 0) >>> 1 & 7; //@line 26324
  _sprintf($20 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $24, tempInt) | 0) | 0; //@line 26325
  _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 26331
  STACKTOP = sp; //@line 26332
  return;
 }
}
function _d_b1c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP; //@line 26344
 $1 = $da + 32 | 0; //@line 26345
 HEAP8[$1] = HEAP8[30776] | 0; //@line 26346
 HEAP8[$1 + 1 | 0] = HEAP8[30777 | 0] | 0; //@line 26346
 HEAP8[$1 + 2 | 0] = HEAP8[30778 | 0] | 0; //@line 26346
 HEAP8[$1 + 3 | 0] = HEAP8[30779 | 0] | 0; //@line 26346
 HEAP8[$1 + 4 | 0] = HEAP8[30780 | 0] | 0; //@line 26346
 HEAP8[$1 + 5 | 0] = HEAP8[30781 | 0] | 0; //@line 26346
 HEAP8[$1 + 6 | 0] = HEAP8[30782 | 0] | 0; //@line 26346
 HEAP32[$da + 28 >> 2] = 2; //@line 26348
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 26354
 _sprintf($da + 160 | 0, 40696, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 26360
 STACKTOP = sp; //@line 26361
 return;
}
function _d_c000($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP; //@line 26372
 $1 = $da + 32 | 0; //@line 26373
 HEAP8[$1] = HEAP8[31056] | 0; //@line 26374
 HEAP8[$1 + 1 | 0] = HEAP8[31057 | 0] | 0; //@line 26374
 HEAP8[$1 + 2 | 0] = HEAP8[31058 | 0] | 0; //@line 26374
 HEAP8[$1 + 3 | 0] = HEAP8[31059 | 0] | 0; //@line 26374
 HEAP8[$1 + 4 | 0] = HEAP8[31060 | 0] | 0; //@line 26374
 HEAP8[$1 + 5 | 0] = HEAP8[31061 | 0] | 0; //@line 26374
 HEAP32[$da + 28 >> 2] = 2; //@line 26376
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 26382
 _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 26388
 STACKTOP = sp; //@line 26389
 return;
}
function _d_c040($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP; //@line 26400
 $1 = $da + 32 | 0; //@line 26401
 HEAP8[$1] = HEAP8[31144] | 0; //@line 26402
 HEAP8[$1 + 1 | 0] = HEAP8[31145 | 0] | 0; //@line 26402
 HEAP8[$1 + 2 | 0] = HEAP8[31146 | 0] | 0; //@line 26402
 HEAP8[$1 + 3 | 0] = HEAP8[31147 | 0] | 0; //@line 26402
 HEAP8[$1 + 4 | 0] = HEAP8[31148 | 0] | 0; //@line 26402
 HEAP8[$1 + 5 | 0] = HEAP8[31149 | 0] | 0; //@line 26402
 HEAP32[$da + 28 >> 2] = 2; //@line 26404
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 26410
 _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 26416
 STACKTOP = sp; //@line 26417
 return;
}
function _d_c080($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP; //@line 26428
 $1 = $da + 32 | 0; //@line 26429
 HEAP8[$1] = HEAP8[31192] | 0; //@line 26430
 HEAP8[$1 + 1 | 0] = HEAP8[31193 | 0] | 0; //@line 26430
 HEAP8[$1 + 2 | 0] = HEAP8[31194 | 0] | 0; //@line 26430
 HEAP8[$1 + 3 | 0] = HEAP8[31195 | 0] | 0; //@line 26430
 HEAP8[$1 + 4 | 0] = HEAP8[31196 | 0] | 0; //@line 26430
 HEAP8[$1 + 5 | 0] = HEAP8[31197 | 0] | 0; //@line 26430
 HEAP32[$da + 28 >> 2] = 2; //@line 26432
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 26438
 _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 26444
 STACKTOP = sp; //@line 26445
 return;
}
function _d_c0c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP; //@line 26456
 $1 = $da + 32 | 0; //@line 26457
 HEAP8[$1] = HEAP8[30960] | 0; //@line 26458
 HEAP8[$1 + 1 | 0] = HEAP8[30961 | 0] | 0; //@line 26458
 HEAP8[$1 + 2 | 0] = HEAP8[30962 | 0] | 0; //@line 26458
 HEAP8[$1 + 3 | 0] = HEAP8[30963 | 0] | 0; //@line 26458
 HEAP8[$1 + 4 | 0] = HEAP8[30964 | 0] | 0; //@line 26458
 HEAP8[$1 + 5 | 0] = HEAP8[30965 | 0] | 0; //@line 26458
 HEAP8[$1 + 6 | 0] = HEAP8[30966 | 0] | 0; //@line 26458
 HEAP32[$da + 28 >> 2] = 2; //@line 26460
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 26466
 _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 26472
 STACKTOP = sp; //@line 26473
 return;
}
function _d_c100($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $3 = 0, $5 = 0, $7 = 0, $9 = 0, $10 = 0, $12 = 0, $16 = 0, $18 = 0, $22 = 0, $33 = 0, $37 = 0, sp = 0;
 sp = STACKTOP; //@line 26488
 $1 = $da + 12 | 0; //@line 26489
 $3 = HEAPU16[$1 >> 1] | 0; //@line 26491
 $5 = $3 >>> 3 & 7; //@line 26493
 if (($5 | 0) == 0) {
  $7 = $da + 32 | 0; //@line 26495
  HEAP8[$7] = HEAP8[31104] | 0; //@line 26496
  HEAP8[$7 + 1 | 0] = HEAP8[31105 | 0] | 0; //@line 26496
  HEAP8[$7 + 2 | 0] = HEAP8[31106 | 0] | 0; //@line 26496
  HEAP8[$7 + 3 | 0] = HEAP8[31107 | 0] | 0; //@line 26496
  HEAP8[$7 + 4 | 0] = HEAP8[31108 | 0] | 0; //@line 26496
  HEAP8[$7 + 5 | 0] = HEAP8[31109 | 0] | 0; //@line 26496
  HEAP8[$7 + 6 | 0] = HEAP8[31110 | 0] | 0; //@line 26496
  HEAP32[$da + 28 >> 2] = 2; //@line 26498
  $9 = $da + 96 | 0; //@line 26499
  $10 = $3 & 7; //@line 26500
  _sprintf($9 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $10, tempInt) | 0) | 0; //@line 26501
  $12 = $da + 160 | 0; //@line 26502
  $16 = (HEAPU8[$src] | 0) >>> 1 & 7; //@line 26506
  _sprintf($12 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $16, tempInt) | 0) | 0; //@line 26507
  $18 = $da | 0; //@line 26508
  HEAP32[$18 >> 2] = HEAP32[$18 >> 2] | 32; //@line 26511
  STACKTOP = sp; //@line 26513
  return;
 } else if (($5 | 0) == 1) {
  $22 = $da + 32 | 0; //@line 26516
  HEAP8[$22] = HEAP8[31104] | 0; //@line 26517
  HEAP8[$22 + 1 | 0] = HEAP8[31105 | 0] | 0; //@line 26517
  HEAP8[$22 + 2 | 0] = HEAP8[31106 | 0] | 0; //@line 26517
  HEAP8[$22 + 3 | 0] = HEAP8[31107 | 0] | 0; //@line 26517
  HEAP8[$22 + 4 | 0] = HEAP8[31108 | 0] | 0; //@line 26517
  HEAP8[$22 + 5 | 0] = HEAP8[31109 | 0] | 0; //@line 26517
  HEAP8[$22 + 6 | 0] = HEAP8[31110 | 0] | 0; //@line 26517
  HEAP32[$da + 28 >> 2] = 2; //@line 26519
  _sprintf($da + 96 | 0, 30264, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $3 & 7, tempInt) | 0) | 0; //@line 26522
  _sprintf($da + 160 | 0, 30264, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU16[$1 >> 1] | 0) >>> 9 & 7, tempInt) | 0) | 0; //@line 26528
  $33 = $da | 0; //@line 26529
  HEAP32[$33 >> 2] = HEAP32[$33 >> 2] | 32; //@line 26532
  STACKTOP = sp; //@line 26534
  return;
 } else {
  $37 = $da + 32 | 0; //@line 26537
  HEAP8[$37] = HEAP8[31056] | 0; //@line 26538
  HEAP8[$37 + 1 | 0] = HEAP8[31057 | 0] | 0; //@line 26538
  HEAP8[$37 + 2 | 0] = HEAP8[31058 | 0] | 0; //@line 26538
  HEAP8[$37 + 3 | 0] = HEAP8[31059 | 0] | 0; //@line 26538
  HEAP8[$37 + 4 | 0] = HEAP8[31060 | 0] | 0; //@line 26538
  HEAP8[$37 + 5 | 0] = HEAP8[31061 | 0] | 0; //@line 26538
  HEAP32[$da + 28 >> 2] = 2; //@line 26540
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 26546
  _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 26552
  STACKTOP = sp; //@line 26554
  return;
 }
}
function _d_c140($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $5 = 0, $8 = 0, $10 = 0, $14 = 0, $16 = 0, $19 = 0, $23 = 0, $37 = 0, sp = 0;
 sp = STACKTOP; //@line 26570
 $1 = $da + 12 | 0; //@line 26571
 $5 = (HEAPU16[$1 >> 1] | 0) >>> 3 & 7; //@line 26575
 if (($5 | 0) == 0) {
  $8 = $da + 32 | 0; //@line 26578
  tempBigInt = 4675653; //@line 26579
  HEAP8[$8] = tempBigInt & 255; //@line 26579
  tempBigInt = tempBigInt >> 8; //@line 26579
  HEAP8[$8 + 1 | 0] = tempBigInt & 255; //@line 26579
  tempBigInt = tempBigInt >> 8; //@line 26579
  HEAP8[$8 + 2 | 0] = tempBigInt & 255; //@line 26579
  tempBigInt = tempBigInt >> 8; //@line 26579
  HEAP8[$8 + 3 | 0] = tempBigInt & 255; //@line 26579
  HEAP32[$da + 28 >> 2] = 2; //@line 26581
  $10 = $da + 96 | 0; //@line 26582
  $14 = (HEAPU8[$src] | 0) >>> 1 & 7; //@line 26586
  _sprintf($10 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $14, tempInt) | 0) | 0; //@line 26587
  $16 = $da + 160 | 0; //@line 26588
  $19 = HEAP16[$1 >> 1] & 7; //@line 26591
  _sprintf($16 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $19, tempInt) | 0) | 0; //@line 26592
  STACKTOP = sp; //@line 26594
  return;
 } else if (($5 | 0) == 1) {
  $23 = $da + 32 | 0; //@line 26598
  tempBigInt = 4675653; //@line 26599
  HEAP8[$23] = tempBigInt & 255; //@line 26599
  tempBigInt = tempBigInt >> 8; //@line 26599
  HEAP8[$23 + 1 | 0] = tempBigInt & 255; //@line 26599
  tempBigInt = tempBigInt >> 8; //@line 26599
  HEAP8[$23 + 2 | 0] = tempBigInt & 255; //@line 26599
  tempBigInt = tempBigInt >> 8; //@line 26599
  HEAP8[$23 + 3 | 0] = tempBigInt & 255; //@line 26599
  HEAP32[$da + 28 >> 2] = 2; //@line 26601
  _sprintf($da + 96 | 0, 40696, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 26607
  _sprintf($da + 160 | 0, 40696, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 26612
  STACKTOP = sp; //@line 26614
  return;
 } else {
  $37 = $da + 32 | 0; //@line 26617
  HEAP8[$37] = HEAP8[31144] | 0; //@line 26618
  HEAP8[$37 + 1 | 0] = HEAP8[31145 | 0] | 0; //@line 26618
  HEAP8[$37 + 2 | 0] = HEAP8[31146 | 0] | 0; //@line 26618
  HEAP8[$37 + 3 | 0] = HEAP8[31147 | 0] | 0; //@line 26618
  HEAP8[$37 + 4 | 0] = HEAP8[31148 | 0] | 0; //@line 26618
  HEAP8[$37 + 5 | 0] = HEAP8[31149 | 0] | 0; //@line 26618
  HEAP32[$da + 28 >> 2] = 2; //@line 26620
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 26626
  _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 26632
  STACKTOP = sp; //@line 26634
  return;
 }
}
function _d_c180($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $5 = 0, $7 = 0, $17 = 0, $21 = 0, $23 = 0, $27 = 0, $29 = 0, $32 = 0, $35 = 0, sp = 0;
 sp = STACKTOP; //@line 26650
 $1 = $da + 12 | 0; //@line 26651
 $5 = (HEAPU16[$1 >> 1] | 0) >>> 3 & 7; //@line 26655
 if (($5 | 0) == 1) {
  $21 = $da + 32 | 0; //@line 26658
  tempBigInt = 4675653; //@line 26659
  HEAP8[$21] = tempBigInt & 255; //@line 26659
  tempBigInt = tempBigInt >> 8; //@line 26659
  HEAP8[$21 + 1 | 0] = tempBigInt & 255; //@line 26659
  tempBigInt = tempBigInt >> 8; //@line 26659
  HEAP8[$21 + 2 | 0] = tempBigInt & 255; //@line 26659
  tempBigInt = tempBigInt >> 8; //@line 26659
  HEAP8[$21 + 3 | 0] = tempBigInt & 255; //@line 26659
  HEAP32[$da + 28 >> 2] = 2; //@line 26661
  $23 = $da + 96 | 0; //@line 26662
  $27 = (HEAPU8[$src] | 0) >>> 1 & 7; //@line 26666
  _sprintf($23 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $27, tempInt) | 0) | 0; //@line 26667
  $29 = $da + 160 | 0; //@line 26668
  $32 = HEAP16[$1 >> 1] & 7; //@line 26671
  _sprintf($29 | 0, 40696, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $32, tempInt) | 0) | 0; //@line 26672
  STACKTOP = sp; //@line 26674
  return;
 } else if (($5 | 0) == 0) {
  $7 = $da + 32 | 0; //@line 26677
  HEAP8[$7] = HEAP8[36120] | 0; //@line 26678
  HEAP8[$7 + 1 | 0] = HEAP8[36121 | 0] | 0; //@line 26678
  HEAP8[$7 + 2 | 0] = HEAP8[36122 | 0] | 0; //@line 26678
  HEAP32[$da + 28 >> 2] = 1; //@line 26680
  $17 = ((HEAPU8[$src] | 0) << 8 | (HEAPU8[$src + 1 | 0] | 0)) & 65535; //@line 26689
  _sprintf($da + 96 | 0, 47464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $17, tempInt) | 0) | 0; //@line 26690
  STACKTOP = sp; //@line 26692
  return;
 } else {
  $35 = $da + 32 | 0; //@line 26695
  HEAP8[$35] = HEAP8[31192] | 0; //@line 26696
  HEAP8[$35 + 1 | 0] = HEAP8[31193 | 0] | 0; //@line 26696
  HEAP8[$35 + 2 | 0] = HEAP8[31194 | 0] | 0; //@line 26696
  HEAP8[$35 + 3 | 0] = HEAP8[31195 | 0] | 0; //@line 26696
  HEAP8[$35 + 4 | 0] = HEAP8[31196 | 0] | 0; //@line 26696
  HEAP8[$35 + 5 | 0] = HEAP8[31197 | 0] | 0; //@line 26696
  HEAP32[$da + 28 >> 2] = 2; //@line 26698
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 26704
  _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 26710
  STACKTOP = sp; //@line 26712
  return;
 }
}
function _d_c1c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP; //@line 26724
 $1 = $da + 32 | 0; //@line 26725
 HEAP8[$1] = HEAP8[31320] | 0; //@line 26726
 HEAP8[$1 + 1 | 0] = HEAP8[31321 | 0] | 0; //@line 26726
 HEAP8[$1 + 2 | 0] = HEAP8[31322 | 0] | 0; //@line 26726
 HEAP8[$1 + 3 | 0] = HEAP8[31323 | 0] | 0; //@line 26726
 HEAP8[$1 + 4 | 0] = HEAP8[31324 | 0] | 0; //@line 26726
 HEAP8[$1 + 5 | 0] = HEAP8[31325 | 0] | 0; //@line 26726
 HEAP8[$1 + 6 | 0] = HEAP8[31326 | 0] | 0; //@line 26726
 HEAP32[$da + 28 >> 2] = 2; //@line 26728
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 26734
 _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 26740
 STACKTOP = sp; //@line 26741
 return;
}
function _d_d000($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP; //@line 26752
 $1 = $da + 32 | 0; //@line 26753
 HEAP8[$1] = HEAP8[31544] | 0; //@line 26754
 HEAP8[$1 + 1 | 0] = HEAP8[31545 | 0] | 0; //@line 26754
 HEAP8[$1 + 2 | 0] = HEAP8[31546 | 0] | 0; //@line 26754
 HEAP8[$1 + 3 | 0] = HEAP8[31547 | 0] | 0; //@line 26754
 HEAP8[$1 + 4 | 0] = HEAP8[31548 | 0] | 0; //@line 26754
 HEAP8[$1 + 5 | 0] = HEAP8[31549 | 0] | 0; //@line 26754
 HEAP32[$da + 28 >> 2] = 2; //@line 26756
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 26762
 _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 26768
 STACKTOP = sp; //@line 26769
 return;
}
function _d_d040($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP; //@line 26780
 $1 = $da + 32 | 0; //@line 26781
 HEAP8[$1] = HEAP8[31880] | 0; //@line 26782
 HEAP8[$1 + 1 | 0] = HEAP8[31881 | 0] | 0; //@line 26782
 HEAP8[$1 + 2 | 0] = HEAP8[31882 | 0] | 0; //@line 26782
 HEAP8[$1 + 3 | 0] = HEAP8[31883 | 0] | 0; //@line 26782
 HEAP8[$1 + 4 | 0] = HEAP8[31884 | 0] | 0; //@line 26782
 HEAP8[$1 + 5 | 0] = HEAP8[31885 | 0] | 0; //@line 26782
 HEAP32[$da + 28 >> 2] = 2; //@line 26784
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 26790
 _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 26796
 STACKTOP = sp; //@line 26797
 return;
}
function _d_d080($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP; //@line 26808
 $1 = $da + 32 | 0; //@line 26809
 HEAP8[$1] = HEAP8[32048] | 0; //@line 26810
 HEAP8[$1 + 1 | 0] = HEAP8[32049 | 0] | 0; //@line 26810
 HEAP8[$1 + 2 | 0] = HEAP8[32050 | 0] | 0; //@line 26810
 HEAP8[$1 + 3 | 0] = HEAP8[32051 | 0] | 0; //@line 26810
 HEAP8[$1 + 4 | 0] = HEAP8[32052 | 0] | 0; //@line 26810
 HEAP8[$1 + 5 | 0] = HEAP8[32053 | 0] | 0; //@line 26810
 HEAP32[$da + 28 >> 2] = 2; //@line 26812
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 26818
 _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 26824
 STACKTOP = sp; //@line 26825
 return;
}
function _d_d0c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP; //@line 26836
 $1 = $da + 32 | 0; //@line 26837
 HEAP8[$1] = HEAP8[31448] | 0; //@line 26838
 HEAP8[$1 + 1 | 0] = HEAP8[31449 | 0] | 0; //@line 26838
 HEAP8[$1 + 2 | 0] = HEAP8[31450 | 0] | 0; //@line 26838
 HEAP8[$1 + 3 | 0] = HEAP8[31451 | 0] | 0; //@line 26838
 HEAP8[$1 + 4 | 0] = HEAP8[31452 | 0] | 0; //@line 26838
 HEAP8[$1 + 5 | 0] = HEAP8[31453 | 0] | 0; //@line 26838
 HEAP8[$1 + 6 | 0] = HEAP8[31454 | 0] | 0; //@line 26838
 HEAP32[$da + 28 >> 2] = 2; //@line 26840
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 26846
 _sprintf($da + 160 | 0, 40696, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 26852
 STACKTOP = sp; //@line 26853
 return;
}
function _d_d100($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $3 = 0, $5 = 0, $7 = 0, $9 = 0, $10 = 0, $12 = 0, $16 = 0, $18 = 0, $22 = 0, $33 = 0, $37 = 0, sp = 0;
 sp = STACKTOP; //@line 26868
 $1 = $da + 12 | 0; //@line 26869
 $3 = HEAPU16[$1 >> 1] | 0; //@line 26871
 $5 = $3 >>> 3 & 7; //@line 26873
 if (($5 | 0) == 0) {
  $7 = $da + 32 | 0; //@line 26875
  HEAP8[$7] = HEAP8[31720] | 0; //@line 26876
  HEAP8[$7 + 1 | 0] = HEAP8[31721 | 0] | 0; //@line 26876
  HEAP8[$7 + 2 | 0] = HEAP8[31722 | 0] | 0; //@line 26876
  HEAP8[$7 + 3 | 0] = HEAP8[31723 | 0] | 0; //@line 26876
  HEAP8[$7 + 4 | 0] = HEAP8[31724 | 0] | 0; //@line 26876
  HEAP8[$7 + 5 | 0] = HEAP8[31725 | 0] | 0; //@line 26876
  HEAP8[$7 + 6 | 0] = HEAP8[31726 | 0] | 0; //@line 26876
  HEAP32[$da + 28 >> 2] = 2; //@line 26878
  $9 = $da + 96 | 0; //@line 26879
  $10 = $3 & 7; //@line 26880
  _sprintf($9 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $10, tempInt) | 0) | 0; //@line 26881
  $12 = $da + 160 | 0; //@line 26882
  $16 = (HEAPU8[$src] | 0) >>> 1 & 7; //@line 26886
  _sprintf($12 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $16, tempInt) | 0) | 0; //@line 26887
  $18 = $da | 0; //@line 26888
  HEAP32[$18 >> 2] = HEAP32[$18 >> 2] | 32; //@line 26891
  STACKTOP = sp; //@line 26893
  return;
 } else if (($5 | 0) == 1) {
  $22 = $da + 32 | 0; //@line 26896
  HEAP8[$22] = HEAP8[31720] | 0; //@line 26897
  HEAP8[$22 + 1 | 0] = HEAP8[31721 | 0] | 0; //@line 26897
  HEAP8[$22 + 2 | 0] = HEAP8[31722 | 0] | 0; //@line 26897
  HEAP8[$22 + 3 | 0] = HEAP8[31723 | 0] | 0; //@line 26897
  HEAP8[$22 + 4 | 0] = HEAP8[31724 | 0] | 0; //@line 26897
  HEAP8[$22 + 5 | 0] = HEAP8[31725 | 0] | 0; //@line 26897
  HEAP8[$22 + 6 | 0] = HEAP8[31726 | 0] | 0; //@line 26897
  HEAP32[$da + 28 >> 2] = 2; //@line 26899
  _sprintf($da + 96 | 0, 30264, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $3 & 7, tempInt) | 0) | 0; //@line 26902
  _sprintf($da + 160 | 0, 30264, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU16[$1 >> 1] | 0) >>> 9 & 7, tempInt) | 0) | 0; //@line 26908
  $33 = $da | 0; //@line 26909
  HEAP32[$33 >> 2] = HEAP32[$33 >> 2] | 32; //@line 26912
  STACKTOP = sp; //@line 26914
  return;
 } else {
  $37 = $da + 32 | 0; //@line 26917
  HEAP8[$37] = HEAP8[31544] | 0; //@line 26918
  HEAP8[$37 + 1 | 0] = HEAP8[31545 | 0] | 0; //@line 26918
  HEAP8[$37 + 2 | 0] = HEAP8[31546 | 0] | 0; //@line 26918
  HEAP8[$37 + 3 | 0] = HEAP8[31547 | 0] | 0; //@line 26918
  HEAP8[$37 + 4 | 0] = HEAP8[31548 | 0] | 0; //@line 26918
  HEAP8[$37 + 5 | 0] = HEAP8[31549 | 0] | 0; //@line 26918
  HEAP32[$da + 28 >> 2] = 2; //@line 26920
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 26926
  _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 26932
  STACKTOP = sp; //@line 26934
  return;
 }
}
function _d_d140($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $3 = 0, $5 = 0, $7 = 0, $18 = 0, $22 = 0, $24 = 0, $25 = 0, $27 = 0, $31 = 0, $33 = 0, $37 = 0, sp = 0;
 sp = STACKTOP; //@line 26950
 $1 = $da + 12 | 0; //@line 26951
 $3 = HEAPU16[$1 >> 1] | 0; //@line 26953
 $5 = $3 >>> 3 & 7; //@line 26955
 if (($5 | 0) == 1) {
  $22 = $da + 32 | 0; //@line 26957
  HEAP8[$22] = HEAP8[31952] | 0; //@line 26958
  HEAP8[$22 + 1 | 0] = HEAP8[31953 | 0] | 0; //@line 26958
  HEAP8[$22 + 2 | 0] = HEAP8[31954 | 0] | 0; //@line 26958
  HEAP8[$22 + 3 | 0] = HEAP8[31955 | 0] | 0; //@line 26958
  HEAP8[$22 + 4 | 0] = HEAP8[31956 | 0] | 0; //@line 26958
  HEAP8[$22 + 5 | 0] = HEAP8[31957 | 0] | 0; //@line 26958
  HEAP8[$22 + 6 | 0] = HEAP8[31958 | 0] | 0; //@line 26958
  HEAP32[$da + 28 >> 2] = 2; //@line 26960
  $24 = $da + 96 | 0; //@line 26961
  $25 = $3 & 7; //@line 26962
  _sprintf($24 | 0, 30264, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $25, tempInt) | 0) | 0; //@line 26963
  $27 = $da + 160 | 0; //@line 26964
  $31 = (HEAPU16[$1 >> 1] | 0) >>> 9 & 7; //@line 26968
  _sprintf($27 | 0, 30264, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $31, tempInt) | 0) | 0; //@line 26969
  $33 = $da | 0; //@line 26970
  HEAP32[$33 >> 2] = HEAP32[$33 >> 2] | 32; //@line 26973
  STACKTOP = sp; //@line 26975
  return;
 } else if (($5 | 0) == 0) {
  $7 = $da + 32 | 0; //@line 26978
  HEAP8[$7] = HEAP8[31952] | 0; //@line 26979
  HEAP8[$7 + 1 | 0] = HEAP8[31953 | 0] | 0; //@line 26979
  HEAP8[$7 + 2 | 0] = HEAP8[31954 | 0] | 0; //@line 26979
  HEAP8[$7 + 3 | 0] = HEAP8[31955 | 0] | 0; //@line 26979
  HEAP8[$7 + 4 | 0] = HEAP8[31956 | 0] | 0; //@line 26979
  HEAP8[$7 + 5 | 0] = HEAP8[31957 | 0] | 0; //@line 26979
  HEAP8[$7 + 6 | 0] = HEAP8[31958 | 0] | 0; //@line 26979
  HEAP32[$da + 28 >> 2] = 2; //@line 26981
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $3 & 7, tempInt) | 0) | 0; //@line 26984
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 26990
  $18 = $da | 0; //@line 26991
  HEAP32[$18 >> 2] = HEAP32[$18 >> 2] | 32; //@line 26994
  STACKTOP = sp; //@line 26996
  return;
 } else {
  $37 = $da + 32 | 0; //@line 26999
  HEAP8[$37] = HEAP8[31880] | 0; //@line 27000
  HEAP8[$37 + 1 | 0] = HEAP8[31881 | 0] | 0; //@line 27000
  HEAP8[$37 + 2 | 0] = HEAP8[31882 | 0] | 0; //@line 27000
  HEAP8[$37 + 3 | 0] = HEAP8[31883 | 0] | 0; //@line 27000
  HEAP8[$37 + 4 | 0] = HEAP8[31884 | 0] | 0; //@line 27000
  HEAP8[$37 + 5 | 0] = HEAP8[31885 | 0] | 0; //@line 27000
  HEAP32[$da + 28 >> 2] = 2; //@line 27002
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 27008
  _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 27014
  STACKTOP = sp; //@line 27016
  return;
 }
}
function _d_d180($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $3 = 0, $5 = 0, $7 = 0, $9 = 0, $10 = 0, $12 = 0, $16 = 0, $18 = 0, $22 = 0, $33 = 0, $37 = 0, sp = 0;
 sp = STACKTOP; //@line 27032
 $1 = $da + 12 | 0; //@line 27033
 $3 = HEAPU16[$1 >> 1] | 0; //@line 27035
 $5 = $3 >>> 3 & 7; //@line 27037
 if (($5 | 0) == 0) {
  $7 = $da + 32 | 0; //@line 27039
  HEAP8[$7] = HEAP8[32160] | 0; //@line 27040
  HEAP8[$7 + 1 | 0] = HEAP8[32161 | 0] | 0; //@line 27040
  HEAP8[$7 + 2 | 0] = HEAP8[32162 | 0] | 0; //@line 27040
  HEAP8[$7 + 3 | 0] = HEAP8[32163 | 0] | 0; //@line 27040
  HEAP8[$7 + 4 | 0] = HEAP8[32164 | 0] | 0; //@line 27040
  HEAP8[$7 + 5 | 0] = HEAP8[32165 | 0] | 0; //@line 27040
  HEAP8[$7 + 6 | 0] = HEAP8[32166 | 0] | 0; //@line 27040
  HEAP32[$da + 28 >> 2] = 2; //@line 27042
  $9 = $da + 96 | 0; //@line 27043
  $10 = $3 & 7; //@line 27044
  _sprintf($9 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $10, tempInt) | 0) | 0; //@line 27045
  $12 = $da + 160 | 0; //@line 27046
  $16 = (HEAPU8[$src] | 0) >>> 1 & 7; //@line 27050
  _sprintf($12 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $16, tempInt) | 0) | 0; //@line 27051
  $18 = $da | 0; //@line 27052
  HEAP32[$18 >> 2] = HEAP32[$18 >> 2] | 32; //@line 27055
  STACKTOP = sp; //@line 27057
  return;
 } else if (($5 | 0) == 1) {
  $22 = $da + 32 | 0; //@line 27060
  HEAP8[$22] = HEAP8[32160] | 0; //@line 27061
  HEAP8[$22 + 1 | 0] = HEAP8[32161 | 0] | 0; //@line 27061
  HEAP8[$22 + 2 | 0] = HEAP8[32162 | 0] | 0; //@line 27061
  HEAP8[$22 + 3 | 0] = HEAP8[32163 | 0] | 0; //@line 27061
  HEAP8[$22 + 4 | 0] = HEAP8[32164 | 0] | 0; //@line 27061
  HEAP8[$22 + 5 | 0] = HEAP8[32165 | 0] | 0; //@line 27061
  HEAP8[$22 + 6 | 0] = HEAP8[32166 | 0] | 0; //@line 27061
  HEAP32[$da + 28 >> 2] = 2; //@line 27063
  _sprintf($da + 96 | 0, 30264, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $3 & 7, tempInt) | 0) | 0; //@line 27066
  _sprintf($da + 160 | 0, 30264, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU16[$1 >> 1] | 0) >>> 9 & 7, tempInt) | 0) | 0; //@line 27072
  $33 = $da | 0; //@line 27073
  HEAP32[$33 >> 2] = HEAP32[$33 >> 2] | 32; //@line 27076
  STACKTOP = sp; //@line 27078
  return;
 } else {
  $37 = $da + 32 | 0; //@line 27081
  HEAP8[$37] = HEAP8[32048] | 0; //@line 27082
  HEAP8[$37 + 1 | 0] = HEAP8[32049 | 0] | 0; //@line 27082
  HEAP8[$37 + 2 | 0] = HEAP8[32050 | 0] | 0; //@line 27082
  HEAP8[$37 + 3 | 0] = HEAP8[32051 | 0] | 0; //@line 27082
  HEAP8[$37 + 4 | 0] = HEAP8[32052 | 0] | 0; //@line 27082
  HEAP8[$37 + 5 | 0] = HEAP8[32053 | 0] | 0; //@line 27082
  HEAP32[$da + 28 >> 2] = 2; //@line 27084
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 27090
  _dasm_ea($da, $da + 160 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 27096
  STACKTOP = sp; //@line 27098
  return;
 }
}
function _d_d1c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP; //@line 27110
 $1 = $da + 32 | 0; //@line 27111
 HEAP8[$1] = HEAP8[32288] | 0; //@line 27112
 HEAP8[$1 + 1 | 0] = HEAP8[32289 | 0] | 0; //@line 27112
 HEAP8[$1 + 2 | 0] = HEAP8[32290 | 0] | 0; //@line 27112
 HEAP8[$1 + 3 | 0] = HEAP8[32291 | 0] | 0; //@line 27112
 HEAP8[$1 + 4 | 0] = HEAP8[32292 | 0] | 0; //@line 27112
 HEAP8[$1 + 5 | 0] = HEAP8[32293 | 0] | 0; //@line 27112
 HEAP8[$1 + 6 | 0] = HEAP8[32294 | 0] | 0; //@line 27112
 HEAP32[$da + 28 >> 2] = 2; //@line 27114
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 32); //@line 27120
 _sprintf($da + 160 | 0, 40696, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 27126
 STACKTOP = sp; //@line 27127
 return;
}
function _d_e000($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $5 = 0, $7 = 0, $13 = 0, $22 = 0, $28 = 0, $37 = 0, $43 = 0, $51 = 0, $55 = 0, $61 = 0, $70 = 0, $72 = 0, $76 = 0, $78 = 0, $81 = 0, $84 = 0, $98 = 0, $111 = 0, $115 = 0, $129 = 0, $139 = 0, sp = 0;
 sp = STACKTOP; //@line 27154
 $1 = $da + 12 | 0; //@line 27155
 $5 = (HEAPU16[$1 >> 1] | 0) >>> 3 & 7; //@line 27159
 if (($5 | 0) == 4) {
  $70 = $da + 32 | 0; //@line 27161
  HEAP8[$70] = HEAP8[33120] | 0; //@line 27162
  HEAP8[$70 + 1 | 0] = HEAP8[33121 | 0] | 0; //@line 27162
  HEAP8[$70 + 2 | 0] = HEAP8[33122 | 0] | 0; //@line 27162
  HEAP8[$70 + 3 | 0] = HEAP8[33123 | 0] | 0; //@line 27162
  HEAP8[$70 + 4 | 0] = HEAP8[33124 | 0] | 0; //@line 27162
  HEAP8[$70 + 5 | 0] = HEAP8[33125 | 0] | 0; //@line 27162
  HEAP32[$da + 28 >> 2] = 2; //@line 27164
  $72 = $da + 96 | 0; //@line 27165
  $76 = (HEAPU8[$src] | 0) >>> 1 & 7; //@line 27169
  _sprintf($72 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $76, tempInt) | 0) | 0; //@line 27170
  $78 = $da + 160 | 0; //@line 27171
  $81 = HEAP16[$1 >> 1] & 7; //@line 27174
  _sprintf($78 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $81, tempInt) | 0) | 0; //@line 27175
  STACKTOP = sp; //@line 27177
  return;
 } else if (($5 | 0) == 5) {
  $84 = $da + 32 | 0; //@line 27180
  HEAP8[$84] = HEAP8[32792] | 0; //@line 27181
  HEAP8[$84 + 1 | 0] = HEAP8[32793 | 0] | 0; //@line 27181
  HEAP8[$84 + 2 | 0] = HEAP8[32794 | 0] | 0; //@line 27181
  HEAP8[$84 + 3 | 0] = HEAP8[32795 | 0] | 0; //@line 27181
  HEAP8[$84 + 4 | 0] = HEAP8[32796 | 0] | 0; //@line 27181
  HEAP8[$84 + 5 | 0] = HEAP8[32797 | 0] | 0; //@line 27181
  HEAP32[$da + 28 >> 2] = 2; //@line 27183
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 27189
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 27194
  STACKTOP = sp; //@line 27196
  return;
 } else if (($5 | 0) == 0) {
  $7 = $da + 32 | 0; //@line 27199
  HEAP8[$7] = HEAP8[33120] | 0; //@line 27200
  HEAP8[$7 + 1 | 0] = HEAP8[33121 | 0] | 0; //@line 27200
  HEAP8[$7 + 2 | 0] = HEAP8[33122 | 0] | 0; //@line 27200
  HEAP8[$7 + 3 | 0] = HEAP8[33123 | 0] | 0; //@line 27200
  HEAP8[$7 + 4 | 0] = HEAP8[33124 | 0] | 0; //@line 27200
  HEAP8[$7 + 5 | 0] = HEAP8[33125 | 0] | 0; //@line 27200
  HEAP32[$da + 28 >> 2] = 2; //@line 27202
  $13 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 27207
  _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $13 << 16 >> 16 == 0 ? 8 : $13 & 65535, tempInt) | 0) | 0; //@line 27211
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 27216
  STACKTOP = sp; //@line 27218
  return;
 } else if (($5 | 0) == 1) {
  $22 = $da + 32 | 0; //@line 27221
  HEAP8[$22] = HEAP8[32792] | 0; //@line 27222
  HEAP8[$22 + 1 | 0] = HEAP8[32793 | 0] | 0; //@line 27222
  HEAP8[$22 + 2 | 0] = HEAP8[32794 | 0] | 0; //@line 27222
  HEAP8[$22 + 3 | 0] = HEAP8[32795 | 0] | 0; //@line 27222
  HEAP8[$22 + 4 | 0] = HEAP8[32796 | 0] | 0; //@line 27222
  HEAP8[$22 + 5 | 0] = HEAP8[32797 | 0] | 0; //@line 27222
  HEAP32[$da + 28 >> 2] = 2; //@line 27224
  $28 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 27229
  _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $28 << 16 >> 16 == 0 ? 8 : $28 & 65535, tempInt) | 0) | 0; //@line 27233
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 27238
  STACKTOP = sp; //@line 27240
  return;
 } else if (($5 | 0) == 6) {
  $98 = $da + 32 | 0; //@line 27243
  HEAP8[$98] = HEAP8[32592] | 0; //@line 27244
  HEAP8[$98 + 1 | 0] = HEAP8[32593 | 0] | 0; //@line 27244
  HEAP8[$98 + 2 | 0] = HEAP8[32594 | 0] | 0; //@line 27244
  HEAP8[$98 + 3 | 0] = HEAP8[32595 | 0] | 0; //@line 27244
  HEAP8[$98 + 4 | 0] = HEAP8[32596 | 0] | 0; //@line 27244
  HEAP8[$98 + 5 | 0] = HEAP8[32597 | 0] | 0; //@line 27244
  HEAP8[$98 + 6 | 0] = HEAP8[32598 | 0] | 0; //@line 27244
  HEAP32[$da + 28 >> 2] = 2; //@line 27246
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 27252
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 27257
  $111 = $da | 0; //@line 27258
  HEAP32[$111 >> 2] = HEAP32[$111 >> 2] | 32; //@line 27261
  STACKTOP = sp; //@line 27263
  return;
 } else if (($5 | 0) == 7) {
  $115 = $da + 32 | 0; //@line 27266
  HEAP8[$115] = HEAP8[32472] | 0; //@line 27267
  HEAP8[$115 + 1 | 0] = HEAP8[32473 | 0] | 0; //@line 27267
  HEAP8[$115 + 2 | 0] = HEAP8[32474 | 0] | 0; //@line 27267
  HEAP8[$115 + 3 | 0] = HEAP8[32475 | 0] | 0; //@line 27267
  HEAP8[$115 + 4 | 0] = HEAP8[32476 | 0] | 0; //@line 27267
  HEAP8[$115 + 5 | 0] = HEAP8[32477 | 0] | 0; //@line 27267
  HEAP32[$da + 28 >> 2] = 2; //@line 27269
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 27275
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 27280
  STACKTOP = sp; //@line 27282
  return;
 } else if (($5 | 0) == 2) {
  $37 = $da + 32 | 0; //@line 27285
  HEAP8[$37] = HEAP8[32592] | 0; //@line 27286
  HEAP8[$37 + 1 | 0] = HEAP8[32593 | 0] | 0; //@line 27286
  HEAP8[$37 + 2 | 0] = HEAP8[32594 | 0] | 0; //@line 27286
  HEAP8[$37 + 3 | 0] = HEAP8[32595 | 0] | 0; //@line 27286
  HEAP8[$37 + 4 | 0] = HEAP8[32596 | 0] | 0; //@line 27286
  HEAP8[$37 + 5 | 0] = HEAP8[32597 | 0] | 0; //@line 27286
  HEAP8[$37 + 6 | 0] = HEAP8[32598 | 0] | 0; //@line 27286
  HEAP32[$da + 28 >> 2] = 2; //@line 27288
  $43 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 27293
  _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $43 << 16 >> 16 == 0 ? 8 : $43 & 65535, tempInt) | 0) | 0; //@line 27297
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 27302
  $51 = $da | 0; //@line 27303
  HEAP32[$51 >> 2] = HEAP32[$51 >> 2] | 32; //@line 27306
  STACKTOP = sp; //@line 27308
  return;
 } else if (($5 | 0) == 3) {
  $55 = $da + 32 | 0; //@line 27311
  HEAP8[$55] = HEAP8[32472] | 0; //@line 27312
  HEAP8[$55 + 1 | 0] = HEAP8[32473 | 0] | 0; //@line 27312
  HEAP8[$55 + 2 | 0] = HEAP8[32474 | 0] | 0; //@line 27312
  HEAP8[$55 + 3 | 0] = HEAP8[32475 | 0] | 0; //@line 27312
  HEAP8[$55 + 4 | 0] = HEAP8[32476 | 0] | 0; //@line 27312
  HEAP8[$55 + 5 | 0] = HEAP8[32477 | 0] | 0; //@line 27312
  HEAP32[$da + 28 >> 2] = 2; //@line 27314
  $61 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 27319
  _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $61 << 16 >> 16 == 0 ? 8 : $61 & 65535, tempInt) | 0) | 0; //@line 27323
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 27328
  STACKTOP = sp; //@line 27330
  return;
 } else {
  $129 = $da + 32 | 0; //@line 27333
  HEAP8[$129] = HEAP8[36120] | 0; //@line 27334
  HEAP8[$129 + 1 | 0] = HEAP8[36121 | 0] | 0; //@line 27334
  HEAP8[$129 + 2 | 0] = HEAP8[36122 | 0] | 0; //@line 27334
  HEAP32[$da + 28 >> 2] = 1; //@line 27336
  $139 = ((HEAPU8[$src] | 0) << 8 | (HEAPU8[$src + 1 | 0] | 0)) & 65535; //@line 27345
  _sprintf($da + 96 | 0, 47464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $139, tempInt) | 0) | 0; //@line 27346
  STACKTOP = sp; //@line 27348
  return;
 }
}
function _d_e040($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $5 = 0, $7 = 0, $13 = 0, $22 = 0, $28 = 0, $37 = 0, $43 = 0, $51 = 0, $55 = 0, $61 = 0, $70 = 0, $72 = 0, $76 = 0, $78 = 0, $81 = 0, $84 = 0, $98 = 0, $111 = 0, $115 = 0, $129 = 0, $139 = 0, sp = 0;
 sp = STACKTOP; //@line 27376
 $1 = $da + 12 | 0; //@line 27377
 $5 = (HEAPU16[$1 >> 1] | 0) >>> 3 & 7; //@line 27381
 if (($5 | 0) == 4) {
  $70 = $da + 32 | 0; //@line 27383
  HEAP8[$70] = HEAP8[34688] | 0; //@line 27384
  HEAP8[$70 + 1 | 0] = HEAP8[34689 | 0] | 0; //@line 27384
  HEAP8[$70 + 2 | 0] = HEAP8[34690 | 0] | 0; //@line 27384
  HEAP8[$70 + 3 | 0] = HEAP8[34691 | 0] | 0; //@line 27384
  HEAP8[$70 + 4 | 0] = HEAP8[34692 | 0] | 0; //@line 27384
  HEAP8[$70 + 5 | 0] = HEAP8[34693 | 0] | 0; //@line 27384
  HEAP32[$da + 28 >> 2] = 2; //@line 27386
  $72 = $da + 96 | 0; //@line 27387
  $76 = (HEAPU8[$src] | 0) >>> 1 & 7; //@line 27391
  _sprintf($72 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $76, tempInt) | 0) | 0; //@line 27392
  $78 = $da + 160 | 0; //@line 27393
  $81 = HEAP16[$1 >> 1] & 7; //@line 27396
  _sprintf($78 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $81, tempInt) | 0) | 0; //@line 27397
  STACKTOP = sp; //@line 27399
  return;
 } else if (($5 | 0) == 3) {
  $55 = $da + 32 | 0; //@line 27402
  HEAP8[$55] = HEAP8[39040] | 0; //@line 27403
  HEAP8[$55 + 1 | 0] = HEAP8[39041 | 0] | 0; //@line 27403
  HEAP8[$55 + 2 | 0] = HEAP8[39042 | 0] | 0; //@line 27403
  HEAP8[$55 + 3 | 0] = HEAP8[39043 | 0] | 0; //@line 27403
  HEAP8[$55 + 4 | 0] = HEAP8[39044 | 0] | 0; //@line 27403
  HEAP8[$55 + 5 | 0] = HEAP8[39045 | 0] | 0; //@line 27403
  HEAP32[$da + 28 >> 2] = 2; //@line 27405
  $61 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 27410
  _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $61 << 16 >> 16 == 0 ? 8 : $61 & 65535, tempInt) | 0) | 0; //@line 27414
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 27419
  STACKTOP = sp; //@line 27421
  return;
 } else if (($5 | 0) == 7) {
  $115 = $da + 32 | 0; //@line 27424
  HEAP8[$115] = HEAP8[39040] | 0; //@line 27425
  HEAP8[$115 + 1 | 0] = HEAP8[39041 | 0] | 0; //@line 27425
  HEAP8[$115 + 2 | 0] = HEAP8[39042 | 0] | 0; //@line 27425
  HEAP8[$115 + 3 | 0] = HEAP8[39043 | 0] | 0; //@line 27425
  HEAP8[$115 + 4 | 0] = HEAP8[39044 | 0] | 0; //@line 27425
  HEAP8[$115 + 5 | 0] = HEAP8[39045 | 0] | 0; //@line 27425
  HEAP32[$da + 28 >> 2] = 2; //@line 27427
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 27433
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 27438
  STACKTOP = sp; //@line 27440
  return;
 } else if (($5 | 0) == 0) {
  $7 = $da + 32 | 0; //@line 27443
  HEAP8[$7] = HEAP8[34688] | 0; //@line 27444
  HEAP8[$7 + 1 | 0] = HEAP8[34689 | 0] | 0; //@line 27444
  HEAP8[$7 + 2 | 0] = HEAP8[34690 | 0] | 0; //@line 27444
  HEAP8[$7 + 3 | 0] = HEAP8[34691 | 0] | 0; //@line 27444
  HEAP8[$7 + 4 | 0] = HEAP8[34692 | 0] | 0; //@line 27444
  HEAP8[$7 + 5 | 0] = HEAP8[34693 | 0] | 0; //@line 27444
  HEAP32[$da + 28 >> 2] = 2; //@line 27446
  $13 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 27451
  _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $13 << 16 >> 16 == 0 ? 8 : $13 & 65535, tempInt) | 0) | 0; //@line 27455
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 27460
  STACKTOP = sp; //@line 27462
  return;
 } else if (($5 | 0) == 2) {
  $37 = $da + 32 | 0; //@line 27465
  HEAP8[$37] = HEAP8[38424] | 0; //@line 27466
  HEAP8[$37 + 1 | 0] = HEAP8[38425 | 0] | 0; //@line 27466
  HEAP8[$37 + 2 | 0] = HEAP8[38426 | 0] | 0; //@line 27466
  HEAP8[$37 + 3 | 0] = HEAP8[38427 | 0] | 0; //@line 27466
  HEAP8[$37 + 4 | 0] = HEAP8[38428 | 0] | 0; //@line 27466
  HEAP8[$37 + 5 | 0] = HEAP8[38429 | 0] | 0; //@line 27466
  HEAP8[$37 + 6 | 0] = HEAP8[38430 | 0] | 0; //@line 27466
  HEAP32[$da + 28 >> 2] = 2; //@line 27468
  $43 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 27473
  _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $43 << 16 >> 16 == 0 ? 8 : $43 & 65535, tempInt) | 0) | 0; //@line 27477
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 27482
  $51 = $da | 0; //@line 27483
  HEAP32[$51 >> 2] = HEAP32[$51 >> 2] | 32; //@line 27486
  STACKTOP = sp; //@line 27488
  return;
 } else if (($5 | 0) == 1) {
  $22 = $da + 32 | 0; //@line 27491
  HEAP8[$22] = HEAP8[37880] | 0; //@line 27492
  HEAP8[$22 + 1 | 0] = HEAP8[37881 | 0] | 0; //@line 27492
  HEAP8[$22 + 2 | 0] = HEAP8[37882 | 0] | 0; //@line 27492
  HEAP8[$22 + 3 | 0] = HEAP8[37883 | 0] | 0; //@line 27492
  HEAP8[$22 + 4 | 0] = HEAP8[37884 | 0] | 0; //@line 27492
  HEAP8[$22 + 5 | 0] = HEAP8[37885 | 0] | 0; //@line 27492
  HEAP32[$da + 28 >> 2] = 2; //@line 27494
  $28 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 27499
  _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $28 << 16 >> 16 == 0 ? 8 : $28 & 65535, tempInt) | 0) | 0; //@line 27503
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 27508
  STACKTOP = sp; //@line 27510
  return;
 } else if (($5 | 0) == 6) {
  $98 = $da + 32 | 0; //@line 27513
  HEAP8[$98] = HEAP8[38424] | 0; //@line 27514
  HEAP8[$98 + 1 | 0] = HEAP8[38425 | 0] | 0; //@line 27514
  HEAP8[$98 + 2 | 0] = HEAP8[38426 | 0] | 0; //@line 27514
  HEAP8[$98 + 3 | 0] = HEAP8[38427 | 0] | 0; //@line 27514
  HEAP8[$98 + 4 | 0] = HEAP8[38428 | 0] | 0; //@line 27514
  HEAP8[$98 + 5 | 0] = HEAP8[38429 | 0] | 0; //@line 27514
  HEAP8[$98 + 6 | 0] = HEAP8[38430 | 0] | 0; //@line 27514
  HEAP32[$da + 28 >> 2] = 2; //@line 27516
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 27522
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 27527
  $111 = $da | 0; //@line 27528
  HEAP32[$111 >> 2] = HEAP32[$111 >> 2] | 32; //@line 27531
  STACKTOP = sp; //@line 27533
  return;
 } else if (($5 | 0) == 5) {
  $84 = $da + 32 | 0; //@line 27536
  HEAP8[$84] = HEAP8[37880] | 0; //@line 27537
  HEAP8[$84 + 1 | 0] = HEAP8[37881 | 0] | 0; //@line 27537
  HEAP8[$84 + 2 | 0] = HEAP8[37882 | 0] | 0; //@line 27537
  HEAP8[$84 + 3 | 0] = HEAP8[37883 | 0] | 0; //@line 27537
  HEAP8[$84 + 4 | 0] = HEAP8[37884 | 0] | 0; //@line 27537
  HEAP8[$84 + 5 | 0] = HEAP8[37885 | 0] | 0; //@line 27537
  HEAP32[$da + 28 >> 2] = 2; //@line 27539
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 27545
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 27550
  STACKTOP = sp; //@line 27552
  return;
 } else {
  $129 = $da + 32 | 0; //@line 27555
  HEAP8[$129] = HEAP8[36120] | 0; //@line 27556
  HEAP8[$129 + 1 | 0] = HEAP8[36121 | 0] | 0; //@line 27556
  HEAP8[$129 + 2 | 0] = HEAP8[36122 | 0] | 0; //@line 27556
  HEAP32[$da + 28 >> 2] = 1; //@line 27558
  $139 = ((HEAPU8[$src] | 0) << 8 | (HEAPU8[$src + 1 | 0] | 0)) & 65535; //@line 27567
  _sprintf($da + 96 | 0, 47464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $139, tempInt) | 0) | 0; //@line 27568
  STACKTOP = sp; //@line 27570
  return;
 }
}
function _d_e080($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $5 = 0, $7 = 0, $13 = 0, $22 = 0, $28 = 0, $37 = 0, $43 = 0, $51 = 0, $55 = 0, $61 = 0, $70 = 0, $72 = 0, $76 = 0, $78 = 0, $81 = 0, $84 = 0, $98 = 0, $111 = 0, $115 = 0, $129 = 0, $139 = 0, sp = 0;
 sp = STACKTOP; //@line 27598
 $1 = $da + 12 | 0; //@line 27599
 $5 = (HEAPU16[$1 >> 1] | 0) >>> 3 & 7; //@line 27603
 if (($5 | 0) == 4) {
  $70 = $da + 32 | 0; //@line 27605
  HEAP8[$70] = HEAP8[34448] | 0; //@line 27606
  HEAP8[$70 + 1 | 0] = HEAP8[34449 | 0] | 0; //@line 27606
  HEAP8[$70 + 2 | 0] = HEAP8[34450 | 0] | 0; //@line 27606
  HEAP8[$70 + 3 | 0] = HEAP8[34451 | 0] | 0; //@line 27606
  HEAP8[$70 + 4 | 0] = HEAP8[34452 | 0] | 0; //@line 27606
  HEAP8[$70 + 5 | 0] = HEAP8[34453 | 0] | 0; //@line 27606
  HEAP32[$da + 28 >> 2] = 2; //@line 27608
  $72 = $da + 96 | 0; //@line 27609
  $76 = (HEAPU8[$src] | 0) >>> 1 & 7; //@line 27613
  _sprintf($72 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $76, tempInt) | 0) | 0; //@line 27614
  $78 = $da + 160 | 0; //@line 27615
  $81 = HEAP16[$1 >> 1] & 7; //@line 27618
  _sprintf($78 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $81, tempInt) | 0) | 0; //@line 27619
  STACKTOP = sp; //@line 27621
  return;
 } else if (($5 | 0) == 5) {
  $84 = $da + 32 | 0; //@line 27624
  HEAP8[$84] = HEAP8[34104] | 0; //@line 27625
  HEAP8[$84 + 1 | 0] = HEAP8[34105 | 0] | 0; //@line 27625
  HEAP8[$84 + 2 | 0] = HEAP8[34106 | 0] | 0; //@line 27625
  HEAP8[$84 + 3 | 0] = HEAP8[34107 | 0] | 0; //@line 27625
  HEAP8[$84 + 4 | 0] = HEAP8[34108 | 0] | 0; //@line 27625
  HEAP8[$84 + 5 | 0] = HEAP8[34109 | 0] | 0; //@line 27625
  HEAP32[$da + 28 >> 2] = 2; //@line 27627
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 27633
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 27638
  STACKTOP = sp; //@line 27640
  return;
 } else if (($5 | 0) == 0) {
  $7 = $da + 32 | 0; //@line 27643
  HEAP8[$7] = HEAP8[34448] | 0; //@line 27644
  HEAP8[$7 + 1 | 0] = HEAP8[34449 | 0] | 0; //@line 27644
  HEAP8[$7 + 2 | 0] = HEAP8[34450 | 0] | 0; //@line 27644
  HEAP8[$7 + 3 | 0] = HEAP8[34451 | 0] | 0; //@line 27644
  HEAP8[$7 + 4 | 0] = HEAP8[34452 | 0] | 0; //@line 27644
  HEAP8[$7 + 5 | 0] = HEAP8[34453 | 0] | 0; //@line 27644
  HEAP32[$da + 28 >> 2] = 2; //@line 27646
  $13 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 27651
  _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $13 << 16 >> 16 == 0 ? 8 : $13 & 65535, tempInt) | 0) | 0; //@line 27655
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 27660
  STACKTOP = sp; //@line 27662
  return;
 } else if (($5 | 0) == 1) {
  $22 = $da + 32 | 0; //@line 27665
  HEAP8[$22] = HEAP8[34104] | 0; //@line 27666
  HEAP8[$22 + 1 | 0] = HEAP8[34105 | 0] | 0; //@line 27666
  HEAP8[$22 + 2 | 0] = HEAP8[34106 | 0] | 0; //@line 27666
  HEAP8[$22 + 3 | 0] = HEAP8[34107 | 0] | 0; //@line 27666
  HEAP8[$22 + 4 | 0] = HEAP8[34108 | 0] | 0; //@line 27666
  HEAP8[$22 + 5 | 0] = HEAP8[34109 | 0] | 0; //@line 27666
  HEAP32[$da + 28 >> 2] = 2; //@line 27668
  $28 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 27673
  _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $28 << 16 >> 16 == 0 ? 8 : $28 & 65535, tempInt) | 0) | 0; //@line 27677
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 27682
  STACKTOP = sp; //@line 27684
  return;
 } else if (($5 | 0) == 6) {
  $98 = $da + 32 | 0; //@line 27687
  HEAP8[$98] = HEAP8[33856] | 0; //@line 27688
  HEAP8[$98 + 1 | 0] = HEAP8[33857 | 0] | 0; //@line 27688
  HEAP8[$98 + 2 | 0] = HEAP8[33858 | 0] | 0; //@line 27688
  HEAP8[$98 + 3 | 0] = HEAP8[33859 | 0] | 0; //@line 27688
  HEAP8[$98 + 4 | 0] = HEAP8[33860 | 0] | 0; //@line 27688
  HEAP8[$98 + 5 | 0] = HEAP8[33861 | 0] | 0; //@line 27688
  HEAP8[$98 + 6 | 0] = HEAP8[33862 | 0] | 0; //@line 27688
  HEAP32[$da + 28 >> 2] = 2; //@line 27690
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 27696
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 27701
  $111 = $da | 0; //@line 27702
  HEAP32[$111 >> 2] = HEAP32[$111 >> 2] | 32; //@line 27705
  STACKTOP = sp; //@line 27707
  return;
 } else if (($5 | 0) == 7) {
  $115 = $da + 32 | 0; //@line 27710
  HEAP8[$115] = HEAP8[33536] | 0; //@line 27711
  HEAP8[$115 + 1 | 0] = HEAP8[33537 | 0] | 0; //@line 27711
  HEAP8[$115 + 2 | 0] = HEAP8[33538 | 0] | 0; //@line 27711
  HEAP8[$115 + 3 | 0] = HEAP8[33539 | 0] | 0; //@line 27711
  HEAP8[$115 + 4 | 0] = HEAP8[33540 | 0] | 0; //@line 27711
  HEAP8[$115 + 5 | 0] = HEAP8[33541 | 0] | 0; //@line 27711
  HEAP32[$da + 28 >> 2] = 2; //@line 27713
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 27719
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 27724
  STACKTOP = sp; //@line 27726
  return;
 } else if (($5 | 0) == 2) {
  $37 = $da + 32 | 0; //@line 27729
  HEAP8[$37] = HEAP8[33856] | 0; //@line 27730
  HEAP8[$37 + 1 | 0] = HEAP8[33857 | 0] | 0; //@line 27730
  HEAP8[$37 + 2 | 0] = HEAP8[33858 | 0] | 0; //@line 27730
  HEAP8[$37 + 3 | 0] = HEAP8[33859 | 0] | 0; //@line 27730
  HEAP8[$37 + 4 | 0] = HEAP8[33860 | 0] | 0; //@line 27730
  HEAP8[$37 + 5 | 0] = HEAP8[33861 | 0] | 0; //@line 27730
  HEAP8[$37 + 6 | 0] = HEAP8[33862 | 0] | 0; //@line 27730
  HEAP32[$da + 28 >> 2] = 2; //@line 27732
  $43 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 27737
  _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $43 << 16 >> 16 == 0 ? 8 : $43 & 65535, tempInt) | 0) | 0; //@line 27741
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 27746
  $51 = $da | 0; //@line 27747
  HEAP32[$51 >> 2] = HEAP32[$51 >> 2] | 32; //@line 27750
  STACKTOP = sp; //@line 27752
  return;
 } else if (($5 | 0) == 3) {
  $55 = $da + 32 | 0; //@line 27755
  HEAP8[$55] = HEAP8[33536] | 0; //@line 27756
  HEAP8[$55 + 1 | 0] = HEAP8[33537 | 0] | 0; //@line 27756
  HEAP8[$55 + 2 | 0] = HEAP8[33538 | 0] | 0; //@line 27756
  HEAP8[$55 + 3 | 0] = HEAP8[33539 | 0] | 0; //@line 27756
  HEAP8[$55 + 4 | 0] = HEAP8[33540 | 0] | 0; //@line 27756
  HEAP8[$55 + 5 | 0] = HEAP8[33541 | 0] | 0; //@line 27756
  HEAP32[$da + 28 >> 2] = 2; //@line 27758
  $61 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 27763
  _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $61 << 16 >> 16 == 0 ? 8 : $61 & 65535, tempInt) | 0) | 0; //@line 27767
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 27772
  STACKTOP = sp; //@line 27774
  return;
 } else {
  $129 = $da + 32 | 0; //@line 27777
  HEAP8[$129] = HEAP8[36120] | 0; //@line 27778
  HEAP8[$129 + 1 | 0] = HEAP8[36121 | 0] | 0; //@line 27778
  HEAP8[$129 + 2 | 0] = HEAP8[36122 | 0] | 0; //@line 27778
  HEAP32[$da + 28 >> 2] = 1; //@line 27780
  $139 = ((HEAPU8[$src] | 0) << 8 | (HEAPU8[$src + 1 | 0] | 0)) & 65535; //@line 27789
  _sprintf($da + 96 | 0, 47464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $139, tempInt) | 0) | 0; //@line 27790
  STACKTOP = sp; //@line 27792
  return;
 }
}
function _d_e0c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0;
 $1 = $da + 32 | 0; //@line 27804
 HEAP8[$1] = HEAP8[34688] | 0; //@line 27805
 HEAP8[$1 + 1 | 0] = HEAP8[34689 | 0] | 0; //@line 27805
 HEAP8[$1 + 2 | 0] = HEAP8[34690 | 0] | 0; //@line 27805
 HEAP8[$1 + 3 | 0] = HEAP8[34691 | 0] | 0; //@line 27805
 HEAP8[$1 + 4 | 0] = HEAP8[34692 | 0] | 0; //@line 27805
 HEAP8[$1 + 5 | 0] = HEAP8[34693 | 0] | 0; //@line 27805
 HEAP32[$da + 28 >> 2] = 1; //@line 27807
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 27813
 return;
}
function _d_e100($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $5 = 0, $7 = 0, $13 = 0, $22 = 0, $28 = 0, $37 = 0, $43 = 0, $51 = 0, $55 = 0, $61 = 0, $70 = 0, $84 = 0, $86 = 0, $90 = 0, $92 = 0, $95 = 0, $98 = 0, $111 = 0, $115 = 0, $129 = 0, $139 = 0, sp = 0;
 sp = STACKTOP; //@line 27841
 $1 = $da + 12 | 0; //@line 27842
 $5 = (HEAPU16[$1 >> 1] | 0) >>> 3 & 7; //@line 27846
 if (($5 | 0) == 5) {
  $84 = $da + 32 | 0; //@line 27848
  HEAP8[$84] = HEAP8[35496] | 0; //@line 27849
  HEAP8[$84 + 1 | 0] = HEAP8[35497 | 0] | 0; //@line 27849
  HEAP8[$84 + 2 | 0] = HEAP8[35498 | 0] | 0; //@line 27849
  HEAP8[$84 + 3 | 0] = HEAP8[35499 | 0] | 0; //@line 27849
  HEAP8[$84 + 4 | 0] = HEAP8[35500 | 0] | 0; //@line 27849
  HEAP8[$84 + 5 | 0] = HEAP8[35501 | 0] | 0; //@line 27849
  HEAP32[$da + 28 >> 2] = 2; //@line 27851
  $86 = $da + 96 | 0; //@line 27852
  $90 = (HEAPU8[$src] | 0) >>> 1 & 7; //@line 27856
  _sprintf($86 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $90, tempInt) | 0) | 0; //@line 27857
  $92 = $da + 160 | 0; //@line 27858
  $95 = HEAP16[$1 >> 1] & 7; //@line 27861
  _sprintf($92 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $95, tempInt) | 0) | 0; //@line 27862
  STACKTOP = sp; //@line 27864
  return;
 } else if (($5 | 0) == 4) {
  $70 = $da + 32 | 0; //@line 27867
  HEAP8[$70] = HEAP8[35824] | 0; //@line 27868
  HEAP8[$70 + 1 | 0] = HEAP8[35825 | 0] | 0; //@line 27868
  HEAP8[$70 + 2 | 0] = HEAP8[35826 | 0] | 0; //@line 27868
  HEAP8[$70 + 3 | 0] = HEAP8[35827 | 0] | 0; //@line 27868
  HEAP8[$70 + 4 | 0] = HEAP8[35828 | 0] | 0; //@line 27868
  HEAP8[$70 + 5 | 0] = HEAP8[35829 | 0] | 0; //@line 27868
  HEAP32[$da + 28 >> 2] = 2; //@line 27870
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 27876
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 27881
  STACKTOP = sp; //@line 27883
  return;
 } else if (($5 | 0) == 1) {
  $22 = $da + 32 | 0; //@line 27886
  HEAP8[$22] = HEAP8[35496] | 0; //@line 27887
  HEAP8[$22 + 1 | 0] = HEAP8[35497 | 0] | 0; //@line 27887
  HEAP8[$22 + 2 | 0] = HEAP8[35498 | 0] | 0; //@line 27887
  HEAP8[$22 + 3 | 0] = HEAP8[35499 | 0] | 0; //@line 27887
  HEAP8[$22 + 4 | 0] = HEAP8[35500 | 0] | 0; //@line 27887
  HEAP8[$22 + 5 | 0] = HEAP8[35501 | 0] | 0; //@line 27887
  HEAP32[$da + 28 >> 2] = 2; //@line 27889
  $28 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 27894
  _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $28 << 16 >> 16 == 0 ? 8 : $28 & 65535, tempInt) | 0) | 0; //@line 27898
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 27903
  STACKTOP = sp; //@line 27905
  return;
 } else if (($5 | 0) == 3) {
  $55 = $da + 32 | 0; //@line 27908
  HEAP8[$55] = HEAP8[34928] | 0; //@line 27909
  HEAP8[$55 + 1 | 0] = HEAP8[34929 | 0] | 0; //@line 27909
  HEAP8[$55 + 2 | 0] = HEAP8[34930 | 0] | 0; //@line 27909
  HEAP8[$55 + 3 | 0] = HEAP8[34931 | 0] | 0; //@line 27909
  HEAP8[$55 + 4 | 0] = HEAP8[34932 | 0] | 0; //@line 27909
  HEAP8[$55 + 5 | 0] = HEAP8[34933 | 0] | 0; //@line 27909
  HEAP32[$da + 28 >> 2] = 2; //@line 27911
  $61 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 27916
  _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $61 << 16 >> 16 == 0 ? 8 : $61 & 65535, tempInt) | 0) | 0; //@line 27920
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 27925
  STACKTOP = sp; //@line 27927
  return;
 } else if (($5 | 0) == 2) {
  $37 = $da + 32 | 0; //@line 27930
  HEAP8[$37] = HEAP8[35232] | 0; //@line 27931
  HEAP8[$37 + 1 | 0] = HEAP8[35233 | 0] | 0; //@line 27931
  HEAP8[$37 + 2 | 0] = HEAP8[35234 | 0] | 0; //@line 27931
  HEAP8[$37 + 3 | 0] = HEAP8[35235 | 0] | 0; //@line 27931
  HEAP8[$37 + 4 | 0] = HEAP8[35236 | 0] | 0; //@line 27931
  HEAP8[$37 + 5 | 0] = HEAP8[35237 | 0] | 0; //@line 27931
  HEAP8[$37 + 6 | 0] = HEAP8[35238 | 0] | 0; //@line 27931
  HEAP32[$da + 28 >> 2] = 2; //@line 27933
  $43 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 27938
  _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $43 << 16 >> 16 == 0 ? 8 : $43 & 65535, tempInt) | 0) | 0; //@line 27942
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 27947
  $51 = $da | 0; //@line 27948
  HEAP32[$51 >> 2] = HEAP32[$51 >> 2] | 32; //@line 27951
  STACKTOP = sp; //@line 27953
  return;
 } else if (($5 | 0) == 7) {
  $115 = $da + 32 | 0; //@line 27956
  HEAP8[$115] = HEAP8[34928] | 0; //@line 27957
  HEAP8[$115 + 1 | 0] = HEAP8[34929 | 0] | 0; //@line 27957
  HEAP8[$115 + 2 | 0] = HEAP8[34930 | 0] | 0; //@line 27957
  HEAP8[$115 + 3 | 0] = HEAP8[34931 | 0] | 0; //@line 27957
  HEAP8[$115 + 4 | 0] = HEAP8[34932 | 0] | 0; //@line 27957
  HEAP8[$115 + 5 | 0] = HEAP8[34933 | 0] | 0; //@line 27957
  HEAP32[$da + 28 >> 2] = 2; //@line 27959
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 27965
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 27970
  STACKTOP = sp; //@line 27972
  return;
 } else if (($5 | 0) == 6) {
  $98 = $da + 32 | 0; //@line 27975
  HEAP8[$98] = HEAP8[35232] | 0; //@line 27976
  HEAP8[$98 + 1 | 0] = HEAP8[35233 | 0] | 0; //@line 27976
  HEAP8[$98 + 2 | 0] = HEAP8[35234 | 0] | 0; //@line 27976
  HEAP8[$98 + 3 | 0] = HEAP8[35235 | 0] | 0; //@line 27976
  HEAP8[$98 + 4 | 0] = HEAP8[35236 | 0] | 0; //@line 27976
  HEAP8[$98 + 5 | 0] = HEAP8[35237 | 0] | 0; //@line 27976
  HEAP8[$98 + 6 | 0] = HEAP8[35238 | 0] | 0; //@line 27976
  HEAP32[$da + 28 >> 2] = 2; //@line 27978
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 27984
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 27989
  $111 = $da | 0; //@line 27990
  HEAP32[$111 >> 2] = HEAP32[$111 >> 2] | 32; //@line 27993
  STACKTOP = sp; //@line 27995
  return;
 } else if (($5 | 0) == 0) {
  $7 = $da + 32 | 0; //@line 27998
  HEAP8[$7] = HEAP8[35824] | 0; //@line 27999
  HEAP8[$7 + 1 | 0] = HEAP8[35825 | 0] | 0; //@line 27999
  HEAP8[$7 + 2 | 0] = HEAP8[35826 | 0] | 0; //@line 27999
  HEAP8[$7 + 3 | 0] = HEAP8[35827 | 0] | 0; //@line 27999
  HEAP8[$7 + 4 | 0] = HEAP8[35828 | 0] | 0; //@line 27999
  HEAP8[$7 + 5 | 0] = HEAP8[35829 | 0] | 0; //@line 27999
  HEAP32[$da + 28 >> 2] = 2; //@line 28001
  $13 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 28006
  _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $13 << 16 >> 16 == 0 ? 8 : $13 & 65535, tempInt) | 0) | 0; //@line 28010
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 28015
  STACKTOP = sp; //@line 28017
  return;
 } else {
  $129 = $da + 32 | 0; //@line 28020
  HEAP8[$129] = HEAP8[36120] | 0; //@line 28021
  HEAP8[$129 + 1 | 0] = HEAP8[36121 | 0] | 0; //@line 28021
  HEAP8[$129 + 2 | 0] = HEAP8[36122 | 0] | 0; //@line 28021
  HEAP32[$da + 28 >> 2] = 1; //@line 28023
  $139 = ((HEAPU8[$src] | 0) << 8 | (HEAPU8[$src + 1 | 0] | 0)) & 65535; //@line 28032
  _sprintf($da + 96 | 0, 47464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $139, tempInt) | 0) | 0; //@line 28033
  STACKTOP = sp; //@line 28035
  return;
 }
}
function _d_e140($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $5 = 0, $7 = 0, $13 = 0, $22 = 0, $28 = 0, $37 = 0, $43 = 0, $51 = 0, $55 = 0, $61 = 0, $70 = 0, $72 = 0, $76 = 0, $78 = 0, $81 = 0, $84 = 0, $98 = 0, $111 = 0, $115 = 0, $129 = 0, $139 = 0, sp = 0;
 sp = STACKTOP; //@line 28063
 $1 = $da + 12 | 0; //@line 28064
 $5 = (HEAPU16[$1 >> 1] | 0) >>> 3 & 7; //@line 28068
 if (($5 | 0) == 4) {
  $70 = $da + 32 | 0; //@line 28070
  HEAP8[$70] = HEAP8[37632] | 0; //@line 28071
  HEAP8[$70 + 1 | 0] = HEAP8[37633 | 0] | 0; //@line 28071
  HEAP8[$70 + 2 | 0] = HEAP8[37634 | 0] | 0; //@line 28071
  HEAP8[$70 + 3 | 0] = HEAP8[37635 | 0] | 0; //@line 28071
  HEAP8[$70 + 4 | 0] = HEAP8[37636 | 0] | 0; //@line 28071
  HEAP8[$70 + 5 | 0] = HEAP8[37637 | 0] | 0; //@line 28071
  HEAP32[$da + 28 >> 2] = 2; //@line 28073
  $72 = $da + 96 | 0; //@line 28074
  $76 = (HEAPU8[$src] | 0) >>> 1 & 7; //@line 28078
  _sprintf($72 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $76, tempInt) | 0) | 0; //@line 28079
  $78 = $da + 160 | 0; //@line 28080
  $81 = HEAP16[$1 >> 1] & 7; //@line 28083
  _sprintf($78 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $81, tempInt) | 0) | 0; //@line 28084
  STACKTOP = sp; //@line 28086
  return;
 } else if (($5 | 0) == 5) {
  $84 = $da + 32 | 0; //@line 28089
  HEAP8[$84] = HEAP8[38136] | 0; //@line 28090
  HEAP8[$84 + 1 | 0] = HEAP8[38137 | 0] | 0; //@line 28090
  HEAP8[$84 + 2 | 0] = HEAP8[38138 | 0] | 0; //@line 28090
  HEAP8[$84 + 3 | 0] = HEAP8[38139 | 0] | 0; //@line 28090
  HEAP8[$84 + 4 | 0] = HEAP8[38140 | 0] | 0; //@line 28090
  HEAP8[$84 + 5 | 0] = HEAP8[38141 | 0] | 0; //@line 28090
  HEAP32[$da + 28 >> 2] = 2; //@line 28092
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 28098
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 28103
  STACKTOP = sp; //@line 28105
  return;
 } else if (($5 | 0) == 1) {
  $22 = $da + 32 | 0; //@line 28108
  HEAP8[$22] = HEAP8[38136] | 0; //@line 28109
  HEAP8[$22 + 1 | 0] = HEAP8[38137 | 0] | 0; //@line 28109
  HEAP8[$22 + 2 | 0] = HEAP8[38138 | 0] | 0; //@line 28109
  HEAP8[$22 + 3 | 0] = HEAP8[38139 | 0] | 0; //@line 28109
  HEAP8[$22 + 4 | 0] = HEAP8[38140 | 0] | 0; //@line 28109
  HEAP8[$22 + 5 | 0] = HEAP8[38141 | 0] | 0; //@line 28109
  HEAP32[$da + 28 >> 2] = 2; //@line 28111
  $28 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 28116
  _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $28 << 16 >> 16 == 0 ? 8 : $28 & 65535, tempInt) | 0) | 0; //@line 28120
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 28125
  STACKTOP = sp; //@line 28127
  return;
 } else if (($5 | 0) == 6) {
  $98 = $da + 32 | 0; //@line 28130
  HEAP8[$98] = HEAP8[38728] | 0; //@line 28131
  HEAP8[$98 + 1 | 0] = HEAP8[38729 | 0] | 0; //@line 28131
  HEAP8[$98 + 2 | 0] = HEAP8[38730 | 0] | 0; //@line 28131
  HEAP8[$98 + 3 | 0] = HEAP8[38731 | 0] | 0; //@line 28131
  HEAP8[$98 + 4 | 0] = HEAP8[38732 | 0] | 0; //@line 28131
  HEAP8[$98 + 5 | 0] = HEAP8[38733 | 0] | 0; //@line 28131
  HEAP8[$98 + 6 | 0] = HEAP8[38734 | 0] | 0; //@line 28131
  HEAP32[$da + 28 >> 2] = 2; //@line 28133
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 28139
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 28144
  $111 = $da | 0; //@line 28145
  HEAP32[$111 >> 2] = HEAP32[$111 >> 2] | 32; //@line 28148
  STACKTOP = sp; //@line 28150
  return;
 } else if (($5 | 0) == 7) {
  $115 = $da + 32 | 0; //@line 28153
  HEAP8[$115] = HEAP8[39480] | 0; //@line 28154
  HEAP8[$115 + 1 | 0] = HEAP8[39481 | 0] | 0; //@line 28154
  HEAP8[$115 + 2 | 0] = HEAP8[39482 | 0] | 0; //@line 28154
  HEAP8[$115 + 3 | 0] = HEAP8[39483 | 0] | 0; //@line 28154
  HEAP8[$115 + 4 | 0] = HEAP8[39484 | 0] | 0; //@line 28154
  HEAP8[$115 + 5 | 0] = HEAP8[39485 | 0] | 0; //@line 28154
  HEAP32[$da + 28 >> 2] = 2; //@line 28156
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 28162
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 28167
  STACKTOP = sp; //@line 28169
  return;
 } else if (($5 | 0) == 2) {
  $37 = $da + 32 | 0; //@line 28172
  HEAP8[$37] = HEAP8[38728] | 0; //@line 28173
  HEAP8[$37 + 1 | 0] = HEAP8[38729 | 0] | 0; //@line 28173
  HEAP8[$37 + 2 | 0] = HEAP8[38730 | 0] | 0; //@line 28173
  HEAP8[$37 + 3 | 0] = HEAP8[38731 | 0] | 0; //@line 28173
  HEAP8[$37 + 4 | 0] = HEAP8[38732 | 0] | 0; //@line 28173
  HEAP8[$37 + 5 | 0] = HEAP8[38733 | 0] | 0; //@line 28173
  HEAP8[$37 + 6 | 0] = HEAP8[38734 | 0] | 0; //@line 28173
  HEAP32[$da + 28 >> 2] = 2; //@line 28175
  $43 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 28180
  _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $43 << 16 >> 16 == 0 ? 8 : $43 & 65535, tempInt) | 0) | 0; //@line 28184
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 28189
  $51 = $da | 0; //@line 28190
  HEAP32[$51 >> 2] = HEAP32[$51 >> 2] | 32; //@line 28193
  STACKTOP = sp; //@line 28195
  return;
 } else if (($5 | 0) == 3) {
  $55 = $da + 32 | 0; //@line 28198
  HEAP8[$55] = HEAP8[39480] | 0; //@line 28199
  HEAP8[$55 + 1 | 0] = HEAP8[39481 | 0] | 0; //@line 28199
  HEAP8[$55 + 2 | 0] = HEAP8[39482 | 0] | 0; //@line 28199
  HEAP8[$55 + 3 | 0] = HEAP8[39483 | 0] | 0; //@line 28199
  HEAP8[$55 + 4 | 0] = HEAP8[39484 | 0] | 0; //@line 28199
  HEAP8[$55 + 5 | 0] = HEAP8[39485 | 0] | 0; //@line 28199
  HEAP32[$da + 28 >> 2] = 2; //@line 28201
  $61 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 28206
  _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $61 << 16 >> 16 == 0 ? 8 : $61 & 65535, tempInt) | 0) | 0; //@line 28210
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 28215
  STACKTOP = sp; //@line 28217
  return;
 } else if (($5 | 0) == 0) {
  $7 = $da + 32 | 0; //@line 28220
  HEAP8[$7] = HEAP8[37632] | 0; //@line 28221
  HEAP8[$7 + 1 | 0] = HEAP8[37633 | 0] | 0; //@line 28221
  HEAP8[$7 + 2 | 0] = HEAP8[37634 | 0] | 0; //@line 28221
  HEAP8[$7 + 3 | 0] = HEAP8[37635 | 0] | 0; //@line 28221
  HEAP8[$7 + 4 | 0] = HEAP8[37636 | 0] | 0; //@line 28221
  HEAP8[$7 + 5 | 0] = HEAP8[37637 | 0] | 0; //@line 28221
  HEAP32[$da + 28 >> 2] = 2; //@line 28223
  $13 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 28228
  _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $13 << 16 >> 16 == 0 ? 8 : $13 & 65535, tempInt) | 0) | 0; //@line 28232
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 28237
  STACKTOP = sp; //@line 28239
  return;
 } else {
  $129 = $da + 32 | 0; //@line 28242
  HEAP8[$129] = HEAP8[36120] | 0; //@line 28243
  HEAP8[$129 + 1 | 0] = HEAP8[36121 | 0] | 0; //@line 28243
  HEAP8[$129 + 2 | 0] = HEAP8[36122 | 0] | 0; //@line 28243
  HEAP32[$da + 28 >> 2] = 1; //@line 28245
  $139 = ((HEAPU8[$src] | 0) << 8 | (HEAPU8[$src + 1 | 0] | 0)) & 65535; //@line 28254
  _sprintf($da + 96 | 0, 47464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $139, tempInt) | 0) | 0; //@line 28255
  STACKTOP = sp; //@line 28257
  return;
 }
}
function _d_e180($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $5 = 0, $7 = 0, $13 = 0, $22 = 0, $28 = 0, $37 = 0, $43 = 0, $51 = 0, $55 = 0, $61 = 0, $70 = 0, $84 = 0, $86 = 0, $90 = 0, $92 = 0, $95 = 0, $98 = 0, $111 = 0, $115 = 0, $129 = 0, $139 = 0, sp = 0;
 sp = STACKTOP; //@line 28285
 $1 = $da + 12 | 0; //@line 28286
 $5 = (HEAPU16[$1 >> 1] | 0) >>> 3 & 7; //@line 28290
 if (($5 | 0) == 5) {
  $84 = $da + 32 | 0; //@line 28292
  HEAP8[$84] = HEAP8[37144] | 0; //@line 28293
  HEAP8[$84 + 1 | 0] = HEAP8[37145 | 0] | 0; //@line 28293
  HEAP8[$84 + 2 | 0] = HEAP8[37146 | 0] | 0; //@line 28293
  HEAP8[$84 + 3 | 0] = HEAP8[37147 | 0] | 0; //@line 28293
  HEAP8[$84 + 4 | 0] = HEAP8[37148 | 0] | 0; //@line 28293
  HEAP8[$84 + 5 | 0] = HEAP8[37149 | 0] | 0; //@line 28293
  HEAP32[$da + 28 >> 2] = 2; //@line 28295
  $86 = $da + 96 | 0; //@line 28296
  $90 = (HEAPU8[$src] | 0) >>> 1 & 7; //@line 28300
  _sprintf($86 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $90, tempInt) | 0) | 0; //@line 28301
  $92 = $da + 160 | 0; //@line 28302
  $95 = HEAP16[$1 >> 1] & 7; //@line 28305
  _sprintf($92 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $95, tempInt) | 0) | 0; //@line 28306
  STACKTOP = sp; //@line 28308
  return;
 } else if (($5 | 0) == 4) {
  $70 = $da + 32 | 0; //@line 28311
  HEAP8[$70] = HEAP8[37344] | 0; //@line 28312
  HEAP8[$70 + 1 | 0] = HEAP8[37345 | 0] | 0; //@line 28312
  HEAP8[$70 + 2 | 0] = HEAP8[37346 | 0] | 0; //@line 28312
  HEAP8[$70 + 3 | 0] = HEAP8[37347 | 0] | 0; //@line 28312
  HEAP8[$70 + 4 | 0] = HEAP8[37348 | 0] | 0; //@line 28312
  HEAP8[$70 + 5 | 0] = HEAP8[37349 | 0] | 0; //@line 28312
  HEAP32[$da + 28 >> 2] = 2; //@line 28314
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 28320
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 28325
  STACKTOP = sp; //@line 28327
  return;
 } else if (($5 | 0) == 1) {
  $22 = $da + 32 | 0; //@line 28330
  HEAP8[$22] = HEAP8[37144] | 0; //@line 28331
  HEAP8[$22 + 1 | 0] = HEAP8[37145 | 0] | 0; //@line 28331
  HEAP8[$22 + 2 | 0] = HEAP8[37146 | 0] | 0; //@line 28331
  HEAP8[$22 + 3 | 0] = HEAP8[37147 | 0] | 0; //@line 28331
  HEAP8[$22 + 4 | 0] = HEAP8[37148 | 0] | 0; //@line 28331
  HEAP8[$22 + 5 | 0] = HEAP8[37149 | 0] | 0; //@line 28331
  HEAP32[$da + 28 >> 2] = 2; //@line 28333
  $28 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 28338
  _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $28 << 16 >> 16 == 0 ? 8 : $28 & 65535, tempInt) | 0) | 0; //@line 28342
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 28347
  STACKTOP = sp; //@line 28349
  return;
 } else if (($5 | 0) == 3) {
  $55 = $da + 32 | 0; //@line 28352
  HEAP8[$55] = HEAP8[36536] | 0; //@line 28353
  HEAP8[$55 + 1 | 0] = HEAP8[36537 | 0] | 0; //@line 28353
  HEAP8[$55 + 2 | 0] = HEAP8[36538 | 0] | 0; //@line 28353
  HEAP8[$55 + 3 | 0] = HEAP8[36539 | 0] | 0; //@line 28353
  HEAP8[$55 + 4 | 0] = HEAP8[36540 | 0] | 0; //@line 28353
  HEAP8[$55 + 5 | 0] = HEAP8[36541 | 0] | 0; //@line 28353
  HEAP32[$da + 28 >> 2] = 2; //@line 28355
  $61 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 28360
  _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $61 << 16 >> 16 == 0 ? 8 : $61 & 65535, tempInt) | 0) | 0; //@line 28364
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 28369
  STACKTOP = sp; //@line 28371
  return;
 } else if (($5 | 0) == 2) {
  $37 = $da + 32 | 0; //@line 28374
  HEAP8[$37] = HEAP8[36912] | 0; //@line 28375
  HEAP8[$37 + 1 | 0] = HEAP8[36913 | 0] | 0; //@line 28375
  HEAP8[$37 + 2 | 0] = HEAP8[36914 | 0] | 0; //@line 28375
  HEAP8[$37 + 3 | 0] = HEAP8[36915 | 0] | 0; //@line 28375
  HEAP8[$37 + 4 | 0] = HEAP8[36916 | 0] | 0; //@line 28375
  HEAP8[$37 + 5 | 0] = HEAP8[36917 | 0] | 0; //@line 28375
  HEAP8[$37 + 6 | 0] = HEAP8[36918 | 0] | 0; //@line 28375
  HEAP32[$da + 28 >> 2] = 2; //@line 28377
  $43 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 28382
  _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $43 << 16 >> 16 == 0 ? 8 : $43 & 65535, tempInt) | 0) | 0; //@line 28386
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 28391
  $51 = $da | 0; //@line 28392
  HEAP32[$51 >> 2] = HEAP32[$51 >> 2] | 32; //@line 28395
  STACKTOP = sp; //@line 28397
  return;
 } else if (($5 | 0) == 7) {
  $115 = $da + 32 | 0; //@line 28400
  HEAP8[$115] = HEAP8[36536] | 0; //@line 28401
  HEAP8[$115 + 1 | 0] = HEAP8[36537 | 0] | 0; //@line 28401
  HEAP8[$115 + 2 | 0] = HEAP8[36538 | 0] | 0; //@line 28401
  HEAP8[$115 + 3 | 0] = HEAP8[36539 | 0] | 0; //@line 28401
  HEAP8[$115 + 4 | 0] = HEAP8[36540 | 0] | 0; //@line 28401
  HEAP8[$115 + 5 | 0] = HEAP8[36541 | 0] | 0; //@line 28401
  HEAP32[$da + 28 >> 2] = 2; //@line 28403
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 28409
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 28414
  STACKTOP = sp; //@line 28416
  return;
 } else if (($5 | 0) == 0) {
  $7 = $da + 32 | 0; //@line 28419
  HEAP8[$7] = HEAP8[37344] | 0; //@line 28420
  HEAP8[$7 + 1 | 0] = HEAP8[37345 | 0] | 0; //@line 28420
  HEAP8[$7 + 2 | 0] = HEAP8[37346 | 0] | 0; //@line 28420
  HEAP8[$7 + 3 | 0] = HEAP8[37347 | 0] | 0; //@line 28420
  HEAP8[$7 + 4 | 0] = HEAP8[37348 | 0] | 0; //@line 28420
  HEAP8[$7 + 5 | 0] = HEAP8[37349 | 0] | 0; //@line 28420
  HEAP32[$da + 28 >> 2] = 2; //@line 28422
  $13 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 28427
  _sprintf($da + 96 | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $13 << 16 >> 16 == 0 ? 8 : $13 & 65535, tempInt) | 0) | 0; //@line 28431
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 28436
  STACKTOP = sp; //@line 28438
  return;
 } else if (($5 | 0) == 6) {
  $98 = $da + 32 | 0; //@line 28441
  HEAP8[$98] = HEAP8[36912] | 0; //@line 28442
  HEAP8[$98 + 1 | 0] = HEAP8[36913 | 0] | 0; //@line 28442
  HEAP8[$98 + 2 | 0] = HEAP8[36914 | 0] | 0; //@line 28442
  HEAP8[$98 + 3 | 0] = HEAP8[36915 | 0] | 0; //@line 28442
  HEAP8[$98 + 4 | 0] = HEAP8[36916 | 0] | 0; //@line 28442
  HEAP8[$98 + 5 | 0] = HEAP8[36917 | 0] | 0; //@line 28442
  HEAP8[$98 + 6 | 0] = HEAP8[36918 | 0] | 0; //@line 28442
  HEAP32[$da + 28 >> 2] = 2; //@line 28444
  _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 28450
  _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$1 >> 1] & 7, tempInt) | 0) | 0; //@line 28455
  $111 = $da | 0; //@line 28456
  HEAP32[$111 >> 2] = HEAP32[$111 >> 2] | 32; //@line 28459
  STACKTOP = sp; //@line 28461
  return;
 } else {
  $129 = $da + 32 | 0; //@line 28464
  HEAP8[$129] = HEAP8[36120] | 0; //@line 28465
  HEAP8[$129 + 1 | 0] = HEAP8[36121 | 0] | 0; //@line 28465
  HEAP8[$129 + 2 | 0] = HEAP8[36122 | 0] | 0; //@line 28465
  HEAP32[$da + 28 >> 2] = 1; //@line 28467
  $139 = ((HEAPU8[$src] | 0) << 8 | (HEAPU8[$src + 1 | 0] | 0)) & 65535; //@line 28476
  _sprintf($da + 96 | 0, 47464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $139, tempInt) | 0) | 0; //@line 28477
  STACKTOP = sp; //@line 28479
  return;
 }
}
function _d_e1c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0;
 $1 = $da + 32 | 0; //@line 28491
 HEAP8[$1] = HEAP8[37632] | 0; //@line 28492
 HEAP8[$1 + 1 | 0] = HEAP8[37633 | 0] | 0; //@line 28492
 HEAP8[$1 + 2 | 0] = HEAP8[37634 | 0] | 0; //@line 28492
 HEAP8[$1 + 3 | 0] = HEAP8[37635 | 0] | 0; //@line 28492
 HEAP8[$1 + 4 | 0] = HEAP8[37636 | 0] | 0; //@line 28492
 HEAP8[$1 + 5 | 0] = HEAP8[37637 | 0] | 0; //@line 28492
 HEAP32[$da + 28 >> 2] = 1; //@line 28494
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 28500
 return;
}
function _d_e2c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0;
 $1 = $da + 32 | 0; //@line 28512
 HEAP8[$1] = HEAP8[37880] | 0; //@line 28513
 HEAP8[$1 + 1 | 0] = HEAP8[37881 | 0] | 0; //@line 28513
 HEAP8[$1 + 2 | 0] = HEAP8[37882 | 0] | 0; //@line 28513
 HEAP8[$1 + 3 | 0] = HEAP8[37883 | 0] | 0; //@line 28513
 HEAP8[$1 + 4 | 0] = HEAP8[37884 | 0] | 0; //@line 28513
 HEAP8[$1 + 5 | 0] = HEAP8[37885 | 0] | 0; //@line 28513
 HEAP32[$da + 28 >> 2] = 1; //@line 28515
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 28521
 return;
}
function _d_e3c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0;
 $1 = $da + 32 | 0; //@line 28533
 HEAP8[$1] = HEAP8[38136] | 0; //@line 28534
 HEAP8[$1 + 1 | 0] = HEAP8[38137 | 0] | 0; //@line 28534
 HEAP8[$1 + 2 | 0] = HEAP8[38138 | 0] | 0; //@line 28534
 HEAP8[$1 + 3 | 0] = HEAP8[38139 | 0] | 0; //@line 28534
 HEAP8[$1 + 4 | 0] = HEAP8[38140 | 0] | 0; //@line 28534
 HEAP8[$1 + 5 | 0] = HEAP8[38141 | 0] | 0; //@line 28534
 HEAP32[$da + 28 >> 2] = 1; //@line 28536
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 28542
 return;
}
function _d_e4c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $8 = 0;
 $1 = $da + 32 | 0; //@line 28555
 HEAP8[$1] = HEAP8[38424] | 0; //@line 28556
 HEAP8[$1 + 1 | 0] = HEAP8[38425 | 0] | 0; //@line 28556
 HEAP8[$1 + 2 | 0] = HEAP8[38426 | 0] | 0; //@line 28556
 HEAP8[$1 + 3 | 0] = HEAP8[38427 | 0] | 0; //@line 28556
 HEAP8[$1 + 4 | 0] = HEAP8[38428 | 0] | 0; //@line 28556
 HEAP8[$1 + 5 | 0] = HEAP8[38429 | 0] | 0; //@line 28556
 HEAP8[$1 + 6 | 0] = HEAP8[38430 | 0] | 0; //@line 28556
 HEAP32[$da + 28 >> 2] = 1; //@line 28558
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 28564
 $8 = $da | 0; //@line 28565
 HEAP32[$8 >> 2] = HEAP32[$8 >> 2] | 32; //@line 28568
 return;
}
function _d_e5c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $8 = 0;
 $1 = $da + 32 | 0; //@line 28581
 HEAP8[$1] = HEAP8[38728] | 0; //@line 28582
 HEAP8[$1 + 1 | 0] = HEAP8[38729 | 0] | 0; //@line 28582
 HEAP8[$1 + 2 | 0] = HEAP8[38730 | 0] | 0; //@line 28582
 HEAP8[$1 + 3 | 0] = HEAP8[38731 | 0] | 0; //@line 28582
 HEAP8[$1 + 4 | 0] = HEAP8[38732 | 0] | 0; //@line 28582
 HEAP8[$1 + 5 | 0] = HEAP8[38733 | 0] | 0; //@line 28582
 HEAP8[$1 + 6 | 0] = HEAP8[38734 | 0] | 0; //@line 28582
 HEAP32[$da + 28 >> 2] = 1; //@line 28584
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 28590
 $8 = $da | 0; //@line 28591
 HEAP32[$8 >> 2] = HEAP32[$8 >> 2] | 32; //@line 28594
 return;
}
function _d_e6c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0;
 $1 = $da + 32 | 0; //@line 28606
 HEAP8[$1] = HEAP8[39040] | 0; //@line 28607
 HEAP8[$1 + 1 | 0] = HEAP8[39041 | 0] | 0; //@line 28607
 HEAP8[$1 + 2 | 0] = HEAP8[39042 | 0] | 0; //@line 28607
 HEAP8[$1 + 3 | 0] = HEAP8[39043 | 0] | 0; //@line 28607
 HEAP8[$1 + 4 | 0] = HEAP8[39044 | 0] | 0; //@line 28607
 HEAP8[$1 + 5 | 0] = HEAP8[39045 | 0] | 0; //@line 28607
 HEAP32[$da + 28 >> 2] = 1; //@line 28609
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 28615
 return;
}
function _d_e7c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0;
 $1 = $da + 32 | 0; //@line 28627
 HEAP8[$1] = HEAP8[39480] | 0; //@line 28628
 HEAP8[$1 + 1 | 0] = HEAP8[39481 | 0] | 0; //@line 28628
 HEAP8[$1 + 2 | 0] = HEAP8[39482 | 0] | 0; //@line 28628
 HEAP8[$1 + 3 | 0] = HEAP8[39483 | 0] | 0; //@line 28628
 HEAP8[$1 + 4 | 0] = HEAP8[39484 | 0] | 0; //@line 28628
 HEAP8[$1 + 5 | 0] = HEAP8[39485 | 0] | 0; //@line 28628
 HEAP32[$da + 28 >> 2] = 1; //@line 28630
 _dasm_ea($da, $da + 96 | 0, $src, HEAP8[$src + 1 | 0] & 63, 16); //@line 28636
 return;
}
function _d_e8c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0;
 $1 = $da + 32 | 0; //@line 28648
 HEAP8[$1] = HEAP8[39888] | 0; //@line 28649
 HEAP8[$1 + 1 | 0] = HEAP8[39889 | 0] | 0; //@line 28649
 HEAP8[$1 + 2 | 0] = HEAP8[39890 | 0] | 0; //@line 28649
 HEAP8[$1 + 3 | 0] = HEAP8[39891 | 0] | 0; //@line 28649
 HEAP8[$1 + 4 | 0] = HEAP8[39892 | 0] | 0; //@line 28649
 HEAP8[$1 + 5 | 0] = HEAP8[39893 | 0] | 0; //@line 28649
 HEAP32[$da + 28 >> 2] = 1; //@line 28651
 _dasm_arg($da, $da + 96 | 0, $src, 33, 8); //@line 28653
 return;
}
function _d_e9c0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP; //@line 28665
 $1 = $da + 32 | 0; //@line 28666
 HEAP8[$1] = HEAP8[40120] | 0; //@line 28667
 HEAP8[$1 + 1 | 0] = HEAP8[40121 | 0] | 0; //@line 28667
 HEAP8[$1 + 2 | 0] = HEAP8[40122 | 0] | 0; //@line 28667
 HEAP8[$1 + 3 | 0] = HEAP8[40123 | 0] | 0; //@line 28667
 HEAP8[$1 + 4 | 0] = HEAP8[40124 | 0] | 0; //@line 28667
 HEAP8[$1 + 5 | 0] = HEAP8[40125 | 0] | 0; //@line 28667
 HEAP8[$1 + 6 | 0] = HEAP8[40126 | 0] | 0; //@line 28667
 HEAP32[$da + 28 >> 2] = 2; //@line 28669
 _dasm_arg($da, $da + 96 | 0, $src, 33, 8); //@line 28671
 _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU16[$da + 14 >> 1] | 0) >>> 12 & 7, tempInt) | 0) | 0; //@line 28678
 STACKTOP = sp; //@line 28679
 return;
}
function _d_eac0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0;
 $1 = $da + 32 | 0; //@line 28690
 HEAP8[$1] = HEAP8[40368] | 0; //@line 28691
 HEAP8[$1 + 1 | 0] = HEAP8[40369 | 0] | 0; //@line 28691
 HEAP8[$1 + 2 | 0] = HEAP8[40370 | 0] | 0; //@line 28691
 HEAP8[$1 + 3 | 0] = HEAP8[40371 | 0] | 0; //@line 28691
 HEAP8[$1 + 4 | 0] = HEAP8[40372 | 0] | 0; //@line 28691
 HEAP8[$1 + 5 | 0] = HEAP8[40373 | 0] | 0; //@line 28691
 HEAP32[$da + 28 >> 2] = 1; //@line 28693
 _dasm_arg($da, $da + 96 | 0, $src, 33, 8); //@line 28695
 return;
}
function _d_ebc0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP; //@line 28707
 $1 = $da + 32 | 0; //@line 28708
 HEAP8[$1] = HEAP8[40624] | 0; //@line 28709
 HEAP8[$1 + 1 | 0] = HEAP8[40625 | 0] | 0; //@line 28709
 HEAP8[$1 + 2 | 0] = HEAP8[40626 | 0] | 0; //@line 28709
 HEAP8[$1 + 3 | 0] = HEAP8[40627 | 0] | 0; //@line 28709
 HEAP8[$1 + 4 | 0] = HEAP8[40628 | 0] | 0; //@line 28709
 HEAP8[$1 + 5 | 0] = HEAP8[40629 | 0] | 0; //@line 28709
 HEAP8[$1 + 6 | 0] = HEAP8[40630 | 0] | 0; //@line 28709
 HEAP32[$da + 28 >> 2] = 2; //@line 28711
 _dasm_arg($da, $da + 96 | 0, $src, 33, 8); //@line 28713
 _sprintf($da + 160 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU16[$da + 14 >> 1] | 0) >>> 12 & 7, tempInt) | 0) | 0; //@line 28720
 STACKTOP = sp; //@line 28721
 return;
}
function _d_ecc0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0;
 $1 = $da + 32 | 0; //@line 28732
 HEAP8[$1] = HEAP8[40856] | 0; //@line 28733
 HEAP8[$1 + 1 | 0] = HEAP8[40857 | 0] | 0; //@line 28733
 HEAP8[$1 + 2 | 0] = HEAP8[40858 | 0] | 0; //@line 28733
 HEAP8[$1 + 3 | 0] = HEAP8[40859 | 0] | 0; //@line 28733
 HEAP8[$1 + 4 | 0] = HEAP8[40860 | 0] | 0; //@line 28733
 HEAP8[$1 + 5 | 0] = HEAP8[40861 | 0] | 0; //@line 28733
 HEAP32[$da + 28 >> 2] = 1; //@line 28735
 _dasm_arg($da, $da + 96 | 0, $src, 33, 8); //@line 28737
 return;
}
function _d_eec0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0;
 $1 = $da + 32 | 0; //@line 28749
 HEAP8[$1] = HEAP8[41088] | 0; //@line 28750
 HEAP8[$1 + 1 | 0] = HEAP8[41089 | 0] | 0; //@line 28750
 HEAP8[$1 + 2 | 0] = HEAP8[41090 | 0] | 0; //@line 28750
 HEAP8[$1 + 3 | 0] = HEAP8[41091 | 0] | 0; //@line 28750
 HEAP8[$1 + 4 | 0] = HEAP8[41092 | 0] | 0; //@line 28750
 HEAP8[$1 + 5 | 0] = HEAP8[41093 | 0] | 0; //@line 28750
 HEAP32[$da + 28 >> 2] = 1; //@line 28752
 _dasm_arg($da, $da + 96 | 0, $src, 33, 8); //@line 28754
 return;
}
function _d_efc0($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, sp = 0;
 sp = STACKTOP; //@line 28766
 $1 = $da + 32 | 0; //@line 28767
 HEAP8[$1] = HEAP8[52176] | 0; //@line 28768
 HEAP8[$1 + 1 | 0] = HEAP8[52177 | 0] | 0; //@line 28768
 HEAP8[$1 + 2 | 0] = HEAP8[52178 | 0] | 0; //@line 28768
 HEAP8[$1 + 3 | 0] = HEAP8[52179 | 0] | 0; //@line 28768
 HEAP8[$1 + 4 | 0] = HEAP8[52180 | 0] | 0; //@line 28768
 HEAP8[$1 + 5 | 0] = HEAP8[52181 | 0] | 0; //@line 28768
 HEAP32[$da + 28 >> 2] = 2; //@line 28770
 _sprintf($da + 96 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU16[$da + 14 >> 1] | 0) >>> 12 & 7, tempInt) | 0) | 0; //@line 28777
 _dasm_arg($da, $da + 160 | 0, $src, 33, 8); //@line 28779
 STACKTOP = sp; //@line 28780
 return;
}
function _d_f000($da, $src) {
 $da = $da | 0;
 $src = $src | 0;
 var $1 = 0, $9 = 0, sp = 0;
 sp = STACKTOP; //@line 28791
 STACKTOP = STACKTOP + 16 | 0; //@line 28791
 $1 = sp | 0; //@line 28793
 _sprintf($1 | 0, 32672, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAPU16[$da + 12 >> 1] | 0, tempInt) | 0) | 0; //@line 28797
 _strcpy($da + 32 | 0, $1 | 0) | 0; //@line 28799
 HEAP32[$da + 28 >> 2] = 0; //@line 28801
 $9 = $da | 0; //@line 28802
 HEAP32[$9 >> 2] = HEAP32[$9 >> 2] | 4; //@line 28805
 STACKTOP = sp; //@line 28806
 return;
}
function _dasm_arg($da, $dst, $src, $arg, $size) {
 $da = $da | 0;
 $dst = $dst | 0;
 $src = $src | 0;
 $arg = $arg | 0;
 $size = $size | 0;
 var $first_i104 = 0, $first_i = 0, $10 = 0, $21 = 0, $36 = 0, $69 = 0, $111 = 0, $113 = 0, $120 = 0, $122 = 0, $128 = 0, $130 = 0, $142 = 0, $144 = 0, $165 = 0, $167 = 0, $174 = 0, $181 = 0, $186 = 0, $199 = 0, $204 = 0, $207 = 0, $208 = 0, $209 = 0, $217 = 0, $222 = 0, $227 = 0, $230 = 0, $231 = 0, $232 = 0, $250 = 0, $255 = 0, $265 = 0, $267 = 0, $rn_025_i = 0, $ri_024_i = 0, $i_123_i = 0, $rn_1_i = 0, $276 = 0, $ri_1_i = 0, $rn_2_i = 0, $282 = 0, $287 = 0, $293 = 0, $297 = 0, $356 = 0, $rn_025_i105 = 0, $ri_024_i106 = 0, $i_123_i107 = 0, $rn_1_i109 = 0, $365 = 0, $ri_1_i111 = 0, $rn_2_i112 = 0, $371 = 0, $376 = 0, $380 = 0, $383 = 0, $394 = 0, $396 = 0, $400 = 0, $404 = 0, $408 = 0, $413 = 0, $str_0_i = 0, $417 = 0, $418 = 0, $423 = 0, $431 = 0, $444 = 0, $445 = 0, $446 = 0, $454 = 0, $455 = 0, $461 = 0, $_sum25_i = 0, $464 = 0, $465 = 0, $467 = 0, $470 = 0, $472 = 0, $475 = 0, $_sum26_i = 0, $_sum27_i = 0, $480 = 0, $481 = 0, $483 = 0, $__i = 0, $488 = 0, $494 = 0, sp = 0;
 sp = STACKTOP; //@line 28876
 STACKTOP = STACKTOP + 16 | 0; //@line 28876
 $first_i104 = sp | 0; //@line 28877
 $first_i = sp + 8 | 0; //@line 28878
 if (($arg | 0) == 4) {
  $36 = ((HEAPU8[$src] | 0) << 8 | (HEAPU8[$src + 1 | 0] | 0)) & 65535; //@line 28887
  _dasm_ea($da, $dst, $src, $36 >>> 3 & 56 | $36 >>> 9 & 7, $size); //@line 28893
  STACKTOP = sp; //@line 28895
  return;
 } else if (($arg | 0) == 5) {
  _sprintf($dst | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$da + 12 >> 1] & 7, tempInt) | 0) | 0; //@line 28902
  STACKTOP = sp; //@line 28904
  return;
 } else if (($arg | 0) == 0) {
  HEAP8[$dst] = 0; //@line 28907
  STACKTOP = sp; //@line 28909
  return;
 } else if (($arg | 0) == 1) {
  $10 = ((HEAPU8[$src] | 0) << 8 | (HEAPU8[$src + 1 | 0] | 0)) & 65535; //@line 28919
  _sprintf($dst | 0, 47464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $10, tempInt) | 0) | 0; //@line 28920
  STACKTOP = sp; //@line 28922
  return;
 } else if (($arg | 0) == 8) {
  _sprintf($dst | 0, 40696, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 28929
  STACKTOP = sp; //@line 28931
  return;
 } else if (($arg | 0) == 22) {
  $207 = $da + 8 | 0; //@line 28934
  $208 = HEAP32[$207 >> 2] | 0; //@line 28935
  $209 = $208 << 1; //@line 28936
  $217 = (HEAPU8[$src + $209 | 0] | 0) << 8 | (HEAPU8[$src + ($209 | 1) | 0] | 0); //@line 28945
  HEAP32[$207 >> 2] = $208 + 1; //@line 28947
  $222 = $217 & 65535; //@line 28951
  $227 = (HEAP32[$da + 4 >> 2] | 0) + 2 + (($222 & 32768 | 0) != 0 ? $222 | -65536 : $222) | 0; //@line 28956
  _sprintf($dst | 0, 52704, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $227, tempInt) | 0) | 0; //@line 28957
  STACKTOP = sp; //@line 28959
  return;
 } else if (($arg | 0) == 23) {
  $230 = $da + 8 | 0; //@line 28962
  $231 = HEAP32[$230 >> 2] | 0; //@line 28963
  $232 = $231 << 1; //@line 28964
  $250 = (((HEAPU8[$src + $232 | 0] | 0) << 8 | (HEAPU8[$src + ($232 | 1) | 0] | 0)) << 8 | (HEAPU8[$src + ($232 + 2) | 0] | 0)) << 8 | (HEAPU8[$src + ($232 + 3) | 0] | 0); //@line 28985
  HEAP32[$230 >> 2] = $231 + 2; //@line 28987
  $255 = (HEAP32[$da + 4 >> 2] | 0) + 2 + $250 | 0; //@line 28991
  _sprintf($dst | 0, 52704, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $255, tempInt) | 0) | 0; //@line 28992
  STACKTOP = sp; //@line 28994
  return;
 } else if (($arg | 0) == 6) {
  _sprintf($dst | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU8[$src] | 0) >>> 1 & 7, tempInt) | 0) | 0; //@line 29001
  STACKTOP = sp; //@line 29003
  return;
 } else if (($arg | 0) == 30) {
  $423 = HEAPU16[$da + 14 >> 1] | 0; //@line 29008
  _sprintf($dst | 0, 50584, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $423 & 7, HEAP32[tempInt + 8 >> 2] = $423 >>> 12 & 7, tempInt) | 0) | 0; //@line 29012
  STACKTOP = sp; //@line 29014
  return;
 } else if (($arg | 0) == 31) {
  $431 = HEAPU16[$da + 14 >> 1] | 0; //@line 29019
  _sprintf($dst | 0, 50584, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $431 & 7, HEAP32[tempInt + 8 >> 2] = $431 >>> 12 & 7, tempInt) | 0) | 0; //@line 29023
  STACKTOP = sp; //@line 29025
  return;
 } else if (($arg | 0) == 33) {
  $444 = $da + 8 | 0; //@line 29028
  $445 = HEAP32[$444 >> 2] | 0; //@line 29029
  $446 = $445 << 1; //@line 29030
  $454 = (HEAPU8[$src + $446 | 0] | 0) << 8 | (HEAPU8[$src + ($446 | 1) | 0] | 0); //@line 29039
  $455 = $445 + 1 | 0; //@line 29040
  HEAP32[$444 >> 2] = $455; //@line 29041
  HEAP16[$da + 12 + ($455 << 1) >> 1] = $454; //@line 29043
  _dasm_ea($da, $dst, $src, HEAP8[$src + 1 | 0] & 63, 8); //@line 29048
  $461 = _strlen($dst | 0) | 0; //@line 29049
  HEAP8[$dst + $461 | 0] = 32; //@line 29053
  $_sum25_i = $461 + 2 | 0; //@line 29054
  $464 = $dst + $_sum25_i | 0; //@line 29055
  HEAP8[$dst + ($461 + 1) | 0] = 123; //@line 29056
  $465 = $da + 14 | 0; //@line 29057
  $467 = HEAPU16[$465 >> 1] | 0; //@line 29059
  $470 = $467 >>> 6; //@line 29062
  if (($467 & 2048 | 0) == 0) {
   $475 = $470 & 31; //@line 29065
   _sprintf($464 | 0, 49848, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $475, tempInt) | 0) | 0; //@line 29066
  } else {
   $472 = $470 & 7; //@line 29068
   _sprintf($464 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $472, tempInt) | 0) | 0; //@line 29069
  }
  $_sum26_i = (_strlen($464 | 0) | 0) + $_sum25_i | 0; //@line 29073
  $_sum27_i = $_sum26_i + 1 | 0; //@line 29075
  $480 = $dst + $_sum27_i | 0; //@line 29076
  HEAP8[$dst + $_sum26_i | 0] = 58; //@line 29077
  $481 = HEAP16[$465 >> 1] | 0; //@line 29078
  $483 = $481 & 31; //@line 29080
  $__i = ($483 | 0) == 0 ? 32 : $483; //@line 29082
  if (($481 & 32) == 0) {
   _sprintf($480 | 0, 49848, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $__i, tempInt) | 0) | 0; //@line 29087
  } else {
   $488 = $__i & 7; //@line 29089
   _sprintf($480 | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $488, tempInt) | 0) | 0; //@line 29090
  }
  $494 = $dst + ((_strlen($480 | 0) | 0) + $_sum27_i) | 0; //@line 29096
  tempBigInt = 125; //@line 29097
  HEAP8[$494] = tempBigInt & 255; //@line 29097
  tempBigInt = tempBigInt >> 8; //@line 29097
  HEAP8[$494 + 1 | 0] = tempBigInt & 255; //@line 29097
  STACKTOP = sp; //@line 29099
  return;
 } else if (($arg | 0) == 18) {
  $174 = (HEAP8[$src] & 255) >>> 1 & 7; //@line 29105
  _sprintf($dst | 0, 53544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $174 << 16 >> 16 == 0 ? 8 : $174 & 65535, tempInt) | 0) | 0; //@line 29109
  STACKTOP = sp; //@line 29111
  return;
 } else if (($arg | 0) == 19) {
  $181 = HEAP16[$da + 12 >> 1] & 15; //@line 29117
  _sprintf($dst | 0, 54856, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $181, tempInt) | 0) | 0; //@line 29118
  STACKTOP = sp; //@line 29120
  return;
 } else if (($arg | 0) == 7) {
  _sprintf($dst | 0, 40696, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$da + 12 >> 1] & 7, tempInt) | 0) | 0; //@line 29127
  STACKTOP = sp; //@line 29129
  return;
 } else if (($arg | 0) == 17) {
  $165 = (((HEAPU8[$src + 2 | 0] | 0) << 8 | (HEAPU8[$src + 3 | 0] | 0)) << 8 | (HEAPU8[$src + 4 | 0] | 0)) << 8 | (HEAPU8[$src + 5 | 0] | 0); //@line 29149
  _sprintf($dst | 0, 54072, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $165, tempInt) | 0) | 0; //@line 29150
  $167 = $da + 8 | 0; //@line 29151
  HEAP32[$167 >> 2] = (HEAP32[$167 >> 2] | 0) + 2; //@line 29154
  STACKTOP = sp; //@line 29156
  return;
 } else if (($arg | 0) == 32 | ($arg | 0) == 34) {
  _sprintf($dst | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU16[$da + 14 >> 1] | 0) >>> 12 & 7, tempInt) | 0) | 0; //@line 29164
  STACKTOP = sp; //@line 29166
  return;
 } else if (($arg | 0) == 2) {
  $21 = ((HEAPU8[$src + 2 | 0] | 0) << 8 | (HEAPU8[$src + 3 | 0] | 0)) & 65535; //@line 29177
  _sprintf($dst | 0, 47464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $21, tempInt) | 0) | 0; //@line 29178
  STACKTOP = sp; //@line 29180
  return;
 } else if (($arg | 0) == 25) {
  $293 = HEAPU8[$src + 2 | 0] | 0; //@line 29185
  $297 = HEAPU8[$src + 3 | 0] | 0; //@line 29189
  HEAP32[$first_i104 >> 2] = 1; //@line 29192
  HEAP8[$dst] = 0; //@line 29193
  $356 = ((((((($293 & 65535) >>> 2 & 1 | $293 & 2 | (((((((($297 & 65535) >>> 2 & 1 | $297 & 2 | (($293 << 8 | $297) << 1 | $297 & 1) << 2) << 1 | ($297 & 65535) >>> 3 & 1) << 1 | ($297 & 65535) >>> 4 & 1) << 1 | ($297 & 65535) >>> 5 & 1) << 1 | ($297 & 65535) >>> 6 & 1) << 1 | ($297 & 65535) >>> 7) << 1 | $293 & 1) << 2) << 1 | ($293 & 65535) >>> 3 & 1) << 1 | ($293 & 65535) >>> 4 & 1) << 1 | ($293 & 65535) >>> 5 & 1) << 1 | ($293 & 65535) >>> 6 & 1) << 1 | ($293 & 65535) >>> 7) & 65535; //@line 29250
  $i_123_i107 = 0;
  $ri_024_i106 = 0;
  $rn_025_i105 = 0;
  while (1) {
   if (($i_123_i107 | 0) != 8 | ($rn_025_i105 | 0) == 0) {
    $rn_1_i109 = $rn_025_i105; //@line 29262
   } else {
    _dasm_reginterval($dst, $ri_024_i106, $rn_025_i105, $first_i104); //@line 29264
    $rn_1_i109 = 0; //@line 29266
   }
   $365 = ($rn_1_i109 | 0) == 0; //@line 29272
   do {
    if ((1 << $i_123_i107 & $356 | 0) == 0) {
     if ($365) {
      $rn_2_i112 = 0;
      $ri_1_i111 = $ri_024_i106;
      break;
     }
     _dasm_reginterval($dst, $ri_024_i106, $rn_1_i109, $first_i104); //@line 29281
     $rn_2_i112 = 0;
     $ri_1_i111 = $ri_024_i106;
    } else {
     $rn_2_i112 = $rn_1_i109 + 1 | 0;
     $ri_1_i111 = $365 ? $i_123_i107 : $ri_024_i106;
    }
   } while (0);
   $371 = $i_123_i107 + 1 | 0; //@line 29293
   if ($371 >>> 0 < 16) {
    $i_123_i107 = $371;
    $ri_024_i106 = $ri_1_i111;
    $rn_025_i105 = $rn_2_i112;
   } else {
    break;
   }
  }
  if (($rn_2_i112 | 0) != 0) {
   _dasm_reginterval($dst, $ri_1_i111, $rn_2_i112, $first_i104); //@line 29305
  }
  $376 = $da + 8 | 0; //@line 29308
  HEAP32[$376 >> 2] = (HEAP32[$376 >> 2] | 0) + 1; //@line 29311
  STACKTOP = sp; //@line 29313
  return;
 } else if (($arg | 0) == 13) {
  _sprintf($dst | 0, 30264, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU16[$da + 12 >> 1] | 0) >>> 9 & 7, tempInt) | 0) | 0; //@line 29321
  STACKTOP = sp; //@line 29323
  return;
 } else if (($arg | 0) == 14) {
  $111 = ((HEAPU8[$src + 2 | 0] | 0) << 8 | (HEAPU8[$src + 3 | 0] | 0)) & 65535; //@line 29334
  $113 = ($111 & 32768 | 0) != 0; //@line 29336
  $120 = HEAP16[$da + 12 >> 1] & 7; //@line 29344
  _sprintf($dst | 0, 57472, (tempInt = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempInt >> 2] = $113 ? 56344 : 62888, HEAP32[tempInt + 8 >> 2] = 41376, HEAP32[tempInt + 16 >> 2] = ($113 ? -$111 | 0 : $111) & 65535, HEAP32[tempInt + 24 >> 2] = $120, tempInt) | 0) | 0; //@line 29345
  $122 = $da + 8 | 0; //@line 29346
  HEAP32[$122 >> 2] = (HEAP32[$122 >> 2] | 0) + 1; //@line 29349
  STACKTOP = sp; //@line 29351
  return;
 } else if (($arg | 0) == 24) {
  $265 = (HEAPU8[$src + 2 | 0] | 0) << 8 | (HEAPU8[$src + 3 | 0] | 0); //@line 29361
  HEAP32[$first_i >> 2] = 1; //@line 29363
  HEAP8[$dst] = 0; //@line 29364
  $267 = $265 & 65535; //@line 29365
  $i_123_i = 0;
  $ri_024_i = 0;
  $rn_025_i = 0;
  while (1) {
   if (($i_123_i | 0) != 8 | ($rn_025_i | 0) == 0) {
    $rn_1_i = $rn_025_i; //@line 29377
   } else {
    _dasm_reginterval($dst, $ri_024_i, $rn_025_i, $first_i); //@line 29379
    $rn_1_i = 0; //@line 29381
   }
   $276 = ($rn_1_i | 0) == 0; //@line 29387
   do {
    if ((1 << $i_123_i & $267 | 0) == 0) {
     if ($276) {
      $rn_2_i = 0;
      $ri_1_i = $ri_024_i;
      break;
     }
     _dasm_reginterval($dst, $ri_024_i, $rn_1_i, $first_i); //@line 29396
     $rn_2_i = 0;
     $ri_1_i = $ri_024_i;
    } else {
     $rn_2_i = $rn_1_i + 1 | 0;
     $ri_1_i = $276 ? $i_123_i : $ri_024_i;
    }
   } while (0);
   $282 = $i_123_i + 1 | 0; //@line 29408
   if ($282 >>> 0 < 16) {
    $i_123_i = $282;
    $ri_024_i = $ri_1_i;
    $rn_025_i = $rn_2_i;
   } else {
    break;
   }
  }
  if (($rn_2_i | 0) != 0) {
   _dasm_reginterval($dst, $ri_1_i, $rn_2_i, $first_i); //@line 29420
  }
  $287 = $da + 8 | 0; //@line 29423
  HEAP32[$287 >> 2] = (HEAP32[$287 >> 2] | 0) + 1; //@line 29426
  STACKTOP = sp; //@line 29428
  return;
 } else if (($arg | 0) == 9) {
  $69 = HEAPU8[$src + 2 | 0] | 0; //@line 29433
  _sprintf($dst | 0, 37704, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = ($69 & 128 | 0) != 0 ? 34768 : 32184, HEAP32[tempInt + 8 >> 2] = $69 >>> 4 & 7, tempInt) | 0) | 0; //@line 29439
  STACKTOP = sp; //@line 29441
  return;
 } else if (($arg | 0) == 21) {
  $199 = HEAPU8[$src + 1 | 0] | 0; //@line 29449
  $204 = (HEAP32[$da + 4 >> 2] | 0) + 2 + (($199 & 128 | 0) != 0 ? $199 | -256 : $199) | 0; //@line 29454
  _sprintf($dst | 0, 52704, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $204, tempInt) | 0) | 0; //@line 29455
  STACKTOP = sp; //@line 29457
  return;
 } else if (($arg | 0) == 3) {
  _dasm_ea($da, $dst, $src, HEAP8[$src + 1 | 0] & 63, $size); //@line 29464
  STACKTOP = sp; //@line 29466
  return;
 } else if (($arg | 0) == 12) {
  _sprintf($dst | 0, 30264, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$da + 12 >> 1] & 7, tempInt) | 0) | 0; //@line 29473
  STACKTOP = sp; //@line 29475
  return;
 } else if (($arg | 0) == 11) {
  _sprintf($dst | 0, 31160, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = (HEAPU16[$da + 12 >> 1] | 0) >>> 9 & 7, tempInt) | 0) | 0; //@line 29483
  STACKTOP = sp; //@line 29485
  return;
 } else if (($arg | 0) == 15) {
  $128 = HEAPU8[$src + 3 | 0] | 0; //@line 29490
  _sprintf($dst | 0, 54856, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $128, tempInt) | 0) | 0; //@line 29491
  $130 = $da + 8 | 0; //@line 29492
  HEAP32[$130 >> 2] = (HEAP32[$130 >> 2] | 0) + 1; //@line 29495
  STACKTOP = sp; //@line 29497
  return;
 } else if (($arg | 0) == 16) {
  $142 = ((HEAPU8[$src + 2 | 0] | 0) << 8 | (HEAPU8[$src + 3 | 0] | 0)) & 65535; //@line 29508
  _sprintf($dst | 0, 47464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $142, tempInt) | 0) | 0; //@line 29509
  $144 = $da + 8 | 0; //@line 29510
  HEAP32[$144 >> 2] = (HEAP32[$144 >> 2] | 0) + 1; //@line 29513
  STACKTOP = sp; //@line 29515
  return;
 } else if (($arg | 0) == 10) {
  _sprintf($dst | 0, 31160, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP16[$da + 12 >> 1] & 7, tempInt) | 0) | 0; //@line 29522
  STACKTOP = sp; //@line 29524
  return;
 } else if (($arg | 0) == 20) {
  $186 = HEAPU16[$da + 12 >> 1] | 0; //@line 29529
  _sprintf($dst | 0, 54072, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = ($186 & 128 | 0) != 0 ? $186 | -256 : $186 & 255, tempInt) | 0) | 0; //@line 29535
  STACKTOP = sp; //@line 29537
  return;
 } else if (($arg | 0) == 29) {
  $394 = ((HEAPU8[$src + 2 | 0] | 0) << 8 | (HEAPU8[$src + 3 | 0] | 0)) & 4095; //@line 29549
  if (($394 | 0) == 2048) {
   $404 = $da | 0; //@line 29551
   HEAP32[$404 >> 2] = HEAP32[$404 >> 2] | 64; //@line 29554
   $str_0_i = 50984; //@line 29556
  } else if (($394 | 0) == 2049) {
   $408 = $da | 0; //@line 29558
   HEAP32[$408 >> 2] = HEAP32[$408 >> 2] | 64; //@line 29561
   $str_0_i = 48032; //@line 29563
  } else if (($394 | 0) == 0) {
   $396 = $da | 0; //@line 29565
   HEAP32[$396 >> 2] = HEAP32[$396 >> 2] | 64; //@line 29568
   $str_0_i = 48824; //@line 29570
  } else if (($394 | 0) == 1) {
   $400 = $da | 0; //@line 29572
   HEAP32[$400 >> 2] = HEAP32[$400 >> 2] | 64; //@line 29575
   $str_0_i = 48424; //@line 29577
  } else {
   _sprintf($dst | 0, 47736, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $394, tempInt) | 0) | 0; //@line 29579
   $413 = $da | 0; //@line 29580
   HEAP32[$413 >> 2] = HEAP32[$413 >> 2] | 64; //@line 29583
   STACKTOP = sp; //@line 29585
   return;
  }
  $417 = $str_0_i; //@line 29589
  $418 = $dst; //@line 29590
  tempBigInt = HEAPU8[$417] | HEAPU8[$417 + 1 | 0] << 8 | HEAPU8[$417 + 2 | 0] << 16 | HEAPU8[$417 + 3 | 0] << 24 | 0; //@line 29592
  HEAP8[$418] = tempBigInt & 255; //@line 29592
  tempBigInt = tempBigInt >> 8; //@line 29592
  HEAP8[$418 + 1 | 0] = tempBigInt & 255; //@line 29592
  tempBigInt = tempBigInt >> 8; //@line 29592
  HEAP8[$418 + 2 | 0] = tempBigInt & 255; //@line 29592
  tempBigInt = tempBigInt >> 8; //@line 29592
  HEAP8[$418 + 3 | 0] = tempBigInt & 255; //@line 29592
  STACKTOP = sp; //@line 29594
  return;
 } else if (($arg | 0) == 26) {
  $380 = $dst; //@line 29597
  tempBigInt = 5391171; //@line 29598
  HEAP8[$380] = tempBigInt & 255; //@line 29598
  tempBigInt = tempBigInt >> 8; //@line 29598
  HEAP8[$380 + 1 | 0] = tempBigInt & 255; //@line 29598
  tempBigInt = tempBigInt >> 8; //@line 29598
  HEAP8[$380 + 2 | 0] = tempBigInt & 255; //@line 29598
  tempBigInt = tempBigInt >> 8; //@line 29598
  HEAP8[$380 + 3 | 0] = tempBigInt & 255; //@line 29598
  STACKTOP = sp; //@line 29600
  return;
 } else if (($arg | 0) == 27) {
  HEAP8[$dst] = HEAP8[51464] | 0; //@line 29603
  HEAP8[$dst + 1 | 0] = HEAP8[51465 | 0] | 0; //@line 29603
  HEAP8[$dst + 2 | 0] = HEAP8[51466 | 0] | 0; //@line 29603
  STACKTOP = sp; //@line 29605
  return;
 } else if (($arg | 0) == 28) {
  $383 = $dst; //@line 29608
  tempBigInt = 5264213; //@line 29609
  HEAP8[$383] = tempBigInt & 255; //@line 29609
  tempBigInt = tempBigInt >> 8; //@line 29609
  HEAP8[$383 + 1 | 0] = tempBigInt & 255; //@line 29609
  tempBigInt = tempBigInt >> 8; //@line 29609
  HEAP8[$383 + 2 | 0] = tempBigInt & 255; //@line 29609
  tempBigInt = tempBigInt >> 8; //@line 29609
  HEAP8[$383 + 3 | 0] = tempBigInt & 255; //@line 29609
  STACKTOP = sp; //@line 29611
  return;
 } else {
  HEAP8[$dst] = 0; //@line 29614
  STACKTOP = sp; //@line 29616
  return;
 }
}
function _e68_set_mem_fct($c, $ext, $get8, $get16, $get32, $set8, $set16, $set32) {
 $c = $c | 0;
 $ext = $ext | 0;
 $get8 = $get8 | 0;
 $get16 = $get16 | 0;
 $get32 = $get32 | 0;
 $set8 = $set8 | 0;
 $set16 = $set16 | 0;
 $set32 = $set32 | 0;
 HEAP32[$c + 4 >> 2] = $ext; //@line 29636
 HEAP32[$c + 8 >> 2] = $get8; //@line 29639
 HEAP32[$c + 12 >> 2] = $get16; //@line 29642
 HEAP32[$c + 16 >> 2] = $get32; //@line 29645
 HEAP32[$c + 20 >> 2] = $set8; //@line 29648
 HEAP32[$c + 24 >> 2] = $set16; //@line 29651
 HEAP32[$c + 28 >> 2] = $set32; //@line 29654
 return;
}
function _dasm_ea($da, $dst, $src, $ea, $size) {
 $da = $da | 0;
 $dst = $dst | 0;
 $src = $src | 0;
 $ea = $ea | 0;
 $size = $size | 0;
 var $2 = 0, $19 = 0, $20 = 0, $21 = 0, $30 = 0, $33 = 0, $34 = 0, $36 = 0, $37 = 0, $40 = 0, $41 = 0, $42 = 0, $51 = 0, $58 = 0, $78 = 0, $82 = 0, $84 = 0, $85 = 0, $86 = 0, $95 = 0, $98 = 0, $99 = 0, $101 = 0, $104 = 0, $105 = 0, $106 = 0, $115 = 0, $116 = 0, $117 = 0, $126 = 0, $132 = 0, $133 = 0, $134 = 0, $143 = 0, $152 = 0, $155 = 0, $156 = 0, $157 = 0, $166 = 0, $173 = 0, $192 = 0, $197 = 0, $198 = 0, $202 = 0, $206 = 0, $207 = 0, $208 = 0, $217 = 0, $221 = 0, $222 = 0, $223 = 0, $232 = 0, $233 = 0, $234 = 0, $243 = 0, sp = 0;
 sp = STACKTOP; //@line 29698
 $2 = $ea >>> 3 & 7; //@line 29700
 if (($2 | 0) == 5) {
  $19 = $da + 8 | 0; //@line 29702
  $20 = HEAP32[$19 >> 2] | 0; //@line 29703
  $21 = $20 << 1; //@line 29704
  $30 = ((HEAPU8[$src + $21 | 0] | 0) << 8 | (HEAPU8[$src + ($21 | 1) | 0] | 0)) & 65535; //@line 29714
  HEAP32[$19 >> 2] = $20 + 1; //@line 29716
  $33 = ($30 & 32768 | 0) != 0; //@line 29718
  $34 = $33 ? 56344 : 62888; //@line 29719
  $36 = ($33 ? -$30 | 0 : $30) & 65535; //@line 29722
  $37 = $ea & 7; //@line 29723
  _sprintf($dst | 0, 57472, (tempInt = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempInt >> 2] = $34, HEAP32[tempInt + 8 >> 2] = 41376, HEAP32[tempInt + 16 >> 2] = $36, HEAP32[tempInt + 24 >> 2] = $37, tempInt) | 0) | 0; //@line 29724
  STACKTOP = sp; //@line 29726
  return;
 } else if (($2 | 0) == 4) {
  _sprintf($dst | 0, 30264, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $ea & 7, tempInt) | 0) | 0; //@line 29730
  STACKTOP = sp; //@line 29732
  return;
 } else if (($2 | 0) == 1) {
  _sprintf($dst | 0, 40696, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $ea & 7, tempInt) | 0) | 0; //@line 29736
  STACKTOP = sp; //@line 29738
  return;
 } else if (($2 | 0) == 3) {
  _sprintf($dst | 0, 31160, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $ea & 7, tempInt) | 0) | 0; //@line 29742
  STACKTOP = sp; //@line 29744
  return;
 } else if (($2 | 0) == 2) {
  _sprintf($dst | 0, 46536, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $ea & 7, tempInt) | 0) | 0; //@line 29748
  STACKTOP = sp; //@line 29750
  return;
 } else if (($2 | 0) == 0) {
  _sprintf($dst | 0, 44016, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $ea & 7, tempInt) | 0) | 0; //@line 29754
  STACKTOP = sp; //@line 29756
  return;
 } else if (($2 | 0) == 6) {
  $40 = $da + 8 | 0; //@line 29759
  $41 = HEAP32[$40 >> 2] | 0; //@line 29760
  $42 = $41 << 1; //@line 29761
  $51 = ((HEAPU8[$src + $42 | 0] | 0) << 8 | (HEAPU8[$src + ($42 | 1) | 0] | 0)) & 65535; //@line 29771
  HEAP32[$40 >> 2] = $41 + 1; //@line 29773
  if (($51 & 256 | 0) != 0) {
   _dasm_ea_full($da, $dst, $src); //@line 29778
   STACKTOP = sp; //@line 29780
   return;
  }
  $58 = ($51 & 128 | 0) != 0; //@line 29784
  _sprintf($dst | 0, 46008, (tempInt = STACKTOP, STACKTOP = STACKTOP + 64 | 0, HEAP32[tempInt >> 2] = $58 ? 56344 : 62888, HEAP32[tempInt + 8 >> 2] = 41376, HEAP32[tempInt + 16 >> 2] = ($58 ? -$51 | 0 : $51) & 255, HEAP32[tempInt + 24 >> 2] = $ea & 7, HEAP32[tempInt + 32 >> 2] = ($51 & 32768 | 0) != 0 ? 34768 : 32184, HEAP32[tempInt + 40 >> 2] = $51 >>> 12 & 7, HEAP32[tempInt + 48 >> 2] = ($51 & 2048 | 0) != 0 ? 45520 : 45216, HEAP32[tempInt + 56 >> 2] = 1 << ($51 >>> 9 & 3), tempInt) | 0) | 0; //@line 29801
  if (($51 & 1536 | 0) == 0) {
   STACKTOP = sp; //@line 29806
   return;
  }
  $78 = $da | 0; //@line 29809
  HEAP32[$78 >> 2] = HEAP32[$78 >> 2] | 128; //@line 29812
  STACKTOP = sp; //@line 29814
  return;
 } else if (($2 | 0) == 7) {
  $82 = $ea & 7; //@line 29817
  if (($82 | 0) == 0) {
   $84 = $da + 8 | 0; //@line 29819
   $85 = HEAP32[$84 >> 2] | 0; //@line 29820
   $86 = $85 << 1; //@line 29821
   $95 = ((HEAPU8[$src + $86 | 0] | 0) << 8 | (HEAPU8[$src + ($86 | 1) | 0] | 0)) & 65535; //@line 29831
   HEAP32[$84 >> 2] = $85 + 1; //@line 29833
   $98 = ($95 & 32768 | 0) != 0; //@line 29835
   $99 = $98 ? 56344 : 62888; //@line 29836
   $101 = ($98 ? -$95 | 0 : $95) & 65535; //@line 29839
   _sprintf($dst | 0, 44896, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = $99, HEAP32[tempInt + 8 >> 2] = 41376, HEAP32[tempInt + 16 >> 2] = $101, tempInt) | 0) | 0; //@line 29840
   STACKTOP = sp; //@line 29842
   return;
  } else if (($82 | 0) == 1) {
   $104 = $da + 8 | 0; //@line 29845
   $105 = HEAP32[$104 >> 2] | 0; //@line 29846
   $106 = $105 << 1; //@line 29847
   $115 = ((HEAPU8[$src + $106 | 0] | 0) << 8 | (HEAPU8[$src + ($106 | 1) | 0] | 0)) & 65535; //@line 29857
   $116 = $105 + 1 | 0; //@line 29858
   HEAP32[$104 >> 2] = $116; //@line 29859
   $117 = $116 << 1; //@line 29860
   $126 = ((HEAPU8[$src + $117 | 0] | 0) << 8 | (HEAPU8[$src + ($117 | 1) | 0] | 0)) & 65535; //@line 29870
   HEAP32[$104 >> 2] = $105 + 2; //@line 29872
   _sprintf($dst | 0, 52704, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $126 | $115 << 16, tempInt) | 0) | 0; //@line 29875
   STACKTOP = sp; //@line 29877
   return;
  } else if (($82 | 0) == 2) {
   $132 = $da + 8 | 0; //@line 29880
   $133 = HEAP32[$132 >> 2] | 0; //@line 29881
   $134 = $133 << 1; //@line 29882
   $143 = ((HEAPU8[$src + $134 | 0] | 0) << 8 | (HEAPU8[$src + ($134 | 1) | 0] | 0)) & 65535; //@line 29892
   HEAP32[$132 >> 2] = $133 + 1; //@line 29894
   $152 = (HEAP32[$da + 4 >> 2] | 0) + 2 + (($143 & 32768 | 0) != 0 ? $143 | -65536 : $143) | 0; //@line 29902
   _sprintf($dst | 0, 44536, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $152, tempInt) | 0) | 0; //@line 29903
   STACKTOP = sp; //@line 29905
   return;
  } else if (($82 | 0) == 3) {
   $155 = $da + 8 | 0; //@line 29908
   $156 = HEAP32[$155 >> 2] | 0; //@line 29909
   $157 = $156 << 1; //@line 29910
   $166 = ((HEAPU8[$src + $157 | 0] | 0) << 8 | (HEAPU8[$src + ($157 | 1) | 0] | 0)) & 65535; //@line 29920
   HEAP32[$155 >> 2] = $156 + 1; //@line 29922
   if (($166 & 256 | 0) != 0) {
    _dasm_ea_full($da, $dst, $src); //@line 29927
    STACKTOP = sp; //@line 29929
    return;
   }
   $173 = ($166 & 128 | 0) != 0; //@line 29933
   _sprintf($dst | 0, 44208, (tempInt = STACKTOP, STACKTOP = STACKTOP + 56 | 0, HEAP32[tempInt >> 2] = $173 ? 56344 : 62888, HEAP32[tempInt + 8 >> 2] = 41376, HEAP32[tempInt + 16 >> 2] = ($173 ? -$166 | 0 : $166) & 255, HEAP32[tempInt + 24 >> 2] = ($166 & 32768 | 0) != 0 ? 34768 : 32184, HEAP32[tempInt + 32 >> 2] = $166 >>> 12 & 7, HEAP32[tempInt + 40 >> 2] = ($166 & 2048 | 0) != 0 ? 45520 : 45216, HEAP32[tempInt + 48 >> 2] = 1 << ($166 >>> 9 & 3), tempInt) | 0) | 0; //@line 29949
   if (($166 & 1536 | 0) == 0) {
    STACKTOP = sp; //@line 29954
    return;
   }
   $192 = $da | 0; //@line 29957
   HEAP32[$192 >> 2] = HEAP32[$192 >> 2] | 128; //@line 29960
   STACKTOP = sp; //@line 29962
   return;
  } else if (($82 | 0) == 4) {
   if (($size | 0) == 8) {
    $197 = $da + 8 | 0; //@line 29966
    $198 = HEAP32[$197 >> 2] | 0; //@line 29967
    $202 = HEAPU8[$src + ($198 << 1 | 1) | 0] | 0; //@line 29972
    HEAP32[$197 >> 2] = $198 + 1; //@line 29974
    _sprintf($dst | 0, 54856, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $202, tempInt) | 0) | 0; //@line 29975
    STACKTOP = sp; //@line 29977
    return;
   } else if (($size | 0) == 16) {
    $206 = $da + 8 | 0; //@line 29980
    $207 = HEAP32[$206 >> 2] | 0; //@line 29981
    $208 = $207 << 1; //@line 29982
    $217 = ((HEAPU8[$src + $208 | 0] | 0) << 8 | (HEAPU8[$src + ($208 | 1) | 0] | 0)) & 65535; //@line 29992
    HEAP32[$206 >> 2] = $207 + 1; //@line 29994
    _sprintf($dst | 0, 47464, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $217, tempInt) | 0) | 0; //@line 29995
    STACKTOP = sp; //@line 29997
    return;
   } else if (($size | 0) == 32) {
    $221 = $da + 8 | 0; //@line 30000
    $222 = HEAP32[$221 >> 2] | 0; //@line 30001
    $223 = $222 << 1; //@line 30002
    $232 = ((HEAPU8[$src + $223 | 0] | 0) << 8 | (HEAPU8[$src + ($223 | 1) | 0] | 0)) & 65535; //@line 30012
    $233 = $222 + 1 | 0; //@line 30013
    HEAP32[$221 >> 2] = $233; //@line 30014
    $234 = $233 << 1; //@line 30015
    $243 = ((HEAPU8[$src + $234 | 0] | 0) << 8 | (HEAPU8[$src + ($234 | 1) | 0] | 0)) & 65535; //@line 30025
    HEAP32[$221 >> 2] = $222 + 2; //@line 30027
    _sprintf($dst | 0, 54072, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 41376, HEAP32[tempInt + 8 >> 2] = $243 | $232 << 16, tempInt) | 0) | 0; //@line 30030
    STACKTOP = sp; //@line 30032
    return;
   } else {
    STACKTOP = sp; //@line 30035
    return;
   }
  } else {
   _sprintf($dst | 0, 43936, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $ea & 63, tempInt) | 0) | 0; //@line 30040
   STACKTOP = sp; //@line 30042
   return;
  }
 } else {
  _sprintf($dst | 0, 43936, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $ea & 63, tempInt) | 0) | 0; //@line 30047
  STACKTOP = sp; //@line 30049
  return;
 }
}
function _dasm_reginterval($dst, $i, $n, $first) {
 $dst = $dst | 0;
 $i = $i | 0;
 $n = $n | 0;
 $first = $first | 0;
 var $tmp = 0, $1 = 0, $_0 = 0, $reg_0 = 0, $6 = 0, $10 = 0, $12 = 0, $16 = 0, $18 = 0, sp = 0;
 sp = STACKTOP; //@line 30064
 STACKTOP = STACKTOP + 32 | 0; //@line 30064
 $tmp = sp | 0; //@line 30065
 $1 = $i >>> 0 < 8; //@line 30066
 $_0 = $1 ? $i : $i - 8 | 0; //@line 30068
 $reg_0 = $1 ? 32184 : 34768; //@line 30069
 if ((HEAP32[$first >> 2] | 0) == 0) {
  $6 = $dst + (_strlen($dst | 0) | 0) | 0; //@line 30076
  tempBigInt = 47; //@line 30077
  HEAP8[$6] = tempBigInt & 255; //@line 30077
  tempBigInt = tempBigInt >> 8; //@line 30077
  HEAP8[$6 + 1 | 0] = tempBigInt & 255; //@line 30077
 }
 do {
  if ($n >>> 0 > 2) {
   $10 = $tmp | 0; //@line 30084
   $12 = $n - 1 + $_0 | 0; //@line 30086
   _sprintf($10 | 0, 47136, (tempInt = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempInt >> 2] = $reg_0, HEAP32[tempInt + 8 >> 2] = $_0, HEAP32[tempInt + 16 >> 2] = $reg_0, HEAP32[tempInt + 24 >> 2] = $12, tempInt) | 0) | 0; //@line 30087
  } else {
   $16 = $tmp | 0; //@line 30091
   if (($n | 0) == 2) {
    $18 = $_0 + 1 | 0; //@line 30094
    _sprintf($16 | 0, 46848, (tempInt = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempInt >> 2] = $reg_0, HEAP32[tempInt + 8 >> 2] = $_0, HEAP32[tempInt + 16 >> 2] = $reg_0, HEAP32[tempInt + 24 >> 2] = $18, tempInt) | 0) | 0; //@line 30095
    break;
   } else {
    _sprintf($16 | 0, 37704, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $reg_0, HEAP32[tempInt + 8 >> 2] = $_0, tempInt) | 0) | 0; //@line 30099
    break;
   }
  }
 } while (0);
 _strcat($dst | 0, $tmp | 0) | 0; //@line 30105
 HEAP32[$first >> 2] = 0; //@line 30106
 STACKTOP = sp; //@line 30107
 return;
}
function _dasm_ea_full($da, $dst, $src) {
 $da = $da | 0;
 $dst = $dst | 0;
 $src = $src | 0;
 var $br39 = 0, $ix41 = 0, $ix41_sub = 0, $bd45 = 0, $bd45_sub = 0, $od43 = 0, $od43_sub = 0, $scale = 0, $3 = 0, $7 = 0, $12 = 0, $15 = 0, $18 = 0, $23 = 0, $26 = 0, $28 = 0, $31 = 0, $35 = 0, $37 = 0, $40 = 0, $44 = 0, $47 = 0, $48 = 0, $49 = 0, $58 = 0, $62 = 0, $68 = 0, $71 = 0, $72 = 0, $73 = 0, $82 = 0, $83 = 0, $85 = 0, $94 = 0, $96 = 0, $98 = 0, $104 = 0, $107 = 0, $108 = 0, $109 = 0, $118 = 0, $122 = 0, $128 = 0, $131 = 0, $132 = 0, $133 = 0, $142 = 0, $143 = 0, $145 = 0, $154 = 0, $156 = 0, $158 = 0, $171 = 0, $172 = 0, $173 = 0, sp = 0;
 sp = STACKTOP; //@line 30138
 STACKTOP = STACKTOP + 32 | 0; //@line 30138
 $br39 = sp | 0; //@line 30139
 $ix41 = sp + 16 | 0; //@line 30140
 $ix41_sub = $ix41 | 0; //@line 30141
 $bd45 = STACKTOP; //@line 30142
 STACKTOP = STACKTOP + 16 | 0; //@line 30142
 $bd45_sub = $bd45 | 0; //@line 30143
 $od43 = STACKTOP; //@line 30144
 STACKTOP = STACKTOP + 16 | 0; //@line 30144
 $od43_sub = $od43 | 0; //@line 30145
 $scale = STACKTOP; //@line 30146
 STACKTOP = STACKTOP + 16 | 0; //@line 30146
 $3 = HEAPU16[$da + 14 >> 1] | 0; //@line 30149
 $7 = ($3 & 64 | 0) == 0; //@line 30153
 do {
  if (($3 & 128 | 0) == 0) {
   $12 = HEAPU16[$da + 12 >> 1] | 0; //@line 30159
   $15 = $br39; //@line 30162
   if (($12 & 56 | 0) == 56) {
    HEAP8[$15] = HEAP8[43688] | 0; //@line 30165
    HEAP8[$15 + 1 | 0] = HEAP8[43689 | 0] | 0; //@line 30165
    HEAP8[$15 + 2 | 0] = HEAP8[43690 | 0] | 0; //@line 30165
    break;
   } else {
    $18 = $12 & 7; //@line 30169
    _sprintf($15 | 0, 40696, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $18, tempInt) | 0) | 0; //@line 30170
    break;
   }
  } else {
   HEAP16[$br39 >> 1] = 45; //@line 30175
  }
 } while (0);
 if ($7) {
  $23 = $ix41; //@line 30181
  $26 = ($3 & 32768 | 0) != 0 ? 34768 : 32184; //@line 30184
  $28 = $3 >>> 12 & 7; //@line 30186
  $31 = ($3 & 2048 | 0) != 0 ? 45520 : 45216; //@line 30189
  _sprintf($23 | 0, 43384, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = $26, HEAP32[tempInt + 8 >> 2] = $28, HEAP32[tempInt + 16 >> 2] = $31, tempInt) | 0) | 0; //@line 30190
 } else {
  HEAP16[$ix41_sub >> 1] = 45; //@line 30192
 }
 $35 = $3 >>> 9 & 3; //@line 30196
 $37 = $scale | 0; //@line 30198
 if (($35 | 0) == 0) {
  HEAP8[$37] = 0; //@line 30201
 } else {
  $40 = 1 << $35; //@line 30204
  _sprintf($37 | 0, 43008, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $40, tempInt) | 0) | 0; //@line 30205
 }
 $44 = $3 >>> 4 & 3; //@line 30208
 if (($44 | 0) == 0 | ($44 | 0) == 1) {
  HEAP16[$bd45_sub >> 1] = 45; //@line 30210
 } else if (($44 | 0) == 2) {
  $47 = $da + 8 | 0; //@line 30213
  $48 = HEAP32[$47 >> 2] | 0; //@line 30214
  $49 = $48 << 1; //@line 30215
  $58 = ((HEAPU8[$src + $49 | 0] | 0) << 8 | (HEAPU8[$src + ($49 | 1) | 0] | 0)) & 65535; //@line 30225
  HEAP32[$47 >> 2] = $48 + 1; //@line 30227
  $62 = ($58 & 32768 | 0) != 0; //@line 30230
  if ($62) {
   $68 = -$58 & 65535; //@line 30237
  } else {
   $68 = $58; //@line 30239
  }
  _sprintf($bd45 | 0, 44896, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = $62 ? 56344 : 62888, HEAP32[tempInt + 8 >> 2] = 41376, HEAP32[tempInt + 16 >> 2] = $68, tempInt) | 0) | 0; //@line 30242
 } else if (($44 | 0) == 3) {
  $71 = $da + 8 | 0; //@line 30245
  $72 = HEAP32[$71 >> 2] | 0; //@line 30246
  $73 = $72 << 1; //@line 30247
  $82 = ((HEAPU8[$src + $73 | 0] | 0) << 8 | (HEAPU8[$src + ($73 | 1) | 0] | 0)) & 65535; //@line 30257
  $83 = $72 + 1 | 0; //@line 30258
  HEAP32[$71 >> 2] = $83; //@line 30259
  $85 = $83 << 1; //@line 30261
  $94 = ((HEAPU8[$src + $85 | 0] | 0) << 8 | (HEAPU8[$src + ($85 | 1) | 0] | 0)) & 65535; //@line 30271
  HEAP32[$71 >> 2] = $72 + 2; //@line 30273
  $96 = $94 | $82 << 16; //@line 30274
  $98 = ($96 | 0) < 0; //@line 30276
  _sprintf($bd45 | 0, 42576, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = $98 ? 56344 : 62888, HEAP32[tempInt + 8 >> 2] = 41376, HEAP32[tempInt + 16 >> 2] = $98 ? -$96 | 0 : $96, tempInt) | 0) | 0; //@line 30280
 }
 $104 = $3 & 3; //@line 30283
 if (($104 | 0) == 0 | ($104 | 0) == 1) {
  HEAP16[$od43_sub >> 1] = 45; //@line 30285
 } else if (($104 | 0) == 2) {
  $107 = $da + 8 | 0; //@line 30288
  $108 = HEAP32[$107 >> 2] | 0; //@line 30289
  $109 = $108 << 1; //@line 30290
  $118 = ((HEAPU8[$src + $109 | 0] | 0) << 8 | (HEAPU8[$src + ($109 | 1) | 0] | 0)) & 65535; //@line 30300
  HEAP32[$107 >> 2] = $108 + 1; //@line 30302
  $122 = ($118 & 32768 | 0) != 0; //@line 30305
  if ($122) {
   $128 = -$118 & 65535; //@line 30312
  } else {
   $128 = $118; //@line 30314
  }
  _sprintf($od43 | 0, 44896, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = $122 ? 56344 : 62888, HEAP32[tempInt + 8 >> 2] = 41376, HEAP32[tempInt + 16 >> 2] = $128, tempInt) | 0) | 0; //@line 30317
 } else if (($104 | 0) == 3) {
  $131 = $da + 8 | 0; //@line 30320
  $132 = HEAP32[$131 >> 2] | 0; //@line 30321
  $133 = $132 << 1; //@line 30322
  $142 = ((HEAPU8[$src + $133 | 0] | 0) << 8 | (HEAPU8[$src + ($133 | 1) | 0] | 0)) & 65535; //@line 30332
  $143 = $132 + 1 | 0; //@line 30333
  HEAP32[$131 >> 2] = $143; //@line 30334
  $145 = $143 << 1; //@line 30336
  $154 = ((HEAPU8[$src + $145 | 0] | 0) << 8 | (HEAPU8[$src + ($145 | 1) | 0] | 0)) & 65535; //@line 30346
  HEAP32[$131 >> 2] = $132 + 2; //@line 30348
  $156 = $154 | $142 << 16; //@line 30349
  $158 = ($156 | 0) < 0; //@line 30351
  _sprintf($od43 | 0, 42576, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = $158 ? 56344 : 62888, HEAP32[tempInt + 8 >> 2] = 41376, HEAP32[tempInt + 16 >> 2] = $158 ? -$156 | 0 : $156, tempInt) | 0) | 0; //@line 30355
 }
 if (($3 & 4 | 0) == 0) {
  _sprintf($dst | 0, 41720, (tempInt = STACKTOP, STACKTOP = STACKTOP + 40 | 0, HEAP32[tempInt >> 2] = $br39, HEAP32[tempInt + 8 >> 2] = $bd45_sub, HEAP32[tempInt + 16 >> 2] = $ix41, HEAP32[tempInt + 24 >> 2] = $37, HEAP32[tempInt + 32 >> 2] = $od43_sub, tempInt) | 0) | 0; //@line 30362
  $171 = $da | 0; //@line 30363
  $172 = HEAP32[$171 >> 2] | 0; //@line 30364
  $173 = $172 | 128; //@line 30365
  HEAP32[$171 >> 2] = $173; //@line 30366
  STACKTOP = sp; //@line 30367
  return;
 } else {
  _sprintf($dst | 0, 42040, (tempInt = STACKTOP, STACKTOP = STACKTOP + 40 | 0, HEAP32[tempInt >> 2] = $br39, HEAP32[tempInt + 8 >> 2] = $bd45_sub, HEAP32[tempInt + 16 >> 2] = $ix41, HEAP32[tempInt + 24 >> 2] = $37, HEAP32[tempInt + 32 >> 2] = $od43_sub, tempInt) | 0) | 0; //@line 30370
  $171 = $da | 0; //@line 30372
  $172 = HEAP32[$171 >> 2] | 0; //@line 30373
  $173 = $172 | 128; //@line 30374
  HEAP32[$171 >> 2] = $173; //@line 30375
  STACKTOP = sp; //@line 30376
  return;
 }
}
function _e68_new() {
 var $1 = 0, $2 = 0, $6 = 0, $29 = 0, $_0 = 0;
 $1 = _malloc(4528) | 0; //@line 30390
 $2 = $1; //@line 30391
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 30395
  return $_0 | 0; //@line 30398
 }
 $6 = $1 + 334 | 0; //@line 30401
 _memset($1 | 0, 0, 50); //@line 30402
 _memset($1 + 52 | 0, 0, 36); //@line 30403
 HEAP8[$6] = 1; //@line 30404
 HEAP8[$1 + 335 | 0] = 2; //@line 30406
 HEAP32[$1 + 364 >> 2] = 0; //@line 30409
 HEAP8[$1 + 368 | 0] = 0; //@line 30411
 HEAP32[$1 + 372 >> 2] = 1; //@line 30414
 HEAP32[$1 + 376 >> 2] = 0; //@line 30417
 HEAP32[$1 + 380 >> 2] = 0; //@line 30420
 HEAP32[$1 + 384 >> 2] = 0; //@line 30423
 HEAP32[$1 + 388 >> 2] = 30136; //@line 30426
 HEAP32[$1 + 392 >> 2] = 0; //@line 30429
 HEAP32[$1 + 396 >> 2] = 0; //@line 30432
 _e68_set_opcodes($2); //@line 30433
 HEAP16[$1 + 166 >> 1] = 8192; //@line 30436
 $29 = $1 + 148 | 0; //@line 30439
 _memset($1 + 88 | 0, 0, 64); //@line 30440
 if ((HEAP8[$6] | 0) == 0) {
  HEAP32[$29 >> 2] = 0; //@line 30445
  HEAP32[$1 + 172 >> 2] = 0; //@line 30448
 } else {
  HEAP32[$1 + 168 >> 2] = 0; //@line 30452
  HEAP32[$29 >> 2] = 0; //@line 30453
 }
 HEAP32[$1 + 152 >> 2] = 0; //@line 30458
 _memset($1 + 176 | 0, 0, 156); //@line 30460
 $_0 = $2; //@line 30462
 return $_0 | 0; //@line 30465
}
function _e68_set_ram($c, $ram, $cnt) {
 $c = $c | 0;
 $ram = $ram | 0;
 $cnt = $cnt | 0;
 HEAP32[$c + 32 >> 2] = $ram; //@line 30479
 HEAP32[$c + 36 >> 2] = ($ram | 0) == 0 ? 0 : $cnt; //@line 30481
 return;
}
function _e68_set_reset_fct($c, $ext, $fct) {
 $c = $c | 0;
 $ext = $ext | 0;
 $fct = $fct | 0;
 HEAP32[$c + 40 >> 2] = $ext; //@line 30495
 HEAP32[$c + 44 >> 2] = $fct; //@line 30498
 return;
}
function _e68_set_hook_fct($c, $ext, $fct) {
 $c = $c | 0;
 $ext = $ext | 0;
 $fct = $fct | 0;
 HEAP32[$c + 60 >> 2] = $ext; //@line 30512
 HEAP32[$c + 64 >> 2] = $fct; //@line 30515
 return;
}
function _e68_set_address_check($c, $check) {
 $c = $c | 0;
 $check = $check | 0;
 var $2 = 0, $3 = 0;
 $2 = $c | 0; //@line 30528
 $3 = HEAP32[$2 >> 2] | 0; //@line 30529
 HEAP32[$2 >> 2] = ($check | 0) == 0 ? $3 | 1 : $3 & -2; //@line 30533
 return;
}
function _e68_get_opcnt($c) {
 $c = $c | 0;
 return HEAP32[$c + 392 >> 2] | 0; //@line 30547
}
function _e68_get_clkcnt($c) {
 $c = $c | 0;
 return HEAP32[$c + 396 >> 2] | 0; //@line 30559
}
function _e68_get_delay($c) {
 $c = $c | 0;
 return HEAP32[$c + 372 >> 2] | 0; //@line 30571
}
function _e68_set_halt($c, $val) {
 $c = $c | 0;
 $val = $val | 0;
 HEAP8[$c + 335 | 0] = $val & 3; //@line 30584
 return;
}
function _e68_get_exception_cnt($c) {
 $c = $c | 0;
 return HEAP32[$c + 376 >> 2] | 0; //@line 30598
}
function _e68_get_exception($c) {
 $c = $c | 0;
 return HEAP32[$c + 384 >> 2] | 0; //@line 30610
}
function _e68_get_exception_name($c) {
 $c = $c | 0;
 return HEAP32[$c + 388 >> 2] | 0; //@line 30622
}
function _e68_get_last_pc($c, $idx) {
 $c = $c | 0;
 $idx = $idx | 0;
 var $_0 = 0;
 if ($idx >>> 0 > 31) {
  $_0 = 0; //@line 30635
  return $_0 | 0; //@line 30638
 }
 $_0 = HEAP32[$c + 200 + (((HEAP32[$c + 196 >> 2] | 0) - $idx & 31) << 2) >> 2] | 0; //@line 30647
 return $_0 | 0; //@line 30650
}
function _e68_get_last_trap_a($c) {
 $c = $c | 0;
 return HEAP16[$c + 328 >> 1] | 0; //@line 30662
}
function _e68_set_sr($c, $val) {
 $c = $c | 0;
 $val = $val | 0;
 var $1 = 0, $_lobit = 0, $7 = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $_pre_phi9_i = 0, $_pre_phi_i = 0, $19 = 0;
 $1 = $c + 166 | 0; //@line 30674
 if (((HEAP16[$1 >> 1] ^ $val) & 8192) == 0) {
  $19 = $val & -22753; //@line 30681
  HEAP16[$1 >> 1] = $19; //@line 30682
  return;
 }
 $_lobit = $val & 8192; //@line 30686
 $7 = $c + 334 | 0; //@line 30687
 $10 = $c + 148 | 0; //@line 30690
 $11 = HEAP32[$10 >> 2] | 0; //@line 30691
 if ((HEAP8[$7] | 0) == 0) {
  $15 = $c + 168 | 0; //@line 30694
  HEAP32[$15 >> 2] = $11; //@line 30695
  $_pre_phi_i = $15;
  $_pre_phi9_i = $c + 172 | 0;
 } else {
  $13 = $c + 172 | 0; //@line 30699
  HEAP32[$13 >> 2] = $11; //@line 30700
  $_pre_phi_i = $c + 168 | 0;
  $_pre_phi9_i = $13;
 }
 HEAP32[$10 >> 2] = HEAP32[($_lobit << 16 >> 16 != 0 ? $_pre_phi9_i : $_pre_phi_i) >> 2]; //@line 30710
 HEAP8[$7] = ($_lobit & 65535) >>> 13 & 255; //@line 30713
 $19 = $val & -22753; //@line 30715
 HEAP16[$1 >> 1] = $19; //@line 30716
 return;
}
function _e68_set_68000($c) {
 $c = $c | 0;
 HEAP32[$c >> 2] = 0; //@line 30728
 _e68_set_opcodes($c); //@line 30729
 return;
}
function _e68_set_68010($c) {
 $c = $c | 0;
 HEAP32[$c >> 2] = 2; //@line 30741
 _e68_set_opcodes($c); //@line 30742
 return;
}
function _e68_set_68020($c) {
 $c = $c | 0;
 HEAP32[$c >> 2] = 7; //@line 30754
 _e68_set_opcodes_020($c); //@line 30755
 return;
}
function _e68_get_reg($c, $reg, $val) {
 $c = $c | 0;
 $reg = $reg | 0;
 $val = $val | 0;
 var $_reg = 0, $19 = 0, $26 = 0, $28 = 0, $idx_066 = 0, $_165 = 0, $32 = 0, $35 = 0, $_lcssa = 0, $idx_0_lcssa = 0, $42 = 0, $43 = 0, $49 = 0, $_0_i = 0, $type_0 = 0, $_268 = 0, $108 = 0, $110 = 0, $_271 = 0, $idx_170 = 0, $114 = 0, $_2 = 0, $115 = 0, $_2_lcssa = 0, $idx_1_lcssa = 0, $_060_pn_lcssa = 0, $storemerge_in = 0, $storemerge = 0, $123 = 0, $128 = 0, $136 = 0, $_0 = 0;
 $_reg = (HEAP8[$reg] | 0) == 37 ? $reg + 1 | 0 : $reg; //@line 30787
 if ((_strcmp($_reg | 0, 50920) | 0) == 0) {
  HEAP32[$val >> 2] = HEAP32[$c + 152 >> 2]; //@line 30794
  $_0 = 0; //@line 30796
  return $_0 | 0; //@line 30799
 }
 if ((_strcmp($_reg | 0, 46808) | 0) == 0) {
  HEAP32[$val >> 2] = HEAP32[$c + 200 + ((HEAP32[$c + 196 >> 2] & 31) << 2) >> 2]; //@line 30810
  $_0 = 0; //@line 30812
  return $_0 | 0; //@line 30815
 }
 $19 = HEAP8[$_reg] | 0; //@line 30817
 do {
  if ($19 << 24 >> 24 == 111) {
   if ((HEAP8[$_reg + 1 | 0] | 0) != 112) {
    break;
   }
   $26 = HEAP8[$_reg + 2 | 0] | 0; //@line 30830
   if (($26 - 48 & 255) < 10) {
    $_165 = $_reg;
    $idx_066 = 0;
    $28 = $26;
    while (1) {
     $32 = ($idx_066 * 10 | 0) - 48 + ($28 << 24 >> 24) | 0; //@line 30843
     $35 = HEAP8[$_165 + 3 | 0] | 0; //@line 30846
     if (($35 - 48 & 255) < 10) {
      $_165 = $_165 + 1 | 0;
      $idx_066 = $32;
      $28 = $35;
     } else {
      break;
     }
    }
    $idx_0_lcssa = $32 << 1;
    $_lcssa = $35;
   } else {
    $idx_0_lcssa = 0;
    $_lcssa = $26;
   }
   if ($_lcssa << 24 >> 24 != 0) {
    $_0 = 1; //@line 30867
    return $_0 | 0; //@line 30870
   }
   $42 = (HEAP32[$c + 152 >> 2] | 0) + $idx_0_lcssa & 16777215; //@line 30875
   $43 = $42 + 1 | 0; //@line 30876
   if ($43 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
    $49 = HEAP32[$c + 32 >> 2] | 0; //@line 30883
    $_0_i = HEAPU8[$49 + $42 | 0] << 8 | HEAPU8[$49 + $43 | 0]; //@line 30893
   } else {
    $_0_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $42) | 0; //@line 30901
   }
   HEAP32[$val >> 2] = $_0_i & 65535; //@line 30905
   $_0 = 0; //@line 30907
   return $_0 | 0; //@line 30910
  }
 } while (0);
 if ((_strcmp($_reg | 0, 43344) | 0) == 0) {
  HEAP32[$val >> 2] = HEAPU16[$c + 166 >> 1] | 0; //@line 30920
  $_0 = 0; //@line 30922
  return $_0 | 0; //@line 30925
 }
 if ((_strcmp($_reg | 0, 40080) | 0) == 0) {
  HEAP32[$val >> 2] = HEAP32[$c + 148 >> 2]; //@line 30933
  $_0 = 0; //@line 30935
  return $_0 | 0; //@line 30938
 }
 if ((_strcmp($_reg | 0, 37112) | 0) == 0) {
  HEAP32[$val >> 2] = HEAP16[$c + 166 >> 1] & 255; //@line 30948
  $_0 = 0; //@line 30950
  return $_0 | 0; //@line 30953
 }
 if ((_strcmp($_reg | 0, 34080) | 0) == 0) {
  HEAP32[$val >> 2] = HEAP32[((HEAP8[$c + 334 | 0] | 0) == 0 ? $c + 148 | 0 : $c + 168 | 0) >> 2]; //@line 30966
  $_0 = 0; //@line 30968
  return $_0 | 0; //@line 30971
 }
 if ((_strcmp($_reg | 0, 31944) | 0) == 0) {
  HEAP32[$val >> 2] = HEAP32[((HEAP8[$c + 334 | 0] | 0) == 0 ? $c + 172 | 0 : $c + 148 | 0) >> 2]; //@line 30984
  $_0 = 0; //@line 30986
  return $_0 | 0; //@line 30989
 }
 if (($19 << 24 >> 24 | 0) == 100 | ($19 << 24 >> 24 | 0) == 68) {
  $type_0 = 100; //@line 30992
 } else if (($19 << 24 >> 24 | 0) == 97 | ($19 << 24 >> 24 | 0) == 65) {
  $type_0 = 97;
 } else {
  $_0 = 1; //@line 30996
  return $_0 | 0; //@line 30999
 }
 $_268 = $_reg + 1 | 0; //@line 31002
 $108 = HEAP8[$_268] | 0; //@line 31003
 if (($108 - 48 & 255) < 10) {
  $idx_170 = 0;
  $_271 = $_268;
  $110 = $108;
  while (1) {
   $114 = ($idx_170 * 10 | 0) - 48 + ($110 << 24 >> 24) | 0; //@line 31016
   $_2 = $_271 + 1 | 0; //@line 31017
   $115 = HEAP8[$_2] | 0; //@line 31018
   if (($115 - 48 & 255) < 10) {
    $idx_170 = $114;
    $_271 = $_2;
    $110 = $115;
   } else {
    break;
   }
  }
  $_060_pn_lcssa = $_271;
  $idx_1_lcssa = $114 & 7;
  $_2_lcssa = $_2;
 } else {
  $_060_pn_lcssa = $_reg;
  $idx_1_lcssa = 0;
  $_2_lcssa = $_268;
 }
 if (($type_0 | 0) == 97) {
  $storemerge_in = $c + 120 + ($idx_1_lcssa << 2) | 0; //@line 31042
 } else {
  $storemerge_in = $c + 88 + ($idx_1_lcssa << 2) | 0; //@line 31045
 }
 $storemerge = HEAP32[$storemerge_in >> 2] | 0; //@line 31048
 HEAP32[$val >> 2] = $storemerge; //@line 31049
 $123 = HEAP8[$_2_lcssa] | 0; //@line 31050
 if ($123 << 24 >> 24 == 46) {
  $128 = HEAP8[$_060_pn_lcssa + 2 | 0] | 0; //@line 31056
  if (($128 | 0) == 98 | ($128 | 0) == 66) {
   HEAP32[$val >> 2] = $storemerge & 255; //@line 31059
  } else if (($128 | 0) == 119 | ($128 | 0) == 87) {
   HEAP32[$val >> 2] = $storemerge & 65535; //@line 31063
  } else if (!(($128 | 0) == 108 | ($128 | 0) == 76)) {
   $_0 = 1; //@line 31066
   return $_0 | 0; //@line 31069
  }
  $136 = HEAP8[$_060_pn_lcssa + 3 | 0] | 0; //@line 31074
 } else {
  $136 = $123; //@line 31076
 }
 $_0 = $136 << 24 >> 24 != 0 | 0; //@line 31082
 return $_0 | 0; //@line 31085
}
function _e68_set_reg($c, $reg, $val) {
 $c = $c | 0;
 $reg = $reg | 0;
 $val = $val | 0;
 var $_reg = 0, $11 = 0, $12 = 0, $_lobit_i = 0, $18 = 0, $21 = 0, $22 = 0, $24 = 0, $26 = 0, $_pre_phi9_i_i = 0, $_pre_phi_i_i = 0, $39 = 0, $68 = 0, $type_0 = 0, $_148 = 0, $71 = 0, $73 = 0, $_151 = 0, $idx_050 = 0, $77 = 0, $_1 = 0, $78 = 0, $81 = 0, $idx_0_lcssa = 0, $_0_pn_lcssa = 0, $86 = 0, $mask_0 = 0, $92 = 0, $mask_1 = 0, $97 = 0, $104 = 0, $_047 = 0;
 $_reg = (HEAP8[$reg] | 0) == 37 ? $reg + 1 | 0 : $reg; //@line 31111
 if ((_strcmp($_reg | 0, 50920) | 0) == 0) {
  _e68_set_pc_prefetch($c, $val); //@line 31116
  $_047 = 0; //@line 31118
  return $_047 | 0; //@line 31121
 }
 if ((_strcmp($_reg | 0, 43344) | 0) == 0) {
  $11 = $val & 65535; //@line 31127
  $12 = $c + 166 | 0; //@line 31128
  if (((HEAP16[$12 >> 1] ^ $11) & 8192) != 0) {
   $_lobit_i = $11 & 8192; //@line 31135
   $18 = $c + 334 | 0; //@line 31136
   $21 = $c + 148 | 0; //@line 31139
   $22 = HEAP32[$21 >> 2] | 0; //@line 31140
   if ((HEAP8[$18] | 0) == 0) {
    $26 = $c + 168 | 0; //@line 31143
    HEAP32[$26 >> 2] = $22; //@line 31144
    $_pre_phi_i_i = $26;
    $_pre_phi9_i_i = $c + 172 | 0;
   } else {
    $24 = $c + 172 | 0; //@line 31148
    HEAP32[$24 >> 2] = $22; //@line 31149
    $_pre_phi_i_i = $c + 168 | 0;
    $_pre_phi9_i_i = $24;
   }
   HEAP32[$21 >> 2] = HEAP32[($_lobit_i << 16 >> 16 != 0 ? $_pre_phi9_i_i : $_pre_phi_i_i) >> 2]; //@line 31159
   HEAP8[$18] = ($_lobit_i & 65535) >>> 13 & 255; //@line 31162
  }
  HEAP16[$12 >> 1] = $11 & -22753; //@line 31166
  $_047 = 0; //@line 31168
  return $_047 | 0; //@line 31171
 }
 if ((_strcmp($_reg | 0, 40080) | 0) == 0) {
  HEAP32[$c + 148 >> 2] = $val; //@line 31178
  $_047 = 0; //@line 31180
  return $_047 | 0; //@line 31183
 }
 if ((_strcmp($_reg | 0, 37112) | 0) == 0) {
  $39 = $c + 166 | 0; //@line 31189
  HEAP16[$39 >> 1] = HEAP16[$39 >> 1] & -256 | $val & 255; //@line 31195
  $_047 = 0; //@line 31197
  return $_047 | 0; //@line 31200
 }
 if ((_strcmp($_reg | 0, 34080) | 0) == 0) {
  if ((HEAP8[$c + 334 | 0] | 0) == 0) {
   HEAP32[$c + 148 >> 2] = $val; //@line 31212
   $_047 = 0; //@line 31213
   return $_047 | 0; //@line 31216
  } else {
   HEAP32[$c + 168 >> 2] = $val; //@line 31219
   $_047 = 0; //@line 31221
   return $_047 | 0; //@line 31224
  }
 }
 if ((_strcmp($_reg | 0, 31944) | 0) == 0) {
  if ((HEAP8[$c + 334 | 0] | 0) == 0) {
   HEAP32[$c + 172 >> 2] = $val; //@line 31237
   $_047 = 0; //@line 31238
   return $_047 | 0; //@line 31241
  } else {
   HEAP32[$c + 148 >> 2] = $val; //@line 31244
   $_047 = 0; //@line 31246
   return $_047 | 0; //@line 31249
  }
 }
 $68 = HEAP8[$_reg] | 0; //@line 31252
 if (($68 << 24 >> 24 | 0) == 100 | ($68 << 24 >> 24 | 0) == 68) {
  $type_0 = 100; //@line 31254
 } else if (($68 << 24 >> 24 | 0) == 97 | ($68 << 24 >> 24 | 0) == 65) {
  $type_0 = 97;
 } else {
  $_047 = 1; //@line 31258
  return $_047 | 0; //@line 31261
 }
 $_148 = $_reg + 1 | 0; //@line 31264
 $71 = HEAP8[$_148] | 0; //@line 31265
 if (($71 - 48 & 255) < 10) {
  $idx_050 = 0;
  $_151 = $_148;
  $73 = $71;
  while (1) {
   $77 = ($idx_050 * 10 | 0) - 48 + ($73 << 24 >> 24) | 0; //@line 31277
   $_1 = $_151 + 1 | 0; //@line 31278
   $78 = HEAP8[$_1] | 0; //@line 31279
   if (($78 - 48 & 255) < 10) {
    $idx_050 = $77;
    $_151 = $_1;
    $73 = $78;
   } else {
    break;
   }
  }
  $_0_pn_lcssa = $_151;
  $idx_0_lcssa = $77 & 7;
  $81 = $78;
 } else {
  $_0_pn_lcssa = $_reg;
  $idx_0_lcssa = 0;
  $81 = $71;
 }
 if ($81 << 24 >> 24 == 46) {
  $86 = HEAP8[$_0_pn_lcssa + 2 | 0] | 0; //@line 31301
  if (($86 | 0) == 119 | ($86 | 0) == 87) {
   $mask_0 = 65535; //@line 31304
  } else if (($86 | 0) == 108 | ($86 | 0) == 76) {
   $mask_0 = -1; //@line 31307
  } else if (($86 | 0) == 98 | ($86 | 0) == 66) {
   $mask_0 = 255;
  } else {
   $_047 = 1; //@line 31311
   return $_047 | 0; //@line 31314
  }
  $mask_1 = $mask_0;
  $92 = HEAP8[$_0_pn_lcssa + 3 | 0] | 0;
 } else {
  $mask_1 = -1;
  $92 = $81;
 }
 if ($92 << 24 >> 24 != 0) {
  $_047 = 1; //@line 31329
  return $_047 | 0; //@line 31332
 }
 if (($type_0 | 0) == 97) {
  $97 = $c + 120 + ($idx_0_lcssa << 2) | 0; //@line 31337
  HEAP32[$97 >> 2] = HEAP32[$97 >> 2] & ~$mask_1 | $mask_1 & $val; //@line 31343
  $_047 = 0; //@line 31345
  return $_047 | 0; //@line 31348
 } else {
  $104 = $c + 88 + ($idx_0_lcssa << 2) | 0; //@line 31350
  HEAP32[$104 >> 2] = HEAP32[$104 >> 2] & ~$mask_1 | $mask_1 & $val; //@line 31356
  $_047 = 0; //@line 31357
  return $_047 | 0; //@line 31360
 }
 return 0;
}
function _e68_set_pc_prefetch($c, $val) {
 $c = $c | 0;
 $val = $val | 0;
 var $1 = 0, $6 = 0, $9 = 0, $10 = 0, $16 = 0, $_0_i_i = 0, $38 = 0, $41 = 0, $46 = 0, $49 = 0, $50 = 0, $56 = 0, $_0_i_i6 = 0, $78 = 0, $81 = 0;
 $1 = $c + 156 | 0; //@line 31379
 HEAP32[$1 >> 2] = $val; //@line 31380
 do {
  if (($val & 1 | 0) == 0) {
   $6 = $c + 164 | 0; //@line 31386
   HEAP16[$c + 162 >> 1] = HEAP16[$6 >> 1] | 0; //@line 31389
   $9 = $val & 16777215; //@line 31390
   $10 = $9 + 1 | 0; //@line 31391
   if ($10 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
    $16 = HEAP32[$c + 32 >> 2] | 0; //@line 31398
    $_0_i_i = HEAPU8[$16 + $9 | 0] << 8 | HEAPU8[$16 + $10 | 0]; //@line 31408
   } else {
    $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $9) | 0; //@line 31416
   }
   HEAP16[$6 >> 1] = $_0_i_i; //@line 31419
   if ((HEAP8[$c + 336 | 0] | 0) == 0) {
    HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 31427
    $38 = $c + 152 | 0; //@line 31428
    HEAP32[$38 >> 2] = (HEAP32[$38 >> 2] | 0) + 2; //@line 31431
    break;
   } else {
    _e68_exception_bus($c); //@line 31435
    break;
   }
  } else {
   _e68_exception_address($c, $val, 0, 0); //@line 31440
  }
 } while (0);
 $41 = HEAP32[$1 >> 2] | 0; //@line 31444
 if (($41 & 1 | 0) != 0) {
  _e68_exception_address($c, $41, 0, 0); //@line 31449
  $81 = $c + 152 | 0; //@line 31451
  HEAP32[$81 >> 2] = $val; //@line 31452
  return;
 }
 $46 = $c + 164 | 0; //@line 31456
 HEAP16[$c + 162 >> 1] = HEAP16[$46 >> 1] | 0; //@line 31459
 $49 = $41 & 16777215; //@line 31460
 $50 = $49 + 1 | 0; //@line 31461
 if ($50 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $56 = HEAP32[$c + 32 >> 2] | 0; //@line 31468
  $_0_i_i6 = HEAPU8[$56 + $49 | 0] << 8 | HEAPU8[$56 + $50 | 0]; //@line 31478
 } else {
  $_0_i_i6 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $49) | 0; //@line 31486
 }
 HEAP16[$46 >> 1] = $_0_i_i6; //@line 31489
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 31497
  $78 = $c + 152 | 0; //@line 31498
  HEAP32[$78 >> 2] = (HEAP32[$78 >> 2] | 0) + 2; //@line 31501
  $81 = $c + 152 | 0; //@line 31503
  HEAP32[$81 >> 2] = $val; //@line 31504
  return;
 } else {
  _e68_exception_bus($c); //@line 31508
  $81 = $c + 152 | 0; //@line 31510
  HEAP32[$81 >> 2] = $val; //@line 31511
  return;
 }
}
function _e68_exception_reset($c) {
 $c = $c | 0;
 var $1 = 0, $4 = 0, $9 = 0, $14 = 0, $17 = 0, $18 = 0, $storemerge_i_i = 0, $23 = 0, $24 = 0, $28 = 0, $51 = 0, $52 = 0, $_0_i = 0, $57 = 0, $_0_i15 = 0, $82 = 0, $87 = 0, $90 = 0, $91 = 0, $96 = 0, $_0_i_i17 = 0, $120 = 0, $125 = 0, $128 = 0, $129 = 0, $134 = 0, $_0_i_i = 0, $158 = 0, $159 = 0, $160 = 0, $161 = 0, $162 = 0;
 $1 = $c + 376 | 0; //@line 31541
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 1; //@line 31544
 $4 = $c + 152 | 0; //@line 31545
 HEAP32[$c + 380 >> 2] = HEAP32[$4 >> 2]; //@line 31548
 HEAP32[$c + 384 >> 2] = 0; //@line 31550
 HEAP32[$c + 388 >> 2] = 31032; //@line 31552
 $9 = $c + 166 | 0; //@line 31553
 if ((HEAP16[$9 >> 1] & 8192) == 0) {
  $14 = $c + 334 | 0; //@line 31559
  $17 = $c + 148 | 0; //@line 31562
  $18 = HEAP32[$17 >> 2] | 0; //@line 31563
  if ((HEAP8[$14] | 0) == 0) {
   HEAP32[$c + 168 >> 2] = $18; //@line 31567
   $storemerge_i_i = HEAP32[$c + 172 >> 2] | 0; //@line 31570
  } else {
   HEAP32[$c + 172 >> 2] = $18; //@line 31573
   $storemerge_i_i = $18; //@line 31575
  }
  HEAP32[$17 >> 2] = $storemerge_i_i; //@line 31578
  HEAP8[$14] = 1; //@line 31579
 }
 HEAP16[$9 >> 1] = 9984; //@line 31582
 $23 = $c + 36 | 0; //@line 31583
 $24 = HEAP32[$23 >> 2] | 0; //@line 31584
 if ($24 >>> 0 > 3) {
  $28 = HEAP32[$c + 32 >> 2] | 0; //@line 31589
  $_0_i = ((HEAPU8[$28] << 8 | HEAPU8[$28 + 1 | 0]) << 8 | HEAPU8[$28 + 2 | 0]) << 8 | HEAPU8[$28 + 3 | 0];
  $52 = $24;
 } else {
  $51 = FUNCTION_TABLE_iii[HEAP32[$c + 16 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, 0) | 0; //@line 31614
  $_0_i = $51;
  $52 = HEAP32[$23 >> 2] | 0;
 }
 HEAP32[$c + 148 >> 2] = $_0_i; //@line 31622
 if ($52 >>> 0 > 7) {
  $57 = HEAP32[$c + 32 >> 2] | 0; //@line 31627
  $_0_i15 = ((HEAPU8[$57 + 4 | 0] << 8 | HEAPU8[$57 + 5 | 0]) << 8 | HEAPU8[$57 + 6 | 0]) << 8 | HEAPU8[$57 + 7 | 0]; //@line 31647
 } else {
  $_0_i15 = FUNCTION_TABLE_iii[HEAP32[$c + 16 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, 4) | 0; //@line 31655
 }
 $82 = $c + 156 | 0; //@line 31658
 HEAP32[$82 >> 2] = $_0_i15; //@line 31659
 do {
  if (($_0_i15 & 1 | 0) == 0) {
   $87 = $c + 164 | 0; //@line 31665
   HEAP16[$c + 162 >> 1] = HEAP16[$87 >> 1] | 0; //@line 31668
   $90 = $_0_i15 & 16777215; //@line 31669
   $91 = $90 + 1 | 0; //@line 31670
   if ($91 >>> 0 < (HEAP32[$23 >> 2] | 0) >>> 0) {
    $96 = HEAP32[$c + 32 >> 2] | 0; //@line 31676
    $_0_i_i17 = HEAPU8[$96 + $90 | 0] << 8 | HEAPU8[$96 + $91 | 0]; //@line 31686
   } else {
    $_0_i_i17 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $90) | 0; //@line 31694
   }
   HEAP16[$87 >> 1] = $_0_i_i17; //@line 31697
   if ((HEAP8[$c + 336 | 0] | 0) == 0) {
    HEAP32[$82 >> 2] = (HEAP32[$82 >> 2] | 0) + 2; //@line 31705
    HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 2; //@line 31708
    break;
   } else {
    _e68_exception_bus($c); //@line 31712
    break;
   }
  } else {
   _e68_exception_address($c, $_0_i15, 0, 0); //@line 31717
  }
 } while (0);
 $120 = HEAP32[$82 >> 2] | 0; //@line 31721
 if (($120 & 1 | 0) != 0) {
  _e68_exception_address($c, $120, 0, 0); //@line 31726
  $158 = HEAP32[$82 >> 2] | 0; //@line 31728
  $159 = $158 - 4 | 0; //@line 31729
  HEAP32[$4 >> 2] = $159; //@line 31730
  $160 = $c + 372 | 0; //@line 31731
  $161 = HEAP32[$160 >> 2] | 0; //@line 31732
  $162 = $161 + 64 | 0; //@line 31733
  HEAP32[$160 >> 2] = $162; //@line 31734
  return;
 }
 $125 = $c + 164 | 0; //@line 31738
 HEAP16[$c + 162 >> 1] = HEAP16[$125 >> 1] | 0; //@line 31741
 $128 = $120 & 16777215; //@line 31742
 $129 = $128 + 1 | 0; //@line 31743
 if ($129 >>> 0 < (HEAP32[$23 >> 2] | 0) >>> 0) {
  $134 = HEAP32[$c + 32 >> 2] | 0; //@line 31749
  $_0_i_i = HEAPU8[$134 + $128 | 0] << 8 | HEAPU8[$134 + $129 | 0]; //@line 31759
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $128) | 0; //@line 31767
 }
 HEAP16[$125 >> 1] = $_0_i_i; //@line 31770
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$82 >> 2] = (HEAP32[$82 >> 2] | 0) + 2; //@line 31778
  HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 2; //@line 31781
  $158 = HEAP32[$82 >> 2] | 0; //@line 31783
  $159 = $158 - 4 | 0; //@line 31784
  HEAP32[$4 >> 2] = $159; //@line 31785
  $160 = $c + 372 | 0; //@line 31786
  $161 = HEAP32[$160 >> 2] | 0; //@line 31787
  $162 = $161 + 64 | 0; //@line 31788
  HEAP32[$160 >> 2] = $162; //@line 31789
  return;
 } else {
  _e68_exception_bus($c); //@line 31793
  $158 = HEAP32[$82 >> 2] | 0; //@line 31795
  $159 = $158 - 4 | 0; //@line 31796
  HEAP32[$4 >> 2] = $159; //@line 31797
  $160 = $c + 372 | 0; //@line 31798
  $161 = HEAP32[$160 >> 2] | 0; //@line 31799
  $162 = $161 + 64 | 0; //@line 31800
  HEAP32[$160 >> 2] = $162; //@line 31801
  return;
 }
}
function _e68_exception_bus($c) {
 $c = $c | 0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $11 = 0, $27 = 0, $28 = 0, $29 = 0, $33 = 0, $49 = 0, $50 = 0, $51 = 0;
 HEAP8[$c + 336 | 0] = 0; //@line 31819
 _e68_exception($c, 2, 0, 30088); //@line 31820
 $2 = $c + 148 | 0; //@line 31821
 $3 = HEAP32[$2 >> 2] | 0; //@line 31822
 $4 = $3 - 4 | 0; //@line 31823
 $5 = $4 & 16777215; //@line 31824
 $6 = $5 + 3 | 0; //@line 31825
 $7 = $c + 36 | 0; //@line 31826
 if ($6 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
  $11 = $c + 32 | 0; //@line 31831
  HEAP8[(HEAP32[$11 >> 2] | 0) + $5 | 0] = 0; //@line 31834
  HEAP8[(HEAP32[$11 >> 2] | 0) + ($5 + 1) | 0] = 0; //@line 31838
  HEAP8[(HEAP32[$11 >> 2] | 0) + ($5 + 2) | 0] = 0; //@line 31842
  HEAP8[(HEAP32[$11 >> 2] | 0) + $6 | 0] = 0; //@line 31845
 } else {
  FUNCTION_TABLE_viii[HEAP32[$c + 28 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $5, 0); //@line 31852
 }
 HEAP32[$2 >> 2] = $4; //@line 31854
 $27 = $3 - 8 | 0; //@line 31855
 $28 = $27 & 16777215; //@line 31856
 $29 = $28 + 3 | 0; //@line 31857
 if ($29 >>> 0 < (HEAP32[$7 >> 2] | 0) >>> 0) {
  $33 = $c + 32 | 0; //@line 31862
  HEAP8[(HEAP32[$33 >> 2] | 0) + $28 | 0] = 0; //@line 31865
  HEAP8[(HEAP32[$33 >> 2] | 0) + ($28 + 1) | 0] = 0; //@line 31869
  HEAP8[(HEAP32[$33 >> 2] | 0) + ($28 + 2) | 0] = 0; //@line 31873
  HEAP8[(HEAP32[$33 >> 2] | 0) + $29 | 0] = 0; //@line 31876
  HEAP32[$2 >> 2] = $27; //@line 31878
  $49 = $c + 372 | 0; //@line 31879
  $50 = HEAP32[$49 >> 2] | 0; //@line 31880
  $51 = $50 + 62 | 0; //@line 31881
  HEAP32[$49 >> 2] = $51; //@line 31882
  return;
 } else {
  FUNCTION_TABLE_viii[HEAP32[$c + 28 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $28, 0); //@line 31890
  HEAP32[$2 >> 2] = $27; //@line 31891
  $49 = $c + 372 | 0; //@line 31892
  $50 = HEAP32[$49 >> 2] | 0; //@line 31893
  $51 = $50 + 62 | 0; //@line 31894
  HEAP32[$49 >> 2] = $51; //@line 31895
  return;
 }
}
function _e68_exception($c, $vct, $fmt, $name) {
 $c = $c | 0;
 $vct = $vct | 0;
 $fmt = $fmt | 0;
 $name = $name | 0;
 var $1 = 0, $2 = 0, $5 = 0, $11 = 0, $22 = 0, $23 = 0, $25 = 0, $29 = 0, $32 = 0, $33 = 0, $storemerge_i_i = 0, $44 = 0, $46 = 0, $47 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $58 = 0, $_pre_phi = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $81 = 0, $102 = 0, $103 = 0, $104 = 0, $110 = 0, $125 = 0, $126 = 0, $131 = 0, $158 = 0, $159 = 0, $164 = 0, $167 = 0, $168 = 0, $173 = 0, $_0_i_i = 0, $197 = 0, $202 = 0, $205 = 0, $206 = 0, $211 = 0, $_0_i_i36 = 0;
 $1 = $vct & 255; //@line 31936
 $2 = $c + 376 | 0; //@line 31937
 HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 1; //@line 31940
 $5 = $c + 152 | 0; //@line 31941
 HEAP32[$c + 380 >> 2] = HEAP32[$5 >> 2]; //@line 31944
 HEAP32[$c + 384 >> 2] = $1; //@line 31946
 HEAP32[$c + 388 >> 2] = $name; //@line 31948
 $11 = HEAP32[$c + 80 >> 2] | 0; //@line 31950
 if (($11 | 0) != 0) {
  FUNCTION_TABLE_vii[$11 & 511](HEAP32[$c + 68 >> 2] | 0, $1); //@line 31956
 }
 if (($1 | 0) != 7 & ($1 - 32 | 0) >>> 0 > 15) {
  HEAP16[$c + 332 >> 1] = 0; //@line 31966
 }
 $22 = $c + 166 | 0; //@line 31969
 $23 = HEAP16[$22 >> 1] | 0; //@line 31970
 $25 = $23 & 1823 | 8192; //@line 31972
 if (($23 & 8192) == 0) {
  $29 = $c + 334 | 0; //@line 31977
  $32 = $c + 148 | 0; //@line 31980
  $33 = HEAP32[$32 >> 2] | 0; //@line 31981
  if ((HEAP8[$29] | 0) == 0) {
   HEAP32[$c + 168 >> 2] = $33; //@line 31985
   $storemerge_i_i = HEAP32[$c + 172 >> 2] | 0; //@line 31988
  } else {
   HEAP32[$c + 172 >> 2] = $33; //@line 31991
   $storemerge_i_i = $33; //@line 31993
  }
  HEAP32[$32 >> 2] = $storemerge_i_i; //@line 31996
  HEAP8[$29] = 1; //@line 31997
 }
 HEAP16[$22 >> 1] = $25; //@line 32000
 if ((HEAP32[$c >> 2] & 2 | 0) == 0) {
  $70 = HEAP32[$c + 148 >> 2] | 0;
  $_pre_phi = $c + 36 | 0;
 } else {
  $44 = $1 << 2; //@line 32014
  $46 = ($fmt << 12 | $44) & 65535; //@line 32016
  $47 = $c + 148 | 0; //@line 32017
  $49 = (HEAP32[$47 >> 2] | 0) - 2 | 0; //@line 32019
  $50 = $49 & 16777215; //@line 32020
  $51 = $50 + 1 | 0; //@line 32021
  $52 = $c + 36 | 0; //@line 32022
  if ($51 >>> 0 < (HEAP32[$52 >> 2] | 0) >>> 0) {
   $58 = $c + 32 | 0; //@line 32029
   HEAP8[(HEAP32[$58 >> 2] | 0) + $50 | 0] = ($46 & 65535) >>> 8 & 255; //@line 32032
   HEAP8[(HEAP32[$58 >> 2] | 0) + $51 | 0] = $44 & 255; //@line 32036
  } else {
   FUNCTION_TABLE_viii[HEAP32[$c + 24 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $50, $46); //@line 32043
  }
  HEAP32[$47 >> 2] = $49; //@line 32045
  $70 = $49;
  $_pre_phi = $52;
 }
 $71 = HEAP32[$5 >> 2] | 0; //@line 32051
 $72 = $c + 148 | 0; //@line 32052
 $73 = $70 - 4 | 0; //@line 32053
 $74 = $73 & 16777215; //@line 32054
 $75 = $74 + 3 | 0; //@line 32055
 if ($75 >>> 0 < (HEAP32[$_pre_phi >> 2] | 0) >>> 0) {
  $81 = $c + 32 | 0; //@line 32062
  HEAP8[(HEAP32[$81 >> 2] | 0) + $74 | 0] = $71 >>> 24 & 255; //@line 32065
  HEAP8[(HEAP32[$81 >> 2] | 0) + ($74 + 1) | 0] = $71 >>> 16 & 255; //@line 32071
  HEAP8[(HEAP32[$81 >> 2] | 0) + ($74 + 2) | 0] = $71 >>> 8 & 255; //@line 32077
  HEAP8[(HEAP32[$81 >> 2] | 0) + $75 | 0] = $71 & 255; //@line 32081
 } else {
  FUNCTION_TABLE_viii[HEAP32[$c + 28 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $74, $71); //@line 32088
 }
 HEAP32[$72 >> 2] = $73; //@line 32090
 $102 = $70 - 6 | 0; //@line 32091
 $103 = $102 & 16777215; //@line 32092
 $104 = $103 + 1 | 0; //@line 32093
 if ($104 >>> 0 < (HEAP32[$_pre_phi >> 2] | 0) >>> 0) {
  $110 = $c + 32 | 0; //@line 32100
  HEAP8[(HEAP32[$110 >> 2] | 0) + $103 | 0] = ($23 & 65535) >>> 8 & 255; //@line 32103
  HEAP8[(HEAP32[$110 >> 2] | 0) + $104 | 0] = $23 & 255; //@line 32107
 } else {
  FUNCTION_TABLE_viii[HEAP32[$c + 24 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $103, $23); //@line 32114
 }
 HEAP32[$72 >> 2] = $102; //@line 32116
 $125 = (HEAP32[$c + 176 >> 2] | 0) + ($1 << 2) & 16777215; //@line 32121
 $126 = $125 + 3 | 0; //@line 32122
 if ($126 >>> 0 < (HEAP32[$_pre_phi >> 2] | 0) >>> 0) {
  $131 = HEAP32[$c + 32 >> 2] | 0; //@line 32128
  $158 = ((HEAPU8[$131 + $125 | 0] << 8 | HEAPU8[$131 + ($125 + 1) | 0]) << 8 | HEAPU8[$131 + ($125 + 2) | 0]) << 8 | HEAPU8[$131 + $126 | 0]; //@line 32150
 } else {
  $158 = FUNCTION_TABLE_iii[HEAP32[$c + 16 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $125) | 0; //@line 32158
 }
 $159 = $c + 156 | 0; //@line 32161
 HEAP32[$159 >> 2] = $158; //@line 32162
 do {
  if (($158 & 1 | 0) == 0) {
   $164 = $c + 164 | 0; //@line 32168
   HEAP16[$c + 162 >> 1] = HEAP16[$164 >> 1] | 0; //@line 32171
   $167 = $158 & 16777215; //@line 32172
   $168 = $167 + 1 | 0; //@line 32173
   if ($168 >>> 0 < (HEAP32[$_pre_phi >> 2] | 0) >>> 0) {
    $173 = HEAP32[$c + 32 >> 2] | 0; //@line 32179
    $_0_i_i = HEAPU8[$173 + $167 | 0] << 8 | HEAPU8[$173 + $168 | 0]; //@line 32189
   } else {
    $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $167) | 0; //@line 32197
   }
   HEAP16[$164 >> 1] = $_0_i_i; //@line 32200
   if ((HEAP8[$c + 336 | 0] | 0) == 0) {
    HEAP32[$159 >> 2] = (HEAP32[$159 >> 2] | 0) + 2; //@line 32208
    HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 2; //@line 32211
    break;
   } else {
    _e68_exception_bus($c); //@line 32215
    break;
   }
  } else {
   _e68_exception_address($c, $158, 0, 0); //@line 32220
  }
 } while (0);
 $197 = HEAP32[$159 >> 2] | 0; //@line 32224
 if (($197 & 1 | 0) != 0) {
  _e68_exception_address($c, $197, 0, 0); //@line 32229
  HEAP32[$5 >> 2] = $158; //@line 32231
  return;
 }
 $202 = $c + 164 | 0; //@line 32235
 HEAP16[$c + 162 >> 1] = HEAP16[$202 >> 1] | 0; //@line 32238
 $205 = $197 & 16777215; //@line 32239
 $206 = $205 + 1 | 0; //@line 32240
 if ($206 >>> 0 < (HEAP32[$_pre_phi >> 2] | 0) >>> 0) {
  $211 = HEAP32[$c + 32 >> 2] | 0; //@line 32246
  $_0_i_i36 = HEAPU8[$211 + $205 | 0] << 8 | HEAPU8[$211 + $206 | 0]; //@line 32256
 } else {
  $_0_i_i36 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $205) | 0; //@line 32264
 }
 HEAP16[$202 >> 1] = $_0_i_i36; //@line 32267
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$159 >> 2] = (HEAP32[$159 >> 2] | 0) + 2; //@line 32275
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 2; //@line 32278
  HEAP32[$5 >> 2] = $158; //@line 32280
  return;
 } else {
  _e68_exception_bus($c); //@line 32284
  HEAP32[$5 >> 2] = $158; //@line 32286
  return;
 }
}
function _e68_exception_address($c, $addr, $data, $wr) {
 $c = $c | 0;
 $addr = $addr | 0;
 $data = $data | 0;
 $wr = $wr | 0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $14 = 0, $25 = 0, $26 = 0, $27 = 0, $33 = 0, $_ = 0, $val_1 = 0, $57 = 0, $58 = 0, $59 = 0, $63 = 0, $74 = 0, $75 = 0, $76 = 0;
 _e68_exception($c, 3, 8, 58064); //@line 32309
 $2 = HEAP16[$c + 160 >> 1] | 0; //@line 32311
 $3 = $c + 148 | 0; //@line 32312
 $4 = HEAP32[$3 >> 2] | 0; //@line 32313
 $5 = $4 - 2 | 0; //@line 32314
 $6 = $5 & 16777215; //@line 32315
 $7 = $6 + 1 | 0; //@line 32316
 $8 = $c + 36 | 0; //@line 32317
 if ($7 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
  $14 = $c + 32 | 0; //@line 32324
  HEAP8[(HEAP32[$14 >> 2] | 0) + $6 | 0] = ($2 & 65535) >>> 8 & 255; //@line 32327
  HEAP8[(HEAP32[$14 >> 2] | 0) + $7 | 0] = $2 & 255; //@line 32331
 } else {
  FUNCTION_TABLE_viii[HEAP32[$c + 24 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $6, $2); //@line 32338
 }
 HEAP32[$3 >> 2] = $5; //@line 32340
 $25 = $4 - 6 | 0; //@line 32341
 $26 = $25 & 16777215; //@line 32342
 $27 = $26 + 3 | 0; //@line 32343
 if ($27 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
  $33 = $c + 32 | 0; //@line 32350
  HEAP8[(HEAP32[$33 >> 2] | 0) + $26 | 0] = $addr >>> 24 & 255; //@line 32353
  HEAP8[(HEAP32[$33 >> 2] | 0) + ($26 + 1) | 0] = $addr >>> 16 & 255; //@line 32359
  HEAP8[(HEAP32[$33 >> 2] | 0) + ($26 + 2) | 0] = $addr >>> 8 & 255; //@line 32365
  HEAP8[(HEAP32[$33 >> 2] | 0) + $27 | 0] = $addr & 255; //@line 32369
 } else {
  FUNCTION_TABLE_viii[HEAP32[$c + 28 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $26, $addr); //@line 32376
 }
 HEAP32[$3 >> 2] = $25; //@line 32378
 $_ = ($wr | 0) == 0 ? 16 : 0; //@line 32380
 $val_1 = ($data | 0) == 0 ? $_ : $_ | 8; //@line 32383
 $57 = $4 - 8 | 0; //@line 32384
 $58 = $57 & 16777215; //@line 32385
 $59 = $58 + 1 | 0; //@line 32386
 if ($59 >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0) {
  $63 = $c + 32 | 0; //@line 32391
  HEAP8[(HEAP32[$63 >> 2] | 0) + $58 | 0] = 0; //@line 32394
  HEAP8[(HEAP32[$63 >> 2] | 0) + $59 | 0] = $val_1 & 255; //@line 32398
  HEAP32[$3 >> 2] = $57; //@line 32400
  $74 = $c + 372 | 0; //@line 32401
  $75 = HEAP32[$74 >> 2] | 0; //@line 32402
  $76 = $75 + 64 | 0; //@line 32403
  HEAP32[$74 >> 2] = $76; //@line 32404
  return;
 } else {
  FUNCTION_TABLE_viii[HEAP32[$c + 24 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $58, $val_1); //@line 32412
  HEAP32[$3 >> 2] = $57; //@line 32413
  $74 = $c + 372 | 0; //@line 32414
  $75 = HEAP32[$74 >> 2] | 0; //@line 32415
  $76 = $75 + 64 | 0; //@line 32416
  HEAP32[$74 >> 2] = $76; //@line 32417
  return;
 }
}
function _e68_interrupt($c, $level) {
 $c = $c | 0;
 $level = $level | 0;
 var $2 = 0;
 do {
  if (($level | 0) != 0) {
   $2 = $c + 335 | 0; //@line 32435
   HEAP8[$2] = HEAP8[$2] & -2; //@line 32438
   if (($level | 0) != 7) {
    break;
   }
   if ((HEAP32[$c + 364 >> 2] | 0) == 7) {
    break;
   }
   HEAP8[$c + 368 | 0] = 1; //@line 32452
  }
 } while (0);
 HEAP32[$c + 364 >> 2] = $level; //@line 32457
 return;
}
function _e68_exception_illegal($c) {
 $c = $c | 0;
 var $2 = 0, $11 = 0;
 $2 = HEAP32[$c + 76 >> 2] | 0; //@line 32470
 if (($2 | 0) != 0) {
  FUNCTION_TABLE_vii[$2 & 511](HEAP32[$c + 68 >> 2] | 0, HEAPU16[$c + 160 >> 1] | 0); //@line 32479
 }
 _e68_exception($c, 4, 0, 57272); //@line 32482
 $11 = $c + 372 | 0; //@line 32483
 HEAP32[$11 >> 2] = (HEAP32[$11 >> 2] | 0) + 62; //@line 32486
 return;
}
function _e68_exception_divzero($c) {
 $c = $c | 0;
 var $1 = 0;
 _e68_exception($c, 5, 0, 56080); //@line 32497
 $1 = $c + 372 | 0; //@line 32498
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 66; //@line 32501
 return;
}
function _e68_exception_check($c) {
 $c = $c | 0;
 var $1 = 0;
 _e68_exception($c, 6, 0, 55312); //@line 32512
 $1 = $c + 372 | 0; //@line 32513
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 68; //@line 32516
 return;
}
function _e68_exception_overflow($c) {
 $c = $c | 0;
 var $1 = 0;
 _e68_exception($c, 7, 0, 54648); //@line 32527
 $1 = $c + 372 | 0; //@line 32528
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 68; //@line 32531
 return;
}
function _e68_exception_privilege($c) {
 $c = $c | 0;
 var $1 = 0;
 _e68_exception($c, 8, 0, 53960); //@line 32542
 $1 = $c + 372 | 0; //@line 32543
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 62; //@line 32546
 return;
}
function _e68_exception_axxx($c) {
 $c = $c | 0;
 var $1 = 0;
 _e68_exception($c, 10, 0, 52528); //@line 32557
 $1 = $c + 372 | 0; //@line 32558
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 62; //@line 32561
 return;
}
function _e68_exception_fxxx($c) {
 $c = $c | 0;
 var $1 = 0;
 _e68_exception($c, 11, 0, 51864); //@line 32572
 $1 = $c + 372 | 0; //@line 32573
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 62; //@line 32576
 return;
}
function _e68_exception_format($c) {
 $c = $c | 0;
 var $1 = 0;
 _e68_exception($c, 14, 0, 51336); //@line 32587
 $1 = $c + 372 | 0; //@line 32588
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 62; //@line 32591
 return;
}
function _e68_exception_trap($c, $n) {
 $c = $c | 0;
 $n = $n | 0;
 var $2 = 0;
 _e68_exception($c, $n + 32 | 0, 0, 50504); //@line 32604
 $2 = $c + 372 | 0; //@line 32605
 HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 62; //@line 32608
 return;
}
function _e68_reset($c) {
 $c = $c | 0;
 var $1 = 0, $5 = 0, $6 = 0, $11 = 0, $15 = 0, $16 = 0, $19 = 0, $20 = 0, $_pre24 = 0, $_pre_phi26_ph = 0, $40 = 0, label = 0;
 $1 = $c + 48 | 0; //@line 32623
 if ((HEAP8[$1] | 0) != 0) {
  return;
 }
 HEAP8[$1] = 1; //@line 32631
 $5 = $c + 44 | 0; //@line 32632
 $6 = HEAP32[$5 >> 2] | 0; //@line 32633
 if (($6 | 0) != 0) {
  FUNCTION_TABLE_vii[$6 & 511](HEAP32[$c + 40 >> 2] | 0, 1); //@line 32639
 }
 $11 = $c + 166 | 0; //@line 32642
 $15 = $c + 334 | 0; //@line 32646
 $16 = HEAP8[$15] | 0; //@line 32647
 do {
  if ((HEAP16[$11 >> 1] & 8192) == 0) {
   $19 = $c + 148 | 0; //@line 32652
   $20 = HEAP32[$19 >> 2] | 0; //@line 32653
   if ($16 << 24 >> 24 == 0) {
    HEAP32[$c + 168 >> 2] = $20; //@line 32657
   } else {
    HEAP32[$c + 172 >> 2] = $20; //@line 32660
   }
   HEAP8[$15] = 1; //@line 32663
   HEAP16[$11 >> 1] = 8192; //@line 32664
   _memset($c + 88 | 0, 0, 60); //@line 32667
   HEAP32[$19 >> 2] = 0; //@line 32668
   $_pre_phi26_ph = $19; //@line 32670
   label = 3616; //@line 32671
  } else {
   $_pre24 = $c + 148 | 0; //@line 32673
   HEAP16[$11 >> 1] = 8192; //@line 32675
   _memset($c + 88 | 0, 0, 60); //@line 32678
   HEAP32[$_pre24 >> 2] = 0; //@line 32679
   if ($16 << 24 >> 24 != 0) {
    $_pre_phi26_ph = $_pre24; //@line 32682
    label = 3616; //@line 32683
    break;
   }
   HEAP32[$_pre24 >> 2] = 0; //@line 32686
   HEAP32[$c + 172 >> 2] = 0; //@line 32688
  }
 } while (0);
 if ((label | 0) == 3616) {
  HEAP32[$c + 168 >> 2] = 0; //@line 32694
  HEAP32[$_pre_phi26_ph >> 2] = 0; //@line 32695
 }
 HEAP8[$c + 335 | 0] = 0; //@line 32700
 HEAP8[$c + 336 | 0] = 0; //@line 32702
 _memset($c + 176 | 0, 0, 16); //@line 32704
 _e68_exception_reset($c); //@line 32705
 if ((HEAP8[$1] | 0) == 0) {
  return;
 }
 HEAP8[$1] = 0; //@line 32713
 $40 = HEAP32[$5 >> 2] | 0; //@line 32714
 if (($40 | 0) == 0) {
  return;
 }
 FUNCTION_TABLE_vii[$40 & 511](HEAP32[$c + 40 >> 2] | 0, 0); //@line 32723
 return;
}
function _e68_execute($c) {
 $c = $c | 0;
 var $2 = 0, $3 = 0, $5 = 0, $9 = 0, $11 = 0, $13 = 0, $21 = 0, $27 = 0, $31 = 0, $37 = 0, $42 = 0, $52 = 0, $57 = 0, $67 = 0, $78 = 0;
 $2 = HEAP32[$c + 152 >> 2] | 0; //@line 32744
 $3 = $c + 196 | 0; //@line 32745
 $5 = (HEAP32[$3 >> 2] | 0) + 1 | 0; //@line 32747
 HEAP32[$3 >> 2] = $5; //@line 32748
 HEAP32[$c + 200 + (($5 & 31) << 2) >> 2] = $2; //@line 32751
 HEAP8[$c + 336 | 0] = 0; //@line 32753
 $9 = $c + 166 | 0; //@line 32754
 $11 = $c + 332 | 0; //@line 32756
 HEAP16[$11 >> 1] = HEAP16[$9 >> 1] | 0; //@line 32757
 $13 = HEAP16[$c + 162 >> 1] | 0; //@line 32759
 HEAP16[$c + 160 >> 1] = $13; //@line 32761
 FUNCTION_TABLE_vi[HEAP32[$c + 400 + (($13 & 65535) >>> 6 << 2) >> 2] & 1023]($c); //@line 32768
 $21 = $c + 392 | 0; //@line 32769
 HEAP32[$21 >> 2] = (HEAP32[$21 >> 2] | 0) + 1; //@line 32772
 if ((HEAP16[$11 >> 1] | 0) < 0) {
  _e68_exception($c, 9, 0, 53384); //@line 32777
  $27 = $c + 372 | 0; //@line 32778
  HEAP32[$27 >> 2] = (HEAP32[$27 >> 2] | 0) + 62; //@line 32781
 }
 $31 = $c + 368 | 0; //@line 32784
 if ((HEAP8[$31] | 0) != 0) {
  _e68_exception($c, 31, 0, 50824); //@line 32789
  HEAP16[$9 >> 1] = HEAP16[$9 >> 1] | 1792; //@line 32792
  $37 = $c + 372 | 0; //@line 32793
  HEAP32[$37 >> 2] = (HEAP32[$37 >> 2] | 0) + 62; //@line 32796
  HEAP8[$31] = 0; //@line 32797
  return;
 }
 $42 = HEAP32[$c + 364 >> 2] | 0; //@line 32803
 if (($42 | 0) == 0) {
  return;
 }
 if (((HEAPU16[$9 >> 1] | 0) >>> 8 & 7) >>> 0 >= $42 >>> 0) {
  return;
 }
 $52 = HEAP32[$c + 56 >> 2] | 0; //@line 32821
 do {
  if (($52 | 0) != 0) {
   $57 = FUNCTION_TABLE_iii[$52 & 63](HEAP32[$c + 52 >> 2] | 0, $42) | 0; //@line 32828
   if ($57 >>> 0 >= 256) {
    break;
   }
   _e68_exception($c, $57, 0, 49560); //@line 32834
   HEAP16[$9 >> 1] = (HEAP16[$9 >> 1] & -1793 & 65535 | $42 << 8 & 1792) & 65535; //@line 32842
   $67 = $c + 372 | 0; //@line 32843
   HEAP32[$67 >> 2] = (HEAP32[$67 >> 2] | 0) + 62; //@line 32846
   return;
  }
 } while (0);
 _e68_exception($c, $42 + 24 | 0, 0, 50824); //@line 32853
 HEAP16[$9 >> 1] = (HEAP16[$9 >> 1] & -1793 & 65535 | $42 << 8 & 1792) & 65535; //@line 32861
 $78 = $c + 372 | 0; //@line 32862
 HEAP32[$78 >> 2] = (HEAP32[$78 >> 2] | 0) + 62; //@line 32865
 return;
}
function _e68_clock($c, $n) {
 $c = $c | 0;
 $n = $n | 0;
 var $1 = 0, $2 = 0, $3 = 0, $5 = 0, $_0 = 0, $8 = 0, $14 = 0, $17 = 0, $22 = 0, $_1 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 32879
 $1 = $c + 372 | 0; //@line 32880
 $2 = $c + 396 | 0; //@line 32881
 $3 = $c + 335 | 0; //@line 32882
 $_0 = $n;
 $5 = HEAP32[$1 >> 2] | 0;
 while (1) {
  if ($_0 >>> 0 < $5 >>> 0) {
   $_1 = $_0;
   $22 = $5;
   break;
  }
  $8 = $_0 - $5 | 0; //@line 32895
  HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + $5; //@line 32898
  HEAP32[$1 >> 2] = 0; //@line 32899
  if ((HEAP8[$3] | 0) != 0) {
   label = 3650; //@line 32904
   break;
  }
  _e68_execute($c); //@line 32907
  $14 = HEAP32[$1 >> 2] | 0; //@line 32908
  if (($14 | 0) == 0) {
   label = 3646; //@line 32912
   break;
  } else {
   $_0 = $8;
   $5 = $14;
  }
 }
 if ((label | 0) == 3650) {
  STACKTOP = sp; //@line 32919
  return;
 } else if ((label | 0) == 3646) {
  $17 = HEAP32[_stderr >> 2] | 0; //@line 32923
  _fprintf($17 | 0, 49080, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP32[$c + 152 >> 2], tempInt) | 0) | 0; //@line 32926
  _fflush($17 | 0) | 0; //@line 32927
  $_1 = $8;
  $22 = HEAP32[$1 >> 2] | 0;
 }
 HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + $_1; //@line 32936
 HEAP32[$1 >> 2] = $22 - $_1; //@line 32938
 STACKTOP = sp; //@line 32940
 return;
}
function _e68_op_dbcc($c, $cond) {
 $c = $c | 0;
 $cond = $cond | 0;
 var $1 = 0, $2 = 0, $7 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $17 = 0, $32 = 0, $33 = 0, $39 = 0, $40 = 0, $42 = 0, $44 = 0, $48 = 0, $51 = 0, $58 = 0, $59 = 0, $63 = 0, $76 = 0, $phitmp = 0, $88 = 0, $89 = 0, $92 = 0, $95 = 0, $96 = 0, $99 = 0, $105 = 0, $106 = 0, $111 = 0, $_0_i_i22 = 0, $136 = 0, $142 = 0, $143 = 0, $148 = 0, $163 = 0, $169 = 0, $176 = 0, $177 = 0, $181 = 0, $194 = 0, $phitmp35 = 0, $197 = 0;
 $1 = $c + 156 | 0; //@line 32972
 $2 = HEAP32[$1 >> 2] | 0; //@line 32973
 if (($2 & 1 | 0) != 0) {
  _e68_exception_address($c, $2, 0, 0); //@line 32978
  return;
 }
 $7 = $c + 164 | 0; //@line 32983
 $9 = $c + 162 | 0; //@line 32985
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 32986
 $10 = $2 & 16777215; //@line 32987
 $11 = $10 + 1 | 0; //@line 32988
 $12 = $c + 36 | 0; //@line 32989
 if ($11 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $17 = HEAP32[$c + 32 >> 2] | 0; //@line 32995
  $32 = HEAPU8[$17 + $10 | 0] << 8 | HEAPU8[$17 + $11 | 0]; //@line 33005
 } else {
  $32 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $10) | 0; //@line 33013
 }
 HEAP16[$7 >> 1] = $32; //@line 33016
 $33 = $c + 336 | 0; //@line 33017
 if ((HEAP8[$33] | 0) != 0) {
  _e68_exception_bus($c); //@line 33022
  return;
 }
 $39 = (HEAP32[$1 >> 2] | 0) + 2 | 0; //@line 33028
 HEAP32[$1 >> 2] = $39; //@line 33029
 $40 = $c + 152 | 0; //@line 33030
 $42 = (HEAP32[$40 >> 2] | 0) + 2 | 0; //@line 33032
 HEAP32[$40 >> 2] = $42; //@line 33033
 $44 = HEAPU16[$9 >> 1] | 0; //@line 33035
 $48 = ($44 & 32768 | 0) != 0 ? $44 | -65536 : $44; //@line 33039
 if (($cond | 0) != 0) {
  $51 = $c + 372 | 0; //@line 33043
  HEAP32[$51 >> 2] = (HEAP32[$51 >> 2] | 0) + 12; //@line 33046
  if (($39 & 1 | 0) != 0) {
   _e68_exception_address($c, $39, 0, 0); //@line 33051
   return;
  }
  HEAP16[$9 >> 1] = $32; //@line 33056
  $58 = $39 & 16777215; //@line 33057
  $59 = $58 + 1 | 0; //@line 33058
  do {
   if ($59 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
    $63 = HEAP32[$c + 32 >> 2] | 0; //@line 33065
    HEAP16[$7 >> 1] = HEAPU8[$63 + $58 | 0] << 8 | HEAPU8[$63 + $59 | 0]; //@line 33074
   } else {
    $76 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $58) | 0; //@line 33081
    $phitmp = (HEAP8[$33] | 0) == 0; //@line 33083
    HEAP16[$7 >> 1] = $76; //@line 33084
    if ($phitmp) {
     break;
    }
    _e68_exception_bus($c); //@line 33089
    return;
   }
  } while (0);
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 33097
  HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 33100
  return;
 }
 $88 = $c + 88 + ((HEAP16[$c + 160 >> 1] & 7) << 2) | 0; //@line 33109
 $89 = HEAP32[$88 >> 2] | 0; //@line 33110
 $92 = $89 + 65535 & 65535; //@line 33113
 HEAP32[$88 >> 2] = $92 | $89 & -65536; //@line 33115
 $95 = $c + 372 | 0; //@line 33117
 $96 = HEAP32[$95 >> 2] | 0; //@line 33118
 if (($92 | 0) == 65535) {
  HEAP32[$95 >> 2] = $96 + 14; //@line 33122
  $99 = HEAP32[$1 >> 2] | 0; //@line 33123
  if (($99 & 1 | 0) != 0) {
   _e68_exception_address($c, $99, 0, 0); //@line 33128
   return;
  }
  HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 33134
  $105 = $99 & 16777215; //@line 33135
  $106 = $105 + 1 | 0; //@line 33136
  if ($106 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
   $111 = HEAP32[$c + 32 >> 2] | 0; //@line 33142
   $_0_i_i22 = HEAPU8[$111 + $105 | 0] << 8 | HEAPU8[$111 + $106 | 0]; //@line 33152
  } else {
   $_0_i_i22 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $105) | 0; //@line 33160
  }
  HEAP16[$7 >> 1] = $_0_i_i22; //@line 33163
  if ((HEAP8[$33] | 0) == 0) {
   HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 33170
   HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 33173
   return;
  } else {
   _e68_exception_bus($c); //@line 33178
   return;
  }
 }
 HEAP32[$95 >> 2] = $96 + 10; //@line 33185
 $136 = $48 + $42 | 0; //@line 33186
 HEAP32[$1 >> 2] = $136; //@line 33187
 if (($136 & 1 | 0) != 0) {
  _e68_exception_address($c, $136, 0, 0); //@line 33192
  return;
 }
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 33198
 $142 = $136 & 16777215; //@line 33199
 $143 = $142 + 1 | 0; //@line 33200
 if ($143 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $148 = HEAP32[$c + 32 >> 2] | 0; //@line 33206
  $163 = HEAPU8[$148 + $142 | 0] << 8 | HEAPU8[$148 + $143 | 0]; //@line 33216
 } else {
  $163 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $142) | 0; //@line 33224
 }
 HEAP16[$7 >> 1] = $163; //@line 33227
 if ((HEAP8[$33] | 0) != 0) {
  _e68_exception_bus($c); //@line 33232
  return;
 }
 $169 = (HEAP32[$1 >> 2] | 0) + 2 | 0; //@line 33238
 HEAP32[$1 >> 2] = $169; //@line 33239
 HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 33242
 if (($169 & 1 | 0) != 0) {
  _e68_exception_address($c, $169, 0, 0); //@line 33247
  return;
 }
 HEAP16[$9 >> 1] = $163; //@line 33252
 $176 = $169 & 16777215; //@line 33253
 $177 = $176 + 1 | 0; //@line 33254
 do {
  if ($177 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
   $181 = HEAP32[$c + 32 >> 2] | 0; //@line 33261
   HEAP16[$7 >> 1] = HEAPU8[$181 + $176 | 0] << 8 | HEAPU8[$181 + $177 | 0]; //@line 33270
  } else {
   $194 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $176) | 0; //@line 33277
   $phitmp35 = (HEAP8[$33] | 0) == 0; //@line 33279
   HEAP16[$7 >> 1] = $194; //@line 33280
   if ($phitmp35) {
    break;
   }
   _e68_exception_bus($c); //@line 33285
   return;
  }
 } while (0);
 $197 = HEAP32[$1 >> 2] | 0; //@line 33291
 HEAP32[$1 >> 2] = $197 + 2; //@line 33293
 HEAP32[$40 >> 2] = $197 - 2; //@line 33295
 return;
}
function _e68_set_opcodes($c) {
 $c = $c | 0;
 var $i_013 = 0, $3 = 0;
 $i_013 = 0; //@line 33309
 do {
  $3 = HEAP32[16472 + ($i_013 << 2) >> 2] | 0; //@line 33313
  HEAP32[$c + 400 + ($i_013 << 2) >> 2] = ($3 | 0) == 0 ? 396 : $3; //@line 33317
  $i_013 = $i_013 + 1 | 0; //@line 33318
 } while ($i_013 >>> 0 < 1024);
 HEAP32[$c + 4496 >> 2] = 396; //@line 33328
 HEAP32[$c + 4500 >> 2] = 282; //@line 33330
 HEAP32[$c + 4504 >> 2] = 282; //@line 33332
 HEAP32[$c + 4508 >> 2] = 282; //@line 33334
 HEAP32[$c + 4512 >> 2] = 282; //@line 33336
 HEAP32[$c + 4516 >> 2] = 282; //@line 33338
 HEAP32[$c + 4520 >> 2] = 282; //@line 33340
 HEAP32[$c + 4524 >> 2] = 282; //@line 33342
 return;
}
function _e68_op_scc($c, $cond) {
 $c = $c | 0;
 $cond = $cond | 0;
 var $1 = 0, $7 = 0, $18 = 0, $19 = 0, $24 = 0, $27 = 0, $28 = 0, $34 = 0, $_0_i_i = 0, $56 = 0;
 $1 = $c + 372 | 0; //@line 33360
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 4; //@line 33363
 $7 = HEAP16[$c + 160 >> 1] & 63; //@line 33367
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($7 << 2) >> 2] & 127]($c, $7, 509, 8) | 0) != 0) {
  return;
 }
 if ((_e68_ea_set_val8($c, (($cond | 0) != 0) << 31 >> 31) | 0) != 0) {
  return;
 }
 $18 = $c + 156 | 0; //@line 33386
 $19 = HEAP32[$18 >> 2] | 0; //@line 33387
 if (($19 & 1 | 0) != 0) {
  _e68_exception_address($c, $19, 0, 0); //@line 33392
  return;
 }
 $24 = $c + 164 | 0; //@line 33397
 HEAP16[$c + 162 >> 1] = HEAP16[$24 >> 1] | 0; //@line 33400
 $27 = $19 & 16777215; //@line 33401
 $28 = $27 + 1 | 0; //@line 33402
 if ($28 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $34 = HEAP32[$c + 32 >> 2] | 0; //@line 33409
  $_0_i_i = HEAPU8[$34 + $27 | 0] << 8 | HEAPU8[$34 + $28 | 0]; //@line 33419
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $27) | 0; //@line 33427
 }
 HEAP16[$24 >> 1] = $_0_i_i; //@line 33430
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 2; //@line 33438
  $56 = $c + 152 | 0; //@line 33439
  HEAP32[$56 >> 2] = (HEAP32[$56 >> 2] | 0) + 2; //@line 33442
  return;
 } else {
  _e68_exception_bus($c); //@line 33447
  return;
 }
}
function _e68_op_undefined($c) {
 $c = $c | 0;
 var $1 = 0;
 _e68_exception_illegal($c); //@line 33460
 $1 = $c + 372 | 0; //@line 33461
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 33464
 return;
}
function _op41c0($c) {
 $c = $c | 0;
 var $1 = 0, $4 = 0, $15 = 0, $25 = 0, $26 = 0, $31 = 0, $34 = 0, $35 = 0, $41 = 0, $_0_i_i = 0, $63 = 0;
 $1 = $c + 160 | 0; //@line 33482
 $4 = HEAP16[$1 >> 1] & 63; //@line 33485
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 2020, 32) | 0) != 0) {
  return;
 }
 if ((HEAP32[$c + 340 >> 2] | 0) != 2) {
  _e68_exception_illegal($c); //@line 33500
  return;
 }
 $15 = $c + 372 | 0; //@line 33505
 HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + 4; //@line 33508
 HEAP32[$c + 120 + (((HEAPU16[$1 >> 1] | 0) >>> 9 & 7) << 2) >> 2] = HEAP32[$c + 344 >> 2]; //@line 33516
 $25 = $c + 156 | 0; //@line 33517
 $26 = HEAP32[$25 >> 2] | 0; //@line 33518
 if (($26 & 1 | 0) != 0) {
  _e68_exception_address($c, $26, 0, 0); //@line 33523
  return;
 }
 $31 = $c + 164 | 0; //@line 33528
 HEAP16[$c + 162 >> 1] = HEAP16[$31 >> 1] | 0; //@line 33531
 $34 = $26 & 16777215; //@line 33532
 $35 = $34 + 1 | 0; //@line 33533
 if ($35 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $41 = HEAP32[$c + 32 >> 2] | 0; //@line 33540
  $_0_i_i = HEAPU8[$41 + $34 | 0] << 8 | HEAPU8[$41 + $35 | 0]; //@line 33550
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $34) | 0; //@line 33558
 }
 HEAP16[$31 >> 1] = $_0_i_i; //@line 33561
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$25 >> 2] = (HEAP32[$25 >> 2] | 0) + 2; //@line 33569
  $63 = $c + 152 | 0; //@line 33570
  HEAP32[$63 >> 2] = (HEAP32[$63 >> 2] | 0) + 2; //@line 33573
  return;
 } else {
  _e68_exception_bus($c); //@line 33578
  return;
 }
}
function _op0000($c) {
 $c = $c | 0;
 var $s2 = 0, $1 = 0, $2 = 0, $7 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $17 = 0, $32 = 0, $33 = 0, $39 = 0, $40 = 0, $43 = 0, $47 = 0, $50 = 0, $57 = 0, $58 = 0, $62 = 0, $75 = 0, $phitmp = 0, $82 = 0, $83 = 0, $99 = 0, $100 = 0, $103 = 0, $109 = 0, $110 = 0, $115 = 0, $_0_i_i20 = 0, sp = 0;
 sp = STACKTOP; //@line 33605
 STACKTOP = STACKTOP + 8 | 0; //@line 33605
 $s2 = sp | 0; //@line 33606
 $1 = $c + 156 | 0; //@line 33607
 $2 = HEAP32[$1 >> 2] | 0; //@line 33608
 if (($2 & 1 | 0) != 0) {
  _e68_exception_address($c, $2, 0, 0); //@line 33613
  STACKTOP = sp; //@line 33615
  return;
 }
 $7 = $c + 164 | 0; //@line 33618
 $9 = $c + 162 | 0; //@line 33620
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 33621
 $10 = $2 & 16777215; //@line 33622
 $11 = $10 + 1 | 0; //@line 33623
 $12 = $c + 36 | 0; //@line 33624
 if ($11 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $17 = HEAP32[$c + 32 >> 2] | 0; //@line 33630
  $32 = HEAPU8[$17 + $10 | 0] << 8 | HEAPU8[$17 + $11 | 0]; //@line 33640
 } else {
  $32 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $10) | 0; //@line 33648
 }
 HEAP16[$7 >> 1] = $32; //@line 33651
 $33 = $c + 336 | 0; //@line 33652
 if ((HEAP8[$33] | 0) != 0) {
  _e68_exception_bus($c); //@line 33657
  STACKTOP = sp; //@line 33659
  return;
 }
 $39 = (HEAP32[$1 >> 2] | 0) + 2 | 0; //@line 33663
 HEAP32[$1 >> 2] = $39; //@line 33664
 $40 = $c + 152 | 0; //@line 33665
 HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 33668
 $43 = HEAP16[$9 >> 1] | 0; //@line 33669
 $47 = HEAP16[$c + 160 >> 1] & 63; //@line 33673
 if (($47 | 0) == 60) {
  $50 = $c + 372 | 0; //@line 33677
  HEAP32[$50 >> 2] = (HEAP32[$50 >> 2] | 0) + 20; //@line 33680
  if (($39 & 1 | 0) != 0) {
   _e68_exception_address($c, $39, 0, 0); //@line 33685
   STACKTOP = sp; //@line 33687
   return;
  }
  HEAP16[$9 >> 1] = $32; //@line 33690
  $57 = $39 & 16777215; //@line 33691
  $58 = $57 + 1 | 0; //@line 33692
  do {
   if ($58 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
    $62 = HEAP32[$c + 32 >> 2] | 0; //@line 33699
    HEAP16[$7 >> 1] = HEAPU8[$62 + $57 | 0] << 8 | HEAPU8[$62 + $58 | 0]; //@line 33708
   } else {
    $75 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $57) | 0; //@line 33715
    $phitmp = (HEAP8[$33] | 0) == 0; //@line 33717
    HEAP16[$7 >> 1] = $75; //@line 33718
    if ($phitmp) {
     break;
    }
    _e68_exception_bus($c); //@line 33723
    STACKTOP = sp; //@line 33725
    return;
   }
  } while (0);
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 33731
  HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 33734
  $82 = $c + 166 | 0; //@line 33735
  $83 = HEAP16[$82 >> 1] | 0; //@line 33736
  HEAP16[$82 >> 1] = ($83 | $43) & 31 | $83 & -256; //@line 33741
  STACKTOP = sp; //@line 33743
  return;
 }
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($47 << 2) >> 2] & 127]($c, $47, 509, 8) | 0) != 0) {
  STACKTOP = sp; //@line 33752
  return;
 }
 if ((_e68_ea_get_val8($c, $s2) | 0) != 0) {
  STACKTOP = sp; //@line 33759
  return;
 }
 $99 = HEAP8[$s2] | $43 & 255; //@line 33764
 $100 = $c + 372 | 0; //@line 33765
 HEAP32[$100 >> 2] = (HEAP32[$100 >> 2] | 0) + 8; //@line 33768
 _e68_cc_set_nz_8($c, 15, $99); //@line 33769
 $103 = HEAP32[$1 >> 2] | 0; //@line 33770
 if (($103 & 1 | 0) != 0) {
  _e68_exception_address($c, $103, 0, 0); //@line 33775
  STACKTOP = sp; //@line 33777
  return;
 }
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 33781
 $109 = $103 & 16777215; //@line 33782
 $110 = $109 + 1 | 0; //@line 33783
 if ($110 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $115 = HEAP32[$c + 32 >> 2] | 0; //@line 33789
  $_0_i_i20 = HEAPU8[$115 + $109 | 0] << 8 | HEAPU8[$115 + $110 | 0]; //@line 33799
 } else {
  $_0_i_i20 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $109) | 0; //@line 33807
 }
 HEAP16[$7 >> 1] = $_0_i_i20; //@line 33810
 if ((HEAP8[$33] | 0) == 0) {
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 33817
  HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 33820
  _e68_ea_set_val8($c, $99) | 0; //@line 33821
  STACKTOP = sp; //@line 33823
  return;
 } else {
  _e68_exception_bus($c); //@line 33826
  STACKTOP = sp; //@line 33828
  return;
 }
}
function _op0040($c) {
 $c = $c | 0;
 var $s2 = 0, $1 = 0, $11 = 0, $12 = 0, $17 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $27 = 0, $42 = 0, $43 = 0, $49 = 0, $50 = 0, $52 = 0, $53 = 0, $54 = 0, $61 = 0, $62 = 0, $66 = 0, $79 = 0, $phitmp_i = 0, $82 = 0, $83 = 0, $91 = 0, $92 = 0, $97 = 0, $99 = 0, $100 = 0, $101 = 0, $102 = 0, $107 = 0, $_0_i_i = 0, $122 = 0, $129 = 0, $132 = 0, $135 = 0, $145 = 0, $146 = 0, $149 = 0, $155 = 0, $156 = 0, $161 = 0, $_0_i_i11 = 0, sp = 0;
 sp = STACKTOP; //@line 33858
 STACKTOP = STACKTOP + 8 | 0; //@line 33858
 $s2 = sp | 0; //@line 33859
 $1 = $c + 160 | 0; //@line 33860
 if ((HEAP16[$1 >> 1] & 63) == 60) {
  if ((HEAP8[$c + 334 | 0] | 0) == 0) {
   _e68_exception_privilege($c); //@line 33871
   STACKTOP = sp; //@line 33873
   return;
  }
  $11 = $c + 156 | 0; //@line 33876
  $12 = HEAP32[$11 >> 2] | 0; //@line 33877
  if (($12 & 1 | 0) != 0) {
   _e68_exception_address($c, $12, 0, 0); //@line 33882
   STACKTOP = sp; //@line 33884
   return;
  }
  $17 = $c + 164 | 0; //@line 33887
  $19 = $c + 162 | 0; //@line 33889
  HEAP16[$19 >> 1] = HEAP16[$17 >> 1] | 0; //@line 33890
  $20 = $12 & 16777215; //@line 33891
  $21 = $20 + 1 | 0; //@line 33892
  $22 = $c + 36 | 0; //@line 33893
  if ($21 >>> 0 < (HEAP32[$22 >> 2] | 0) >>> 0) {
   $27 = HEAP32[$c + 32 >> 2] | 0; //@line 33899
   $42 = HEAPU8[$27 + $20 | 0] << 8 | HEAPU8[$27 + $21 | 0]; //@line 33909
  } else {
   $42 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $20) | 0; //@line 33917
  }
  HEAP16[$17 >> 1] = $42; //@line 33920
  $43 = $c + 336 | 0; //@line 33921
  if ((HEAP8[$43] | 0) != 0) {
   _e68_exception_bus($c); //@line 33926
   STACKTOP = sp; //@line 33928
   return;
  }
  $49 = (HEAP32[$11 >> 2] | 0) + 2 | 0; //@line 33932
  HEAP32[$11 >> 2] = $49; //@line 33933
  $50 = $c + 152 | 0; //@line 33934
  $52 = (HEAP32[$50 >> 2] | 0) + 2 | 0; //@line 33936
  HEAP32[$50 >> 2] = $52; //@line 33937
  $53 = HEAP16[$19 >> 1] | 0; //@line 33938
  $54 = $c + 372 | 0; //@line 33939
  HEAP32[$54 >> 2] = (HEAP32[$54 >> 2] | 0) + 20; //@line 33942
  if (($49 & 1 | 0) != 0) {
   _e68_exception_address($c, $49, 0, 0); //@line 33947
   STACKTOP = sp; //@line 33949
   return;
  }
  HEAP16[$19 >> 1] = $42; //@line 33952
  $61 = $49 & 16777215; //@line 33953
  $62 = $61 + 1 | 0; //@line 33954
  do {
   if ($62 >>> 0 < (HEAP32[$22 >> 2] | 0) >>> 0) {
    $66 = HEAP32[$c + 32 >> 2] | 0; //@line 33961
    HEAP16[$17 >> 1] = HEAPU8[$66 + $61 | 0] << 8 | HEAPU8[$66 + $62 | 0]; //@line 33970
    $83 = $49;
    $82 = $52;
   } else {
    $79 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $61) | 0; //@line 33978
    $phitmp_i = (HEAP8[$43] | 0) == 0; //@line 33980
    HEAP16[$17 >> 1] = $79; //@line 33981
    if ($phitmp_i) {
     $83 = HEAP32[$11 >> 2] | 0;
     $82 = HEAP32[$50 >> 2] | 0;
     break;
    }
    _e68_exception_bus($c); //@line 33990
    STACKTOP = sp; //@line 33992
    return;
   }
  } while (0);
  HEAP32[$11 >> 2] = $83 + 2; //@line 33999
  HEAP32[$50 >> 2] = $82 + 2; //@line 34001
  _e68_set_sr($c, (HEAP16[$c + 166 >> 1] | $53) & -22753); //@line 34006
  STACKTOP = sp; //@line 34008
  return;
 }
 $91 = $c + 156 | 0; //@line 34011
 $92 = HEAP32[$91 >> 2] | 0; //@line 34012
 if (($92 & 1 | 0) != 0) {
  _e68_exception_address($c, $92, 0, 0); //@line 34017
  STACKTOP = sp; //@line 34019
  return;
 }
 $97 = $c + 164 | 0; //@line 34022
 $99 = $c + 162 | 0; //@line 34024
 HEAP16[$99 >> 1] = HEAP16[$97 >> 1] | 0; //@line 34025
 $100 = $92 & 16777215; //@line 34026
 $101 = $100 + 1 | 0; //@line 34027
 $102 = $c + 36 | 0; //@line 34028
 if ($101 >>> 0 < (HEAP32[$102 >> 2] | 0) >>> 0) {
  $107 = HEAP32[$c + 32 >> 2] | 0; //@line 34034
  $_0_i_i = HEAPU8[$107 + $100 | 0] << 8 | HEAPU8[$107 + $101 | 0]; //@line 34044
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $100) | 0; //@line 34052
 }
 HEAP16[$97 >> 1] = $_0_i_i; //@line 34055
 $122 = $c + 336 | 0; //@line 34056
 if ((HEAP8[$122] | 0) != 0) {
  _e68_exception_bus($c); //@line 34061
  STACKTOP = sp; //@line 34063
  return;
 }
 HEAP32[$91 >> 2] = (HEAP32[$91 >> 2] | 0) + 2; //@line 34068
 $129 = $c + 152 | 0; //@line 34069
 HEAP32[$129 >> 2] = (HEAP32[$129 >> 2] | 0) + 2; //@line 34072
 $132 = HEAP16[$99 >> 1] | 0; //@line 34073
 $135 = HEAP16[$1 >> 1] & 63; //@line 34076
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($135 << 2) >> 2] & 127]($c, $135, 509, 16) | 0) != 0) {
  STACKTOP = sp; //@line 34083
  return;
 }
 if ((_e68_ea_get_val16($c, $s2) | 0) != 0) {
  STACKTOP = sp; //@line 34090
  return;
 }
 $145 = HEAP16[$s2 >> 1] | $132; //@line 34094
 $146 = $c + 372 | 0; //@line 34095
 HEAP32[$146 >> 2] = (HEAP32[$146 >> 2] | 0) + 8; //@line 34098
 _e68_cc_set_nz_16($c, 15, $145); //@line 34099
 $149 = HEAP32[$91 >> 2] | 0; //@line 34100
 if (($149 & 1 | 0) != 0) {
  _e68_exception_address($c, $149, 0, 0); //@line 34105
  STACKTOP = sp; //@line 34107
  return;
 }
 HEAP16[$99 >> 1] = HEAP16[$97 >> 1] | 0; //@line 34111
 $155 = $149 & 16777215; //@line 34112
 $156 = $155 + 1 | 0; //@line 34113
 if ($156 >>> 0 < (HEAP32[$102 >> 2] | 0) >>> 0) {
  $161 = HEAP32[$c + 32 >> 2] | 0; //@line 34119
  $_0_i_i11 = HEAPU8[$161 + $155 | 0] << 8 | HEAPU8[$161 + $156 | 0]; //@line 34129
 } else {
  $_0_i_i11 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $155) | 0; //@line 34137
 }
 HEAP16[$97 >> 1] = $_0_i_i11; //@line 34140
 if ((HEAP8[$122] | 0) == 0) {
  HEAP32[$91 >> 2] = (HEAP32[$91 >> 2] | 0) + 2; //@line 34147
  HEAP32[$129 >> 2] = (HEAP32[$129 >> 2] | 0) + 2; //@line 34150
  _e68_ea_set_val16($c, $145) | 0; //@line 34151
  STACKTOP = sp; //@line 34153
  return;
 } else {
  _e68_exception_bus($c); //@line 34156
  STACKTOP = sp; //@line 34158
  return;
 }
}
function _op0080($c) {
 $c = $c | 0;
 var $s2 = 0, $1 = 0, $2 = 0, $7 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $17 = 0, $32 = 0, $33 = 0, $39 = 0, $40 = 0, $43 = 0, $48 = 0, $49 = 0, $53 = 0, $66 = 0, $phitmp = 0, $77 = 0, $81 = 0, $91 = 0, $92 = 0, $95 = 0, $101 = 0, $102 = 0, $107 = 0, $_0_i_i17 = 0, sp = 0;
 sp = STACKTOP; //@line 34182
 STACKTOP = STACKTOP + 8 | 0; //@line 34182
 $s2 = sp | 0; //@line 34183
 $1 = $c + 156 | 0; //@line 34184
 $2 = HEAP32[$1 >> 2] | 0; //@line 34185
 if (($2 & 1 | 0) != 0) {
  _e68_exception_address($c, $2, 0, 0); //@line 34190
  STACKTOP = sp; //@line 34192
  return;
 }
 $7 = $c + 164 | 0; //@line 34195
 $9 = $c + 162 | 0; //@line 34197
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 34198
 $10 = $2 & 16777215; //@line 34199
 $11 = $10 + 1 | 0; //@line 34200
 $12 = $c + 36 | 0; //@line 34201
 if ($11 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $17 = HEAP32[$c + 32 >> 2] | 0; //@line 34207
  $32 = HEAPU8[$17 + $10 | 0] << 8 | HEAPU8[$17 + $11 | 0]; //@line 34217
 } else {
  $32 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $10) | 0; //@line 34225
 }
 HEAP16[$7 >> 1] = $32; //@line 34228
 $33 = $c + 336 | 0; //@line 34229
 if ((HEAP8[$33] | 0) != 0) {
  _e68_exception_bus($c); //@line 34234
  STACKTOP = sp; //@line 34236
  return;
 }
 $39 = (HEAP32[$1 >> 2] | 0) + 2 | 0; //@line 34240
 HEAP32[$1 >> 2] = $39; //@line 34241
 $40 = $c + 152 | 0; //@line 34242
 HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 34245
 $43 = HEAP16[$9 >> 1] | 0; //@line 34246
 if (($39 & 1 | 0) != 0) {
  _e68_exception_address($c, $39, 0, 0); //@line 34251
  STACKTOP = sp; //@line 34253
  return;
 }
 HEAP16[$9 >> 1] = $32; //@line 34256
 $48 = $39 & 16777215; //@line 34257
 $49 = $48 + 1 | 0; //@line 34258
 do {
  if ($49 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
   $53 = HEAP32[$c + 32 >> 2] | 0; //@line 34265
   HEAP16[$7 >> 1] = HEAPU8[$53 + $48 | 0] << 8 | HEAPU8[$53 + $49 | 0]; //@line 34274
  } else {
   $66 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $48) | 0; //@line 34281
   $phitmp = (HEAP8[$33] | 0) == 0; //@line 34283
   HEAP16[$7 >> 1] = $66; //@line 34284
   if ($phitmp) {
    break;
   }
   _e68_exception_bus($c); //@line 34289
   STACKTOP = sp; //@line 34291
   return;
  }
 } while (0);
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 34297
 HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 34300
 $77 = HEAPU16[$9 >> 1] | ($43 & 65535) << 16; //@line 34305
 $81 = HEAP16[$c + 160 >> 1] & 63; //@line 34309
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($81 << 2) >> 2] & 127]($c, $81, 509, 32) | 0) != 0) {
  STACKTOP = sp; //@line 34316
  return;
 }
 if ((_e68_ea_get_val32($c, $s2) | 0) != 0) {
  STACKTOP = sp; //@line 34323
  return;
 }
 $91 = $77 | HEAP32[$s2 >> 2]; //@line 34327
 $92 = $c + 372 | 0; //@line 34328
 HEAP32[$92 >> 2] = (HEAP32[$92 >> 2] | 0) + 16; //@line 34331
 _e68_cc_set_nz_32($c, 15, $91); //@line 34332
 $95 = HEAP32[$1 >> 2] | 0; //@line 34333
 if (($95 & 1 | 0) != 0) {
  _e68_exception_address($c, $95, 0, 0); //@line 34338
  STACKTOP = sp; //@line 34340
  return;
 }
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 34344
 $101 = $95 & 16777215; //@line 34345
 $102 = $101 + 1 | 0; //@line 34346
 if ($102 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $107 = HEAP32[$c + 32 >> 2] | 0; //@line 34352
  $_0_i_i17 = HEAPU8[$107 + $101 | 0] << 8 | HEAPU8[$107 + $102 | 0]; //@line 34362
 } else {
  $_0_i_i17 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $101) | 0; //@line 34370
 }
 HEAP16[$7 >> 1] = $_0_i_i17; //@line 34373
 if ((HEAP8[$33] | 0) == 0) {
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 34380
  HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 34383
  _e68_ea_set_val32($c, $91) | 0; //@line 34384
  STACKTOP = sp; //@line 34386
  return;
 } else {
  _e68_exception_bus($c); //@line 34389
  STACKTOP = sp; //@line 34391
  return;
 }
}
function _op0100($c) {
 $c = $c | 0;
 var $s = 0, $1 = 0, $3 = 0, $4 = 0, $8 = 0, $14 = 0, $15 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $30 = 0, $33 = 0, $34 = 0, $40 = 0, $_0_i_i_i = 0, $62 = 0, $66 = 0, $67 = 0, $72 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $82 = 0, $_0_i_i_i11 = 0, $97 = 0, $104 = 0, $113 = 0, $118 = 0, $119 = 0, $120 = 0, $132 = 0, $133 = 0, $_0_i12_i = 0, $137 = 0, $_0_i13_i = 0, $152 = 0, $159 = 0, $164 = 0, $170 = 0, $171 = 0, $176 = 0, $_0_i_i15_i = 0, $200 = 0, $216 = 0, $217 = 0, $224 = 0, $225 = 0, $228 = 0, $229 = 0, $234 = 0, $237 = 0, $238 = 0, $244 = 0, $_0_i_i = 0, $266 = 0, sp = 0;
 sp = STACKTOP; //@line 34431
 STACKTOP = STACKTOP + 8 | 0; //@line 34431
 $s = sp | 0; //@line 34432
 $1 = $c + 160 | 0; //@line 34433
 $3 = HEAPU16[$1 >> 1] | 0; //@line 34435
 $4 = $3 & 56; //@line 34436
 if (($4 | 0) == 0) {
  $8 = HEAP32[$c + 88 + (($3 & 7) << 2) >> 2] | 0; //@line 34440
  $14 = 1 << (HEAP32[$c + 88 + (($3 >>> 9 & 7) << 2) >> 2] & 31); //@line 34446
  $15 = $c + 372 | 0; //@line 34447
  HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + 6; //@line 34450
  $20 = $c + 166 | 0; //@line 34453
  $21 = HEAP16[$20 >> 1] | 0; //@line 34454
  HEAP16[$20 >> 1] = ($14 & $8 | 0) == 0 ? $21 | 4 : $21 & -5; //@line 34458
  $24 = $c + 156 | 0; //@line 34459
  $25 = HEAP32[$24 >> 2] | 0; //@line 34460
  if (($25 & 1 | 0) != 0) {
   _e68_exception_address($c, $25, 0, 0); //@line 34465
   STACKTOP = sp; //@line 34467
   return;
  }
  $30 = $c + 164 | 0; //@line 34470
  HEAP16[$c + 162 >> 1] = HEAP16[$30 >> 1] | 0; //@line 34473
  $33 = $25 & 16777215; //@line 34474
  $34 = $33 + 1 | 0; //@line 34475
  if ($34 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $40 = HEAP32[$c + 32 >> 2] | 0; //@line 34482
   $_0_i_i_i = HEAPU8[$40 + $33 | 0] << 8 | HEAPU8[$40 + $34 | 0]; //@line 34492
  } else {
   $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $33) | 0; //@line 34500
  }
  HEAP16[$30 >> 1] = $_0_i_i_i; //@line 34503
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + 2; //@line 34511
   $62 = $c + 152 | 0; //@line 34512
   HEAP32[$62 >> 2] = (HEAP32[$62 >> 2] | 0) + 2; //@line 34515
   STACKTOP = sp; //@line 34517
   return;
  } else {
   _e68_exception_bus($c); //@line 34520
   STACKTOP = sp; //@line 34522
   return;
  }
 } else if (($4 | 0) == 8) {
  $66 = $c + 156 | 0; //@line 34526
  $67 = HEAP32[$66 >> 2] | 0; //@line 34527
  if (($67 & 1 | 0) != 0) {
   _e68_exception_address($c, $67, 0, 0); //@line 34532
   STACKTOP = sp; //@line 34534
   return;
  }
  $72 = $c + 164 | 0; //@line 34537
  $74 = $c + 162 | 0; //@line 34539
  HEAP16[$74 >> 1] = HEAP16[$72 >> 1] | 0; //@line 34540
  $75 = $67 & 16777215; //@line 34541
  $76 = $75 + 1 | 0; //@line 34542
  $77 = $c + 36 | 0; //@line 34543
  if ($76 >>> 0 < (HEAP32[$77 >> 2] | 0) >>> 0) {
   $82 = HEAP32[$c + 32 >> 2] | 0; //@line 34549
   $_0_i_i_i11 = HEAPU8[$82 + $75 | 0] << 8 | HEAPU8[$82 + $76 | 0]; //@line 34559
  } else {
   $_0_i_i_i11 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $75) | 0; //@line 34567
  }
  HEAP16[$72 >> 1] = $_0_i_i_i11; //@line 34570
  $97 = $c + 336 | 0; //@line 34571
  if ((HEAP8[$97] | 0) != 0) {
   _e68_exception_bus($c); //@line 34576
   STACKTOP = sp; //@line 34578
   return;
  }
  HEAP32[$66 >> 2] = (HEAP32[$66 >> 2] | 0) + 2; //@line 34583
  $104 = $c + 152 | 0; //@line 34584
  HEAP32[$104 >> 2] = (HEAP32[$104 >> 2] | 0) + 2; //@line 34587
  $113 = HEAPU16[$74 >> 1] | 0; //@line 34594
  $118 = (($113 & 32768 | 0) != 0 ? $113 | -65536 : $113) + (HEAP32[$c + 120 + ((HEAP16[$1 >> 1] & 7) << 2) >> 2] | 0) | 0; //@line 34599
  $119 = $118 & 16777215; //@line 34600
  $120 = HEAP32[$77 >> 2] | 0; //@line 34601
  if ($119 >>> 0 < $120 >>> 0) {
   $_0_i12_i = HEAP8[(HEAP32[$c + 32 >> 2] | 0) + $119 | 0] | 0;
   $133 = $120;
  } else {
   $132 = FUNCTION_TABLE_iii[HEAP32[$c + 8 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $119) | 0; //@line 34616
   $_0_i12_i = $132;
   $133 = HEAP32[$77 >> 2] | 0;
  }
  $137 = $118 + 2 & 16777215; //@line 34626
  if ($137 >>> 0 < $133 >>> 0) {
   $_0_i13_i = HEAP8[(HEAP32[$c + 32 >> 2] | 0) + $137 | 0] | 0; //@line 34635
  } else {
   $_0_i13_i = FUNCTION_TABLE_iii[HEAP32[$c + 8 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $137) | 0; //@line 34643
  }
  $152 = $c + 372 | 0; //@line 34648
  HEAP32[$152 >> 2] = (HEAP32[$152 >> 2] | 0) + 16; //@line 34651
  $159 = $c + 88 + (((HEAPU16[$1 >> 1] | 0) >>> 9 & 7) << 2) | 0; //@line 34656
  HEAP32[$159 >> 2] = HEAP32[$159 >> 2] & -65536 | ($_0_i13_i & 255 | ($_0_i12_i & 255) << 8) & 65535; //@line 34661
  $164 = HEAP32[$66 >> 2] | 0; //@line 34662
  if (($164 & 1 | 0) != 0) {
   _e68_exception_address($c, $164, 0, 0); //@line 34667
   STACKTOP = sp; //@line 34669
   return;
  }
  HEAP16[$74 >> 1] = HEAP16[$72 >> 1] | 0; //@line 34673
  $170 = $164 & 16777215; //@line 34674
  $171 = $170 + 1 | 0; //@line 34675
  if ($171 >>> 0 < (HEAP32[$77 >> 2] | 0) >>> 0) {
   $176 = HEAP32[$c + 32 >> 2] | 0; //@line 34681
   $_0_i_i15_i = HEAPU8[$176 + $170 | 0] << 8 | HEAPU8[$176 + $171 | 0]; //@line 34691
  } else {
   $_0_i_i15_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $170) | 0; //@line 34699
  }
  HEAP16[$72 >> 1] = $_0_i_i15_i; //@line 34702
  if ((HEAP8[$97] | 0) == 0) {
   HEAP32[$66 >> 2] = (HEAP32[$66 >> 2] | 0) + 2; //@line 34709
   HEAP32[$104 >> 2] = (HEAP32[$104 >> 2] | 0) + 2; //@line 34712
   STACKTOP = sp; //@line 34714
   return;
  } else {
   _e68_exception_bus($c); //@line 34717
   STACKTOP = sp; //@line 34719
   return;
  }
 } else {
  $200 = $3 & 63; //@line 34723
  if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($200 << 2) >> 2] & 127]($c, $200, 4092, 8) | 0) != 0) {
   STACKTOP = sp; //@line 34730
   return;
  }
  if ((_e68_ea_get_val8($c, $s) | 0) != 0) {
   STACKTOP = sp; //@line 34737
   return;
  }
  $216 = 1 << (HEAP32[$c + 88 + (((HEAPU16[$1 >> 1] | 0) >>> 9 & 7) << 2) >> 2] & 7); //@line 34747
  $217 = $c + 372 | 0; //@line 34748
  HEAP32[$217 >> 2] = (HEAP32[$217 >> 2] | 0) + 4; //@line 34751
  $224 = $c + 166 | 0; //@line 34756
  $225 = HEAP16[$224 >> 1] | 0; //@line 34757
  HEAP16[$224 >> 1] = ($216 & HEAPU8[$s] | 0) == 0 ? $225 | 4 : $225 & -5; //@line 34761
  $228 = $c + 156 | 0; //@line 34762
  $229 = HEAP32[$228 >> 2] | 0; //@line 34763
  if (($229 & 1 | 0) != 0) {
   _e68_exception_address($c, $229, 0, 0); //@line 34768
   STACKTOP = sp; //@line 34770
   return;
  }
  $234 = $c + 164 | 0; //@line 34773
  HEAP16[$c + 162 >> 1] = HEAP16[$234 >> 1] | 0; //@line 34776
  $237 = $229 & 16777215; //@line 34777
  $238 = $237 + 1 | 0; //@line 34778
  if ($238 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $244 = HEAP32[$c + 32 >> 2] | 0; //@line 34785
   $_0_i_i = HEAPU8[$244 + $237 | 0] << 8 | HEAPU8[$244 + $238 | 0]; //@line 34795
  } else {
   $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $237) | 0; //@line 34803
  }
  HEAP16[$234 >> 1] = $_0_i_i; //@line 34806
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$228 >> 2] = (HEAP32[$228 >> 2] | 0) + 2; //@line 34814
   $266 = $c + 152 | 0; //@line 34815
   HEAP32[$266 >> 2] = (HEAP32[$266 >> 2] | 0) + 2; //@line 34818
   STACKTOP = sp; //@line 34820
   return;
  } else {
   _e68_exception_bus($c); //@line 34823
   STACKTOP = sp; //@line 34825
   return;
  }
 }
}
function _op0140($c) {
 $c = $c | 0;
 var $s = 0, $1 = 0, $3 = 0, $5 = 0, $8 = 0, $9 = 0, $15 = 0, $17 = 0, $22 = 0, $23 = 0, $26 = 0, $27 = 0, $32 = 0, $35 = 0, $36 = 0, $42 = 0, $_0_i_i_i = 0, $64 = 0, $68 = 0, $69 = 0, $74 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $84 = 0, $_0_i_i_i13 = 0, $99 = 0, $106 = 0, $115 = 0, $120 = 0, $121 = 0, $122 = 0, $134 = 0, $135 = 0, $_0_i18_i = 0, $139 = 0, $151 = 0, $152 = 0, $_0_i19_i = 0, $157 = 0, $169 = 0, $170 = 0, $_0_i21_i = 0, $175 = 0, $_0_i23_i = 0, $190 = 0, $198 = 0, $204 = 0, $205 = 0, $210 = 0, $_0_i_i25_i = 0, $234 = 0, $250 = 0, $252 = 0, $255 = 0, $260 = 0, $261 = 0, $264 = 0, $265 = 0, $270 = 0, $273 = 0, $274 = 0, $280 = 0, $_0_i_i = 0, $302 = 0, sp = 0;
 sp = STACKTOP; //@line 34871
 STACKTOP = STACKTOP + 8 | 0; //@line 34871
 $s = sp | 0; //@line 34872
 $1 = $c + 160 | 0; //@line 34873
 $3 = HEAPU16[$1 >> 1] | 0; //@line 34875
 $5 = $3 >>> 3 & 7; //@line 34877
 if (($5 | 0) == 0) {
  $8 = $c + 88 + (($3 & 7) << 2) | 0; //@line 34880
  $9 = HEAP32[$8 >> 2] | 0; //@line 34881
  $15 = 1 << (HEAP32[$c + 88 + (($3 >>> 9 & 7) << 2) >> 2] & 31); //@line 34887
  $17 = $c + 372 | 0; //@line 34889
  HEAP32[$17 >> 2] = (HEAP32[$17 >> 2] | 0) + 8; //@line 34892
  HEAP32[$8 >> 2] = $15 ^ $9; //@line 34893
  $22 = $c + 166 | 0; //@line 34896
  $23 = HEAP16[$22 >> 1] | 0; //@line 34897
  HEAP16[$22 >> 1] = ($15 & $9 | 0) == 0 ? $23 | 4 : $23 & -5; //@line 34901
  $26 = $c + 156 | 0; //@line 34902
  $27 = HEAP32[$26 >> 2] | 0; //@line 34903
  if (($27 & 1 | 0) != 0) {
   _e68_exception_address($c, $27, 0, 0); //@line 34908
   STACKTOP = sp; //@line 34910
   return;
  }
  $32 = $c + 164 | 0; //@line 34913
  HEAP16[$c + 162 >> 1] = HEAP16[$32 >> 1] | 0; //@line 34916
  $35 = $27 & 16777215; //@line 34917
  $36 = $35 + 1 | 0; //@line 34918
  if ($36 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $42 = HEAP32[$c + 32 >> 2] | 0; //@line 34925
   $_0_i_i_i = HEAPU8[$42 + $35 | 0] << 8 | HEAPU8[$42 + $36 | 0]; //@line 34935
  } else {
   $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $35) | 0; //@line 34943
  }
  HEAP16[$32 >> 1] = $_0_i_i_i; //@line 34946
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$26 >> 2] = (HEAP32[$26 >> 2] | 0) + 2; //@line 34954
   $64 = $c + 152 | 0; //@line 34955
   HEAP32[$64 >> 2] = (HEAP32[$64 >> 2] | 0) + 2; //@line 34958
   STACKTOP = sp; //@line 34960
   return;
  } else {
   _e68_exception_bus($c); //@line 34963
   STACKTOP = sp; //@line 34965
   return;
  }
 } else if (($5 | 0) == 1) {
  $68 = $c + 156 | 0; //@line 34969
  $69 = HEAP32[$68 >> 2] | 0; //@line 34970
  if (($69 & 1 | 0) != 0) {
   _e68_exception_address($c, $69, 0, 0); //@line 34975
   STACKTOP = sp; //@line 34977
   return;
  }
  $74 = $c + 164 | 0; //@line 34980
  $76 = $c + 162 | 0; //@line 34982
  HEAP16[$76 >> 1] = HEAP16[$74 >> 1] | 0; //@line 34983
  $77 = $69 & 16777215; //@line 34984
  $78 = $77 + 1 | 0; //@line 34985
  $79 = $c + 36 | 0; //@line 34986
  if ($78 >>> 0 < (HEAP32[$79 >> 2] | 0) >>> 0) {
   $84 = HEAP32[$c + 32 >> 2] | 0; //@line 34992
   $_0_i_i_i13 = HEAPU8[$84 + $77 | 0] << 8 | HEAPU8[$84 + $78 | 0]; //@line 35002
  } else {
   $_0_i_i_i13 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $77) | 0; //@line 35010
  }
  HEAP16[$74 >> 1] = $_0_i_i_i13; //@line 35013
  $99 = $c + 336 | 0; //@line 35014
  if ((HEAP8[$99] | 0) != 0) {
   _e68_exception_bus($c); //@line 35019
   STACKTOP = sp; //@line 35021
   return;
  }
  HEAP32[$68 >> 2] = (HEAP32[$68 >> 2] | 0) + 2; //@line 35026
  $106 = $c + 152 | 0; //@line 35027
  HEAP32[$106 >> 2] = (HEAP32[$106 >> 2] | 0) + 2; //@line 35030
  $115 = HEAPU16[$76 >> 1] | 0; //@line 35037
  $120 = (($115 & 32768 | 0) != 0 ? $115 | -65536 : $115) + (HEAP32[$c + 120 + ((HEAP16[$1 >> 1] & 7) << 2) >> 2] | 0) | 0; //@line 35042
  $121 = $120 & 16777215; //@line 35043
  $122 = HEAP32[$79 >> 2] | 0; //@line 35044
  if ($121 >>> 0 < $122 >>> 0) {
   $_0_i18_i = HEAP8[(HEAP32[$c + 32 >> 2] | 0) + $121 | 0] | 0;
   $135 = $122;
  } else {
   $134 = FUNCTION_TABLE_iii[HEAP32[$c + 8 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $121) | 0; //@line 35059
   $_0_i18_i = $134;
   $135 = HEAP32[$79 >> 2] | 0;
  }
  $139 = $120 + 2 & 16777215; //@line 35069
  if ($139 >>> 0 < $135 >>> 0) {
   $_0_i19_i = HEAP8[(HEAP32[$c + 32 >> 2] | 0) + $139 | 0] | 0;
   $152 = $135;
  } else {
   $151 = FUNCTION_TABLE_iii[HEAP32[$c + 8 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $139) | 0; //@line 35084
   $_0_i19_i = $151;
   $152 = HEAP32[$79 >> 2] | 0;
  }
  $157 = $120 + 4 & 16777215; //@line 35095
  if ($157 >>> 0 < $152 >>> 0) {
   $_0_i21_i = HEAP8[(HEAP32[$c + 32 >> 2] | 0) + $157 | 0] | 0;
   $170 = $152;
  } else {
   $169 = FUNCTION_TABLE_iii[HEAP32[$c + 8 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $157) | 0; //@line 35110
   $_0_i21_i = $169;
   $170 = HEAP32[$79 >> 2] | 0;
  }
  $175 = $120 + 6 & 16777215; //@line 35121
  if ($175 >>> 0 < $170 >>> 0) {
   $_0_i23_i = HEAP8[(HEAP32[$c + 32 >> 2] | 0) + $175 | 0] | 0; //@line 35130
  } else {
   $_0_i23_i = FUNCTION_TABLE_iii[HEAP32[$c + 8 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $175) | 0; //@line 35138
  }
  $190 = $c + 372 | 0; //@line 35143
  HEAP32[$190 >> 2] = (HEAP32[$190 >> 2] | 0) + 24; //@line 35146
  HEAP32[$c + 88 + (((HEAPU16[$1 >> 1] | 0) >>> 9 & 7) << 2) >> 2] = $_0_i23_i & 255 | ($_0_i21_i & 255 | ($_0_i19_i & 255 | ($_0_i18_i & 255) << 8) << 8) << 8; //@line 35152
  $198 = HEAP32[$68 >> 2] | 0; //@line 35153
  if (($198 & 1 | 0) != 0) {
   _e68_exception_address($c, $198, 0, 0); //@line 35158
   STACKTOP = sp; //@line 35160
   return;
  }
  HEAP16[$76 >> 1] = HEAP16[$74 >> 1] | 0; //@line 35164
  $204 = $198 & 16777215; //@line 35165
  $205 = $204 + 1 | 0; //@line 35166
  if ($205 >>> 0 < (HEAP32[$79 >> 2] | 0) >>> 0) {
   $210 = HEAP32[$c + 32 >> 2] | 0; //@line 35172
   $_0_i_i25_i = HEAPU8[$210 + $204 | 0] << 8 | HEAPU8[$210 + $205 | 0]; //@line 35182
  } else {
   $_0_i_i25_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $204) | 0; //@line 35190
  }
  HEAP16[$74 >> 1] = $_0_i_i25_i; //@line 35193
  if ((HEAP8[$99] | 0) == 0) {
   HEAP32[$68 >> 2] = (HEAP32[$68 >> 2] | 0) + 2; //@line 35200
   HEAP32[$106 >> 2] = (HEAP32[$106 >> 2] | 0) + 2; //@line 35203
   STACKTOP = sp; //@line 35205
   return;
  } else {
   _e68_exception_bus($c); //@line 35208
   STACKTOP = sp; //@line 35210
   return;
  }
 } else {
  $234 = $3 & 63; //@line 35214
  if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($234 << 2) >> 2] & 127]($c, $234, 508, 8) | 0) != 0) {
   STACKTOP = sp; //@line 35221
   return;
  }
  if ((_e68_ea_get_val8($c, $s) | 0) != 0) {
   STACKTOP = sp; //@line 35228
   return;
  }
  $250 = 1 << (HEAP32[$c + 88 + (((HEAPU16[$1 >> 1] | 0) >>> 9 & 7) << 2) >> 2] & 7); //@line 35238
  $252 = HEAPU8[$s] | 0; //@line 35240
  $255 = $c + 372 | 0; //@line 35243
  HEAP32[$255 >> 2] = (HEAP32[$255 >> 2] | 0) + 8; //@line 35246
  $260 = $c + 166 | 0; //@line 35249
  $261 = HEAP16[$260 >> 1] | 0; //@line 35250
  HEAP16[$260 >> 1] = ($250 & $252 | 0) == 0 ? $261 | 4 : $261 & -5; //@line 35254
  $264 = $c + 156 | 0; //@line 35255
  $265 = HEAP32[$264 >> 2] | 0; //@line 35256
  if (($265 & 1 | 0) != 0) {
   _e68_exception_address($c, $265, 0, 0); //@line 35261
   STACKTOP = sp; //@line 35263
   return;
  }
  $270 = $c + 164 | 0; //@line 35266
  HEAP16[$c + 162 >> 1] = HEAP16[$270 >> 1] | 0; //@line 35269
  $273 = $265 & 16777215; //@line 35270
  $274 = $273 + 1 | 0; //@line 35271
  if ($274 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $280 = HEAP32[$c + 32 >> 2] | 0; //@line 35278
   $_0_i_i = HEAPU8[$280 + $273 | 0] << 8 | HEAPU8[$280 + $274 | 0]; //@line 35288
  } else {
   $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $273) | 0; //@line 35296
  }
  HEAP16[$270 >> 1] = $_0_i_i; //@line 35299
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$264 >> 2] = (HEAP32[$264 >> 2] | 0) + 2; //@line 35307
   $302 = $c + 152 | 0; //@line 35308
   HEAP32[$302 >> 2] = (HEAP32[$302 >> 2] | 0) + 2; //@line 35311
   _e68_ea_set_val8($c, ($252 ^ $250) & 255) | 0; //@line 35312
   STACKTOP = sp; //@line 35314
   return;
  } else {
   _e68_exception_bus($c); //@line 35317
   STACKTOP = sp; //@line 35319
   return;
  }
 }
}
function _op0180($c) {
 $c = $c | 0;
 var $s = 0, $1 = 0, $3 = 0, $5 = 0, $8 = 0, $9 = 0, $15 = 0, $18 = 0, $23 = 0, $24 = 0, $27 = 0, $28 = 0, $33 = 0, $36 = 0, $37 = 0, $43 = 0, $_0_i_i_i = 0, $65 = 0, $69 = 0, $70 = 0, $75 = 0, $77 = 0, $78 = 0, $79 = 0, $80 = 0, $85 = 0, $_0_i_i_i13 = 0, $100 = 0, $107 = 0, $111 = 0, $116 = 0, $121 = 0, $125 = 0, $127 = 0, $128 = 0, $141 = 0, $142 = 0, $154 = 0, $157 = 0, $163 = 0, $164 = 0, $169 = 0, $_0_i_i13_i = 0, $193 = 0, $209 = 0, $211 = 0, $215 = 0, $220 = 0, $221 = 0, $224 = 0, $225 = 0, $230 = 0, $233 = 0, $234 = 0, $240 = 0, $_0_i_i = 0, $262 = 0, sp = 0;
 sp = STACKTOP; //@line 35359
 STACKTOP = STACKTOP + 8 | 0; //@line 35359
 $s = sp | 0; //@line 35360
 $1 = $c + 160 | 0; //@line 35361
 $3 = HEAPU16[$1 >> 1] | 0; //@line 35363
 $5 = $3 >>> 3 & 7; //@line 35365
 if (($5 | 0) == 0) {
  $8 = $c + 88 + (($3 & 7) << 2) | 0; //@line 35368
  $9 = HEAP32[$8 >> 2] | 0; //@line 35369
  $15 = 1 << (HEAP32[$c + 88 + (($3 >>> 9 & 7) << 2) >> 2] & 31); //@line 35375
  $18 = $c + 372 | 0; //@line 35378
  HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 10; //@line 35381
  $23 = $c + 166 | 0; //@line 35384
  $24 = HEAP16[$23 >> 1] | 0; //@line 35385
  HEAP16[$23 >> 1] = ($15 & $9 | 0) == 0 ? $24 | 4 : $24 & -5; //@line 35389
  HEAP32[$8 >> 2] = $9 & ~$15; //@line 35390
  $27 = $c + 156 | 0; //@line 35391
  $28 = HEAP32[$27 >> 2] | 0; //@line 35392
  if (($28 & 1 | 0) != 0) {
   _e68_exception_address($c, $28, 0, 0); //@line 35397
   STACKTOP = sp; //@line 35399
   return;
  }
  $33 = $c + 164 | 0; //@line 35402
  HEAP16[$c + 162 >> 1] = HEAP16[$33 >> 1] | 0; //@line 35405
  $36 = $28 & 16777215; //@line 35406
  $37 = $36 + 1 | 0; //@line 35407
  if ($37 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $43 = HEAP32[$c + 32 >> 2] | 0; //@line 35414
   $_0_i_i_i = HEAPU8[$43 + $36 | 0] << 8 | HEAPU8[$43 + $37 | 0]; //@line 35424
  } else {
   $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $36) | 0; //@line 35432
  }
  HEAP16[$33 >> 1] = $_0_i_i_i; //@line 35435
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$27 >> 2] = (HEAP32[$27 >> 2] | 0) + 2; //@line 35443
   $65 = $c + 152 | 0; //@line 35444
   HEAP32[$65 >> 2] = (HEAP32[$65 >> 2] | 0) + 2; //@line 35447
   STACKTOP = sp; //@line 35449
   return;
  } else {
   _e68_exception_bus($c); //@line 35452
   STACKTOP = sp; //@line 35454
   return;
  }
 } else if (($5 | 0) == 1) {
  $69 = $c + 156 | 0; //@line 35458
  $70 = HEAP32[$69 >> 2] | 0; //@line 35459
  if (($70 & 1 | 0) != 0) {
   _e68_exception_address($c, $70, 0, 0); //@line 35464
   STACKTOP = sp; //@line 35466
   return;
  }
  $75 = $c + 164 | 0; //@line 35469
  $77 = $c + 162 | 0; //@line 35471
  HEAP16[$77 >> 1] = HEAP16[$75 >> 1] | 0; //@line 35472
  $78 = $70 & 16777215; //@line 35473
  $79 = $78 + 1 | 0; //@line 35474
  $80 = $c + 36 | 0; //@line 35475
  if ($79 >>> 0 < (HEAP32[$80 >> 2] | 0) >>> 0) {
   $85 = HEAP32[$c + 32 >> 2] | 0; //@line 35481
   $_0_i_i_i13 = HEAPU8[$85 + $78 | 0] << 8 | HEAPU8[$85 + $79 | 0]; //@line 35491
  } else {
   $_0_i_i_i13 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $78) | 0; //@line 35499
  }
  HEAP16[$75 >> 1] = $_0_i_i_i13; //@line 35502
  $100 = $c + 336 | 0; //@line 35503
  if ((HEAP8[$100] | 0) != 0) {
   _e68_exception_bus($c); //@line 35508
   STACKTOP = sp; //@line 35510
   return;
  }
  HEAP32[$69 >> 2] = (HEAP32[$69 >> 2] | 0) + 2; //@line 35515
  $107 = $c + 152 | 0; //@line 35516
  HEAP32[$107 >> 2] = (HEAP32[$107 >> 2] | 0) + 2; //@line 35519
  $111 = HEAPU16[$1 >> 1] | 0; //@line 35521
  $116 = HEAPU16[$77 >> 1] | 0; //@line 35526
  $121 = (($116 & 32768 | 0) != 0 ? $116 | -65536 : $116) + (HEAP32[$c + 120 + (($111 & 7) << 2) >> 2] | 0) | 0; //@line 35531
  $125 = HEAP32[$c + 88 + (($111 >>> 9 & 7) << 2) >> 2] | 0; //@line 35535
  $127 = $125 >>> 8 & 255; //@line 35537
  $128 = $121 & 16777215; //@line 35538
  if ($128 >>> 0 < (HEAP32[$80 >> 2] | 0) >>> 0) {
   HEAP8[(HEAP32[$c + 32 >> 2] | 0) + $128 | 0] = $127; //@line 35546
  } else {
   FUNCTION_TABLE_viii[HEAP32[$c + 20 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $128, $127); //@line 35553
  }
  $141 = $125 & 255; //@line 35556
  $142 = $121 + 2 & 16777215; //@line 35557
  if ($142 >>> 0 < (HEAP32[$80 >> 2] | 0) >>> 0) {
   HEAP8[(HEAP32[$c + 32 >> 2] | 0) + $142 | 0] = $141; //@line 35565
  } else {
   FUNCTION_TABLE_viii[HEAP32[$c + 20 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $142, $141); //@line 35572
  }
  $154 = $c + 372 | 0; //@line 35574
  HEAP32[$154 >> 2] = (HEAP32[$154 >> 2] | 0) + 16; //@line 35577
  $157 = HEAP32[$69 >> 2] | 0; //@line 35578
  if (($157 & 1 | 0) != 0) {
   _e68_exception_address($c, $157, 0, 0); //@line 35583
   STACKTOP = sp; //@line 35585
   return;
  }
  HEAP16[$77 >> 1] = HEAP16[$75 >> 1] | 0; //@line 35589
  $163 = $157 & 16777215; //@line 35590
  $164 = $163 + 1 | 0; //@line 35591
  if ($164 >>> 0 < (HEAP32[$80 >> 2] | 0) >>> 0) {
   $169 = HEAP32[$c + 32 >> 2] | 0; //@line 35597
   $_0_i_i13_i = HEAPU8[$169 + $163 | 0] << 8 | HEAPU8[$169 + $164 | 0]; //@line 35607
  } else {
   $_0_i_i13_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $163) | 0; //@line 35615
  }
  HEAP16[$75 >> 1] = $_0_i_i13_i; //@line 35618
  if ((HEAP8[$100] | 0) == 0) {
   HEAP32[$69 >> 2] = (HEAP32[$69 >> 2] | 0) + 2; //@line 35625
   HEAP32[$107 >> 2] = (HEAP32[$107 >> 2] | 0) + 2; //@line 35628
   STACKTOP = sp; //@line 35630
   return;
  } else {
   _e68_exception_bus($c); //@line 35633
   STACKTOP = sp; //@line 35635
   return;
  }
 } else {
  $193 = $3 & 63; //@line 35639
  if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($193 << 2) >> 2] & 127]($c, $193, 508, 8) | 0) != 0) {
   STACKTOP = sp; //@line 35646
   return;
  }
  if ((_e68_ea_get_val8($c, $s) | 0) != 0) {
   STACKTOP = sp; //@line 35653
   return;
  }
  $209 = 1 << (HEAP32[$c + 88 + (((HEAPU16[$1 >> 1] | 0) >>> 9 & 7) << 2) >> 2] & 7); //@line 35663
  $211 = HEAPU8[$s] | 0; //@line 35665
  $215 = $c + 372 | 0; //@line 35669
  HEAP32[$215 >> 2] = (HEAP32[$215 >> 2] | 0) + 8; //@line 35672
  $220 = $c + 166 | 0; //@line 35675
  $221 = HEAP16[$220 >> 1] | 0; //@line 35676
  HEAP16[$220 >> 1] = ($209 & $211 | 0) == 0 ? $221 | 4 : $221 & -5; //@line 35680
  $224 = $c + 156 | 0; //@line 35681
  $225 = HEAP32[$224 >> 2] | 0; //@line 35682
  if (($225 & 1 | 0) != 0) {
   _e68_exception_address($c, $225, 0, 0); //@line 35687
   STACKTOP = sp; //@line 35689
   return;
  }
  $230 = $c + 164 | 0; //@line 35692
  HEAP16[$c + 162 >> 1] = HEAP16[$230 >> 1] | 0; //@line 35695
  $233 = $225 & 16777215; //@line 35696
  $234 = $233 + 1 | 0; //@line 35697
  if ($234 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $240 = HEAP32[$c + 32 >> 2] | 0; //@line 35704
   $_0_i_i = HEAPU8[$240 + $233 | 0] << 8 | HEAPU8[$240 + $234 | 0]; //@line 35714
  } else {
   $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $233) | 0; //@line 35722
  }
  HEAP16[$230 >> 1] = $_0_i_i; //@line 35725
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$224 >> 2] = (HEAP32[$224 >> 2] | 0) + 2; //@line 35733
   $262 = $c + 152 | 0; //@line 35734
   HEAP32[$262 >> 2] = (HEAP32[$262 >> 2] | 0) + 2; //@line 35737
   _e68_ea_set_val8($c, ($209 ^ 255) & $211 & 255) | 0; //@line 35738
   STACKTOP = sp; //@line 35740
   return;
  } else {
   _e68_exception_bus($c); //@line 35743
   STACKTOP = sp; //@line 35745
   return;
  }
 }
}
function _op01c0($c) {
 $c = $c | 0;
 var $s = 0, $1 = 0, $3 = 0, $5 = 0, $8 = 0, $9 = 0, $15 = 0, $17 = 0, $22 = 0, $23 = 0, $26 = 0, $27 = 0, $32 = 0, $35 = 0, $36 = 0, $42 = 0, $_0_i_i_i = 0, $64 = 0, $68 = 0, $69 = 0, $74 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $84 = 0, $_0_i_i_i13 = 0, $99 = 0, $106 = 0, $110 = 0, $115 = 0, $120 = 0, $124 = 0, $126 = 0, $127 = 0, $141 = 0, $142 = 0, $156 = 0, $157 = 0, $170 = 0, $171 = 0, $183 = 0, $186 = 0, $192 = 0, $193 = 0, $198 = 0, $_0_i_i21_i = 0, $222 = 0, $238 = 0, $240 = 0, $243 = 0, $248 = 0, $249 = 0, $252 = 0, $253 = 0, $258 = 0, $261 = 0, $262 = 0, $268 = 0, $_0_i_i = 0, $290 = 0, sp = 0;
 sp = STACKTOP; //@line 35788
 STACKTOP = STACKTOP + 8 | 0; //@line 35788
 $s = sp | 0; //@line 35789
 $1 = $c + 160 | 0; //@line 35790
 $3 = HEAPU16[$1 >> 1] | 0; //@line 35792
 $5 = $3 >>> 3 & 7; //@line 35794
 if (($5 | 0) == 0) {
  $8 = $c + 88 + (($3 & 7) << 2) | 0; //@line 35797
  $9 = HEAP32[$8 >> 2] | 0; //@line 35798
  $15 = 1 << (HEAP32[$c + 88 + (($3 >>> 9 & 7) << 2) >> 2] & 31); //@line 35804
  $17 = $c + 372 | 0; //@line 35806
  HEAP32[$17 >> 2] = (HEAP32[$17 >> 2] | 0) + 8; //@line 35809
  $22 = $c + 166 | 0; //@line 35812
  $23 = HEAP16[$22 >> 1] | 0; //@line 35813
  HEAP16[$22 >> 1] = ($15 & $9 | 0) == 0 ? $23 | 4 : $23 & -5; //@line 35817
  HEAP32[$8 >> 2] = $15 | $9; //@line 35818
  $26 = $c + 156 | 0; //@line 35819
  $27 = HEAP32[$26 >> 2] | 0; //@line 35820
  if (($27 & 1 | 0) != 0) {
   _e68_exception_address($c, $27, 0, 0); //@line 35825
   STACKTOP = sp; //@line 35827
   return;
  }
  $32 = $c + 164 | 0; //@line 35830
  HEAP16[$c + 162 >> 1] = HEAP16[$32 >> 1] | 0; //@line 35833
  $35 = $27 & 16777215; //@line 35834
  $36 = $35 + 1 | 0; //@line 35835
  if ($36 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $42 = HEAP32[$c + 32 >> 2] | 0; //@line 35842
   $_0_i_i_i = HEAPU8[$42 + $35 | 0] << 8 | HEAPU8[$42 + $36 | 0]; //@line 35852
  } else {
   $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $35) | 0; //@line 35860
  }
  HEAP16[$32 >> 1] = $_0_i_i_i; //@line 35863
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$26 >> 2] = (HEAP32[$26 >> 2] | 0) + 2; //@line 35871
   $64 = $c + 152 | 0; //@line 35872
   HEAP32[$64 >> 2] = (HEAP32[$64 >> 2] | 0) + 2; //@line 35875
   STACKTOP = sp; //@line 35877
   return;
  } else {
   _e68_exception_bus($c); //@line 35880
   STACKTOP = sp; //@line 35882
   return;
  }
 } else if (($5 | 0) == 1) {
  $68 = $c + 156 | 0; //@line 35886
  $69 = HEAP32[$68 >> 2] | 0; //@line 35887
  if (($69 & 1 | 0) != 0) {
   _e68_exception_address($c, $69, 0, 0); //@line 35892
   STACKTOP = sp; //@line 35894
   return;
  }
  $74 = $c + 164 | 0; //@line 35897
  $76 = $c + 162 | 0; //@line 35899
  HEAP16[$76 >> 1] = HEAP16[$74 >> 1] | 0; //@line 35900
  $77 = $69 & 16777215; //@line 35901
  $78 = $77 + 1 | 0; //@line 35902
  $79 = $c + 36 | 0; //@line 35903
  if ($78 >>> 0 < (HEAP32[$79 >> 2] | 0) >>> 0) {
   $84 = HEAP32[$c + 32 >> 2] | 0; //@line 35909
   $_0_i_i_i13 = HEAPU8[$84 + $77 | 0] << 8 | HEAPU8[$84 + $78 | 0]; //@line 35919
  } else {
   $_0_i_i_i13 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $77) | 0; //@line 35927
  }
  HEAP16[$74 >> 1] = $_0_i_i_i13; //@line 35930
  $99 = $c + 336 | 0; //@line 35931
  if ((HEAP8[$99] | 0) != 0) {
   _e68_exception_bus($c); //@line 35936
   STACKTOP = sp; //@line 35938
   return;
  }
  HEAP32[$68 >> 2] = (HEAP32[$68 >> 2] | 0) + 2; //@line 35943
  $106 = $c + 152 | 0; //@line 35944
  HEAP32[$106 >> 2] = (HEAP32[$106 >> 2] | 0) + 2; //@line 35947
  $110 = HEAPU16[$1 >> 1] | 0; //@line 35949
  $115 = HEAPU16[$76 >> 1] | 0; //@line 35954
  $120 = (($115 & 32768 | 0) != 0 ? $115 | -65536 : $115) + (HEAP32[$c + 120 + (($110 & 7) << 2) >> 2] | 0) | 0; //@line 35959
  $124 = HEAP32[$c + 88 + (($110 >>> 9 & 7) << 2) >> 2] | 0; //@line 35963
  $126 = $124 >>> 24 & 255; //@line 35965
  $127 = $120 & 16777215; //@line 35966
  if ($127 >>> 0 < (HEAP32[$79 >> 2] | 0) >>> 0) {
   HEAP8[(HEAP32[$c + 32 >> 2] | 0) + $127 | 0] = $126; //@line 35974
  } else {
   FUNCTION_TABLE_viii[HEAP32[$c + 20 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $127, $126); //@line 35981
  }
  $141 = $124 >>> 16 & 255; //@line 35985
  $142 = $120 + 2 & 16777215; //@line 35986
  if ($142 >>> 0 < (HEAP32[$79 >> 2] | 0) >>> 0) {
   HEAP8[(HEAP32[$c + 32 >> 2] | 0) + $142 | 0] = $141; //@line 35994
  } else {
   FUNCTION_TABLE_viii[HEAP32[$c + 20 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $142, $141); //@line 36001
  }
  $156 = $124 >>> 8 & 255; //@line 36005
  $157 = $120 + 4 & 16777215; //@line 36006
  if ($157 >>> 0 < (HEAP32[$79 >> 2] | 0) >>> 0) {
   HEAP8[(HEAP32[$c + 32 >> 2] | 0) + $157 | 0] = $156; //@line 36014
  } else {
   FUNCTION_TABLE_viii[HEAP32[$c + 20 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $157, $156); //@line 36021
  }
  $170 = $124 & 255; //@line 36024
  $171 = $120 + 6 & 16777215; //@line 36025
  if ($171 >>> 0 < (HEAP32[$79 >> 2] | 0) >>> 0) {
   HEAP8[(HEAP32[$c + 32 >> 2] | 0) + $171 | 0] = $170; //@line 36033
  } else {
   FUNCTION_TABLE_viii[HEAP32[$c + 20 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $171, $170); //@line 36040
  }
  $183 = $c + 372 | 0; //@line 36042
  HEAP32[$183 >> 2] = (HEAP32[$183 >> 2] | 0) + 24; //@line 36045
  $186 = HEAP32[$68 >> 2] | 0; //@line 36046
  if (($186 & 1 | 0) != 0) {
   _e68_exception_address($c, $186, 0, 0); //@line 36051
   STACKTOP = sp; //@line 36053
   return;
  }
  HEAP16[$76 >> 1] = HEAP16[$74 >> 1] | 0; //@line 36057
  $192 = $186 & 16777215; //@line 36058
  $193 = $192 + 1 | 0; //@line 36059
  if ($193 >>> 0 < (HEAP32[$79 >> 2] | 0) >>> 0) {
   $198 = HEAP32[$c + 32 >> 2] | 0; //@line 36065
   $_0_i_i21_i = HEAPU8[$198 + $192 | 0] << 8 | HEAPU8[$198 + $193 | 0]; //@line 36075
  } else {
   $_0_i_i21_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $192) | 0; //@line 36083
  }
  HEAP16[$74 >> 1] = $_0_i_i21_i; //@line 36086
  if ((HEAP8[$99] | 0) == 0) {
   HEAP32[$68 >> 2] = (HEAP32[$68 >> 2] | 0) + 2; //@line 36093
   HEAP32[$106 >> 2] = (HEAP32[$106 >> 2] | 0) + 2; //@line 36096
   STACKTOP = sp; //@line 36098
   return;
  } else {
   _e68_exception_bus($c); //@line 36101
   STACKTOP = sp; //@line 36103
   return;
  }
 } else {
  $222 = $3 & 63; //@line 36107
  if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($222 << 2) >> 2] & 127]($c, $222, 508, 8) | 0) != 0) {
   STACKTOP = sp; //@line 36114
   return;
  }
  if ((_e68_ea_get_val8($c, $s) | 0) != 0) {
   STACKTOP = sp; //@line 36121
   return;
  }
  $238 = 1 << (HEAP32[$c + 88 + (((HEAPU16[$1 >> 1] | 0) >>> 9 & 7) << 2) >> 2] & 7); //@line 36131
  $240 = HEAPU8[$s] | 0; //@line 36133
  $243 = $c + 372 | 0; //@line 36136
  HEAP32[$243 >> 2] = (HEAP32[$243 >> 2] | 0) + 8; //@line 36139
  $248 = $c + 166 | 0; //@line 36142
  $249 = HEAP16[$248 >> 1] | 0; //@line 36143
  HEAP16[$248 >> 1] = ($238 & $240 | 0) == 0 ? $249 | 4 : $249 & -5; //@line 36147
  $252 = $c + 156 | 0; //@line 36148
  $253 = HEAP32[$252 >> 2] | 0; //@line 36149
  if (($253 & 1 | 0) != 0) {
   _e68_exception_address($c, $253, 0, 0); //@line 36154
   STACKTOP = sp; //@line 36156
   return;
  }
  $258 = $c + 164 | 0; //@line 36159
  HEAP16[$c + 162 >> 1] = HEAP16[$258 >> 1] | 0; //@line 36162
  $261 = $253 & 16777215; //@line 36163
  $262 = $261 + 1 | 0; //@line 36164
  if ($262 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $268 = HEAP32[$c + 32 >> 2] | 0; //@line 36171
   $_0_i_i = HEAPU8[$268 + $261 | 0] << 8 | HEAPU8[$268 + $262 | 0]; //@line 36181
  } else {
   $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $261) | 0; //@line 36189
  }
  HEAP16[$258 >> 1] = $_0_i_i; //@line 36192
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$252 >> 2] = (HEAP32[$252 >> 2] | 0) + 2; //@line 36200
   $290 = $c + 152 | 0; //@line 36201
   HEAP32[$290 >> 2] = (HEAP32[$290 >> 2] | 0) + 2; //@line 36204
   _e68_ea_set_val8($c, ($240 | $238) & 255) | 0; //@line 36205
   STACKTOP = sp; //@line 36207
   return;
  } else {
   _e68_exception_bus($c); //@line 36210
   STACKTOP = sp; //@line 36212
   return;
  }
 }
}
function _op0200($c) {
 $c = $c | 0;
 var $s2 = 0, $1 = 0, $2 = 0, $7 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $17 = 0, $32 = 0, $33 = 0, $39 = 0, $40 = 0, $43 = 0, $47 = 0, $50 = 0, $57 = 0, $58 = 0, $62 = 0, $75 = 0, $phitmp = 0, $82 = 0, $98 = 0, $99 = 0, $102 = 0, $108 = 0, $109 = 0, $114 = 0, $_0_i_i20 = 0, sp = 0;
 sp = STACKTOP; //@line 36238
 STACKTOP = STACKTOP + 8 | 0; //@line 36238
 $s2 = sp | 0; //@line 36239
 $1 = $c + 156 | 0; //@line 36240
 $2 = HEAP32[$1 >> 2] | 0; //@line 36241
 if (($2 & 1 | 0) != 0) {
  _e68_exception_address($c, $2, 0, 0); //@line 36246
  STACKTOP = sp; //@line 36248
  return;
 }
 $7 = $c + 164 | 0; //@line 36251
 $9 = $c + 162 | 0; //@line 36253
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 36254
 $10 = $2 & 16777215; //@line 36255
 $11 = $10 + 1 | 0; //@line 36256
 $12 = $c + 36 | 0; //@line 36257
 if ($11 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $17 = HEAP32[$c + 32 >> 2] | 0; //@line 36263
  $32 = HEAPU8[$17 + $10 | 0] << 8 | HEAPU8[$17 + $11 | 0]; //@line 36273
 } else {
  $32 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $10) | 0; //@line 36281
 }
 HEAP16[$7 >> 1] = $32; //@line 36284
 $33 = $c + 336 | 0; //@line 36285
 if ((HEAP8[$33] | 0) != 0) {
  _e68_exception_bus($c); //@line 36290
  STACKTOP = sp; //@line 36292
  return;
 }
 $39 = (HEAP32[$1 >> 2] | 0) + 2 | 0; //@line 36296
 HEAP32[$1 >> 2] = $39; //@line 36297
 $40 = $c + 152 | 0; //@line 36298
 HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 36301
 $43 = HEAP16[$9 >> 1] | 0; //@line 36302
 $47 = HEAP16[$c + 160 >> 1] & 63; //@line 36306
 if (($47 | 0) == 60) {
  $50 = $c + 372 | 0; //@line 36310
  HEAP32[$50 >> 2] = (HEAP32[$50 >> 2] | 0) + 20; //@line 36313
  if (($39 & 1 | 0) != 0) {
   _e68_exception_address($c, $39, 0, 0); //@line 36318
   STACKTOP = sp; //@line 36320
   return;
  }
  HEAP16[$9 >> 1] = $32; //@line 36323
  $57 = $39 & 16777215; //@line 36324
  $58 = $57 + 1 | 0; //@line 36325
  do {
   if ($58 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
    $62 = HEAP32[$c + 32 >> 2] | 0; //@line 36332
    HEAP16[$7 >> 1] = HEAPU8[$62 + $57 | 0] << 8 | HEAPU8[$62 + $58 | 0]; //@line 36341
   } else {
    $75 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $57) | 0; //@line 36348
    $phitmp = (HEAP8[$33] | 0) == 0; //@line 36350
    HEAP16[$7 >> 1] = $75; //@line 36351
    if ($phitmp) {
     break;
    }
    _e68_exception_bus($c); //@line 36356
    STACKTOP = sp; //@line 36358
    return;
   }
  } while (0);
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 36364
  HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 36367
  $82 = $c + 166 | 0; //@line 36368
  HEAP16[$82 >> 1] = HEAP16[$82 >> 1] & ($43 & 31 | -256); //@line 36373
  STACKTOP = sp; //@line 36375
  return;
 }
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($47 << 2) >> 2] & 127]($c, $47, 509, 8) | 0) != 0) {
  STACKTOP = sp; //@line 36384
  return;
 }
 if ((_e68_ea_get_val8($c, $s2) | 0) != 0) {
  STACKTOP = sp; //@line 36391
  return;
 }
 $98 = HEAP8[$s2] & ($43 & 255); //@line 36396
 $99 = $c + 372 | 0; //@line 36397
 HEAP32[$99 >> 2] = (HEAP32[$99 >> 2] | 0) + 8; //@line 36400
 _e68_cc_set_nz_8($c, 15, $98); //@line 36401
 $102 = HEAP32[$1 >> 2] | 0; //@line 36402
 if (($102 & 1 | 0) != 0) {
  _e68_exception_address($c, $102, 0, 0); //@line 36407
  STACKTOP = sp; //@line 36409
  return;
 }
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 36413
 $108 = $102 & 16777215; //@line 36414
 $109 = $108 + 1 | 0; //@line 36415
 if ($109 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $114 = HEAP32[$c + 32 >> 2] | 0; //@line 36421
  $_0_i_i20 = HEAPU8[$114 + $108 | 0] << 8 | HEAPU8[$114 + $109 | 0]; //@line 36431
 } else {
  $_0_i_i20 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $108) | 0; //@line 36439
 }
 HEAP16[$7 >> 1] = $_0_i_i20; //@line 36442
 if ((HEAP8[$33] | 0) == 0) {
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 36449
  HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 36452
  _e68_ea_set_val8($c, $98) | 0; //@line 36453
  STACKTOP = sp; //@line 36455
  return;
 } else {
  _e68_exception_bus($c); //@line 36458
  STACKTOP = sp; //@line 36460
  return;
 }
}
function _op0240($c) {
 $c = $c | 0;
 var $s2 = 0, $1 = 0, $11 = 0, $12 = 0, $17 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $27 = 0, $42 = 0, $43 = 0, $49 = 0, $50 = 0, $52 = 0, $53 = 0, $54 = 0, $61 = 0, $62 = 0, $66 = 0, $79 = 0, $phitmp_i = 0, $82 = 0, $83 = 0, $90 = 0, $91 = 0, $96 = 0, $98 = 0, $99 = 0, $100 = 0, $101 = 0, $106 = 0, $_0_i_i = 0, $121 = 0, $128 = 0, $131 = 0, $134 = 0, $144 = 0, $145 = 0, $148 = 0, $154 = 0, $155 = 0, $160 = 0, $_0_i_i11 = 0, sp = 0;
 sp = STACKTOP; //@line 36490
 STACKTOP = STACKTOP + 8 | 0; //@line 36490
 $s2 = sp | 0; //@line 36491
 $1 = $c + 160 | 0; //@line 36492
 if ((HEAP16[$1 >> 1] & 63) == 60) {
  if ((HEAP8[$c + 334 | 0] | 0) == 0) {
   _e68_exception_privilege($c); //@line 36503
   STACKTOP = sp; //@line 36505
   return;
  }
  $11 = $c + 156 | 0; //@line 36508
  $12 = HEAP32[$11 >> 2] | 0; //@line 36509
  if (($12 & 1 | 0) != 0) {
   _e68_exception_address($c, $12, 0, 0); //@line 36514
   STACKTOP = sp; //@line 36516
   return;
  }
  $17 = $c + 164 | 0; //@line 36519
  $19 = $c + 162 | 0; //@line 36521
  HEAP16[$19 >> 1] = HEAP16[$17 >> 1] | 0; //@line 36522
  $20 = $12 & 16777215; //@line 36523
  $21 = $20 + 1 | 0; //@line 36524
  $22 = $c + 36 | 0; //@line 36525
  if ($21 >>> 0 < (HEAP32[$22 >> 2] | 0) >>> 0) {
   $27 = HEAP32[$c + 32 >> 2] | 0; //@line 36531
   $42 = HEAPU8[$27 + $20 | 0] << 8 | HEAPU8[$27 + $21 | 0]; //@line 36541
  } else {
   $42 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $20) | 0; //@line 36549
  }
  HEAP16[$17 >> 1] = $42; //@line 36552
  $43 = $c + 336 | 0; //@line 36553
  if ((HEAP8[$43] | 0) != 0) {
   _e68_exception_bus($c); //@line 36558
   STACKTOP = sp; //@line 36560
   return;
  }
  $49 = (HEAP32[$11 >> 2] | 0) + 2 | 0; //@line 36564
  HEAP32[$11 >> 2] = $49; //@line 36565
  $50 = $c + 152 | 0; //@line 36566
  $52 = (HEAP32[$50 >> 2] | 0) + 2 | 0; //@line 36568
  HEAP32[$50 >> 2] = $52; //@line 36569
  $53 = HEAP16[$19 >> 1] | 0; //@line 36570
  $54 = $c + 372 | 0; //@line 36571
  HEAP32[$54 >> 2] = (HEAP32[$54 >> 2] | 0) + 20; //@line 36574
  if (($49 & 1 | 0) != 0) {
   _e68_exception_address($c, $49, 0, 0); //@line 36579
   STACKTOP = sp; //@line 36581
   return;
  }
  HEAP16[$19 >> 1] = $42; //@line 36584
  $61 = $49 & 16777215; //@line 36585
  $62 = $61 + 1 | 0; //@line 36586
  do {
   if ($62 >>> 0 < (HEAP32[$22 >> 2] | 0) >>> 0) {
    $66 = HEAP32[$c + 32 >> 2] | 0; //@line 36593
    HEAP16[$17 >> 1] = HEAPU8[$66 + $61 | 0] << 8 | HEAPU8[$66 + $62 | 0]; //@line 36602
    $83 = $49;
    $82 = $52;
   } else {
    $79 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $61) | 0; //@line 36610
    $phitmp_i = (HEAP8[$43] | 0) == 0; //@line 36612
    HEAP16[$17 >> 1] = $79; //@line 36613
    if ($phitmp_i) {
     $83 = HEAP32[$11 >> 2] | 0;
     $82 = HEAP32[$50 >> 2] | 0;
     break;
    }
    _e68_exception_bus($c); //@line 36622
    STACKTOP = sp; //@line 36624
    return;
   }
  } while (0);
  HEAP32[$11 >> 2] = $83 + 2; //@line 36631
  HEAP32[$50 >> 2] = $82 + 2; //@line 36633
  _e68_set_sr($c, HEAP16[$c + 166 >> 1] & $53); //@line 36637
  STACKTOP = sp; //@line 36639
  return;
 }
 $90 = $c + 156 | 0; //@line 36642
 $91 = HEAP32[$90 >> 2] | 0; //@line 36643
 if (($91 & 1 | 0) != 0) {
  _e68_exception_address($c, $91, 0, 0); //@line 36648
  STACKTOP = sp; //@line 36650
  return;
 }
 $96 = $c + 164 | 0; //@line 36653
 $98 = $c + 162 | 0; //@line 36655
 HEAP16[$98 >> 1] = HEAP16[$96 >> 1] | 0; //@line 36656
 $99 = $91 & 16777215; //@line 36657
 $100 = $99 + 1 | 0; //@line 36658
 $101 = $c + 36 | 0; //@line 36659
 if ($100 >>> 0 < (HEAP32[$101 >> 2] | 0) >>> 0) {
  $106 = HEAP32[$c + 32 >> 2] | 0; //@line 36665
  $_0_i_i = HEAPU8[$106 + $99 | 0] << 8 | HEAPU8[$106 + $100 | 0]; //@line 36675
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $99) | 0; //@line 36683
 }
 HEAP16[$96 >> 1] = $_0_i_i; //@line 36686
 $121 = $c + 336 | 0; //@line 36687
 if ((HEAP8[$121] | 0) != 0) {
  _e68_exception_bus($c); //@line 36692
  STACKTOP = sp; //@line 36694
  return;
 }
 HEAP32[$90 >> 2] = (HEAP32[$90 >> 2] | 0) + 2; //@line 36699
 $128 = $c + 152 | 0; //@line 36700
 HEAP32[$128 >> 2] = (HEAP32[$128 >> 2] | 0) + 2; //@line 36703
 $131 = HEAP16[$98 >> 1] | 0; //@line 36704
 $134 = HEAP16[$1 >> 1] & 63; //@line 36707
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($134 << 2) >> 2] & 127]($c, $134, 509, 16) | 0) != 0) {
  STACKTOP = sp; //@line 36714
  return;
 }
 if ((_e68_ea_get_val16($c, $s2) | 0) != 0) {
  STACKTOP = sp; //@line 36721
  return;
 }
 $144 = HEAP16[$s2 >> 1] & $131; //@line 36725
 $145 = $c + 372 | 0; //@line 36726
 HEAP32[$145 >> 2] = (HEAP32[$145 >> 2] | 0) + 8; //@line 36729
 _e68_cc_set_nz_16($c, 15, $144); //@line 36730
 $148 = HEAP32[$90 >> 2] | 0; //@line 36731
 if (($148 & 1 | 0) != 0) {
  _e68_exception_address($c, $148, 0, 0); //@line 36736
  STACKTOP = sp; //@line 36738
  return;
 }
 HEAP16[$98 >> 1] = HEAP16[$96 >> 1] | 0; //@line 36742
 $154 = $148 & 16777215; //@line 36743
 $155 = $154 + 1 | 0; //@line 36744
 if ($155 >>> 0 < (HEAP32[$101 >> 2] | 0) >>> 0) {
  $160 = HEAP32[$c + 32 >> 2] | 0; //@line 36750
  $_0_i_i11 = HEAPU8[$160 + $154 | 0] << 8 | HEAPU8[$160 + $155 | 0]; //@line 36760
 } else {
  $_0_i_i11 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $154) | 0; //@line 36768
 }
 HEAP16[$96 >> 1] = $_0_i_i11; //@line 36771
 if ((HEAP8[$121] | 0) == 0) {
  HEAP32[$90 >> 2] = (HEAP32[$90 >> 2] | 0) + 2; //@line 36778
  HEAP32[$128 >> 2] = (HEAP32[$128 >> 2] | 0) + 2; //@line 36781
  _e68_ea_set_val16($c, $144) | 0; //@line 36782
  STACKTOP = sp; //@line 36784
  return;
 } else {
  _e68_exception_bus($c); //@line 36787
  STACKTOP = sp; //@line 36789
  return;
 }
}
function _op0280($c) {
 $c = $c | 0;
 var $s2 = 0, $1 = 0, $2 = 0, $7 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $17 = 0, $32 = 0, $33 = 0, $39 = 0, $40 = 0, $43 = 0, $48 = 0, $49 = 0, $53 = 0, $66 = 0, $phitmp = 0, $77 = 0, $81 = 0, $91 = 0, $92 = 0, $95 = 0, $101 = 0, $102 = 0, $107 = 0, $_0_i_i17 = 0, sp = 0;
 sp = STACKTOP; //@line 36813
 STACKTOP = STACKTOP + 8 | 0; //@line 36813
 $s2 = sp | 0; //@line 36814
 $1 = $c + 156 | 0; //@line 36815
 $2 = HEAP32[$1 >> 2] | 0; //@line 36816
 if (($2 & 1 | 0) != 0) {
  _e68_exception_address($c, $2, 0, 0); //@line 36821
  STACKTOP = sp; //@line 36823
  return;
 }
 $7 = $c + 164 | 0; //@line 36826
 $9 = $c + 162 | 0; //@line 36828
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 36829
 $10 = $2 & 16777215; //@line 36830
 $11 = $10 + 1 | 0; //@line 36831
 $12 = $c + 36 | 0; //@line 36832
 if ($11 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $17 = HEAP32[$c + 32 >> 2] | 0; //@line 36838
  $32 = HEAPU8[$17 + $10 | 0] << 8 | HEAPU8[$17 + $11 | 0]; //@line 36848
 } else {
  $32 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $10) | 0; //@line 36856
 }
 HEAP16[$7 >> 1] = $32; //@line 36859
 $33 = $c + 336 | 0; //@line 36860
 if ((HEAP8[$33] | 0) != 0) {
  _e68_exception_bus($c); //@line 36865
  STACKTOP = sp; //@line 36867
  return;
 }
 $39 = (HEAP32[$1 >> 2] | 0) + 2 | 0; //@line 36871
 HEAP32[$1 >> 2] = $39; //@line 36872
 $40 = $c + 152 | 0; //@line 36873
 HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 36876
 $43 = HEAP16[$9 >> 1] | 0; //@line 36877
 if (($39 & 1 | 0) != 0) {
  _e68_exception_address($c, $39, 0, 0); //@line 36882
  STACKTOP = sp; //@line 36884
  return;
 }
 HEAP16[$9 >> 1] = $32; //@line 36887
 $48 = $39 & 16777215; //@line 36888
 $49 = $48 + 1 | 0; //@line 36889
 do {
  if ($49 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
   $53 = HEAP32[$c + 32 >> 2] | 0; //@line 36896
   HEAP16[$7 >> 1] = HEAPU8[$53 + $48 | 0] << 8 | HEAPU8[$53 + $49 | 0]; //@line 36905
  } else {
   $66 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $48) | 0; //@line 36912
   $phitmp = (HEAP8[$33] | 0) == 0; //@line 36914
   HEAP16[$7 >> 1] = $66; //@line 36915
   if ($phitmp) {
    break;
   }
   _e68_exception_bus($c); //@line 36920
   STACKTOP = sp; //@line 36922
   return;
  }
 } while (0);
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 36928
 HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 36931
 $77 = HEAPU16[$9 >> 1] | ($43 & 65535) << 16; //@line 36936
 $81 = HEAP16[$c + 160 >> 1] & 63; //@line 36940
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($81 << 2) >> 2] & 127]($c, $81, 509, 32) | 0) != 0) {
  STACKTOP = sp; //@line 36947
  return;
 }
 if ((_e68_ea_get_val32($c, $s2) | 0) != 0) {
  STACKTOP = sp; //@line 36954
  return;
 }
 $91 = HEAP32[$s2 >> 2] & $77; //@line 36958
 $92 = $c + 372 | 0; //@line 36959
 HEAP32[$92 >> 2] = (HEAP32[$92 >> 2] | 0) + 16; //@line 36962
 _e68_cc_set_nz_32($c, 15, $91); //@line 36963
 $95 = HEAP32[$1 >> 2] | 0; //@line 36964
 if (($95 & 1 | 0) != 0) {
  _e68_exception_address($c, $95, 0, 0); //@line 36969
  STACKTOP = sp; //@line 36971
  return;
 }
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 36975
 $101 = $95 & 16777215; //@line 36976
 $102 = $101 + 1 | 0; //@line 36977
 if ($102 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $107 = HEAP32[$c + 32 >> 2] | 0; //@line 36983
  $_0_i_i17 = HEAPU8[$107 + $101 | 0] << 8 | HEAPU8[$107 + $102 | 0]; //@line 36993
 } else {
  $_0_i_i17 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $101) | 0; //@line 37001
 }
 HEAP16[$7 >> 1] = $_0_i_i17; //@line 37004
 if ((HEAP8[$33] | 0) == 0) {
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 37011
  HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 37014
  _e68_ea_set_val32($c, $91) | 0; //@line 37015
  STACKTOP = sp; //@line 37017
  return;
 } else {
  _e68_exception_bus($c); //@line 37020
  STACKTOP = sp; //@line 37022
  return;
 }
}
function _op0400($c) {
 $c = $c | 0;
 var $s2 = 0, $1 = 0, $2 = 0, $7 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $17 = 0, $_0_i_i = 0, $32 = 0, $39 = 0, $43 = 0, $47 = 0, $56 = 0, $57 = 0, $58 = 0, $61 = 0, $67 = 0, $68 = 0, $73 = 0, $_0_i_i11 = 0, sp = 0;
 sp = STACKTOP; //@line 37042
 STACKTOP = STACKTOP + 8 | 0; //@line 37042
 $s2 = sp | 0; //@line 37043
 $1 = $c + 156 | 0; //@line 37044
 $2 = HEAP32[$1 >> 2] | 0; //@line 37045
 if (($2 & 1 | 0) != 0) {
  _e68_exception_address($c, $2, 0, 0); //@line 37050
  STACKTOP = sp; //@line 37052
  return;
 }
 $7 = $c + 164 | 0; //@line 37055
 $9 = $c + 162 | 0; //@line 37057
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 37058
 $10 = $2 & 16777215; //@line 37059
 $11 = $10 + 1 | 0; //@line 37060
 $12 = $c + 36 | 0; //@line 37061
 if ($11 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $17 = HEAP32[$c + 32 >> 2] | 0; //@line 37067
  $_0_i_i = HEAPU8[$17 + $10 | 0] << 8 | HEAPU8[$17 + $11 | 0]; //@line 37077
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $10) | 0; //@line 37085
 }
 HEAP16[$7 >> 1] = $_0_i_i; //@line 37088
 $32 = $c + 336 | 0; //@line 37089
 if ((HEAP8[$32] | 0) != 0) {
  _e68_exception_bus($c); //@line 37094
  STACKTOP = sp; //@line 37096
  return;
 }
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 37101
 $39 = $c + 152 | 0; //@line 37102
 HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 2; //@line 37105
 $43 = HEAP16[$9 >> 1] & 255; //@line 37107
 $47 = HEAP16[$c + 160 >> 1] & 63; //@line 37111
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($47 << 2) >> 2] & 127]($c, $47, 509, 8) | 0) != 0) {
  STACKTOP = sp; //@line 37118
  return;
 }
 if ((_e68_ea_get_val8($c, $s2) | 0) != 0) {
  STACKTOP = sp; //@line 37125
  return;
 }
 $56 = HEAP8[$s2] | 0; //@line 37128
 $57 = $56 - $43 & 255; //@line 37129
 $58 = $c + 372 | 0; //@line 37130
 HEAP32[$58 >> 2] = (HEAP32[$58 >> 2] | 0) + 8; //@line 37133
 _e68_cc_set_sub_8($c, $57, $43, $56); //@line 37134
 $61 = HEAP32[$1 >> 2] | 0; //@line 37135
 if (($61 & 1 | 0) != 0) {
  _e68_exception_address($c, $61, 0, 0); //@line 37140
  STACKTOP = sp; //@line 37142
  return;
 }
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 37146
 $67 = $61 & 16777215; //@line 37147
 $68 = $67 + 1 | 0; //@line 37148
 if ($68 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $73 = HEAP32[$c + 32 >> 2] | 0; //@line 37154
  $_0_i_i11 = HEAPU8[$73 + $67 | 0] << 8 | HEAPU8[$73 + $68 | 0]; //@line 37164
 } else {
  $_0_i_i11 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $67) | 0; //@line 37172
 }
 HEAP16[$7 >> 1] = $_0_i_i11; //@line 37175
 if ((HEAP8[$32] | 0) == 0) {
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 37182
  HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 2; //@line 37185
  _e68_ea_set_val8($c, $57) | 0; //@line 37186
  STACKTOP = sp; //@line 37188
  return;
 } else {
  _e68_exception_bus($c); //@line 37191
  STACKTOP = sp; //@line 37193
  return;
 }
}
function _op0440($c) {
 $c = $c | 0;
 var $s2 = 0, $1 = 0, $2 = 0, $7 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $17 = 0, $_0_i_i = 0, $32 = 0, $39 = 0, $42 = 0, $46 = 0, $55 = 0, $56 = 0, $57 = 0, $60 = 0, $66 = 0, $67 = 0, $72 = 0, $_0_i_i11 = 0, sp = 0;
 sp = STACKTOP; //@line 37213
 STACKTOP = STACKTOP + 8 | 0; //@line 37213
 $s2 = sp | 0; //@line 37214
 $1 = $c + 156 | 0; //@line 37215
 $2 = HEAP32[$1 >> 2] | 0; //@line 37216
 if (($2 & 1 | 0) != 0) {
  _e68_exception_address($c, $2, 0, 0); //@line 37221
  STACKTOP = sp; //@line 37223
  return;
 }
 $7 = $c + 164 | 0; //@line 37226
 $9 = $c + 162 | 0; //@line 37228
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 37229
 $10 = $2 & 16777215; //@line 37230
 $11 = $10 + 1 | 0; //@line 37231
 $12 = $c + 36 | 0; //@line 37232
 if ($11 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $17 = HEAP32[$c + 32 >> 2] | 0; //@line 37238
  $_0_i_i = HEAPU8[$17 + $10 | 0] << 8 | HEAPU8[$17 + $11 | 0]; //@line 37248
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $10) | 0; //@line 37256
 }
 HEAP16[$7 >> 1] = $_0_i_i; //@line 37259
 $32 = $c + 336 | 0; //@line 37260
 if ((HEAP8[$32] | 0) != 0) {
  _e68_exception_bus($c); //@line 37265
  STACKTOP = sp; //@line 37267
  return;
 }
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 37272
 $39 = $c + 152 | 0; //@line 37273
 HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 2; //@line 37276
 $42 = HEAP16[$9 >> 1] | 0; //@line 37277
 $46 = HEAP16[$c + 160 >> 1] & 63; //@line 37281
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($46 << 2) >> 2] & 127]($c, $46, 509, 16) | 0) != 0) {
  STACKTOP = sp; //@line 37288
  return;
 }
 if ((_e68_ea_get_val16($c, $s2) | 0) != 0) {
  STACKTOP = sp; //@line 37295
  return;
 }
 $55 = HEAP16[$s2 >> 1] | 0; //@line 37298
 $56 = $55 - $42 & 65535; //@line 37299
 $57 = $c + 372 | 0; //@line 37300
 HEAP32[$57 >> 2] = (HEAP32[$57 >> 2] | 0) + 8; //@line 37303
 _e68_cc_set_sub_16($c, $56, $42, $55); //@line 37304
 $60 = HEAP32[$1 >> 2] | 0; //@line 37305
 if (($60 & 1 | 0) != 0) {
  _e68_exception_address($c, $60, 0, 0); //@line 37310
  STACKTOP = sp; //@line 37312
  return;
 }
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 37316
 $66 = $60 & 16777215; //@line 37317
 $67 = $66 + 1 | 0; //@line 37318
 if ($67 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $72 = HEAP32[$c + 32 >> 2] | 0; //@line 37324
  $_0_i_i11 = HEAPU8[$72 + $66 | 0] << 8 | HEAPU8[$72 + $67 | 0]; //@line 37334
 } else {
  $_0_i_i11 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $66) | 0; //@line 37342
 }
 HEAP16[$7 >> 1] = $_0_i_i11; //@line 37345
 if ((HEAP8[$32] | 0) == 0) {
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 37352
  HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 2; //@line 37355
  _e68_ea_set_val16($c, $56) | 0; //@line 37356
  STACKTOP = sp; //@line 37358
  return;
 } else {
  _e68_exception_bus($c); //@line 37361
  STACKTOP = sp; //@line 37363
  return;
 }
}
function _op0480($c) {
 $c = $c | 0;
 var $s2 = 0, $1 = 0, $2 = 0, $7 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $17 = 0, $32 = 0, $33 = 0, $39 = 0, $40 = 0, $43 = 0, $48 = 0, $49 = 0, $53 = 0, $66 = 0, $phitmp = 0, $77 = 0, $81 = 0, $90 = 0, $91 = 0, $92 = 0, $95 = 0, $101 = 0, $102 = 0, $107 = 0, $_0_i_i18 = 0, sp = 0;
 sp = STACKTOP; //@line 37387
 STACKTOP = STACKTOP + 8 | 0; //@line 37387
 $s2 = sp | 0; //@line 37388
 $1 = $c + 156 | 0; //@line 37389
 $2 = HEAP32[$1 >> 2] | 0; //@line 37390
 if (($2 & 1 | 0) != 0) {
  _e68_exception_address($c, $2, 0, 0); //@line 37395
  STACKTOP = sp; //@line 37397
  return;
 }
 $7 = $c + 164 | 0; //@line 37400
 $9 = $c + 162 | 0; //@line 37402
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 37403
 $10 = $2 & 16777215; //@line 37404
 $11 = $10 + 1 | 0; //@line 37405
 $12 = $c + 36 | 0; //@line 37406
 if ($11 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $17 = HEAP32[$c + 32 >> 2] | 0; //@line 37412
  $32 = HEAPU8[$17 + $10 | 0] << 8 | HEAPU8[$17 + $11 | 0]; //@line 37422
 } else {
  $32 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $10) | 0; //@line 37430
 }
 HEAP16[$7 >> 1] = $32; //@line 37433
 $33 = $c + 336 | 0; //@line 37434
 if ((HEAP8[$33] | 0) != 0) {
  _e68_exception_bus($c); //@line 37439
  STACKTOP = sp; //@line 37441
  return;
 }
 $39 = (HEAP32[$1 >> 2] | 0) + 2 | 0; //@line 37445
 HEAP32[$1 >> 2] = $39; //@line 37446
 $40 = $c + 152 | 0; //@line 37447
 HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 37450
 $43 = HEAP16[$9 >> 1] | 0; //@line 37451
 if (($39 & 1 | 0) != 0) {
  _e68_exception_address($c, $39, 0, 0); //@line 37456
  STACKTOP = sp; //@line 37458
  return;
 }
 HEAP16[$9 >> 1] = $32; //@line 37461
 $48 = $39 & 16777215; //@line 37462
 $49 = $48 + 1 | 0; //@line 37463
 do {
  if ($49 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
   $53 = HEAP32[$c + 32 >> 2] | 0; //@line 37470
   HEAP16[$7 >> 1] = HEAPU8[$53 + $48 | 0] << 8 | HEAPU8[$53 + $49 | 0]; //@line 37479
  } else {
   $66 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $48) | 0; //@line 37486
   $phitmp = (HEAP8[$33] | 0) == 0; //@line 37488
   HEAP16[$7 >> 1] = $66; //@line 37489
   if ($phitmp) {
    break;
   }
   _e68_exception_bus($c); //@line 37494
   STACKTOP = sp; //@line 37496
   return;
  }
 } while (0);
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 37502
 HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 37505
 $77 = HEAPU16[$9 >> 1] | ($43 & 65535) << 16; //@line 37510
 $81 = HEAP16[$c + 160 >> 1] & 63; //@line 37514
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($81 << 2) >> 2] & 127]($c, $81, 509, 32) | 0) != 0) {
  STACKTOP = sp; //@line 37521
  return;
 }
 if ((_e68_ea_get_val32($c, $s2) | 0) != 0) {
  STACKTOP = sp; //@line 37528
  return;
 }
 $90 = HEAP32[$s2 >> 2] | 0; //@line 37531
 $91 = $90 - $77 | 0; //@line 37532
 $92 = $c + 372 | 0; //@line 37533
 HEAP32[$92 >> 2] = (HEAP32[$92 >> 2] | 0) + 16; //@line 37536
 _e68_cc_set_sub_32($c, $91, $77, $90); //@line 37537
 $95 = HEAP32[$1 >> 2] | 0; //@line 37538
 if (($95 & 1 | 0) != 0) {
  _e68_exception_address($c, $95, 0, 0); //@line 37543
  STACKTOP = sp; //@line 37545
  return;
 }
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 37549
 $101 = $95 & 16777215; //@line 37550
 $102 = $101 + 1 | 0; //@line 37551
 if ($102 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $107 = HEAP32[$c + 32 >> 2] | 0; //@line 37557
  $_0_i_i18 = HEAPU8[$107 + $101 | 0] << 8 | HEAPU8[$107 + $102 | 0]; //@line 37567
 } else {
  $_0_i_i18 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $101) | 0; //@line 37575
 }
 HEAP16[$7 >> 1] = $_0_i_i18; //@line 37578
 if ((HEAP8[$33] | 0) == 0) {
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 37585
  HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 37588
  _e68_ea_set_val32($c, $91) | 0; //@line 37589
  STACKTOP = sp; //@line 37591
  return;
 } else {
  _e68_exception_bus($c); //@line 37594
  STACKTOP = sp; //@line 37596
  return;
 }
}
function _op0600($c) {
 $c = $c | 0;
 var $s2 = 0, $1 = 0, $2 = 0, $7 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $17 = 0, $_0_i_i = 0, $32 = 0, $39 = 0, $43 = 0, $47 = 0, $56 = 0, $57 = 0, $58 = 0, $61 = 0, $67 = 0, $68 = 0, $73 = 0, $_0_i_i11 = 0, sp = 0;
 sp = STACKTOP; //@line 37616
 STACKTOP = STACKTOP + 8 | 0; //@line 37616
 $s2 = sp | 0; //@line 37617
 $1 = $c + 156 | 0; //@line 37618
 $2 = HEAP32[$1 >> 2] | 0; //@line 37619
 if (($2 & 1 | 0) != 0) {
  _e68_exception_address($c, $2, 0, 0); //@line 37624
  STACKTOP = sp; //@line 37626
  return;
 }
 $7 = $c + 164 | 0; //@line 37629
 $9 = $c + 162 | 0; //@line 37631
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 37632
 $10 = $2 & 16777215; //@line 37633
 $11 = $10 + 1 | 0; //@line 37634
 $12 = $c + 36 | 0; //@line 37635
 if ($11 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $17 = HEAP32[$c + 32 >> 2] | 0; //@line 37641
  $_0_i_i = HEAPU8[$17 + $10 | 0] << 8 | HEAPU8[$17 + $11 | 0]; //@line 37651
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $10) | 0; //@line 37659
 }
 HEAP16[$7 >> 1] = $_0_i_i; //@line 37662
 $32 = $c + 336 | 0; //@line 37663
 if ((HEAP8[$32] | 0) != 0) {
  _e68_exception_bus($c); //@line 37668
  STACKTOP = sp; //@line 37670
  return;
 }
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 37675
 $39 = $c + 152 | 0; //@line 37676
 HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 2; //@line 37679
 $43 = HEAP16[$9 >> 1] & 255; //@line 37681
 $47 = HEAP16[$c + 160 >> 1] & 63; //@line 37685
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($47 << 2) >> 2] & 127]($c, $47, 509, 8) | 0) != 0) {
  STACKTOP = sp; //@line 37692
  return;
 }
 if ((_e68_ea_get_val8($c, $s2) | 0) != 0) {
  STACKTOP = sp; //@line 37699
  return;
 }
 $56 = HEAP8[$s2] | 0; //@line 37702
 $57 = $56 + $43 & 255; //@line 37703
 $58 = $c + 372 | 0; //@line 37704
 HEAP32[$58 >> 2] = (HEAP32[$58 >> 2] | 0) + 8; //@line 37707
 _e68_cc_set_add_8($c, $57, $43, $56); //@line 37708
 $61 = HEAP32[$1 >> 2] | 0; //@line 37709
 if (($61 & 1 | 0) != 0) {
  _e68_exception_address($c, $61, 0, 0); //@line 37714
  STACKTOP = sp; //@line 37716
  return;
 }
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 37720
 $67 = $61 & 16777215; //@line 37721
 $68 = $67 + 1 | 0; //@line 37722
 if ($68 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $73 = HEAP32[$c + 32 >> 2] | 0; //@line 37728
  $_0_i_i11 = HEAPU8[$73 + $67 | 0] << 8 | HEAPU8[$73 + $68 | 0]; //@line 37738
 } else {
  $_0_i_i11 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $67) | 0; //@line 37746
 }
 HEAP16[$7 >> 1] = $_0_i_i11; //@line 37749
 if ((HEAP8[$32] | 0) == 0) {
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 37756
  HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 2; //@line 37759
  _e68_ea_set_val8($c, $57) | 0; //@line 37760
  STACKTOP = sp; //@line 37762
  return;
 } else {
  _e68_exception_bus($c); //@line 37765
  STACKTOP = sp; //@line 37767
  return;
 }
}
function _op0640($c) {
 $c = $c | 0;
 var $s2 = 0, $1 = 0, $2 = 0, $7 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $17 = 0, $_0_i_i = 0, $32 = 0, $39 = 0, $42 = 0, $46 = 0, $55 = 0, $56 = 0, $57 = 0, $60 = 0, $66 = 0, $67 = 0, $72 = 0, $_0_i_i11 = 0, sp = 0;
 sp = STACKTOP; //@line 37787
 STACKTOP = STACKTOP + 8 | 0; //@line 37787
 $s2 = sp | 0; //@line 37788
 $1 = $c + 156 | 0; //@line 37789
 $2 = HEAP32[$1 >> 2] | 0; //@line 37790
 if (($2 & 1 | 0) != 0) {
  _e68_exception_address($c, $2, 0, 0); //@line 37795
  STACKTOP = sp; //@line 37797
  return;
 }
 $7 = $c + 164 | 0; //@line 37800
 $9 = $c + 162 | 0; //@line 37802
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 37803
 $10 = $2 & 16777215; //@line 37804
 $11 = $10 + 1 | 0; //@line 37805
 $12 = $c + 36 | 0; //@line 37806
 if ($11 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $17 = HEAP32[$c + 32 >> 2] | 0; //@line 37812
  $_0_i_i = HEAPU8[$17 + $10 | 0] << 8 | HEAPU8[$17 + $11 | 0]; //@line 37822
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $10) | 0; //@line 37830
 }
 HEAP16[$7 >> 1] = $_0_i_i; //@line 37833
 $32 = $c + 336 | 0; //@line 37834
 if ((HEAP8[$32] | 0) != 0) {
  _e68_exception_bus($c); //@line 37839
  STACKTOP = sp; //@line 37841
  return;
 }
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 37846
 $39 = $c + 152 | 0; //@line 37847
 HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 2; //@line 37850
 $42 = HEAP16[$9 >> 1] | 0; //@line 37851
 $46 = HEAP16[$c + 160 >> 1] & 63; //@line 37855
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($46 << 2) >> 2] & 127]($c, $46, 509, 16) | 0) != 0) {
  STACKTOP = sp; //@line 37862
  return;
 }
 if ((_e68_ea_get_val16($c, $s2) | 0) != 0) {
  STACKTOP = sp; //@line 37869
  return;
 }
 $55 = HEAP16[$s2 >> 1] | 0; //@line 37872
 $56 = $55 + $42 & 65535; //@line 37873
 $57 = $c + 372 | 0; //@line 37874
 HEAP32[$57 >> 2] = (HEAP32[$57 >> 2] | 0) + 8; //@line 37877
 _e68_cc_set_add_16($c, $56, $42, $55); //@line 37878
 $60 = HEAP32[$1 >> 2] | 0; //@line 37879
 if (($60 & 1 | 0) != 0) {
  _e68_exception_address($c, $60, 0, 0); //@line 37884
  STACKTOP = sp; //@line 37886
  return;
 }
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 37890
 $66 = $60 & 16777215; //@line 37891
 $67 = $66 + 1 | 0; //@line 37892
 if ($67 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $72 = HEAP32[$c + 32 >> 2] | 0; //@line 37898
  $_0_i_i11 = HEAPU8[$72 + $66 | 0] << 8 | HEAPU8[$72 + $67 | 0]; //@line 37908
 } else {
  $_0_i_i11 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $66) | 0; //@line 37916
 }
 HEAP16[$7 >> 1] = $_0_i_i11; //@line 37919
 if ((HEAP8[$32] | 0) == 0) {
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 37926
  HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 2; //@line 37929
  _e68_ea_set_val16($c, $56) | 0; //@line 37930
  STACKTOP = sp; //@line 37932
  return;
 } else {
  _e68_exception_bus($c); //@line 37935
  STACKTOP = sp; //@line 37937
  return;
 }
}
function _op0680($c) {
 $c = $c | 0;
 var $s2 = 0, $1 = 0, $2 = 0, $7 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $17 = 0, $32 = 0, $33 = 0, $39 = 0, $40 = 0, $43 = 0, $48 = 0, $49 = 0, $53 = 0, $66 = 0, $phitmp = 0, $77 = 0, $81 = 0, $90 = 0, $91 = 0, $92 = 0, $95 = 0, $101 = 0, $102 = 0, $107 = 0, $_0_i_i18 = 0, sp = 0;
 sp = STACKTOP; //@line 37961
 STACKTOP = STACKTOP + 8 | 0; //@line 37961
 $s2 = sp | 0; //@line 37962
 $1 = $c + 156 | 0; //@line 37963
 $2 = HEAP32[$1 >> 2] | 0; //@line 37964
 if (($2 & 1 | 0) != 0) {
  _e68_exception_address($c, $2, 0, 0); //@line 37969
  STACKTOP = sp; //@line 37971
  return;
 }
 $7 = $c + 164 | 0; //@line 37974
 $9 = $c + 162 | 0; //@line 37976
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 37977
 $10 = $2 & 16777215; //@line 37978
 $11 = $10 + 1 | 0; //@line 37979
 $12 = $c + 36 | 0; //@line 37980
 if ($11 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $17 = HEAP32[$c + 32 >> 2] | 0; //@line 37986
  $32 = HEAPU8[$17 + $10 | 0] << 8 | HEAPU8[$17 + $11 | 0]; //@line 37996
 } else {
  $32 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $10) | 0; //@line 38004
 }
 HEAP16[$7 >> 1] = $32; //@line 38007
 $33 = $c + 336 | 0; //@line 38008
 if ((HEAP8[$33] | 0) != 0) {
  _e68_exception_bus($c); //@line 38013
  STACKTOP = sp; //@line 38015
  return;
 }
 $39 = (HEAP32[$1 >> 2] | 0) + 2 | 0; //@line 38019
 HEAP32[$1 >> 2] = $39; //@line 38020
 $40 = $c + 152 | 0; //@line 38021
 HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 38024
 $43 = HEAP16[$9 >> 1] | 0; //@line 38025
 if (($39 & 1 | 0) != 0) {
  _e68_exception_address($c, $39, 0, 0); //@line 38030
  STACKTOP = sp; //@line 38032
  return;
 }
 HEAP16[$9 >> 1] = $32; //@line 38035
 $48 = $39 & 16777215; //@line 38036
 $49 = $48 + 1 | 0; //@line 38037
 do {
  if ($49 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
   $53 = HEAP32[$c + 32 >> 2] | 0; //@line 38044
   HEAP16[$7 >> 1] = HEAPU8[$53 + $48 | 0] << 8 | HEAPU8[$53 + $49 | 0]; //@line 38053
  } else {
   $66 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $48) | 0; //@line 38060
   $phitmp = (HEAP8[$33] | 0) == 0; //@line 38062
   HEAP16[$7 >> 1] = $66; //@line 38063
   if ($phitmp) {
    break;
   }
   _e68_exception_bus($c); //@line 38068
   STACKTOP = sp; //@line 38070
   return;
  }
 } while (0);
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 38076
 HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 38079
 $77 = HEAPU16[$9 >> 1] | ($43 & 65535) << 16; //@line 38084
 $81 = HEAP16[$c + 160 >> 1] & 63; //@line 38088
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($81 << 2) >> 2] & 127]($c, $81, 509, 32) | 0) != 0) {
  STACKTOP = sp; //@line 38095
  return;
 }
 if ((_e68_ea_get_val32($c, $s2) | 0) != 0) {
  STACKTOP = sp; //@line 38102
  return;
 }
 $90 = HEAP32[$s2 >> 2] | 0; //@line 38105
 $91 = $90 + $77 | 0; //@line 38106
 $92 = $c + 372 | 0; //@line 38107
 HEAP32[$92 >> 2] = (HEAP32[$92 >> 2] | 0) + 16; //@line 38110
 _e68_cc_set_add_32($c, $91, $77, $90); //@line 38111
 $95 = HEAP32[$1 >> 2] | 0; //@line 38112
 if (($95 & 1 | 0) != 0) {
  _e68_exception_address($c, $95, 0, 0); //@line 38117
  STACKTOP = sp; //@line 38119
  return;
 }
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 38123
 $101 = $95 & 16777215; //@line 38124
 $102 = $101 + 1 | 0; //@line 38125
 if ($102 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $107 = HEAP32[$c + 32 >> 2] | 0; //@line 38131
  $_0_i_i18 = HEAPU8[$107 + $101 | 0] << 8 | HEAPU8[$107 + $102 | 0]; //@line 38141
 } else {
  $_0_i_i18 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $101) | 0; //@line 38149
 }
 HEAP16[$7 >> 1] = $_0_i_i18; //@line 38152
 if ((HEAP8[$33] | 0) == 0) {
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 38159
  HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 38162
  _e68_ea_set_val32($c, $91) | 0; //@line 38163
  STACKTOP = sp; //@line 38165
  return;
 } else {
  _e68_exception_bus($c); //@line 38168
  STACKTOP = sp; //@line 38170
  return;
 }
}
function _op0800($c) {
 $c = $c | 0;
 var $s2 = 0, $1 = 0, $5 = 0, $6 = 0, $8 = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $22 = 0, $37 = 0, $38 = 0, $44 = 0, $45 = 0, $47 = 0, $57 = 0, $58 = 0, $62 = 0, $63 = 0, $70 = 0, $71 = 0, $75 = 0, $88 = 0, $phitmp_i = 0, $91 = 0, $92 = 0, $98 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $108 = 0, $_0_i_i = 0, $123 = 0, $130 = 0, $133 = 0, $136 = 0, $150 = 0, $151 = 0, $155 = 0, $156 = 0, $159 = 0, $165 = 0, $166 = 0, $171 = 0, $_0_i_i9 = 0, sp = 0;
 sp = STACKTOP; //@line 38201
 STACKTOP = STACKTOP + 8 | 0; //@line 38201
 $s2 = sp | 0; //@line 38202
 $1 = $c + 160 | 0; //@line 38203
 $5 = $c + 156 | 0; //@line 38207
 $6 = HEAP32[$5 >> 2] | 0; //@line 38208
 $8 = ($6 & 1 | 0) == 0; //@line 38210
 if ((HEAP16[$1 >> 1] & 56) == 0) {
  if (!$8) {
   _e68_exception_address($c, $6, 0, 0); //@line 38215
   STACKTOP = sp; //@line 38217
   return;
  }
  $12 = $c + 164 | 0; //@line 38220
  $14 = $c + 162 | 0; //@line 38222
  HEAP16[$14 >> 1] = HEAP16[$12 >> 1] | 0; //@line 38223
  $15 = $6 & 16777215; //@line 38224
  $16 = $15 + 1 | 0; //@line 38225
  $17 = $c + 36 | 0; //@line 38226
  if ($16 >>> 0 < (HEAP32[$17 >> 2] | 0) >>> 0) {
   $22 = HEAP32[$c + 32 >> 2] | 0; //@line 38232
   $37 = HEAPU8[$22 + $15 | 0] << 8 | HEAPU8[$22 + $16 | 0]; //@line 38242
  } else {
   $37 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $15) | 0; //@line 38250
  }
  HEAP16[$12 >> 1] = $37; //@line 38253
  $38 = $c + 336 | 0; //@line 38254
  if ((HEAP8[$38] | 0) != 0) {
   _e68_exception_bus($c); //@line 38259
   STACKTOP = sp; //@line 38261
   return;
  }
  $44 = (HEAP32[$5 >> 2] | 0) + 2 | 0; //@line 38265
  HEAP32[$5 >> 2] = $44; //@line 38266
  $45 = $c + 152 | 0; //@line 38267
  $47 = (HEAP32[$45 >> 2] | 0) + 2 | 0; //@line 38269
  HEAP32[$45 >> 2] = $47; //@line 38270
  $57 = 1 << (HEAP16[$14 >> 1] & 31) & HEAP32[$c + 88 + ((HEAP16[$1 >> 1] & 7) << 2) >> 2]; //@line 38280
  $58 = $c + 372 | 0; //@line 38281
  HEAP32[$58 >> 2] = (HEAP32[$58 >> 2] | 0) + 10; //@line 38284
  $62 = $c + 166 | 0; //@line 38286
  $63 = HEAP16[$62 >> 1] | 0; //@line 38287
  HEAP16[$62 >> 1] = ($57 | 0) == 0 ? $63 | 4 : $63 & -5; //@line 38291
  if (($44 & 1 | 0) != 0) {
   _e68_exception_address($c, $44, 0, 0); //@line 38296
   STACKTOP = sp; //@line 38298
   return;
  }
  HEAP16[$14 >> 1] = $37; //@line 38301
  $70 = $44 & 16777215; //@line 38302
  $71 = $70 + 1 | 0; //@line 38303
  do {
   if ($71 >>> 0 < (HEAP32[$17 >> 2] | 0) >>> 0) {
    $75 = HEAP32[$c + 32 >> 2] | 0; //@line 38310
    HEAP16[$12 >> 1] = HEAPU8[$75 + $70 | 0] << 8 | HEAPU8[$75 + $71 | 0]; //@line 38319
    $92 = $44;
    $91 = $47;
   } else {
    $88 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $70) | 0; //@line 38327
    $phitmp_i = (HEAP8[$38] | 0) == 0; //@line 38329
    HEAP16[$12 >> 1] = $88; //@line 38330
    if ($phitmp_i) {
     $92 = HEAP32[$5 >> 2] | 0;
     $91 = HEAP32[$45 >> 2] | 0;
     break;
    }
    _e68_exception_bus($c); //@line 38339
    STACKTOP = sp; //@line 38341
    return;
   }
  } while (0);
  HEAP32[$5 >> 2] = $92 + 2; //@line 38348
  HEAP32[$45 >> 2] = $91 + 2; //@line 38350
  STACKTOP = sp; //@line 38352
  return;
 }
 if (!$8) {
  _e68_exception_address($c, $6, 0, 0); //@line 38357
  STACKTOP = sp; //@line 38359
  return;
 }
 $98 = $c + 164 | 0; //@line 38362
 $100 = $c + 162 | 0; //@line 38364
 HEAP16[$100 >> 1] = HEAP16[$98 >> 1] | 0; //@line 38365
 $101 = $6 & 16777215; //@line 38366
 $102 = $101 + 1 | 0; //@line 38367
 $103 = $c + 36 | 0; //@line 38368
 if ($102 >>> 0 < (HEAP32[$103 >> 2] | 0) >>> 0) {
  $108 = HEAP32[$c + 32 >> 2] | 0; //@line 38374
  $_0_i_i = HEAPU8[$108 + $101 | 0] << 8 | HEAPU8[$108 + $102 | 0]; //@line 38384
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $101) | 0; //@line 38392
 }
 HEAP16[$98 >> 1] = $_0_i_i; //@line 38395
 $123 = $c + 336 | 0; //@line 38396
 if ((HEAP8[$123] | 0) != 0) {
  _e68_exception_bus($c); //@line 38401
  STACKTOP = sp; //@line 38403
  return;
 }
 HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 2; //@line 38408
 $130 = $c + 152 | 0; //@line 38409
 HEAP32[$130 >> 2] = (HEAP32[$130 >> 2] | 0) + 2; //@line 38412
 $133 = HEAP16[$100 >> 1] | 0; //@line 38413
 $136 = HEAP16[$1 >> 1] & 63; //@line 38416
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($136 << 2) >> 2] & 127]($c, $136, 2044, 8) | 0) != 0) {
  STACKTOP = sp; //@line 38423
  return;
 }
 if ((_e68_ea_get_val8($c, $s2) | 0) != 0) {
  STACKTOP = sp; //@line 38430
  return;
 }
 $150 = HEAPU8[$s2] & 1 << ($133 & 7); //@line 38438
 $151 = $c + 372 | 0; //@line 38439
 HEAP32[$151 >> 2] = (HEAP32[$151 >> 2] | 0) + 8; //@line 38442
 $155 = $c + 166 | 0; //@line 38444
 $156 = HEAP16[$155 >> 1] | 0; //@line 38445
 HEAP16[$155 >> 1] = ($150 | 0) == 0 ? $156 | 4 : $156 & -5; //@line 38449
 $159 = HEAP32[$5 >> 2] | 0; //@line 38450
 if (($159 & 1 | 0) != 0) {
  _e68_exception_address($c, $159, 0, 0); //@line 38455
  STACKTOP = sp; //@line 38457
  return;
 }
 HEAP16[$100 >> 1] = HEAP16[$98 >> 1] | 0; //@line 38461
 $165 = $159 & 16777215; //@line 38462
 $166 = $165 + 1 | 0; //@line 38463
 if ($166 >>> 0 < (HEAP32[$103 >> 2] | 0) >>> 0) {
  $171 = HEAP32[$c + 32 >> 2] | 0; //@line 38469
  $_0_i_i9 = HEAPU8[$171 + $165 | 0] << 8 | HEAPU8[$171 + $166 | 0]; //@line 38479
 } else {
  $_0_i_i9 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $165) | 0; //@line 38487
 }
 HEAP16[$98 >> 1] = $_0_i_i9; //@line 38490
 if ((HEAP8[$123] | 0) == 0) {
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 2; //@line 38497
  HEAP32[$130 >> 2] = (HEAP32[$130 >> 2] | 0) + 2; //@line 38500
  STACKTOP = sp; //@line 38502
  return;
 } else {
  _e68_exception_bus($c); //@line 38505
  STACKTOP = sp; //@line 38507
  return;
 }
}
function _op0840($c) {
 $c = $c | 0;
 var $s = 0, $1 = 0, $5 = 0, $6 = 0, $8 = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $22 = 0, $37 = 0, $38 = 0, $44 = 0, $45 = 0, $47 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $63 = 0, $64 = 0, $71 = 0, $72 = 0, $76 = 0, $89 = 0, $phitmp_i = 0, $92 = 0, $93 = 0, $99 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $109 = 0, $_0_i_i = 0, $124 = 0, $131 = 0, $136 = 0, $139 = 0, $148 = 0, $150 = 0, $153 = 0, $158 = 0, $159 = 0, $162 = 0, $168 = 0, $169 = 0, $174 = 0, $_0_i_i11 = 0, sp = 0;
 sp = STACKTOP; //@line 38539
 STACKTOP = STACKTOP + 8 | 0; //@line 38539
 $s = sp | 0; //@line 38540
 $1 = $c + 160 | 0; //@line 38541
 $5 = $c + 156 | 0; //@line 38545
 $6 = HEAP32[$5 >> 2] | 0; //@line 38546
 $8 = ($6 & 1 | 0) == 0; //@line 38548
 if ((HEAP16[$1 >> 1] & 56) == 0) {
  if (!$8) {
   _e68_exception_address($c, $6, 0, 0); //@line 38553
   STACKTOP = sp; //@line 38555
   return;
  }
  $12 = $c + 164 | 0; //@line 38558
  $14 = $c + 162 | 0; //@line 38560
  HEAP16[$14 >> 1] = HEAP16[$12 >> 1] | 0; //@line 38561
  $15 = $6 & 16777215; //@line 38562
  $16 = $15 + 1 | 0; //@line 38563
  $17 = $c + 36 | 0; //@line 38564
  if ($16 >>> 0 < (HEAP32[$17 >> 2] | 0) >>> 0) {
   $22 = HEAP32[$c + 32 >> 2] | 0; //@line 38570
   $37 = HEAPU8[$22 + $15 | 0] << 8 | HEAPU8[$22 + $16 | 0]; //@line 38580
  } else {
   $37 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $15) | 0; //@line 38588
  }
  HEAP16[$12 >> 1] = $37; //@line 38591
  $38 = $c + 336 | 0; //@line 38592
  if ((HEAP8[$38] | 0) != 0) {
   _e68_exception_bus($c); //@line 38597
   STACKTOP = sp; //@line 38599
   return;
  }
  $44 = (HEAP32[$5 >> 2] | 0) + 2 | 0; //@line 38603
  HEAP32[$5 >> 2] = $44; //@line 38604
  $45 = $c + 152 | 0; //@line 38605
  $47 = (HEAP32[$45 >> 2] | 0) + 2 | 0; //@line 38607
  HEAP32[$45 >> 2] = $47; //@line 38608
  $54 = $c + 88 + ((HEAP16[$1 >> 1] & 7) << 2) | 0; //@line 38615
  $55 = HEAP32[$54 >> 2] | 0; //@line 38616
  $56 = 1 << (HEAP16[$14 >> 1] & 31); //@line 38617
  $57 = $56 ^ $55; //@line 38618
  $58 = $c + 372 | 0; //@line 38619
  HEAP32[$58 >> 2] = (HEAP32[$58 >> 2] | 0) + 12; //@line 38622
  $63 = $c + 166 | 0; //@line 38625
  $64 = HEAP16[$63 >> 1] | 0; //@line 38626
  HEAP16[$63 >> 1] = ($56 & $55 | 0) == 0 ? $64 | 4 : $64 & -5; //@line 38630
  if (($44 & 1 | 0) != 0) {
   _e68_exception_address($c, $44, 0, 0); //@line 38635
   STACKTOP = sp; //@line 38637
   return;
  }
  HEAP16[$14 >> 1] = $37; //@line 38640
  $71 = $44 & 16777215; //@line 38641
  $72 = $71 + 1 | 0; //@line 38642
  do {
   if ($72 >>> 0 < (HEAP32[$17 >> 2] | 0) >>> 0) {
    $76 = HEAP32[$c + 32 >> 2] | 0; //@line 38649
    HEAP16[$12 >> 1] = HEAPU8[$76 + $71 | 0] << 8 | HEAPU8[$76 + $72 | 0]; //@line 38658
    $93 = $44;
    $92 = $47;
   } else {
    $89 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $71) | 0; //@line 38666
    $phitmp_i = (HEAP8[$38] | 0) == 0; //@line 38668
    HEAP16[$12 >> 1] = $89; //@line 38669
    if ($phitmp_i) {
     $93 = HEAP32[$5 >> 2] | 0;
     $92 = HEAP32[$45 >> 2] | 0;
     break;
    }
    _e68_exception_bus($c); //@line 38678
    STACKTOP = sp; //@line 38680
    return;
   }
  } while (0);
  HEAP32[$5 >> 2] = $93 + 2; //@line 38687
  HEAP32[$45 >> 2] = $92 + 2; //@line 38689
  HEAP32[$54 >> 2] = $57; //@line 38690
  STACKTOP = sp; //@line 38692
  return;
 }
 if (!$8) {
  _e68_exception_address($c, $6, 0, 0); //@line 38697
  STACKTOP = sp; //@line 38699
  return;
 }
 $99 = $c + 164 | 0; //@line 38702
 $101 = $c + 162 | 0; //@line 38704
 HEAP16[$101 >> 1] = HEAP16[$99 >> 1] | 0; //@line 38705
 $102 = $6 & 16777215; //@line 38706
 $103 = $102 + 1 | 0; //@line 38707
 $104 = $c + 36 | 0; //@line 38708
 if ($103 >>> 0 < (HEAP32[$104 >> 2] | 0) >>> 0) {
  $109 = HEAP32[$c + 32 >> 2] | 0; //@line 38714
  $_0_i_i = HEAPU8[$109 + $102 | 0] << 8 | HEAPU8[$109 + $103 | 0]; //@line 38724
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $102) | 0; //@line 38732
 }
 HEAP16[$99 >> 1] = $_0_i_i; //@line 38735
 $124 = $c + 336 | 0; //@line 38736
 if ((HEAP8[$124] | 0) != 0) {
  _e68_exception_bus($c); //@line 38741
  STACKTOP = sp; //@line 38743
  return;
 }
 HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 2; //@line 38748
 $131 = $c + 152 | 0; //@line 38749
 HEAP32[$131 >> 2] = (HEAP32[$131 >> 2] | 0) + 2; //@line 38752
 $136 = HEAP16[$101 >> 1] & 7; //@line 38755
 $139 = HEAP16[$1 >> 1] & 63; //@line 38758
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($139 << 2) >> 2] & 127]($c, $139, 508, 8) | 0) != 0) {
  STACKTOP = sp; //@line 38765
  return;
 }
 if ((_e68_ea_get_val8($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 38772
  return;
 }
 $148 = 1 << $136; //@line 38775
 $150 = HEAPU8[$s] | 0; //@line 38777
 $153 = $c + 372 | 0; //@line 38780
 HEAP32[$153 >> 2] = (HEAP32[$153 >> 2] | 0) + 12; //@line 38783
 $158 = $c + 166 | 0; //@line 38786
 $159 = HEAP16[$158 >> 1] | 0; //@line 38787
 HEAP16[$158 >> 1] = ($148 & $150 | 0) == 0 ? $159 | 4 : $159 & -5; //@line 38791
 $162 = HEAP32[$5 >> 2] | 0; //@line 38792
 if (($162 & 1 | 0) != 0) {
  _e68_exception_address($c, $162, 0, 0); //@line 38797
  STACKTOP = sp; //@line 38799
  return;
 }
 HEAP16[$101 >> 1] = HEAP16[$99 >> 1] | 0; //@line 38803
 $168 = $162 & 16777215; //@line 38804
 $169 = $168 + 1 | 0; //@line 38805
 if ($169 >>> 0 < (HEAP32[$104 >> 2] | 0) >>> 0) {
  $174 = HEAP32[$c + 32 >> 2] | 0; //@line 38811
  $_0_i_i11 = HEAPU8[$174 + $168 | 0] << 8 | HEAPU8[$174 + $169 | 0]; //@line 38821
 } else {
  $_0_i_i11 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $168) | 0; //@line 38829
 }
 HEAP16[$99 >> 1] = $_0_i_i11; //@line 38832
 if ((HEAP8[$124] | 0) == 0) {
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 2; //@line 38839
  HEAP32[$131 >> 2] = (HEAP32[$131 >> 2] | 0) + 2; //@line 38842
  _e68_ea_set_val8($c, ($150 ^ $148) & 255) | 0; //@line 38843
  STACKTOP = sp; //@line 38845
  return;
 } else {
  _e68_exception_bus($c); //@line 38848
  STACKTOP = sp; //@line 38850
  return;
 }
}
function _op0880($c) {
 $c = $c | 0;
 var $s = 0, $1 = 0, $5 = 0, $6 = 0, $8 = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $22 = 0, $37 = 0, $38 = 0, $44 = 0, $45 = 0, $47 = 0, $54 = 0, $55 = 0, $56 = 0, $58 = 0, $59 = 0, $64 = 0, $65 = 0, $72 = 0, $73 = 0, $77 = 0, $90 = 0, $phitmp_i = 0, $93 = 0, $94 = 0, $100 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $110 = 0, $_0_i_i = 0, $125 = 0, $132 = 0, $137 = 0, $140 = 0, $149 = 0, $151 = 0, $155 = 0, $160 = 0, $161 = 0, $164 = 0, $170 = 0, $171 = 0, $176 = 0, $_0_i_i11 = 0, sp = 0;
 sp = STACKTOP; //@line 38882
 STACKTOP = STACKTOP + 8 | 0; //@line 38882
 $s = sp | 0; //@line 38883
 $1 = $c + 160 | 0; //@line 38884
 $5 = $c + 156 | 0; //@line 38888
 $6 = HEAP32[$5 >> 2] | 0; //@line 38889
 $8 = ($6 & 1 | 0) == 0; //@line 38891
 if ((HEAP16[$1 >> 1] & 56) == 0) {
  if (!$8) {
   _e68_exception_address($c, $6, 0, 0); //@line 38896
   STACKTOP = sp; //@line 38898
   return;
  }
  $12 = $c + 164 | 0; //@line 38901
  $14 = $c + 162 | 0; //@line 38903
  HEAP16[$14 >> 1] = HEAP16[$12 >> 1] | 0; //@line 38904
  $15 = $6 & 16777215; //@line 38905
  $16 = $15 + 1 | 0; //@line 38906
  $17 = $c + 36 | 0; //@line 38907
  if ($16 >>> 0 < (HEAP32[$17 >> 2] | 0) >>> 0) {
   $22 = HEAP32[$c + 32 >> 2] | 0; //@line 38913
   $37 = HEAPU8[$22 + $15 | 0] << 8 | HEAPU8[$22 + $16 | 0]; //@line 38923
  } else {
   $37 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $15) | 0; //@line 38931
  }
  HEAP16[$12 >> 1] = $37; //@line 38934
  $38 = $c + 336 | 0; //@line 38935
  if ((HEAP8[$38] | 0) != 0) {
   _e68_exception_bus($c); //@line 38940
   STACKTOP = sp; //@line 38942
   return;
  }
  $44 = (HEAP32[$5 >> 2] | 0) + 2 | 0; //@line 38946
  HEAP32[$5 >> 2] = $44; //@line 38947
  $45 = $c + 152 | 0; //@line 38948
  $47 = (HEAP32[$45 >> 2] | 0) + 2 | 0; //@line 38950
  HEAP32[$45 >> 2] = $47; //@line 38951
  $54 = $c + 88 + ((HEAP16[$1 >> 1] & 7) << 2) | 0; //@line 38958
  $55 = HEAP32[$54 >> 2] | 0; //@line 38959
  $56 = 1 << (HEAP16[$14 >> 1] & 31); //@line 38960
  $58 = $55 & ~$56; //@line 38962
  $59 = $c + 372 | 0; //@line 38963
  HEAP32[$59 >> 2] = (HEAP32[$59 >> 2] | 0) + 14; //@line 38966
  $64 = $c + 166 | 0; //@line 38969
  $65 = HEAP16[$64 >> 1] | 0; //@line 38970
  HEAP16[$64 >> 1] = ($56 & $55 | 0) == 0 ? $65 | 4 : $65 & -5; //@line 38974
  if (($44 & 1 | 0) != 0) {
   _e68_exception_address($c, $44, 0, 0); //@line 38979
   STACKTOP = sp; //@line 38981
   return;
  }
  HEAP16[$14 >> 1] = $37; //@line 38984
  $72 = $44 & 16777215; //@line 38985
  $73 = $72 + 1 | 0; //@line 38986
  do {
   if ($73 >>> 0 < (HEAP32[$17 >> 2] | 0) >>> 0) {
    $77 = HEAP32[$c + 32 >> 2] | 0; //@line 38993
    HEAP16[$12 >> 1] = HEAPU8[$77 + $72 | 0] << 8 | HEAPU8[$77 + $73 | 0]; //@line 39002
    $94 = $44;
    $93 = $47;
   } else {
    $90 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $72) | 0; //@line 39010
    $phitmp_i = (HEAP8[$38] | 0) == 0; //@line 39012
    HEAP16[$12 >> 1] = $90; //@line 39013
    if ($phitmp_i) {
     $94 = HEAP32[$5 >> 2] | 0;
     $93 = HEAP32[$45 >> 2] | 0;
     break;
    }
    _e68_exception_bus($c); //@line 39022
    STACKTOP = sp; //@line 39024
    return;
   }
  } while (0);
  HEAP32[$5 >> 2] = $94 + 2; //@line 39031
  HEAP32[$45 >> 2] = $93 + 2; //@line 39033
  HEAP32[$54 >> 2] = $58; //@line 39034
  STACKTOP = sp; //@line 39036
  return;
 }
 if (!$8) {
  _e68_exception_address($c, $6, 0, 0); //@line 39041
  STACKTOP = sp; //@line 39043
  return;
 }
 $100 = $c + 164 | 0; //@line 39046
 $102 = $c + 162 | 0; //@line 39048
 HEAP16[$102 >> 1] = HEAP16[$100 >> 1] | 0; //@line 39049
 $103 = $6 & 16777215; //@line 39050
 $104 = $103 + 1 | 0; //@line 39051
 $105 = $c + 36 | 0; //@line 39052
 if ($104 >>> 0 < (HEAP32[$105 >> 2] | 0) >>> 0) {
  $110 = HEAP32[$c + 32 >> 2] | 0; //@line 39058
  $_0_i_i = HEAPU8[$110 + $103 | 0] << 8 | HEAPU8[$110 + $104 | 0]; //@line 39068
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $103) | 0; //@line 39076
 }
 HEAP16[$100 >> 1] = $_0_i_i; //@line 39079
 $125 = $c + 336 | 0; //@line 39080
 if ((HEAP8[$125] | 0) != 0) {
  _e68_exception_bus($c); //@line 39085
  STACKTOP = sp; //@line 39087
  return;
 }
 HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 2; //@line 39092
 $132 = $c + 152 | 0; //@line 39093
 HEAP32[$132 >> 2] = (HEAP32[$132 >> 2] | 0) + 2; //@line 39096
 $137 = HEAP16[$102 >> 1] & 7; //@line 39099
 $140 = HEAP16[$1 >> 1] & 63; //@line 39102
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($140 << 2) >> 2] & 127]($c, $140, 508, 8) | 0) != 0) {
  STACKTOP = sp; //@line 39109
  return;
 }
 if ((_e68_ea_get_val8($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 39116
  return;
 }
 $149 = 1 << $137; //@line 39119
 $151 = HEAPU8[$s] | 0; //@line 39121
 $155 = $c + 372 | 0; //@line 39125
 HEAP32[$155 >> 2] = (HEAP32[$155 >> 2] | 0) + 12; //@line 39128
 $160 = $c + 166 | 0; //@line 39131
 $161 = HEAP16[$160 >> 1] | 0; //@line 39132
 HEAP16[$160 >> 1] = ($149 & $151 | 0) == 0 ? $161 | 4 : $161 & -5; //@line 39136
 $164 = HEAP32[$5 >> 2] | 0; //@line 39137
 if (($164 & 1 | 0) != 0) {
  _e68_exception_address($c, $164, 0, 0); //@line 39142
  STACKTOP = sp; //@line 39144
  return;
 }
 HEAP16[$102 >> 1] = HEAP16[$100 >> 1] | 0; //@line 39148
 $170 = $164 & 16777215; //@line 39149
 $171 = $170 + 1 | 0; //@line 39150
 if ($171 >>> 0 < (HEAP32[$105 >> 2] | 0) >>> 0) {
  $176 = HEAP32[$c + 32 >> 2] | 0; //@line 39156
  $_0_i_i11 = HEAPU8[$176 + $170 | 0] << 8 | HEAPU8[$176 + $171 | 0]; //@line 39166
 } else {
  $_0_i_i11 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $170) | 0; //@line 39174
 }
 HEAP16[$100 >> 1] = $_0_i_i11; //@line 39177
 if ((HEAP8[$125] | 0) == 0) {
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 2; //@line 39184
  HEAP32[$132 >> 2] = (HEAP32[$132 >> 2] | 0) + 2; //@line 39187
  _e68_ea_set_val8($c, $151 & ($149 ^ 255) & 255) | 0; //@line 39188
  STACKTOP = sp; //@line 39190
  return;
 } else {
  _e68_exception_bus($c); //@line 39193
  STACKTOP = sp; //@line 39195
  return;
 }
}
function _op08c0($c) {
 $c = $c | 0;
 var $s = 0, $1 = 0, $5 = 0, $6 = 0, $8 = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $22 = 0, $37 = 0, $38 = 0, $44 = 0, $45 = 0, $47 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $63 = 0, $64 = 0, $71 = 0, $72 = 0, $76 = 0, $89 = 0, $phitmp_i = 0, $92 = 0, $93 = 0, $99 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $109 = 0, $_0_i_i = 0, $124 = 0, $131 = 0, $136 = 0, $139 = 0, $148 = 0, $150 = 0, $153 = 0, $158 = 0, $159 = 0, $162 = 0, $168 = 0, $169 = 0, $174 = 0, $_0_i_i11 = 0, sp = 0;
 sp = STACKTOP; //@line 39227
 STACKTOP = STACKTOP + 8 | 0; //@line 39227
 $s = sp | 0; //@line 39228
 $1 = $c + 160 | 0; //@line 39229
 $5 = $c + 156 | 0; //@line 39233
 $6 = HEAP32[$5 >> 2] | 0; //@line 39234
 $8 = ($6 & 1 | 0) == 0; //@line 39236
 if ((HEAP16[$1 >> 1] & 56) == 0) {
  if (!$8) {
   _e68_exception_address($c, $6, 0, 0); //@line 39241
   STACKTOP = sp; //@line 39243
   return;
  }
  $12 = $c + 164 | 0; //@line 39246
  $14 = $c + 162 | 0; //@line 39248
  HEAP16[$14 >> 1] = HEAP16[$12 >> 1] | 0; //@line 39249
  $15 = $6 & 16777215; //@line 39250
  $16 = $15 + 1 | 0; //@line 39251
  $17 = $c + 36 | 0; //@line 39252
  if ($16 >>> 0 < (HEAP32[$17 >> 2] | 0) >>> 0) {
   $22 = HEAP32[$c + 32 >> 2] | 0; //@line 39258
   $37 = HEAPU8[$22 + $15 | 0] << 8 | HEAPU8[$22 + $16 | 0]; //@line 39268
  } else {
   $37 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $15) | 0; //@line 39276
  }
  HEAP16[$12 >> 1] = $37; //@line 39279
  $38 = $c + 336 | 0; //@line 39280
  if ((HEAP8[$38] | 0) != 0) {
   _e68_exception_bus($c); //@line 39285
   STACKTOP = sp; //@line 39287
   return;
  }
  $44 = (HEAP32[$5 >> 2] | 0) + 2 | 0; //@line 39291
  HEAP32[$5 >> 2] = $44; //@line 39292
  $45 = $c + 152 | 0; //@line 39293
  $47 = (HEAP32[$45 >> 2] | 0) + 2 | 0; //@line 39295
  HEAP32[$45 >> 2] = $47; //@line 39296
  $54 = $c + 88 + ((HEAP16[$1 >> 1] & 7) << 2) | 0; //@line 39303
  $55 = HEAP32[$54 >> 2] | 0; //@line 39304
  $56 = 1 << (HEAP16[$14 >> 1] & 31); //@line 39305
  $57 = $56 | $55; //@line 39306
  $58 = $c + 372 | 0; //@line 39307
  HEAP32[$58 >> 2] = (HEAP32[$58 >> 2] | 0) + 12; //@line 39310
  $63 = $c + 166 | 0; //@line 39313
  $64 = HEAP16[$63 >> 1] | 0; //@line 39314
  HEAP16[$63 >> 1] = ($56 & $55 | 0) == 0 ? $64 | 4 : $64 & -5; //@line 39318
  if (($44 & 1 | 0) != 0) {
   _e68_exception_address($c, $44, 0, 0); //@line 39323
   STACKTOP = sp; //@line 39325
   return;
  }
  HEAP16[$14 >> 1] = $37; //@line 39328
  $71 = $44 & 16777215; //@line 39329
  $72 = $71 + 1 | 0; //@line 39330
  do {
   if ($72 >>> 0 < (HEAP32[$17 >> 2] | 0) >>> 0) {
    $76 = HEAP32[$c + 32 >> 2] | 0; //@line 39337
    HEAP16[$12 >> 1] = HEAPU8[$76 + $71 | 0] << 8 | HEAPU8[$76 + $72 | 0]; //@line 39346
    $93 = $44;
    $92 = $47;
   } else {
    $89 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $71) | 0; //@line 39354
    $phitmp_i = (HEAP8[$38] | 0) == 0; //@line 39356
    HEAP16[$12 >> 1] = $89; //@line 39357
    if ($phitmp_i) {
     $93 = HEAP32[$5 >> 2] | 0;
     $92 = HEAP32[$45 >> 2] | 0;
     break;
    }
    _e68_exception_bus($c); //@line 39366
    STACKTOP = sp; //@line 39368
    return;
   }
  } while (0);
  HEAP32[$5 >> 2] = $93 + 2; //@line 39375
  HEAP32[$45 >> 2] = $92 + 2; //@line 39377
  HEAP32[$54 >> 2] = $57; //@line 39378
  STACKTOP = sp; //@line 39380
  return;
 }
 if (!$8) {
  _e68_exception_address($c, $6, 0, 0); //@line 39385
  STACKTOP = sp; //@line 39387
  return;
 }
 $99 = $c + 164 | 0; //@line 39390
 $101 = $c + 162 | 0; //@line 39392
 HEAP16[$101 >> 1] = HEAP16[$99 >> 1] | 0; //@line 39393
 $102 = $6 & 16777215; //@line 39394
 $103 = $102 + 1 | 0; //@line 39395
 $104 = $c + 36 | 0; //@line 39396
 if ($103 >>> 0 < (HEAP32[$104 >> 2] | 0) >>> 0) {
  $109 = HEAP32[$c + 32 >> 2] | 0; //@line 39402
  $_0_i_i = HEAPU8[$109 + $102 | 0] << 8 | HEAPU8[$109 + $103 | 0]; //@line 39412
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $102) | 0; //@line 39420
 }
 HEAP16[$99 >> 1] = $_0_i_i; //@line 39423
 $124 = $c + 336 | 0; //@line 39424
 if ((HEAP8[$124] | 0) != 0) {
  _e68_exception_bus($c); //@line 39429
  STACKTOP = sp; //@line 39431
  return;
 }
 HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 2; //@line 39436
 $131 = $c + 152 | 0; //@line 39437
 HEAP32[$131 >> 2] = (HEAP32[$131 >> 2] | 0) + 2; //@line 39440
 $136 = HEAP16[$101 >> 1] & 7; //@line 39443
 $139 = HEAP16[$1 >> 1] & 63; //@line 39446
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($139 << 2) >> 2] & 127]($c, $139, 508, 8) | 0) != 0) {
  STACKTOP = sp; //@line 39453
  return;
 }
 if ((_e68_ea_get_val8($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 39460
  return;
 }
 $148 = 1 << $136; //@line 39463
 $150 = HEAPU8[$s] | 0; //@line 39465
 $153 = $c + 372 | 0; //@line 39468
 HEAP32[$153 >> 2] = (HEAP32[$153 >> 2] | 0) + 12; //@line 39471
 $158 = $c + 166 | 0; //@line 39474
 $159 = HEAP16[$158 >> 1] | 0; //@line 39475
 HEAP16[$158 >> 1] = ($148 & $150 | 0) == 0 ? $159 | 4 : $159 & -5; //@line 39479
 $162 = HEAP32[$5 >> 2] | 0; //@line 39480
 if (($162 & 1 | 0) != 0) {
  _e68_exception_address($c, $162, 0, 0); //@line 39485
  STACKTOP = sp; //@line 39487
  return;
 }
 HEAP16[$101 >> 1] = HEAP16[$99 >> 1] | 0; //@line 39491
 $168 = $162 & 16777215; //@line 39492
 $169 = $168 + 1 | 0; //@line 39493
 if ($169 >>> 0 < (HEAP32[$104 >> 2] | 0) >>> 0) {
  $174 = HEAP32[$c + 32 >> 2] | 0; //@line 39499
  $_0_i_i11 = HEAPU8[$174 + $168 | 0] << 8 | HEAPU8[$174 + $169 | 0]; //@line 39509
 } else {
  $_0_i_i11 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $168) | 0; //@line 39517
 }
 HEAP16[$99 >> 1] = $_0_i_i11; //@line 39520
 if ((HEAP8[$124] | 0) == 0) {
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 2; //@line 39527
  HEAP32[$131 >> 2] = (HEAP32[$131 >> 2] | 0) + 2; //@line 39530
  _e68_ea_set_val8($c, ($150 | $148) & 255) | 0; //@line 39531
  STACKTOP = sp; //@line 39533
  return;
 } else {
  _e68_exception_bus($c); //@line 39536
  STACKTOP = sp; //@line 39538
  return;
 }
}
function _op0a00($c) {
 $c = $c | 0;
 var $s2 = 0, $1 = 0, $2 = 0, $7 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $17 = 0, $32 = 0, $33 = 0, $39 = 0, $40 = 0, $43 = 0, $47 = 0, $50 = 0, $57 = 0, $58 = 0, $62 = 0, $75 = 0, $phitmp = 0, $82 = 0, $83 = 0, $99 = 0, $100 = 0, $103 = 0, $109 = 0, $110 = 0, $115 = 0, $_0_i_i20 = 0, sp = 0;
 sp = STACKTOP; //@line 39563
 STACKTOP = STACKTOP + 8 | 0; //@line 39563
 $s2 = sp | 0; //@line 39564
 $1 = $c + 156 | 0; //@line 39565
 $2 = HEAP32[$1 >> 2] | 0; //@line 39566
 if (($2 & 1 | 0) != 0) {
  _e68_exception_address($c, $2, 0, 0); //@line 39571
  STACKTOP = sp; //@line 39573
  return;
 }
 $7 = $c + 164 | 0; //@line 39576
 $9 = $c + 162 | 0; //@line 39578
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 39579
 $10 = $2 & 16777215; //@line 39580
 $11 = $10 + 1 | 0; //@line 39581
 $12 = $c + 36 | 0; //@line 39582
 if ($11 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $17 = HEAP32[$c + 32 >> 2] | 0; //@line 39588
  $32 = HEAPU8[$17 + $10 | 0] << 8 | HEAPU8[$17 + $11 | 0]; //@line 39598
 } else {
  $32 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $10) | 0; //@line 39606
 }
 HEAP16[$7 >> 1] = $32; //@line 39609
 $33 = $c + 336 | 0; //@line 39610
 if ((HEAP8[$33] | 0) != 0) {
  _e68_exception_bus($c); //@line 39615
  STACKTOP = sp; //@line 39617
  return;
 }
 $39 = (HEAP32[$1 >> 2] | 0) + 2 | 0; //@line 39621
 HEAP32[$1 >> 2] = $39; //@line 39622
 $40 = $c + 152 | 0; //@line 39623
 HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 39626
 $43 = HEAP16[$9 >> 1] | 0; //@line 39627
 $47 = HEAP16[$c + 160 >> 1] & 63; //@line 39631
 if (($47 | 0) == 60) {
  $50 = $c + 372 | 0; //@line 39635
  HEAP32[$50 >> 2] = (HEAP32[$50 >> 2] | 0) + 20; //@line 39638
  if (($39 & 1 | 0) != 0) {
   _e68_exception_address($c, $39, 0, 0); //@line 39643
   STACKTOP = sp; //@line 39645
   return;
  }
  HEAP16[$9 >> 1] = $32; //@line 39648
  $57 = $39 & 16777215; //@line 39649
  $58 = $57 + 1 | 0; //@line 39650
  do {
   if ($58 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
    $62 = HEAP32[$c + 32 >> 2] | 0; //@line 39657
    HEAP16[$7 >> 1] = HEAPU8[$62 + $57 | 0] << 8 | HEAPU8[$62 + $58 | 0]; //@line 39666
   } else {
    $75 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $57) | 0; //@line 39673
    $phitmp = (HEAP8[$33] | 0) == 0; //@line 39675
    HEAP16[$7 >> 1] = $75; //@line 39676
    if ($phitmp) {
     break;
    }
    _e68_exception_bus($c); //@line 39681
    STACKTOP = sp; //@line 39683
    return;
   }
  } while (0);
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 39689
  HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 39692
  $82 = $c + 166 | 0; //@line 39693
  $83 = HEAP16[$82 >> 1] | 0; //@line 39694
  HEAP16[$82 >> 1] = ($83 ^ $43) & 31 | $83 & -256; //@line 39699
  STACKTOP = sp; //@line 39701
  return;
 }
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($47 << 2) >> 2] & 127]($c, $47, 509, 8) | 0) != 0) {
  STACKTOP = sp; //@line 39710
  return;
 }
 if ((_e68_ea_get_val8($c, $s2) | 0) != 0) {
  STACKTOP = sp; //@line 39717
  return;
 }
 $99 = HEAP8[$s2] ^ $43 & 255; //@line 39722
 $100 = $c + 372 | 0; //@line 39723
 HEAP32[$100 >> 2] = (HEAP32[$100 >> 2] | 0) + 8; //@line 39726
 _e68_cc_set_nz_8($c, 15, $99); //@line 39727
 $103 = HEAP32[$1 >> 2] | 0; //@line 39728
 if (($103 & 1 | 0) != 0) {
  _e68_exception_address($c, $103, 0, 0); //@line 39733
  STACKTOP = sp; //@line 39735
  return;
 }
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 39739
 $109 = $103 & 16777215; //@line 39740
 $110 = $109 + 1 | 0; //@line 39741
 if ($110 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $115 = HEAP32[$c + 32 >> 2] | 0; //@line 39747
  $_0_i_i20 = HEAPU8[$115 + $109 | 0] << 8 | HEAPU8[$115 + $110 | 0]; //@line 39757
 } else {
  $_0_i_i20 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $109) | 0; //@line 39765
 }
 HEAP16[$7 >> 1] = $_0_i_i20; //@line 39768
 if ((HEAP8[$33] | 0) == 0) {
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 39775
  HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 39778
  _e68_ea_set_val8($c, $99) | 0; //@line 39779
  STACKTOP = sp; //@line 39781
  return;
 } else {
  _e68_exception_bus($c); //@line 39784
  STACKTOP = sp; //@line 39786
  return;
 }
}
function _op0a40($c) {
 $c = $c | 0;
 var $s2 = 0, $1 = 0, $11 = 0, $12 = 0, $17 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $27 = 0, $42 = 0, $43 = 0, $49 = 0, $50 = 0, $52 = 0, $53 = 0, $54 = 0, $61 = 0, $62 = 0, $66 = 0, $79 = 0, $phitmp_i = 0, $82 = 0, $83 = 0, $91 = 0, $92 = 0, $97 = 0, $99 = 0, $100 = 0, $101 = 0, $102 = 0, $107 = 0, $_0_i_i = 0, $122 = 0, $129 = 0, $132 = 0, $135 = 0, $145 = 0, $146 = 0, $149 = 0, $155 = 0, $156 = 0, $161 = 0, $_0_i_i11 = 0, sp = 0;
 sp = STACKTOP; //@line 39816
 STACKTOP = STACKTOP + 8 | 0; //@line 39816
 $s2 = sp | 0; //@line 39817
 $1 = $c + 160 | 0; //@line 39818
 if ((HEAP16[$1 >> 1] & 63) == 60) {
  if ((HEAP8[$c + 334 | 0] | 0) == 0) {
   _e68_exception_privilege($c); //@line 39829
   STACKTOP = sp; //@line 39831
   return;
  }
  $11 = $c + 156 | 0; //@line 39834
  $12 = HEAP32[$11 >> 2] | 0; //@line 39835
  if (($12 & 1 | 0) != 0) {
   _e68_exception_address($c, $12, 0, 0); //@line 39840
   STACKTOP = sp; //@line 39842
   return;
  }
  $17 = $c + 164 | 0; //@line 39845
  $19 = $c + 162 | 0; //@line 39847
  HEAP16[$19 >> 1] = HEAP16[$17 >> 1] | 0; //@line 39848
  $20 = $12 & 16777215; //@line 39849
  $21 = $20 + 1 | 0; //@line 39850
  $22 = $c + 36 | 0; //@line 39851
  if ($21 >>> 0 < (HEAP32[$22 >> 2] | 0) >>> 0) {
   $27 = HEAP32[$c + 32 >> 2] | 0; //@line 39857
   $42 = HEAPU8[$27 + $20 | 0] << 8 | HEAPU8[$27 + $21 | 0]; //@line 39867
  } else {
   $42 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $20) | 0; //@line 39875
  }
  HEAP16[$17 >> 1] = $42; //@line 39878
  $43 = $c + 336 | 0; //@line 39879
  if ((HEAP8[$43] | 0) != 0) {
   _e68_exception_bus($c); //@line 39884
   STACKTOP = sp; //@line 39886
   return;
  }
  $49 = (HEAP32[$11 >> 2] | 0) + 2 | 0; //@line 39890
  HEAP32[$11 >> 2] = $49; //@line 39891
  $50 = $c + 152 | 0; //@line 39892
  $52 = (HEAP32[$50 >> 2] | 0) + 2 | 0; //@line 39894
  HEAP32[$50 >> 2] = $52; //@line 39895
  $53 = HEAP16[$19 >> 1] | 0; //@line 39896
  $54 = $c + 372 | 0; //@line 39897
  HEAP32[$54 >> 2] = (HEAP32[$54 >> 2] | 0) + 20; //@line 39900
  if (($49 & 1 | 0) != 0) {
   _e68_exception_address($c, $49, 0, 0); //@line 39905
   STACKTOP = sp; //@line 39907
   return;
  }
  HEAP16[$19 >> 1] = $42; //@line 39910
  $61 = $49 & 16777215; //@line 39911
  $62 = $61 + 1 | 0; //@line 39912
  do {
   if ($62 >>> 0 < (HEAP32[$22 >> 2] | 0) >>> 0) {
    $66 = HEAP32[$c + 32 >> 2] | 0; //@line 39919
    HEAP16[$17 >> 1] = HEAPU8[$66 + $61 | 0] << 8 | HEAPU8[$66 + $62 | 0]; //@line 39928
    $83 = $49;
    $82 = $52;
   } else {
    $79 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $61) | 0; //@line 39936
    $phitmp_i = (HEAP8[$43] | 0) == 0; //@line 39938
    HEAP16[$17 >> 1] = $79; //@line 39939
    if ($phitmp_i) {
     $83 = HEAP32[$11 >> 2] | 0;
     $82 = HEAP32[$50 >> 2] | 0;
     break;
    }
    _e68_exception_bus($c); //@line 39948
    STACKTOP = sp; //@line 39950
    return;
   }
  } while (0);
  HEAP32[$11 >> 2] = $83 + 2; //@line 39957
  HEAP32[$50 >> 2] = $82 + 2; //@line 39959
  _e68_set_sr($c, (HEAP16[$c + 166 >> 1] ^ $53) & -22753); //@line 39964
  STACKTOP = sp; //@line 39966
  return;
 }
 $91 = $c + 156 | 0; //@line 39969
 $92 = HEAP32[$91 >> 2] | 0; //@line 39970
 if (($92 & 1 | 0) != 0) {
  _e68_exception_address($c, $92, 0, 0); //@line 39975
  STACKTOP = sp; //@line 39977
  return;
 }
 $97 = $c + 164 | 0; //@line 39980
 $99 = $c + 162 | 0; //@line 39982
 HEAP16[$99 >> 1] = HEAP16[$97 >> 1] | 0; //@line 39983
 $100 = $92 & 16777215; //@line 39984
 $101 = $100 + 1 | 0; //@line 39985
 $102 = $c + 36 | 0; //@line 39986
 if ($101 >>> 0 < (HEAP32[$102 >> 2] | 0) >>> 0) {
  $107 = HEAP32[$c + 32 >> 2] | 0; //@line 39992
  $_0_i_i = HEAPU8[$107 + $100 | 0] << 8 | HEAPU8[$107 + $101 | 0]; //@line 40002
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $100) | 0; //@line 40010
 }
 HEAP16[$97 >> 1] = $_0_i_i; //@line 40013
 $122 = $c + 336 | 0; //@line 40014
 if ((HEAP8[$122] | 0) != 0) {
  _e68_exception_bus($c); //@line 40019
  STACKTOP = sp; //@line 40021
  return;
 }
 HEAP32[$91 >> 2] = (HEAP32[$91 >> 2] | 0) + 2; //@line 40026
 $129 = $c + 152 | 0; //@line 40027
 HEAP32[$129 >> 2] = (HEAP32[$129 >> 2] | 0) + 2; //@line 40030
 $132 = HEAP16[$99 >> 1] | 0; //@line 40031
 $135 = HEAP16[$1 >> 1] & 63; //@line 40034
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($135 << 2) >> 2] & 127]($c, $135, 509, 16) | 0) != 0) {
  STACKTOP = sp; //@line 40041
  return;
 }
 if ((_e68_ea_get_val16($c, $s2) | 0) != 0) {
  STACKTOP = sp; //@line 40048
  return;
 }
 $145 = HEAP16[$s2 >> 1] ^ $132; //@line 40052
 _e68_cc_set_nz_16($c, 15, $145); //@line 40053
 $146 = $c + 372 | 0; //@line 40054
 HEAP32[$146 >> 2] = (HEAP32[$146 >> 2] | 0) + 8; //@line 40057
 $149 = HEAP32[$91 >> 2] | 0; //@line 40058
 if (($149 & 1 | 0) != 0) {
  _e68_exception_address($c, $149, 0, 0); //@line 40063
  STACKTOP = sp; //@line 40065
  return;
 }
 HEAP16[$99 >> 1] = HEAP16[$97 >> 1] | 0; //@line 40069
 $155 = $149 & 16777215; //@line 40070
 $156 = $155 + 1 | 0; //@line 40071
 if ($156 >>> 0 < (HEAP32[$102 >> 2] | 0) >>> 0) {
  $161 = HEAP32[$c + 32 >> 2] | 0; //@line 40077
  $_0_i_i11 = HEAPU8[$161 + $155 | 0] << 8 | HEAPU8[$161 + $156 | 0]; //@line 40087
 } else {
  $_0_i_i11 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $155) | 0; //@line 40095
 }
 HEAP16[$97 >> 1] = $_0_i_i11; //@line 40098
 if ((HEAP8[$122] | 0) == 0) {
  HEAP32[$91 >> 2] = (HEAP32[$91 >> 2] | 0) + 2; //@line 40105
  HEAP32[$129 >> 2] = (HEAP32[$129 >> 2] | 0) + 2; //@line 40108
  _e68_ea_set_val16($c, $145) | 0; //@line 40109
  STACKTOP = sp; //@line 40111
  return;
 } else {
  _e68_exception_bus($c); //@line 40114
  STACKTOP = sp; //@line 40116
  return;
 }
}
function _op0a80($c) {
 $c = $c | 0;
 var $s2 = 0, $1 = 0, $2 = 0, $7 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $17 = 0, $32 = 0, $33 = 0, $39 = 0, $40 = 0, $43 = 0, $48 = 0, $49 = 0, $53 = 0, $66 = 0, $phitmp = 0, $77 = 0, $81 = 0, $91 = 0, $92 = 0, $95 = 0, $101 = 0, $102 = 0, $107 = 0, $_0_i_i17 = 0, sp = 0;
 sp = STACKTOP; //@line 40140
 STACKTOP = STACKTOP + 8 | 0; //@line 40140
 $s2 = sp | 0; //@line 40141
 $1 = $c + 156 | 0; //@line 40142
 $2 = HEAP32[$1 >> 2] | 0; //@line 40143
 if (($2 & 1 | 0) != 0) {
  _e68_exception_address($c, $2, 0, 0); //@line 40148
  STACKTOP = sp; //@line 40150
  return;
 }
 $7 = $c + 164 | 0; //@line 40153
 $9 = $c + 162 | 0; //@line 40155
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 40156
 $10 = $2 & 16777215; //@line 40157
 $11 = $10 + 1 | 0; //@line 40158
 $12 = $c + 36 | 0; //@line 40159
 if ($11 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $17 = HEAP32[$c + 32 >> 2] | 0; //@line 40165
  $32 = HEAPU8[$17 + $10 | 0] << 8 | HEAPU8[$17 + $11 | 0]; //@line 40175
 } else {
  $32 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $10) | 0; //@line 40183
 }
 HEAP16[$7 >> 1] = $32; //@line 40186
 $33 = $c + 336 | 0; //@line 40187
 if ((HEAP8[$33] | 0) != 0) {
  _e68_exception_bus($c); //@line 40192
  STACKTOP = sp; //@line 40194
  return;
 }
 $39 = (HEAP32[$1 >> 2] | 0) + 2 | 0; //@line 40198
 HEAP32[$1 >> 2] = $39; //@line 40199
 $40 = $c + 152 | 0; //@line 40200
 HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 40203
 $43 = HEAP16[$9 >> 1] | 0; //@line 40204
 if (($39 & 1 | 0) != 0) {
  _e68_exception_address($c, $39, 0, 0); //@line 40209
  STACKTOP = sp; //@line 40211
  return;
 }
 HEAP16[$9 >> 1] = $32; //@line 40214
 $48 = $39 & 16777215; //@line 40215
 $49 = $48 + 1 | 0; //@line 40216
 do {
  if ($49 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
   $53 = HEAP32[$c + 32 >> 2] | 0; //@line 40223
   HEAP16[$7 >> 1] = HEAPU8[$53 + $48 | 0] << 8 | HEAPU8[$53 + $49 | 0]; //@line 40232
  } else {
   $66 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $48) | 0; //@line 40239
   $phitmp = (HEAP8[$33] | 0) == 0; //@line 40241
   HEAP16[$7 >> 1] = $66; //@line 40242
   if ($phitmp) {
    break;
   }
   _e68_exception_bus($c); //@line 40247
   STACKTOP = sp; //@line 40249
   return;
  }
 } while (0);
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 40255
 HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 40258
 $77 = HEAPU16[$9 >> 1] | ($43 & 65535) << 16; //@line 40263
 $81 = HEAP16[$c + 160 >> 1] & 63; //@line 40267
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($81 << 2) >> 2] & 127]($c, $81, 509, 32) | 0) != 0) {
  STACKTOP = sp; //@line 40274
  return;
 }
 if ((_e68_ea_get_val32($c, $s2) | 0) != 0) {
  STACKTOP = sp; //@line 40281
  return;
 }
 $91 = HEAP32[$s2 >> 2] ^ $77; //@line 40285
 $92 = $c + 372 | 0; //@line 40286
 HEAP32[$92 >> 2] = (HEAP32[$92 >> 2] | 0) + 12; //@line 40289
 _e68_cc_set_nz_32($c, 15, $91); //@line 40290
 $95 = HEAP32[$1 >> 2] | 0; //@line 40291
 if (($95 & 1 | 0) != 0) {
  _e68_exception_address($c, $95, 0, 0); //@line 40296
  STACKTOP = sp; //@line 40298
  return;
 }
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 40302
 $101 = $95 & 16777215; //@line 40303
 $102 = $101 + 1 | 0; //@line 40304
 if ($102 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $107 = HEAP32[$c + 32 >> 2] | 0; //@line 40310
  $_0_i_i17 = HEAPU8[$107 + $101 | 0] << 8 | HEAPU8[$107 + $102 | 0]; //@line 40320
 } else {
  $_0_i_i17 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $101) | 0; //@line 40328
 }
 HEAP16[$7 >> 1] = $_0_i_i17; //@line 40331
 if ((HEAP8[$33] | 0) == 0) {
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 40338
  HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 40341
  _e68_ea_set_val32($c, $91) | 0; //@line 40342
  STACKTOP = sp; //@line 40344
  return;
 } else {
  _e68_exception_bus($c); //@line 40347
  STACKTOP = sp; //@line 40349
  return;
 }
}
function _op0c00($c) {
 $c = $c | 0;
 var $s2 = 0, $1 = 0, $2 = 0, $7 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $17 = 0, $_0_i_i = 0, $32 = 0, $39 = 0, $43 = 0, $47 = 0, $56 = 0, $59 = 0, $61 = 0, $67 = 0, $68 = 0, $73 = 0, $_0_i_i9 = 0, sp = 0;
 sp = STACKTOP; //@line 40369
 STACKTOP = STACKTOP + 8 | 0; //@line 40369
 $s2 = sp | 0; //@line 40370
 $1 = $c + 156 | 0; //@line 40371
 $2 = HEAP32[$1 >> 2] | 0; //@line 40372
 if (($2 & 1 | 0) != 0) {
  _e68_exception_address($c, $2, 0, 0); //@line 40377
  STACKTOP = sp; //@line 40379
  return;
 }
 $7 = $c + 164 | 0; //@line 40382
 $9 = $c + 162 | 0; //@line 40384
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 40385
 $10 = $2 & 16777215; //@line 40386
 $11 = $10 + 1 | 0; //@line 40387
 $12 = $c + 36 | 0; //@line 40388
 if ($11 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $17 = HEAP32[$c + 32 >> 2] | 0; //@line 40394
  $_0_i_i = HEAPU8[$17 + $10 | 0] << 8 | HEAPU8[$17 + $11 | 0]; //@line 40404
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $10) | 0; //@line 40412
 }
 HEAP16[$7 >> 1] = $_0_i_i; //@line 40415
 $32 = $c + 336 | 0; //@line 40416
 if ((HEAP8[$32] | 0) != 0) {
  _e68_exception_bus($c); //@line 40421
  STACKTOP = sp; //@line 40423
  return;
 }
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 40428
 $39 = $c + 152 | 0; //@line 40429
 HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 2; //@line 40432
 $43 = HEAP16[$9 >> 1] & 255; //@line 40434
 $47 = HEAP16[$c + 160 >> 1] & 63; //@line 40438
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($47 << 2) >> 2] & 127]($c, $47, 2045, 8) | 0) != 0) {
  STACKTOP = sp; //@line 40445
  return;
 }
 if ((_e68_ea_get_val8($c, $s2) | 0) != 0) {
  STACKTOP = sp; //@line 40452
  return;
 }
 $56 = $c + 372 | 0; //@line 40455
 HEAP32[$56 >> 2] = (HEAP32[$56 >> 2] | 0) + 8; //@line 40458
 $59 = HEAP8[$s2] | 0; //@line 40459
 _e68_cc_set_cmp_8($c, $59 - $43 & 255, $43, $59); //@line 40461
 $61 = HEAP32[$1 >> 2] | 0; //@line 40462
 if (($61 & 1 | 0) != 0) {
  _e68_exception_address($c, $61, 0, 0); //@line 40467
  STACKTOP = sp; //@line 40469
  return;
 }
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 40473
 $67 = $61 & 16777215; //@line 40474
 $68 = $67 + 1 | 0; //@line 40475
 if ($68 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $73 = HEAP32[$c + 32 >> 2] | 0; //@line 40481
  $_0_i_i9 = HEAPU8[$73 + $67 | 0] << 8 | HEAPU8[$73 + $68 | 0]; //@line 40491
 } else {
  $_0_i_i9 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $67) | 0; //@line 40499
 }
 HEAP16[$7 >> 1] = $_0_i_i9; //@line 40502
 if ((HEAP8[$32] | 0) == 0) {
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 40509
  HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 2; //@line 40512
  STACKTOP = sp; //@line 40514
  return;
 } else {
  _e68_exception_bus($c); //@line 40517
  STACKTOP = sp; //@line 40519
  return;
 }
}
function _op0c40($c) {
 $c = $c | 0;
 var $s2 = 0, $1 = 0, $2 = 0, $7 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $17 = 0, $_0_i_i = 0, $32 = 0, $39 = 0, $42 = 0, $46 = 0, $55 = 0, $58 = 0, $60 = 0, $66 = 0, $67 = 0, $72 = 0, $_0_i_i9 = 0, sp = 0;
 sp = STACKTOP; //@line 40539
 STACKTOP = STACKTOP + 8 | 0; //@line 40539
 $s2 = sp | 0; //@line 40540
 $1 = $c + 156 | 0; //@line 40541
 $2 = HEAP32[$1 >> 2] | 0; //@line 40542
 if (($2 & 1 | 0) != 0) {
  _e68_exception_address($c, $2, 0, 0); //@line 40547
  STACKTOP = sp; //@line 40549
  return;
 }
 $7 = $c + 164 | 0; //@line 40552
 $9 = $c + 162 | 0; //@line 40554
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 40555
 $10 = $2 & 16777215; //@line 40556
 $11 = $10 + 1 | 0; //@line 40557
 $12 = $c + 36 | 0; //@line 40558
 if ($11 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $17 = HEAP32[$c + 32 >> 2] | 0; //@line 40564
  $_0_i_i = HEAPU8[$17 + $10 | 0] << 8 | HEAPU8[$17 + $11 | 0]; //@line 40574
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $10) | 0; //@line 40582
 }
 HEAP16[$7 >> 1] = $_0_i_i; //@line 40585
 $32 = $c + 336 | 0; //@line 40586
 if ((HEAP8[$32] | 0) != 0) {
  _e68_exception_bus($c); //@line 40591
  STACKTOP = sp; //@line 40593
  return;
 }
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 40598
 $39 = $c + 152 | 0; //@line 40599
 HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 2; //@line 40602
 $42 = HEAP16[$9 >> 1] | 0; //@line 40603
 $46 = HEAP16[$c + 160 >> 1] & 63; //@line 40607
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($46 << 2) >> 2] & 127]($c, $46, 2045, 16) | 0) != 0) {
  STACKTOP = sp; //@line 40614
  return;
 }
 if ((_e68_ea_get_val16($c, $s2) | 0) != 0) {
  STACKTOP = sp; //@line 40621
  return;
 }
 $55 = $c + 372 | 0; //@line 40624
 HEAP32[$55 >> 2] = (HEAP32[$55 >> 2] | 0) + 8; //@line 40627
 $58 = HEAP16[$s2 >> 1] | 0; //@line 40628
 _e68_cc_set_cmp_16($c, $58 - $42 & 65535, $42, $58); //@line 40630
 $60 = HEAP32[$1 >> 2] | 0; //@line 40631
 if (($60 & 1 | 0) != 0) {
  _e68_exception_address($c, $60, 0, 0); //@line 40636
  STACKTOP = sp; //@line 40638
  return;
 }
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 40642
 $66 = $60 & 16777215; //@line 40643
 $67 = $66 + 1 | 0; //@line 40644
 if ($67 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $72 = HEAP32[$c + 32 >> 2] | 0; //@line 40650
  $_0_i_i9 = HEAPU8[$72 + $66 | 0] << 8 | HEAPU8[$72 + $67 | 0]; //@line 40660
 } else {
  $_0_i_i9 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $66) | 0; //@line 40668
 }
 HEAP16[$7 >> 1] = $_0_i_i9; //@line 40671
 if ((HEAP8[$32] | 0) == 0) {
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 40678
  HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 2; //@line 40681
  STACKTOP = sp; //@line 40683
  return;
 } else {
  _e68_exception_bus($c); //@line 40686
  STACKTOP = sp; //@line 40688
  return;
 }
}
function _op0c80($c) {
 $c = $c | 0;
 var $s2 = 0, $1 = 0, $2 = 0, $7 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $17 = 0, $32 = 0, $33 = 0, $39 = 0, $40 = 0, $43 = 0, $48 = 0, $49 = 0, $53 = 0, $66 = 0, $phitmp = 0, $77 = 0, $81 = 0, $90 = 0, $93 = 0, $95 = 0, $101 = 0, $102 = 0, $107 = 0, $_0_i_i16 = 0, sp = 0;
 sp = STACKTOP; //@line 40712
 STACKTOP = STACKTOP + 8 | 0; //@line 40712
 $s2 = sp | 0; //@line 40713
 $1 = $c + 156 | 0; //@line 40714
 $2 = HEAP32[$1 >> 2] | 0; //@line 40715
 if (($2 & 1 | 0) != 0) {
  _e68_exception_address($c, $2, 0, 0); //@line 40720
  STACKTOP = sp; //@line 40722
  return;
 }
 $7 = $c + 164 | 0; //@line 40725
 $9 = $c + 162 | 0; //@line 40727
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 40728
 $10 = $2 & 16777215; //@line 40729
 $11 = $10 + 1 | 0; //@line 40730
 $12 = $c + 36 | 0; //@line 40731
 if ($11 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $17 = HEAP32[$c + 32 >> 2] | 0; //@line 40737
  $32 = HEAPU8[$17 + $10 | 0] << 8 | HEAPU8[$17 + $11 | 0]; //@line 40747
 } else {
  $32 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $10) | 0; //@line 40755
 }
 HEAP16[$7 >> 1] = $32; //@line 40758
 $33 = $c + 336 | 0; //@line 40759
 if ((HEAP8[$33] | 0) != 0) {
  _e68_exception_bus($c); //@line 40764
  STACKTOP = sp; //@line 40766
  return;
 }
 $39 = (HEAP32[$1 >> 2] | 0) + 2 | 0; //@line 40770
 HEAP32[$1 >> 2] = $39; //@line 40771
 $40 = $c + 152 | 0; //@line 40772
 HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 40775
 $43 = HEAP16[$9 >> 1] | 0; //@line 40776
 if (($39 & 1 | 0) != 0) {
  _e68_exception_address($c, $39, 0, 0); //@line 40781
  STACKTOP = sp; //@line 40783
  return;
 }
 HEAP16[$9 >> 1] = $32; //@line 40786
 $48 = $39 & 16777215; //@line 40787
 $49 = $48 + 1 | 0; //@line 40788
 do {
  if ($49 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
   $53 = HEAP32[$c + 32 >> 2] | 0; //@line 40795
   HEAP16[$7 >> 1] = HEAPU8[$53 + $48 | 0] << 8 | HEAPU8[$53 + $49 | 0]; //@line 40804
  } else {
   $66 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $48) | 0; //@line 40811
   $phitmp = (HEAP8[$33] | 0) == 0; //@line 40813
   HEAP16[$7 >> 1] = $66; //@line 40814
   if ($phitmp) {
    break;
   }
   _e68_exception_bus($c); //@line 40819
   STACKTOP = sp; //@line 40821
   return;
  }
 } while (0);
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 40827
 HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 40830
 $77 = HEAPU16[$9 >> 1] | ($43 & 65535) << 16; //@line 40835
 $81 = HEAP16[$c + 160 >> 1] & 63; //@line 40839
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($81 << 2) >> 2] & 127]($c, $81, 2045, 32) | 0) != 0) {
  STACKTOP = sp; //@line 40846
  return;
 }
 if ((_e68_ea_get_val32($c, $s2) | 0) != 0) {
  STACKTOP = sp; //@line 40853
  return;
 }
 $90 = $c + 372 | 0; //@line 40856
 HEAP32[$90 >> 2] = (HEAP32[$90 >> 2] | 0) + 12; //@line 40859
 $93 = HEAP32[$s2 >> 2] | 0; //@line 40860
 _e68_cc_set_cmp_32($c, $93 - $77 | 0, $77, $93); //@line 40862
 $95 = HEAP32[$1 >> 2] | 0; //@line 40863
 if (($95 & 1 | 0) != 0) {
  _e68_exception_address($c, $95, 0, 0); //@line 40868
  STACKTOP = sp; //@line 40870
  return;
 }
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 40874
 $101 = $95 & 16777215; //@line 40875
 $102 = $101 + 1 | 0; //@line 40876
 if ($102 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $107 = HEAP32[$c + 32 >> 2] | 0; //@line 40882
  $_0_i_i16 = HEAPU8[$107 + $101 | 0] << 8 | HEAPU8[$107 + $102 | 0]; //@line 40892
 } else {
  $_0_i_i16 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $101) | 0; //@line 40900
 }
 HEAP16[$7 >> 1] = $_0_i_i16; //@line 40903
 if ((HEAP8[$33] | 0) == 0) {
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 40910
  HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 2; //@line 40913
  STACKTOP = sp; //@line 40915
  return;
 } else {
  _e68_exception_bus($c); //@line 40918
  STACKTOP = sp; //@line 40920
  return;
 }
}
function _op0e00($c) {
 $c = $c | 0;
 var $v = 0, $6 = 0, $10 = 0, $11 = 0, $16 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $26 = 0, $_0_i_i = 0, $41 = 0, $48 = 0, $51 = 0, $53 = 0, $54 = 0, $60 = 0, $_sink_in = 0, $70 = 0, $83 = 0, $94 = 0, $95 = 0, $97 = 0, $104 = 0, $110 = 0, $113 = 0, $119 = 0, $120 = 0, $125 = 0, $_0_i_i17 = 0, sp = 0;
 sp = STACKTOP; //@line 40945
 STACKTOP = STACKTOP + 8 | 0; //@line 40945
 $v = sp | 0; //@line 40946
 if ((HEAP32[$c >> 2] & 2 | 0) == 0) {
  _e68_exception_illegal($c); //@line 40953
  $6 = $c + 372 | 0; //@line 40954
  HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 2; //@line 40957
  STACKTOP = sp; //@line 40959
  return;
 }
 $10 = $c + 156 | 0; //@line 40962
 $11 = HEAP32[$10 >> 2] | 0; //@line 40963
 if (($11 & 1 | 0) != 0) {
  _e68_exception_address($c, $11, 0, 0); //@line 40968
  STACKTOP = sp; //@line 40970
  return;
 }
 $16 = $c + 164 | 0; //@line 40973
 $18 = $c + 162 | 0; //@line 40975
 HEAP16[$18 >> 1] = HEAP16[$16 >> 1] | 0; //@line 40976
 $19 = $11 & 16777215; //@line 40977
 $20 = $19 + 1 | 0; //@line 40978
 $21 = $c + 36 | 0; //@line 40979
 if ($20 >>> 0 < (HEAP32[$21 >> 2] | 0) >>> 0) {
  $26 = HEAP32[$c + 32 >> 2] | 0; //@line 40985
  $_0_i_i = HEAPU8[$26 + $19 | 0] << 8 | HEAPU8[$26 + $20 | 0]; //@line 40995
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $19) | 0; //@line 41003
 }
 HEAP16[$16 >> 1] = $_0_i_i; //@line 41006
 $41 = $c + 336 | 0; //@line 41007
 if ((HEAP8[$41] | 0) != 0) {
  _e68_exception_bus($c); //@line 41012
  STACKTOP = sp; //@line 41014
  return;
 }
 HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 2; //@line 41019
 $48 = $c + 152 | 0; //@line 41020
 HEAP32[$48 >> 2] = (HEAP32[$48 >> 2] | 0) + 2; //@line 41023
 $51 = $c + 160 | 0; //@line 41024
 $53 = HEAPU16[$18 >> 1] | 0; //@line 41026
 $54 = $53 >>> 12; //@line 41027
 do {
  if (($53 & 2048 | 0) == 0) {
   $83 = HEAP16[$51 >> 1] & 63; //@line 41036
   if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($83 << 2) >> 2] & 127]($c, $83, 508, 8) | 0) != 0) {
    STACKTOP = sp; //@line 41043
    return;
   }
   if ((_e68_ea_get_val8($c, $v) | 0) != 0) {
    STACKTOP = sp; //@line 41050
    return;
   }
   $94 = $54 & 7; //@line 41055
   $95 = HEAP8[$v] | 0; //@line 41056
   if (($54 & 8 | 0) == 0) {
    $104 = $c + 88 + ($94 << 2) | 0; //@line 41059
    HEAP32[$104 >> 2] = HEAP32[$104 >> 2] & -256 | $95 & 255; //@line 41064
    break;
   } else {
    $97 = $95 & 255; //@line 41067
    HEAP32[$c + 120 + ($94 << 2) >> 2] = ($97 & 128 | 0) != 0 ? $97 | -256 : $97; //@line 41073
    break;
   }
  } else {
   $60 = $54 & 7; //@line 41080
   if (($54 & 8 | 0) == 0) {
    $_sink_in = $c + 88 + ($60 << 2) | 0; //@line 41084
   } else {
    $_sink_in = $c + 120 + ($60 << 2) | 0; //@line 41088
   }
   HEAP8[$v] = HEAP32[$_sink_in >> 2] & 255; //@line 41093
   $70 = HEAP16[$51 >> 1] & 63; //@line 41097
   if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($70 << 2) >> 2] & 127]($c, $70, 508, 8) | 0) != 0) {
    STACKTOP = sp; //@line 41104
    return;
   }
   if ((_e68_ea_set_val8($c, HEAP8[$v] | 0) | 0) == 0) {
    break;
   }
   STACKTOP = sp; //@line 41114
   return;
  }
 } while (0);
 $110 = $c + 372 | 0; //@line 41118
 HEAP32[$110 >> 2] = (HEAP32[$110 >> 2] | 0) + 4; //@line 41121
 $113 = HEAP32[$10 >> 2] | 0; //@line 41122
 if (($113 & 1 | 0) != 0) {
  _e68_exception_address($c, $113, 0, 0); //@line 41127
  STACKTOP = sp; //@line 41129
  return;
 }
 HEAP16[$18 >> 1] = HEAP16[$16 >> 1] | 0; //@line 41133
 $119 = $113 & 16777215; //@line 41134
 $120 = $119 + 1 | 0; //@line 41135
 if ($120 >>> 0 < (HEAP32[$21 >> 2] | 0) >>> 0) {
  $125 = HEAP32[$c + 32 >> 2] | 0; //@line 41141
  $_0_i_i17 = HEAPU8[$125 + $119 | 0] << 8 | HEAPU8[$125 + $120 | 0]; //@line 41151
 } else {
  $_0_i_i17 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $119) | 0; //@line 41159
 }
 HEAP16[$16 >> 1] = $_0_i_i17; //@line 41162
 if ((HEAP8[$41] | 0) == 0) {
  HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 2; //@line 41169
  HEAP32[$48 >> 2] = (HEAP32[$48 >> 2] | 0) + 2; //@line 41172
  STACKTOP = sp; //@line 41174
  return;
 } else {
  _e68_exception_bus($c); //@line 41177
  STACKTOP = sp; //@line 41179
  return;
 }
}
function _op0e40($c) {
 $c = $c | 0;
 var $v = 0, $6 = 0, $10 = 0, $11 = 0, $16 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $26 = 0, $_0_i_i = 0, $41 = 0, $48 = 0, $51 = 0, $53 = 0, $54 = 0, $60 = 0, $_sink_in = 0, $70 = 0, $83 = 0, $94 = 0, $95 = 0, $97 = 0, $103 = 0, $109 = 0, $112 = 0, $118 = 0, $119 = 0, $124 = 0, $_0_i_i17 = 0, sp = 0;
 sp = STACKTOP; //@line 41204
 STACKTOP = STACKTOP + 8 | 0; //@line 41204
 $v = sp | 0; //@line 41205
 if ((HEAP32[$c >> 2] & 2 | 0) == 0) {
  _e68_exception_illegal($c); //@line 41212
  $6 = $c + 372 | 0; //@line 41213
  HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 2; //@line 41216
  STACKTOP = sp; //@line 41218
  return;
 }
 $10 = $c + 156 | 0; //@line 41221
 $11 = HEAP32[$10 >> 2] | 0; //@line 41222
 if (($11 & 1 | 0) != 0) {
  _e68_exception_address($c, $11, 0, 0); //@line 41227
  STACKTOP = sp; //@line 41229
  return;
 }
 $16 = $c + 164 | 0; //@line 41232
 $18 = $c + 162 | 0; //@line 41234
 HEAP16[$18 >> 1] = HEAP16[$16 >> 1] | 0; //@line 41235
 $19 = $11 & 16777215; //@line 41236
 $20 = $19 + 1 | 0; //@line 41237
 $21 = $c + 36 | 0; //@line 41238
 if ($20 >>> 0 < (HEAP32[$21 >> 2] | 0) >>> 0) {
  $26 = HEAP32[$c + 32 >> 2] | 0; //@line 41244
  $_0_i_i = HEAPU8[$26 + $19 | 0] << 8 | HEAPU8[$26 + $20 | 0]; //@line 41254
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $19) | 0; //@line 41262
 }
 HEAP16[$16 >> 1] = $_0_i_i; //@line 41265
 $41 = $c + 336 | 0; //@line 41266
 if ((HEAP8[$41] | 0) != 0) {
  _e68_exception_bus($c); //@line 41271
  STACKTOP = sp; //@line 41273
  return;
 }
 HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 2; //@line 41278
 $48 = $c + 152 | 0; //@line 41279
 HEAP32[$48 >> 2] = (HEAP32[$48 >> 2] | 0) + 2; //@line 41282
 $51 = $c + 160 | 0; //@line 41283
 $53 = HEAPU16[$18 >> 1] | 0; //@line 41285
 $54 = $53 >>> 12; //@line 41286
 do {
  if (($53 & 2048 | 0) == 0) {
   $83 = HEAP16[$51 >> 1] & 63; //@line 41295
   if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($83 << 2) >> 2] & 127]($c, $83, 508, 16) | 0) != 0) {
    STACKTOP = sp; //@line 41302
    return;
   }
   if ((_e68_ea_get_val16($c, $v) | 0) != 0) {
    STACKTOP = sp; //@line 41309
    return;
   }
   $94 = $54 & 7; //@line 41314
   $95 = HEAP16[$v >> 1] | 0; //@line 41315
   if (($54 & 8 | 0) == 0) {
    $103 = $c + 88 + ($94 << 2) | 0; //@line 41318
    HEAP32[$103 >> 2] = HEAP32[$103 >> 2] & -65536 | $95 & 65535; //@line 41323
    break;
   } else {
    $97 = $95 & 65535; //@line 41326
    HEAP32[$c + 120 + ($94 << 2) >> 2] = ($97 & 32768 | 0) == 0 ? $97 : $97 | -65536; //@line 41332
    break;
   }
  } else {
   $60 = $54 & 7; //@line 41339
   if (($54 & 8 | 0) == 0) {
    $_sink_in = $c + 88 + ($60 << 2) | 0; //@line 41343
   } else {
    $_sink_in = $c + 120 + ($60 << 2) | 0; //@line 41347
   }
   HEAP16[$v >> 1] = HEAP32[$_sink_in >> 2] & 65535; //@line 41352
   $70 = HEAP16[$51 >> 1] & 63; //@line 41356
   if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($70 << 2) >> 2] & 127]($c, $70, 508, 16) | 0) != 0) {
    STACKTOP = sp; //@line 41363
    return;
   }
   if ((_e68_ea_set_val16($c, HEAP16[$v >> 1] | 0) | 0) == 0) {
    break;
   }
   STACKTOP = sp; //@line 41373
   return;
  }
 } while (0);
 $109 = $c + 372 | 0; //@line 41377
 HEAP32[$109 >> 2] = (HEAP32[$109 >> 2] | 0) + 4; //@line 41380
 $112 = HEAP32[$10 >> 2] | 0; //@line 41381
 if (($112 & 1 | 0) != 0) {
  _e68_exception_address($c, $112, 0, 0); //@line 41386
  STACKTOP = sp; //@line 41388
  return;
 }
 HEAP16[$18 >> 1] = HEAP16[$16 >> 1] | 0; //@line 41392
 $118 = $112 & 16777215; //@line 41393
 $119 = $118 + 1 | 0; //@line 41394
 if ($119 >>> 0 < (HEAP32[$21 >> 2] | 0) >>> 0) {
  $124 = HEAP32[$c + 32 >> 2] | 0; //@line 41400
  $_0_i_i17 = HEAPU8[$124 + $118 | 0] << 8 | HEAPU8[$124 + $119 | 0]; //@line 41410
 } else {
  $_0_i_i17 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $118) | 0; //@line 41418
 }
 HEAP16[$16 >> 1] = $_0_i_i17; //@line 41421
 if ((HEAP8[$41] | 0) == 0) {
  HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 2; //@line 41428
  HEAP32[$48 >> 2] = (HEAP32[$48 >> 2] | 0) + 2; //@line 41431
  STACKTOP = sp; //@line 41433
  return;
 } else {
  _e68_exception_bus($c); //@line 41436
  STACKTOP = sp; //@line 41438
  return;
 }
}
function _op0e80($c) {
 $c = $c | 0;
 var $v = 0, $6 = 0, $10 = 0, $11 = 0, $16 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $26 = 0, $_0_i_i = 0, $41 = 0, $48 = 0, $51 = 0, $53 = 0, $54 = 0, $60 = 0, $storemerge_in = 0, $69 = 0, $82 = 0, $93 = 0, $94 = 0, $100 = 0, $103 = 0, $109 = 0, $110 = 0, $115 = 0, $_0_i_i17 = 0, sp = 0;
 sp = STACKTOP; //@line 41462
 STACKTOP = STACKTOP + 8 | 0; //@line 41462
 $v = sp | 0; //@line 41463
 if ((HEAP32[$c >> 2] & 2 | 0) == 0) {
  _e68_exception_illegal($c); //@line 41470
  $6 = $c + 372 | 0; //@line 41471
  HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 2; //@line 41474
  STACKTOP = sp; //@line 41476
  return;
 }
 $10 = $c + 156 | 0; //@line 41479
 $11 = HEAP32[$10 >> 2] | 0; //@line 41480
 if (($11 & 1 | 0) != 0) {
  _e68_exception_address($c, $11, 0, 0); //@line 41485
  STACKTOP = sp; //@line 41487
  return;
 }
 $16 = $c + 164 | 0; //@line 41490
 $18 = $c + 162 | 0; //@line 41492
 HEAP16[$18 >> 1] = HEAP16[$16 >> 1] | 0; //@line 41493
 $19 = $11 & 16777215; //@line 41494
 $20 = $19 + 1 | 0; //@line 41495
 $21 = $c + 36 | 0; //@line 41496
 if ($20 >>> 0 < (HEAP32[$21 >> 2] | 0) >>> 0) {
  $26 = HEAP32[$c + 32 >> 2] | 0; //@line 41502
  $_0_i_i = HEAPU8[$26 + $19 | 0] << 8 | HEAPU8[$26 + $20 | 0]; //@line 41512
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $19) | 0; //@line 41520
 }
 HEAP16[$16 >> 1] = $_0_i_i; //@line 41523
 $41 = $c + 336 | 0; //@line 41524
 if ((HEAP8[$41] | 0) != 0) {
  _e68_exception_bus($c); //@line 41529
  STACKTOP = sp; //@line 41531
  return;
 }
 HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 2; //@line 41536
 $48 = $c + 152 | 0; //@line 41537
 HEAP32[$48 >> 2] = (HEAP32[$48 >> 2] | 0) + 2; //@line 41540
 $51 = $c + 160 | 0; //@line 41541
 $53 = HEAPU16[$18 >> 1] | 0; //@line 41543
 $54 = $53 >>> 12; //@line 41544
 do {
  if (($53 & 2048 | 0) == 0) {
   $82 = HEAP16[$51 >> 1] & 63; //@line 41553
   if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($82 << 2) >> 2] & 127]($c, $82, 508, 32) | 0) != 0) {
    STACKTOP = sp; //@line 41560
    return;
   }
   if ((_e68_ea_get_val32($c, $v) | 0) != 0) {
    STACKTOP = sp; //@line 41567
    return;
   }
   $93 = $54 & 7; //@line 41572
   $94 = HEAP32[$v >> 2] | 0; //@line 41573
   if (($54 & 8 | 0) == 0) {
    HEAP32[$c + 88 + ($93 << 2) >> 2] = $94; //@line 41577
    break;
   } else {
    HEAP32[$c + 120 + ($93 << 2) >> 2] = $94; //@line 41581
    break;
   }
  } else {
   $60 = $54 & 7; //@line 41588
   if (($54 & 8 | 0) == 0) {
    $storemerge_in = $c + 88 + ($60 << 2) | 0; //@line 41592
   } else {
    $storemerge_in = $c + 120 + ($60 << 2) | 0; //@line 41596
   }
   HEAP32[$v >> 2] = HEAP32[$storemerge_in >> 2]; //@line 41600
   $69 = HEAP16[$51 >> 1] & 63; //@line 41604
   if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($69 << 2) >> 2] & 127]($c, $69, 508, 32) | 0) != 0) {
    STACKTOP = sp; //@line 41611
    return;
   }
   if ((_e68_ea_set_val32($c, HEAP32[$v >> 2] | 0) | 0) == 0) {
    break;
   }
   STACKTOP = sp; //@line 41621
   return;
  }
 } while (0);
 $100 = $c + 372 | 0; //@line 41625
 HEAP32[$100 >> 2] = (HEAP32[$100 >> 2] | 0) + 4; //@line 41628
 $103 = HEAP32[$10 >> 2] | 0; //@line 41629
 if (($103 & 1 | 0) != 0) {
  _e68_exception_address($c, $103, 0, 0); //@line 41634
  STACKTOP = sp; //@line 41636
  return;
 }
 HEAP16[$18 >> 1] = HEAP16[$16 >> 1] | 0; //@line 41640
 $109 = $103 & 16777215; //@line 41641
 $110 = $109 + 1 | 0; //@line 41642
 if ($110 >>> 0 < (HEAP32[$21 >> 2] | 0) >>> 0) {
  $115 = HEAP32[$c + 32 >> 2] | 0; //@line 41648
  $_0_i_i17 = HEAPU8[$115 + $109 | 0] << 8 | HEAPU8[$115 + $110 | 0]; //@line 41658
 } else {
  $_0_i_i17 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $109) | 0; //@line 41666
 }
 HEAP16[$16 >> 1] = $_0_i_i17; //@line 41669
 if ((HEAP8[$41] | 0) == 0) {
  HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 2; //@line 41676
  HEAP32[$48 >> 2] = (HEAP32[$48 >> 2] | 0) + 2; //@line 41679
  STACKTOP = sp; //@line 41681
  return;
 } else {
  _e68_exception_bus($c); //@line 41684
  STACKTOP = sp; //@line 41686
  return;
 }
}
function _op1000($c) {
 $c = $c | 0;
 var $val = 0, $1 = 0, $4 = 0, $14 = 0, $19 = 0, $29 = 0, $33 = 0, $34 = 0, $39 = 0, $42 = 0, $43 = 0, $49 = 0, $_0_i_i = 0, $71 = 0, sp = 0;
 sp = STACKTOP; //@line 41704
 STACKTOP = STACKTOP + 8 | 0; //@line 41704
 $val = sp | 0; //@line 41705
 $1 = $c + 160 | 0; //@line 41706
 $4 = HEAP16[$1 >> 1] & 63; //@line 41709
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 4095, 8) | 0) != 0) {
  STACKTOP = sp; //@line 41716
  return;
 }
 if ((_e68_ea_get_val8($c, $val) | 0) != 0) {
  STACKTOP = sp; //@line 41723
  return;
 }
 $14 = HEAPU16[$1 >> 1] | 0; //@line 41727
 $19 = $14 >>> 3 & 56 | $14 >>> 9 & 7; //@line 41732
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($19 << 2) >> 2] & 127]($c, $19, 509, 8) | 0) != 0) {
  STACKTOP = sp; //@line 41739
  return;
 }
 if ((_e68_ea_set_val8($c, HEAP8[$val] | 0) | 0) != 0) {
  STACKTOP = sp; //@line 41747
  return;
 }
 $29 = $c + 372 | 0; //@line 41750
 HEAP32[$29 >> 2] = (HEAP32[$29 >> 2] | 0) + 4; //@line 41753
 _e68_cc_set_nz_8($c, 15, HEAP8[$val] | 0); //@line 41755
 $33 = $c + 156 | 0; //@line 41756
 $34 = HEAP32[$33 >> 2] | 0; //@line 41757
 if (($34 & 1 | 0) != 0) {
  _e68_exception_address($c, $34, 0, 0); //@line 41762
  STACKTOP = sp; //@line 41764
  return;
 }
 $39 = $c + 164 | 0; //@line 41767
 HEAP16[$c + 162 >> 1] = HEAP16[$39 >> 1] | 0; //@line 41770
 $42 = $34 & 16777215; //@line 41771
 $43 = $42 + 1 | 0; //@line 41772
 if ($43 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $49 = HEAP32[$c + 32 >> 2] | 0; //@line 41779
  $_0_i_i = HEAPU8[$49 + $42 | 0] << 8 | HEAPU8[$49 + $43 | 0]; //@line 41789
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $42) | 0; //@line 41797
 }
 HEAP16[$39 >> 1] = $_0_i_i; //@line 41800
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 2; //@line 41808
  $71 = $c + 152 | 0; //@line 41809
  HEAP32[$71 >> 2] = (HEAP32[$71 >> 2] | 0) + 2; //@line 41812
  STACKTOP = sp; //@line 41814
  return;
 } else {
  _e68_exception_bus($c); //@line 41817
  STACKTOP = sp; //@line 41819
  return;
 }
}
function _op2000($c) {
 $c = $c | 0;
 var $val = 0, $1 = 0, $4 = 0, $14 = 0, $19 = 0, $29 = 0, $33 = 0, $34 = 0, $39 = 0, $42 = 0, $43 = 0, $49 = 0, $_0_i_i = 0, $71 = 0, sp = 0;
 sp = STACKTOP; //@line 41837
 STACKTOP = STACKTOP + 8 | 0; //@line 41837
 $val = sp | 0; //@line 41838
 $1 = $c + 160 | 0; //@line 41839
 $4 = HEAP16[$1 >> 1] & 63; //@line 41842
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 4095, 32) | 0) != 0) {
  STACKTOP = sp; //@line 41849
  return;
 }
 if ((_e68_ea_get_val32($c, $val) | 0) != 0) {
  STACKTOP = sp; //@line 41856
  return;
 }
 $14 = HEAPU16[$1 >> 1] | 0; //@line 41860
 $19 = $14 >>> 3 & 56 | $14 >>> 9 & 7; //@line 41865
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($19 << 2) >> 2] & 127]($c, $19, 509, 32) | 0) != 0) {
  STACKTOP = sp; //@line 41872
  return;
 }
 if ((_e68_ea_set_val32($c, HEAP32[$val >> 2] | 0) | 0) != 0) {
  STACKTOP = sp; //@line 41880
  return;
 }
 $29 = $c + 372 | 0; //@line 41883
 HEAP32[$29 >> 2] = (HEAP32[$29 >> 2] | 0) + 4; //@line 41886
 _e68_cc_set_nz_32($c, 15, HEAP32[$val >> 2] | 0); //@line 41888
 $33 = $c + 156 | 0; //@line 41889
 $34 = HEAP32[$33 >> 2] | 0; //@line 41890
 if (($34 & 1 | 0) != 0) {
  _e68_exception_address($c, $34, 0, 0); //@line 41895
  STACKTOP = sp; //@line 41897
  return;
 }
 $39 = $c + 164 | 0; //@line 41900
 HEAP16[$c + 162 >> 1] = HEAP16[$39 >> 1] | 0; //@line 41903
 $42 = $34 & 16777215; //@line 41904
 $43 = $42 + 1 | 0; //@line 41905
 if ($43 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $49 = HEAP32[$c + 32 >> 2] | 0; //@line 41912
  $_0_i_i = HEAPU8[$49 + $42 | 0] << 8 | HEAPU8[$49 + $43 | 0]; //@line 41922
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $42) | 0; //@line 41930
 }
 HEAP16[$39 >> 1] = $_0_i_i; //@line 41933
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 2; //@line 41941
  $71 = $c + 152 | 0; //@line 41942
  HEAP32[$71 >> 2] = (HEAP32[$71 >> 2] | 0) + 2; //@line 41945
  STACKTOP = sp; //@line 41947
  return;
 } else {
  _e68_exception_bus($c); //@line 41950
  STACKTOP = sp; //@line 41952
  return;
 }
}
function _op2040($c) {
 $c = $c | 0;
 var $val = 0, $1 = 0, $4 = 0, $19 = 0, $22 = 0, $23 = 0, $28 = 0, $31 = 0, $32 = 0, $38 = 0, $_0_i_i = 0, $60 = 0, sp = 0;
 sp = STACKTOP; //@line 41968
 STACKTOP = STACKTOP + 8 | 0; //@line 41968
 $val = sp | 0; //@line 41969
 $1 = $c + 160 | 0; //@line 41970
 $4 = HEAP16[$1 >> 1] & 63; //@line 41973
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 4095, 32) | 0) != 0) {
  STACKTOP = sp; //@line 41980
  return;
 }
 if ((_e68_ea_get_val32($c, $val) | 0) != 0) {
  STACKTOP = sp; //@line 41987
  return;
 }
 HEAP32[$c + 120 + (((HEAPU16[$1 >> 1] | 0) >>> 9 & 7) << 2) >> 2] = HEAP32[$val >> 2]; //@line 41996
 $19 = $c + 372 | 0; //@line 41997
 HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 4; //@line 42000
 $22 = $c + 156 | 0; //@line 42001
 $23 = HEAP32[$22 >> 2] | 0; //@line 42002
 if (($23 & 1 | 0) != 0) {
  _e68_exception_address($c, $23, 0, 0); //@line 42007
  STACKTOP = sp; //@line 42009
  return;
 }
 $28 = $c + 164 | 0; //@line 42012
 HEAP16[$c + 162 >> 1] = HEAP16[$28 >> 1] | 0; //@line 42015
 $31 = $23 & 16777215; //@line 42016
 $32 = $31 + 1 | 0; //@line 42017
 if ($32 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $38 = HEAP32[$c + 32 >> 2] | 0; //@line 42024
  $_0_i_i = HEAPU8[$38 + $31 | 0] << 8 | HEAPU8[$38 + $32 | 0]; //@line 42034
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $31) | 0; //@line 42042
 }
 HEAP16[$28 >> 1] = $_0_i_i; //@line 42045
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + 2; //@line 42053
  $60 = $c + 152 | 0; //@line 42054
  HEAP32[$60 >> 2] = (HEAP32[$60 >> 2] | 0) + 2; //@line 42057
  STACKTOP = sp; //@line 42059
  return;
 } else {
  _e68_exception_bus($c); //@line 42062
  STACKTOP = sp; //@line 42064
  return;
 }
}
function _op3000($c) {
 $c = $c | 0;
 var $val = 0, $1 = 0, $4 = 0, $14 = 0, $19 = 0, $29 = 0, $33 = 0, $34 = 0, $39 = 0, $42 = 0, $43 = 0, $49 = 0, $_0_i_i = 0, $71 = 0, sp = 0;
 sp = STACKTOP; //@line 42082
 STACKTOP = STACKTOP + 8 | 0; //@line 42082
 $val = sp | 0; //@line 42083
 $1 = $c + 160 | 0; //@line 42084
 $4 = HEAP16[$1 >> 1] & 63; //@line 42087
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 4095, 16) | 0) != 0) {
  STACKTOP = sp; //@line 42094
  return;
 }
 if ((_e68_ea_get_val16($c, $val) | 0) != 0) {
  STACKTOP = sp; //@line 42101
  return;
 }
 $14 = HEAPU16[$1 >> 1] | 0; //@line 42105
 $19 = $14 >>> 3 & 56 | $14 >>> 9 & 7; //@line 42110
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($19 << 2) >> 2] & 127]($c, $19, 509, 16) | 0) != 0) {
  STACKTOP = sp; //@line 42117
  return;
 }
 if ((_e68_ea_set_val16($c, HEAP16[$val >> 1] | 0) | 0) != 0) {
  STACKTOP = sp; //@line 42125
  return;
 }
 $29 = $c + 372 | 0; //@line 42128
 HEAP32[$29 >> 2] = (HEAP32[$29 >> 2] | 0) + 4; //@line 42131
 _e68_cc_set_nz_16($c, 15, HEAP16[$val >> 1] | 0); //@line 42133
 $33 = $c + 156 | 0; //@line 42134
 $34 = HEAP32[$33 >> 2] | 0; //@line 42135
 if (($34 & 1 | 0) != 0) {
  _e68_exception_address($c, $34, 0, 0); //@line 42140
  STACKTOP = sp; //@line 42142
  return;
 }
 $39 = $c + 164 | 0; //@line 42145
 HEAP16[$c + 162 >> 1] = HEAP16[$39 >> 1] | 0; //@line 42148
 $42 = $34 & 16777215; //@line 42149
 $43 = $42 + 1 | 0; //@line 42150
 if ($43 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $49 = HEAP32[$c + 32 >> 2] | 0; //@line 42157
  $_0_i_i = HEAPU8[$49 + $42 | 0] << 8 | HEAPU8[$49 + $43 | 0]; //@line 42167
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $42) | 0; //@line 42175
 }
 HEAP16[$39 >> 1] = $_0_i_i; //@line 42178
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 2; //@line 42186
  $71 = $c + 152 | 0; //@line 42187
  HEAP32[$71 >> 2] = (HEAP32[$71 >> 2] | 0) + 2; //@line 42190
  STACKTOP = sp; //@line 42192
  return;
 } else {
  _e68_exception_bus($c); //@line 42195
  STACKTOP = sp; //@line 42197
  return;
 }
}
function _op3040($c) {
 $c = $c | 0;
 var $val = 0, $1 = 0, $4 = 0, $18 = 0, $24 = 0, $27 = 0, $28 = 0, $33 = 0, $36 = 0, $37 = 0, $43 = 0, $_0_i_i = 0, $65 = 0, sp = 0;
 sp = STACKTOP; //@line 42214
 STACKTOP = STACKTOP + 8 | 0; //@line 42214
 $val = sp | 0; //@line 42215
 $1 = $c + 160 | 0; //@line 42216
 $4 = HEAP16[$1 >> 1] & 63; //@line 42219
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 4095, 16) | 0) != 0) {
  STACKTOP = sp; //@line 42226
  return;
 }
 if ((_e68_ea_get_val16($c, $val) | 0) != 0) {
  STACKTOP = sp; //@line 42233
  return;
 }
 $18 = HEAPU16[$val >> 1] | 0; //@line 42241
 HEAP32[$c + 120 + (((HEAPU16[$1 >> 1] | 0) >>> 9 & 7) << 2) >> 2] = ($18 & 32768 | 0) != 0 ? $18 | -65536 : $18; //@line 42247
 $24 = $c + 372 | 0; //@line 42248
 HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + 4; //@line 42251
 $27 = $c + 156 | 0; //@line 42252
 $28 = HEAP32[$27 >> 2] | 0; //@line 42253
 if (($28 & 1 | 0) != 0) {
  _e68_exception_address($c, $28, 0, 0); //@line 42258
  STACKTOP = sp; //@line 42260
  return;
 }
 $33 = $c + 164 | 0; //@line 42263
 HEAP16[$c + 162 >> 1] = HEAP16[$33 >> 1] | 0; //@line 42266
 $36 = $28 & 16777215; //@line 42267
 $37 = $36 + 1 | 0; //@line 42268
 if ($37 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $43 = HEAP32[$c + 32 >> 2] | 0; //@line 42275
  $_0_i_i = HEAPU8[$43 + $36 | 0] << 8 | HEAPU8[$43 + $37 | 0]; //@line 42285
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $36) | 0; //@line 42293
 }
 HEAP16[$33 >> 1] = $_0_i_i; //@line 42296
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$27 >> 2] = (HEAP32[$27 >> 2] | 0) + 2; //@line 42304
  $65 = $c + 152 | 0; //@line 42305
  HEAP32[$65 >> 2] = (HEAP32[$65 >> 2] | 0) + 2; //@line 42308
  STACKTOP = sp; //@line 42310
  return;
 } else {
  _e68_exception_bus($c); //@line 42313
  STACKTOP = sp; //@line 42315
  return;
 }
}
function _op4000($c) {
 $c = $c | 0;
 var $s = 0, $4 = 0, $14 = 0, $15 = 0, $16 = 0, $19 = 0, $24 = 0, $26 = 0, $27 = 0, $30 = 0, $storemerge = 0, $storemerge15 = 0, $43 = 0, $44 = 0, $49 = 0, $52 = 0, $53 = 0, $59 = 0, $_0_i_i = 0, $81 = 0, sp = 0;
 sp = STACKTOP; //@line 42335
 STACKTOP = STACKTOP + 8 | 0; //@line 42335
 $s = sp | 0; //@line 42336
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 42340
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 509, 8) | 0) != 0) {
  STACKTOP = sp; //@line 42347
  return;
 }
 if ((_e68_ea_get_val8($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 42354
  return;
 }
 $14 = HEAPU8[$s] | 0; //@line 42358
 $15 = $c + 166 | 0; //@line 42359
 $16 = HEAP16[$15 >> 1] | 0; //@line 42360
 $19 = -((($16 & 65535) >>> 4 & 1) + $14 | 0) | 0; //@line 42365
 if (($19 & 255 | 0) == 0) {
  $26 = $16; //@line 42371
 } else {
  $24 = $16 & -5; //@line 42373
  HEAP16[$15 >> 1] = $24; //@line 42374
  $26 = $24; //@line 42376
 }
 $27 = $c + 372 | 0; //@line 42379
 HEAP32[$27 >> 2] = (HEAP32[$27 >> 2] | 0) + 8; //@line 42382
 $30 = $19 & 128; //@line 42383
 $storemerge = ($30 | 0) == 0 ? $26 & -9 : $26 | 8; //@line 42387
 $storemerge15 = ($30 & $14 | 0) == 0 ? $storemerge & -3 : $storemerge | 2; //@line 42392
 HEAP16[$15 >> 1] = (($14 | $19) & 128 | 0) == 0 ? $storemerge15 & -18 : $storemerge15 | 17; //@line 42399
 $43 = $c + 156 | 0; //@line 42400
 $44 = HEAP32[$43 >> 2] | 0; //@line 42401
 if (($44 & 1 | 0) != 0) {
  _e68_exception_address($c, $44, 0, 0); //@line 42406
  STACKTOP = sp; //@line 42408
  return;
 }
 $49 = $c + 164 | 0; //@line 42411
 HEAP16[$c + 162 >> 1] = HEAP16[$49 >> 1] | 0; //@line 42414
 $52 = $44 & 16777215; //@line 42415
 $53 = $52 + 1 | 0; //@line 42416
 if ($53 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $59 = HEAP32[$c + 32 >> 2] | 0; //@line 42423
  $_0_i_i = HEAPU8[$59 + $52 | 0] << 8 | HEAPU8[$59 + $53 | 0]; //@line 42433
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $52) | 0; //@line 42441
 }
 HEAP16[$49 >> 1] = $_0_i_i; //@line 42444
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) + 2; //@line 42452
  $81 = $c + 152 | 0; //@line 42453
  HEAP32[$81 >> 2] = (HEAP32[$81 >> 2] | 0) + 2; //@line 42456
  _e68_ea_set_val8($c, $19 & 255) | 0; //@line 42457
  STACKTOP = sp; //@line 42459
  return;
 } else {
  _e68_exception_bus($c); //@line 42462
  STACKTOP = sp; //@line 42464
  return;
 }
}
function _op4040($c) {
 $c = $c | 0;
 var $s = 0, $4 = 0, $14 = 0, $15 = 0, $16 = 0, $19 = 0, $24 = 0, $26 = 0, $27 = 0, $30 = 0, $storemerge = 0, $storemerge15 = 0, $43 = 0, $44 = 0, $49 = 0, $52 = 0, $53 = 0, $59 = 0, $_0_i_i = 0, $81 = 0, sp = 0;
 sp = STACKTOP; //@line 42484
 STACKTOP = STACKTOP + 8 | 0; //@line 42484
 $s = sp | 0; //@line 42485
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 42489
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 509, 16) | 0) != 0) {
  STACKTOP = sp; //@line 42496
  return;
 }
 if ((_e68_ea_get_val16($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 42503
  return;
 }
 $14 = HEAPU16[$s >> 1] | 0; //@line 42507
 $15 = $c + 166 | 0; //@line 42508
 $16 = HEAP16[$15 >> 1] | 0; //@line 42509
 $19 = -((($16 & 65535) >>> 4 & 1) + $14 | 0) | 0; //@line 42514
 if (($19 & 65535 | 0) == 0) {
  $26 = $16; //@line 42520
 } else {
  $24 = $16 & -5; //@line 42522
  HEAP16[$15 >> 1] = $24; //@line 42523
  $26 = $24; //@line 42525
 }
 $27 = $c + 372 | 0; //@line 42528
 HEAP32[$27 >> 2] = (HEAP32[$27 >> 2] | 0) + 8; //@line 42531
 $30 = $19 & 32768; //@line 42532
 $storemerge = ($30 | 0) == 0 ? $26 & -9 : $26 | 8; //@line 42536
 $storemerge15 = ($30 & $14 | 0) == 0 ? $storemerge & -3 : $storemerge | 2; //@line 42541
 HEAP16[$15 >> 1] = (($14 | $19) & 32768 | 0) == 0 ? $storemerge15 & -18 : $storemerge15 | 17; //@line 42548
 $43 = $c + 156 | 0; //@line 42549
 $44 = HEAP32[$43 >> 2] | 0; //@line 42550
 if (($44 & 1 | 0) != 0) {
  _e68_exception_address($c, $44, 0, 0); //@line 42555
  STACKTOP = sp; //@line 42557
  return;
 }
 $49 = $c + 164 | 0; //@line 42560
 HEAP16[$c + 162 >> 1] = HEAP16[$49 >> 1] | 0; //@line 42563
 $52 = $44 & 16777215; //@line 42564
 $53 = $52 + 1 | 0; //@line 42565
 if ($53 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $59 = HEAP32[$c + 32 >> 2] | 0; //@line 42572
  $_0_i_i = HEAPU8[$59 + $52 | 0] << 8 | HEAPU8[$59 + $53 | 0]; //@line 42582
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $52) | 0; //@line 42590
 }
 HEAP16[$49 >> 1] = $_0_i_i; //@line 42593
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) + 2; //@line 42601
  $81 = $c + 152 | 0; //@line 42602
  HEAP32[$81 >> 2] = (HEAP32[$81 >> 2] | 0) + 2; //@line 42605
  _e68_ea_set_val16($c, $19 & 65535) | 0; //@line 42606
  STACKTOP = sp; //@line 42608
  return;
 } else {
  _e68_exception_bus($c); //@line 42611
  STACKTOP = sp; //@line 42613
  return;
 }
}
function _op4080($c) {
 $c = $c | 0;
 var $s = 0, $4 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $_lobit = 0, $19 = 0, $22 = 0, $24 = 0, $25 = 0, $storemerge = 0, $storemerge15 = 0, $39 = 0, $40 = 0, $45 = 0, $48 = 0, $49 = 0, $55 = 0, $_0_i_i = 0, $77 = 0, sp = 0;
 sp = STACKTOP; //@line 42632
 STACKTOP = STACKTOP + 8 | 0; //@line 42632
 $s = sp | 0; //@line 42633
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 42637
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 509, 32) | 0) != 0) {
  STACKTOP = sp; //@line 42644
  return;
 }
 if ((_e68_ea_get_val32($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 42651
  return;
 }
 $13 = HEAP32[$s >> 2] | 0; //@line 42654
 $14 = -$13 | 0; //@line 42655
 $15 = $c + 166 | 0; //@line 42656
 $16 = HEAP16[$15 >> 1] | 0; //@line 42657
 $_lobit = ($16 & 65535) >>> 4 & 1; //@line 42660
 $19 = $14 - $_lobit | 0; //@line 42661
 if (($_lobit | 0) == ($14 | 0)) {
  $24 = $16; //@line 42665
 } else {
  $22 = $16 & -5; //@line 42667
  HEAP16[$15 >> 1] = $22; //@line 42668
  $24 = $22; //@line 42670
 }
 $25 = $c + 372 | 0; //@line 42673
 HEAP32[$25 >> 2] = (HEAP32[$25 >> 2] | 0) + 10; //@line 42676
 $storemerge = ($19 | 0) < 0 ? $24 | 8 : $24 & -9; //@line 42680
 $storemerge15 = ($13 & $19 | 0) < 0 ? $storemerge | 2 : $storemerge & -3; //@line 42685
 HEAP16[$15 >> 1] = ($13 | $19 | 0) < 0 ? $storemerge15 | 17 : $storemerge15 & -18; //@line 42691
 $39 = $c + 156 | 0; //@line 42692
 $40 = HEAP32[$39 >> 2] | 0; //@line 42693
 if (($40 & 1 | 0) != 0) {
  _e68_exception_address($c, $40, 0, 0); //@line 42698
  STACKTOP = sp; //@line 42700
  return;
 }
 $45 = $c + 164 | 0; //@line 42703
 HEAP16[$c + 162 >> 1] = HEAP16[$45 >> 1] | 0; //@line 42706
 $48 = $40 & 16777215; //@line 42707
 $49 = $48 + 1 | 0; //@line 42708
 if ($49 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $55 = HEAP32[$c + 32 >> 2] | 0; //@line 42715
  $_0_i_i = HEAPU8[$55 + $48 | 0] << 8 | HEAPU8[$55 + $49 | 0]; //@line 42725
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $48) | 0; //@line 42733
 }
 HEAP16[$45 >> 1] = $_0_i_i; //@line 42736
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 2; //@line 42744
  $77 = $c + 152 | 0; //@line 42745
  HEAP32[$77 >> 2] = (HEAP32[$77 >> 2] | 0) + 2; //@line 42748
  _e68_ea_set_val32($c, $19) | 0; //@line 42749
  STACKTOP = sp; //@line 42751
  return;
 } else {
  _e68_exception_bus($c); //@line 42754
  STACKTOP = sp; //@line 42756
  return;
 }
}
function _op40c0($c) {
 $c = $c | 0;
 var $s = 0, $14 = 0, $26 = 0, $29 = 0, $30 = 0, $35 = 0, $38 = 0, $39 = 0, $45 = 0, $_0_i_i = 0, $67 = 0, $70 = 0, sp = 0;
 sp = STACKTOP; //@line 42773
 STACKTOP = STACKTOP + 8 | 0; //@line 42773
 $s = sp | 0; //@line 42774
 do {
  if ((HEAP32[$c >> 2] & 2 | 0) != 0) {
   if ((HEAP8[$c + 334 | 0] | 0) != 0) {
    break;
   }
   _e68_exception_privilege($c); //@line 42789
   STACKTOP = sp; //@line 42791
   return;
  }
 } while (0);
 $14 = HEAP16[$c + 160 >> 1] & 63; //@line 42798
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($14 << 2) >> 2] & 127]($c, $14, 509, 16) | 0) != 0) {
  STACKTOP = sp; //@line 42805
  return;
 }
 if ((_e68_ea_get_val16($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 42812
  return;
 }
 HEAP16[$s >> 1] = HEAP16[$c + 166 >> 1] & -22753; //@line 42818
 $26 = $c + 372 | 0; //@line 42819
 HEAP32[$26 >> 2] = (HEAP32[$26 >> 2] | 0) + 4; //@line 42822
 $29 = $c + 156 | 0; //@line 42823
 $30 = HEAP32[$29 >> 2] | 0; //@line 42824
 if (($30 & 1 | 0) != 0) {
  _e68_exception_address($c, $30, 0, 0); //@line 42829
  STACKTOP = sp; //@line 42831
  return;
 }
 $35 = $c + 164 | 0; //@line 42834
 HEAP16[$c + 162 >> 1] = HEAP16[$35 >> 1] | 0; //@line 42837
 $38 = $30 & 16777215; //@line 42838
 $39 = $38 + 1 | 0; //@line 42839
 if ($39 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $45 = HEAP32[$c + 32 >> 2] | 0; //@line 42846
  $_0_i_i = HEAPU8[$45 + $38 | 0] << 8 | HEAPU8[$45 + $39 | 0]; //@line 42856
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $38) | 0; //@line 42864
 }
 HEAP16[$35 >> 1] = $_0_i_i; //@line 42867
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$29 >> 2] = (HEAP32[$29 >> 2] | 0) + 2; //@line 42875
  $67 = $c + 152 | 0; //@line 42876
  HEAP32[$67 >> 2] = (HEAP32[$67 >> 2] | 0) + 2; //@line 42879
  $70 = HEAP16[$s >> 1] | 0; //@line 42880
  _e68_ea_set_val16($c, $70) | 0; //@line 42881
  STACKTOP = sp; //@line 42883
  return;
 } else {
  _e68_exception_bus($c); //@line 42886
  STACKTOP = sp; //@line 42888
  return;
 }
}
function _op4180($c) {
 $c = $c | 0;
 var $s1 = 0, $1 = 0, $4 = 0, $18 = 0, $21 = 0, $24 = 0, $30 = 0, $34 = 0, $37 = 0, $41 = 0, $44 = 0, $45 = 0, $50 = 0, $53 = 0, $54 = 0, $60 = 0, $_0_i_i = 0, $82 = 0, sp = 0;
 sp = STACKTOP; //@line 42907
 STACKTOP = STACKTOP + 8 | 0; //@line 42907
 $s1 = sp | 0; //@line 42908
 $1 = $c + 160 | 0; //@line 42909
 $4 = HEAP16[$1 >> 1] & 63; //@line 42912
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 4093, 16) | 0) != 0) {
  STACKTOP = sp; //@line 42919
  return;
 }
 if ((_e68_ea_get_val16($c, $s1) | 0) != 0) {
  STACKTOP = sp; //@line 42926
  return;
 }
 $18 = HEAP32[$c + 88 + (((HEAPU16[$1 >> 1] | 0) >>> 9 & 7) << 2) >> 2] | 0; //@line 42934
 do {
  if (($18 & 32768 | 0) == 0) {
   $30 = HEAPU16[$s1 >> 1] | 0; //@line 42942
   if (($30 & 32768 | 0) != 0 | ($18 & 65535) >>> 0 > $30 >>> 0) {
    $34 = $c + 166 | 0; //@line 42949
    HEAP16[$34 >> 1] = HEAP16[$34 >> 1] & -9; //@line 42952
    $37 = $c + 372 | 0; //@line 42953
    HEAP32[$37 >> 2] = (HEAP32[$37 >> 2] | 0) + 14; //@line 42956
    break;
   }
   $41 = $c + 372 | 0; //@line 42959
   HEAP32[$41 >> 2] = (HEAP32[$41 >> 2] | 0) + 14; //@line 42962
   $44 = $c + 156 | 0; //@line 42963
   $45 = HEAP32[$44 >> 2] | 0; //@line 42964
   if (($45 & 1 | 0) != 0) {
    _e68_exception_address($c, $45, 0, 0); //@line 42969
    STACKTOP = sp; //@line 42971
    return;
   }
   $50 = $c + 164 | 0; //@line 42974
   HEAP16[$c + 162 >> 1] = HEAP16[$50 >> 1] | 0; //@line 42977
   $53 = $45 & 16777215; //@line 42978
   $54 = $53 + 1 | 0; //@line 42979
   if ($54 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
    $60 = HEAP32[$c + 32 >> 2] | 0; //@line 42986
    $_0_i_i = HEAPU8[$60 + $53 | 0] << 8 | HEAPU8[$60 + $54 | 0]; //@line 42996
   } else {
    $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $53) | 0; //@line 43004
   }
   HEAP16[$50 >> 1] = $_0_i_i; //@line 43007
   if ((HEAP8[$c + 336 | 0] | 0) == 0) {
    HEAP32[$44 >> 2] = (HEAP32[$44 >> 2] | 0) + 2; //@line 43015
    $82 = $c + 152 | 0; //@line 43016
    HEAP32[$82 >> 2] = (HEAP32[$82 >> 2] | 0) + 2; //@line 43019
    STACKTOP = sp; //@line 43021
    return;
   } else {
    _e68_exception_bus($c); //@line 43024
    STACKTOP = sp; //@line 43026
    return;
   }
  } else {
   $21 = $c + 166 | 0; //@line 43030
   HEAP16[$21 >> 1] = HEAP16[$21 >> 1] | 8; //@line 43033
   $24 = $c + 372 | 0; //@line 43034
   HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + 14; //@line 43037
  }
 } while (0);
 _e68_exception_check($c); //@line 43040
 STACKTOP = sp; //@line 43042
 return;
}
function _op4200($c) {
 $c = $c | 0;
 var $4 = 0, $13 = 0, $16 = 0, $20 = 0, $21 = 0, $26 = 0, $29 = 0, $30 = 0, $36 = 0, $_0_i_i = 0, $58 = 0, sp = 0;
 sp = STACKTOP; //@line 43057
 STACKTOP = STACKTOP + 8 | 0; //@line 43057
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 43062
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 509, 8) | 0) != 0) {
  STACKTOP = sp; //@line 43069
  return;
 }
 if ((_e68_ea_get_val8($c, sp | 0) | 0) != 0) {
  STACKTOP = sp; //@line 43076
  return;
 }
 $13 = $c + 372 | 0; //@line 43079
 HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 4; //@line 43082
 $16 = $c + 166 | 0; //@line 43083
 HEAP16[$16 >> 1] = HEAP16[$16 >> 1] & -16 | 4; //@line 43087
 $20 = $c + 156 | 0; //@line 43088
 $21 = HEAP32[$20 >> 2] | 0; //@line 43089
 if (($21 & 1 | 0) != 0) {
  _e68_exception_address($c, $21, 0, 0); //@line 43094
  STACKTOP = sp; //@line 43096
  return;
 }
 $26 = $c + 164 | 0; //@line 43099
 HEAP16[$c + 162 >> 1] = HEAP16[$26 >> 1] | 0; //@line 43102
 $29 = $21 & 16777215; //@line 43103
 $30 = $29 + 1 | 0; //@line 43104
 if ($30 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $36 = HEAP32[$c + 32 >> 2] | 0; //@line 43111
  $_0_i_i = HEAPU8[$36 + $29 | 0] << 8 | HEAPU8[$36 + $30 | 0]; //@line 43121
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $29) | 0; //@line 43129
 }
 HEAP16[$26 >> 1] = $_0_i_i; //@line 43132
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 2; //@line 43140
  $58 = $c + 152 | 0; //@line 43141
  HEAP32[$58 >> 2] = (HEAP32[$58 >> 2] | 0) + 2; //@line 43144
  _e68_ea_set_val8($c, 0) | 0; //@line 43145
  STACKTOP = sp; //@line 43147
  return;
 } else {
  _e68_exception_bus($c); //@line 43150
  STACKTOP = sp; //@line 43152
  return;
 }
}
function _op4240($c) {
 $c = $c | 0;
 var $4 = 0, $13 = 0, $16 = 0, $20 = 0, $21 = 0, $26 = 0, $29 = 0, $30 = 0, $36 = 0, $_0_i_i = 0, $58 = 0, sp = 0;
 sp = STACKTOP; //@line 43168
 STACKTOP = STACKTOP + 8 | 0; //@line 43168
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 43173
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 509, 16) | 0) != 0) {
  STACKTOP = sp; //@line 43180
  return;
 }
 if ((_e68_ea_get_val16($c, sp | 0) | 0) != 0) {
  STACKTOP = sp; //@line 43187
  return;
 }
 $13 = $c + 372 | 0; //@line 43190
 HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 4; //@line 43193
 $16 = $c + 166 | 0; //@line 43194
 HEAP16[$16 >> 1] = HEAP16[$16 >> 1] & -16 | 4; //@line 43198
 $20 = $c + 156 | 0; //@line 43199
 $21 = HEAP32[$20 >> 2] | 0; //@line 43200
 if (($21 & 1 | 0) != 0) {
  _e68_exception_address($c, $21, 0, 0); //@line 43205
  STACKTOP = sp; //@line 43207
  return;
 }
 $26 = $c + 164 | 0; //@line 43210
 HEAP16[$c + 162 >> 1] = HEAP16[$26 >> 1] | 0; //@line 43213
 $29 = $21 & 16777215; //@line 43214
 $30 = $29 + 1 | 0; //@line 43215
 if ($30 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $36 = HEAP32[$c + 32 >> 2] | 0; //@line 43222
  $_0_i_i = HEAPU8[$36 + $29 | 0] << 8 | HEAPU8[$36 + $30 | 0]; //@line 43232
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $29) | 0; //@line 43240
 }
 HEAP16[$26 >> 1] = $_0_i_i; //@line 43243
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 2; //@line 43251
  $58 = $c + 152 | 0; //@line 43252
  HEAP32[$58 >> 2] = (HEAP32[$58 >> 2] | 0) + 2; //@line 43255
  _e68_ea_set_val16($c, 0) | 0; //@line 43256
  STACKTOP = sp; //@line 43258
  return;
 } else {
  _e68_exception_bus($c); //@line 43261
  STACKTOP = sp; //@line 43263
  return;
 }
}
function _op4280($c) {
 $c = $c | 0;
 var $4 = 0, $13 = 0, $16 = 0, $20 = 0, $21 = 0, $26 = 0, $29 = 0, $30 = 0, $36 = 0, $_0_i_i = 0, $58 = 0, sp = 0;
 sp = STACKTOP; //@line 43279
 STACKTOP = STACKTOP + 8 | 0; //@line 43279
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 43284
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 509, 32) | 0) != 0) {
  STACKTOP = sp; //@line 43291
  return;
 }
 if ((_e68_ea_get_val32($c, sp | 0) | 0) != 0) {
  STACKTOP = sp; //@line 43298
  return;
 }
 $13 = $c + 372 | 0; //@line 43301
 HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 6; //@line 43304
 $16 = $c + 166 | 0; //@line 43305
 HEAP16[$16 >> 1] = HEAP16[$16 >> 1] & -16 | 4; //@line 43309
 $20 = $c + 156 | 0; //@line 43310
 $21 = HEAP32[$20 >> 2] | 0; //@line 43311
 if (($21 & 1 | 0) != 0) {
  _e68_exception_address($c, $21, 0, 0); //@line 43316
  STACKTOP = sp; //@line 43318
  return;
 }
 $26 = $c + 164 | 0; //@line 43321
 HEAP16[$c + 162 >> 1] = HEAP16[$26 >> 1] | 0; //@line 43324
 $29 = $21 & 16777215; //@line 43325
 $30 = $29 + 1 | 0; //@line 43326
 if ($30 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $36 = HEAP32[$c + 32 >> 2] | 0; //@line 43333
  $_0_i_i = HEAPU8[$36 + $29 | 0] << 8 | HEAPU8[$36 + $30 | 0]; //@line 43343
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $29) | 0; //@line 43351
 }
 HEAP16[$26 >> 1] = $_0_i_i; //@line 43354
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 2; //@line 43362
  $58 = $c + 152 | 0; //@line 43363
  HEAP32[$58 >> 2] = (HEAP32[$58 >> 2] | 0) + 2; //@line 43366
  _e68_ea_set_val32($c, 0) | 0; //@line 43367
  STACKTOP = sp; //@line 43369
  return;
 } else {
  _e68_exception_bus($c); //@line 43372
  STACKTOP = sp; //@line 43374
  return;
 }
}
function _op42c0($c) {
 $c = $c | 0;
 var $s = 0, $6 = 0, $13 = 0, $25 = 0, $28 = 0, $29 = 0, $34 = 0, $37 = 0, $38 = 0, $44 = 0, $_0_i_i = 0, $66 = 0, $69 = 0, sp = 0;
 sp = STACKTOP; //@line 43391
 STACKTOP = STACKTOP + 8 | 0; //@line 43391
 $s = sp | 0; //@line 43392
 if ((HEAP32[$c >> 2] & 2 | 0) == 0) {
  _e68_exception_illegal($c); //@line 43399
  $6 = $c + 372 | 0; //@line 43400
  HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 2; //@line 43403
  STACKTOP = sp; //@line 43405
  return;
 }
 $13 = HEAP16[$c + 160 >> 1] & 63; //@line 43411
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($13 << 2) >> 2] & 127]($c, $13, 509, 16) | 0) != 0) {
  STACKTOP = sp; //@line 43418
  return;
 }
 if ((_e68_ea_get_val16($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 43425
  return;
 }
 HEAP16[$s >> 1] = HEAP16[$c + 166 >> 1] & 31; //@line 43431
 $25 = $c + 372 | 0; //@line 43432
 HEAP32[$25 >> 2] = (HEAP32[$25 >> 2] | 0) + 4; //@line 43435
 $28 = $c + 156 | 0; //@line 43436
 $29 = HEAP32[$28 >> 2] | 0; //@line 43437
 if (($29 & 1 | 0) != 0) {
  _e68_exception_address($c, $29, 0, 0); //@line 43442
  STACKTOP = sp; //@line 43444
  return;
 }
 $34 = $c + 164 | 0; //@line 43447
 HEAP16[$c + 162 >> 1] = HEAP16[$34 >> 1] | 0; //@line 43450
 $37 = $29 & 16777215; //@line 43451
 $38 = $37 + 1 | 0; //@line 43452
 if ($38 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $44 = HEAP32[$c + 32 >> 2] | 0; //@line 43459
  $_0_i_i = HEAPU8[$44 + $37 | 0] << 8 | HEAPU8[$44 + $38 | 0]; //@line 43469
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $37) | 0; //@line 43477
 }
 HEAP16[$34 >> 1] = $_0_i_i; //@line 43480
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$28 >> 2] = (HEAP32[$28 >> 2] | 0) + 2; //@line 43488
  $66 = $c + 152 | 0; //@line 43489
  HEAP32[$66 >> 2] = (HEAP32[$66 >> 2] | 0) + 2; //@line 43492
  $69 = HEAP16[$s >> 1] | 0; //@line 43493
  _e68_ea_set_val16($c, $69) | 0; //@line 43494
  STACKTOP = sp; //@line 43496
  return;
 } else {
  _e68_exception_bus($c); //@line 43499
  STACKTOP = sp; //@line 43501
  return;
 }
}
function _op4400($c) {
 $c = $c | 0;
 var $s = 0, $4 = 0, $14 = 0, $15 = 0, $17 = 0, $21 = 0, $23 = 0, $24 = 0, $storemerge = 0, $storemerge14 = 0, $storemerge15 = 0, $39 = 0, $40 = 0, $45 = 0, $48 = 0, $49 = 0, $55 = 0, $_0_i_i = 0, $77 = 0, sp = 0;
 sp = STACKTOP; //@line 43520
 STACKTOP = STACKTOP + 8 | 0; //@line 43520
 $s = sp | 0; //@line 43521
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 43525
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 509, 8) | 0) != 0) {
  STACKTOP = sp; //@line 43532
  return;
 }
 if ((_e68_ea_get_val8($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 43539
  return;
 }
 $14 = HEAPU8[$s] | 0; //@line 43543
 $15 = -$14 | 0; //@line 43544
 $17 = $c + 372 | 0; //@line 43546
 HEAP32[$17 >> 2] = (HEAP32[$17 >> 2] | 0) + 4; //@line 43549
 $21 = $15 & 128; //@line 43551
 $23 = $c + 166 | 0; //@line 43553
 $24 = HEAP16[$23 >> 1] | 0; //@line 43554
 $storemerge = ($21 | 0) == 0 ? $24 & -9 : $24 | 8; //@line 43557
 $storemerge14 = ($21 & $14 | 0) == 0 ? $storemerge & -3 : $storemerge | 2; //@line 43562
 $storemerge15 = ($15 & 255 | 0) == 0 ? $storemerge14 | 4 : $storemerge14 & -5; //@line 43566
 HEAP16[$23 >> 1] = (($14 | $15) & 128 | 0) == 0 ? $storemerge15 & -18 : $storemerge15 | 17; //@line 43573
 $39 = $c + 156 | 0; //@line 43574
 $40 = HEAP32[$39 >> 2] | 0; //@line 43575
 if (($40 & 1 | 0) != 0) {
  _e68_exception_address($c, $40, 0, 0); //@line 43580
  STACKTOP = sp; //@line 43582
  return;
 }
 $45 = $c + 164 | 0; //@line 43585
 HEAP16[$c + 162 >> 1] = HEAP16[$45 >> 1] | 0; //@line 43588
 $48 = $40 & 16777215; //@line 43589
 $49 = $48 + 1 | 0; //@line 43590
 if ($49 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $55 = HEAP32[$c + 32 >> 2] | 0; //@line 43597
  $_0_i_i = HEAPU8[$55 + $48 | 0] << 8 | HEAPU8[$55 + $49 | 0]; //@line 43607
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $48) | 0; //@line 43615
 }
 HEAP16[$45 >> 1] = $_0_i_i; //@line 43618
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 2; //@line 43626
  $77 = $c + 152 | 0; //@line 43627
  HEAP32[$77 >> 2] = (HEAP32[$77 >> 2] | 0) + 2; //@line 43630
  _e68_ea_set_val8($c, $15 & 255) | 0; //@line 43631
  STACKTOP = sp; //@line 43633
  return;
 } else {
  _e68_exception_bus($c); //@line 43636
  STACKTOP = sp; //@line 43638
  return;
 }
}
function _op4440($c) {
 $c = $c | 0;
 var $s = 0, $4 = 0, $14 = 0, $15 = 0, $17 = 0, $21 = 0, $23 = 0, $24 = 0, $storemerge = 0, $storemerge14 = 0, $storemerge15 = 0, $39 = 0, $40 = 0, $45 = 0, $48 = 0, $49 = 0, $55 = 0, $_0_i_i = 0, $77 = 0, sp = 0;
 sp = STACKTOP; //@line 43657
 STACKTOP = STACKTOP + 8 | 0; //@line 43657
 $s = sp | 0; //@line 43658
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 43662
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 509, 16) | 0) != 0) {
  STACKTOP = sp; //@line 43669
  return;
 }
 if ((_e68_ea_get_val16($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 43676
  return;
 }
 $14 = HEAPU16[$s >> 1] | 0; //@line 43680
 $15 = -$14 | 0; //@line 43681
 $17 = $c + 372 | 0; //@line 43683
 HEAP32[$17 >> 2] = (HEAP32[$17 >> 2] | 0) + 4; //@line 43686
 $21 = $15 & 32768; //@line 43688
 $23 = $c + 166 | 0; //@line 43690
 $24 = HEAP16[$23 >> 1] | 0; //@line 43691
 $storemerge = ($21 | 0) == 0 ? $24 & -9 : $24 | 8; //@line 43694
 $storemerge14 = ($21 & $14 | 0) == 0 ? $storemerge & -3 : $storemerge | 2; //@line 43699
 $storemerge15 = ($15 & 65535 | 0) == 0 ? $storemerge14 | 4 : $storemerge14 & -5; //@line 43703
 HEAP16[$23 >> 1] = (($14 | $15) & 32768 | 0) == 0 ? $storemerge15 & -18 : $storemerge15 | 17; //@line 43710
 $39 = $c + 156 | 0; //@line 43711
 $40 = HEAP32[$39 >> 2] | 0; //@line 43712
 if (($40 & 1 | 0) != 0) {
  _e68_exception_address($c, $40, 0, 0); //@line 43717
  STACKTOP = sp; //@line 43719
  return;
 }
 $45 = $c + 164 | 0; //@line 43722
 HEAP16[$c + 162 >> 1] = HEAP16[$45 >> 1] | 0; //@line 43725
 $48 = $40 & 16777215; //@line 43726
 $49 = $48 + 1 | 0; //@line 43727
 if ($49 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $55 = HEAP32[$c + 32 >> 2] | 0; //@line 43734
  $_0_i_i = HEAPU8[$55 + $48 | 0] << 8 | HEAPU8[$55 + $49 | 0]; //@line 43744
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $48) | 0; //@line 43752
 }
 HEAP16[$45 >> 1] = $_0_i_i; //@line 43755
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 2; //@line 43763
  $77 = $c + 152 | 0; //@line 43764
  HEAP32[$77 >> 2] = (HEAP32[$77 >> 2] | 0) + 2; //@line 43767
  _e68_ea_set_val16($c, $15 & 65535) | 0; //@line 43768
  STACKTOP = sp; //@line 43770
  return;
 } else {
  _e68_exception_bus($c); //@line 43773
  STACKTOP = sp; //@line 43775
  return;
 }
}
function _op4480($c) {
 $c = $c | 0;
 var $s = 0, $4 = 0, $13 = 0, $14 = 0, $15 = 0, $19 = 0, $20 = 0, $storemerge = 0, $storemerge14 = 0, $storemerge15 = 0, $34 = 0, $35 = 0, $40 = 0, $43 = 0, $44 = 0, $50 = 0, $_0_i_i = 0, $72 = 0, sp = 0;
 sp = STACKTOP; //@line 43794
 STACKTOP = STACKTOP + 8 | 0; //@line 43794
 $s = sp | 0; //@line 43795
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 43799
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 509, 32) | 0) != 0) {
  STACKTOP = sp; //@line 43806
  return;
 }
 if ((_e68_ea_get_val32($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 43813
  return;
 }
 $13 = HEAP32[$s >> 2] | 0; //@line 43816
 $14 = -$13 | 0; //@line 43817
 $15 = $c + 372 | 0; //@line 43818
 HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + 6; //@line 43821
 $19 = $c + 166 | 0; //@line 43823
 $20 = HEAP16[$19 >> 1] | 0; //@line 43824
 $storemerge = ($14 | 0) < 0 ? $20 | 8 : $20 & -9; //@line 43827
 $storemerge14 = ($13 & $14 | 0) < 0 ? $storemerge | 2 : $storemerge & -3; //@line 43832
 $storemerge15 = ($13 | 0) == 0 ? $storemerge14 | 4 : $storemerge14 & -5; //@line 43836
 HEAP16[$19 >> 1] = ($13 | $14 | 0) < 0 ? $storemerge15 | 17 : $storemerge15 & -18; //@line 43842
 $34 = $c + 156 | 0; //@line 43843
 $35 = HEAP32[$34 >> 2] | 0; //@line 43844
 if (($35 & 1 | 0) != 0) {
  _e68_exception_address($c, $35, 0, 0); //@line 43849
  STACKTOP = sp; //@line 43851
  return;
 }
 $40 = $c + 164 | 0; //@line 43854
 HEAP16[$c + 162 >> 1] = HEAP16[$40 >> 1] | 0; //@line 43857
 $43 = $35 & 16777215; //@line 43858
 $44 = $43 + 1 | 0; //@line 43859
 if ($44 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $50 = HEAP32[$c + 32 >> 2] | 0; //@line 43866
  $_0_i_i = HEAPU8[$50 + $43 | 0] << 8 | HEAPU8[$50 + $44 | 0]; //@line 43876
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $43) | 0; //@line 43884
 }
 HEAP16[$40 >> 1] = $_0_i_i; //@line 43887
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$34 >> 2] = (HEAP32[$34 >> 2] | 0) + 2; //@line 43895
  $72 = $c + 152 | 0; //@line 43896
  HEAP32[$72 >> 2] = (HEAP32[$72 >> 2] | 0) + 2; //@line 43899
  _e68_ea_set_val32($c, $14) | 0; //@line 43900
  STACKTOP = sp; //@line 43902
  return;
 } else {
  _e68_exception_bus($c); //@line 43905
  STACKTOP = sp; //@line 43907
  return;
 }
}
function _op44c0($c) {
 $c = $c | 0;
 var $s = 0, $4 = 0, $13 = 0, $17 = 0, $22 = 0, $23 = 0, $28 = 0, $31 = 0, $32 = 0, $38 = 0, $_0_i_i = 0, $60 = 0, sp = 0;
 sp = STACKTOP; //@line 43923
 STACKTOP = STACKTOP + 8 | 0; //@line 43923
 $s = sp | 0; //@line 43924
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 43928
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 4093, 16) | 0) != 0) {
  STACKTOP = sp; //@line 43935
  return;
 }
 if ((_e68_ea_get_val16($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 43942
  return;
 }
 $13 = $c + 372 | 0; //@line 43945
 HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 12; //@line 43948
 $17 = $c + 166 | 0; //@line 43950
 HEAP16[$17 >> 1] = HEAP16[$17 >> 1] & -256 | HEAP16[$s >> 1] & 31; //@line 43955
 $22 = $c + 156 | 0; //@line 43956
 $23 = HEAP32[$22 >> 2] | 0; //@line 43957
 if (($23 & 1 | 0) != 0) {
  _e68_exception_address($c, $23, 0, 0); //@line 43962
  STACKTOP = sp; //@line 43964
  return;
 }
 $28 = $c + 164 | 0; //@line 43967
 HEAP16[$c + 162 >> 1] = HEAP16[$28 >> 1] | 0; //@line 43970
 $31 = $23 & 16777215; //@line 43971
 $32 = $31 + 1 | 0; //@line 43972
 if ($32 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $38 = HEAP32[$c + 32 >> 2] | 0; //@line 43979
  $_0_i_i = HEAPU8[$38 + $31 | 0] << 8 | HEAPU8[$38 + $32 | 0]; //@line 43989
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $31) | 0; //@line 43997
 }
 HEAP16[$28 >> 1] = $_0_i_i; //@line 44000
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + 2; //@line 44008
  $60 = $c + 152 | 0; //@line 44009
  HEAP32[$60 >> 2] = (HEAP32[$60 >> 2] | 0) + 2; //@line 44012
  STACKTOP = sp; //@line 44014
  return;
 } else {
  _e68_exception_bus($c); //@line 44017
  STACKTOP = sp; //@line 44019
  return;
 }
}
function _op4600($c) {
 $c = $c | 0;
 var $s = 0, $4 = 0, $14 = 0, $15 = 0, $18 = 0, $19 = 0, $24 = 0, $27 = 0, $28 = 0, $34 = 0, $_0_i_i = 0, $56 = 0, sp = 0;
 sp = STACKTOP; //@line 44035
 STACKTOP = STACKTOP + 8 | 0; //@line 44035
 $s = sp | 0; //@line 44036
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 44040
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 509, 8) | 0) != 0) {
  STACKTOP = sp; //@line 44047
  return;
 }
 if ((_e68_ea_get_val8($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 44054
  return;
 }
 $14 = ~HEAP8[$s]; //@line 44058
 $15 = $c + 372 | 0; //@line 44059
 HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + 4; //@line 44062
 _e68_cc_set_nz_8($c, 15, $14); //@line 44063
 $18 = $c + 156 | 0; //@line 44064
 $19 = HEAP32[$18 >> 2] | 0; //@line 44065
 if (($19 & 1 | 0) != 0) {
  _e68_exception_address($c, $19, 0, 0); //@line 44070
  STACKTOP = sp; //@line 44072
  return;
 }
 $24 = $c + 164 | 0; //@line 44075
 HEAP16[$c + 162 >> 1] = HEAP16[$24 >> 1] | 0; //@line 44078
 $27 = $19 & 16777215; //@line 44079
 $28 = $27 + 1 | 0; //@line 44080
 if ($28 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $34 = HEAP32[$c + 32 >> 2] | 0; //@line 44087
  $_0_i_i = HEAPU8[$34 + $27 | 0] << 8 | HEAPU8[$34 + $28 | 0]; //@line 44097
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $27) | 0; //@line 44105
 }
 HEAP16[$24 >> 1] = $_0_i_i; //@line 44108
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 2; //@line 44116
  $56 = $c + 152 | 0; //@line 44117
  HEAP32[$56 >> 2] = (HEAP32[$56 >> 2] | 0) + 2; //@line 44120
  _e68_ea_set_val8($c, $14) | 0; //@line 44121
  STACKTOP = sp; //@line 44123
  return;
 } else {
  _e68_exception_bus($c); //@line 44126
  STACKTOP = sp; //@line 44128
  return;
 }
}
function _op4640($c) {
 $c = $c | 0;
 var $s = 0, $4 = 0, $14 = 0, $15 = 0, $18 = 0, $19 = 0, $24 = 0, $27 = 0, $28 = 0, $34 = 0, $_0_i_i = 0, $56 = 0, sp = 0;
 sp = STACKTOP; //@line 44144
 STACKTOP = STACKTOP + 8 | 0; //@line 44144
 $s = sp | 0; //@line 44145
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 44149
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 509, 16) | 0) != 0) {
  STACKTOP = sp; //@line 44156
  return;
 }
 if ((_e68_ea_get_val16($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 44163
  return;
 }
 $14 = ~HEAP16[$s >> 1]; //@line 44167
 $15 = $c + 372 | 0; //@line 44168
 HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + 4; //@line 44171
 _e68_cc_set_nz_16($c, 15, $14); //@line 44172
 $18 = $c + 156 | 0; //@line 44173
 $19 = HEAP32[$18 >> 2] | 0; //@line 44174
 if (($19 & 1 | 0) != 0) {
  _e68_exception_address($c, $19, 0, 0); //@line 44179
  STACKTOP = sp; //@line 44181
  return;
 }
 $24 = $c + 164 | 0; //@line 44184
 HEAP16[$c + 162 >> 1] = HEAP16[$24 >> 1] | 0; //@line 44187
 $27 = $19 & 16777215; //@line 44188
 $28 = $27 + 1 | 0; //@line 44189
 if ($28 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $34 = HEAP32[$c + 32 >> 2] | 0; //@line 44196
  $_0_i_i = HEAPU8[$34 + $27 | 0] << 8 | HEAPU8[$34 + $28 | 0]; //@line 44206
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $27) | 0; //@line 44214
 }
 HEAP16[$24 >> 1] = $_0_i_i; //@line 44217
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 2; //@line 44225
  $56 = $c + 152 | 0; //@line 44226
  HEAP32[$56 >> 2] = (HEAP32[$56 >> 2] | 0) + 2; //@line 44229
  _e68_ea_set_val16($c, $14) | 0; //@line 44230
  STACKTOP = sp; //@line 44232
  return;
 } else {
  _e68_exception_bus($c); //@line 44235
  STACKTOP = sp; //@line 44237
  return;
 }
}
function _op4680($c) {
 $c = $c | 0;
 var $s = 0, $4 = 0, $14 = 0, $15 = 0, $18 = 0, $19 = 0, $24 = 0, $27 = 0, $28 = 0, $34 = 0, $_0_i_i = 0, $56 = 0, sp = 0;
 sp = STACKTOP; //@line 44253
 STACKTOP = STACKTOP + 8 | 0; //@line 44253
 $s = sp | 0; //@line 44254
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 44258
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 509, 32) | 0) != 0) {
  STACKTOP = sp; //@line 44265
  return;
 }
 if ((_e68_ea_get_val32($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 44272
  return;
 }
 $14 = ~HEAP32[$s >> 2]; //@line 44276
 $15 = $c + 372 | 0; //@line 44277
 HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + 6; //@line 44280
 _e68_cc_set_nz_32($c, 15, $14); //@line 44281
 $18 = $c + 156 | 0; //@line 44282
 $19 = HEAP32[$18 >> 2] | 0; //@line 44283
 if (($19 & 1 | 0) != 0) {
  _e68_exception_address($c, $19, 0, 0); //@line 44288
  STACKTOP = sp; //@line 44290
  return;
 }
 $24 = $c + 164 | 0; //@line 44293
 HEAP16[$c + 162 >> 1] = HEAP16[$24 >> 1] | 0; //@line 44296
 $27 = $19 & 16777215; //@line 44297
 $28 = $27 + 1 | 0; //@line 44298
 if ($28 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $34 = HEAP32[$c + 32 >> 2] | 0; //@line 44305
  $_0_i_i = HEAPU8[$34 + $27 | 0] << 8 | HEAPU8[$34 + $28 | 0]; //@line 44315
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $27) | 0; //@line 44323
 }
 HEAP16[$24 >> 1] = $_0_i_i; //@line 44326
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 2; //@line 44334
  $56 = $c + 152 | 0; //@line 44335
  HEAP32[$56 >> 2] = (HEAP32[$56 >> 2] | 0) + 2; //@line 44338
  _e68_ea_set_val32($c, $14) | 0; //@line 44339
  STACKTOP = sp; //@line 44341
  return;
 } else {
  _e68_exception_bus($c); //@line 44344
  STACKTOP = sp; //@line 44346
  return;
 }
}
function _op46c0($c) {
 $c = $c | 0;
 var $s = 0, $9 = 0, $18 = 0, $23 = 0, $24 = 0, $29 = 0, $32 = 0, $33 = 0, $39 = 0, $_0_i_i = 0, $61 = 0, sp = 0;
 sp = STACKTOP; //@line 44362
 STACKTOP = STACKTOP + 8 | 0; //@line 44362
 $s = sp | 0; //@line 44363
 if ((HEAP8[$c + 334 | 0] | 0) == 0) {
  _e68_exception_privilege($c); //@line 44369
  STACKTOP = sp; //@line 44371
  return;
 }
 $9 = HEAP16[$c + 160 >> 1] & 63; //@line 44377
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($9 << 2) >> 2] & 127]($c, $9, 4093, 16) | 0) != 0) {
  STACKTOP = sp; //@line 44384
  return;
 }
 if ((_e68_ea_get_val16($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 44391
  return;
 }
 $18 = $c + 372 | 0; //@line 44394
 HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 12; //@line 44397
 _e68_set_sr($c, HEAP16[$s >> 1] & -22753); //@line 44400
 $23 = $c + 156 | 0; //@line 44401
 $24 = HEAP32[$23 >> 2] | 0; //@line 44402
 if (($24 & 1 | 0) != 0) {
  _e68_exception_address($c, $24, 0, 0); //@line 44407
  STACKTOP = sp; //@line 44409
  return;
 }
 $29 = $c + 164 | 0; //@line 44412
 HEAP16[$c + 162 >> 1] = HEAP16[$29 >> 1] | 0; //@line 44415
 $32 = $24 & 16777215; //@line 44416
 $33 = $32 + 1 | 0; //@line 44417
 if ($33 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $39 = HEAP32[$c + 32 >> 2] | 0; //@line 44424
  $_0_i_i = HEAPU8[$39 + $32 | 0] << 8 | HEAPU8[$39 + $33 | 0]; //@line 44434
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $32) | 0; //@line 44442
 }
 HEAP16[$29 >> 1] = $_0_i_i; //@line 44445
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$23 >> 2] = (HEAP32[$23 >> 2] | 0) + 2; //@line 44453
  $61 = $c + 152 | 0; //@line 44454
  HEAP32[$61 >> 2] = (HEAP32[$61 >> 2] | 0) + 2; //@line 44457
  STACKTOP = sp; //@line 44459
  return;
 } else {
  _e68_exception_bus($c); //@line 44462
  STACKTOP = sp; //@line 44464
  return;
 }
}
function _op4800($c) {
 $c = $c | 0;
 var $s = 0, $4 = 0, $15 = 0, $16 = 0, $sum = 0, $18 = 0, $d_0 = 0, $d_0_ = 0, $25 = 0, $storemerge = 0, $33 = 0, $36 = 0, $37 = 0, $42 = 0, $45 = 0, $46 = 0, $52 = 0, $_0_i_i = 0, $74 = 0, $77 = 0, sp = 0;
 sp = STACKTOP; //@line 44483
 STACKTOP = STACKTOP + 8 | 0; //@line 44483
 $s = sp | 0; //@line 44484
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 44488
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 509, 8) | 0) != 0) {
  STACKTOP = sp; //@line 44495
  return;
 }
 if ((_e68_ea_get_val8($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 44502
  return;
 }
 $15 = $c + 166 | 0; //@line 44507
 $16 = HEAP16[$15 >> 1] | 0; //@line 44508
 $sum = (($16 & 65535) >>> 4 & 1) + (HEAPU8[$s] | 0) & 65535; //@line 44511
 $18 = -$sum & 65535; //@line 44512
 $d_0 = ($18 & 15) == 0 ? $18 : -6 - $sum & 65535; //@line 44516
 $d_0_ = ($d_0 & 240) == 0 ? $d_0 : $d_0 - 96 & 65535; //@line 44520
 $25 = $d_0_ & 65535; //@line 44521
 $storemerge = ($25 & 65280 | 0) == 0 ? $16 & -18 : $16 | 17; //@line 44526
 HEAP16[$15 >> 1] = ($25 & 255 | 0) == 0 ? $storemerge : $storemerge & -5; //@line 44531
 $33 = $c + 372 | 0; //@line 44532
 HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 6; //@line 44535
 $36 = $c + 156 | 0; //@line 44536
 $37 = HEAP32[$36 >> 2] | 0; //@line 44537
 if (($37 & 1 | 0) != 0) {
  _e68_exception_address($c, $37, 0, 0); //@line 44542
  STACKTOP = sp; //@line 44544
  return;
 }
 $42 = $c + 164 | 0; //@line 44547
 HEAP16[$c + 162 >> 1] = HEAP16[$42 >> 1] | 0; //@line 44550
 $45 = $37 & 16777215; //@line 44551
 $46 = $45 + 1 | 0; //@line 44552
 if ($46 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $52 = HEAP32[$c + 32 >> 2] | 0; //@line 44559
  $_0_i_i = HEAPU8[$52 + $45 | 0] << 8 | HEAPU8[$52 + $46 | 0]; //@line 44569
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $45) | 0; //@line 44577
 }
 HEAP16[$42 >> 1] = $_0_i_i; //@line 44580
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$36 >> 2] = (HEAP32[$36 >> 2] | 0) + 2; //@line 44588
  $74 = $c + 152 | 0; //@line 44589
  HEAP32[$74 >> 2] = (HEAP32[$74 >> 2] | 0) + 2; //@line 44592
  $77 = $d_0_ & 255; //@line 44593
  _e68_ea_set_val8($c, $77) | 0; //@line 44594
  STACKTOP = sp; //@line 44596
  return;
 } else {
  _e68_exception_bus($c); //@line 44599
  STACKTOP = sp; //@line 44601
  return;
 }
}
function _op4840($c) {
 $c = $c | 0;
 var $3 = 0, $8 = 0, $9 = 0, $12 = 0, $13 = 0, $16 = 0, $17 = 0, $22 = 0, $25 = 0, $26 = 0, $32 = 0, $_0_i_i_i = 0, $54 = 0, $58 = 0, $69 = 0, $73 = 0, $74 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $85 = 0, $106 = 0, $107 = 0, $112 = 0, $115 = 0, $116 = 0, $121 = 0, $_0_i_i = 0, $143 = 0;
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 44629
 if (($3 & 56 | 0) == 0) {
  $8 = $c + 88 + (($3 & 7) << 2) | 0; //@line 44635
  $9 = HEAP32[$8 >> 2] | 0; //@line 44636
  $12 = $9 << 16 | $9 >>> 16; //@line 44639
  $13 = $c + 372 | 0; //@line 44640
  HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 4; //@line 44643
  _e68_cc_set_nz_32($c, 15, $12); //@line 44644
  HEAP32[$8 >> 2] = $12; //@line 44645
  $16 = $c + 156 | 0; //@line 44646
  $17 = HEAP32[$16 >> 2] | 0; //@line 44647
  if (($17 & 1 | 0) != 0) {
   _e68_exception_address($c, $17, 0, 0); //@line 44652
   return;
  }
  $22 = $c + 164 | 0; //@line 44657
  HEAP16[$c + 162 >> 1] = HEAP16[$22 >> 1] | 0; //@line 44660
  $25 = $17 & 16777215; //@line 44661
  $26 = $25 + 1 | 0; //@line 44662
  if ($26 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $32 = HEAP32[$c + 32 >> 2] | 0; //@line 44669
   $_0_i_i_i = HEAPU8[$32 + $25 | 0] << 8 | HEAPU8[$32 + $26 | 0]; //@line 44679
  } else {
   $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $25) | 0; //@line 44687
  }
  HEAP16[$22 >> 1] = $_0_i_i_i; //@line 44690
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$16 >> 2] = (HEAP32[$16 >> 2] | 0) + 2; //@line 44698
   $54 = $c + 152 | 0; //@line 44699
   HEAP32[$54 >> 2] = (HEAP32[$54 >> 2] | 0) + 2; //@line 44702
   return;
  } else {
   _e68_exception_bus($c); //@line 44707
   return;
  }
 }
 $58 = $3 & 63; //@line 44713
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($58 << 2) >> 2] & 127]($c, $58, 2020, 32) | 0) != 0) {
  return;
 }
 if ((HEAP32[$c + 340 >> 2] | 0) != 2) {
  _e68_exception_illegal($c); //@line 44728
  return;
 }
 $69 = $c + 372 | 0; //@line 44733
 HEAP32[$69 >> 2] = (HEAP32[$69 >> 2] | 0) + 12; //@line 44736
 $73 = HEAP32[$c + 344 >> 2] | 0; //@line 44738
 $74 = $c + 148 | 0; //@line 44739
 $76 = (HEAP32[$74 >> 2] | 0) - 4 | 0; //@line 44741
 $77 = $76 & 16777215; //@line 44742
 $78 = $77 + 3 | 0; //@line 44743
 $79 = $c + 36 | 0; //@line 44744
 if ($78 >>> 0 < (HEAP32[$79 >> 2] | 0) >>> 0) {
  $85 = $c + 32 | 0; //@line 44751
  HEAP8[(HEAP32[$85 >> 2] | 0) + $77 | 0] = $73 >>> 24 & 255; //@line 44754
  HEAP8[(HEAP32[$85 >> 2] | 0) + ($77 + 1) | 0] = $73 >>> 16 & 255; //@line 44760
  HEAP8[(HEAP32[$85 >> 2] | 0) + ($77 + 2) | 0] = $73 >>> 8 & 255; //@line 44766
  HEAP8[(HEAP32[$85 >> 2] | 0) + $78 | 0] = $73 & 255; //@line 44770
 } else {
  FUNCTION_TABLE_viii[HEAP32[$c + 28 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $77, $73); //@line 44777
 }
 HEAP32[$74 >> 2] = $76; //@line 44779
 $106 = $c + 156 | 0; //@line 44780
 $107 = HEAP32[$106 >> 2] | 0; //@line 44781
 if (($107 & 1 | 0) != 0) {
  _e68_exception_address($c, $107, 0, 0); //@line 44786
  return;
 }
 $112 = $c + 164 | 0; //@line 44791
 HEAP16[$c + 162 >> 1] = HEAP16[$112 >> 1] | 0; //@line 44794
 $115 = $107 & 16777215; //@line 44795
 $116 = $115 + 1 | 0; //@line 44796
 if ($116 >>> 0 < (HEAP32[$79 >> 2] | 0) >>> 0) {
  $121 = HEAP32[$c + 32 >> 2] | 0; //@line 44802
  $_0_i_i = HEAPU8[$121 + $115 | 0] << 8 | HEAPU8[$121 + $116 | 0]; //@line 44812
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $115) | 0; //@line 44820
 }
 HEAP16[$112 >> 1] = $_0_i_i; //@line 44823
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$106 >> 2] = (HEAP32[$106 >> 2] | 0) + 2; //@line 44831
  $143 = $c + 152 | 0; //@line 44832
  HEAP32[$143 >> 2] = (HEAP32[$143 >> 2] | 0) + 2; //@line 44835
  return;
 } else {
  _e68_exception_bus($c); //@line 44840
  return;
 }
}
function _op4880($c) {
 $c = $c | 0;
 var $1 = 0, $3 = 0, $5 = 0, $8 = 0, $9 = 0, $14 = 0, $16 = 0, $23 = 0, $24 = 0, $29 = 0, $32 = 0, $33 = 0, $39 = 0, $_0_i_i_i = 0, $61 = 0, $65 = 0, $66 = 0, $71 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $81 = 0, $_0_i_i_i4 = 0, $96 = 0, $103 = 0, $106 = 0, $111 = 0, $r_0_ph_i = 0, $118 = 0, $119 = 0, $120 = 0, $121 = 0, $a_029_i = 0, $r_028_i = 0, $i_027_i = 0, $130 = 0, $_sink_in_i = 0, $_sink_i = 0, $141 = 0, $142 = 0, $143 = 0, $a_1_i = 0, $161 = 0, $170 = 0, $176 = 0, $177 = 0, $181 = 0, $_0_i_i23_i = 0, $204 = 0, $205 = 0, $210 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $220 = 0, $_0_i_i_i6 = 0, $235 = 0, $242 = 0, $245 = 0, $248 = 0, $260 = 0, $r_0_ph_i8 = 0, $267 = 0, $268 = 0, $269 = 0, $270 = 0, $a_028_i = 0, $r_027_i = 0, $i_026_i = 0, $280 = 0, $_sink_in_i10 = 0, $_sink_i11 = 0, $286 = 0, $287 = 0, $288 = 0, $a_1_i13 = 0, $307 = 0, $312 = 0, $318 = 0, $319 = 0, $323 = 0, $_0_i_i22_i = 0;
 $1 = $c + 160 | 0; //@line 44890
 $3 = HEAPU16[$1 >> 1] | 0; //@line 44892
 $5 = $3 >>> 3 & 7; //@line 44894
 if (($5 | 0) == 4) {
  $65 = $c + 156 | 0; //@line 44896
  $66 = HEAP32[$65 >> 2] | 0; //@line 44897
  if (($66 & 1 | 0) != 0) {
   _e68_exception_address($c, $66, 0, 0); //@line 44902
   return;
  }
  $71 = $c + 164 | 0; //@line 44907
  $73 = $c + 162 | 0; //@line 44909
  HEAP16[$73 >> 1] = HEAP16[$71 >> 1] | 0; //@line 44910
  $74 = $66 & 16777215; //@line 44911
  $75 = $74 + 1 | 0; //@line 44912
  $76 = $c + 36 | 0; //@line 44913
  if ($75 >>> 0 < (HEAP32[$76 >> 2] | 0) >>> 0) {
   $81 = HEAP32[$c + 32 >> 2] | 0; //@line 44919
   $_0_i_i_i4 = HEAPU8[$81 + $74 | 0] << 8 | HEAPU8[$81 + $75 | 0]; //@line 44929
  } else {
   $_0_i_i_i4 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $74) | 0; //@line 44937
  }
  HEAP16[$71 >> 1] = $_0_i_i_i4; //@line 44940
  $96 = $c + 336 | 0; //@line 44941
  if ((HEAP8[$96] | 0) != 0) {
   _e68_exception_bus($c); //@line 44946
   return;
  }
  HEAP32[$65 >> 2] = (HEAP32[$65 >> 2] | 0) + 2; //@line 44953
  $103 = $c + 152 | 0; //@line 44954
  HEAP32[$103 >> 2] = (HEAP32[$103 >> 2] | 0) + 2; //@line 44957
  $106 = HEAP16[$73 >> 1] | 0; //@line 44958
  $111 = HEAP32[$c + 120 + ((HEAP16[$1 >> 1] & 7) << 2) >> 2] | 0; //@line 44963
  do {
   if ($106 << 16 >> 16 == 0) {
    $r_0_ph_i = 0; //@line 44968
   } else {
    if ((HEAP32[$c >> 2] & 1 | 0) != 0) {
     $r_0_ph_i = $106; //@line 44976
     break;
    }
    if (($111 & 1 | 0) == 0) {
     $r_0_ph_i = $106; //@line 44983
     break;
    }
    _e68_exception_address($c, $111, 1, 1); //@line 44986
    return;
   }
  } while (0);
  $118 = $c + 32 | 0; //@line 44993
  $119 = $c + 372 | 0; //@line 44994
  $120 = $c + 24 | 0; //@line 44995
  $121 = $c + 4 | 0; //@line 44996
  $i_027_i = 0;
  $r_028_i = $r_0_ph_i;
  $a_029_i = $111;
  while (1) {
   if (($r_028_i & 1) == 0) {
    $a_1_i = $a_029_i; //@line 45007
   } else {
    $130 = $a_029_i - 2 | 0; //@line 45009
    if ($i_027_i >>> 0 < 8) {
     $_sink_in_i = $c + 120 + ((7 - $i_027_i & 7) << 2) | 0; //@line 45017
    } else {
     $_sink_in_i = $c + 88 + ((15 - $i_027_i & 7) << 2) | 0; //@line 45022
    }
    $_sink_i = HEAP32[$_sink_in_i >> 2] | 0; //@line 45025
    $141 = $_sink_i & 65535; //@line 45026
    $142 = $130 & 16777215; //@line 45027
    $143 = $142 + 1 | 0; //@line 45028
    if ($143 >>> 0 < (HEAP32[$76 >> 2] | 0) >>> 0) {
     HEAP8[(HEAP32[$118 >> 2] | 0) + $142 | 0] = ($141 & 65535) >>> 8 & 255; //@line 45037
     HEAP8[(HEAP32[$118 >> 2] | 0) + $143 | 0] = $_sink_i & 255; //@line 45041
    } else {
     FUNCTION_TABLE_viii[HEAP32[$120 >> 2] & 63](HEAP32[$121 >> 2] | 0, $142, $141); //@line 45046
    }
    HEAP32[$119 >> 2] = (HEAP32[$119 >> 2] | 0) + 4; //@line 45050
    $a_1_i = $130; //@line 45052
   }
   $161 = $i_027_i + 1 | 0; //@line 45056
   if ($161 >>> 0 < 16) {
    $i_027_i = $161;
    $r_028_i = ($r_028_i & 65535) >>> 1;
    $a_029_i = $a_1_i;
   } else {
    break;
   }
  }
  HEAP32[$c + 120 + ((HEAP16[$1 >> 1] & 7) << 2) >> 2] = $a_1_i; //@line 45069
  HEAP32[$119 >> 2] = (HEAP32[$119 >> 2] | 0) + 8; //@line 45072
  $170 = HEAP32[$65 >> 2] | 0; //@line 45073
  if (($170 & 1 | 0) != 0) {
   _e68_exception_address($c, $170, 0, 0); //@line 45078
   return;
  }
  HEAP16[$73 >> 1] = HEAP16[$71 >> 1] | 0; //@line 45084
  $176 = $170 & 16777215; //@line 45085
  $177 = $176 + 1 | 0; //@line 45086
  if ($177 >>> 0 < (HEAP32[$76 >> 2] | 0) >>> 0) {
   $181 = HEAP32[$118 >> 2] | 0; //@line 45091
   $_0_i_i23_i = HEAPU8[$181 + $176 | 0] << 8 | HEAPU8[$181 + $177 | 0]; //@line 45101
  } else {
   $_0_i_i23_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$121 >> 2] | 0, $176) | 0; //@line 45108
  }
  HEAP16[$71 >> 1] = $_0_i_i23_i; //@line 45111
  if ((HEAP8[$96] | 0) == 0) {
   HEAP32[$65 >> 2] = (HEAP32[$65 >> 2] | 0) + 2; //@line 45118
   HEAP32[$103 >> 2] = (HEAP32[$103 >> 2] | 0) + 2; //@line 45121
   return;
  } else {
   _e68_exception_bus($c); //@line 45126
   return;
  }
 } else if (($5 | 0) == 0) {
  $8 = $c + 88 + (($3 & 7) << 2) | 0; //@line 45133
  $9 = HEAP32[$8 >> 2] | 0; //@line 45134
  $14 = ($9 & 128 | 0) != 0 ? $9 | 65280 : $9 & 255; //@line 45139
  $16 = $c + 372 | 0; //@line 45141
  HEAP32[$16 >> 2] = (HEAP32[$16 >> 2] | 0) + 4; //@line 45144
  _e68_cc_set_nz_16($c, 15, $14 & 65535); //@line 45145
  HEAP32[$8 >> 2] = HEAP32[$8 >> 2] & -65536 | $14 & 65535; //@line 45150
  $23 = $c + 156 | 0; //@line 45151
  $24 = HEAP32[$23 >> 2] | 0; //@line 45152
  if (($24 & 1 | 0) != 0) {
   _e68_exception_address($c, $24, 0, 0); //@line 45157
   return;
  }
  $29 = $c + 164 | 0; //@line 45162
  HEAP16[$c + 162 >> 1] = HEAP16[$29 >> 1] | 0; //@line 45165
  $32 = $24 & 16777215; //@line 45166
  $33 = $32 + 1 | 0; //@line 45167
  if ($33 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $39 = HEAP32[$c + 32 >> 2] | 0; //@line 45174
   $_0_i_i_i = HEAPU8[$39 + $32 | 0] << 8 | HEAPU8[$39 + $33 | 0]; //@line 45184
  } else {
   $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $32) | 0; //@line 45192
  }
  HEAP16[$29 >> 1] = $_0_i_i_i; //@line 45195
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$23 >> 2] = (HEAP32[$23 >> 2] | 0) + 2; //@line 45203
   $61 = $c + 152 | 0; //@line 45204
   HEAP32[$61 >> 2] = (HEAP32[$61 >> 2] | 0) + 2; //@line 45207
   return;
  } else {
   _e68_exception_bus($c); //@line 45212
   return;
  }
 } else {
  $204 = $c + 156 | 0; //@line 45218
  $205 = HEAP32[$204 >> 2] | 0; //@line 45219
  if (($205 & 1 | 0) != 0) {
   _e68_exception_address($c, $205, 0, 0); //@line 45224
   return;
  }
  $210 = $c + 164 | 0; //@line 45229
  $212 = $c + 162 | 0; //@line 45231
  HEAP16[$212 >> 1] = HEAP16[$210 >> 1] | 0; //@line 45232
  $213 = $205 & 16777215; //@line 45233
  $214 = $213 + 1 | 0; //@line 45234
  $215 = $c + 36 | 0; //@line 45235
  if ($214 >>> 0 < (HEAP32[$215 >> 2] | 0) >>> 0) {
   $220 = HEAP32[$c + 32 >> 2] | 0; //@line 45241
   $_0_i_i_i6 = HEAPU8[$220 + $213 | 0] << 8 | HEAPU8[$220 + $214 | 0]; //@line 45251
  } else {
   $_0_i_i_i6 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $213) | 0; //@line 45259
  }
  HEAP16[$210 >> 1] = $_0_i_i_i6; //@line 45262
  $235 = $c + 336 | 0; //@line 45263
  if ((HEAP8[$235] | 0) != 0) {
   _e68_exception_bus($c); //@line 45268
   return;
  }
  HEAP32[$204 >> 2] = (HEAP32[$204 >> 2] | 0) + 2; //@line 45275
  $242 = $c + 152 | 0; //@line 45276
  HEAP32[$242 >> 2] = (HEAP32[$242 >> 2] | 0) + 2; //@line 45279
  $245 = HEAP16[$212 >> 1] | 0; //@line 45280
  $248 = HEAP16[$1 >> 1] & 63; //@line 45283
  if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($248 << 2) >> 2] & 127]($c, $248, 484, 16) | 0) != 0) {
   return;
  }
  if ((HEAP32[$c + 340 >> 2] | 0) != 2) {
   _e68_exception_illegal($c); //@line 45298
   return;
  }
  $260 = HEAP32[$c + 344 >> 2] | 0; //@line 45304
  do {
   if ($245 << 16 >> 16 == 0) {
    $r_0_ph_i8 = 0; //@line 45309
   } else {
    if ((HEAP32[$c >> 2] & 1 | 0) != 0) {
     $r_0_ph_i8 = $245; //@line 45317
     break;
    }
    if (($260 & 1 | 0) == 0) {
     $r_0_ph_i8 = $245; //@line 45324
     break;
    }
    _e68_exception_address($c, $260, 1, 1); //@line 45327
    return;
   }
  } while (0);
  $267 = $c + 32 | 0; //@line 45334
  $268 = $c + 372 | 0; //@line 45335
  $269 = $c + 24 | 0; //@line 45336
  $270 = $c + 4 | 0; //@line 45337
  $i_026_i = 0;
  $r_027_i = $r_0_ph_i8;
  $a_028_i = $260;
  while (1) {
   if (($r_027_i & 1) == 0) {
    $a_1_i13 = $a_028_i; //@line 45348
   } else {
    $280 = $i_026_i & 7; //@line 45351
    if ($i_026_i >>> 0 < 8) {
     $_sink_in_i10 = $c + 88 + ($280 << 2) | 0; //@line 45356
    } else {
     $_sink_in_i10 = $c + 120 + ($280 << 2) | 0; //@line 45359
    }
    $_sink_i11 = HEAP32[$_sink_in_i10 >> 2] | 0; //@line 45362
    $286 = $_sink_i11 & 65535; //@line 45363
    $287 = $a_028_i & 16777215; //@line 45364
    $288 = $287 + 1 | 0; //@line 45365
    if ($288 >>> 0 < (HEAP32[$215 >> 2] | 0) >>> 0) {
     HEAP8[(HEAP32[$267 >> 2] | 0) + $287 | 0] = ($286 & 65535) >>> 8 & 255; //@line 45374
     HEAP8[(HEAP32[$267 >> 2] | 0) + $288 | 0] = $_sink_i11 & 255; //@line 45378
    } else {
     FUNCTION_TABLE_viii[HEAP32[$269 >> 2] & 63](HEAP32[$270 >> 2] | 0, $287, $286); //@line 45383
    }
    HEAP32[$268 >> 2] = (HEAP32[$268 >> 2] | 0) + 4; //@line 45388
    $a_1_i13 = $a_028_i + 2 | 0; //@line 45390
   }
   $307 = $i_026_i + 1 | 0; //@line 45394
   if ($307 >>> 0 < 16) {
    $i_026_i = $307;
    $r_027_i = ($r_027_i & 65535) >>> 1;
    $a_028_i = $a_1_i13;
   } else {
    break;
   }
  }
  HEAP32[$268 >> 2] = (HEAP32[$268 >> 2] | 0) + 8; //@line 45405
  $312 = HEAP32[$204 >> 2] | 0; //@line 45406
  if (($312 & 1 | 0) != 0) {
   _e68_exception_address($c, $312, 0, 0); //@line 45411
   return;
  }
  HEAP16[$212 >> 1] = HEAP16[$210 >> 1] | 0; //@line 45417
  $318 = $312 & 16777215; //@line 45418
  $319 = $318 + 1 | 0; //@line 45419
  if ($319 >>> 0 < (HEAP32[$215 >> 2] | 0) >>> 0) {
   $323 = HEAP32[$267 >> 2] | 0; //@line 45424
   $_0_i_i22_i = HEAPU8[$323 + $318 | 0] << 8 | HEAPU8[$323 + $319 | 0]; //@line 45434
  } else {
   $_0_i_i22_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$270 >> 2] | 0, $318) | 0; //@line 45441
  }
  HEAP16[$210 >> 1] = $_0_i_i22_i; //@line 45444
  if ((HEAP8[$235] | 0) == 0) {
   HEAP32[$204 >> 2] = (HEAP32[$204 >> 2] | 0) + 2; //@line 45451
   HEAP32[$242 >> 2] = (HEAP32[$242 >> 2] | 0) + 2; //@line 45454
   return;
  } else {
   _e68_exception_bus($c); //@line 45459
   return;
  }
 }
}
function _op48c0($c) {
 $c = $c | 0;
 var $1 = 0, $3 = 0, $5 = 0, $8 = 0, $9 = 0, $14 = 0, $15 = 0, $18 = 0, $19 = 0, $24 = 0, $27 = 0, $28 = 0, $34 = 0, $_0_i_i_i = 0, $56 = 0, $60 = 0, $61 = 0, $66 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $76 = 0, $_0_i_i_i4 = 0, $91 = 0, $98 = 0, $101 = 0, $106 = 0, $r_0_ph_i = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $a_029_i = 0, $r_028_i = 0, $i_027_i = 0, $125 = 0, $v_0_in_i = 0, $v_0_i = 0, $136 = 0, $137 = 0, $a_1_i = 0, $165 = 0, $174 = 0, $180 = 0, $181 = 0, $185 = 0, $_0_i_i23_i = 0, $208 = 0, $209 = 0, $214 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $224 = 0, $_0_i_i_i6 = 0, $239 = 0, $246 = 0, $249 = 0, $252 = 0, $264 = 0, $r_0_ph_i8 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $a_028_i = 0, $r_027_i = 0, $i_026_i = 0, $284 = 0, $v_0_in_i10 = 0, $v_0_i11 = 0, $290 = 0, $291 = 0, $a_1_i13 = 0, $320 = 0, $325 = 0, $331 = 0, $332 = 0, $336 = 0, $_0_i_i22_i = 0;
 $1 = $c + 160 | 0; //@line 45512
 $3 = HEAPU16[$1 >> 1] | 0; //@line 45514
 $5 = $3 >>> 3 & 7; //@line 45516
 if (($5 | 0) == 0) {
  $8 = $c + 88 + (($3 & 7) << 2) | 0; //@line 45519
  $9 = HEAP32[$8 >> 2] | 0; //@line 45520
  $14 = ($9 & 32768 | 0) != 0 ? $9 | -65536 : $9 & 65535; //@line 45525
  $15 = $c + 372 | 0; //@line 45526
  HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + 4; //@line 45529
  _e68_cc_set_nz_32($c, 15, $14); //@line 45530
  HEAP32[$8 >> 2] = $14; //@line 45531
  $18 = $c + 156 | 0; //@line 45532
  $19 = HEAP32[$18 >> 2] | 0; //@line 45533
  if (($19 & 1 | 0) != 0) {
   _e68_exception_address($c, $19, 0, 0); //@line 45538
   return;
  }
  $24 = $c + 164 | 0; //@line 45543
  HEAP16[$c + 162 >> 1] = HEAP16[$24 >> 1] | 0; //@line 45546
  $27 = $19 & 16777215; //@line 45547
  $28 = $27 + 1 | 0; //@line 45548
  if ($28 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $34 = HEAP32[$c + 32 >> 2] | 0; //@line 45555
   $_0_i_i_i = HEAPU8[$34 + $27 | 0] << 8 | HEAPU8[$34 + $28 | 0]; //@line 45565
  } else {
   $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $27) | 0; //@line 45573
  }
  HEAP16[$24 >> 1] = $_0_i_i_i; //@line 45576
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 2; //@line 45584
   $56 = $c + 152 | 0; //@line 45585
   HEAP32[$56 >> 2] = (HEAP32[$56 >> 2] | 0) + 2; //@line 45588
   return;
  } else {
   _e68_exception_bus($c); //@line 45593
   return;
  }
 } else if (($5 | 0) == 4) {
  $60 = $c + 156 | 0; //@line 45599
  $61 = HEAP32[$60 >> 2] | 0; //@line 45600
  if (($61 & 1 | 0) != 0) {
   _e68_exception_address($c, $61, 0, 0); //@line 45605
   return;
  }
  $66 = $c + 164 | 0; //@line 45610
  $68 = $c + 162 | 0; //@line 45612
  HEAP16[$68 >> 1] = HEAP16[$66 >> 1] | 0; //@line 45613
  $69 = $61 & 16777215; //@line 45614
  $70 = $69 + 1 | 0; //@line 45615
  $71 = $c + 36 | 0; //@line 45616
  if ($70 >>> 0 < (HEAP32[$71 >> 2] | 0) >>> 0) {
   $76 = HEAP32[$c + 32 >> 2] | 0; //@line 45622
   $_0_i_i_i4 = HEAPU8[$76 + $69 | 0] << 8 | HEAPU8[$76 + $70 | 0]; //@line 45632
  } else {
   $_0_i_i_i4 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $69) | 0; //@line 45640
  }
  HEAP16[$66 >> 1] = $_0_i_i_i4; //@line 45643
  $91 = $c + 336 | 0; //@line 45644
  if ((HEAP8[$91] | 0) != 0) {
   _e68_exception_bus($c); //@line 45649
   return;
  }
  HEAP32[$60 >> 2] = (HEAP32[$60 >> 2] | 0) + 2; //@line 45656
  $98 = $c + 152 | 0; //@line 45657
  HEAP32[$98 >> 2] = (HEAP32[$98 >> 2] | 0) + 2; //@line 45660
  $101 = HEAP16[$68 >> 1] | 0; //@line 45661
  $106 = HEAP32[$c + 120 + ((HEAP16[$1 >> 1] & 7) << 2) >> 2] | 0; //@line 45666
  do {
   if ($101 << 16 >> 16 == 0) {
    $r_0_ph_i = 0; //@line 45671
   } else {
    if ((HEAP32[$c >> 2] & 1 | 0) != 0) {
     $r_0_ph_i = $101; //@line 45679
     break;
    }
    if (($106 & 1 | 0) == 0) {
     $r_0_ph_i = $101; //@line 45686
     break;
    }
    _e68_exception_address($c, $106, 1, 1); //@line 45689
    return;
   }
  } while (0);
  $113 = $c + 32 | 0; //@line 45696
  $114 = $c + 372 | 0; //@line 45697
  $115 = $c + 28 | 0; //@line 45698
  $116 = $c + 4 | 0; //@line 45699
  $i_027_i = 0;
  $r_028_i = $r_0_ph_i;
  $a_029_i = $106;
  while (1) {
   if (($r_028_i & 1) == 0) {
    $a_1_i = $a_029_i; //@line 45710
   } else {
    $125 = $a_029_i - 4 | 0; //@line 45712
    if ($i_027_i >>> 0 < 8) {
     $v_0_in_i = $c + 120 + ((7 - $i_027_i & 7) << 2) | 0; //@line 45720
    } else {
     $v_0_in_i = $c + 88 + ((15 - $i_027_i & 7) << 2) | 0; //@line 45725
    }
    $v_0_i = HEAP32[$v_0_in_i >> 2] | 0; //@line 45728
    $136 = $125 & 16777215; //@line 45729
    $137 = $136 + 3 | 0; //@line 45730
    if ($137 >>> 0 < (HEAP32[$71 >> 2] | 0) >>> 0) {
     HEAP8[(HEAP32[$113 >> 2] | 0) + $136 | 0] = $v_0_i >>> 24 & 255; //@line 45739
     HEAP8[(HEAP32[$113 >> 2] | 0) + ($136 + 1) | 0] = $v_0_i >>> 16 & 255; //@line 45745
     HEAP8[(HEAP32[$113 >> 2] | 0) + ($136 + 2) | 0] = $v_0_i >>> 8 & 255; //@line 45751
     HEAP8[(HEAP32[$113 >> 2] | 0) + $137 | 0] = $v_0_i & 255; //@line 45755
    } else {
     FUNCTION_TABLE_viii[HEAP32[$115 >> 2] & 63](HEAP32[$116 >> 2] | 0, $136, $v_0_i); //@line 45760
    }
    HEAP32[$114 >> 2] = (HEAP32[$114 >> 2] | 0) + 8; //@line 45764
    $a_1_i = $125; //@line 45766
   }
   $165 = $i_027_i + 1 | 0; //@line 45770
   if ($165 >>> 0 < 16) {
    $i_027_i = $165;
    $r_028_i = ($r_028_i & 65535) >>> 1;
    $a_029_i = $a_1_i;
   } else {
    break;
   }
  }
  HEAP32[$c + 120 + ((HEAP16[$1 >> 1] & 7) << 2) >> 2] = $a_1_i; //@line 45783
  HEAP32[$114 >> 2] = (HEAP32[$114 >> 2] | 0) + 8; //@line 45786
  $174 = HEAP32[$60 >> 2] | 0; //@line 45787
  if (($174 & 1 | 0) != 0) {
   _e68_exception_address($c, $174, 0, 0); //@line 45792
   return;
  }
  HEAP16[$68 >> 1] = HEAP16[$66 >> 1] | 0; //@line 45798
  $180 = $174 & 16777215; //@line 45799
  $181 = $180 + 1 | 0; //@line 45800
  if ($181 >>> 0 < (HEAP32[$71 >> 2] | 0) >>> 0) {
   $185 = HEAP32[$113 >> 2] | 0; //@line 45805
   $_0_i_i23_i = HEAPU8[$185 + $180 | 0] << 8 | HEAPU8[$185 + $181 | 0]; //@line 45815
  } else {
   $_0_i_i23_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$116 >> 2] | 0, $180) | 0; //@line 45822
  }
  HEAP16[$66 >> 1] = $_0_i_i23_i; //@line 45825
  if ((HEAP8[$91] | 0) == 0) {
   HEAP32[$60 >> 2] = (HEAP32[$60 >> 2] | 0) + 2; //@line 45832
   HEAP32[$98 >> 2] = (HEAP32[$98 >> 2] | 0) + 2; //@line 45835
   return;
  } else {
   _e68_exception_bus($c); //@line 45840
   return;
  }
 } else {
  $208 = $c + 156 | 0; //@line 45846
  $209 = HEAP32[$208 >> 2] | 0; //@line 45847
  if (($209 & 1 | 0) != 0) {
   _e68_exception_address($c, $209, 0, 0); //@line 45852
   return;
  }
  $214 = $c + 164 | 0; //@line 45857
  $216 = $c + 162 | 0; //@line 45859
  HEAP16[$216 >> 1] = HEAP16[$214 >> 1] | 0; //@line 45860
  $217 = $209 & 16777215; //@line 45861
  $218 = $217 + 1 | 0; //@line 45862
  $219 = $c + 36 | 0; //@line 45863
  if ($218 >>> 0 < (HEAP32[$219 >> 2] | 0) >>> 0) {
   $224 = HEAP32[$c + 32 >> 2] | 0; //@line 45869
   $_0_i_i_i6 = HEAPU8[$224 + $217 | 0] << 8 | HEAPU8[$224 + $218 | 0]; //@line 45879
  } else {
   $_0_i_i_i6 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $217) | 0; //@line 45887
  }
  HEAP16[$214 >> 1] = $_0_i_i_i6; //@line 45890
  $239 = $c + 336 | 0; //@line 45891
  if ((HEAP8[$239] | 0) != 0) {
   _e68_exception_bus($c); //@line 45896
   return;
  }
  HEAP32[$208 >> 2] = (HEAP32[$208 >> 2] | 0) + 2; //@line 45903
  $246 = $c + 152 | 0; //@line 45904
  HEAP32[$246 >> 2] = (HEAP32[$246 >> 2] | 0) + 2; //@line 45907
  $249 = HEAP16[$216 >> 1] | 0; //@line 45908
  $252 = HEAP16[$1 >> 1] & 63; //@line 45911
  if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($252 << 2) >> 2] & 127]($c, $252, 484, 32) | 0) != 0) {
   return;
  }
  if ((HEAP32[$c + 340 >> 2] | 0) != 2) {
   _e68_exception_illegal($c); //@line 45926
   return;
  }
  $264 = HEAP32[$c + 344 >> 2] | 0; //@line 45932
  do {
   if ($249 << 16 >> 16 == 0) {
    $r_0_ph_i8 = 0; //@line 45937
   } else {
    if ((HEAP32[$c >> 2] & 1 | 0) != 0) {
     $r_0_ph_i8 = $249; //@line 45945
     break;
    }
    if (($264 & 1 | 0) == 0) {
     $r_0_ph_i8 = $249; //@line 45952
     break;
    }
    _e68_exception_address($c, $264, 1, 1); //@line 45955
    return;
   }
  } while (0);
  $271 = $c + 32 | 0; //@line 45962
  $272 = $c + 372 | 0; //@line 45963
  $273 = $c + 28 | 0; //@line 45964
  $274 = $c + 4 | 0; //@line 45965
  $i_026_i = 0;
  $r_027_i = $r_0_ph_i8;
  $a_028_i = $264;
  while (1) {
   if (($r_027_i & 1) == 0) {
    $a_1_i13 = $a_028_i; //@line 45976
   } else {
    $284 = $i_026_i & 7; //@line 45979
    if ($i_026_i >>> 0 < 8) {
     $v_0_in_i10 = $c + 88 + ($284 << 2) | 0; //@line 45984
    } else {
     $v_0_in_i10 = $c + 120 + ($284 << 2) | 0; //@line 45987
    }
    $v_0_i11 = HEAP32[$v_0_in_i10 >> 2] | 0; //@line 45990
    $290 = $a_028_i & 16777215; //@line 45991
    $291 = $290 + 3 | 0; //@line 45992
    if ($291 >>> 0 < (HEAP32[$219 >> 2] | 0) >>> 0) {
     HEAP8[(HEAP32[$271 >> 2] | 0) + $290 | 0] = $v_0_i11 >>> 24 & 255; //@line 46001
     HEAP8[(HEAP32[$271 >> 2] | 0) + ($290 + 1) | 0] = $v_0_i11 >>> 16 & 255; //@line 46007
     HEAP8[(HEAP32[$271 >> 2] | 0) + ($290 + 2) | 0] = $v_0_i11 >>> 8 & 255; //@line 46013
     HEAP8[(HEAP32[$271 >> 2] | 0) + $291 | 0] = $v_0_i11 & 255; //@line 46017
    } else {
     FUNCTION_TABLE_viii[HEAP32[$273 >> 2] & 63](HEAP32[$274 >> 2] | 0, $290, $v_0_i11); //@line 46022
    }
    HEAP32[$272 >> 2] = (HEAP32[$272 >> 2] | 0) + 8; //@line 46027
    $a_1_i13 = $a_028_i + 4 | 0; //@line 46029
   }
   $320 = $i_026_i + 1 | 0; //@line 46033
   if ($320 >>> 0 < 16) {
    $i_026_i = $320;
    $r_027_i = ($r_027_i & 65535) >>> 1;
    $a_028_i = $a_1_i13;
   } else {
    break;
   }
  }
  HEAP32[$272 >> 2] = (HEAP32[$272 >> 2] | 0) + 8; //@line 46044
  $325 = HEAP32[$208 >> 2] | 0; //@line 46045
  if (($325 & 1 | 0) != 0) {
   _e68_exception_address($c, $325, 0, 0); //@line 46050
   return;
  }
  HEAP16[$216 >> 1] = HEAP16[$214 >> 1] | 0; //@line 46056
  $331 = $325 & 16777215; //@line 46057
  $332 = $331 + 1 | 0; //@line 46058
  if ($332 >>> 0 < (HEAP32[$219 >> 2] | 0) >>> 0) {
   $336 = HEAP32[$271 >> 2] | 0; //@line 46063
   $_0_i_i22_i = HEAPU8[$336 + $331 | 0] << 8 | HEAPU8[$336 + $332 | 0]; //@line 46073
  } else {
   $_0_i_i22_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$274 >> 2] | 0, $331) | 0; //@line 46080
  }
  HEAP16[$214 >> 1] = $_0_i_i22_i; //@line 46083
  if ((HEAP8[$239] | 0) == 0) {
   HEAP32[$208 >> 2] = (HEAP32[$208 >> 2] | 0) + 2; //@line 46090
   HEAP32[$246 >> 2] = (HEAP32[$246 >> 2] | 0) + 2; //@line 46093
   return;
  } else {
   _e68_exception_bus($c); //@line 46098
   return;
  }
 }
}
function _op49c0($c) {
 $c = $c | 0;
 FUNCTION_TABLE_vi[HEAP32[$c + 4496 + (((HEAP16[$c + 160 >> 1] & 65535) >>> 3 & 7) << 2) >> 2] & 1023]($c); //@line 46119
 return;
}
function _op4a00($c) {
 $c = $c | 0;
 var $s = 0, $4 = 0, $13 = 0, $17 = 0, $18 = 0, $23 = 0, $26 = 0, $27 = 0, $33 = 0, $_0_i_i = 0, $55 = 0, sp = 0;
 sp = STACKTOP; //@line 46135
 STACKTOP = STACKTOP + 8 | 0; //@line 46135
 $s = sp | 0; //@line 46136
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 46140
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 509, 8) | 0) != 0) {
  STACKTOP = sp; //@line 46147
  return;
 }
 if ((_e68_ea_get_val8($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 46154
  return;
 }
 $13 = $c + 372 | 0; //@line 46157
 HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 8; //@line 46160
 _e68_cc_set_nz_8($c, 15, HEAP8[$s] | 0); //@line 46162
 $17 = $c + 156 | 0; //@line 46163
 $18 = HEAP32[$17 >> 2] | 0; //@line 46164
 if (($18 & 1 | 0) != 0) {
  _e68_exception_address($c, $18, 0, 0); //@line 46169
  STACKTOP = sp; //@line 46171
  return;
 }
 $23 = $c + 164 | 0; //@line 46174
 HEAP16[$c + 162 >> 1] = HEAP16[$23 >> 1] | 0; //@line 46177
 $26 = $18 & 16777215; //@line 46178
 $27 = $26 + 1 | 0; //@line 46179
 if ($27 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $33 = HEAP32[$c + 32 >> 2] | 0; //@line 46186
  $_0_i_i = HEAPU8[$33 + $26 | 0] << 8 | HEAPU8[$33 + $27 | 0]; //@line 46196
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $26) | 0; //@line 46204
 }
 HEAP16[$23 >> 1] = $_0_i_i; //@line 46207
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$17 >> 2] = (HEAP32[$17 >> 2] | 0) + 2; //@line 46215
  $55 = $c + 152 | 0; //@line 46216
  HEAP32[$55 >> 2] = (HEAP32[$55 >> 2] | 0) + 2; //@line 46219
  STACKTOP = sp; //@line 46221
  return;
 } else {
  _e68_exception_bus($c); //@line 46224
  STACKTOP = sp; //@line 46226
  return;
 }
}
function _op4a40($c) {
 $c = $c | 0;
 var $s = 0, $4 = 0, $13 = 0, $17 = 0, $18 = 0, $23 = 0, $26 = 0, $27 = 0, $33 = 0, $_0_i_i = 0, $55 = 0, sp = 0;
 sp = STACKTOP; //@line 46242
 STACKTOP = STACKTOP + 8 | 0; //@line 46242
 $s = sp | 0; //@line 46243
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 46247
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 509, 16) | 0) != 0) {
  STACKTOP = sp; //@line 46254
  return;
 }
 if ((_e68_ea_get_val16($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 46261
  return;
 }
 $13 = $c + 372 | 0; //@line 46264
 HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 8; //@line 46267
 _e68_cc_set_nz_16($c, 15, HEAP16[$s >> 1] | 0); //@line 46269
 $17 = $c + 156 | 0; //@line 46270
 $18 = HEAP32[$17 >> 2] | 0; //@line 46271
 if (($18 & 1 | 0) != 0) {
  _e68_exception_address($c, $18, 0, 0); //@line 46276
  STACKTOP = sp; //@line 46278
  return;
 }
 $23 = $c + 164 | 0; //@line 46281
 HEAP16[$c + 162 >> 1] = HEAP16[$23 >> 1] | 0; //@line 46284
 $26 = $18 & 16777215; //@line 46285
 $27 = $26 + 1 | 0; //@line 46286
 if ($27 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $33 = HEAP32[$c + 32 >> 2] | 0; //@line 46293
  $_0_i_i = HEAPU8[$33 + $26 | 0] << 8 | HEAPU8[$33 + $27 | 0]; //@line 46303
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $26) | 0; //@line 46311
 }
 HEAP16[$23 >> 1] = $_0_i_i; //@line 46314
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$17 >> 2] = (HEAP32[$17 >> 2] | 0) + 2; //@line 46322
  $55 = $c + 152 | 0; //@line 46323
  HEAP32[$55 >> 2] = (HEAP32[$55 >> 2] | 0) + 2; //@line 46326
  STACKTOP = sp; //@line 46328
  return;
 } else {
  _e68_exception_bus($c); //@line 46331
  STACKTOP = sp; //@line 46333
  return;
 }
}
function _op4a80($c) {
 $c = $c | 0;
 var $s = 0, $4 = 0, $13 = 0, $17 = 0, $18 = 0, $23 = 0, $26 = 0, $27 = 0, $33 = 0, $_0_i_i = 0, $55 = 0, sp = 0;
 sp = STACKTOP; //@line 46349
 STACKTOP = STACKTOP + 8 | 0; //@line 46349
 $s = sp | 0; //@line 46350
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 46354
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 509, 32) | 0) != 0) {
  STACKTOP = sp; //@line 46361
  return;
 }
 if ((_e68_ea_get_val32($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 46368
  return;
 }
 $13 = $c + 372 | 0; //@line 46371
 HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 8; //@line 46374
 _e68_cc_set_nz_32($c, 15, HEAP32[$s >> 2] | 0); //@line 46376
 $17 = $c + 156 | 0; //@line 46377
 $18 = HEAP32[$17 >> 2] | 0; //@line 46378
 if (($18 & 1 | 0) != 0) {
  _e68_exception_address($c, $18, 0, 0); //@line 46383
  STACKTOP = sp; //@line 46385
  return;
 }
 $23 = $c + 164 | 0; //@line 46388
 HEAP16[$c + 162 >> 1] = HEAP16[$23 >> 1] | 0; //@line 46391
 $26 = $18 & 16777215; //@line 46392
 $27 = $26 + 1 | 0; //@line 46393
 if ($27 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $33 = HEAP32[$c + 32 >> 2] | 0; //@line 46400
  $_0_i_i = HEAPU8[$33 + $26 | 0] << 8 | HEAPU8[$33 + $27 | 0]; //@line 46410
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $26) | 0; //@line 46418
 }
 HEAP16[$23 >> 1] = $_0_i_i; //@line 46421
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$17 >> 2] = (HEAP32[$17 >> 2] | 0) + 2; //@line 46429
  $55 = $c + 152 | 0; //@line 46430
  HEAP32[$55 >> 2] = (HEAP32[$55 >> 2] | 0) + 2; //@line 46433
  STACKTOP = sp; //@line 46435
  return;
 } else {
  _e68_exception_bus($c); //@line 46438
  STACKTOP = sp; //@line 46440
  return;
 }
}
function _op4ac0($c) {
 $c = $c | 0;
 var $s = 0, $2 = 0, $6 = 0, $9 = 0, $10 = 0, $13 = 0, $22 = 0, $23 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $37 = 0, $52 = 0, $53 = 0, $59 = 0, $61 = 0, $66 = 0, $67 = 0, $71 = 0, $84 = 0, $phitmp_i = 0, $86 = 0, $87 = 0, $91 = 0, $97 = 0, $106 = 0, $107 = 0, $110 = 0, $111 = 0, $116 = 0, $119 = 0, $120 = 0, $126 = 0, $_0_i_i = 0, $148 = 0, $151 = 0, sp = 0;
 sp = STACKTOP; //@line 46466
 STACKTOP = STACKTOP + 8 | 0; //@line 46466
 $s = sp | 0; //@line 46467
 $2 = HEAP16[$c + 160 >> 1] | 0; //@line 46469
 if ($2 << 16 >> 16 != 19196) {
  $97 = $2 & 63; //@line 46474
  if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($97 << 2) >> 2] & 127]($c, $97, 509, 8) | 0) != 0) {
   STACKTOP = sp; //@line 46481
   return;
  }
  if ((_e68_ea_get_val8($c, $s) | 0) != 0) {
   STACKTOP = sp; //@line 46488
   return;
  }
  $106 = HEAP8[$s] | 0; //@line 46491
  $107 = $c + 372 | 0; //@line 46492
  HEAP32[$107 >> 2] = (HEAP32[$107 >> 2] | 0) + 8; //@line 46495
  _e68_cc_set_nz_8($c, 15, $106); //@line 46496
  $110 = $c + 156 | 0; //@line 46497
  $111 = HEAP32[$110 >> 2] | 0; //@line 46498
  if (($111 & 1 | 0) != 0) {
   _e68_exception_address($c, $111, 0, 0); //@line 46503
   STACKTOP = sp; //@line 46505
   return;
  }
  $116 = $c + 164 | 0; //@line 46508
  HEAP16[$c + 162 >> 1] = HEAP16[$116 >> 1] | 0; //@line 46511
  $119 = $111 & 16777215; //@line 46512
  $120 = $119 + 1 | 0; //@line 46513
  if ($120 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $126 = HEAP32[$c + 32 >> 2] | 0; //@line 46520
   $_0_i_i = HEAPU8[$126 + $119 | 0] << 8 | HEAPU8[$126 + $120 | 0]; //@line 46530
  } else {
   $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $119) | 0; //@line 46538
  }
  HEAP16[$116 >> 1] = $_0_i_i; //@line 46541
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$110 >> 2] = (HEAP32[$110 >> 2] | 0) + 2; //@line 46549
   $148 = $c + 152 | 0; //@line 46550
   HEAP32[$148 >> 2] = (HEAP32[$148 >> 2] | 0) + 2; //@line 46553
   $151 = $106 | -128; //@line 46554
   _e68_ea_set_val8($c, $151) | 0; //@line 46555
   STACKTOP = sp; //@line 46557
   return;
  } else {
   _e68_exception_bus($c); //@line 46560
   STACKTOP = sp; //@line 46562
   return;
  }
 }
 $6 = HEAP32[$c + 64 >> 2] | 0; //@line 46567
 do {
  if (($6 | 0) != 0) {
   $9 = $c + 152 | 0; //@line 46572
   $10 = HEAP32[$9 >> 2] | 0; //@line 46573
   $13 = $c + 164 | 0; //@line 46576
   if ((FUNCTION_TABLE_iii[$6 & 63](HEAP32[$c + 60 >> 2] | 0, HEAPU16[$13 >> 1] | 0) | 0) != 0) {
    break;
   }
   if ((HEAP32[$9 >> 2] | 0) == ($10 | 0)) {
    $22 = $c + 156 | 0; //@line 46589
    $23 = HEAP32[$22 >> 2] | 0; //@line 46590
    if (($23 & 1 | 0) != 0) {
     _e68_exception_address($c, $23, 0, 0); //@line 46595
     STACKTOP = sp; //@line 46597
     return;
    }
    $29 = $c + 162 | 0; //@line 46601
    HEAP16[$29 >> 1] = HEAP16[$13 >> 1] | 0; //@line 46602
    $30 = $23 & 16777215; //@line 46603
    $31 = $30 + 1 | 0; //@line 46604
    $32 = $c + 36 | 0; //@line 46605
    if ($31 >>> 0 < (HEAP32[$32 >> 2] | 0) >>> 0) {
     $37 = HEAP32[$c + 32 >> 2] | 0; //@line 46611
     $52 = HEAPU8[$37 + $30 | 0] << 8 | HEAPU8[$37 + $31 | 0]; //@line 46621
    } else {
     $52 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $30) | 0; //@line 46629
    }
    HEAP16[$13 >> 1] = $52; //@line 46632
    $53 = $c + 336 | 0; //@line 46633
    if ((HEAP8[$53] | 0) != 0) {
     _e68_exception_bus($c); //@line 46638
     STACKTOP = sp; //@line 46640
     return;
    }
    $59 = (HEAP32[$22 >> 2] | 0) + 2 | 0; //@line 46644
    HEAP32[$22 >> 2] = $59; //@line 46645
    $61 = (HEAP32[$9 >> 2] | 0) + 2 | 0; //@line 46647
    HEAP32[$9 >> 2] = $61; //@line 46648
    if (($59 & 1 | 0) != 0) {
     _e68_exception_address($c, $59, 0, 0); //@line 46653
     STACKTOP = sp; //@line 46655
     return;
    }
    HEAP16[$29 >> 1] = $52; //@line 46658
    $66 = $59 & 16777215; //@line 46659
    $67 = $66 + 1 | 0; //@line 46660
    do {
     if ($67 >>> 0 < (HEAP32[$32 >> 2] | 0) >>> 0) {
      $71 = HEAP32[$c + 32 >> 2] | 0; //@line 46667
      HEAP16[$13 >> 1] = HEAPU8[$71 + $66 | 0] << 8 | HEAPU8[$71 + $67 | 0]; //@line 46676
      $87 = $59;
      $86 = $61;
     } else {
      $84 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $66) | 0; //@line 46684
      $phitmp_i = (HEAP8[$53] | 0) == 0; //@line 46686
      HEAP16[$13 >> 1] = $84; //@line 46687
      if ($phitmp_i) {
       $87 = HEAP32[$22 >> 2] | 0;
       $86 = HEAP32[$9 >> 2] | 0;
       break;
      }
      _e68_exception_bus($c); //@line 46696
      STACKTOP = sp; //@line 46698
      return;
     }
    } while (0);
    HEAP32[$22 >> 2] = $87 + 2; //@line 46705
    HEAP32[$9 >> 2] = $86 + 2; //@line 46707
   }
   $91 = $c + 372 | 0; //@line 46710
   HEAP32[$91 >> 2] = (HEAP32[$91 >> 2] | 0) + 8; //@line 46713
   STACKTOP = sp; //@line 46715
   return;
  }
 } while (0);
 _e68_exception_illegal($c); //@line 46719
 STACKTOP = sp; //@line 46721
 return;
}
function _op4c80($c) {
 $c = $c | 0;
 var $1 = 0, $5 = 0, $7 = 0, $11 = 0, $12 = 0, $17 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $27 = 0, $_0_i_i_i = 0, $42 = 0, $49 = 0, $52 = 0, $57 = 0, $r_0_ph_i = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $a_032_i = 0, $r_031_i = 0, $i_029_i = 0, $76 = 0, $77 = 0, $81 = 0, $_0_i24_i = 0, $94 = 0, $98 = 0, $100 = 0, $a_1_i = 0, $111 = 0, $120 = 0, $126 = 0, $127 = 0, $131 = 0, $_0_i_i25_i = 0, $153 = 0, $154 = 0, $159 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $169 = 0, $_0_i_i_i4 = 0, $184 = 0, $191 = 0, $194 = 0, $197 = 0, $209 = 0, $r_0_ph_i6 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $a_031_i = 0, $r_030_i = 0, $i_028_i = 0, $228 = 0, $229 = 0, $233 = 0, $_0_i23_i = 0, $246 = 0, $250 = 0, $252 = 0, $a_1_i9 = 0, $263 = 0, $268 = 0, $274 = 0, $275 = 0, $279 = 0, $_0_i_i24_i = 0;
 $1 = $c + 160 | 0; //@line 46763
 $5 = (HEAPU16[$1 >> 1] | 0) >>> 3 & 7; //@line 46767
 if (($5 | 0) == 0) {
  _e68_exception_illegal($c); //@line 46769
  $7 = $c + 372 | 0; //@line 46770
  HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + 2; //@line 46773
  return;
 } else if (($5 | 0) == 3) {
  $11 = $c + 156 | 0; //@line 46778
  $12 = HEAP32[$11 >> 2] | 0; //@line 46779
  if (($12 & 1 | 0) != 0) {
   _e68_exception_address($c, $12, 0, 0); //@line 46784
   return;
  }
  $17 = $c + 164 | 0; //@line 46789
  $19 = $c + 162 | 0; //@line 46791
  HEAP16[$19 >> 1] = HEAP16[$17 >> 1] | 0; //@line 46792
  $20 = $12 & 16777215; //@line 46793
  $21 = $20 + 1 | 0; //@line 46794
  $22 = $c + 36 | 0; //@line 46795
  if ($21 >>> 0 < (HEAP32[$22 >> 2] | 0) >>> 0) {
   $27 = HEAP32[$c + 32 >> 2] | 0; //@line 46801
   $_0_i_i_i = HEAPU8[$27 + $20 | 0] << 8 | HEAPU8[$27 + $21 | 0]; //@line 46811
  } else {
   $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $20) | 0; //@line 46819
  }
  HEAP16[$17 >> 1] = $_0_i_i_i; //@line 46822
  $42 = $c + 336 | 0; //@line 46823
  if ((HEAP8[$42] | 0) != 0) {
   _e68_exception_bus($c); //@line 46828
   return;
  }
  HEAP32[$11 >> 2] = (HEAP32[$11 >> 2] | 0) + 2; //@line 46835
  $49 = $c + 152 | 0; //@line 46836
  HEAP32[$49 >> 2] = (HEAP32[$49 >> 2] | 0) + 2; //@line 46839
  $52 = HEAP16[$19 >> 1] | 0; //@line 46840
  $57 = HEAP32[$c + 120 + ((HEAP16[$1 >> 1] & 7) << 2) >> 2] | 0; //@line 46845
  do {
   if ($52 << 16 >> 16 == 0) {
    $r_0_ph_i = 0; //@line 46850
   } else {
    if ((HEAP32[$c >> 2] & 1 | 0) != 0) {
     $r_0_ph_i = $52; //@line 46858
     break;
    }
    if (($57 & 1 | 0) == 0) {
     $r_0_ph_i = $52; //@line 46865
     break;
    }
    _e68_exception_address($c, $57, 1, 0); //@line 46868
    return;
   }
  } while (0);
  $64 = $c + 32 | 0; //@line 46875
  $65 = $c + 372 | 0; //@line 46876
  $66 = $c + 12 | 0; //@line 46877
  $67 = $c + 4 | 0; //@line 46878
  $i_029_i = 0;
  $r_031_i = $r_0_ph_i;
  $a_032_i = $57;
  while (1) {
   if (($r_031_i & 1) == 0) {
    $a_1_i = $a_032_i; //@line 46889
   } else {
    $76 = $a_032_i & 16777215; //@line 46891
    $77 = $76 + 1 | 0; //@line 46892
    if ($77 >>> 0 < (HEAP32[$22 >> 2] | 0) >>> 0) {
     $81 = HEAP32[$64 >> 2] | 0; //@line 46897
     $_0_i24_i = HEAPU8[$81 + $76 | 0] << 8 | HEAPU8[$81 + $77 | 0]; //@line 46907
    } else {
     $_0_i24_i = FUNCTION_TABLE_iii[HEAP32[$66 >> 2] & 63](HEAP32[$67 >> 2] | 0, $76) | 0; //@line 46913
    }
    $94 = $_0_i24_i & 65535; //@line 46916
    $98 = ($94 & 32768 | 0) != 0 ? $94 | -65536 : $94; //@line 46920
    $100 = $i_029_i & 7; //@line 46922
    if ($i_029_i >>> 0 < 8) {
     HEAP32[$c + 88 + ($100 << 2) >> 2] = $98; //@line 46926
    } else {
     HEAP32[$c + 120 + ($100 << 2) >> 2] = $98; //@line 46930
    }
    HEAP32[$65 >> 2] = (HEAP32[$65 >> 2] | 0) + 4; //@line 46935
    $a_1_i = $a_032_i + 2 | 0; //@line 46937
   }
   $111 = $i_029_i + 1 | 0; //@line 46941
   if ($111 >>> 0 < 16) {
    $i_029_i = $111;
    $r_031_i = ($r_031_i & 65535) >>> 1;
    $a_032_i = $a_1_i;
   } else {
    break;
   }
  }
  HEAP32[$c + 120 + ((HEAP16[$1 >> 1] & 7) << 2) >> 2] = $a_1_i; //@line 46954
  HEAP32[$65 >> 2] = (HEAP32[$65 >> 2] | 0) + 12; //@line 46957
  $120 = HEAP32[$11 >> 2] | 0; //@line 46958
  if (($120 & 1 | 0) != 0) {
   _e68_exception_address($c, $120, 0, 0); //@line 46963
   return;
  }
  HEAP16[$19 >> 1] = HEAP16[$17 >> 1] | 0; //@line 46969
  $126 = $120 & 16777215; //@line 46970
  $127 = $126 + 1 | 0; //@line 46971
  if ($127 >>> 0 < (HEAP32[$22 >> 2] | 0) >>> 0) {
   $131 = HEAP32[$64 >> 2] | 0; //@line 46976
   $_0_i_i25_i = HEAPU8[$131 + $126 | 0] << 8 | HEAPU8[$131 + $127 | 0]; //@line 46986
  } else {
   $_0_i_i25_i = FUNCTION_TABLE_iii[HEAP32[$66 >> 2] & 63](HEAP32[$67 >> 2] | 0, $126) | 0; //@line 46992
  }
  HEAP16[$17 >> 1] = $_0_i_i25_i; //@line 46995
  if ((HEAP8[$42] | 0) == 0) {
   HEAP32[$11 >> 2] = (HEAP32[$11 >> 2] | 0) + 2; //@line 47002
   HEAP32[$49 >> 2] = (HEAP32[$49 >> 2] | 0) + 2; //@line 47005
   return;
  } else {
   _e68_exception_bus($c); //@line 47010
   return;
  }
 } else {
  $153 = $c + 156 | 0; //@line 47016
  $154 = HEAP32[$153 >> 2] | 0; //@line 47017
  if (($154 & 1 | 0) != 0) {
   _e68_exception_address($c, $154, 0, 0); //@line 47022
   return;
  }
  $159 = $c + 164 | 0; //@line 47027
  $161 = $c + 162 | 0; //@line 47029
  HEAP16[$161 >> 1] = HEAP16[$159 >> 1] | 0; //@line 47030
  $162 = $154 & 16777215; //@line 47031
  $163 = $162 + 1 | 0; //@line 47032
  $164 = $c + 36 | 0; //@line 47033
  if ($163 >>> 0 < (HEAP32[$164 >> 2] | 0) >>> 0) {
   $169 = HEAP32[$c + 32 >> 2] | 0; //@line 47039
   $_0_i_i_i4 = HEAPU8[$169 + $162 | 0] << 8 | HEAPU8[$169 + $163 | 0]; //@line 47049
  } else {
   $_0_i_i_i4 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $162) | 0; //@line 47057
  }
  HEAP16[$159 >> 1] = $_0_i_i_i4; //@line 47060
  $184 = $c + 336 | 0; //@line 47061
  if ((HEAP8[$184] | 0) != 0) {
   _e68_exception_bus($c); //@line 47066
   return;
  }
  HEAP32[$153 >> 2] = (HEAP32[$153 >> 2] | 0) + 2; //@line 47073
  $191 = $c + 152 | 0; //@line 47074
  HEAP32[$191 >> 2] = (HEAP32[$191 >> 2] | 0) + 2; //@line 47077
  $194 = HEAP16[$161 >> 1] | 0; //@line 47078
  $197 = HEAP16[$1 >> 1] & 63; //@line 47081
  if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($197 << 2) >> 2] & 127]($c, $197, 2028, 16) | 0) != 0) {
   return;
  }
  if ((HEAP32[$c + 340 >> 2] | 0) != 2) {
   _e68_exception_illegal($c); //@line 47096
   return;
  }
  $209 = HEAP32[$c + 344 >> 2] | 0; //@line 47102
  do {
   if ($194 << 16 >> 16 == 0) {
    $r_0_ph_i6 = 0; //@line 47107
   } else {
    if ((HEAP32[$c >> 2] & 1 | 0) != 0) {
     $r_0_ph_i6 = $194; //@line 47115
     break;
    }
    if (($209 & 1 | 0) == 0) {
     $r_0_ph_i6 = $194; //@line 47122
     break;
    }
    _e68_exception_address($c, $209, 1, 0); //@line 47125
    return;
   }
  } while (0);
  $216 = $c + 32 | 0; //@line 47132
  $217 = $c + 372 | 0; //@line 47133
  $218 = $c + 12 | 0; //@line 47134
  $219 = $c + 4 | 0; //@line 47135
  $i_028_i = 0;
  $r_030_i = $r_0_ph_i6;
  $a_031_i = $209;
  while (1) {
   if (($r_030_i & 1) == 0) {
    $a_1_i9 = $a_031_i; //@line 47146
   } else {
    $228 = $a_031_i & 16777215; //@line 47148
    $229 = $228 + 1 | 0; //@line 47149
    if ($229 >>> 0 < (HEAP32[$164 >> 2] | 0) >>> 0) {
     $233 = HEAP32[$216 >> 2] | 0; //@line 47154
     $_0_i23_i = HEAPU8[$233 + $228 | 0] << 8 | HEAPU8[$233 + $229 | 0]; //@line 47164
    } else {
     $_0_i23_i = FUNCTION_TABLE_iii[HEAP32[$218 >> 2] & 63](HEAP32[$219 >> 2] | 0, $228) | 0; //@line 47170
    }
    $246 = $_0_i23_i & 65535; //@line 47173
    $250 = ($246 & 32768 | 0) != 0 ? $246 | -65536 : $246; //@line 47177
    $252 = $i_028_i & 7; //@line 47179
    if ($i_028_i >>> 0 < 8) {
     HEAP32[$c + 88 + ($252 << 2) >> 2] = $250; //@line 47183
    } else {
     HEAP32[$c + 120 + ($252 << 2) >> 2] = $250; //@line 47187
    }
    HEAP32[$217 >> 2] = (HEAP32[$217 >> 2] | 0) + 4; //@line 47192
    $a_1_i9 = $a_031_i + 2 | 0; //@line 47194
   }
   $263 = $i_028_i + 1 | 0; //@line 47198
   if ($263 >>> 0 < 16) {
    $i_028_i = $263;
    $r_030_i = ($r_030_i & 65535) >>> 1;
    $a_031_i = $a_1_i9;
   } else {
    break;
   }
  }
  HEAP32[$217 >> 2] = (HEAP32[$217 >> 2] | 0) + 12; //@line 47209
  $268 = HEAP32[$153 >> 2] | 0; //@line 47210
  if (($268 & 1 | 0) != 0) {
   _e68_exception_address($c, $268, 0, 0); //@line 47215
   return;
  }
  HEAP16[$161 >> 1] = HEAP16[$159 >> 1] | 0; //@line 47221
  $274 = $268 & 16777215; //@line 47222
  $275 = $274 + 1 | 0; //@line 47223
  if ($275 >>> 0 < (HEAP32[$164 >> 2] | 0) >>> 0) {
   $279 = HEAP32[$216 >> 2] | 0; //@line 47228
   $_0_i_i24_i = HEAPU8[$279 + $274 | 0] << 8 | HEAPU8[$279 + $275 | 0]; //@line 47238
  } else {
   $_0_i_i24_i = FUNCTION_TABLE_iii[HEAP32[$218 >> 2] & 63](HEAP32[$219 >> 2] | 0, $274) | 0; //@line 47244
  }
  HEAP16[$159 >> 1] = $_0_i_i24_i; //@line 47247
  if ((HEAP8[$184] | 0) == 0) {
   HEAP32[$153 >> 2] = (HEAP32[$153 >> 2] | 0) + 2; //@line 47254
   HEAP32[$191 >> 2] = (HEAP32[$191 >> 2] | 0) + 2; //@line 47257
   return;
  } else {
   _e68_exception_bus($c); //@line 47262
   return;
  }
 }
}
function _op4cc0($c) {
 $c = $c | 0;
 var $1 = 0, $5 = 0, $7 = 0, $11 = 0, $12 = 0, $17 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $27 = 0, $_0_i_i_i = 0, $42 = 0, $49 = 0, $52 = 0, $57 = 0, $r_0_ph_i = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $i_030_i = 0, $a_029_i = 0, $r_028_i = 0, $76 = 0, $77 = 0, $81 = 0, $_0_i23_i = 0, $107 = 0, $a_1_i = 0, $118 = 0, $127 = 0, $133 = 0, $134 = 0, $138 = 0, $_0_i_i24_i = 0, $161 = 0, $162 = 0, $167 = 0, $169 = 0, $170 = 0, $171 = 0, $172 = 0, $177 = 0, $_0_i_i_i4 = 0, $192 = 0, $199 = 0, $202 = 0, $205 = 0, $217 = 0, $r_0_ph_i6 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $i_029_i = 0, $a_028_i = 0, $r_027_i = 0, $236 = 0, $237 = 0, $241 = 0, $_0_i22_i = 0, $267 = 0, $a_1_i9 = 0, $278 = 0, $283 = 0, $289 = 0, $290 = 0, $294 = 0, $_0_i_i23_i = 0;
 $1 = $c + 160 | 0; //@line 47310
 $5 = (HEAPU16[$1 >> 1] | 0) >>> 3 & 7; //@line 47314
 if (($5 | 0) == 3) {
  $11 = $c + 156 | 0; //@line 47316
  $12 = HEAP32[$11 >> 2] | 0; //@line 47317
  if (($12 & 1 | 0) != 0) {
   _e68_exception_address($c, $12, 0, 0); //@line 47322
   return;
  }
  $17 = $c + 164 | 0; //@line 47327
  $19 = $c + 162 | 0; //@line 47329
  HEAP16[$19 >> 1] = HEAP16[$17 >> 1] | 0; //@line 47330
  $20 = $12 & 16777215; //@line 47331
  $21 = $20 + 1 | 0; //@line 47332
  $22 = $c + 36 | 0; //@line 47333
  if ($21 >>> 0 < (HEAP32[$22 >> 2] | 0) >>> 0) {
   $27 = HEAP32[$c + 32 >> 2] | 0; //@line 47339
   $_0_i_i_i = HEAPU8[$27 + $20 | 0] << 8 | HEAPU8[$27 + $21 | 0]; //@line 47349
  } else {
   $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $20) | 0; //@line 47357
  }
  HEAP16[$17 >> 1] = $_0_i_i_i; //@line 47360
  $42 = $c + 336 | 0; //@line 47361
  if ((HEAP8[$42] | 0) != 0) {
   _e68_exception_bus($c); //@line 47366
   return;
  }
  HEAP32[$11 >> 2] = (HEAP32[$11 >> 2] | 0) + 2; //@line 47373
  $49 = $c + 152 | 0; //@line 47374
  HEAP32[$49 >> 2] = (HEAP32[$49 >> 2] | 0) + 2; //@line 47377
  $52 = HEAP16[$19 >> 1] | 0; //@line 47378
  $57 = HEAP32[$c + 120 + ((HEAP16[$1 >> 1] & 7) << 2) >> 2] | 0; //@line 47383
  do {
   if ($52 << 16 >> 16 == 0) {
    $r_0_ph_i = 0; //@line 47388
   } else {
    if ((HEAP32[$c >> 2] & 1 | 0) != 0) {
     $r_0_ph_i = $52; //@line 47396
     break;
    }
    if (($57 & 1 | 0) == 0) {
     $r_0_ph_i = $52; //@line 47403
     break;
    }
    _e68_exception_address($c, $57, 1, 0); //@line 47406
    return;
   }
  } while (0);
  $64 = $c + 32 | 0; //@line 47413
  $65 = $c + 372 | 0; //@line 47414
  $66 = $c + 16 | 0; //@line 47415
  $67 = $c + 4 | 0; //@line 47416
  $r_028_i = $r_0_ph_i;
  $a_029_i = $57;
  $i_030_i = 0;
  while (1) {
   if (($r_028_i & 1) == 0) {
    $a_1_i = $a_029_i; //@line 47427
   } else {
    $76 = $a_029_i & 16777215; //@line 47429
    $77 = $76 + 3 | 0; //@line 47430
    if ($77 >>> 0 < (HEAP32[$22 >> 2] | 0) >>> 0) {
     $81 = HEAP32[$64 >> 2] | 0; //@line 47435
     $_0_i23_i = ((HEAPU8[$81 + $76 | 0] << 8 | HEAPU8[$81 + ($76 + 1) | 0]) << 8 | HEAPU8[$81 + ($76 + 2) | 0]) << 8 | HEAPU8[$81 + $77 | 0]; //@line 47457
    } else {
     $_0_i23_i = FUNCTION_TABLE_iii[HEAP32[$66 >> 2] & 63](HEAP32[$67 >> 2] | 0, $76) | 0; //@line 47463
    }
    $107 = $i_030_i & 7; //@line 47467
    if ($i_030_i >>> 0 < 8) {
     HEAP32[$c + 88 + ($107 << 2) >> 2] = $_0_i23_i; //@line 47471
    } else {
     HEAP32[$c + 120 + ($107 << 2) >> 2] = $_0_i23_i; //@line 47475
    }
    HEAP32[$65 >> 2] = (HEAP32[$65 >> 2] | 0) + 8; //@line 47480
    $a_1_i = $a_029_i + 4 | 0; //@line 47482
   }
   $118 = $i_030_i + 1 | 0; //@line 47486
   if ($118 >>> 0 < 16) {
    $r_028_i = ($r_028_i & 65535) >>> 1;
    $a_029_i = $a_1_i;
    $i_030_i = $118;
   } else {
    break;
   }
  }
  HEAP32[$c + 120 + ((HEAP16[$1 >> 1] & 7) << 2) >> 2] = $a_1_i; //@line 47499
  HEAP32[$65 >> 2] = (HEAP32[$65 >> 2] | 0) + 12; //@line 47502
  $127 = HEAP32[$11 >> 2] | 0; //@line 47503
  if (($127 & 1 | 0) != 0) {
   _e68_exception_address($c, $127, 0, 0); //@line 47508
   return;
  }
  HEAP16[$19 >> 1] = HEAP16[$17 >> 1] | 0; //@line 47514
  $133 = $127 & 16777215; //@line 47515
  $134 = $133 + 1 | 0; //@line 47516
  if ($134 >>> 0 < (HEAP32[$22 >> 2] | 0) >>> 0) {
   $138 = HEAP32[$64 >> 2] | 0; //@line 47521
   $_0_i_i24_i = HEAPU8[$138 + $133 | 0] << 8 | HEAPU8[$138 + $134 | 0]; //@line 47531
  } else {
   $_0_i_i24_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$67 >> 2] | 0, $133) | 0; //@line 47538
  }
  HEAP16[$17 >> 1] = $_0_i_i24_i; //@line 47541
  if ((HEAP8[$42] | 0) == 0) {
   HEAP32[$11 >> 2] = (HEAP32[$11 >> 2] | 0) + 2; //@line 47548
   HEAP32[$49 >> 2] = (HEAP32[$49 >> 2] | 0) + 2; //@line 47551
   return;
  } else {
   _e68_exception_bus($c); //@line 47556
   return;
  }
 } else if (($5 | 0) == 0) {
  _e68_exception_illegal($c); //@line 47562
  $7 = $c + 372 | 0; //@line 47563
  HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + 2; //@line 47566
  return;
 } else {
  $161 = $c + 156 | 0; //@line 47571
  $162 = HEAP32[$161 >> 2] | 0; //@line 47572
  if (($162 & 1 | 0) != 0) {
   _e68_exception_address($c, $162, 0, 0); //@line 47577
   return;
  }
  $167 = $c + 164 | 0; //@line 47582
  $169 = $c + 162 | 0; //@line 47584
  HEAP16[$169 >> 1] = HEAP16[$167 >> 1] | 0; //@line 47585
  $170 = $162 & 16777215; //@line 47586
  $171 = $170 + 1 | 0; //@line 47587
  $172 = $c + 36 | 0; //@line 47588
  if ($171 >>> 0 < (HEAP32[$172 >> 2] | 0) >>> 0) {
   $177 = HEAP32[$c + 32 >> 2] | 0; //@line 47594
   $_0_i_i_i4 = HEAPU8[$177 + $170 | 0] << 8 | HEAPU8[$177 + $171 | 0]; //@line 47604
  } else {
   $_0_i_i_i4 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $170) | 0; //@line 47612
  }
  HEAP16[$167 >> 1] = $_0_i_i_i4; //@line 47615
  $192 = $c + 336 | 0; //@line 47616
  if ((HEAP8[$192] | 0) != 0) {
   _e68_exception_bus($c); //@line 47621
   return;
  }
  HEAP32[$161 >> 2] = (HEAP32[$161 >> 2] | 0) + 2; //@line 47628
  $199 = $c + 152 | 0; //@line 47629
  HEAP32[$199 >> 2] = (HEAP32[$199 >> 2] | 0) + 2; //@line 47632
  $202 = HEAP16[$169 >> 1] | 0; //@line 47633
  $205 = HEAP16[$1 >> 1] & 63; //@line 47636
  if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($205 << 2) >> 2] & 127]($c, $205, 2028, 32) | 0) != 0) {
   return;
  }
  if ((HEAP32[$c + 340 >> 2] | 0) != 2) {
   _e68_exception_illegal($c); //@line 47651
   return;
  }
  $217 = HEAP32[$c + 344 >> 2] | 0; //@line 47657
  do {
   if ($202 << 16 >> 16 == 0) {
    $r_0_ph_i6 = 0; //@line 47662
   } else {
    if ((HEAP32[$c >> 2] & 1 | 0) != 0) {
     $r_0_ph_i6 = $202; //@line 47670
     break;
    }
    if (($217 & 1 | 0) == 0) {
     $r_0_ph_i6 = $202; //@line 47677
     break;
    }
    _e68_exception_address($c, $217, 1, 0); //@line 47680
    return;
   }
  } while (0);
  $224 = $c + 32 | 0; //@line 47687
  $225 = $c + 372 | 0; //@line 47688
  $226 = $c + 16 | 0; //@line 47689
  $227 = $c + 4 | 0; //@line 47690
  $r_027_i = $r_0_ph_i6;
  $a_028_i = $217;
  $i_029_i = 0;
  while (1) {
   if (($r_027_i & 1) == 0) {
    $a_1_i9 = $a_028_i; //@line 47701
   } else {
    $236 = $a_028_i & 16777215; //@line 47703
    $237 = $236 + 3 | 0; //@line 47704
    if ($237 >>> 0 < (HEAP32[$172 >> 2] | 0) >>> 0) {
     $241 = HEAP32[$224 >> 2] | 0; //@line 47709
     $_0_i22_i = ((HEAPU8[$241 + $236 | 0] << 8 | HEAPU8[$241 + ($236 + 1) | 0]) << 8 | HEAPU8[$241 + ($236 + 2) | 0]) << 8 | HEAPU8[$241 + $237 | 0]; //@line 47731
    } else {
     $_0_i22_i = FUNCTION_TABLE_iii[HEAP32[$226 >> 2] & 63](HEAP32[$227 >> 2] | 0, $236) | 0; //@line 47737
    }
    $267 = $i_029_i & 7; //@line 47741
    if ($i_029_i >>> 0 < 8) {
     HEAP32[$c + 88 + ($267 << 2) >> 2] = $_0_i22_i; //@line 47745
    } else {
     HEAP32[$c + 120 + ($267 << 2) >> 2] = $_0_i22_i; //@line 47749
    }
    HEAP32[$225 >> 2] = (HEAP32[$225 >> 2] | 0) + 8; //@line 47754
    $a_1_i9 = $a_028_i + 4 | 0; //@line 47756
   }
   $278 = $i_029_i + 1 | 0; //@line 47760
   if ($278 >>> 0 < 16) {
    $r_027_i = ($r_027_i & 65535) >>> 1;
    $a_028_i = $a_1_i9;
    $i_029_i = $278;
   } else {
    break;
   }
  }
  HEAP32[$225 >> 2] = (HEAP32[$225 >> 2] | 0) + 12; //@line 47771
  $283 = HEAP32[$161 >> 2] | 0; //@line 47772
  if (($283 & 1 | 0) != 0) {
   _e68_exception_address($c, $283, 0, 0); //@line 47777
   return;
  }
  HEAP16[$169 >> 1] = HEAP16[$167 >> 1] | 0; //@line 47783
  $289 = $283 & 16777215; //@line 47784
  $290 = $289 + 1 | 0; //@line 47785
  if ($290 >>> 0 < (HEAP32[$172 >> 2] | 0) >>> 0) {
   $294 = HEAP32[$224 >> 2] | 0; //@line 47790
   $_0_i_i23_i = HEAPU8[$294 + $289 | 0] << 8 | HEAPU8[$294 + $290 | 0]; //@line 47800
  } else {
   $_0_i_i23_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$227 >> 2] | 0, $289) | 0; //@line 47807
  }
  HEAP16[$167 >> 1] = $_0_i_i23_i; //@line 47810
  if ((HEAP8[$192] | 0) == 0) {
   HEAP32[$161 >> 2] = (HEAP32[$161 >> 2] | 0) + 2; //@line 47817
   HEAP32[$199 >> 2] = (HEAP32[$199 >> 2] | 0) + 2; //@line 47820
   return;
  } else {
   _e68_exception_bus($c); //@line 47825
   return;
  }
 }
}
function _op4e40($c) {
 $c = $c | 0;
 var $1 = 0, $3 = 0, $14 = 0, $15 = 0, $18 = 0, $19 = 0, $24 = 0, $27 = 0, $28 = 0, $34 = 0, $_0_i_i_i = 0, $56 = 0, $62 = 0, $65 = 0, $66 = 0, $71 = 0, $74 = 0, $75 = 0, $81 = 0, $_0_i_i_i18 = 0, $103 = 0, $112 = 0, $113 = 0, $118 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $128 = 0, $_0_i_i_i20 = 0, $143 = 0, $150 = 0, $154 = 0, $157 = 0, $160 = 0, $166 = 0, $167 = 0, $172 = 0, $_0_i_i7_i = 0, $196 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $210 = 0, $224 = 0, $225 = 0, $_0_i_i = 0, $227 = 0, $228 = 0, $232 = 0, $259 = 0, $260 = 0, $266 = 0, $267 = 0, $272 = 0, $_0_i23_i = 0, $288 = 0, $291 = 0, $292 = 0, $297 = 0, $304 = 0, $310 = 0, $317 = 0, $319 = 0, $320 = 0, $321 = 0, $326 = 0, $341 = 0, $342 = 0, $348 = 0, $355 = 0, $356 = 0, $360 = 0, $373 = 0, $phitmp_i = 0, $376 = 0, $384 = 0, $388 = 0, $389 = 0, $394 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $404 = 0, $_0_i_i_i23 = 0, $419 = 0, $426 = 0, $430 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $443 = 0, $_0_i13_i = 0, $472 = 0, $480 = 0, $481 = 0, $486 = 0, $501 = 0, $507 = 0, $514 = 0, $515 = 0, $519 = 0, $532 = 0, $phitmp_i27 = 0, $535 = 0, $539 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $548 = 0, $_0_i_i28 = 0, $575 = 0, $577 = 0, $584 = 0, $586 = 0, $587 = 0, $588 = 0, $593 = 0, $608 = 0, $609 = 0, $615 = 0, $616 = 0, $623 = 0, $624 = 0, $628 = 0, $641 = 0, $phitmp_i32 = 0, $644 = 0, $648 = 0, $649 = 0, $654 = 0, $657 = 0, $658 = 0, $664 = 0, $_0_i_i_i34 = 0, $686 = 0, $695 = 0, $699 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $extract_t19_i = 0, $717 = 0, $_0_i_off0_i = 0, $719 = 0, $725 = 0, $726 = 0, $730 = 0, $_0_i14_i = 0, $757 = 0, $759 = 0, $766 = 0, $768 = 0, $769 = 0, $770 = 0, $775 = 0, $790 = 0, $791 = 0, $797 = 0, $798 = 0, $805 = 0, $806 = 0, $810 = 0, $823 = 0, $phitmp_i40 = 0, $826 = 0, $830 = 0, $835 = 0, $839 = 0, $844 = 0, $845 = 0, $850 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $860 = 0, $_0_i_i_i42 = 0, $875 = 0, $882 = 0, $886 = 0, $887 = 0, $888 = 0, $902 = 0, $922 = 0, $val_0_i = 0, $932 = 0, $938 = 0, $941 = 0, $947 = 0, $948 = 0, $953 = 0, $_0_i_i19_i = 0, $977 = 0, $982 = 0, $986 = 0, $991 = 0, $992 = 0, $997 = 0, $999 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1007 = 0, $1022 = 0, $1023 = 0, $1029 = 0, $1030 = 0, $1032 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1039 = 0, $val_0_in_i = 0, $val_0_i45 = 0, $1056 = 0, $1075 = 0, $1081 = 0, $1088 = 0, $1089 = 0, $1093 = 0, $1106 = 0, $phitmp_i47 = 0, $1109 = 0, $1110 = 0, $1115 = 0, $1117 = 0, $1118 = 0, $1123 = 0, $1126 = 0, $1127 = 0, $1133 = 0, $_0_i_i_i48 = 0, $1155 = 0, $1162 = 0, $1163 = 0, $1168 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1178 = 0, $_0_i_i_i50 = 0, $1193 = 0, $1200 = 0, $1205 = 0, $1207 = 0, $1212 = 0, $1215 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $1220 = 0, $1221 = 0, $1227 = 0, $1251 = 0, $1257 = 0, $1258 = 0, $1263 = 0, $_0_i_i15_i = 0, $1288 = 0, $1289 = 0, $1299 = 0, $1302 = 0, $1303 = 0, $1304 = 0, $1305 = 0, $1310 = 0, $_0_i15_i = 0, $1339 = 0, $1340 = 0, $1345 = 0, $1348 = 0, $1349 = 0, $1354 = 0, $_0_i_i_i54 = 0, $1376 = 0, $1388 = 0, $1391 = 0, $1392 = 0, $1397 = 0, $1400 = 0, $1401 = 0, $1407 = 0, $_0_i_i_i57 = 0, $1429 = 0, $1442 = 0, $1445 = 0, $1446 = 0, $1451 = 0, $1454 = 0, $1455 = 0, $1461 = 0, $_0_i_i_i60 = 0, $1483 = 0, $1487 = 0;
 $1 = $c + 160 | 0; //@line 48001
 $3 = HEAPU16[$1 >> 1] | 0; //@line 48003
 if (($3 | 0) == 20086) {
  $648 = $c + 156 | 0; //@line 48005
  $649 = HEAP32[$648 >> 2] | 0; //@line 48006
  if (($649 & 1 | 0) != 0) {
   _e68_exception_address($c, $649, 0, 0); //@line 48011
   return;
  }
  $654 = $c + 164 | 0; //@line 48016
  HEAP16[$c + 162 >> 1] = HEAP16[$654 >> 1] | 0; //@line 48019
  $657 = $649 & 16777215; //@line 48020
  $658 = $657 + 1 | 0; //@line 48021
  if ($658 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $664 = HEAP32[$c + 32 >> 2] | 0; //@line 48028
   $_0_i_i_i34 = HEAPU8[$664 + $657 | 0] << 8 | HEAPU8[$664 + $658 | 0]; //@line 48038
  } else {
   $_0_i_i_i34 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $657) | 0; //@line 48046
  }
  HEAP16[$654 >> 1] = $_0_i_i_i34; //@line 48049
  if ((HEAP8[$c + 336 | 0] | 0) != 0) {
   _e68_exception_bus($c); //@line 48055
   return;
  }
  HEAP32[$648 >> 2] = (HEAP32[$648 >> 2] | 0) + 2; //@line 48062
  $686 = $c + 152 | 0; //@line 48063
  HEAP32[$686 >> 2] = (HEAP32[$686 >> 2] | 0) + 2; //@line 48066
  if ((HEAP16[$c + 166 >> 1] & 2) == 0) {
   $695 = $c + 372 | 0; //@line 48073
   HEAP32[$695 >> 2] = (HEAP32[$695 >> 2] | 0) + 4; //@line 48076
   return;
  } else {
   _e68_exception_overflow($c); //@line 48080
   return;
  }
 } else if (($3 | 0) == 20081) {
  $62 = $c + 372 | 0; //@line 48086
  HEAP32[$62 >> 2] = (HEAP32[$62 >> 2] | 0) + 4; //@line 48089
  $65 = $c + 156 | 0; //@line 48090
  $66 = HEAP32[$65 >> 2] | 0; //@line 48091
  if (($66 & 1 | 0) != 0) {
   _e68_exception_address($c, $66, 0, 0); //@line 48096
   return;
  }
  $71 = $c + 164 | 0; //@line 48101
  HEAP16[$c + 162 >> 1] = HEAP16[$71 >> 1] | 0; //@line 48104
  $74 = $66 & 16777215; //@line 48105
  $75 = $74 + 1 | 0; //@line 48106
  if ($75 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $81 = HEAP32[$c + 32 >> 2] | 0; //@line 48113
   $_0_i_i_i18 = HEAPU8[$81 + $74 | 0] << 8 | HEAPU8[$81 + $75 | 0]; //@line 48123
  } else {
   $_0_i_i_i18 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $74) | 0; //@line 48131
  }
  HEAP16[$71 >> 1] = $_0_i_i_i18; //@line 48134
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$65 >> 2] = (HEAP32[$65 >> 2] | 0) + 2; //@line 48142
   $103 = $c + 152 | 0; //@line 48143
   HEAP32[$103 >> 2] = (HEAP32[$103 >> 2] | 0) + 2; //@line 48146
   return;
  } else {
   _e68_exception_bus($c); //@line 48151
   return;
  }
 } else if (($3 | 0) == 20090) {
  $830 = $c | 0; //@line 48157
  if ((HEAP32[$830 >> 2] & 2 | 0) == 0) {
   _e68_exception_illegal($c); //@line 48163
   $835 = $c + 372 | 0; //@line 48164
   HEAP32[$835 >> 2] = (HEAP32[$835 >> 2] | 0) + 2; //@line 48167
   return;
  }
  $839 = $c + 334 | 0; //@line 48172
  if ((HEAP8[$839] | 0) == 0) {
   _e68_exception_privilege($c); //@line 48177
   return;
  }
  $844 = $c + 156 | 0; //@line 48182
  $845 = HEAP32[$844 >> 2] | 0; //@line 48183
  if (($845 & 1 | 0) != 0) {
   _e68_exception_address($c, $845, 0, 0); //@line 48188
   return;
  }
  $850 = $c + 164 | 0; //@line 48193
  $852 = $c + 162 | 0; //@line 48195
  HEAP16[$852 >> 1] = HEAP16[$850 >> 1] | 0; //@line 48196
  $853 = $845 & 16777215; //@line 48197
  $854 = $853 + 1 | 0; //@line 48198
  $855 = $c + 36 | 0; //@line 48199
  if ($854 >>> 0 < (HEAP32[$855 >> 2] | 0) >>> 0) {
   $860 = HEAP32[$c + 32 >> 2] | 0; //@line 48205
   $_0_i_i_i42 = HEAPU8[$860 + $853 | 0] << 8 | HEAPU8[$860 + $854 | 0]; //@line 48215
  } else {
   $_0_i_i_i42 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $853) | 0; //@line 48223
  }
  HEAP16[$850 >> 1] = $_0_i_i_i42; //@line 48226
  $875 = $c + 336 | 0; //@line 48227
  if ((HEAP8[$875] | 0) != 0) {
   _e68_exception_bus($c); //@line 48232
   return;
  }
  HEAP32[$844 >> 2] = (HEAP32[$844 >> 2] | 0) + 2; //@line 48239
  $882 = $c + 152 | 0; //@line 48240
  HEAP32[$882 >> 2] = (HEAP32[$882 >> 2] | 0) + 2; //@line 48243
  $886 = HEAPU16[$852 >> 1] | 0; //@line 48245
  $887 = $886 & 4095; //@line 48246
  $888 = $886 >>> 12; //@line 48247
  do {
   if (($887 | 0) == 0) {
    $val_0_i = HEAP32[$c + 180 >> 2] & 3; //@line 48254
   } else if (($887 | 0) == 1) {
    $val_0_i = HEAP32[$c + 184 >> 2] & 3; //@line 48260
   } else if (($887 | 0) == 2) {
    if ((HEAP32[$830 >> 2] & 4 | 0) != 0) {
     $val_0_i = HEAP32[$c + 176 >> 2] | 0; //@line 48270
     break;
    }
    _e68_exception_illegal($c); //@line 48273
    $902 = $c + 372 | 0; //@line 48274
    HEAP32[$902 >> 2] = (HEAP32[$902 >> 2] | 0) + 2; //@line 48277
    return;
   } else if (($887 | 0) == 2048) {
    $val_0_i = HEAP32[((HEAP8[$839] | 0) == 0 ? $c + 148 | 0 : $c + 168 | 0) >> 2] | 0; //@line 48289
   } else if (($887 | 0) == 2049) {
    $val_0_i = HEAP32[$c + 176 >> 2] | 0; //@line 48294
   } else if (($887 | 0) == 2050) {
    if ((HEAP32[$830 >> 2] & 4 | 0) != 0) {
     $val_0_i = HEAP32[$c + 176 >> 2] | 0; //@line 48304
     break;
    }
    _e68_exception_illegal($c); //@line 48307
    $922 = $c + 372 | 0; //@line 48308
    HEAP32[$922 >> 2] = (HEAP32[$922 >> 2] | 0) + 2; //@line 48311
    return;
   } else {
    _e68_exception_illegal($c); //@line 48316
    return;
   }
  } while (0);
  $932 = $888 & 7; //@line 48325
  if (($888 & 8 | 0) == 0) {
   HEAP32[$c + 88 + ($932 << 2) >> 2] = $val_0_i; //@line 48329
  } else {
   HEAP32[$c + 120 + ($932 << 2) >> 2] = $val_0_i; //@line 48332
  }
  $938 = $c + 372 | 0; //@line 48335
  HEAP32[$938 >> 2] = (HEAP32[$938 >> 2] | 0) + 12; //@line 48338
  $941 = HEAP32[$844 >> 2] | 0; //@line 48339
  if (($941 & 1 | 0) != 0) {
   _e68_exception_address($c, $941, 0, 0); //@line 48344
   return;
  }
  HEAP16[$852 >> 1] = HEAP16[$850 >> 1] | 0; //@line 48350
  $947 = $941 & 16777215; //@line 48351
  $948 = $947 + 1 | 0; //@line 48352
  if ($948 >>> 0 < (HEAP32[$855 >> 2] | 0) >>> 0) {
   $953 = HEAP32[$c + 32 >> 2] | 0; //@line 48358
   $_0_i_i19_i = HEAPU8[$953 + $947 | 0] << 8 | HEAPU8[$953 + $948 | 0]; //@line 48368
  } else {
   $_0_i_i19_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $947) | 0; //@line 48376
  }
  HEAP16[$850 >> 1] = $_0_i_i19_i; //@line 48379
  if ((HEAP8[$875] | 0) == 0) {
   HEAP32[$844 >> 2] = (HEAP32[$844 >> 2] | 0) + 2; //@line 48386
   HEAP32[$882 >> 2] = (HEAP32[$882 >> 2] | 0) + 2; //@line 48389
   return;
  } else {
   _e68_exception_bus($c); //@line 48394
   return;
  }
 } else if (($3 | 0) == 20083) {
  $196 = $c + 334 | 0; //@line 48400
  if ((HEAP8[$196] | 0) == 0) {
   _e68_exception_privilege($c); //@line 48405
   return;
  }
  $201 = $c + 148 | 0; //@line 48410
  $202 = HEAP32[$201 >> 2] | 0; //@line 48411
  $203 = $202 & 16777215; //@line 48412
  $204 = $203 + 1 | 0; //@line 48413
  $205 = $c + 36 | 0; //@line 48414
  $206 = HEAP32[$205 >> 2] | 0; //@line 48415
  if ($204 >>> 0 < $206 >>> 0) {
   $210 = HEAP32[$c + 32 >> 2] | 0; //@line 48420
   $_0_i_i = HEAPU8[$210 + $203 | 0] << 8 | HEAPU8[$210 + $204 | 0];
   $225 = $206;
  } else {
   $224 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $203) | 0; //@line 48436
   $_0_i_i = $224;
   $225 = HEAP32[$205 >> 2] | 0;
  }
  $227 = $202 + 2 & 16777215; //@line 48444
  $228 = $227 + 3 | 0; //@line 48445
  if ($228 >>> 0 < $225 >>> 0) {
   $232 = HEAP32[$c + 32 >> 2] | 0; //@line 48450
   $259 = ((HEAPU8[$232 + $227 | 0] << 8 | HEAPU8[$232 + ($227 + 1) | 0]) << 8 | HEAPU8[$232 + ($227 + 2) | 0]) << 8 | HEAPU8[$232 + $228 | 0]; //@line 48472
  } else {
   $259 = FUNCTION_TABLE_iii[HEAP32[$c + 16 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $227) | 0; //@line 48480
  }
  $260 = $c | 0; //@line 48483
  do {
   if ((HEAP32[$260 >> 2] & 2 | 0) != 0) {
    $266 = $202 + 6 & 16777215; //@line 48491
    $267 = $266 + 1 | 0; //@line 48492
    if ($267 >>> 0 < (HEAP32[$205 >> 2] | 0) >>> 0) {
     $272 = HEAP32[$c + 32 >> 2] | 0; //@line 48498
     $_0_i23_i = HEAPU8[$272 + $266 | 0] << 8 | HEAPU8[$272 + $267 | 0]; //@line 48508
    } else {
     $_0_i23_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $266) | 0; //@line 48516
    }
    $288 = ($_0_i23_i & 65535) >>> 12; //@line 48520
    if (($288 | 0) == 0 | ($288 | 0) == 8) {
     break;
    }
    _e68_exception_format($c); //@line 48524
    return;
   }
  } while (0);
  _e68_set_sr($c, $_0_i_i); //@line 48530
  $291 = $c + 152 | 0; //@line 48531
  HEAP32[$291 >> 2] = $259; //@line 48532
  $292 = $c + 156 | 0; //@line 48533
  HEAP32[$292 >> 2] = $259; //@line 48534
  do {
   if ((HEAP32[$260 >> 2] & 2 | 0) == 0) {
    $304 = $202 + 6 | 0; //@line 48541
    if ((HEAP8[$196] | 0) == 0) {
     HEAP32[$c + 172 >> 2] = $304; //@line 48547
     break;
    } else {
     HEAP32[$201 >> 2] = $304; //@line 48550
     break;
    }
   } else {
    $297 = $202 + 8 | 0; //@line 48555
    if ((HEAP8[$196] | 0) == 0) {
     HEAP32[$c + 172 >> 2] = $297; //@line 48561
     break;
    } else {
     HEAP32[$201 >> 2] = $297; //@line 48564
     break;
    }
   }
  } while (0);
  $310 = $c + 372 | 0; //@line 48570
  HEAP32[$310 >> 2] = (HEAP32[$310 >> 2] | 0) + 20; //@line 48573
  if (($259 & 1 | 0) != 0) {
   _e68_exception_address($c, $259, 0, 0); //@line 48578
   return;
  }
  $317 = $c + 164 | 0; //@line 48583
  $319 = $c + 162 | 0; //@line 48585
  HEAP16[$319 >> 1] = HEAP16[$317 >> 1] | 0; //@line 48586
  $320 = $259 & 16777215; //@line 48587
  $321 = $320 + 1 | 0; //@line 48588
  if ($321 >>> 0 < (HEAP32[$205 >> 2] | 0) >>> 0) {
   $326 = HEAP32[$c + 32 >> 2] | 0; //@line 48594
   $341 = HEAPU8[$326 + $320 | 0] << 8 | HEAPU8[$326 + $321 | 0]; //@line 48604
  } else {
   $341 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $320) | 0; //@line 48612
  }
  HEAP16[$317 >> 1] = $341; //@line 48615
  $342 = $c + 336 | 0; //@line 48616
  if ((HEAP8[$342] | 0) != 0) {
   _e68_exception_bus($c); //@line 48621
   return;
  }
  $348 = (HEAP32[$292 >> 2] | 0) + 2 | 0; //@line 48627
  HEAP32[$292 >> 2] = $348; //@line 48628
  HEAP32[$291 >> 2] = (HEAP32[$291 >> 2] | 0) + 2; //@line 48631
  if (($348 & 1 | 0) != 0) {
   _e68_exception_address($c, $348, 0, 0); //@line 48636
   return;
  }
  HEAP16[$319 >> 1] = $341; //@line 48641
  $355 = $348 & 16777215; //@line 48642
  $356 = $355 + 1 | 0; //@line 48643
  do {
   if ($356 >>> 0 < (HEAP32[$205 >> 2] | 0) >>> 0) {
    $360 = HEAP32[$c + 32 >> 2] | 0; //@line 48650
    HEAP16[$317 >> 1] = HEAPU8[$360 + $355 | 0] << 8 | HEAPU8[$360 + $356 | 0]; //@line 48659
    $376 = $348; //@line 48661
   } else {
    $373 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $355) | 0; //@line 48667
    $phitmp_i = (HEAP8[$342] | 0) == 0; //@line 48669
    HEAP16[$317 >> 1] = $373; //@line 48670
    if ($phitmp_i) {
     $376 = HEAP32[$292 >> 2] | 0; //@line 48675
     break;
    }
    _e68_exception_bus($c); //@line 48678
    return;
   }
  } while (0);
  HEAP32[$292 >> 2] = $376 + 2; //@line 48686
  HEAP32[$291 >> 2] = $259; //@line 48687
  return;
 } else if (($3 | 0) == 20087) {
  $699 = $c + 148 | 0; //@line 48692
  $700 = HEAP32[$699 >> 2] | 0; //@line 48693
  $701 = $700 & 16777215; //@line 48694
  $702 = $701 + 1 | 0; //@line 48695
  $703 = $c + 36 | 0; //@line 48696
  $704 = HEAP32[$703 >> 2] | 0; //@line 48697
  if ($702 >>> 0 < $704 >>> 0) {
   $_0_i_off0_i = HEAP8[(HEAP32[$c + 32 >> 2] | 0) + $702 | 0] | 0;
   $717 = $704;
  } else {
   $extract_t19_i = (FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $701) | 0) & 255; //@line 48713
   $_0_i_off0_i = $extract_t19_i;
   $717 = HEAP32[$703 >> 2] | 0;
  }
  $719 = $c + 166 | 0; //@line 48721
  HEAP16[$719 >> 1] = HEAP16[$719 >> 1] & -256 | $_0_i_off0_i & 31; //@line 48726
  $725 = $700 + 2 & 16777215; //@line 48728
  $726 = $725 + 3 | 0; //@line 48729
  if ($726 >>> 0 < $717 >>> 0) {
   $730 = HEAP32[$c + 32 >> 2] | 0; //@line 48734
   $_0_i14_i = ((HEAPU8[$730 + $725 | 0] << 8 | HEAPU8[$730 + ($725 + 1) | 0]) << 8 | HEAPU8[$730 + ($725 + 2) | 0]) << 8 | HEAPU8[$730 + $726 | 0]; //@line 48756
  } else {
   $_0_i14_i = FUNCTION_TABLE_iii[HEAP32[$c + 16 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $725) | 0; //@line 48764
  }
  $757 = $c + 156 | 0; //@line 48767
  HEAP32[$757 >> 2] = $_0_i14_i; //@line 48768
  HEAP32[$699 >> 2] = $700 + 6; //@line 48770
  $759 = $c + 372 | 0; //@line 48771
  HEAP32[$759 >> 2] = (HEAP32[$759 >> 2] | 0) + 20; //@line 48774
  if (($_0_i14_i & 1 | 0) != 0) {
   _e68_exception_address($c, $_0_i14_i, 0, 0); //@line 48779
   return;
  }
  $766 = $c + 164 | 0; //@line 48784
  $768 = $c + 162 | 0; //@line 48786
  HEAP16[$768 >> 1] = HEAP16[$766 >> 1] | 0; //@line 48787
  $769 = $_0_i14_i & 16777215; //@line 48788
  $770 = $769 + 1 | 0; //@line 48789
  if ($770 >>> 0 < (HEAP32[$703 >> 2] | 0) >>> 0) {
   $775 = HEAP32[$c + 32 >> 2] | 0; //@line 48795
   $790 = HEAPU8[$775 + $769 | 0] << 8 | HEAPU8[$775 + $770 | 0]; //@line 48805
  } else {
   $790 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $769) | 0; //@line 48813
  }
  HEAP16[$766 >> 1] = $790; //@line 48816
  $791 = $c + 336 | 0; //@line 48817
  if ((HEAP8[$791] | 0) != 0) {
   _e68_exception_bus($c); //@line 48822
   return;
  }
  $797 = (HEAP32[$757 >> 2] | 0) + 2 | 0; //@line 48828
  HEAP32[$757 >> 2] = $797; //@line 48829
  $798 = $c + 152 | 0; //@line 48830
  HEAP32[$798 >> 2] = (HEAP32[$798 >> 2] | 0) + 2; //@line 48833
  if (($797 & 1 | 0) != 0) {
   _e68_exception_address($c, $797, 0, 0); //@line 48838
   return;
  }
  HEAP16[$768 >> 1] = $790; //@line 48843
  $805 = $797 & 16777215; //@line 48844
  $806 = $805 + 1 | 0; //@line 48845
  do {
   if ($806 >>> 0 < (HEAP32[$703 >> 2] | 0) >>> 0) {
    $810 = HEAP32[$c + 32 >> 2] | 0; //@line 48852
    HEAP16[$766 >> 1] = HEAPU8[$810 + $805 | 0] << 8 | HEAPU8[$810 + $806 | 0]; //@line 48861
    $826 = $797; //@line 48863
   } else {
    $823 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $805) | 0; //@line 48869
    $phitmp_i40 = (HEAP8[$791] | 0) == 0; //@line 48871
    HEAP16[$766 >> 1] = $823; //@line 48872
    if ($phitmp_i40) {
     $826 = HEAP32[$757 >> 2] | 0; //@line 48877
     break;
    }
    _e68_exception_bus($c); //@line 48880
    return;
   }
  } while (0);
  HEAP32[$757 >> 2] = $826 + 2; //@line 48888
  HEAP32[$798 >> 2] = $826 - 2; //@line 48890
  return;
 } else if (($3 | 0) == 20080) {
  if ((HEAP8[$c + 334 | 0] | 0) == 0) {
   _e68_exception_privilege($c); //@line 48900
   return;
  }
  $14 = $c + 372 | 0; //@line 48909
  $15 = HEAP32[$14 >> 2] | 0; //@line 48910
  if ((HEAP32[$c >> 2] & 8 | 0) == 0) {
   HEAP32[$14 >> 2] = $15 + 132; //@line 48914
   _e68_reset($c); //@line 48915
   return;
  }
  HEAP32[$14 >> 2] = $15 + 4; //@line 48921
  $18 = $c + 156 | 0; //@line 48922
  $19 = HEAP32[$18 >> 2] | 0; //@line 48923
  if (($19 & 1 | 0) != 0) {
   _e68_exception_address($c, $19, 0, 0); //@line 48928
   return;
  }
  $24 = $c + 164 | 0; //@line 48933
  HEAP16[$c + 162 >> 1] = HEAP16[$24 >> 1] | 0; //@line 48936
  $27 = $19 & 16777215; //@line 48937
  $28 = $27 + 1 | 0; //@line 48938
  if ($28 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $34 = HEAP32[$c + 32 >> 2] | 0; //@line 48945
   $_0_i_i_i = HEAPU8[$34 + $27 | 0] << 8 | HEAPU8[$34 + $28 | 0]; //@line 48955
  } else {
   $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $27) | 0; //@line 48963
  }
  HEAP16[$24 >> 1] = $_0_i_i_i; //@line 48966
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 2; //@line 48974
   $56 = $c + 152 | 0; //@line 48975
   HEAP32[$56 >> 2] = (HEAP32[$56 >> 2] | 0) + 2; //@line 48978
   return;
  } else {
   _e68_exception_bus($c); //@line 48983
   return;
  }
 } else if (($3 | 0) == 20085) {
  $539 = $c + 148 | 0; //@line 48989
  $540 = HEAP32[$539 >> 2] | 0; //@line 48990
  $541 = $540 & 16777215; //@line 48991
  $542 = $541 + 3 | 0; //@line 48992
  $543 = $c + 36 | 0; //@line 48993
  if ($542 >>> 0 < (HEAP32[$543 >> 2] | 0) >>> 0) {
   $548 = HEAP32[$c + 32 >> 2] | 0; //@line 48999
   $_0_i_i28 = ((HEAPU8[$548 + $541 | 0] << 8 | HEAPU8[$548 + ($541 + 1) | 0]) << 8 | HEAPU8[$548 + ($541 + 2) | 0]) << 8 | HEAPU8[$548 + $542 | 0]; //@line 49021
  } else {
   $_0_i_i28 = FUNCTION_TABLE_iii[HEAP32[$c + 16 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $541) | 0; //@line 49029
  }
  $575 = $c + 156 | 0; //@line 49032
  HEAP32[$575 >> 2] = $_0_i_i28; //@line 49033
  HEAP32[$539 >> 2] = $540 + 4; //@line 49035
  $577 = $c + 372 | 0; //@line 49036
  HEAP32[$577 >> 2] = (HEAP32[$577 >> 2] | 0) + 16; //@line 49039
  if (($_0_i_i28 & 1 | 0) != 0) {
   _e68_exception_address($c, $_0_i_i28, 0, 0); //@line 49044
   return;
  }
  $584 = $c + 164 | 0; //@line 49049
  $586 = $c + 162 | 0; //@line 49051
  HEAP16[$586 >> 1] = HEAP16[$584 >> 1] | 0; //@line 49052
  $587 = $_0_i_i28 & 16777215; //@line 49053
  $588 = $587 + 1 | 0; //@line 49054
  if ($588 >>> 0 < (HEAP32[$543 >> 2] | 0) >>> 0) {
   $593 = HEAP32[$c + 32 >> 2] | 0; //@line 49060
   $608 = HEAPU8[$593 + $587 | 0] << 8 | HEAPU8[$593 + $588 | 0]; //@line 49070
  } else {
   $608 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $587) | 0; //@line 49078
  }
  HEAP16[$584 >> 1] = $608; //@line 49081
  $609 = $c + 336 | 0; //@line 49082
  if ((HEAP8[$609] | 0) != 0) {
   _e68_exception_bus($c); //@line 49087
   return;
  }
  $615 = (HEAP32[$575 >> 2] | 0) + 2 | 0; //@line 49093
  HEAP32[$575 >> 2] = $615; //@line 49094
  $616 = $c + 152 | 0; //@line 49095
  HEAP32[$616 >> 2] = (HEAP32[$616 >> 2] | 0) + 2; //@line 49098
  if (($615 & 1 | 0) != 0) {
   _e68_exception_address($c, $615, 0, 0); //@line 49103
   return;
  }
  HEAP16[$586 >> 1] = $608; //@line 49108
  $623 = $615 & 16777215; //@line 49109
  $624 = $623 + 1 | 0; //@line 49110
  do {
   if ($624 >>> 0 < (HEAP32[$543 >> 2] | 0) >>> 0) {
    $628 = HEAP32[$c + 32 >> 2] | 0; //@line 49117
    HEAP16[$584 >> 1] = HEAPU8[$628 + $623 | 0] << 8 | HEAPU8[$628 + $624 | 0]; //@line 49126
    $644 = $615; //@line 49128
   } else {
    $641 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $623) | 0; //@line 49134
    $phitmp_i32 = (HEAP8[$609] | 0) == 0; //@line 49136
    HEAP16[$584 >> 1] = $641; //@line 49137
    if ($phitmp_i32) {
     $644 = HEAP32[$575 >> 2] | 0; //@line 49142
     break;
    }
    _e68_exception_bus($c); //@line 49145
    return;
   }
  } while (0);
  HEAP32[$575 >> 2] = $644 + 2; //@line 49153
  HEAP32[$616 >> 2] = $644 - 2; //@line 49155
  return;
 } else if (($3 | 0) == 20091) {
  $977 = $c | 0; //@line 49160
  if ((HEAP32[$977 >> 2] & 2 | 0) == 0) {
   _e68_exception_illegal($c); //@line 49166
   $982 = $c + 372 | 0; //@line 49167
   HEAP32[$982 >> 2] = (HEAP32[$982 >> 2] | 0) + 2; //@line 49170
   return;
  }
  $986 = $c + 334 | 0; //@line 49175
  if ((HEAP8[$986] | 0) == 0) {
   _e68_exception_privilege($c); //@line 49180
   return;
  }
  $991 = $c + 156 | 0; //@line 49185
  $992 = HEAP32[$991 >> 2] | 0; //@line 49186
  if (($992 & 1 | 0) != 0) {
   _e68_exception_address($c, $992, 0, 0); //@line 49191
   return;
  }
  $997 = $c + 164 | 0; //@line 49196
  $999 = $c + 162 | 0; //@line 49198
  HEAP16[$999 >> 1] = HEAP16[$997 >> 1] | 0; //@line 49199
  $1000 = $992 & 16777215; //@line 49200
  $1001 = $1000 + 1 | 0; //@line 49201
  $1002 = $c + 36 | 0; //@line 49202
  if ($1001 >>> 0 < (HEAP32[$1002 >> 2] | 0) >>> 0) {
   $1007 = HEAP32[$c + 32 >> 2] | 0; //@line 49208
   $1022 = HEAPU8[$1007 + $1000 | 0] << 8 | HEAPU8[$1007 + $1001 | 0]; //@line 49218
  } else {
   $1022 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $1000) | 0; //@line 49226
  }
  HEAP16[$997 >> 1] = $1022; //@line 49229
  $1023 = $c + 336 | 0; //@line 49230
  if ((HEAP8[$1023] | 0) != 0) {
   _e68_exception_bus($c); //@line 49235
   return;
  }
  $1029 = (HEAP32[$991 >> 2] | 0) + 2 | 0; //@line 49241
  HEAP32[$991 >> 2] = $1029; //@line 49242
  $1030 = $c + 152 | 0; //@line 49243
  $1032 = (HEAP32[$1030 >> 2] | 0) + 2 | 0; //@line 49245
  HEAP32[$1030 >> 2] = $1032; //@line 49246
  $1034 = HEAPU16[$999 >> 1] | 0; //@line 49248
  $1035 = $1034 & 4095; //@line 49249
  $1036 = $1034 >>> 12; //@line 49250
  $1039 = $1036 & 7; //@line 49253
  if (($1036 & 8 | 0) == 0) {
   $val_0_in_i = $c + 88 + ($1039 << 2) | 0; //@line 49257
  } else {
   $val_0_in_i = $c + 120 + ($1039 << 2) | 0; //@line 49261
  }
  $val_0_i45 = HEAP32[$val_0_in_i >> 2] | 0; //@line 49264
  do {
   if (($1035 | 0) == 1) {
    HEAP32[$c + 184 >> 2] = $val_0_i45 & 3; //@line 49269
   } else if (($1035 | 0) == 2) {
    if ((HEAP32[$977 >> 2] & 4 | 0) != 0) {
     HEAP32[$c + 188 >> 2] = $val_0_i45; //@line 49278
     break;
    }
    _e68_exception_illegal($c); //@line 49282
    $1056 = $c + 372 | 0; //@line 49283
    HEAP32[$1056 >> 2] = (HEAP32[$1056 >> 2] | 0) + 2; //@line 49286
    return;
   } else if (($1035 | 0) == 2048) {
    if ((HEAP8[$986] | 0) == 0) {
     HEAP32[$c + 148 >> 2] = $val_0_i45; //@line 49296
     break;
    } else {
     HEAP32[$c + 168 >> 2] = $val_0_i45; //@line 49300
     break;
    }
   } else if (($1035 | 0) == 2049) {
    HEAP32[$c + 176 >> 2] = $val_0_i45; //@line 49306
   } else if (($1035 | 0) == 2050) {
    if ((HEAP32[$977 >> 2] & 4 | 0) != 0) {
     HEAP32[$c + 188 >> 2] = $val_0_i45; //@line 49315
     break;
    }
    _e68_exception_illegal($c); //@line 49319
    $1075 = $c + 372 | 0; //@line 49320
    HEAP32[$1075 >> 2] = (HEAP32[$1075 >> 2] | 0) + 2; //@line 49323
    return;
   } else if (($1035 | 0) == 0) {
    HEAP32[$c + 180 >> 2] = $val_0_i45 & 3; //@line 49330
   } else {
    _e68_exception_illegal($c); //@line 49333
    return;
   }
  } while (0);
  $1081 = $c + 372 | 0; //@line 49339
  HEAP32[$1081 >> 2] = (HEAP32[$1081 >> 2] | 0) + 10; //@line 49342
  if (($1029 & 1 | 0) != 0) {
   _e68_exception_address($c, $1029, 0, 0); //@line 49347
   return;
  }
  HEAP16[$999 >> 1] = $1022; //@line 49352
  $1088 = $1029 & 16777215; //@line 49353
  $1089 = $1088 + 1 | 0; //@line 49354
  do {
   if ($1089 >>> 0 < (HEAP32[$1002 >> 2] | 0) >>> 0) {
    $1093 = HEAP32[$c + 32 >> 2] | 0; //@line 49361
    HEAP16[$997 >> 1] = HEAPU8[$1093 + $1088 | 0] << 8 | HEAPU8[$1093 + $1089 | 0]; //@line 49370
    $1110 = $1029;
    $1109 = $1032;
   } else {
    $1106 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $1088) | 0; //@line 49378
    $phitmp_i47 = (HEAP8[$1023] | 0) == 0; //@line 49380
    HEAP16[$997 >> 1] = $1106; //@line 49381
    if ($phitmp_i47) {
     $1110 = HEAP32[$991 >> 2] | 0;
     $1109 = HEAP32[$1030 >> 2] | 0;
     break;
    }
    _e68_exception_bus($c); //@line 49390
    return;
   }
  } while (0);
  HEAP32[$991 >> 2] = $1110 + 2; //@line 49399
  HEAP32[$1030 >> 2] = $1109 + 2; //@line 49401
  return;
 } else if (($3 | 0) == 20082) {
  if ((HEAP8[$c + 334 | 0] | 0) == 0) {
   _e68_exception_privilege($c); //@line 49411
   return;
  }
  $112 = $c + 156 | 0; //@line 49416
  $113 = HEAP32[$112 >> 2] | 0; //@line 49417
  if (($113 & 1 | 0) != 0) {
   _e68_exception_address($c, $113, 0, 0); //@line 49422
   return;
  }
  $118 = $c + 164 | 0; //@line 49427
  $120 = $c + 162 | 0; //@line 49429
  HEAP16[$120 >> 1] = HEAP16[$118 >> 1] | 0; //@line 49430
  $121 = $113 & 16777215; //@line 49431
  $122 = $121 + 1 | 0; //@line 49432
  $123 = $c + 36 | 0; //@line 49433
  if ($122 >>> 0 < (HEAP32[$123 >> 2] | 0) >>> 0) {
   $128 = HEAP32[$c + 32 >> 2] | 0; //@line 49439
   $_0_i_i_i20 = HEAPU8[$128 + $121 | 0] << 8 | HEAPU8[$128 + $122 | 0]; //@line 49449
  } else {
   $_0_i_i_i20 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $121) | 0; //@line 49457
  }
  HEAP16[$118 >> 1] = $_0_i_i_i20; //@line 49460
  $143 = $c + 336 | 0; //@line 49461
  if ((HEAP8[$143] | 0) != 0) {
   _e68_exception_bus($c); //@line 49466
   return;
  }
  HEAP32[$112 >> 2] = (HEAP32[$112 >> 2] | 0) + 2; //@line 49473
  $150 = $c + 152 | 0; //@line 49474
  HEAP32[$150 >> 2] = (HEAP32[$150 >> 2] | 0) + 2; //@line 49477
  _e68_set_sr($c, HEAP16[$120 >> 1] | 0); //@line 49479
  $154 = $c + 372 | 0; //@line 49480
  HEAP32[$154 >> 2] = (HEAP32[$154 >> 2] | 0) + 4; //@line 49483
  $157 = $c + 335 | 0; //@line 49484
  HEAP8[$157] = HEAP8[$157] | 1; //@line 49487
  $160 = HEAP32[$112 >> 2] | 0; //@line 49488
  if (($160 & 1 | 0) != 0) {
   _e68_exception_address($c, $160, 0, 0); //@line 49493
   return;
  }
  HEAP16[$120 >> 1] = HEAP16[$118 >> 1] | 0; //@line 49499
  $166 = $160 & 16777215; //@line 49500
  $167 = $166 + 1 | 0; //@line 49501
  if ($167 >>> 0 < (HEAP32[$123 >> 2] | 0) >>> 0) {
   $172 = HEAP32[$c + 32 >> 2] | 0; //@line 49507
   $_0_i_i7_i = HEAPU8[$172 + $166 | 0] << 8 | HEAPU8[$172 + $167 | 0]; //@line 49517
  } else {
   $_0_i_i7_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $166) | 0; //@line 49525
  }
  HEAP16[$118 >> 1] = $_0_i_i7_i; //@line 49528
  if ((HEAP8[$143] | 0) == 0) {
   HEAP32[$112 >> 2] = (HEAP32[$112 >> 2] | 0) + 2; //@line 49535
   HEAP32[$150 >> 2] = (HEAP32[$150 >> 2] | 0) + 2; //@line 49538
   return;
  } else {
   _e68_exception_bus($c); //@line 49543
   return;
  }
 } else if (($3 | 0) == 20084) {
  if ((HEAP32[$c >> 2] & 2 | 0) == 0) {
   _e68_exception_illegal($c); //@line 49555
   $384 = $c + 372 | 0; //@line 49556
   HEAP32[$384 >> 2] = (HEAP32[$384 >> 2] | 0) + 2; //@line 49559
   return;
  }
  $388 = $c + 156 | 0; //@line 49564
  $389 = HEAP32[$388 >> 2] | 0; //@line 49565
  if (($389 & 1 | 0) != 0) {
   _e68_exception_address($c, $389, 0, 0); //@line 49570
   return;
  }
  $394 = $c + 164 | 0; //@line 49575
  $396 = $c + 162 | 0; //@line 49577
  HEAP16[$396 >> 1] = HEAP16[$394 >> 1] | 0; //@line 49578
  $397 = $389 & 16777215; //@line 49579
  $398 = $397 + 1 | 0; //@line 49580
  $399 = $c + 36 | 0; //@line 49581
  if ($398 >>> 0 < (HEAP32[$399 >> 2] | 0) >>> 0) {
   $404 = HEAP32[$c + 32 >> 2] | 0; //@line 49587
   $_0_i_i_i23 = HEAPU8[$404 + $397 | 0] << 8 | HEAPU8[$404 + $398 | 0]; //@line 49597
  } else {
   $_0_i_i_i23 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $397) | 0; //@line 49605
  }
  HEAP16[$394 >> 1] = $_0_i_i_i23; //@line 49608
  $419 = $c + 336 | 0; //@line 49609
  if ((HEAP8[$419] | 0) != 0) {
   _e68_exception_bus($c); //@line 49614
   return;
  }
  HEAP32[$388 >> 2] = (HEAP32[$388 >> 2] | 0) + 2; //@line 49621
  $426 = $c + 152 | 0; //@line 49622
  HEAP32[$426 >> 2] = (HEAP32[$426 >> 2] | 0) + 2; //@line 49625
  $430 = HEAPU16[$396 >> 1] | 0; //@line 49627
  $435 = $c + 148 | 0; //@line 49632
  $436 = HEAP32[$435 >> 2] | 0; //@line 49633
  $437 = $436 & 16777215; //@line 49634
  $438 = $437 + 3 | 0; //@line 49635
  if ($438 >>> 0 < (HEAP32[$399 >> 2] | 0) >>> 0) {
   $443 = HEAP32[$c + 32 >> 2] | 0; //@line 49641
   $_0_i13_i = ((HEAPU8[$443 + $437 | 0] << 8 | HEAPU8[$443 + ($437 + 1) | 0]) << 8 | HEAPU8[$443 + ($437 + 2) | 0]) << 8 | HEAPU8[$443 + $438 | 0]; //@line 49663
  } else {
   $_0_i13_i = FUNCTION_TABLE_iii[HEAP32[$c + 16 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $437) | 0; //@line 49671
  }
  HEAP32[$388 >> 2] = $_0_i13_i; //@line 49674
  HEAP32[$435 >> 2] = $436 + 4 + (($430 & 32768 | 0) != 0 ? $430 | -65536 : $430); //@line 49677
  $472 = $c + 372 | 0; //@line 49678
  HEAP32[$472 >> 2] = (HEAP32[$472 >> 2] | 0) + 16; //@line 49681
  if (($_0_i13_i & 1 | 0) != 0) {
   _e68_exception_address($c, $_0_i13_i, 0, 0); //@line 49686
   return;
  }
  HEAP16[$396 >> 1] = HEAP16[$394 >> 1] | 0; //@line 49692
  $480 = $_0_i13_i & 16777215; //@line 49693
  $481 = $480 + 1 | 0; //@line 49694
  if ($481 >>> 0 < (HEAP32[$399 >> 2] | 0) >>> 0) {
   $486 = HEAP32[$c + 32 >> 2] | 0; //@line 49700
   $501 = HEAPU8[$486 + $480 | 0] << 8 | HEAPU8[$486 + $481 | 0]; //@line 49710
  } else {
   $501 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $480) | 0; //@line 49718
  }
  HEAP16[$394 >> 1] = $501; //@line 49721
  if ((HEAP8[$419] | 0) != 0) {
   _e68_exception_bus($c); //@line 49726
   return;
  }
  $507 = (HEAP32[$388 >> 2] | 0) + 2 | 0; //@line 49732
  HEAP32[$388 >> 2] = $507; //@line 49733
  HEAP32[$426 >> 2] = (HEAP32[$426 >> 2] | 0) + 2; //@line 49736
  if (($507 & 1 | 0) != 0) {
   _e68_exception_address($c, $507, 0, 0); //@line 49741
   return;
  }
  HEAP16[$396 >> 1] = $501; //@line 49746
  $514 = $507 & 16777215; //@line 49747
  $515 = $514 + 1 | 0; //@line 49748
  do {
   if ($515 >>> 0 < (HEAP32[$399 >> 2] | 0) >>> 0) {
    $519 = HEAP32[$c + 32 >> 2] | 0; //@line 49755
    HEAP16[$394 >> 1] = HEAPU8[$519 + $514 | 0] << 8 | HEAPU8[$519 + $515 | 0]; //@line 49764
    $535 = $507; //@line 49766
   } else {
    $532 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $514) | 0; //@line 49772
    $phitmp_i27 = (HEAP8[$419] | 0) == 0; //@line 49774
    HEAP16[$394 >> 1] = $532; //@line 49775
    if ($phitmp_i27) {
     $535 = HEAP32[$388 >> 2] | 0; //@line 49780
     break;
    }
    _e68_exception_bus($c); //@line 49783
    return;
   }
  } while (0);
  HEAP32[$388 >> 2] = $535 + 2; //@line 49791
  HEAP32[$426 >> 2] = $535 - 2; //@line 49793
  return;
 } else {
  $1115 = $3 >>> 3 & 7; //@line 49799
  if (($1115 | 0) == 3) {
   $1288 = $c + 120 + (($3 & 7) << 2) | 0; //@line 49802
   $1289 = HEAP32[$1288 >> 2] | 0; //@line 49803
   do {
    if ((HEAP32[$c >> 2] & 1 | 0) == 0) {
     if (($1289 & 1 | 0) == 0) {
      break;
     }
     _e68_exception_address($c, $1289, 1, 0); //@line 49817
     return;
    }
   } while (0);
   $1299 = $c + 372 | 0; //@line 49822
   HEAP32[$1299 >> 2] = (HEAP32[$1299 >> 2] | 0) + 12; //@line 49825
   $1302 = $c + 148 | 0; //@line 49826
   HEAP32[$1302 >> 2] = $1289; //@line 49827
   $1303 = $1289 & 16777215; //@line 49828
   $1304 = $1303 + 3 | 0; //@line 49829
   $1305 = $c + 36 | 0; //@line 49830
   if ($1304 >>> 0 < (HEAP32[$1305 >> 2] | 0) >>> 0) {
    $1310 = HEAP32[$c + 32 >> 2] | 0; //@line 49836
    $_0_i15_i = ((HEAPU8[$1310 + $1303 | 0] << 8 | HEAPU8[$1310 + ($1303 + 1) | 0]) << 8 | HEAPU8[$1310 + ($1303 + 2) | 0]) << 8 | HEAPU8[$1310 + $1304 | 0]; //@line 49858
   } else {
    $_0_i15_i = FUNCTION_TABLE_iii[HEAP32[$c + 16 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $1303) | 0; //@line 49866
   }
   HEAP32[$1288 >> 2] = $_0_i15_i; //@line 49869
   HEAP32[$1302 >> 2] = (HEAP32[$1302 >> 2] | 0) + 4; //@line 49872
   $1339 = $c + 156 | 0; //@line 49873
   $1340 = HEAP32[$1339 >> 2] | 0; //@line 49874
   if (($1340 & 1 | 0) != 0) {
    _e68_exception_address($c, $1340, 0, 0); //@line 49879
    return;
   }
   $1345 = $c + 164 | 0; //@line 49884
   HEAP16[$c + 162 >> 1] = HEAP16[$1345 >> 1] | 0; //@line 49887
   $1348 = $1340 & 16777215; //@line 49888
   $1349 = $1348 + 1 | 0; //@line 49889
   if ($1349 >>> 0 < (HEAP32[$1305 >> 2] | 0) >>> 0) {
    $1354 = HEAP32[$c + 32 >> 2] | 0; //@line 49895
    $_0_i_i_i54 = HEAPU8[$1354 + $1348 | 0] << 8 | HEAPU8[$1354 + $1349 | 0]; //@line 49905
   } else {
    $_0_i_i_i54 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $1348) | 0; //@line 49913
   }
   HEAP16[$1345 >> 1] = $_0_i_i_i54; //@line 49916
   if ((HEAP8[$c + 336 | 0] | 0) == 0) {
    HEAP32[$1339 >> 2] = (HEAP32[$1339 >> 2] | 0) + 2; //@line 49924
    $1376 = $c + 152 | 0; //@line 49925
    HEAP32[$1376 >> 2] = (HEAP32[$1376 >> 2] | 0) + 2; //@line 49928
    return;
   } else {
    _e68_exception_bus($c); //@line 49933
    return;
   }
  } else if (($1115 | 0) == 5) {
   if ((HEAP8[$c + 334 | 0] | 0) == 0) {
    _e68_exception_privilege($c); //@line 49944
    return;
   }
   HEAP32[$c + 120 + (($3 & 7) << 2) >> 2] = HEAP32[$c + 168 >> 2]; //@line 49952
   $1442 = $c + 372 | 0; //@line 49953
   HEAP32[$1442 >> 2] = (HEAP32[$1442 >> 2] | 0) + 4; //@line 49956
   $1445 = $c + 156 | 0; //@line 49957
   $1446 = HEAP32[$1445 >> 2] | 0; //@line 49958
   if (($1446 & 1 | 0) != 0) {
    _e68_exception_address($c, $1446, 0, 0); //@line 49963
    return;
   }
   $1451 = $c + 164 | 0; //@line 49968
   HEAP16[$c + 162 >> 1] = HEAP16[$1451 >> 1] | 0; //@line 49971
   $1454 = $1446 & 16777215; //@line 49972
   $1455 = $1454 + 1 | 0; //@line 49973
   if ($1455 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
    $1461 = HEAP32[$c + 32 >> 2] | 0; //@line 49980
    $_0_i_i_i60 = HEAPU8[$1461 + $1454 | 0] << 8 | HEAPU8[$1461 + $1455 | 0]; //@line 49990
   } else {
    $_0_i_i_i60 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $1454) | 0; //@line 49998
   }
   HEAP16[$1451 >> 1] = $_0_i_i_i60; //@line 50001
   if ((HEAP8[$c + 336 | 0] | 0) == 0) {
    HEAP32[$1445 >> 2] = (HEAP32[$1445 >> 2] | 0) + 2; //@line 50009
    $1483 = $c + 152 | 0; //@line 50010
    HEAP32[$1483 >> 2] = (HEAP32[$1483 >> 2] | 0) + 2; //@line 50013
    return;
   } else {
    _e68_exception_bus($c); //@line 50018
    return;
   }
  } else if (($1115 | 0) == 0 | ($1115 | 0) == 1) {
   $1117 = $c + 156 | 0; //@line 50024
   $1118 = HEAP32[$1117 >> 2] | 0; //@line 50025
   if (($1118 & 1 | 0) != 0) {
    _e68_exception_address($c, $1118, 0, 0); //@line 50030
    return;
   }
   $1123 = $c + 164 | 0; //@line 50035
   HEAP16[$c + 162 >> 1] = HEAP16[$1123 >> 1] | 0; //@line 50038
   $1126 = $1118 & 16777215; //@line 50039
   $1127 = $1126 + 1 | 0; //@line 50040
   if ($1127 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
    $1133 = HEAP32[$c + 32 >> 2] | 0; //@line 50047
    $_0_i_i_i48 = HEAPU8[$1133 + $1126 | 0] << 8 | HEAPU8[$1133 + $1127 | 0]; //@line 50057
   } else {
    $_0_i_i_i48 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $1126) | 0; //@line 50065
   }
   HEAP16[$1123 >> 1] = $_0_i_i_i48; //@line 50068
   if ((HEAP8[$c + 336 | 0] | 0) == 0) {
    HEAP32[$1117 >> 2] = (HEAP32[$1117 >> 2] | 0) + 2; //@line 50076
    $1155 = $c + 152 | 0; //@line 50077
    HEAP32[$1155 >> 2] = (HEAP32[$1155 >> 2] | 0) + 2; //@line 50080
    _e68_exception_trap($c, HEAP16[$1 >> 1] & 15); //@line 50084
    return;
   } else {
    _e68_exception_bus($c); //@line 50089
    return;
   }
  } else if (($1115 | 0) == 2) {
   $1162 = $c + 156 | 0; //@line 50095
   $1163 = HEAP32[$1162 >> 2] | 0; //@line 50096
   if (($1163 & 1 | 0) != 0) {
    _e68_exception_address($c, $1163, 0, 0); //@line 50101
    return;
   }
   $1168 = $c + 164 | 0; //@line 50106
   $1170 = $c + 162 | 0; //@line 50108
   HEAP16[$1170 >> 1] = HEAP16[$1168 >> 1] | 0; //@line 50109
   $1171 = $1163 & 16777215; //@line 50110
   $1172 = $1171 + 1 | 0; //@line 50111
   $1173 = $c + 36 | 0; //@line 50112
   if ($1172 >>> 0 < (HEAP32[$1173 >> 2] | 0) >>> 0) {
    $1178 = HEAP32[$c + 32 >> 2] | 0; //@line 50118
    $_0_i_i_i50 = HEAPU8[$1178 + $1171 | 0] << 8 | HEAPU8[$1178 + $1172 | 0]; //@line 50128
   } else {
    $_0_i_i_i50 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $1171) | 0; //@line 50136
   }
   HEAP16[$1168 >> 1] = $_0_i_i_i50; //@line 50139
   $1193 = $c + 336 | 0; //@line 50140
   if ((HEAP8[$1193] | 0) != 0) {
    _e68_exception_bus($c); //@line 50145
    return;
   }
   HEAP32[$1162 >> 2] = (HEAP32[$1162 >> 2] | 0) + 2; //@line 50152
   $1200 = $c + 152 | 0; //@line 50153
   HEAP32[$1200 >> 2] = (HEAP32[$1200 >> 2] | 0) + 2; //@line 50156
   $1205 = HEAP16[$1 >> 1] & 7; //@line 50159
   $1207 = HEAPU16[$1170 >> 1] | 0; //@line 50161
   $1212 = $c + 372 | 0; //@line 50166
   HEAP32[$1212 >> 2] = (HEAP32[$1212 >> 2] | 0) + 16; //@line 50169
   $1215 = $c + 148 | 0; //@line 50170
   $1217 = (HEAP32[$1215 >> 2] | 0) - 4 | 0; //@line 50172
   HEAP32[$1215 >> 2] = $1217; //@line 50173
   $1218 = $c + 120 + ($1205 << 2) | 0; //@line 50174
   $1219 = HEAP32[$1218 >> 2] | 0; //@line 50175
   $1220 = $1217 & 16777215; //@line 50176
   $1221 = $1220 + 3 | 0; //@line 50177
   if ($1221 >>> 0 < (HEAP32[$1173 >> 2] | 0) >>> 0) {
    $1227 = $c + 32 | 0; //@line 50184
    HEAP8[(HEAP32[$1227 >> 2] | 0) + $1220 | 0] = $1219 >>> 24 & 255; //@line 50187
    HEAP8[(HEAP32[$1227 >> 2] | 0) + ($1220 + 1) | 0] = $1219 >>> 16 & 255; //@line 50193
    HEAP8[(HEAP32[$1227 >> 2] | 0) + ($1220 + 2) | 0] = $1219 >>> 8 & 255; //@line 50199
    HEAP8[(HEAP32[$1227 >> 2] | 0) + $1221 | 0] = $1219 & 255; //@line 50203
   } else {
    FUNCTION_TABLE_viii[HEAP32[$c + 28 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $1220, $1219); //@line 50210
   }
   HEAP32[$1218 >> 2] = HEAP32[$1215 >> 2]; //@line 50213
   HEAP32[$1215 >> 2] = (HEAP32[$1215 >> 2] | 0) + (($1207 & 32768 | 0) != 0 ? $1207 | -65536 : $1207); //@line 50216
   $1251 = HEAP32[$1162 >> 2] | 0; //@line 50217
   if (($1251 & 1 | 0) != 0) {
    _e68_exception_address($c, $1251, 0, 0); //@line 50222
    return;
   }
   HEAP16[$1170 >> 1] = HEAP16[$1168 >> 1] | 0; //@line 50228
   $1257 = $1251 & 16777215; //@line 50229
   $1258 = $1257 + 1 | 0; //@line 50230
   if ($1258 >>> 0 < (HEAP32[$1173 >> 2] | 0) >>> 0) {
    $1263 = HEAP32[$c + 32 >> 2] | 0; //@line 50236
    $_0_i_i15_i = HEAPU8[$1263 + $1257 | 0] << 8 | HEAPU8[$1263 + $1258 | 0]; //@line 50246
   } else {
    $_0_i_i15_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $1257) | 0; //@line 50254
   }
   HEAP16[$1168 >> 1] = $_0_i_i15_i; //@line 50257
   if ((HEAP8[$1193] | 0) == 0) {
    HEAP32[$1162 >> 2] = (HEAP32[$1162 >> 2] | 0) + 2; //@line 50264
    HEAP32[$1200 >> 2] = (HEAP32[$1200 >> 2] | 0) + 2; //@line 50267
    return;
   } else {
    _e68_exception_bus($c); //@line 50272
    return;
   }
  } else if (($1115 | 0) == 4) {
   if ((HEAP8[$c + 334 | 0] | 0) == 0) {
    _e68_exception_privilege($c); //@line 50283
    return;
   }
   HEAP32[$c + 168 >> 2] = HEAP32[$c + 120 + (($3 & 7) << 2) >> 2]; //@line 50291
   $1388 = $c + 372 | 0; //@line 50292
   HEAP32[$1388 >> 2] = (HEAP32[$1388 >> 2] | 0) + 4; //@line 50295
   $1391 = $c + 156 | 0; //@line 50296
   $1392 = HEAP32[$1391 >> 2] | 0; //@line 50297
   if (($1392 & 1 | 0) != 0) {
    _e68_exception_address($c, $1392, 0, 0); //@line 50302
    return;
   }
   $1397 = $c + 164 | 0; //@line 50307
   HEAP16[$c + 162 >> 1] = HEAP16[$1397 >> 1] | 0; //@line 50310
   $1400 = $1392 & 16777215; //@line 50311
   $1401 = $1400 + 1 | 0; //@line 50312
   if ($1401 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
    $1407 = HEAP32[$c + 32 >> 2] | 0; //@line 50319
    $_0_i_i_i57 = HEAPU8[$1407 + $1400 | 0] << 8 | HEAPU8[$1407 + $1401 | 0]; //@line 50329
   } else {
    $_0_i_i_i57 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $1400) | 0; //@line 50337
   }
   HEAP16[$1397 >> 1] = $_0_i_i_i57; //@line 50340
   if ((HEAP8[$c + 336 | 0] | 0) == 0) {
    HEAP32[$1391 >> 2] = (HEAP32[$1391 >> 2] | 0) + 2; //@line 50348
    $1429 = $c + 152 | 0; //@line 50349
    HEAP32[$1429 >> 2] = (HEAP32[$1429 >> 2] | 0) + 2; //@line 50352
    return;
   } else {
    _e68_exception_bus($c); //@line 50357
    return;
   }
  } else {
   _e68_exception_illegal($c); //@line 50363
   $1487 = $c + 372 | 0; //@line 50364
   HEAP32[$1487 >> 2] = (HEAP32[$1487 >> 2] | 0) + 2; //@line 50367
   return;
  }
 }
}
function _op4e80($c) {
 $c = $c | 0;
 var $4 = 0, $15 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $26 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $36 = 0, $_0_i_i = 0, $51 = 0, $58 = 0, $61 = 0, $62 = 0, $64 = 0, $65 = 0, $66 = 0, $72 = 0, $93 = 0, $99 = 0, $100 = 0, $105 = 0, $_0_i_i12 = 0;
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 50397
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 2020, 32) | 0) != 0) {
  return;
 }
 if ((HEAP32[$c + 340 >> 2] | 0) != 2) {
  _e68_exception_illegal($c); //@line 50412
  return;
 }
 $15 = $c + 372 | 0; //@line 50417
 HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + 16; //@line 50420
 $18 = $c + 156 | 0; //@line 50421
 $19 = HEAP32[$18 >> 2] | 0; //@line 50422
 $20 = $c + 344 | 0; //@line 50423
 $21 = HEAP32[$20 >> 2] | 0; //@line 50424
 HEAP32[$18 >> 2] = $21; //@line 50425
 if (($21 & 1 | 0) != 0) {
  _e68_exception_address($c, $21, 0, 0); //@line 50430
  return;
 }
 $26 = $c + 164 | 0; //@line 50435
 $28 = $c + 162 | 0; //@line 50437
 HEAP16[$28 >> 1] = HEAP16[$26 >> 1] | 0; //@line 50438
 $29 = $21 & 16777215; //@line 50439
 $30 = $29 + 1 | 0; //@line 50440
 $31 = $c + 36 | 0; //@line 50441
 if ($30 >>> 0 < (HEAP32[$31 >> 2] | 0) >>> 0) {
  $36 = HEAP32[$c + 32 >> 2] | 0; //@line 50447
  $_0_i_i = HEAPU8[$36 + $29 | 0] << 8 | HEAPU8[$36 + $30 | 0]; //@line 50457
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $29) | 0; //@line 50465
 }
 HEAP16[$26 >> 1] = $_0_i_i; //@line 50468
 $51 = $c + 336 | 0; //@line 50469
 if ((HEAP8[$51] | 0) != 0) {
  _e68_exception_bus($c); //@line 50474
  return;
 }
 HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 2; //@line 50481
 $58 = $c + 152 | 0; //@line 50482
 HEAP32[$58 >> 2] = (HEAP32[$58 >> 2] | 0) + 2; //@line 50485
 $61 = $19 - 2 | 0; //@line 50486
 $62 = $c + 148 | 0; //@line 50487
 $64 = (HEAP32[$62 >> 2] | 0) - 4 | 0; //@line 50489
 $65 = $64 & 16777215; //@line 50490
 $66 = $65 + 3 | 0; //@line 50491
 if ($66 >>> 0 < (HEAP32[$31 >> 2] | 0) >>> 0) {
  $72 = $c + 32 | 0; //@line 50498
  HEAP8[(HEAP32[$72 >> 2] | 0) + $65 | 0] = $61 >>> 24 & 255; //@line 50501
  HEAP8[(HEAP32[$72 >> 2] | 0) + ($65 + 1) | 0] = $61 >>> 16 & 255; //@line 50507
  HEAP8[(HEAP32[$72 >> 2] | 0) + ($65 + 2) | 0] = $61 >>> 8 & 255; //@line 50513
  HEAP8[(HEAP32[$72 >> 2] | 0) + $66 | 0] = $61 & 255; //@line 50517
 } else {
  FUNCTION_TABLE_viii[HEAP32[$c + 28 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $65, $61); //@line 50524
 }
 HEAP32[$62 >> 2] = $64; //@line 50526
 $93 = HEAP32[$18 >> 2] | 0; //@line 50527
 if (($93 & 1 | 0) != 0) {
  _e68_exception_address($c, $93, 0, 0); //@line 50532
  return;
 }
 HEAP16[$28 >> 1] = HEAP16[$26 >> 1] | 0; //@line 50538
 $99 = $93 & 16777215; //@line 50539
 $100 = $99 + 1 | 0; //@line 50540
 if ($100 >>> 0 < (HEAP32[$31 >> 2] | 0) >>> 0) {
  $105 = HEAP32[$c + 32 >> 2] | 0; //@line 50546
  $_0_i_i12 = HEAPU8[$105 + $99 | 0] << 8 | HEAPU8[$105 + $100 | 0]; //@line 50556
 } else {
  $_0_i_i12 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $99) | 0; //@line 50564
 }
 HEAP16[$26 >> 1] = $_0_i_i12; //@line 50567
 if ((HEAP8[$51] | 0) == 0) {
  HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 2; //@line 50574
  HEAP32[$58 >> 2] = HEAP32[$20 >> 2]; //@line 50576
  return;
 } else {
  _e68_exception_bus($c); //@line 50581
  return;
 }
}
function _op4ec0($c) {
 $c = $c | 0;
 var $4 = 0, $15 = 0, $18 = 0, $19 = 0, $20 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $35 = 0, $50 = 0, $51 = 0, $57 = 0, $58 = 0, $65 = 0, $66 = 0, $70 = 0, $83 = 0, $phitmp = 0;
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 50606
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 2020, 32) | 0) != 0) {
  return;
 }
 if ((HEAP32[$c + 340 >> 2] | 0) != 2) {
  _e68_exception_illegal($c); //@line 50621
  return;
 }
 $15 = $c + 372 | 0; //@line 50626
 HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + 8; //@line 50629
 $18 = $c + 344 | 0; //@line 50630
 $19 = HEAP32[$18 >> 2] | 0; //@line 50631
 $20 = $c + 156 | 0; //@line 50632
 HEAP32[$20 >> 2] = $19; //@line 50633
 if (($19 & 1 | 0) != 0) {
  _e68_exception_address($c, $19, 0, 0); //@line 50638
  return;
 }
 $25 = $c + 164 | 0; //@line 50643
 $27 = $c + 162 | 0; //@line 50645
 HEAP16[$27 >> 1] = HEAP16[$25 >> 1] | 0; //@line 50646
 $28 = $19 & 16777215; //@line 50647
 $29 = $28 + 1 | 0; //@line 50648
 $30 = $c + 36 | 0; //@line 50649
 if ($29 >>> 0 < (HEAP32[$30 >> 2] | 0) >>> 0) {
  $35 = HEAP32[$c + 32 >> 2] | 0; //@line 50655
  $50 = HEAPU8[$35 + $28 | 0] << 8 | HEAPU8[$35 + $29 | 0]; //@line 50665
 } else {
  $50 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $28) | 0; //@line 50673
 }
 HEAP16[$25 >> 1] = $50; //@line 50676
 $51 = $c + 336 | 0; //@line 50677
 if ((HEAP8[$51] | 0) != 0) {
  _e68_exception_bus($c); //@line 50682
  return;
 }
 $57 = (HEAP32[$20 >> 2] | 0) + 2 | 0; //@line 50688
 HEAP32[$20 >> 2] = $57; //@line 50689
 $58 = $c + 152 | 0; //@line 50690
 HEAP32[$58 >> 2] = (HEAP32[$58 >> 2] | 0) + 2; //@line 50693
 if (($57 & 1 | 0) != 0) {
  _e68_exception_address($c, $57, 0, 0); //@line 50698
  return;
 }
 HEAP16[$27 >> 1] = $50; //@line 50703
 $65 = $57 & 16777215; //@line 50704
 $66 = $65 + 1 | 0; //@line 50705
 do {
  if ($66 >>> 0 < (HEAP32[$30 >> 2] | 0) >>> 0) {
   $70 = HEAP32[$c + 32 >> 2] | 0; //@line 50712
   HEAP16[$25 >> 1] = HEAPU8[$70 + $65 | 0] << 8 | HEAPU8[$70 + $66 | 0]; //@line 50721
  } else {
   $83 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $65) | 0; //@line 50728
   $phitmp = (HEAP8[$51] | 0) == 0; //@line 50730
   HEAP16[$25 >> 1] = $83; //@line 50731
   if ($phitmp) {
    break;
   }
   _e68_exception_bus($c); //@line 50736
   return;
  }
 } while (0);
 HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 2; //@line 50744
 HEAP32[$58 >> 2] = HEAP32[$18 >> 2]; //@line 50746
 return;
}
function _op5000($c) {
 $c = $c | 0;
 var $s2 = 0, $2 = 0, $5 = 0, $6 = 0, $_ = 0, $16 = 0, $17 = 0, $18 = 0, $21 = 0, $22 = 0, $27 = 0, $30 = 0, $31 = 0, $37 = 0, $_0_i_i = 0, $59 = 0, sp = 0;
 sp = STACKTOP; //@line 50764
 STACKTOP = STACKTOP + 8 | 0; //@line 50764
 $s2 = sp | 0; //@line 50765
 $2 = HEAP16[$c + 160 >> 1] | 0; //@line 50767
 $5 = ($2 & 65535) >>> 9 & 7; //@line 50771
 $6 = $2 & 63; //@line 50772
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($6 << 2) >> 2] & 127]($c, $6, 509, 8) | 0) != 0) {
  STACKTOP = sp; //@line 50779
  return;
 }
 if ((_e68_ea_get_val8($c, $s2) | 0) != 0) {
  STACKTOP = sp; //@line 50786
  return;
 }
 $_ = $5 << 24 >> 24 == 0 ? 8 : $5; //@line 50790
 $16 = HEAP8[$s2] | 0; //@line 50791
 $17 = $16 + $_ & 255; //@line 50792
 $18 = $c + 372 | 0; //@line 50793
 HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 8; //@line 50796
 _e68_cc_set_add_8($c, $17, $_, $16); //@line 50797
 $21 = $c + 156 | 0; //@line 50798
 $22 = HEAP32[$21 >> 2] | 0; //@line 50799
 if (($22 & 1 | 0) != 0) {
  _e68_exception_address($c, $22, 0, 0); //@line 50804
  STACKTOP = sp; //@line 50806
  return;
 }
 $27 = $c + 164 | 0; //@line 50809
 HEAP16[$c + 162 >> 1] = HEAP16[$27 >> 1] | 0; //@line 50812
 $30 = $22 & 16777215; //@line 50813
 $31 = $30 + 1 | 0; //@line 50814
 if ($31 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $37 = HEAP32[$c + 32 >> 2] | 0; //@line 50821
  $_0_i_i = HEAPU8[$37 + $30 | 0] << 8 | HEAPU8[$37 + $31 | 0]; //@line 50831
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $30) | 0; //@line 50839
 }
 HEAP16[$27 >> 1] = $_0_i_i; //@line 50842
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$21 >> 2] = (HEAP32[$21 >> 2] | 0) + 2; //@line 50850
  $59 = $c + 152 | 0; //@line 50851
  HEAP32[$59 >> 2] = (HEAP32[$59 >> 2] | 0) + 2; //@line 50854
  _e68_ea_set_val8($c, $17) | 0; //@line 50855
  STACKTOP = sp; //@line 50857
  return;
 } else {
  _e68_exception_bus($c); //@line 50860
  STACKTOP = sp; //@line 50862
  return;
 }
}
function _op5040($c) {
 $c = $c | 0;
 var $s2 = 0, $2 = 0, $3 = 0, $9 = 0, $10 = 0, $11 = 0, $13 = 0, $16 = 0, $17 = 0, $22 = 0, $25 = 0, $26 = 0, $32 = 0, $_0_i_i_i = 0, $54 = 0, $60 = 0, $61 = 0, $_ = 0, $71 = 0, $72 = 0, $73 = 0, $76 = 0, $77 = 0, $82 = 0, $85 = 0, $86 = 0, $92 = 0, $_0_i_i = 0, $114 = 0, sp = 0;
 sp = STACKTOP; //@line 50885
 STACKTOP = STACKTOP + 8 | 0; //@line 50885
 $s2 = sp | 0; //@line 50886
 $2 = HEAP16[$c + 160 >> 1] | 0; //@line 50888
 $3 = $2 & 65535; //@line 50889
 if (($3 & 56 | 0) == 8) {
  $9 = $3 >>> 9 & 7; //@line 50896
  $10 = $c + 120 + (($3 & 7) << 2) | 0; //@line 50897
  $11 = HEAP32[$10 >> 2] | 0; //@line 50898
  $13 = $c + 372 | 0; //@line 50901
  HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 8; //@line 50904
  $16 = $c + 156 | 0; //@line 50905
  $17 = HEAP32[$16 >> 2] | 0; //@line 50906
  if (($17 & 1 | 0) != 0) {
   _e68_exception_address($c, $17, 0, 0); //@line 50911
   STACKTOP = sp; //@line 50913
   return;
  }
  $22 = $c + 164 | 0; //@line 50916
  HEAP16[$c + 162 >> 1] = HEAP16[$22 >> 1] | 0; //@line 50919
  $25 = $17 & 16777215; //@line 50920
  $26 = $25 + 1 | 0; //@line 50921
  if ($26 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $32 = HEAP32[$c + 32 >> 2] | 0; //@line 50928
   $_0_i_i_i = HEAPU8[$32 + $25 | 0] << 8 | HEAPU8[$32 + $26 | 0]; //@line 50938
  } else {
   $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $25) | 0; //@line 50946
  }
  HEAP16[$22 >> 1] = $_0_i_i_i; //@line 50949
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$16 >> 2] = (HEAP32[$16 >> 2] | 0) + 2; //@line 50957
   $54 = $c + 152 | 0; //@line 50958
   HEAP32[$54 >> 2] = (HEAP32[$54 >> 2] | 0) + 2; //@line 50961
   HEAP32[$10 >> 2] = $11 + (($9 | 0) == 0 ? 8 : $9); //@line 50963
   STACKTOP = sp; //@line 50965
   return;
  } else {
   _e68_exception_bus($c); //@line 50968
   STACKTOP = sp; //@line 50970
   return;
  }
 }
 $60 = ($2 & 65535) >>> 9 & 7; //@line 50975
 $61 = $3 & 63; //@line 50976
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($61 << 2) >> 2] & 127]($c, $61, 509, 16) | 0) != 0) {
  STACKTOP = sp; //@line 50983
  return;
 }
 if ((_e68_ea_get_val16($c, $s2) | 0) != 0) {
  STACKTOP = sp; //@line 50990
  return;
 }
 $_ = $60 << 16 >> 16 == 0 ? 8 : $60; //@line 50994
 $71 = HEAP16[$s2 >> 1] | 0; //@line 50995
 $72 = $71 + $_ & 65535; //@line 50996
 $73 = $c + 372 | 0; //@line 50997
 HEAP32[$73 >> 2] = (HEAP32[$73 >> 2] | 0) + 8; //@line 51000
 _e68_cc_set_add_16($c, $72, $_, $71); //@line 51001
 $76 = $c + 156 | 0; //@line 51002
 $77 = HEAP32[$76 >> 2] | 0; //@line 51003
 if (($77 & 1 | 0) != 0) {
  _e68_exception_address($c, $77, 0, 0); //@line 51008
  STACKTOP = sp; //@line 51010
  return;
 }
 $82 = $c + 164 | 0; //@line 51013
 HEAP16[$c + 162 >> 1] = HEAP16[$82 >> 1] | 0; //@line 51016
 $85 = $77 & 16777215; //@line 51017
 $86 = $85 + 1 | 0; //@line 51018
 if ($86 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $92 = HEAP32[$c + 32 >> 2] | 0; //@line 51025
  $_0_i_i = HEAPU8[$92 + $85 | 0] << 8 | HEAPU8[$92 + $86 | 0]; //@line 51035
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $85) | 0; //@line 51043
 }
 HEAP16[$82 >> 1] = $_0_i_i; //@line 51046
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$76 >> 2] = (HEAP32[$76 >> 2] | 0) + 2; //@line 51054
  $114 = $c + 152 | 0; //@line 51055
  HEAP32[$114 >> 2] = (HEAP32[$114 >> 2] | 0) + 2; //@line 51058
  _e68_ea_set_val16($c, $72) | 0; //@line 51059
  STACKTOP = sp; //@line 51061
  return;
 } else {
  _e68_exception_bus($c); //@line 51064
  STACKTOP = sp; //@line 51066
  return;
 }
}
function _op5080($c) {
 $c = $c | 0;
 var $s2 = 0, $3 = 0, $9 = 0, $10 = 0, $11 = 0, $13 = 0, $16 = 0, $17 = 0, $22 = 0, $25 = 0, $26 = 0, $32 = 0, $_0_i_i_i = 0, $54 = 0, $60 = 0, $61 = 0, $_ = 0, $71 = 0, $72 = 0, $73 = 0, $76 = 0, $77 = 0, $82 = 0, $85 = 0, $86 = 0, $92 = 0, $_0_i_i = 0, $114 = 0, sp = 0;
 sp = STACKTOP; //@line 51089
 STACKTOP = STACKTOP + 8 | 0; //@line 51089
 $s2 = sp | 0; //@line 51090
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 51093
 if (($3 & 56 | 0) == 8) {
  $9 = $3 >>> 9 & 7; //@line 51100
  $10 = $c + 120 + (($3 & 7) << 2) | 0; //@line 51101
  $11 = HEAP32[$10 >> 2] | 0; //@line 51102
  $13 = $c + 372 | 0; //@line 51105
  HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 12; //@line 51108
  $16 = $c + 156 | 0; //@line 51109
  $17 = HEAP32[$16 >> 2] | 0; //@line 51110
  if (($17 & 1 | 0) != 0) {
   _e68_exception_address($c, $17, 0, 0); //@line 51115
   STACKTOP = sp; //@line 51117
   return;
  }
  $22 = $c + 164 | 0; //@line 51120
  HEAP16[$c + 162 >> 1] = HEAP16[$22 >> 1] | 0; //@line 51123
  $25 = $17 & 16777215; //@line 51124
  $26 = $25 + 1 | 0; //@line 51125
  if ($26 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $32 = HEAP32[$c + 32 >> 2] | 0; //@line 51132
   $_0_i_i_i = HEAPU8[$32 + $25 | 0] << 8 | HEAPU8[$32 + $26 | 0]; //@line 51142
  } else {
   $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $25) | 0; //@line 51150
  }
  HEAP16[$22 >> 1] = $_0_i_i_i; //@line 51153
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$16 >> 2] = (HEAP32[$16 >> 2] | 0) + 2; //@line 51161
   $54 = $c + 152 | 0; //@line 51162
   HEAP32[$54 >> 2] = (HEAP32[$54 >> 2] | 0) + 2; //@line 51165
   HEAP32[$10 >> 2] = $11 + (($9 | 0) == 0 ? 8 : $9); //@line 51167
   STACKTOP = sp; //@line 51169
   return;
  } else {
   _e68_exception_bus($c); //@line 51172
   STACKTOP = sp; //@line 51174
   return;
  }
 }
 $60 = $3 >>> 9 & 7; //@line 51179
 $61 = $3 & 63; //@line 51180
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($61 << 2) >> 2] & 127]($c, $61, 509, 32) | 0) != 0) {
  STACKTOP = sp; //@line 51187
  return;
 }
 if ((_e68_ea_get_val32($c, $s2) | 0) != 0) {
  STACKTOP = sp; //@line 51194
  return;
 }
 $_ = ($60 | 0) == 0 ? 8 : $60; //@line 51198
 $71 = HEAP32[$s2 >> 2] | 0; //@line 51199
 $72 = $71 + $_ | 0; //@line 51200
 $73 = $c + 372 | 0; //@line 51201
 HEAP32[$73 >> 2] = (HEAP32[$73 >> 2] | 0) + 12; //@line 51204
 _e68_cc_set_add_32($c, $72, $_, $71); //@line 51205
 $76 = $c + 156 | 0; //@line 51206
 $77 = HEAP32[$76 >> 2] | 0; //@line 51207
 if (($77 & 1 | 0) != 0) {
  _e68_exception_address($c, $77, 0, 0); //@line 51212
  STACKTOP = sp; //@line 51214
  return;
 }
 $82 = $c + 164 | 0; //@line 51217
 HEAP16[$c + 162 >> 1] = HEAP16[$82 >> 1] | 0; //@line 51220
 $85 = $77 & 16777215; //@line 51221
 $86 = $85 + 1 | 0; //@line 51222
 if ($86 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $92 = HEAP32[$c + 32 >> 2] | 0; //@line 51229
  $_0_i_i = HEAPU8[$92 + $85 | 0] << 8 | HEAPU8[$92 + $86 | 0]; //@line 51239
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $85) | 0; //@line 51247
 }
 HEAP16[$82 >> 1] = $_0_i_i; //@line 51250
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$76 >> 2] = (HEAP32[$76 >> 2] | 0) + 2; //@line 51258
  $114 = $c + 152 | 0; //@line 51259
  HEAP32[$114 >> 2] = (HEAP32[$114 >> 2] | 0) + 2; //@line 51262
  _e68_ea_set_val32($c, $72) | 0; //@line 51263
  STACKTOP = sp; //@line 51265
  return;
 } else {
  _e68_exception_bus($c); //@line 51268
  STACKTOP = sp; //@line 51270
  return;
 }
}
function _op50c0($c) {
 $c = $c | 0;
 if ((HEAP16[$c + 160 >> 1] & 56) == 8) {
  _e68_op_dbcc($c, 1); //@line 51287
  return;
 } else {
  _e68_op_scc($c, 1); //@line 51292
  return;
 }
}
function _op5100($c) {
 $c = $c | 0;
 var $s2 = 0, $2 = 0, $5 = 0, $6 = 0, $_ = 0, $16 = 0, $17 = 0, $18 = 0, $21 = 0, $22 = 0, $27 = 0, $30 = 0, $31 = 0, $37 = 0, $_0_i_i = 0, $59 = 0, sp = 0;
 sp = STACKTOP; //@line 51310
 STACKTOP = STACKTOP + 8 | 0; //@line 51310
 $s2 = sp | 0; //@line 51311
 $2 = HEAP16[$c + 160 >> 1] | 0; //@line 51313
 $5 = ($2 & 65535) >>> 9 & 7; //@line 51317
 $6 = $2 & 63; //@line 51318
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($6 << 2) >> 2] & 127]($c, $6, 509, 8) | 0) != 0) {
  STACKTOP = sp; //@line 51325
  return;
 }
 if ((_e68_ea_get_val8($c, $s2) | 0) != 0) {
  STACKTOP = sp; //@line 51332
  return;
 }
 $_ = $5 << 24 >> 24 == 0 ? 8 : $5; //@line 51336
 $16 = HEAP8[$s2] | 0; //@line 51337
 $17 = $16 - $_ & 255; //@line 51338
 $18 = $c + 372 | 0; //@line 51339
 HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 8; //@line 51342
 _e68_cc_set_sub_8($c, $17, $_, $16); //@line 51343
 $21 = $c + 156 | 0; //@line 51344
 $22 = HEAP32[$21 >> 2] | 0; //@line 51345
 if (($22 & 1 | 0) != 0) {
  _e68_exception_address($c, $22, 0, 0); //@line 51350
  STACKTOP = sp; //@line 51352
  return;
 }
 $27 = $c + 164 | 0; //@line 51355
 HEAP16[$c + 162 >> 1] = HEAP16[$27 >> 1] | 0; //@line 51358
 $30 = $22 & 16777215; //@line 51359
 $31 = $30 + 1 | 0; //@line 51360
 if ($31 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $37 = HEAP32[$c + 32 >> 2] | 0; //@line 51367
  $_0_i_i = HEAPU8[$37 + $30 | 0] << 8 | HEAPU8[$37 + $31 | 0]; //@line 51377
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $30) | 0; //@line 51385
 }
 HEAP16[$27 >> 1] = $_0_i_i; //@line 51388
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$21 >> 2] = (HEAP32[$21 >> 2] | 0) + 2; //@line 51396
  $59 = $c + 152 | 0; //@line 51397
  HEAP32[$59 >> 2] = (HEAP32[$59 >> 2] | 0) + 2; //@line 51400
  _e68_ea_set_val8($c, $17) | 0; //@line 51401
  STACKTOP = sp; //@line 51403
  return;
 } else {
  _e68_exception_bus($c); //@line 51406
  STACKTOP = sp; //@line 51408
  return;
 }
}
function _op5140($c) {
 $c = $c | 0;
 var $s2 = 0, $2 = 0, $3 = 0, $9 = 0, $10 = 0, $11 = 0, $13 = 0, $16 = 0, $17 = 0, $22 = 0, $25 = 0, $26 = 0, $32 = 0, $_0_i_i_i = 0, $54 = 0, $60 = 0, $61 = 0, $_ = 0, $71 = 0, $72 = 0, $73 = 0, $76 = 0, $77 = 0, $82 = 0, $85 = 0, $86 = 0, $92 = 0, $_0_i_i = 0, $114 = 0, sp = 0;
 sp = STACKTOP; //@line 51431
 STACKTOP = STACKTOP + 8 | 0; //@line 51431
 $s2 = sp | 0; //@line 51432
 $2 = HEAP16[$c + 160 >> 1] | 0; //@line 51434
 $3 = $2 & 65535; //@line 51435
 if (($3 & 56 | 0) == 8) {
  $9 = $3 >>> 9 & 7; //@line 51442
  $10 = $c + 120 + (($3 & 7) << 2) | 0; //@line 51443
  $11 = HEAP32[$10 >> 2] | 0; //@line 51444
  $13 = $c + 372 | 0; //@line 51447
  HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 8; //@line 51450
  $16 = $c + 156 | 0; //@line 51451
  $17 = HEAP32[$16 >> 2] | 0; //@line 51452
  if (($17 & 1 | 0) != 0) {
   _e68_exception_address($c, $17, 0, 0); //@line 51457
   STACKTOP = sp; //@line 51459
   return;
  }
  $22 = $c + 164 | 0; //@line 51462
  HEAP16[$c + 162 >> 1] = HEAP16[$22 >> 1] | 0; //@line 51465
  $25 = $17 & 16777215; //@line 51466
  $26 = $25 + 1 | 0; //@line 51467
  if ($26 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $32 = HEAP32[$c + 32 >> 2] | 0; //@line 51474
   $_0_i_i_i = HEAPU8[$32 + $25 | 0] << 8 | HEAPU8[$32 + $26 | 0]; //@line 51484
  } else {
   $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $25) | 0; //@line 51492
  }
  HEAP16[$22 >> 1] = $_0_i_i_i; //@line 51495
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$16 >> 2] = (HEAP32[$16 >> 2] | 0) + 2; //@line 51503
   $54 = $c + 152 | 0; //@line 51504
   HEAP32[$54 >> 2] = (HEAP32[$54 >> 2] | 0) + 2; //@line 51507
   HEAP32[$10 >> 2] = $11 - (($9 | 0) == 0 ? 8 : $9); //@line 51509
   STACKTOP = sp; //@line 51511
   return;
  } else {
   _e68_exception_bus($c); //@line 51514
   STACKTOP = sp; //@line 51516
   return;
  }
 }
 $60 = ($2 & 65535) >>> 9 & 7; //@line 51521
 $61 = $3 & 63; //@line 51522
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($61 << 2) >> 2] & 127]($c, $61, 509, 16) | 0) != 0) {
  STACKTOP = sp; //@line 51529
  return;
 }
 if ((_e68_ea_get_val16($c, $s2) | 0) != 0) {
  STACKTOP = sp; //@line 51536
  return;
 }
 $_ = $60 << 16 >> 16 == 0 ? 8 : $60; //@line 51540
 $71 = HEAP16[$s2 >> 1] | 0; //@line 51541
 $72 = $71 - $_ & 65535; //@line 51542
 $73 = $c + 372 | 0; //@line 51543
 HEAP32[$73 >> 2] = (HEAP32[$73 >> 2] | 0) + 8; //@line 51546
 _e68_cc_set_sub_16($c, $72, $_, $71); //@line 51547
 $76 = $c + 156 | 0; //@line 51548
 $77 = HEAP32[$76 >> 2] | 0; //@line 51549
 if (($77 & 1 | 0) != 0) {
  _e68_exception_address($c, $77, 0, 0); //@line 51554
  STACKTOP = sp; //@line 51556
  return;
 }
 $82 = $c + 164 | 0; //@line 51559
 HEAP16[$c + 162 >> 1] = HEAP16[$82 >> 1] | 0; //@line 51562
 $85 = $77 & 16777215; //@line 51563
 $86 = $85 + 1 | 0; //@line 51564
 if ($86 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $92 = HEAP32[$c + 32 >> 2] | 0; //@line 51571
  $_0_i_i = HEAPU8[$92 + $85 | 0] << 8 | HEAPU8[$92 + $86 | 0]; //@line 51581
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $85) | 0; //@line 51589
 }
 HEAP16[$82 >> 1] = $_0_i_i; //@line 51592
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$76 >> 2] = (HEAP32[$76 >> 2] | 0) + 2; //@line 51600
  $114 = $c + 152 | 0; //@line 51601
  HEAP32[$114 >> 2] = (HEAP32[$114 >> 2] | 0) + 2; //@line 51604
  _e68_ea_set_val16($c, $72) | 0; //@line 51605
  STACKTOP = sp; //@line 51607
  return;
 } else {
  _e68_exception_bus($c); //@line 51610
  STACKTOP = sp; //@line 51612
  return;
 }
}
function _op5180($c) {
 $c = $c | 0;
 var $s2 = 0, $3 = 0, $9 = 0, $10 = 0, $11 = 0, $13 = 0, $16 = 0, $17 = 0, $22 = 0, $25 = 0, $26 = 0, $32 = 0, $_0_i_i_i = 0, $54 = 0, $60 = 0, $61 = 0, $_ = 0, $71 = 0, $72 = 0, $73 = 0, $76 = 0, $77 = 0, $82 = 0, $85 = 0, $86 = 0, $92 = 0, $_0_i_i = 0, $114 = 0, sp = 0;
 sp = STACKTOP; //@line 51635
 STACKTOP = STACKTOP + 8 | 0; //@line 51635
 $s2 = sp | 0; //@line 51636
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 51639
 if (($3 & 56 | 0) == 8) {
  $9 = $3 >>> 9 & 7; //@line 51646
  $10 = $c + 120 + (($3 & 7) << 2) | 0; //@line 51647
  $11 = HEAP32[$10 >> 2] | 0; //@line 51648
  $13 = $c + 372 | 0; //@line 51651
  HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 12; //@line 51654
  $16 = $c + 156 | 0; //@line 51655
  $17 = HEAP32[$16 >> 2] | 0; //@line 51656
  if (($17 & 1 | 0) != 0) {
   _e68_exception_address($c, $17, 0, 0); //@line 51661
   STACKTOP = sp; //@line 51663
   return;
  }
  $22 = $c + 164 | 0; //@line 51666
  HEAP16[$c + 162 >> 1] = HEAP16[$22 >> 1] | 0; //@line 51669
  $25 = $17 & 16777215; //@line 51670
  $26 = $25 + 1 | 0; //@line 51671
  if ($26 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $32 = HEAP32[$c + 32 >> 2] | 0; //@line 51678
   $_0_i_i_i = HEAPU8[$32 + $25 | 0] << 8 | HEAPU8[$32 + $26 | 0]; //@line 51688
  } else {
   $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $25) | 0; //@line 51696
  }
  HEAP16[$22 >> 1] = $_0_i_i_i; //@line 51699
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$16 >> 2] = (HEAP32[$16 >> 2] | 0) + 2; //@line 51707
   $54 = $c + 152 | 0; //@line 51708
   HEAP32[$54 >> 2] = (HEAP32[$54 >> 2] | 0) + 2; //@line 51711
   HEAP32[$10 >> 2] = $11 - (($9 | 0) == 0 ? 8 : $9); //@line 51713
   STACKTOP = sp; //@line 51715
   return;
  } else {
   _e68_exception_bus($c); //@line 51718
   STACKTOP = sp; //@line 51720
   return;
  }
 }
 $60 = $3 >>> 9 & 7; //@line 51725
 $61 = $3 & 63; //@line 51726
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($61 << 2) >> 2] & 127]($c, $61, 509, 32) | 0) != 0) {
  STACKTOP = sp; //@line 51733
  return;
 }
 if ((_e68_ea_get_val32($c, $s2) | 0) != 0) {
  STACKTOP = sp; //@line 51740
  return;
 }
 $_ = ($60 | 0) == 0 ? 8 : $60; //@line 51744
 $71 = HEAP32[$s2 >> 2] | 0; //@line 51745
 $72 = $71 - $_ | 0; //@line 51746
 $73 = $c + 372 | 0; //@line 51747
 HEAP32[$73 >> 2] = (HEAP32[$73 >> 2] | 0) + 12; //@line 51750
 _e68_cc_set_sub_32($c, $72, $_, $71); //@line 51751
 $76 = $c + 156 | 0; //@line 51752
 $77 = HEAP32[$76 >> 2] | 0; //@line 51753
 if (($77 & 1 | 0) != 0) {
  _e68_exception_address($c, $77, 0, 0); //@line 51758
  STACKTOP = sp; //@line 51760
  return;
 }
 $82 = $c + 164 | 0; //@line 51763
 HEAP16[$c + 162 >> 1] = HEAP16[$82 >> 1] | 0; //@line 51766
 $85 = $77 & 16777215; //@line 51767
 $86 = $85 + 1 | 0; //@line 51768
 if ($86 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $92 = HEAP32[$c + 32 >> 2] | 0; //@line 51775
  $_0_i_i = HEAPU8[$92 + $85 | 0] << 8 | HEAPU8[$92 + $86 | 0]; //@line 51785
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $85) | 0; //@line 51793
 }
 HEAP16[$82 >> 1] = $_0_i_i; //@line 51796
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$76 >> 2] = (HEAP32[$76 >> 2] | 0) + 2; //@line 51804
  $114 = $c + 152 | 0; //@line 51805
  HEAP32[$114 >> 2] = (HEAP32[$114 >> 2] | 0) + 2; //@line 51808
  _e68_ea_set_val32($c, $72) | 0; //@line 51809
  STACKTOP = sp; //@line 51811
  return;
 } else {
  _e68_exception_bus($c); //@line 51814
  STACKTOP = sp; //@line 51816
  return;
 }
}
function _op51c0($c) {
 $c = $c | 0;
 if ((HEAP16[$c + 160 >> 1] & 56) == 8) {
  _e68_op_dbcc($c, 0); //@line 51833
  return;
 } else {
  _e68_op_scc($c, 0); //@line 51838
  return;
 }
}
function _op52c0($c) {
 $c = $c | 0;
 var $3 = 0, $10 = 0;
 $3 = HEAPU16[$c + 166 >> 1] | 0; //@line 51853
 if (($3 & 1 | 0) == 0) {
  $10 = $3 >>> 2 & 1 ^ 1; //@line 51861
 } else {
  $10 = 0; //@line 51863
 }
 if ((HEAP16[$c + 160 >> 1] & 56) == 8) {
  _e68_op_dbcc($c, $10); //@line 51872
  return;
 } else {
  _e68_op_scc($c, $10); //@line 51877
  return;
 }
}
function _op53c0($c) {
 $c = $c | 0;
 var $3 = 0, $9 = 0;
 $3 = HEAPU16[$c + 166 >> 1] | 0; //@line 51892
 if (($3 & 1 | 0) == 0) {
  $9 = $3 >>> 2 & 1; //@line 51900
 } else {
  $9 = 1; //@line 51902
 }
 if ((HEAP16[$c + 160 >> 1] & 56) == 8) {
  _e68_op_dbcc($c, $9); //@line 51911
  return;
 } else {
  _e68_op_scc($c, $9); //@line 51916
  return;
 }
}
function _op54c0($c) {
 $c = $c | 0;
 var $5 = 0;
 $5 = (HEAP16[$c + 166 >> 1] & 1 ^ 1) & 65535; //@line 51933
 if ((HEAP16[$c + 160 >> 1] & 56) == 8) {
  _e68_op_dbcc($c, $5); //@line 51940
  return;
 } else {
  _e68_op_scc($c, $5); //@line 51945
  return;
 }
}
function _op55c0($c) {
 $c = $c | 0;
 var $4 = 0;
 $4 = HEAP16[$c + 166 >> 1] & 1; //@line 51960
 if ((HEAP16[$c + 160 >> 1] & 56) == 8) {
  _e68_op_dbcc($c, $4); //@line 51967
  return;
 } else {
  _e68_op_scc($c, $4); //@line 51972
  return;
 }
}
function _op56c0($c) {
 $c = $c | 0;
 var $5 = 0;
 $5 = ((HEAPU16[$c + 166 >> 1] | 0) >>> 2 & 1 ^ 1) & 65535; //@line 51990
 if ((HEAP16[$c + 160 >> 1] & 56) == 8) {
  _e68_op_dbcc($c, $5); //@line 51997
  return;
 } else {
  _e68_op_scc($c, $5); //@line 52002
  return;
 }
}
function _op57c0($c) {
 $c = $c | 0;
 var $4 = 0;
 $4 = (HEAPU16[$c + 166 >> 1] | 0) >>> 2 & 1; //@line 52019
 if ((HEAP16[$c + 160 >> 1] & 56) == 8) {
  _e68_op_dbcc($c, $4); //@line 52026
  return;
 } else {
  _e68_op_scc($c, $4); //@line 52031
  return;
 }
}
function _op58c0($c) {
 $c = $c | 0;
 var $5 = 0;
 $5 = ((HEAPU16[$c + 166 >> 1] | 0) >>> 1 & 1 ^ 1) & 65535; //@line 52049
 if ((HEAP16[$c + 160 >> 1] & 56) == 8) {
  _e68_op_dbcc($c, $5); //@line 52056
  return;
 } else {
  _e68_op_scc($c, $5); //@line 52061
  return;
 }
}
function _op59c0($c) {
 $c = $c | 0;
 var $4 = 0;
 $4 = (HEAPU16[$c + 166 >> 1] | 0) >>> 1 & 1; //@line 52078
 if ((HEAP16[$c + 160 >> 1] & 56) == 8) {
  _e68_op_dbcc($c, $4); //@line 52085
  return;
 } else {
  _e68_op_scc($c, $4); //@line 52090
  return;
 }
}
function _op5ac0($c) {
 $c = $c | 0;
 var $5 = 0;
 $5 = ((HEAPU16[$c + 166 >> 1] | 0) >>> 3 & 1 ^ 1) & 65535; //@line 52108
 if ((HEAP16[$c + 160 >> 1] & 56) == 8) {
  _e68_op_dbcc($c, $5); //@line 52115
  return;
 } else {
  _e68_op_scc($c, $5); //@line 52120
  return;
 }
}
function _op5bc0($c) {
 $c = $c | 0;
 var $4 = 0;
 $4 = (HEAPU16[$c + 166 >> 1] | 0) >>> 3 & 1; //@line 52137
 if ((HEAP16[$c + 160 >> 1] & 56) == 8) {
  _e68_op_dbcc($c, $4); //@line 52144
  return;
 } else {
  _e68_op_scc($c, $4); //@line 52149
  return;
 }
}
function _op5cc0($c) {
 $c = $c | 0;
 var $3 = 0, $8 = 0;
 $3 = HEAPU16[$c + 166 >> 1] | 0; //@line 52164
 $8 = ($3 >>> 3 ^ $3 >>> 1) & 1 ^ 1; //@line 52169
 if ((HEAP16[$c + 160 >> 1] & 56) == 8) {
  _e68_op_dbcc($c, $8); //@line 52176
  return;
 } else {
  _e68_op_scc($c, $8); //@line 52181
  return;
 }
}
function _op5dc0($c) {
 $c = $c | 0;
 var $3 = 0, $7 = 0;
 $3 = HEAPU16[$c + 166 >> 1] | 0; //@line 52196
 $7 = ($3 >>> 3 ^ $3 >>> 1) & 1; //@line 52200
 if ((HEAP16[$c + 160 >> 1] & 56) == 8) {
  _e68_op_dbcc($c, $7); //@line 52207
  return;
 } else {
  _e68_op_scc($c, $7); //@line 52212
  return;
 }
}
function _op5ec0($c) {
 $c = $c | 0;
 var $3 = 0, $13 = 0;
 $3 = HEAPU16[$c + 166 >> 1] | 0; //@line 52227
 if ((($3 >>> 3 ^ $3 >>> 1) & 1 | 0) == 0) {
  $13 = $3 >>> 2 & 1 ^ 1; //@line 52238
 } else {
  $13 = 0; //@line 52240
 }
 if ((HEAP16[$c + 160 >> 1] & 56) == 8) {
  _e68_op_dbcc($c, $13); //@line 52249
  return;
 } else {
  _e68_op_scc($c, $13); //@line 52254
  return;
 }
}
function _op5fc0($c) {
 $c = $c | 0;
 var $3 = 0, $12 = 0;
 $3 = HEAPU16[$c + 166 >> 1] | 0; //@line 52269
 if ((($3 >>> 3 ^ $3 >>> 1) & 1 | 0) == 0) {
  $12 = $3 >>> 2 & 1; //@line 52280
 } else {
  $12 = 1; //@line 52282
 }
 if ((HEAP16[$c + 160 >> 1] & 56) == 8) {
  _e68_op_dbcc($c, $12); //@line 52291
  return;
 } else {
  _e68_op_scc($c, $12); //@line 52296
  return;
 }
}
function _op6000($c) {
 $c = $c | 0;
 _e68_op_bcc($c, 1); //@line 52307
 return;
}
function _op6100($c) {
 $c = $c | 0;
 var $8 = 0, $9 = 0, $11 = 0, $12 = 0, $13 = 0, $20 = 0;
 $8 = ((HEAP16[$c + 160 >> 1] & 255) != 0 ? 2 : 4) + (HEAP32[$c + 152 >> 2] | 0) | 0; //@line 52329
 $9 = $c + 148 | 0; //@line 52330
 $11 = (HEAP32[$9 >> 2] | 0) - 4 | 0; //@line 52332
 $12 = $11 & 16777215; //@line 52333
 $13 = $12 + 3 | 0; //@line 52334
 if ($13 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $20 = $c + 32 | 0; //@line 52342
  HEAP8[(HEAP32[$20 >> 2] | 0) + $12 | 0] = $8 >>> 24 & 255; //@line 52345
  HEAP8[(HEAP32[$20 >> 2] | 0) + ($12 + 1) | 0] = $8 >>> 16 & 255; //@line 52351
  HEAP8[(HEAP32[$20 >> 2] | 0) + ($12 + 2) | 0] = $8 >>> 8 & 255; //@line 52357
  HEAP8[(HEAP32[$20 >> 2] | 0) + $13 | 0] = $8 & 255; //@line 52361
  HEAP32[$9 >> 2] = $11; //@line 52363
  _e68_op_bcc($c, 1); //@line 52364
  return;
 } else {
  FUNCTION_TABLE_viii[HEAP32[$c + 28 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $12, $8); //@line 52372
  HEAP32[$9 >> 2] = $11; //@line 52373
  _e68_op_bcc($c, 1); //@line 52374
  return;
 }
}
function _op6200($c) {
 $c = $c | 0;
 var $3 = 0, $10 = 0;
 $3 = HEAPU16[$c + 166 >> 1] | 0; //@line 52389
 if (($3 & 1 | 0) != 0) {
  $10 = 0; //@line 52394
  _e68_op_bcc($c, $10); //@line 52396
  return;
 }
 $10 = $3 >>> 2 & 1 ^ 1; //@line 52403
 _e68_op_bcc($c, $10); //@line 52405
 return;
}
function _op6300($c) {
 $c = $c | 0;
 var $3 = 0, $9 = 0;
 $3 = HEAPU16[$c + 166 >> 1] | 0; //@line 52418
 if (($3 & 1 | 0) != 0) {
  $9 = 1; //@line 52423
  _e68_op_bcc($c, $9); //@line 52425
  return;
 }
 $9 = $3 >>> 2 & 1; //@line 52432
 _e68_op_bcc($c, $9); //@line 52434
 return;
}
function _op6400($c) {
 $c = $c | 0;
 _e68_op_bcc($c, (HEAP16[$c + 166 >> 1] & 1 ^ 1) & 65535); //@line 52450
 return;
}
function _op6500($c) {
 $c = $c | 0;
 _e68_op_bcc($c, HEAP16[$c + 166 >> 1] & 1); //@line 52465
 return;
}
function _op6600($c) {
 $c = $c | 0;
 _e68_op_bcc($c, ((HEAPU16[$c + 166 >> 1] | 0) >>> 2 & 1 ^ 1) & 65535); //@line 52482
 return;
}
function _op6700($c) {
 $c = $c | 0;
 _e68_op_bcc($c, (HEAPU16[$c + 166 >> 1] | 0) >>> 2 & 1); //@line 52498
 return;
}
function _op6800($c) {
 $c = $c | 0;
 _e68_op_bcc($c, ((HEAPU16[$c + 166 >> 1] | 0) >>> 1 & 1 ^ 1) & 65535); //@line 52515
 return;
}
function _op6900($c) {
 $c = $c | 0;
 _e68_op_bcc($c, (HEAPU16[$c + 166 >> 1] | 0) >>> 1 & 1); //@line 52531
 return;
}
function _op6a00($c) {
 $c = $c | 0;
 _e68_op_bcc($c, ((HEAPU16[$c + 166 >> 1] | 0) >>> 3 & 1 ^ 1) & 65535); //@line 52548
 return;
}
function _op6b00($c) {
 $c = $c | 0;
 _e68_op_bcc($c, (HEAPU16[$c + 166 >> 1] | 0) >>> 3 & 1); //@line 52564
 return;
}
function _op6c00($c) {
 $c = $c | 0;
 var $3 = 0;
 $3 = HEAPU16[$c + 166 >> 1] | 0; //@line 52577
 _e68_op_bcc($c, ($3 >>> 3 ^ $3 >>> 1) & 1 ^ 1); //@line 52583
 return;
}
function _op6d00($c) {
 $c = $c | 0;
 var $3 = 0;
 $3 = HEAPU16[$c + 166 >> 1] | 0; //@line 52596
 _e68_op_bcc($c, ($3 >>> 3 ^ $3 >>> 1) & 1); //@line 52601
 return;
}
function _op6e00($c) {
 $c = $c | 0;
 var $3 = 0, $13 = 0;
 $3 = HEAPU16[$c + 166 >> 1] | 0; //@line 52615
 if ((($3 >>> 3 ^ $3 >>> 1) & 1 | 0) != 0) {
  $13 = 0; //@line 52623
  _e68_op_bcc($c, $13); //@line 52625
  return;
 }
 $13 = $3 >>> 2 & 1 ^ 1; //@line 52632
 _e68_op_bcc($c, $13); //@line 52634
 return;
}
function _op6f00($c) {
 $c = $c | 0;
 var $3 = 0, $12 = 0;
 $3 = HEAPU16[$c + 166 >> 1] | 0; //@line 52648
 if ((($3 >>> 3 ^ $3 >>> 1) & 1 | 0) != 0) {
  $12 = 1; //@line 52656
  _e68_op_bcc($c, $12); //@line 52658
  return;
 }
 $12 = $3 >>> 2 & 1; //@line 52665
 _e68_op_bcc($c, $12); //@line 52667
 return;
}
function _op7000($c) {
 $c = $c | 0;
 var $1 = 0, $3 = 0, $8 = 0, $9 = 0, $17 = 0, $18 = 0, $23 = 0, $26 = 0, $27 = 0, $33 = 0, $_0_i_i = 0, $55 = 0;
 $1 = $c + 160 | 0; //@line 52684
 $3 = HEAPU16[$1 >> 1] | 0; //@line 52686
 $8 = ($3 & 128 | 0) != 0 ? $3 | -256 : $3 & 255; //@line 52691
 $9 = $c + 372 | 0; //@line 52692
 HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + 4; //@line 52695
 _e68_cc_set_nz_32($c, 15, $8); //@line 52696
 HEAP32[$c + 88 + (((HEAPU16[$1 >> 1] | 0) >>> 9 & 7) << 2) >> 2] = $8; //@line 52702
 $17 = $c + 156 | 0; //@line 52703
 $18 = HEAP32[$17 >> 2] | 0; //@line 52704
 if (($18 & 1 | 0) != 0) {
  _e68_exception_address($c, $18, 0, 0); //@line 52709
  return;
 }
 $23 = $c + 164 | 0; //@line 52714
 HEAP16[$c + 162 >> 1] = HEAP16[$23 >> 1] | 0; //@line 52717
 $26 = $18 & 16777215; //@line 52718
 $27 = $26 + 1 | 0; //@line 52719
 if ($27 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $33 = HEAP32[$c + 32 >> 2] | 0; //@line 52726
  $_0_i_i = HEAPU8[$33 + $26 | 0] << 8 | HEAPU8[$33 + $27 | 0]; //@line 52736
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $26) | 0; //@line 52744
 }
 HEAP16[$23 >> 1] = $_0_i_i; //@line 52747
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$17 >> 2] = (HEAP32[$17 >> 2] | 0) + 2; //@line 52755
  $55 = $c + 152 | 0; //@line 52756
  HEAP32[$55 >> 2] = (HEAP32[$55 >> 2] | 0) + 2; //@line 52759
  return;
 } else {
  _e68_exception_bus($c); //@line 52764
  return;
 }
}
function _op8000($c) {
 $c = $c | 0;
 var $s1 = 0, $3 = 0, $6 = 0, $15 = 0, $19 = 0, $21 = 0, $24 = 0, $25 = 0, $30 = 0, $33 = 0, $34 = 0, $40 = 0, $_0_i_i = 0, $62 = 0, sp = 0;
 sp = STACKTOP; //@line 52783
 STACKTOP = STACKTOP + 8 | 0; //@line 52783
 $s1 = sp | 0; //@line 52784
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 52787
 $6 = $3 & 63; //@line 52790
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($6 << 2) >> 2] & 127]($c, $6, 4093, 8) | 0) != 0) {
  STACKTOP = sp; //@line 52797
  return;
 }
 if ((_e68_ea_get_val8($c, $s1) | 0) != 0) {
  STACKTOP = sp; //@line 52804
  return;
 }
 $15 = $c + 88 + (($3 >>> 9 & 7) << 2) | 0; //@line 52807
 $19 = HEAPU8[$s1] | HEAP32[$15 >> 2]; //@line 52811
 $21 = $c + 372 | 0; //@line 52813
 HEAP32[$21 >> 2] = (HEAP32[$21 >> 2] | 0) + 8; //@line 52816
 _e68_cc_set_nz_8($c, 15, $19 & 255); //@line 52817
 $24 = $c + 156 | 0; //@line 52818
 $25 = HEAP32[$24 >> 2] | 0; //@line 52819
 if (($25 & 1 | 0) != 0) {
  _e68_exception_address($c, $25, 0, 0); //@line 52824
  STACKTOP = sp; //@line 52826
  return;
 }
 $30 = $c + 164 | 0; //@line 52829
 HEAP16[$c + 162 >> 1] = HEAP16[$30 >> 1] | 0; //@line 52832
 $33 = $25 & 16777215; //@line 52833
 $34 = $33 + 1 | 0; //@line 52834
 if ($34 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $40 = HEAP32[$c + 32 >> 2] | 0; //@line 52841
  $_0_i_i = HEAPU8[$40 + $33 | 0] << 8 | HEAPU8[$40 + $34 | 0]; //@line 52851
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $33) | 0; //@line 52859
 }
 HEAP16[$30 >> 1] = $_0_i_i; //@line 52862
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + 2; //@line 52870
  $62 = $c + 152 | 0; //@line 52871
  HEAP32[$62 >> 2] = (HEAP32[$62 >> 2] | 0) + 2; //@line 52874
  HEAP32[$15 >> 2] = HEAP32[$15 >> 2] & -256 | $19 & 255; //@line 52879
  STACKTOP = sp; //@line 52881
  return;
 } else {
  _e68_exception_bus($c); //@line 52884
  STACKTOP = sp; //@line 52886
  return;
 }
}
function _op8040($c) {
 $c = $c | 0;
 var $s1 = 0, $3 = 0, $6 = 0, $15 = 0, $19 = 0, $21 = 0, $24 = 0, $25 = 0, $30 = 0, $33 = 0, $34 = 0, $40 = 0, $_0_i_i = 0, $62 = 0, sp = 0;
 sp = STACKTOP; //@line 52903
 STACKTOP = STACKTOP + 8 | 0; //@line 52903
 $s1 = sp | 0; //@line 52904
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 52907
 $6 = $3 & 63; //@line 52910
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($6 << 2) >> 2] & 127]($c, $6, 4093, 16) | 0) != 0) {
  STACKTOP = sp; //@line 52917
  return;
 }
 if ((_e68_ea_get_val16($c, $s1) | 0) != 0) {
  STACKTOP = sp; //@line 52924
  return;
 }
 $15 = $c + 88 + (($3 >>> 9 & 7) << 2) | 0; //@line 52927
 $19 = HEAPU16[$s1 >> 1] | HEAP32[$15 >> 2]; //@line 52931
 $21 = $c + 372 | 0; //@line 52933
 HEAP32[$21 >> 2] = (HEAP32[$21 >> 2] | 0) + 8; //@line 52936
 _e68_cc_set_nz_16($c, 15, $19 & 65535); //@line 52937
 $24 = $c + 156 | 0; //@line 52938
 $25 = HEAP32[$24 >> 2] | 0; //@line 52939
 if (($25 & 1 | 0) != 0) {
  _e68_exception_address($c, $25, 0, 0); //@line 52944
  STACKTOP = sp; //@line 52946
  return;
 }
 $30 = $c + 164 | 0; //@line 52949
 HEAP16[$c + 162 >> 1] = HEAP16[$30 >> 1] | 0; //@line 52952
 $33 = $25 & 16777215; //@line 52953
 $34 = $33 + 1 | 0; //@line 52954
 if ($34 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $40 = HEAP32[$c + 32 >> 2] | 0; //@line 52961
  $_0_i_i = HEAPU8[$40 + $33 | 0] << 8 | HEAPU8[$40 + $34 | 0]; //@line 52971
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $33) | 0; //@line 52979
 }
 HEAP16[$30 >> 1] = $_0_i_i; //@line 52982
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + 2; //@line 52990
  $62 = $c + 152 | 0; //@line 52991
  HEAP32[$62 >> 2] = (HEAP32[$62 >> 2] | 0) + 2; //@line 52994
  HEAP32[$15 >> 2] = HEAP32[$15 >> 2] & -65536 | $19 & 65535; //@line 52999
  STACKTOP = sp; //@line 53001
  return;
 } else {
  _e68_exception_bus($c); //@line 53004
  STACKTOP = sp; //@line 53006
  return;
 }
}
function _op8080($c) {
 $c = $c | 0;
 var $s1 = 0, $3 = 0, $6 = 0, $15 = 0, $18 = 0, $19 = 0, $22 = 0, $23 = 0, $28 = 0, $31 = 0, $32 = 0, $38 = 0, $_0_i_i = 0, $60 = 0, sp = 0;
 sp = STACKTOP; //@line 53022
 STACKTOP = STACKTOP + 8 | 0; //@line 53022
 $s1 = sp | 0; //@line 53023
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 53026
 $6 = $3 & 63; //@line 53029
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($6 << 2) >> 2] & 127]($c, $6, 4093, 32) | 0) != 0) {
  STACKTOP = sp; //@line 53036
  return;
 }
 if ((_e68_ea_get_val32($c, $s1) | 0) != 0) {
  STACKTOP = sp; //@line 53043
  return;
 }
 $15 = $c + 88 + (($3 >>> 9 & 7) << 2) | 0; //@line 53046
 $18 = HEAP32[$s1 >> 2] | HEAP32[$15 >> 2]; //@line 53049
 $19 = $c + 372 | 0; //@line 53050
 HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 10; //@line 53053
 _e68_cc_set_nz_32($c, 15, $18); //@line 53054
 $22 = $c + 156 | 0; //@line 53055
 $23 = HEAP32[$22 >> 2] | 0; //@line 53056
 if (($23 & 1 | 0) != 0) {
  _e68_exception_address($c, $23, 0, 0); //@line 53061
  STACKTOP = sp; //@line 53063
  return;
 }
 $28 = $c + 164 | 0; //@line 53066
 HEAP16[$c + 162 >> 1] = HEAP16[$28 >> 1] | 0; //@line 53069
 $31 = $23 & 16777215; //@line 53070
 $32 = $31 + 1 | 0; //@line 53071
 if ($32 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $38 = HEAP32[$c + 32 >> 2] | 0; //@line 53078
  $_0_i_i = HEAPU8[$38 + $31 | 0] << 8 | HEAPU8[$38 + $32 | 0]; //@line 53088
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $31) | 0; //@line 53096
 }
 HEAP16[$28 >> 1] = $_0_i_i; //@line 53099
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + 2; //@line 53107
  $60 = $c + 152 | 0; //@line 53108
  HEAP32[$60 >> 2] = (HEAP32[$60 >> 2] | 0) + 2; //@line 53111
  HEAP32[$15 >> 2] = $18; //@line 53112
  STACKTOP = sp; //@line 53114
  return;
 } else {
  _e68_exception_bus($c); //@line 53117
  STACKTOP = sp; //@line 53119
  return;
 }
}
function _op80c0($c) {
 $c = $c | 0;
 var $s1 = 0, $3 = 0, $6 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $21 = 0, $22 = 0, $27 = 0, $30 = 0, $31 = 0, $37 = 0, $_0_i_i = 0, $59 = 0, $63 = 0, $66 = 0, $77 = 0, $80 = 0, $81 = 0, $86 = 0, $89 = 0, $90 = 0, $96 = 0, $_0_i_i16 = 0, $118 = 0, sp = 0;
 sp = STACKTOP; //@line 53141
 STACKTOP = STACKTOP + 8 | 0; //@line 53141
 $s1 = sp | 0; //@line 53142
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 53145
 $6 = $3 & 63; //@line 53148
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($6 << 2) >> 2] & 127]($c, $6, 4093, 16) | 0) != 0) {
  STACKTOP = sp; //@line 53155
  return;
 }
 if ((_e68_ea_get_val16($c, $s1) | 0) != 0) {
  STACKTOP = sp; //@line 53162
  return;
 }
 $15 = $c + 88 + (($3 >>> 9 & 7) << 2) | 0; //@line 53165
 $16 = HEAP32[$15 >> 2] | 0; //@line 53166
 $17 = HEAP16[$s1 >> 1] | 0; //@line 53167
 $18 = $17 & 65535; //@line 53168
 if ($17 << 16 >> 16 == 0) {
  $21 = $c + 156 | 0; //@line 53172
  $22 = HEAP32[$21 >> 2] | 0; //@line 53173
  if (($22 & 1 | 0) != 0) {
   _e68_exception_address($c, $22, 0, 0); //@line 53178
   STACKTOP = sp; //@line 53180
   return;
  }
  $27 = $c + 164 | 0; //@line 53183
  HEAP16[$c + 162 >> 1] = HEAP16[$27 >> 1] | 0; //@line 53186
  $30 = $22 & 16777215; //@line 53187
  $31 = $30 + 1 | 0; //@line 53188
  if ($31 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $37 = HEAP32[$c + 32 >> 2] | 0; //@line 53195
   $_0_i_i = HEAPU8[$37 + $30 | 0] << 8 | HEAPU8[$37 + $31 | 0]; //@line 53205
  } else {
   $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $30) | 0; //@line 53213
  }
  HEAP16[$27 >> 1] = $_0_i_i; //@line 53216
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$21 >> 2] = (HEAP32[$21 >> 2] | 0) + 2; //@line 53224
   $59 = $c + 152 | 0; //@line 53225
   HEAP32[$59 >> 2] = (HEAP32[$59 >> 2] | 0) + 2; //@line 53228
   _e68_exception_divzero($c); //@line 53229
   STACKTOP = sp; //@line 53231
   return;
  } else {
   _e68_exception_bus($c); //@line 53234
   STACKTOP = sp; //@line 53236
   return;
  }
 }
 $63 = ($16 >>> 0) / ($18 >>> 0) | 0; //@line 53240
 if ($63 >>> 0 > 65535) {
  $66 = $c + 166 | 0; //@line 53244
  HEAP16[$66 >> 1] = HEAP16[$66 >> 1] & -4 | 2; //@line 53248
 } else {
  HEAP32[$15 >> 2] = (($16 >>> 0) % ($18 >>> 0) | 0) << 16 | $63 & 65535; //@line 53255
  _e68_cc_set_nz_16($c, 15, $63 & 65535); //@line 53257
 }
 $77 = $c + 372 | 0; //@line 53259
 HEAP32[$77 >> 2] = (HEAP32[$77 >> 2] | 0) + 144; //@line 53262
 $80 = $c + 156 | 0; //@line 53263
 $81 = HEAP32[$80 >> 2] | 0; //@line 53264
 if (($81 & 1 | 0) != 0) {
  _e68_exception_address($c, $81, 0, 0); //@line 53269
  STACKTOP = sp; //@line 53271
  return;
 }
 $86 = $c + 164 | 0; //@line 53274
 HEAP16[$c + 162 >> 1] = HEAP16[$86 >> 1] | 0; //@line 53277
 $89 = $81 & 16777215; //@line 53278
 $90 = $89 + 1 | 0; //@line 53279
 if ($90 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $96 = HEAP32[$c + 32 >> 2] | 0; //@line 53286
  $_0_i_i16 = HEAPU8[$96 + $89 | 0] << 8 | HEAPU8[$96 + $90 | 0]; //@line 53296
 } else {
  $_0_i_i16 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $89) | 0; //@line 53304
 }
 HEAP16[$86 >> 1] = $_0_i_i16; //@line 53307
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$80 >> 2] = (HEAP32[$80 >> 2] | 0) + 2; //@line 53315
  $118 = $c + 152 | 0; //@line 53316
  HEAP32[$118 >> 2] = (HEAP32[$118 >> 2] | 0) + 2; //@line 53319
  STACKTOP = sp; //@line 53321
  return;
 } else {
  _e68_exception_bus($c); //@line 53324
  STACKTOP = sp; //@line 53326
  return;
 }
}
function _op8100($c) {
 $c = $c | 0;
 var $s1_i = 0, $s2_i = 0, $s2 = 0, $3 = 0, $7 = 0, $9 = 0, $ea1_0_i = 0, $ea2_0_i = 0, $32 = 0, $34 = 0, $37 = 0, $38 = 0, $40 = 0, $d_0_i = 0, $_d_0_i = 0, $49 = 0, $52 = 0, $storemerge_i = 0, $60 = 0, $61 = 0, $66 = 0, $69 = 0, $70 = 0, $76 = 0, $_0_i_i_i = 0, $98 = 0, $101 = 0, $107 = 0, $108 = 0, $120 = 0, $121 = 0, $124 = 0, $125 = 0, $130 = 0, $133 = 0, $134 = 0, $140 = 0, $_0_i_i = 0, $162 = 0, sp = 0;
 sp = STACKTOP; //@line 53355
 STACKTOP = STACKTOP + 24 | 0; //@line 53355
 $s1_i = sp | 0; //@line 53356
 $s2_i = sp + 8 | 0; //@line 53357
 $s2 = sp + 16 | 0; //@line 53358
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 53361
 if (($3 & 48 | 0) != 0) {
  $107 = HEAP32[$c + 88 + (($3 >>> 9 & 7) << 2) >> 2] | 0; //@line 53369
  $108 = $3 & 63; //@line 53370
  if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($108 << 2) >> 2] & 127]($c, $108, 508, 8) | 0) != 0) {
   STACKTOP = sp; //@line 53377
   return;
  }
  if ((_e68_ea_get_val8($c, $s2) | 0) != 0) {
   STACKTOP = sp; //@line 53384
   return;
  }
  $120 = (HEAPU8[$s2] | $107) & 255; //@line 53390
  $121 = $c + 372 | 0; //@line 53391
  HEAP32[$121 >> 2] = (HEAP32[$121 >> 2] | 0) + 8; //@line 53394
  _e68_cc_set_nz_8($c, 15, $120); //@line 53395
  $124 = $c + 156 | 0; //@line 53396
  $125 = HEAP32[$124 >> 2] | 0; //@line 53397
  if (($125 & 1 | 0) != 0) {
   _e68_exception_address($c, $125, 0, 0); //@line 53402
   STACKTOP = sp; //@line 53404
   return;
  }
  $130 = $c + 164 | 0; //@line 53407
  HEAP16[$c + 162 >> 1] = HEAP16[$130 >> 1] | 0; //@line 53410
  $133 = $125 & 16777215; //@line 53411
  $134 = $133 + 1 | 0; //@line 53412
  if ($134 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $140 = HEAP32[$c + 32 >> 2] | 0; //@line 53419
   $_0_i_i = HEAPU8[$140 + $133 | 0] << 8 | HEAPU8[$140 + $134 | 0]; //@line 53429
  } else {
   $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $133) | 0; //@line 53437
  }
  HEAP16[$130 >> 1] = $_0_i_i; //@line 53440
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$124 >> 2] = (HEAP32[$124 >> 2] | 0) + 2; //@line 53448
   $162 = $c + 152 | 0; //@line 53449
   HEAP32[$162 >> 2] = (HEAP32[$162 >> 2] | 0) + 2; //@line 53452
   _e68_ea_set_val8($c, $120) | 0; //@line 53453
   STACKTOP = sp; //@line 53455
   return;
  } else {
   _e68_exception_bus($c); //@line 53458
   STACKTOP = sp; //@line 53460
   return;
  }
 }
 $7 = $3 & 7; //@line 53464
 $9 = $3 >>> 9 & 7; //@line 53466
 if (($3 & 8 | 0) == 0) {
  $ea2_0_i = $9;
  $ea1_0_i = $7;
 } else {
  $ea2_0_i = $9 | 32;
  $ea1_0_i = $7 | 32;
 }
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($ea1_0_i << 2) >> 2] & 127]($c, $ea1_0_i, 17, 8) | 0) != 0) {
  STACKTOP = sp; //@line 53486
  return;
 }
 if ((_e68_ea_get_val8($c, $s1_i) | 0) != 0) {
  STACKTOP = sp; //@line 53493
  return;
 }
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($ea2_0_i << 2) >> 2] & 127]($c, $ea2_0_i, 17, 8) | 0) != 0) {
  STACKTOP = sp; //@line 53502
  return;
 }
 if ((_e68_ea_get_val8($c, $s2_i) | 0) != 0) {
  STACKTOP = sp; //@line 53509
  return;
 }
 $32 = HEAP8[$s2_i] | 0; //@line 53512
 $34 = HEAP8[$s1_i] | 0; //@line 53514
 $37 = $c + 166 | 0; //@line 53517
 $38 = HEAP16[$37 >> 1] | 0; //@line 53518
 $40 = (($32 & 255) - ($34 & 255) & 65535) - (($38 & 65535) >>> 4 & 1) & 65535; //@line 53521
 $d_0_i = ($32 & 15) >>> 0 < ($34 & 15) >>> 0 ? $40 - 6 & 65535 : $40; //@line 53528
 $_d_0_i = ($d_0_i & 65535) > 159 ? $d_0_i - 96 & 65535 : $d_0_i; //@line 53531
 $49 = $c + 372 | 0; //@line 53532
 HEAP32[$49 >> 2] = (HEAP32[$49 >> 2] | 0) + 10; //@line 53535
 $52 = $_d_0_i & 65535; //@line 53536
 $storemerge_i = ($52 & 65280 | 0) == 0 ? $38 & -18 : $38 | 17; //@line 53541
 HEAP16[$37 >> 1] = ($52 & 255 | 0) == 0 ? $storemerge_i : $storemerge_i & -5; //@line 53546
 $60 = $c + 156 | 0; //@line 53547
 $61 = HEAP32[$60 >> 2] | 0; //@line 53548
 if (($61 & 1 | 0) != 0) {
  _e68_exception_address($c, $61, 0, 0); //@line 53553
  STACKTOP = sp; //@line 53555
  return;
 }
 $66 = $c + 164 | 0; //@line 53558
 HEAP16[$c + 162 >> 1] = HEAP16[$66 >> 1] | 0; //@line 53561
 $69 = $61 & 16777215; //@line 53562
 $70 = $69 + 1 | 0; //@line 53563
 if ($70 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $76 = HEAP32[$c + 32 >> 2] | 0; //@line 53570
  $_0_i_i_i = HEAPU8[$76 + $69 | 0] << 8 | HEAPU8[$76 + $70 | 0]; //@line 53580
 } else {
  $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $69) | 0; //@line 53588
 }
 HEAP16[$66 >> 1] = $_0_i_i_i; //@line 53591
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$60 >> 2] = (HEAP32[$60 >> 2] | 0) + 2; //@line 53599
  $98 = $c + 152 | 0; //@line 53600
  HEAP32[$98 >> 2] = (HEAP32[$98 >> 2] | 0) + 2; //@line 53603
  $101 = $_d_0_i & 255; //@line 53604
  _e68_ea_set_val8($c, $101) | 0; //@line 53605
  STACKTOP = sp; //@line 53607
  return;
 } else {
  _e68_exception_bus($c); //@line 53610
  STACKTOP = sp; //@line 53612
  return;
 }
}
function _op8140($c) {
 $c = $c | 0;
 var $s2 = 0, $3 = 0, $7 = 0, $8 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $30 = 0, $33 = 0, $34 = 0, $40 = 0, $_0_i_i = 0, $62 = 0, sp = 0;
 sp = STACKTOP; //@line 53629
 STACKTOP = STACKTOP + 8 | 0; //@line 53629
 $s2 = sp | 0; //@line 53630
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 53633
 $7 = HEAP32[$c + 88 + (($3 >>> 9 & 7) << 2) >> 2] | 0; //@line 53637
 $8 = $3 & 63; //@line 53638
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($8 << 2) >> 2] & 127]($c, $8, 508, 16) | 0) != 0) {
  STACKTOP = sp; //@line 53645
  return;
 }
 if ((_e68_ea_get_val16($c, $s2) | 0) != 0) {
  STACKTOP = sp; //@line 53652
  return;
 }
 $20 = (HEAPU16[$s2 >> 1] | $7) & 65535; //@line 53658
 $21 = $c + 372 | 0; //@line 53659
 HEAP32[$21 >> 2] = (HEAP32[$21 >> 2] | 0) + 8; //@line 53662
 _e68_cc_set_nz_16($c, 15, $20); //@line 53663
 $24 = $c + 156 | 0; //@line 53664
 $25 = HEAP32[$24 >> 2] | 0; //@line 53665
 if (($25 & 1 | 0) != 0) {
  _e68_exception_address($c, $25, 0, 0); //@line 53670
  STACKTOP = sp; //@line 53672
  return;
 }
 $30 = $c + 164 | 0; //@line 53675
 HEAP16[$c + 162 >> 1] = HEAP16[$30 >> 1] | 0; //@line 53678
 $33 = $25 & 16777215; //@line 53679
 $34 = $33 + 1 | 0; //@line 53680
 if ($34 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $40 = HEAP32[$c + 32 >> 2] | 0; //@line 53687
  $_0_i_i = HEAPU8[$40 + $33 | 0] << 8 | HEAPU8[$40 + $34 | 0]; //@line 53697
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $33) | 0; //@line 53705
 }
 HEAP16[$30 >> 1] = $_0_i_i; //@line 53708
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + 2; //@line 53716
  $62 = $c + 152 | 0; //@line 53717
  HEAP32[$62 >> 2] = (HEAP32[$62 >> 2] | 0) + 2; //@line 53720
  _e68_ea_set_val16($c, $20) | 0; //@line 53721
  STACKTOP = sp; //@line 53723
  return;
 } else {
  _e68_exception_bus($c); //@line 53726
  STACKTOP = sp; //@line 53728
  return;
 }
}
function _op8180($c) {
 $c = $c | 0;
 var $s2 = 0, $3 = 0, $7 = 0, $8 = 0, $18 = 0, $19 = 0, $22 = 0, $23 = 0, $28 = 0, $31 = 0, $32 = 0, $38 = 0, $_0_i_i = 0, $60 = 0, sp = 0;
 sp = STACKTOP; //@line 53745
 STACKTOP = STACKTOP + 8 | 0; //@line 53745
 $s2 = sp | 0; //@line 53746
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 53749
 $7 = HEAP32[$c + 88 + (($3 >>> 9 & 7) << 2) >> 2] | 0; //@line 53753
 $8 = $3 & 63; //@line 53754
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($8 << 2) >> 2] & 127]($c, $8, 508, 32) | 0) != 0) {
  STACKTOP = sp; //@line 53761
  return;
 }
 if ((_e68_ea_get_val32($c, $s2) | 0) != 0) {
  STACKTOP = sp; //@line 53768
  return;
 }
 $18 = HEAP32[$s2 >> 2] | $7; //@line 53772
 $19 = $c + 372 | 0; //@line 53773
 HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 10; //@line 53776
 _e68_cc_set_nz_32($c, 15, $18); //@line 53777
 $22 = $c + 156 | 0; //@line 53778
 $23 = HEAP32[$22 >> 2] | 0; //@line 53779
 if (($23 & 1 | 0) != 0) {
  _e68_exception_address($c, $23, 0, 0); //@line 53784
  STACKTOP = sp; //@line 53786
  return;
 }
 $28 = $c + 164 | 0; //@line 53789
 HEAP16[$c + 162 >> 1] = HEAP16[$28 >> 1] | 0; //@line 53792
 $31 = $23 & 16777215; //@line 53793
 $32 = $31 + 1 | 0; //@line 53794
 if ($32 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $38 = HEAP32[$c + 32 >> 2] | 0; //@line 53801
  $_0_i_i = HEAPU8[$38 + $31 | 0] << 8 | HEAPU8[$38 + $32 | 0]; //@line 53811
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $31) | 0; //@line 53819
 }
 HEAP16[$28 >> 1] = $_0_i_i; //@line 53822
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + 2; //@line 53830
  $60 = $c + 152 | 0; //@line 53831
  HEAP32[$60 >> 2] = (HEAP32[$60 >> 2] | 0) + 2; //@line 53834
  _e68_ea_set_val32($c, $18) | 0; //@line 53835
  STACKTOP = sp; //@line 53837
  return;
 } else {
  _e68_exception_bus($c); //@line 53840
  STACKTOP = sp; //@line 53842
  return;
 }
}
function _op81c0($c) {
 $c = $c | 0;
 var $s1 = 0, $3 = 0, $6 = 0, $15 = 0, $16 = 0, $17 = 0, $20 = 0, $21 = 0, $26 = 0, $29 = 0, $30 = 0, $36 = 0, $_0_i_i = 0, $58 = 0, $_lobit = 0, $_22 = 0, $66 = 0, $68 = 0, $n1_0 = 0, $69 = 0, $70 = 0, $71 = 0, $d2_0 = 0, $_23 = 0, $79 = 0, $82 = 0, $89 = 0, $94 = 0, $95 = 0, $100 = 0, $103 = 0, $104 = 0, $110 = 0, $_0_i_i24 = 0, $132 = 0, sp = 0;
 sp = STACKTOP; //@line 53866
 STACKTOP = STACKTOP + 8 | 0; //@line 53866
 $s1 = sp | 0; //@line 53867
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 53870
 $6 = $3 & 63; //@line 53873
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($6 << 2) >> 2] & 127]($c, $6, 4093, 16) | 0) != 0) {
  STACKTOP = sp; //@line 53880
  return;
 }
 if ((_e68_ea_get_val16($c, $s1) | 0) != 0) {
  STACKTOP = sp; //@line 53887
  return;
 }
 $15 = $c + 88 + (($3 >>> 9 & 7) << 2) | 0; //@line 53890
 $16 = HEAP32[$15 >> 2] | 0; //@line 53891
 $17 = HEAP16[$s1 >> 1] | 0; //@line 53892
 if ($17 << 16 >> 16 == 0) {
  $20 = $c + 156 | 0; //@line 53896
  $21 = HEAP32[$20 >> 2] | 0; //@line 53897
  if (($21 & 1 | 0) != 0) {
   _e68_exception_address($c, $21, 0, 0); //@line 53902
   STACKTOP = sp; //@line 53904
   return;
  }
  $26 = $c + 164 | 0; //@line 53907
  HEAP16[$c + 162 >> 1] = HEAP16[$26 >> 1] | 0; //@line 53910
  $29 = $21 & 16777215; //@line 53911
  $30 = $29 + 1 | 0; //@line 53912
  if ($30 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $36 = HEAP32[$c + 32 >> 2] | 0; //@line 53919
   $_0_i_i = HEAPU8[$36 + $29 | 0] << 8 | HEAPU8[$36 + $30 | 0]; //@line 53929
  } else {
   $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $29) | 0; //@line 53937
  }
  HEAP16[$26 >> 1] = $_0_i_i; //@line 53940
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 2; //@line 53948
   $58 = $c + 152 | 0; //@line 53949
   HEAP32[$58 >> 2] = (HEAP32[$58 >> 2] | 0) + 2; //@line 53952
   _e68_exception_divzero($c); //@line 53953
   STACKTOP = sp; //@line 53955
   return;
  } else {
   _e68_exception_bus($c); //@line 53958
   STACKTOP = sp; //@line 53960
   return;
  }
 }
 $_lobit = $16 >>> 31; //@line 53966
 $_22 = ($16 | 0) < 0 ? -$16 | 0 : $16; //@line 53967
 if ($17 << 16 >> 16 > -1) {
  $n1_0 = 0;
  $68 = $17;
 } else {
  $66 = -$17 & 65535; //@line 53973
  HEAP16[$s1 >> 1] = $66; //@line 53974
  $n1_0 = 1;
  $68 = $66;
 }
 $69 = $68 & 65535; //@line 53980
 $70 = ($_22 >>> 0) / ($69 >>> 0) | 0; //@line 53981
 $71 = ($_22 >>> 0) % ($69 >>> 0) | 0; //@line 53982
 if (($_lobit | 0) == 0) {
  $d2_0 = $71; //@line 53986
 } else {
  $d2_0 = -$71 & 65535; //@line 53991
 }
 $_23 = ($n1_0 | 0) == ($_lobit | 0) ? $70 : -$70 | 0; //@line 53996
 $79 = $c + 372 | 0; //@line 53997
 HEAP32[$79 >> 2] = (HEAP32[$79 >> 2] | 0) + 162; //@line 54000
 $82 = $_23 & -32768; //@line 54001
 if (($82 | 0) == 0 | ($82 | 0) == (-32768 | 0)) {
  HEAP32[$15 >> 2] = $d2_0 << 16 | $_23 & 65535; //@line 54006
  _e68_cc_set_nz_16($c, 15, $_23 & 65535); //@line 54008
 } else {
  $89 = $c + 166 | 0; //@line 54011
  HEAP16[$89 >> 1] = HEAP16[$89 >> 1] & -4 | 2; //@line 54015
 }
 $94 = $c + 156 | 0; //@line 54018
 $95 = HEAP32[$94 >> 2] | 0; //@line 54019
 if (($95 & 1 | 0) != 0) {
  _e68_exception_address($c, $95, 0, 0); //@line 54024
  STACKTOP = sp; //@line 54026
  return;
 }
 $100 = $c + 164 | 0; //@line 54029
 HEAP16[$c + 162 >> 1] = HEAP16[$100 >> 1] | 0; //@line 54032
 $103 = $95 & 16777215; //@line 54033
 $104 = $103 + 1 | 0; //@line 54034
 if ($104 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $110 = HEAP32[$c + 32 >> 2] | 0; //@line 54041
  $_0_i_i24 = HEAPU8[$110 + $103 | 0] << 8 | HEAPU8[$110 + $104 | 0]; //@line 54051
 } else {
  $_0_i_i24 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $103) | 0; //@line 54059
 }
 HEAP16[$100 >> 1] = $_0_i_i24; //@line 54062
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$94 >> 2] = (HEAP32[$94 >> 2] | 0) + 2; //@line 54070
  $132 = $c + 152 | 0; //@line 54071
  HEAP32[$132 >> 2] = (HEAP32[$132 >> 2] | 0) + 2; //@line 54074
  STACKTOP = sp; //@line 54076
  return;
 } else {
  _e68_exception_bus($c); //@line 54079
  STACKTOP = sp; //@line 54081
  return;
 }
}
function _op9000($c) {
 $c = $c | 0;
 var $s1 = 0, $3 = 0, $6 = 0, $15 = 0, $16 = 0, $18 = 0, $20 = 0, $22 = 0, $25 = 0, $26 = 0, $31 = 0, $34 = 0, $35 = 0, $41 = 0, $_0_i_i = 0, $63 = 0, sp = 0;
 sp = STACKTOP; //@line 54098
 STACKTOP = STACKTOP + 8 | 0; //@line 54098
 $s1 = sp | 0; //@line 54099
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 54102
 $6 = $3 & 63; //@line 54105
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($6 << 2) >> 2] & 127]($c, $6, 4093, 8) | 0) != 0) {
  STACKTOP = sp; //@line 54112
  return;
 }
 if ((_e68_ea_get_val8($c, $s1) | 0) != 0) {
  STACKTOP = sp; //@line 54119
  return;
 }
 $15 = $c + 88 + (($3 >>> 9 & 7) << 2) | 0; //@line 54122
 $16 = HEAP32[$15 >> 2] | 0; //@line 54123
 $18 = HEAP8[$s1] | 0; //@line 54125
 $20 = $16 - ($18 & 255) | 0; //@line 54127
 $22 = $c + 372 | 0; //@line 54129
 HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + 8; //@line 54132
 _e68_cc_set_sub_8($c, $20 & 255, $18, $16 & 255); //@line 54133
 $25 = $c + 156 | 0; //@line 54134
 $26 = HEAP32[$25 >> 2] | 0; //@line 54135
 if (($26 & 1 | 0) != 0) {
  _e68_exception_address($c, $26, 0, 0); //@line 54140
  STACKTOP = sp; //@line 54142
  return;
 }
 $31 = $c + 164 | 0; //@line 54145
 HEAP16[$c + 162 >> 1] = HEAP16[$31 >> 1] | 0; //@line 54148
 $34 = $26 & 16777215; //@line 54149
 $35 = $34 + 1 | 0; //@line 54150
 if ($35 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $41 = HEAP32[$c + 32 >> 2] | 0; //@line 54157
  $_0_i_i = HEAPU8[$41 + $34 | 0] << 8 | HEAPU8[$41 + $35 | 0]; //@line 54167
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $34) | 0; //@line 54175
 }
 HEAP16[$31 >> 1] = $_0_i_i; //@line 54178
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$25 >> 2] = (HEAP32[$25 >> 2] | 0) + 2; //@line 54186
  $63 = $c + 152 | 0; //@line 54187
  HEAP32[$63 >> 2] = (HEAP32[$63 >> 2] | 0) + 2; //@line 54190
  HEAP32[$15 >> 2] = HEAP32[$15 >> 2] & -256 | $20 & 255; //@line 54195
  STACKTOP = sp; //@line 54197
  return;
 } else {
  _e68_exception_bus($c); //@line 54200
  STACKTOP = sp; //@line 54202
  return;
 }
}
function _op9040($c) {
 $c = $c | 0;
 var $s1 = 0, $3 = 0, $6 = 0, $15 = 0, $16 = 0, $18 = 0, $20 = 0, $22 = 0, $25 = 0, $26 = 0, $31 = 0, $34 = 0, $35 = 0, $41 = 0, $_0_i_i = 0, $63 = 0, sp = 0;
 sp = STACKTOP; //@line 54219
 STACKTOP = STACKTOP + 8 | 0; //@line 54219
 $s1 = sp | 0; //@line 54220
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 54223
 $6 = $3 & 63; //@line 54226
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($6 << 2) >> 2] & 127]($c, $6, 4095, 16) | 0) != 0) {
  STACKTOP = sp; //@line 54233
  return;
 }
 if ((_e68_ea_get_val16($c, $s1) | 0) != 0) {
  STACKTOP = sp; //@line 54240
  return;
 }
 $15 = $c + 88 + (($3 >>> 9 & 7) << 2) | 0; //@line 54243
 $16 = HEAP32[$15 >> 2] | 0; //@line 54244
 $18 = HEAP16[$s1 >> 1] | 0; //@line 54246
 $20 = $16 - ($18 & 65535) | 0; //@line 54248
 $22 = $c + 372 | 0; //@line 54250
 HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + 8; //@line 54253
 _e68_cc_set_sub_16($c, $20 & 65535, $18, $16 & 65535); //@line 54254
 $25 = $c + 156 | 0; //@line 54255
 $26 = HEAP32[$25 >> 2] | 0; //@line 54256
 if (($26 & 1 | 0) != 0) {
  _e68_exception_address($c, $26, 0, 0); //@line 54261
  STACKTOP = sp; //@line 54263
  return;
 }
 $31 = $c + 164 | 0; //@line 54266
 HEAP16[$c + 162 >> 1] = HEAP16[$31 >> 1] | 0; //@line 54269
 $34 = $26 & 16777215; //@line 54270
 $35 = $34 + 1 | 0; //@line 54271
 if ($35 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $41 = HEAP32[$c + 32 >> 2] | 0; //@line 54278
  $_0_i_i = HEAPU8[$41 + $34 | 0] << 8 | HEAPU8[$41 + $35 | 0]; //@line 54288
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $34) | 0; //@line 54296
 }
 HEAP16[$31 >> 1] = $_0_i_i; //@line 54299
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$25 >> 2] = (HEAP32[$25 >> 2] | 0) + 2; //@line 54307
  $63 = $c + 152 | 0; //@line 54308
  HEAP32[$63 >> 2] = (HEAP32[$63 >> 2] | 0) + 2; //@line 54311
  HEAP32[$15 >> 2] = HEAP32[$15 >> 2] & -65536 | $20 & 65535; //@line 54316
  STACKTOP = sp; //@line 54318
  return;
 } else {
  _e68_exception_bus($c); //@line 54321
  STACKTOP = sp; //@line 54323
  return;
 }
}
function _op9080($c) {
 $c = $c | 0;
 var $s1 = 0, $3 = 0, $6 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $23 = 0, $28 = 0, $31 = 0, $32 = 0, $38 = 0, $_0_i_i = 0, $60 = 0, sp = 0;
 sp = STACKTOP; //@line 54339
 STACKTOP = STACKTOP + 8 | 0; //@line 54339
 $s1 = sp | 0; //@line 54340
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 54343
 $6 = $3 & 63; //@line 54346
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($6 << 2) >> 2] & 127]($c, $6, 4095, 32) | 0) != 0) {
  STACKTOP = sp; //@line 54353
  return;
 }
 if ((_e68_ea_get_val32($c, $s1) | 0) != 0) {
  STACKTOP = sp; //@line 54360
  return;
 }
 $15 = $c + 88 + (($3 >>> 9 & 7) << 2) | 0; //@line 54363
 $16 = HEAP32[$15 >> 2] | 0; //@line 54364
 $17 = HEAP32[$s1 >> 2] | 0; //@line 54365
 $18 = $16 - $17 | 0; //@line 54366
 $19 = $c + 372 | 0; //@line 54367
 HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 10; //@line 54370
 _e68_cc_set_sub_32($c, $18, $17, $16); //@line 54371
 $22 = $c + 156 | 0; //@line 54372
 $23 = HEAP32[$22 >> 2] | 0; //@line 54373
 if (($23 & 1 | 0) != 0) {
  _e68_exception_address($c, $23, 0, 0); //@line 54378
  STACKTOP = sp; //@line 54380
  return;
 }
 $28 = $c + 164 | 0; //@line 54383
 HEAP16[$c + 162 >> 1] = HEAP16[$28 >> 1] | 0; //@line 54386
 $31 = $23 & 16777215; //@line 54387
 $32 = $31 + 1 | 0; //@line 54388
 if ($32 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $38 = HEAP32[$c + 32 >> 2] | 0; //@line 54395
  $_0_i_i = HEAPU8[$38 + $31 | 0] << 8 | HEAPU8[$38 + $32 | 0]; //@line 54405
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $31) | 0; //@line 54413
 }
 HEAP16[$28 >> 1] = $_0_i_i; //@line 54416
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + 2; //@line 54424
  $60 = $c + 152 | 0; //@line 54425
  HEAP32[$60 >> 2] = (HEAP32[$60 >> 2] | 0) + 2; //@line 54428
  HEAP32[$15 >> 2] = $18; //@line 54429
  STACKTOP = sp; //@line 54431
  return;
 } else {
  _e68_exception_bus($c); //@line 54434
  STACKTOP = sp; //@line 54436
  return;
 }
}
function _op90c0($c) {
 $c = $c | 0;
 var $t = 0, $3 = 0, $6 = 0, $16 = 0, $21 = 0, $22 = 0, $23 = 0, $26 = 0, $27 = 0, $32 = 0, $35 = 0, $36 = 0, $42 = 0, $_0_i_i = 0, $64 = 0, sp = 0;
 sp = STACKTOP; //@line 54453
 STACKTOP = STACKTOP + 8 | 0; //@line 54453
 $t = sp | 0; //@line 54454
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 54457
 $6 = $3 & 63; //@line 54460
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($6 << 2) >> 2] & 127]($c, $6, 4095, 16) | 0) != 0) {
  STACKTOP = sp; //@line 54467
  return;
 }
 if ((_e68_ea_get_val16($c, $t) | 0) != 0) {
  STACKTOP = sp; //@line 54474
  return;
 }
 $16 = HEAPU16[$t >> 1] | 0; //@line 54478
 $21 = $c + 120 + (($3 >>> 9 & 7) << 2) | 0; //@line 54483
 $22 = HEAP32[$21 >> 2] | 0; //@line 54484
 $23 = $c + 372 | 0; //@line 54485
 HEAP32[$23 >> 2] = (HEAP32[$23 >> 2] | 0) + 8; //@line 54488
 $26 = $c + 156 | 0; //@line 54489
 $27 = HEAP32[$26 >> 2] | 0; //@line 54490
 if (($27 & 1 | 0) != 0) {
  _e68_exception_address($c, $27, 0, 0); //@line 54495
  STACKTOP = sp; //@line 54497
  return;
 }
 $32 = $c + 164 | 0; //@line 54500
 HEAP16[$c + 162 >> 1] = HEAP16[$32 >> 1] | 0; //@line 54503
 $35 = $27 & 16777215; //@line 54504
 $36 = $35 + 1 | 0; //@line 54505
 if ($36 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $42 = HEAP32[$c + 32 >> 2] | 0; //@line 54512
  $_0_i_i = HEAPU8[$42 + $35 | 0] << 8 | HEAPU8[$42 + $36 | 0]; //@line 54522
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $35) | 0; //@line 54530
 }
 HEAP16[$32 >> 1] = $_0_i_i; //@line 54533
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$26 >> 2] = (HEAP32[$26 >> 2] | 0) + 2; //@line 54541
  $64 = $c + 152 | 0; //@line 54542
  HEAP32[$64 >> 2] = (HEAP32[$64 >> 2] | 0) + 2; //@line 54545
  HEAP32[$21 >> 2] = $22 - (($16 & 32768 | 0) != 0 ? $16 | -65536 : $16); //@line 54547
  STACKTOP = sp; //@line 54549
  return;
 } else {
  _e68_exception_bus($c); //@line 54552
  STACKTOP = sp; //@line 54554
  return;
 }
}
function _op9100($c) {
 $c = $c | 0;
 var $s1_i = 0, $s2_i = 0, $s2 = 0, $3 = 0, $7 = 0, $9 = 0, $ea1_0_i = 0, $ea2_0_i = 0, $32 = 0, $33 = 0, $39 = 0, $40 = 0, $43 = 0, $44 = 0, $49 = 0, $52 = 0, $53 = 0, $59 = 0, $_0_i_i_i = 0, $81 = 0, $89 = 0, $91 = 0, $100 = 0, $103 = 0, $104 = 0, $107 = 0, $108 = 0, $113 = 0, $116 = 0, $117 = 0, $123 = 0, $_0_i_i = 0, $145 = 0, sp = 0;
 sp = STACKTOP; //@line 54580
 STACKTOP = STACKTOP + 24 | 0; //@line 54580
 $s1_i = sp | 0; //@line 54581
 $s2_i = sp + 8 | 0; //@line 54582
 $s2 = sp + 16 | 0; //@line 54583
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 54586
 if (($3 & 48 | 0) != 0) {
  $89 = HEAP32[$c + 88 + (($3 >>> 9 & 7) << 2) >> 2] | 0; //@line 54594
  $91 = $3 & 63; //@line 54596
  if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($91 << 2) >> 2] & 127]($c, $91, 508, 8) | 0) != 0) {
   STACKTOP = sp; //@line 54603
   return;
  }
  if ((_e68_ea_get_val8($c, $s2) | 0) != 0) {
   STACKTOP = sp; //@line 54610
   return;
  }
  $100 = HEAP8[$s2] | 0; //@line 54613
  $103 = ($100 & 255) - $89 & 255; //@line 54616
  $104 = $c + 372 | 0; //@line 54617
  HEAP32[$104 >> 2] = (HEAP32[$104 >> 2] | 0) + 8; //@line 54620
  _e68_cc_set_sub_8($c, $103, $89 & 255, $100); //@line 54621
  $107 = $c + 156 | 0; //@line 54622
  $108 = HEAP32[$107 >> 2] | 0; //@line 54623
  if (($108 & 1 | 0) != 0) {
   _e68_exception_address($c, $108, 0, 0); //@line 54628
   STACKTOP = sp; //@line 54630
   return;
  }
  $113 = $c + 164 | 0; //@line 54633
  HEAP16[$c + 162 >> 1] = HEAP16[$113 >> 1] | 0; //@line 54636
  $116 = $108 & 16777215; //@line 54637
  $117 = $116 + 1 | 0; //@line 54638
  if ($117 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $123 = HEAP32[$c + 32 >> 2] | 0; //@line 54645
   $_0_i_i = HEAPU8[$123 + $116 | 0] << 8 | HEAPU8[$123 + $117 | 0]; //@line 54655
  } else {
   $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $116) | 0; //@line 54663
  }
  HEAP16[$113 >> 1] = $_0_i_i; //@line 54666
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$107 >> 2] = (HEAP32[$107 >> 2] | 0) + 2; //@line 54674
   $145 = $c + 152 | 0; //@line 54675
   HEAP32[$145 >> 2] = (HEAP32[$145 >> 2] | 0) + 2; //@line 54678
   _e68_ea_set_val8($c, $103) | 0; //@line 54679
   STACKTOP = sp; //@line 54681
   return;
  } else {
   _e68_exception_bus($c); //@line 54684
   STACKTOP = sp; //@line 54686
   return;
  }
 }
 $7 = $3 & 7; //@line 54690
 $9 = $3 >>> 9 & 7; //@line 54692
 if (($3 & 8 | 0) == 0) {
  $ea2_0_i = $9;
  $ea1_0_i = $7;
 } else {
  $ea2_0_i = $9 | 32;
  $ea1_0_i = $7 | 32;
 }
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($ea1_0_i << 2) >> 2] & 127]($c, $ea1_0_i, 17, 8) | 0) != 0) {
  STACKTOP = sp; //@line 54712
  return;
 }
 if ((_e68_ea_get_val8($c, $s1_i) | 0) != 0) {
  STACKTOP = sp; //@line 54719
  return;
 }
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($ea2_0_i << 2) >> 2] & 127]($c, $ea2_0_i, 17, 8) | 0) != 0) {
  STACKTOP = sp; //@line 54728
  return;
 }
 if ((_e68_ea_get_val8($c, $s2_i) | 0) != 0) {
  STACKTOP = sp; //@line 54735
  return;
 }
 $32 = HEAP8[$s2_i] | 0; //@line 54738
 $33 = HEAP8[$s1_i] | 0; //@line 54739
 $39 = ($32 - $33 & 255) - ((HEAPU16[$c + 166 >> 1] | 0) >>> 4 & 1) & 255; //@line 54746
 $40 = $c + 372 | 0; //@line 54747
 HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 8; //@line 54750
 _e68_cc_set_subx_8($c, $39, $33, $32); //@line 54751
 $43 = $c + 156 | 0; //@line 54752
 $44 = HEAP32[$43 >> 2] | 0; //@line 54753
 if (($44 & 1 | 0) != 0) {
  _e68_exception_address($c, $44, 0, 0); //@line 54758
  STACKTOP = sp; //@line 54760
  return;
 }
 $49 = $c + 164 | 0; //@line 54763
 HEAP16[$c + 162 >> 1] = HEAP16[$49 >> 1] | 0; //@line 54766
 $52 = $44 & 16777215; //@line 54767
 $53 = $52 + 1 | 0; //@line 54768
 if ($53 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $59 = HEAP32[$c + 32 >> 2] | 0; //@line 54775
  $_0_i_i_i = HEAPU8[$59 + $52 | 0] << 8 | HEAPU8[$59 + $53 | 0]; //@line 54785
 } else {
  $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $52) | 0; //@line 54793
 }
 HEAP16[$49 >> 1] = $_0_i_i_i; //@line 54796
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) + 2; //@line 54804
  $81 = $c + 152 | 0; //@line 54805
  HEAP32[$81 >> 2] = (HEAP32[$81 >> 2] | 0) + 2; //@line 54808
  _e68_ea_set_val8($c, $39) | 0; //@line 54809
  STACKTOP = sp; //@line 54811
  return;
 } else {
  _e68_exception_bus($c); //@line 54814
  STACKTOP = sp; //@line 54816
  return;
 }
}
function _op9140($c) {
 $c = $c | 0;
 var $s1_i = 0, $s2_i = 0, $s2 = 0, $3 = 0, $9 = 0, $11 = 0, $ea1_0_i = 0, $ea2_0_i = 0, $34 = 0, $35 = 0, $40 = 0, $41 = 0, $44 = 0, $45 = 0, $50 = 0, $53 = 0, $54 = 0, $60 = 0, $_0_i_i_i = 0, $82 = 0, $90 = 0, $92 = 0, $101 = 0, $104 = 0, $105 = 0, $108 = 0, $109 = 0, $114 = 0, $117 = 0, $118 = 0, $124 = 0, $_0_i_i = 0, $146 = 0, sp = 0;
 sp = STACKTOP; //@line 54842
 STACKTOP = STACKTOP + 24 | 0; //@line 54842
 $s1_i = sp | 0; //@line 54843
 $s2_i = sp + 8 | 0; //@line 54844
 $s2 = sp + 16 | 0; //@line 54845
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 54848
 if (($3 & 48 | 0) != 0) {
  $90 = HEAP32[$c + 88 + (($3 >>> 9 & 7) << 2) >> 2] | 0; //@line 54856
  $92 = $3 & 63; //@line 54858
  if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($92 << 2) >> 2] & 127]($c, $92, 508, 16) | 0) != 0) {
   STACKTOP = sp; //@line 54865
   return;
  }
  if ((_e68_ea_get_val16($c, $s2) | 0) != 0) {
   STACKTOP = sp; //@line 54872
   return;
  }
  $101 = HEAP16[$s2 >> 1] | 0; //@line 54875
  $104 = ($101 & 65535) - $90 & 65535; //@line 54878
  $105 = $c + 372 | 0; //@line 54879
  HEAP32[$105 >> 2] = (HEAP32[$105 >> 2] | 0) + 8; //@line 54882
  _e68_cc_set_sub_16($c, $104, $90 & 65535, $101); //@line 54883
  $108 = $c + 156 | 0; //@line 54884
  $109 = HEAP32[$108 >> 2] | 0; //@line 54885
  if (($109 & 1 | 0) != 0) {
   _e68_exception_address($c, $109, 0, 0); //@line 54890
   STACKTOP = sp; //@line 54892
   return;
  }
  $114 = $c + 164 | 0; //@line 54895
  HEAP16[$c + 162 >> 1] = HEAP16[$114 >> 1] | 0; //@line 54898
  $117 = $109 & 16777215; //@line 54899
  $118 = $117 + 1 | 0; //@line 54900
  if ($118 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $124 = HEAP32[$c + 32 >> 2] | 0; //@line 54907
   $_0_i_i = HEAPU8[$124 + $117 | 0] << 8 | HEAPU8[$124 + $118 | 0]; //@line 54917
  } else {
   $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $117) | 0; //@line 54925
  }
  HEAP16[$114 >> 1] = $_0_i_i; //@line 54928
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$108 >> 2] = (HEAP32[$108 >> 2] | 0) + 2; //@line 54936
   $146 = $c + 152 | 0; //@line 54937
   HEAP32[$146 >> 2] = (HEAP32[$146 >> 2] | 0) + 2; //@line 54940
   _e68_ea_set_val16($c, $104) | 0; //@line 54941
   STACKTOP = sp; //@line 54943
   return;
  } else {
   _e68_exception_bus($c); //@line 54946
   STACKTOP = sp; //@line 54948
   return;
  }
 }
 $9 = $3 & 7; //@line 54954
 $11 = $3 >>> 9 & 7; //@line 54956
 if (($3 & 8 | 0) == 0) {
  $ea2_0_i = $11;
  $ea1_0_i = $9;
 } else {
  $ea2_0_i = $11 | 32;
  $ea1_0_i = $9 | 32;
 }
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($ea1_0_i << 2) >> 2] & 127]($c, $ea1_0_i, 17, 16) | 0) != 0) {
  STACKTOP = sp; //@line 54976
  return;
 }
 if ((_e68_ea_get_val16($c, $s1_i) | 0) != 0) {
  STACKTOP = sp; //@line 54983
  return;
 }
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($ea2_0_i << 2) >> 2] & 127]($c, $ea2_0_i, 17, 16) | 0) != 0) {
  STACKTOP = sp; //@line 54992
  return;
 }
 if ((_e68_ea_get_val16($c, $s2_i) | 0) != 0) {
  STACKTOP = sp; //@line 54999
  return;
 }
 $34 = HEAP16[$s2_i >> 1] | 0; //@line 55002
 $35 = HEAP16[$s1_i >> 1] | 0; //@line 55003
 $40 = ($34 - $35 & 65535) - ((HEAPU16[$c + 166 >> 1] | 0) >>> 4 & 1) & 65535; //@line 55009
 $41 = $c + 372 | 0; //@line 55010
 HEAP32[$41 >> 2] = (HEAP32[$41 >> 2] | 0) + 8; //@line 55013
 _e68_cc_set_subx_16($c, $40, $35, $34); //@line 55014
 $44 = $c + 156 | 0; //@line 55015
 $45 = HEAP32[$44 >> 2] | 0; //@line 55016
 if (($45 & 1 | 0) != 0) {
  _e68_exception_address($c, $45, 0, 0); //@line 55021
  STACKTOP = sp; //@line 55023
  return;
 }
 $50 = $c + 164 | 0; //@line 55026
 HEAP16[$c + 162 >> 1] = HEAP16[$50 >> 1] | 0; //@line 55029
 $53 = $45 & 16777215; //@line 55030
 $54 = $53 + 1 | 0; //@line 55031
 if ($54 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $60 = HEAP32[$c + 32 >> 2] | 0; //@line 55038
  $_0_i_i_i = HEAPU8[$60 + $53 | 0] << 8 | HEAPU8[$60 + $54 | 0]; //@line 55048
 } else {
  $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $53) | 0; //@line 55056
 }
 HEAP16[$50 >> 1] = $_0_i_i_i; //@line 55059
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$44 >> 2] = (HEAP32[$44 >> 2] | 0) + 2; //@line 55067
  $82 = $c + 152 | 0; //@line 55068
  HEAP32[$82 >> 2] = (HEAP32[$82 >> 2] | 0) + 2; //@line 55071
  _e68_ea_set_val16($c, $40) | 0; //@line 55072
  STACKTOP = sp; //@line 55074
  return;
 } else {
  _e68_exception_bus($c); //@line 55077
  STACKTOP = sp; //@line 55079
  return;
 }
}
function _op9180($c) {
 $c = $c | 0;
 var $s1_i = 0, $s2_i = 0, $s2 = 0, $3 = 0, $9 = 0, $11 = 0, $ea1_0_i = 0, $ea2_0_i = 0, $34 = 0, $35 = 0, $41 = 0, $42 = 0, $45 = 0, $46 = 0, $51 = 0, $54 = 0, $55 = 0, $61 = 0, $_0_i_i_i = 0, $83 = 0, $91 = 0, $92 = 0, $101 = 0, $102 = 0, $103 = 0, $106 = 0, $107 = 0, $112 = 0, $115 = 0, $116 = 0, $122 = 0, $_0_i_i = 0, $144 = 0, sp = 0;
 sp = STACKTOP; //@line 55105
 STACKTOP = STACKTOP + 24 | 0; //@line 55105
 $s1_i = sp | 0; //@line 55106
 $s2_i = sp + 8 | 0; //@line 55107
 $s2 = sp + 16 | 0; //@line 55108
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 55111
 if (($3 & 48 | 0) != 0) {
  $91 = HEAP32[$c + 88 + (($3 >>> 9 & 7) << 2) >> 2] | 0; //@line 55119
  $92 = $3 & 63; //@line 55120
  if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($92 << 2) >> 2] & 127]($c, $92, 508, 32) | 0) != 0) {
   STACKTOP = sp; //@line 55127
   return;
  }
  if ((_e68_ea_get_val32($c, $s2) | 0) != 0) {
   STACKTOP = sp; //@line 55134
   return;
  }
  $101 = HEAP32[$s2 >> 2] | 0; //@line 55137
  $102 = $101 - $91 | 0; //@line 55138
  $103 = $c + 372 | 0; //@line 55139
  HEAP32[$103 >> 2] = (HEAP32[$103 >> 2] | 0) + 12; //@line 55142
  _e68_cc_set_sub_32($c, $102, $91, $101); //@line 55143
  $106 = $c + 156 | 0; //@line 55144
  $107 = HEAP32[$106 >> 2] | 0; //@line 55145
  if (($107 & 1 | 0) != 0) {
   _e68_exception_address($c, $107, 0, 0); //@line 55150
   STACKTOP = sp; //@line 55152
   return;
  }
  $112 = $c + 164 | 0; //@line 55155
  HEAP16[$c + 162 >> 1] = HEAP16[$112 >> 1] | 0; //@line 55158
  $115 = $107 & 16777215; //@line 55159
  $116 = $115 + 1 | 0; //@line 55160
  if ($116 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $122 = HEAP32[$c + 32 >> 2] | 0; //@line 55167
   $_0_i_i = HEAPU8[$122 + $115 | 0] << 8 | HEAPU8[$122 + $116 | 0]; //@line 55177
  } else {
   $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $115) | 0; //@line 55185
  }
  HEAP16[$112 >> 1] = $_0_i_i; //@line 55188
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$106 >> 2] = (HEAP32[$106 >> 2] | 0) + 2; //@line 55196
   $144 = $c + 152 | 0; //@line 55197
   HEAP32[$144 >> 2] = (HEAP32[$144 >> 2] | 0) + 2; //@line 55200
   _e68_ea_set_val32($c, $102) | 0; //@line 55201
   STACKTOP = sp; //@line 55203
   return;
  } else {
   _e68_exception_bus($c); //@line 55206
   STACKTOP = sp; //@line 55208
   return;
  }
 }
 $9 = $3 & 7; //@line 55214
 $11 = $3 >>> 9 & 7; //@line 55216
 if (($3 & 8 | 0) == 0) {
  $ea2_0_i = $11;
  $ea1_0_i = $9;
 } else {
  $ea2_0_i = $11 | 32;
  $ea1_0_i = $9 | 32;
 }
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($ea1_0_i << 2) >> 2] & 127]($c, $ea1_0_i, 17, 32) | 0) != 0) {
  STACKTOP = sp; //@line 55236
  return;
 }
 if ((_e68_ea_get_val32($c, $s1_i) | 0) != 0) {
  STACKTOP = sp; //@line 55243
  return;
 }
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($ea2_0_i << 2) >> 2] & 127]($c, $ea2_0_i, 17, 32) | 0) != 0) {
  STACKTOP = sp; //@line 55252
  return;
 }
 if ((_e68_ea_get_val32($c, $s2_i) | 0) != 0) {
  STACKTOP = sp; //@line 55259
  return;
 }
 $34 = HEAP32[$s2_i >> 2] | 0; //@line 55262
 $35 = HEAP32[$s1_i >> 2] | 0; //@line 55263
 $41 = $34 - $35 - ((HEAPU16[$c + 166 >> 1] | 0) >>> 4 & 1) | 0; //@line 55270
 $42 = $c + 372 | 0; //@line 55271
 HEAP32[$42 >> 2] = (HEAP32[$42 >> 2] | 0) + 12; //@line 55274
 _e68_cc_set_subx_32($c, $41, $35, $34); //@line 55275
 $45 = $c + 156 | 0; //@line 55276
 $46 = HEAP32[$45 >> 2] | 0; //@line 55277
 if (($46 & 1 | 0) != 0) {
  _e68_exception_address($c, $46, 0, 0); //@line 55282
  STACKTOP = sp; //@line 55284
  return;
 }
 $51 = $c + 164 | 0; //@line 55287
 HEAP16[$c + 162 >> 1] = HEAP16[$51 >> 1] | 0; //@line 55290
 $54 = $46 & 16777215; //@line 55291
 $55 = $54 + 1 | 0; //@line 55292
 if ($55 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $61 = HEAP32[$c + 32 >> 2] | 0; //@line 55299
  $_0_i_i_i = HEAPU8[$61 + $54 | 0] << 8 | HEAPU8[$61 + $55 | 0]; //@line 55309
 } else {
  $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $54) | 0; //@line 55317
 }
 HEAP16[$51 >> 1] = $_0_i_i_i; //@line 55320
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$45 >> 2] = (HEAP32[$45 >> 2] | 0) + 2; //@line 55328
  $83 = $c + 152 | 0; //@line 55329
  HEAP32[$83 >> 2] = (HEAP32[$83 >> 2] | 0) + 2; //@line 55332
  _e68_ea_set_val32($c, $41) | 0; //@line 55333
  STACKTOP = sp; //@line 55335
  return;
 } else {
  _e68_exception_bus($c); //@line 55338
  STACKTOP = sp; //@line 55340
  return;
 }
}
function _op91c0($c) {
 $c = $c | 0;
 var $s1 = 0, $3 = 0, $6 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $21 = 0, $22 = 0, $27 = 0, $30 = 0, $31 = 0, $37 = 0, $_0_i_i = 0, $59 = 0, sp = 0;
 sp = STACKTOP; //@line 55356
 STACKTOP = STACKTOP + 8 | 0; //@line 55356
 $s1 = sp | 0; //@line 55357
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 55360
 $6 = $3 & 63; //@line 55363
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($6 << 2) >> 2] & 127]($c, $6, 4095, 32) | 0) != 0) {
  STACKTOP = sp; //@line 55370
  return;
 }
 if ((_e68_ea_get_val32($c, $s1) | 0) != 0) {
  STACKTOP = sp; //@line 55377
  return;
 }
 $15 = $c + 120 + (($3 >>> 9 & 7) << 2) | 0; //@line 55380
 $16 = HEAP32[$15 >> 2] | 0; //@line 55381
 $17 = HEAP32[$s1 >> 2] | 0; //@line 55382
 $18 = $c + 372 | 0; //@line 55383
 HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 10; //@line 55386
 $21 = $c + 156 | 0; //@line 55387
 $22 = HEAP32[$21 >> 2] | 0; //@line 55388
 if (($22 & 1 | 0) != 0) {
  _e68_exception_address($c, $22, 0, 0); //@line 55393
  STACKTOP = sp; //@line 55395
  return;
 }
 $27 = $c + 164 | 0; //@line 55398
 HEAP16[$c + 162 >> 1] = HEAP16[$27 >> 1] | 0; //@line 55401
 $30 = $22 & 16777215; //@line 55402
 $31 = $30 + 1 | 0; //@line 55403
 if ($31 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $37 = HEAP32[$c + 32 >> 2] | 0; //@line 55410
  $_0_i_i = HEAPU8[$37 + $30 | 0] << 8 | HEAPU8[$37 + $31 | 0]; //@line 55420
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $30) | 0; //@line 55428
 }
 HEAP16[$27 >> 1] = $_0_i_i; //@line 55431
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$21 >> 2] = (HEAP32[$21 >> 2] | 0) + 2; //@line 55439
  $59 = $c + 152 | 0; //@line 55440
  HEAP32[$59 >> 2] = (HEAP32[$59 >> 2] | 0) + 2; //@line 55443
  HEAP32[$15 >> 2] = $16 - $17; //@line 55445
  STACKTOP = sp; //@line 55447
  return;
 } else {
  _e68_exception_bus($c); //@line 55450
  STACKTOP = sp; //@line 55452
  return;
 }
}
function _opa000($c) {
 $c = $c | 0;
 HEAP16[$c + 328 >> 1] = HEAP16[$c + 160 >> 1] | 0; //@line 55466
 _e68_exception_axxx($c); //@line 55467
 return;
}
function _opb000($c) {
 $c = $c | 0;
 var $s1 = 0, $1 = 0, $4 = 0, $18 = 0, $20 = 0, $23 = 0, $27 = 0, $28 = 0, $33 = 0, $36 = 0, $37 = 0, $43 = 0, $_0_i_i = 0, $65 = 0, sp = 0;
 sp = STACKTOP; //@line 55484
 STACKTOP = STACKTOP + 8 | 0; //@line 55484
 $s1 = sp | 0; //@line 55485
 $1 = $c + 160 | 0; //@line 55486
 $4 = HEAP16[$1 >> 1] & 63; //@line 55489
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 4093, 8) | 0) != 0) {
  STACKTOP = sp; //@line 55496
  return;
 }
 if ((_e68_ea_get_val8($c, $s1) | 0) != 0) {
  STACKTOP = sp; //@line 55503
  return;
 }
 $18 = HEAP32[$c + 88 + (((HEAPU16[$1 >> 1] | 0) >>> 9 & 7) << 2) >> 2] | 0; //@line 55511
 $20 = $c + 372 | 0; //@line 55513
 HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 4; //@line 55516
 $23 = HEAP8[$s1] | 0; //@line 55517
 _e68_cc_set_cmp_8($c, $18 - ($23 & 255) & 255, $23, $18 & 255); //@line 55521
 $27 = $c + 156 | 0; //@line 55522
 $28 = HEAP32[$27 >> 2] | 0; //@line 55523
 if (($28 & 1 | 0) != 0) {
  _e68_exception_address($c, $28, 0, 0); //@line 55528
  STACKTOP = sp; //@line 55530
  return;
 }
 $33 = $c + 164 | 0; //@line 55533
 HEAP16[$c + 162 >> 1] = HEAP16[$33 >> 1] | 0; //@line 55536
 $36 = $28 & 16777215; //@line 55537
 $37 = $36 + 1 | 0; //@line 55538
 if ($37 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $43 = HEAP32[$c + 32 >> 2] | 0; //@line 55545
  $_0_i_i = HEAPU8[$43 + $36 | 0] << 8 | HEAPU8[$43 + $37 | 0]; //@line 55555
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $36) | 0; //@line 55563
 }
 HEAP16[$33 >> 1] = $_0_i_i; //@line 55566
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$27 >> 2] = (HEAP32[$27 >> 2] | 0) + 2; //@line 55574
  $65 = $c + 152 | 0; //@line 55575
  HEAP32[$65 >> 2] = (HEAP32[$65 >> 2] | 0) + 2; //@line 55578
  STACKTOP = sp; //@line 55580
  return;
 } else {
  _e68_exception_bus($c); //@line 55583
  STACKTOP = sp; //@line 55585
  return;
 }
}
function _opb040($c) {
 $c = $c | 0;
 var $s1 = 0, $1 = 0, $4 = 0, $18 = 0, $20 = 0, $23 = 0, $27 = 0, $28 = 0, $33 = 0, $36 = 0, $37 = 0, $43 = 0, $_0_i_i = 0, $65 = 0, sp = 0;
 sp = STACKTOP; //@line 55602
 STACKTOP = STACKTOP + 8 | 0; //@line 55602
 $s1 = sp | 0; //@line 55603
 $1 = $c + 160 | 0; //@line 55604
 $4 = HEAP16[$1 >> 1] & 63; //@line 55607
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 4095, 16) | 0) != 0) {
  STACKTOP = sp; //@line 55614
  return;
 }
 if ((_e68_ea_get_val16($c, $s1) | 0) != 0) {
  STACKTOP = sp; //@line 55621
  return;
 }
 $18 = HEAP32[$c + 88 + (((HEAPU16[$1 >> 1] | 0) >>> 9 & 7) << 2) >> 2] | 0; //@line 55629
 $20 = $c + 372 | 0; //@line 55631
 HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 4; //@line 55634
 $23 = HEAP16[$s1 >> 1] | 0; //@line 55635
 _e68_cc_set_cmp_16($c, $18 - ($23 & 65535) & 65535, $23, $18 & 65535); //@line 55639
 $27 = $c + 156 | 0; //@line 55640
 $28 = HEAP32[$27 >> 2] | 0; //@line 55641
 if (($28 & 1 | 0) != 0) {
  _e68_exception_address($c, $28, 0, 0); //@line 55646
  STACKTOP = sp; //@line 55648
  return;
 }
 $33 = $c + 164 | 0; //@line 55651
 HEAP16[$c + 162 >> 1] = HEAP16[$33 >> 1] | 0; //@line 55654
 $36 = $28 & 16777215; //@line 55655
 $37 = $36 + 1 | 0; //@line 55656
 if ($37 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $43 = HEAP32[$c + 32 >> 2] | 0; //@line 55663
  $_0_i_i = HEAPU8[$43 + $36 | 0] << 8 | HEAPU8[$43 + $37 | 0]; //@line 55673
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $36) | 0; //@line 55681
 }
 HEAP16[$33 >> 1] = $_0_i_i; //@line 55684
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$27 >> 2] = (HEAP32[$27 >> 2] | 0) + 2; //@line 55692
  $65 = $c + 152 | 0; //@line 55693
  HEAP32[$65 >> 2] = (HEAP32[$65 >> 2] | 0) + 2; //@line 55696
  STACKTOP = sp; //@line 55698
  return;
 } else {
  _e68_exception_bus($c); //@line 55701
  STACKTOP = sp; //@line 55703
  return;
 }
}
function _opb080($c) {
 $c = $c | 0;
 var $s1 = 0, $1 = 0, $4 = 0, $18 = 0, $19 = 0, $22 = 0, $24 = 0, $25 = 0, $30 = 0, $33 = 0, $34 = 0, $40 = 0, $_0_i_i = 0, $62 = 0, sp = 0;
 sp = STACKTOP; //@line 55720
 STACKTOP = STACKTOP + 8 | 0; //@line 55720
 $s1 = sp | 0; //@line 55721
 $1 = $c + 160 | 0; //@line 55722
 $4 = HEAP16[$1 >> 1] & 63; //@line 55725
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 4095, 32) | 0) != 0) {
  STACKTOP = sp; //@line 55732
  return;
 }
 if ((_e68_ea_get_val32($c, $s1) | 0) != 0) {
  STACKTOP = sp; //@line 55739
  return;
 }
 $18 = HEAP32[$c + 88 + (((HEAPU16[$1 >> 1] | 0) >>> 9 & 7) << 2) >> 2] | 0; //@line 55747
 $19 = $c + 372 | 0; //@line 55748
 HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 6; //@line 55751
 $22 = HEAP32[$s1 >> 2] | 0; //@line 55752
 _e68_cc_set_cmp_32($c, $18 - $22 | 0, $22, $18); //@line 55754
 $24 = $c + 156 | 0; //@line 55755
 $25 = HEAP32[$24 >> 2] | 0; //@line 55756
 if (($25 & 1 | 0) != 0) {
  _e68_exception_address($c, $25, 0, 0); //@line 55761
  STACKTOP = sp; //@line 55763
  return;
 }
 $30 = $c + 164 | 0; //@line 55766
 HEAP16[$c + 162 >> 1] = HEAP16[$30 >> 1] | 0; //@line 55769
 $33 = $25 & 16777215; //@line 55770
 $34 = $33 + 1 | 0; //@line 55771
 if ($34 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $40 = HEAP32[$c + 32 >> 2] | 0; //@line 55778
  $_0_i_i = HEAPU8[$40 + $33 | 0] << 8 | HEAPU8[$40 + $34 | 0]; //@line 55788
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $33) | 0; //@line 55796
 }
 HEAP16[$30 >> 1] = $_0_i_i; //@line 55799
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + 2; //@line 55807
  $62 = $c + 152 | 0; //@line 55808
  HEAP32[$62 >> 2] = (HEAP32[$62 >> 2] | 0) + 2; //@line 55811
  STACKTOP = sp; //@line 55813
  return;
 } else {
  _e68_exception_bus($c); //@line 55816
  STACKTOP = sp; //@line 55818
  return;
 }
}
function _opb0c0($c) {
 $c = $c | 0;
 var $t = 0, $1 = 0, $4 = 0, $14 = 0, $18 = 0, $24 = 0, $25 = 0, $29 = 0, $30 = 0, $35 = 0, $38 = 0, $39 = 0, $45 = 0, $_0_i_i = 0, $67 = 0, sp = 0;
 sp = STACKTOP; //@line 55835
 STACKTOP = STACKTOP + 8 | 0; //@line 55835
 $t = sp | 0; //@line 55836
 $1 = $c + 160 | 0; //@line 55837
 $4 = HEAP16[$1 >> 1] & 63; //@line 55840
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 4095, 16) | 0) != 0) {
  STACKTOP = sp; //@line 55847
  return;
 }
 if ((_e68_ea_get_val16($c, $t) | 0) != 0) {
  STACKTOP = sp; //@line 55854
  return;
 }
 $14 = HEAPU16[$t >> 1] | 0; //@line 55858
 $18 = ($14 & 32768 | 0) != 0 ? $14 | -65536 : $14; //@line 55862
 $24 = HEAP32[$c + 120 + (((HEAPU16[$1 >> 1] | 0) >>> 9 & 7) << 2) >> 2] | 0; //@line 55868
 $25 = $c + 372 | 0; //@line 55869
 HEAP32[$25 >> 2] = (HEAP32[$25 >> 2] | 0) + 8; //@line 55872
 _e68_cc_set_cmp_32($c, $24 - $18 | 0, $18, $24); //@line 55874
 $29 = $c + 156 | 0; //@line 55875
 $30 = HEAP32[$29 >> 2] | 0; //@line 55876
 if (($30 & 1 | 0) != 0) {
  _e68_exception_address($c, $30, 0, 0); //@line 55881
  STACKTOP = sp; //@line 55883
  return;
 }
 $35 = $c + 164 | 0; //@line 55886
 HEAP16[$c + 162 >> 1] = HEAP16[$35 >> 1] | 0; //@line 55889
 $38 = $30 & 16777215; //@line 55890
 $39 = $38 + 1 | 0; //@line 55891
 if ($39 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $45 = HEAP32[$c + 32 >> 2] | 0; //@line 55898
  $_0_i_i = HEAPU8[$45 + $38 | 0] << 8 | HEAPU8[$45 + $39 | 0]; //@line 55908
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $38) | 0; //@line 55916
 }
 HEAP16[$35 >> 1] = $_0_i_i; //@line 55919
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$29 >> 2] = (HEAP32[$29 >> 2] | 0) + 2; //@line 55927
  $67 = $c + 152 | 0; //@line 55928
  HEAP32[$67 >> 2] = (HEAP32[$67 >> 2] | 0) + 2; //@line 55931
  STACKTOP = sp; //@line 55933
  return;
 } else {
  _e68_exception_bus($c); //@line 55936
  STACKTOP = sp; //@line 55938
  return;
 }
}
function _opb100($c) {
 $c = $c | 0;
 var $s1_i = 0, $s2_i = 0, $s2 = 0, $1 = 0, $3 = 0, $8 = 0, $21 = 0, $30 = 0, $33 = 0, $34 = 0, $36 = 0, $37 = 0, $42 = 0, $45 = 0, $46 = 0, $52 = 0, $_0_i_i_i = 0, $74 = 0, $81 = 0, $82 = 0, $94 = 0, $95 = 0, $98 = 0, $99 = 0, $104 = 0, $107 = 0, $108 = 0, $114 = 0, $_0_i_i = 0, $136 = 0, sp = 0;
 sp = STACKTOP; //@line 55963
 STACKTOP = STACKTOP + 24 | 0; //@line 55963
 $s1_i = sp | 0; //@line 55964
 $s2_i = sp + 8 | 0; //@line 55965
 $s2 = sp + 16 | 0; //@line 55966
 $1 = $c + 160 | 0; //@line 55967
 $3 = HEAPU16[$1 >> 1] | 0; //@line 55969
 if (($3 & 56 | 0) != 8) {
  $81 = HEAP32[$c + 88 + (($3 >>> 9 & 7) << 2) >> 2] | 0; //@line 55977
  $82 = $3 & 63; //@line 55978
  if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($82 << 2) >> 2] & 127]($c, $82, 509, 8) | 0) != 0) {
   STACKTOP = sp; //@line 55985
   return;
  }
  if ((_e68_ea_get_val8($c, $s2) | 0) != 0) {
   STACKTOP = sp; //@line 55992
   return;
  }
  $94 = (HEAPU8[$s2] ^ $81) & 255; //@line 55998
  $95 = $c + 372 | 0; //@line 55999
  HEAP32[$95 >> 2] = (HEAP32[$95 >> 2] | 0) + 8; //@line 56002
  _e68_cc_set_nz_8($c, 15, $94); //@line 56003
  $98 = $c + 156 | 0; //@line 56004
  $99 = HEAP32[$98 >> 2] | 0; //@line 56005
  if (($99 & 1 | 0) != 0) {
   _e68_exception_address($c, $99, 0, 0); //@line 56010
   STACKTOP = sp; //@line 56012
   return;
  }
  $104 = $c + 164 | 0; //@line 56015
  HEAP16[$c + 162 >> 1] = HEAP16[$104 >> 1] | 0; //@line 56018
  $107 = $99 & 16777215; //@line 56019
  $108 = $107 + 1 | 0; //@line 56020
  if ($108 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $114 = HEAP32[$c + 32 >> 2] | 0; //@line 56027
   $_0_i_i = HEAPU8[$114 + $107 | 0] << 8 | HEAPU8[$114 + $108 | 0]; //@line 56037
  } else {
   $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $107) | 0; //@line 56045
  }
  HEAP16[$104 >> 1] = $_0_i_i; //@line 56048
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$98 >> 2] = (HEAP32[$98 >> 2] | 0) + 2; //@line 56056
   $136 = $c + 152 | 0; //@line 56057
   HEAP32[$136 >> 2] = (HEAP32[$136 >> 2] | 0) + 2; //@line 56060
   _e68_ea_set_val8($c, $94) | 0; //@line 56061
   STACKTOP = sp; //@line 56063
   return;
  } else {
   _e68_exception_bus($c); //@line 56066
   STACKTOP = sp; //@line 56068
   return;
  }
 }
 $8 = $3 & 7 | 24; //@line 56073
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($8 << 2) >> 2] & 127]($c, $8, 8, 8) | 0) != 0) {
  STACKTOP = sp; //@line 56080
  return;
 }
 if ((_e68_ea_get_val8($c, $s1_i) | 0) != 0) {
  STACKTOP = sp; //@line 56087
  return;
 }
 $21 = (HEAPU16[$1 >> 1] | 0) >>> 9 & 7 | 24; //@line 56094
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($21 << 2) >> 2] & 127]($c, $21, 8, 8) | 0) != 0) {
  STACKTOP = sp; //@line 56101
  return;
 }
 if ((_e68_ea_get_val8($c, $s2_i) | 0) != 0) {
  STACKTOP = sp; //@line 56108
  return;
 }
 $30 = $c + 372 | 0; //@line 56111
 HEAP32[$30 >> 2] = (HEAP32[$30 >> 2] | 0) + 16; //@line 56114
 $33 = HEAP8[$s2_i] | 0; //@line 56115
 $34 = HEAP8[$s1_i] | 0; //@line 56116
 _e68_cc_set_cmp_8($c, $33 - $34 & 255, $34, $33); //@line 56118
 $36 = $c + 156 | 0; //@line 56119
 $37 = HEAP32[$36 >> 2] | 0; //@line 56120
 if (($37 & 1 | 0) != 0) {
  _e68_exception_address($c, $37, 0, 0); //@line 56125
  STACKTOP = sp; //@line 56127
  return;
 }
 $42 = $c + 164 | 0; //@line 56130
 HEAP16[$c + 162 >> 1] = HEAP16[$42 >> 1] | 0; //@line 56133
 $45 = $37 & 16777215; //@line 56134
 $46 = $45 + 1 | 0; //@line 56135
 if ($46 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $52 = HEAP32[$c + 32 >> 2] | 0; //@line 56142
  $_0_i_i_i = HEAPU8[$52 + $45 | 0] << 8 | HEAPU8[$52 + $46 | 0]; //@line 56152
 } else {
  $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $45) | 0; //@line 56160
 }
 HEAP16[$42 >> 1] = $_0_i_i_i; //@line 56163
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$36 >> 2] = (HEAP32[$36 >> 2] | 0) + 2; //@line 56171
  $74 = $c + 152 | 0; //@line 56172
  HEAP32[$74 >> 2] = (HEAP32[$74 >> 2] | 0) + 2; //@line 56175
  STACKTOP = sp; //@line 56177
  return;
 } else {
  _e68_exception_bus($c); //@line 56180
  STACKTOP = sp; //@line 56182
  return;
 }
}
function _opb140($c) {
 $c = $c | 0;
 var $s1_i = 0, $s2_i = 0, $s2 = 0, $1 = 0, $3 = 0, $10 = 0, $23 = 0, $32 = 0, $35 = 0, $36 = 0, $38 = 0, $39 = 0, $44 = 0, $47 = 0, $48 = 0, $54 = 0, $_0_i_i_i = 0, $76 = 0, $83 = 0, $84 = 0, $96 = 0, $97 = 0, $100 = 0, $101 = 0, $106 = 0, $109 = 0, $110 = 0, $116 = 0, $_0_i_i = 0, $138 = 0, sp = 0;
 sp = STACKTOP; //@line 56207
 STACKTOP = STACKTOP + 24 | 0; //@line 56207
 $s1_i = sp | 0; //@line 56208
 $s2_i = sp + 8 | 0; //@line 56209
 $s2 = sp + 16 | 0; //@line 56210
 $1 = $c + 160 | 0; //@line 56211
 $3 = HEAPU16[$1 >> 1] | 0; //@line 56213
 if (($3 & 56 | 0) != 8) {
  $83 = HEAP32[$c + 88 + (($3 >>> 9 & 7) << 2) >> 2] | 0; //@line 56221
  $84 = $3 & 63; //@line 56222
  if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($84 << 2) >> 2] & 127]($c, $84, 509, 16) | 0) != 0) {
   STACKTOP = sp; //@line 56229
   return;
  }
  if ((_e68_ea_get_val16($c, $s2) | 0) != 0) {
   STACKTOP = sp; //@line 56236
   return;
  }
  $96 = (HEAPU16[$s2 >> 1] ^ $83) & 65535; //@line 56242
  $97 = $c + 372 | 0; //@line 56243
  HEAP32[$97 >> 2] = (HEAP32[$97 >> 2] | 0) + 8; //@line 56246
  _e68_cc_set_nz_16($c, 15, $96); //@line 56247
  $100 = $c + 156 | 0; //@line 56248
  $101 = HEAP32[$100 >> 2] | 0; //@line 56249
  if (($101 & 1 | 0) != 0) {
   _e68_exception_address($c, $101, 0, 0); //@line 56254
   STACKTOP = sp; //@line 56256
   return;
  }
  $106 = $c + 164 | 0; //@line 56259
  HEAP16[$c + 162 >> 1] = HEAP16[$106 >> 1] | 0; //@line 56262
  $109 = $101 & 16777215; //@line 56263
  $110 = $109 + 1 | 0; //@line 56264
  if ($110 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $116 = HEAP32[$c + 32 >> 2] | 0; //@line 56271
   $_0_i_i = HEAPU8[$116 + $109 | 0] << 8 | HEAPU8[$116 + $110 | 0]; //@line 56281
  } else {
   $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $109) | 0; //@line 56289
  }
  HEAP16[$106 >> 1] = $_0_i_i; //@line 56292
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$100 >> 2] = (HEAP32[$100 >> 2] | 0) + 2; //@line 56300
   $138 = $c + 152 | 0; //@line 56301
   HEAP32[$138 >> 2] = (HEAP32[$138 >> 2] | 0) + 2; //@line 56304
   _e68_ea_set_val16($c, $96) | 0; //@line 56305
   STACKTOP = sp; //@line 56307
   return;
  } else {
   _e68_exception_bus($c); //@line 56310
   STACKTOP = sp; //@line 56312
   return;
  }
 }
 $10 = $3 & 7 | 24; //@line 56319
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($10 << 2) >> 2] & 127]($c, $10, 8, 16) | 0) != 0) {
  STACKTOP = sp; //@line 56326
  return;
 }
 if ((_e68_ea_get_val16($c, $s1_i) | 0) != 0) {
  STACKTOP = sp; //@line 56333
  return;
 }
 $23 = (HEAPU16[$1 >> 1] | 0) >>> 9 & 7 | 24; //@line 56340
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($23 << 2) >> 2] & 127]($c, $23, 8, 16) | 0) != 0) {
  STACKTOP = sp; //@line 56347
  return;
 }
 if ((_e68_ea_get_val16($c, $s2_i) | 0) != 0) {
  STACKTOP = sp; //@line 56354
  return;
 }
 $32 = $c + 372 | 0; //@line 56357
 HEAP32[$32 >> 2] = (HEAP32[$32 >> 2] | 0) + 12; //@line 56360
 $35 = HEAP16[$s2_i >> 1] | 0; //@line 56361
 $36 = HEAP16[$s1_i >> 1] | 0; //@line 56362
 _e68_cc_set_cmp_16($c, $35 - $36 & 65535, $36, $35); //@line 56364
 $38 = $c + 156 | 0; //@line 56365
 $39 = HEAP32[$38 >> 2] | 0; //@line 56366
 if (($39 & 1 | 0) != 0) {
  _e68_exception_address($c, $39, 0, 0); //@line 56371
  STACKTOP = sp; //@line 56373
  return;
 }
 $44 = $c + 164 | 0; //@line 56376
 HEAP16[$c + 162 >> 1] = HEAP16[$44 >> 1] | 0; //@line 56379
 $47 = $39 & 16777215; //@line 56380
 $48 = $47 + 1 | 0; //@line 56381
 if ($48 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $54 = HEAP32[$c + 32 >> 2] | 0; //@line 56388
  $_0_i_i_i = HEAPU8[$54 + $47 | 0] << 8 | HEAPU8[$54 + $48 | 0]; //@line 56398
 } else {
  $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $47) | 0; //@line 56406
 }
 HEAP16[$44 >> 1] = $_0_i_i_i; //@line 56409
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$38 >> 2] = (HEAP32[$38 >> 2] | 0) + 2; //@line 56417
  $76 = $c + 152 | 0; //@line 56418
  HEAP32[$76 >> 2] = (HEAP32[$76 >> 2] | 0) + 2; //@line 56421
  STACKTOP = sp; //@line 56423
  return;
 } else {
  _e68_exception_bus($c); //@line 56426
  STACKTOP = sp; //@line 56428
  return;
 }
}
function _opb180($c) {
 $c = $c | 0;
 var $s1_i = 0, $s2_i = 0, $s2 = 0, $1 = 0, $3 = 0, $10 = 0, $23 = 0, $32 = 0, $35 = 0, $36 = 0, $38 = 0, $39 = 0, $44 = 0, $47 = 0, $48 = 0, $54 = 0, $_0_i_i_i = 0, $76 = 0, $83 = 0, $84 = 0, $94 = 0, $95 = 0, $98 = 0, $99 = 0, $104 = 0, $107 = 0, $108 = 0, $114 = 0, $_0_i_i = 0, $136 = 0, sp = 0;
 sp = STACKTOP; //@line 56453
 STACKTOP = STACKTOP + 24 | 0; //@line 56453
 $s1_i = sp | 0; //@line 56454
 $s2_i = sp + 8 | 0; //@line 56455
 $s2 = sp + 16 | 0; //@line 56456
 $1 = $c + 160 | 0; //@line 56457
 $3 = HEAPU16[$1 >> 1] | 0; //@line 56459
 if (($3 & 56 | 0) != 8) {
  $83 = HEAP32[$c + 88 + (($3 >>> 9 & 7) << 2) >> 2] | 0; //@line 56467
  $84 = $3 & 63; //@line 56468
  if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($84 << 2) >> 2] & 127]($c, $84, 509, 32) | 0) != 0) {
   STACKTOP = sp; //@line 56475
   return;
  }
  if ((_e68_ea_get_val32($c, $s2) | 0) != 0) {
   STACKTOP = sp; //@line 56482
   return;
  }
  $94 = HEAP32[$s2 >> 2] ^ $83; //@line 56486
  $95 = $c + 372 | 0; //@line 56487
  HEAP32[$95 >> 2] = (HEAP32[$95 >> 2] | 0) + 12; //@line 56490
  _e68_cc_set_nz_32($c, 15, $94); //@line 56491
  $98 = $c + 156 | 0; //@line 56492
  $99 = HEAP32[$98 >> 2] | 0; //@line 56493
  if (($99 & 1 | 0) != 0) {
   _e68_exception_address($c, $99, 0, 0); //@line 56498
   STACKTOP = sp; //@line 56500
   return;
  }
  $104 = $c + 164 | 0; //@line 56503
  HEAP16[$c + 162 >> 1] = HEAP16[$104 >> 1] | 0; //@line 56506
  $107 = $99 & 16777215; //@line 56507
  $108 = $107 + 1 | 0; //@line 56508
  if ($108 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $114 = HEAP32[$c + 32 >> 2] | 0; //@line 56515
   $_0_i_i = HEAPU8[$114 + $107 | 0] << 8 | HEAPU8[$114 + $108 | 0]; //@line 56525
  } else {
   $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $107) | 0; //@line 56533
  }
  HEAP16[$104 >> 1] = $_0_i_i; //@line 56536
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$98 >> 2] = (HEAP32[$98 >> 2] | 0) + 2; //@line 56544
   $136 = $c + 152 | 0; //@line 56545
   HEAP32[$136 >> 2] = (HEAP32[$136 >> 2] | 0) + 2; //@line 56548
   _e68_ea_set_val32($c, $94) | 0; //@line 56549
   STACKTOP = sp; //@line 56551
   return;
  } else {
   _e68_exception_bus($c); //@line 56554
   STACKTOP = sp; //@line 56556
   return;
  }
 }
 $10 = $3 & 7 | 24; //@line 56563
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($10 << 2) >> 2] & 127]($c, $10, 8, 32) | 0) != 0) {
  STACKTOP = sp; //@line 56570
  return;
 }
 if ((_e68_ea_get_val32($c, $s1_i) | 0) != 0) {
  STACKTOP = sp; //@line 56577
  return;
 }
 $23 = (HEAPU16[$1 >> 1] | 0) >>> 9 & 7 | 24; //@line 56584
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($23 << 2) >> 2] & 127]($c, $23, 8, 32) | 0) != 0) {
  STACKTOP = sp; //@line 56591
  return;
 }
 if ((_e68_ea_get_val32($c, $s2_i) | 0) != 0) {
  STACKTOP = sp; //@line 56598
  return;
 }
 $32 = $c + 372 | 0; //@line 56601
 HEAP32[$32 >> 2] = (HEAP32[$32 >> 2] | 0) + 20; //@line 56604
 $35 = HEAP32[$s2_i >> 2] | 0; //@line 56605
 $36 = HEAP32[$s1_i >> 2] | 0; //@line 56606
 _e68_cc_set_cmp_32($c, $35 - $36 | 0, $36, $35); //@line 56608
 $38 = $c + 156 | 0; //@line 56609
 $39 = HEAP32[$38 >> 2] | 0; //@line 56610
 if (($39 & 1 | 0) != 0) {
  _e68_exception_address($c, $39, 0, 0); //@line 56615
  STACKTOP = sp; //@line 56617
  return;
 }
 $44 = $c + 164 | 0; //@line 56620
 HEAP16[$c + 162 >> 1] = HEAP16[$44 >> 1] | 0; //@line 56623
 $47 = $39 & 16777215; //@line 56624
 $48 = $47 + 1 | 0; //@line 56625
 if ($48 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $54 = HEAP32[$c + 32 >> 2] | 0; //@line 56632
  $_0_i_i_i = HEAPU8[$54 + $47 | 0] << 8 | HEAPU8[$54 + $48 | 0]; //@line 56642
 } else {
  $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $47) | 0; //@line 56650
 }
 HEAP16[$44 >> 1] = $_0_i_i_i; //@line 56653
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$38 >> 2] = (HEAP32[$38 >> 2] | 0) + 2; //@line 56661
  $76 = $c + 152 | 0; //@line 56662
  HEAP32[$76 >> 2] = (HEAP32[$76 >> 2] | 0) + 2; //@line 56665
  STACKTOP = sp; //@line 56667
  return;
 } else {
  _e68_exception_bus($c); //@line 56670
  STACKTOP = sp; //@line 56672
  return;
 }
}
function _opb1c0($c) {
 $c = $c | 0;
 var $s1 = 0, $1 = 0, $4 = 0, $18 = 0, $19 = 0, $22 = 0, $24 = 0, $25 = 0, $30 = 0, $33 = 0, $34 = 0, $40 = 0, $_0_i_i = 0, $62 = 0, sp = 0;
 sp = STACKTOP; //@line 56689
 STACKTOP = STACKTOP + 8 | 0; //@line 56689
 $s1 = sp | 0; //@line 56690
 $1 = $c + 160 | 0; //@line 56691
 $4 = HEAP16[$1 >> 1] & 63; //@line 56694
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 4095, 32) | 0) != 0) {
  STACKTOP = sp; //@line 56701
  return;
 }
 if ((_e68_ea_get_val32($c, $s1) | 0) != 0) {
  STACKTOP = sp; //@line 56708
  return;
 }
 $18 = HEAP32[$c + 120 + (((HEAPU16[$1 >> 1] | 0) >>> 9 & 7) << 2) >> 2] | 0; //@line 56716
 $19 = $c + 372 | 0; //@line 56717
 HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 8; //@line 56720
 $22 = HEAP32[$s1 >> 2] | 0; //@line 56721
 _e68_cc_set_cmp_32($c, $18 - $22 | 0, $22, $18); //@line 56723
 $24 = $c + 156 | 0; //@line 56724
 $25 = HEAP32[$24 >> 2] | 0; //@line 56725
 if (($25 & 1 | 0) != 0) {
  _e68_exception_address($c, $25, 0, 0); //@line 56730
  STACKTOP = sp; //@line 56732
  return;
 }
 $30 = $c + 164 | 0; //@line 56735
 HEAP16[$c + 162 >> 1] = HEAP16[$30 >> 1] | 0; //@line 56738
 $33 = $25 & 16777215; //@line 56739
 $34 = $33 + 1 | 0; //@line 56740
 if ($34 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $40 = HEAP32[$c + 32 >> 2] | 0; //@line 56747
  $_0_i_i = HEAPU8[$40 + $33 | 0] << 8 | HEAPU8[$40 + $34 | 0]; //@line 56757
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $33) | 0; //@line 56765
 }
 HEAP16[$30 >> 1] = $_0_i_i; //@line 56768
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + 2; //@line 56776
  $62 = $c + 152 | 0; //@line 56777
  HEAP32[$62 >> 2] = (HEAP32[$62 >> 2] | 0) + 2; //@line 56780
  STACKTOP = sp; //@line 56782
  return;
 } else {
  _e68_exception_bus($c); //@line 56785
  STACKTOP = sp; //@line 56787
  return;
 }
}
function _opc000($c) {
 $c = $c | 0;
 var $s1 = 0, $3 = 0, $6 = 0, $15 = 0, $19 = 0, $21 = 0, $24 = 0, $25 = 0, $30 = 0, $33 = 0, $34 = 0, $40 = 0, $_0_i_i = 0, $62 = 0, sp = 0;
 sp = STACKTOP; //@line 56804
 STACKTOP = STACKTOP + 8 | 0; //@line 56804
 $s1 = sp | 0; //@line 56805
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 56808
 $6 = $3 & 63; //@line 56811
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($6 << 2) >> 2] & 127]($c, $6, 4093, 8) | 0) != 0) {
  STACKTOP = sp; //@line 56818
  return;
 }
 if ((_e68_ea_get_val8($c, $s1) | 0) != 0) {
  STACKTOP = sp; //@line 56825
  return;
 }
 $15 = $c + 88 + (($3 >>> 9 & 7) << 2) | 0; //@line 56828
 $19 = HEAPU8[$s1] & HEAP32[$15 >> 2]; //@line 56832
 $21 = $c + 372 | 0; //@line 56834
 HEAP32[$21 >> 2] = (HEAP32[$21 >> 2] | 0) + 4; //@line 56837
 _e68_cc_set_nz_8($c, 15, $19 & 255); //@line 56838
 $24 = $c + 156 | 0; //@line 56839
 $25 = HEAP32[$24 >> 2] | 0; //@line 56840
 if (($25 & 1 | 0) != 0) {
  _e68_exception_address($c, $25, 0, 0); //@line 56845
  STACKTOP = sp; //@line 56847
  return;
 }
 $30 = $c + 164 | 0; //@line 56850
 HEAP16[$c + 162 >> 1] = HEAP16[$30 >> 1] | 0; //@line 56853
 $33 = $25 & 16777215; //@line 56854
 $34 = $33 + 1 | 0; //@line 56855
 if ($34 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $40 = HEAP32[$c + 32 >> 2] | 0; //@line 56862
  $_0_i_i = HEAPU8[$40 + $33 | 0] << 8 | HEAPU8[$40 + $34 | 0]; //@line 56872
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $33) | 0; //@line 56880
 }
 HEAP16[$30 >> 1] = $_0_i_i; //@line 56883
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + 2; //@line 56891
  $62 = $c + 152 | 0; //@line 56892
  HEAP32[$62 >> 2] = (HEAP32[$62 >> 2] | 0) + 2; //@line 56895
  HEAP32[$15 >> 2] = HEAP32[$15 >> 2] & -256 | $19; //@line 56899
  STACKTOP = sp; //@line 56901
  return;
 } else {
  _e68_exception_bus($c); //@line 56904
  STACKTOP = sp; //@line 56906
  return;
 }
}
function _opc040($c) {
 $c = $c | 0;
 var $s1 = 0, $3 = 0, $6 = 0, $15 = 0, $19 = 0, $21 = 0, $24 = 0, $25 = 0, $30 = 0, $33 = 0, $34 = 0, $40 = 0, $_0_i_i = 0, $62 = 0, sp = 0;
 sp = STACKTOP; //@line 56923
 STACKTOP = STACKTOP + 8 | 0; //@line 56923
 $s1 = sp | 0; //@line 56924
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 56927
 $6 = $3 & 63; //@line 56930
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($6 << 2) >> 2] & 127]($c, $6, 4093, 16) | 0) != 0) {
  STACKTOP = sp; //@line 56937
  return;
 }
 if ((_e68_ea_get_val16($c, $s1) | 0) != 0) {
  STACKTOP = sp; //@line 56944
  return;
 }
 $15 = $c + 88 + (($3 >>> 9 & 7) << 2) | 0; //@line 56947
 $19 = HEAPU16[$s1 >> 1] & HEAP32[$15 >> 2]; //@line 56951
 $21 = $c + 372 | 0; //@line 56953
 HEAP32[$21 >> 2] = (HEAP32[$21 >> 2] | 0) + 4; //@line 56956
 _e68_cc_set_nz_16($c, 15, $19 & 65535); //@line 56957
 $24 = $c + 156 | 0; //@line 56958
 $25 = HEAP32[$24 >> 2] | 0; //@line 56959
 if (($25 & 1 | 0) != 0) {
  _e68_exception_address($c, $25, 0, 0); //@line 56964
  STACKTOP = sp; //@line 56966
  return;
 }
 $30 = $c + 164 | 0; //@line 56969
 HEAP16[$c + 162 >> 1] = HEAP16[$30 >> 1] | 0; //@line 56972
 $33 = $25 & 16777215; //@line 56973
 $34 = $33 + 1 | 0; //@line 56974
 if ($34 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $40 = HEAP32[$c + 32 >> 2] | 0; //@line 56981
  $_0_i_i = HEAPU8[$40 + $33 | 0] << 8 | HEAPU8[$40 + $34 | 0]; //@line 56991
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $33) | 0; //@line 56999
 }
 HEAP16[$30 >> 1] = $_0_i_i; //@line 57002
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + 2; //@line 57010
  $62 = $c + 152 | 0; //@line 57011
  HEAP32[$62 >> 2] = (HEAP32[$62 >> 2] | 0) + 2; //@line 57014
  HEAP32[$15 >> 2] = HEAP32[$15 >> 2] & -65536 | $19; //@line 57018
  STACKTOP = sp; //@line 57020
  return;
 } else {
  _e68_exception_bus($c); //@line 57023
  STACKTOP = sp; //@line 57025
  return;
 }
}
function _opc080($c) {
 $c = $c | 0;
 var $s1 = 0, $3 = 0, $6 = 0, $15 = 0, $18 = 0, $19 = 0, $22 = 0, $23 = 0, $28 = 0, $31 = 0, $32 = 0, $38 = 0, $_0_i_i = 0, $60 = 0, sp = 0;
 sp = STACKTOP; //@line 57041
 STACKTOP = STACKTOP + 8 | 0; //@line 57041
 $s1 = sp | 0; //@line 57042
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 57045
 $6 = $3 & 63; //@line 57048
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($6 << 2) >> 2] & 127]($c, $6, 4093, 32) | 0) != 0) {
  STACKTOP = sp; //@line 57055
  return;
 }
 if ((_e68_ea_get_val32($c, $s1) | 0) != 0) {
  STACKTOP = sp; //@line 57062
  return;
 }
 $15 = $c + 88 + (($3 >>> 9 & 7) << 2) | 0; //@line 57065
 $18 = HEAP32[$s1 >> 2] & HEAP32[$15 >> 2]; //@line 57068
 $19 = $c + 372 | 0; //@line 57069
 HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 6; //@line 57072
 _e68_cc_set_nz_32($c, 15, $18); //@line 57073
 $22 = $c + 156 | 0; //@line 57074
 $23 = HEAP32[$22 >> 2] | 0; //@line 57075
 if (($23 & 1 | 0) != 0) {
  _e68_exception_address($c, $23, 0, 0); //@line 57080
  STACKTOP = sp; //@line 57082
  return;
 }
 $28 = $c + 164 | 0; //@line 57085
 HEAP16[$c + 162 >> 1] = HEAP16[$28 >> 1] | 0; //@line 57088
 $31 = $23 & 16777215; //@line 57089
 $32 = $31 + 1 | 0; //@line 57090
 if ($32 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $38 = HEAP32[$c + 32 >> 2] | 0; //@line 57097
  $_0_i_i = HEAPU8[$38 + $31 | 0] << 8 | HEAPU8[$38 + $32 | 0]; //@line 57107
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $31) | 0; //@line 57115
 }
 HEAP16[$28 >> 1] = $_0_i_i; //@line 57118
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + 2; //@line 57126
  $60 = $c + 152 | 0; //@line 57127
  HEAP32[$60 >> 2] = (HEAP32[$60 >> 2] | 0) + 2; //@line 57130
  HEAP32[$15 >> 2] = $18; //@line 57131
  STACKTOP = sp; //@line 57133
  return;
 } else {
  _e68_exception_bus($c); //@line 57136
  STACKTOP = sp; //@line 57138
  return;
 }
}
function _opc0c0($c) {
 $c = $c | 0;
 var $s1 = 0, $3 = 0, $6 = 0, $15 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $30 = 0, $33 = 0, $34 = 0, $40 = 0, $_0_i_i = 0, $62 = 0, sp = 0;
 sp = STACKTOP; //@line 57155
 STACKTOP = STACKTOP + 8 | 0; //@line 57155
 $s1 = sp | 0; //@line 57156
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 57159
 $6 = $3 & 63; //@line 57162
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($6 << 2) >> 2] & 127]($c, $6, 4093, 16) | 0) != 0) {
  STACKTOP = sp; //@line 57169
  return;
 }
 if ((_e68_ea_get_val16($c, $s1) | 0) != 0) {
  STACKTOP = sp; //@line 57176
  return;
 }
 $15 = $c + 88 + (($3 >>> 9 & 7) << 2) | 0; //@line 57179
 $20 = Math_imul(HEAPU16[$s1 >> 1] | 0, HEAP32[$15 >> 2] & 65535) | 0; //@line 57184
 $21 = $c + 372 | 0; //@line 57185
 HEAP32[$21 >> 2] = (HEAP32[$21 >> 2] | 0) + 74; //@line 57188
 _e68_cc_set_nz_32($c, 15, $20); //@line 57189
 $24 = $c + 156 | 0; //@line 57190
 $25 = HEAP32[$24 >> 2] | 0; //@line 57191
 if (($25 & 1 | 0) != 0) {
  _e68_exception_address($c, $25, 0, 0); //@line 57196
  STACKTOP = sp; //@line 57198
  return;
 }
 $30 = $c + 164 | 0; //@line 57201
 HEAP16[$c + 162 >> 1] = HEAP16[$30 >> 1] | 0; //@line 57204
 $33 = $25 & 16777215; //@line 57205
 $34 = $33 + 1 | 0; //@line 57206
 if ($34 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $40 = HEAP32[$c + 32 >> 2] | 0; //@line 57213
  $_0_i_i = HEAPU8[$40 + $33 | 0] << 8 | HEAPU8[$40 + $34 | 0]; //@line 57223
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $33) | 0; //@line 57231
 }
 HEAP16[$30 >> 1] = $_0_i_i; //@line 57234
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + 2; //@line 57242
  $62 = $c + 152 | 0; //@line 57243
  HEAP32[$62 >> 2] = (HEAP32[$62 >> 2] | 0) + 2; //@line 57246
  HEAP32[$15 >> 2] = $20; //@line 57247
  STACKTOP = sp; //@line 57249
  return;
 } else {
  _e68_exception_bus($c); //@line 57252
  STACKTOP = sp; //@line 57254
  return;
 }
}
function _opc100($c) {
 $c = $c | 0;
 var $s1_i = 0, $s2_i = 0, $s2 = 0, $3 = 0, $7 = 0, $9 = 0, $ea1_0_i = 0, $ea2_0_i = 0, $32 = 0, $34 = 0, $37 = 0, $38 = 0, $40 = 0, $d_0_i = 0, $storemerge_i = 0, $d_1_i = 0, $58 = 0, $61 = 0, $62 = 0, $67 = 0, $70 = 0, $71 = 0, $77 = 0, $_0_i_i_i = 0, $99 = 0, $102 = 0, $108 = 0, $109 = 0, $121 = 0, $122 = 0, $125 = 0, $126 = 0, $131 = 0, $134 = 0, $135 = 0, $141 = 0, $_0_i_i = 0, $163 = 0, sp = 0;
 sp = STACKTOP; //@line 57283
 STACKTOP = STACKTOP + 24 | 0; //@line 57283
 $s1_i = sp | 0; //@line 57284
 $s2_i = sp + 8 | 0; //@line 57285
 $s2 = sp + 16 | 0; //@line 57286
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 57289
 if (($3 & 48 | 0) != 0) {
  $108 = HEAP32[$c + 88 + (($3 >>> 9 & 7) << 2) >> 2] | 0; //@line 57297
  $109 = $3 & 63; //@line 57298
  if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($109 << 2) >> 2] & 127]($c, $109, 508, 8) | 0) != 0) {
   STACKTOP = sp; //@line 57305
   return;
  }
  if ((_e68_ea_get_val8($c, $s2) | 0) != 0) {
   STACKTOP = sp; //@line 57312
   return;
  }
  $121 = HEAPU8[$s2] & $108 & 255; //@line 57318
  $122 = $c + 372 | 0; //@line 57319
  HEAP32[$122 >> 2] = (HEAP32[$122 >> 2] | 0) + 4; //@line 57322
  _e68_cc_set_nz_8($c, 15, $121); //@line 57323
  $125 = $c + 156 | 0; //@line 57324
  $126 = HEAP32[$125 >> 2] | 0; //@line 57325
  if (($126 & 1 | 0) != 0) {
   _e68_exception_address($c, $126, 0, 0); //@line 57330
   STACKTOP = sp; //@line 57332
   return;
  }
  $131 = $c + 164 | 0; //@line 57335
  HEAP16[$c + 162 >> 1] = HEAP16[$131 >> 1] | 0; //@line 57338
  $134 = $126 & 16777215; //@line 57339
  $135 = $134 + 1 | 0; //@line 57340
  if ($135 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $141 = HEAP32[$c + 32 >> 2] | 0; //@line 57347
   $_0_i_i = HEAPU8[$141 + $134 | 0] << 8 | HEAPU8[$141 + $135 | 0]; //@line 57357
  } else {
   $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $134) | 0; //@line 57365
  }
  HEAP16[$131 >> 1] = $_0_i_i; //@line 57368
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$125 >> 2] = (HEAP32[$125 >> 2] | 0) + 2; //@line 57376
   $163 = $c + 152 | 0; //@line 57377
   HEAP32[$163 >> 2] = (HEAP32[$163 >> 2] | 0) + 2; //@line 57380
   _e68_ea_set_val8($c, $121) | 0; //@line 57381
   STACKTOP = sp; //@line 57383
   return;
  } else {
   _e68_exception_bus($c); //@line 57386
   STACKTOP = sp; //@line 57388
   return;
  }
 }
 $7 = $3 & 7; //@line 57392
 $9 = $3 >>> 9 & 7; //@line 57394
 if (($3 & 8 | 0) == 0) {
  $ea2_0_i = $9;
  $ea1_0_i = $7;
 } else {
  $ea2_0_i = $9 | 32;
  $ea1_0_i = $7 | 32;
 }
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($ea1_0_i << 2) >> 2] & 127]($c, $ea1_0_i, 17, 8) | 0) != 0) {
  STACKTOP = sp; //@line 57414
  return;
 }
 if ((_e68_ea_get_val8($c, $s1_i) | 0) != 0) {
  STACKTOP = sp; //@line 57421
  return;
 }
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($ea2_0_i << 2) >> 2] & 127]($c, $ea2_0_i, 17, 8) | 0) != 0) {
  STACKTOP = sp; //@line 57430
  return;
 }
 if ((_e68_ea_get_val8($c, $s2_i) | 0) != 0) {
  STACKTOP = sp; //@line 57437
  return;
 }
 $32 = HEAP8[$s1_i] | 0; //@line 57440
 $34 = HEAP8[$s2_i] | 0; //@line 57442
 $37 = $c + 166 | 0; //@line 57445
 $38 = HEAP16[$37 >> 1] | 0; //@line 57446
 $40 = (($34 & 255) + ($32 & 255) & 65535) + (($38 & 65535) >>> 4 & 1) & 65535; //@line 57449
 $d_0_i = (($34 & 15) + ($32 & 15) | 0) > 9 ? $40 + 6 & 65535 : $40; //@line 57457
 if (($d_0_i & 65535) > 159) {
  $d_1_i = $d_0_i + 96 & 65535;
  $storemerge_i = $38 | 17;
 } else {
  $d_1_i = $d_0_i;
  $storemerge_i = $38 & -18;
 }
 HEAP16[$37 >> 1] = ($d_1_i & 255) == 0 ? $storemerge_i : $storemerge_i & -5; //@line 57475
 $58 = $c + 372 | 0; //@line 57476
 HEAP32[$58 >> 2] = (HEAP32[$58 >> 2] | 0) + 6; //@line 57479
 $61 = $c + 156 | 0; //@line 57480
 $62 = HEAP32[$61 >> 2] | 0; //@line 57481
 if (($62 & 1 | 0) != 0) {
  _e68_exception_address($c, $62, 0, 0); //@line 57486
  STACKTOP = sp; //@line 57488
  return;
 }
 $67 = $c + 164 | 0; //@line 57491
 HEAP16[$c + 162 >> 1] = HEAP16[$67 >> 1] | 0; //@line 57494
 $70 = $62 & 16777215; //@line 57495
 $71 = $70 + 1 | 0; //@line 57496
 if ($71 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $77 = HEAP32[$c + 32 >> 2] | 0; //@line 57503
  $_0_i_i_i = HEAPU8[$77 + $70 | 0] << 8 | HEAPU8[$77 + $71 | 0]; //@line 57513
 } else {
  $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $70) | 0; //@line 57521
 }
 HEAP16[$67 >> 1] = $_0_i_i_i; //@line 57524
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$61 >> 2] = (HEAP32[$61 >> 2] | 0) + 2; //@line 57532
  $99 = $c + 152 | 0; //@line 57533
  HEAP32[$99 >> 2] = (HEAP32[$99 >> 2] | 0) + 2; //@line 57536
  $102 = $d_1_i & 255; //@line 57537
  _e68_ea_set_val8($c, $102) | 0; //@line 57538
  STACKTOP = sp; //@line 57540
  return;
 } else {
  _e68_exception_bus($c); //@line 57543
  STACKTOP = sp; //@line 57545
  return;
 }
}
function _opc140($c) {
 $c = $c | 0;
 var $s2 = 0, $3 = 0, $5 = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $17 = 0, $18 = 0, $23 = 0, $26 = 0, $27 = 0, $33 = 0, $_0_i_i_i = 0, $55 = 0, $62 = 0, $63 = 0, $64 = 0, $66 = 0, $69 = 0, $70 = 0, $75 = 0, $78 = 0, $79 = 0, $85 = 0, $_0_i_i_i13 = 0, $107 = 0, $114 = 0, $115 = 0, $127 = 0, $128 = 0, $131 = 0, $132 = 0, $137 = 0, $140 = 0, $141 = 0, $147 = 0, $_0_i_i = 0, $169 = 0, sp = 0;
 sp = STACKTOP; //@line 57574
 STACKTOP = STACKTOP + 8 | 0; //@line 57574
 $s2 = sp | 0; //@line 57575
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 57578
 $5 = $3 >>> 3 & 7; //@line 57580
 if (($5 | 0) == 1) {
  $62 = $c + 120 + (($3 >>> 9 & 7) << 2) | 0; //@line 57585
  $63 = HEAP32[$62 >> 2] | 0; //@line 57586
  $64 = $c + 120 + (($3 & 7) << 2) | 0; //@line 57587
  HEAP32[$62 >> 2] = HEAP32[$64 >> 2]; //@line 57589
  HEAP32[$64 >> 2] = $63; //@line 57590
  $66 = $c + 372 | 0; //@line 57591
  HEAP32[$66 >> 2] = (HEAP32[$66 >> 2] | 0) + 10; //@line 57594
  $69 = $c + 156 | 0; //@line 57595
  $70 = HEAP32[$69 >> 2] | 0; //@line 57596
  if (($70 & 1 | 0) != 0) {
   _e68_exception_address($c, $70, 0, 0); //@line 57601
   STACKTOP = sp; //@line 57603
   return;
  }
  $75 = $c + 164 | 0; //@line 57606
  HEAP16[$c + 162 >> 1] = HEAP16[$75 >> 1] | 0; //@line 57609
  $78 = $70 & 16777215; //@line 57610
  $79 = $78 + 1 | 0; //@line 57611
  if ($79 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $85 = HEAP32[$c + 32 >> 2] | 0; //@line 57618
   $_0_i_i_i13 = HEAPU8[$85 + $78 | 0] << 8 | HEAPU8[$85 + $79 | 0]; //@line 57628
  } else {
   $_0_i_i_i13 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $78) | 0; //@line 57636
  }
  HEAP16[$75 >> 1] = $_0_i_i_i13; //@line 57639
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$69 >> 2] = (HEAP32[$69 >> 2] | 0) + 2; //@line 57647
   $107 = $c + 152 | 0; //@line 57648
   HEAP32[$107 >> 2] = (HEAP32[$107 >> 2] | 0) + 2; //@line 57651
   STACKTOP = sp; //@line 57653
   return;
  } else {
   _e68_exception_bus($c); //@line 57656
   STACKTOP = sp; //@line 57658
   return;
  }
 } else if (($5 | 0) == 0) {
  $10 = $c + 88 + (($3 >>> 9 & 7) << 2) | 0; //@line 57665
  $11 = HEAP32[$10 >> 2] | 0; //@line 57666
  $12 = $c + 88 + (($3 & 7) << 2) | 0; //@line 57667
  HEAP32[$10 >> 2] = HEAP32[$12 >> 2]; //@line 57669
  HEAP32[$12 >> 2] = $11; //@line 57670
  $14 = $c + 372 | 0; //@line 57671
  HEAP32[$14 >> 2] = (HEAP32[$14 >> 2] | 0) + 10; //@line 57674
  $17 = $c + 156 | 0; //@line 57675
  $18 = HEAP32[$17 >> 2] | 0; //@line 57676
  if (($18 & 1 | 0) != 0) {
   _e68_exception_address($c, $18, 0, 0); //@line 57681
   STACKTOP = sp; //@line 57683
   return;
  }
  $23 = $c + 164 | 0; //@line 57686
  HEAP16[$c + 162 >> 1] = HEAP16[$23 >> 1] | 0; //@line 57689
  $26 = $18 & 16777215; //@line 57690
  $27 = $26 + 1 | 0; //@line 57691
  if ($27 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $33 = HEAP32[$c + 32 >> 2] | 0; //@line 57698
   $_0_i_i_i = HEAPU8[$33 + $26 | 0] << 8 | HEAPU8[$33 + $27 | 0]; //@line 57708
  } else {
   $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $26) | 0; //@line 57716
  }
  HEAP16[$23 >> 1] = $_0_i_i_i; //@line 57719
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$17 >> 2] = (HEAP32[$17 >> 2] | 0) + 2; //@line 57727
   $55 = $c + 152 | 0; //@line 57728
   HEAP32[$55 >> 2] = (HEAP32[$55 >> 2] | 0) + 2; //@line 57731
   STACKTOP = sp; //@line 57733
   return;
  } else {
   _e68_exception_bus($c); //@line 57736
   STACKTOP = sp; //@line 57738
   return;
  }
 } else {
  $114 = HEAP32[$c + 88 + (($3 >>> 9 & 7) << 2) >> 2] | 0; //@line 57745
  $115 = $3 & 63; //@line 57746
  if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($115 << 2) >> 2] & 127]($c, $115, 508, 16) | 0) != 0) {
   STACKTOP = sp; //@line 57753
   return;
  }
  if ((_e68_ea_get_val16($c, $s2) | 0) != 0) {
   STACKTOP = sp; //@line 57760
   return;
  }
  $127 = HEAPU16[$s2 >> 1] & $114 & 65535; //@line 57766
  $128 = $c + 372 | 0; //@line 57767
  HEAP32[$128 >> 2] = (HEAP32[$128 >> 2] | 0) + 4; //@line 57770
  _e68_cc_set_nz_16($c, 15, $127); //@line 57771
  $131 = $c + 156 | 0; //@line 57772
  $132 = HEAP32[$131 >> 2] | 0; //@line 57773
  if (($132 & 1 | 0) != 0) {
   _e68_exception_address($c, $132, 0, 0); //@line 57778
   STACKTOP = sp; //@line 57780
   return;
  }
  $137 = $c + 164 | 0; //@line 57783
  HEAP16[$c + 162 >> 1] = HEAP16[$137 >> 1] | 0; //@line 57786
  $140 = $132 & 16777215; //@line 57787
  $141 = $140 + 1 | 0; //@line 57788
  if ($141 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $147 = HEAP32[$c + 32 >> 2] | 0; //@line 57795
   $_0_i_i = HEAPU8[$147 + $140 | 0] << 8 | HEAPU8[$147 + $141 | 0]; //@line 57805
  } else {
   $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $140) | 0; //@line 57813
  }
  HEAP16[$137 >> 1] = $_0_i_i; //@line 57816
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$131 >> 2] = (HEAP32[$131 >> 2] | 0) + 2; //@line 57824
   $169 = $c + 152 | 0; //@line 57825
   HEAP32[$169 >> 2] = (HEAP32[$169 >> 2] | 0) + 2; //@line 57828
   _e68_ea_set_val16($c, $127) | 0; //@line 57829
   STACKTOP = sp; //@line 57831
   return;
  } else {
   _e68_exception_bus($c); //@line 57834
   STACKTOP = sp; //@line 57836
   return;
  }
 }
}
function _opc180($c) {
 $c = $c | 0;
 var $s2 = 0, $3 = 0, $7 = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $17 = 0, $18 = 0, $23 = 0, $26 = 0, $27 = 0, $33 = 0, $_0_i_i_i = 0, $55 = 0, $60 = 0, $61 = 0, $71 = 0, $72 = 0, $75 = 0, $76 = 0, $81 = 0, $84 = 0, $85 = 0, $91 = 0, $_0_i_i = 0, $113 = 0, sp = 0;
 sp = STACKTOP; //@line 57859
 STACKTOP = STACKTOP + 8 | 0; //@line 57859
 $s2 = sp | 0; //@line 57860
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 57863
 $7 = $3 >>> 9 & 7; //@line 57867
 if (($3 & 56 | 0) == 8) {
  $10 = $c + 88 + ($7 << 2) | 0; //@line 57871
  $11 = HEAP32[$10 >> 2] | 0; //@line 57872
  $12 = $c + 120 + (($3 & 7) << 2) | 0; //@line 57873
  HEAP32[$10 >> 2] = HEAP32[$12 >> 2]; //@line 57875
  HEAP32[$12 >> 2] = $11; //@line 57876
  $14 = $c + 372 | 0; //@line 57877
  HEAP32[$14 >> 2] = (HEAP32[$14 >> 2] | 0) + 10; //@line 57880
  $17 = $c + 156 | 0; //@line 57881
  $18 = HEAP32[$17 >> 2] | 0; //@line 57882
  if (($18 & 1 | 0) != 0) {
   _e68_exception_address($c, $18, 0, 0); //@line 57887
   STACKTOP = sp; //@line 57889
   return;
  }
  $23 = $c + 164 | 0; //@line 57892
  HEAP16[$c + 162 >> 1] = HEAP16[$23 >> 1] | 0; //@line 57895
  $26 = $18 & 16777215; //@line 57896
  $27 = $26 + 1 | 0; //@line 57897
  if ($27 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $33 = HEAP32[$c + 32 >> 2] | 0; //@line 57904
   $_0_i_i_i = HEAPU8[$33 + $26 | 0] << 8 | HEAPU8[$33 + $27 | 0]; //@line 57914
  } else {
   $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $26) | 0; //@line 57922
  }
  HEAP16[$23 >> 1] = $_0_i_i_i; //@line 57925
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$17 >> 2] = (HEAP32[$17 >> 2] | 0) + 2; //@line 57933
   $55 = $c + 152 | 0; //@line 57934
   HEAP32[$55 >> 2] = (HEAP32[$55 >> 2] | 0) + 2; //@line 57937
   STACKTOP = sp; //@line 57939
   return;
  } else {
   _e68_exception_bus($c); //@line 57942
   STACKTOP = sp; //@line 57944
   return;
  }
 }
 $60 = HEAP32[$c + 88 + ($7 << 2) >> 2] | 0; //@line 57949
 $61 = $3 & 63; //@line 57950
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($61 << 2) >> 2] & 127]($c, $61, 508, 32) | 0) != 0) {
  STACKTOP = sp; //@line 57957
  return;
 }
 if ((_e68_ea_get_val32($c, $s2) | 0) != 0) {
  STACKTOP = sp; //@line 57964
  return;
 }
 $71 = HEAP32[$s2 >> 2] & $60; //@line 57968
 $72 = $c + 372 | 0; //@line 57969
 HEAP32[$72 >> 2] = (HEAP32[$72 >> 2] | 0) + 6; //@line 57972
 _e68_cc_set_nz_32($c, 15, $71); //@line 57973
 $75 = $c + 156 | 0; //@line 57974
 $76 = HEAP32[$75 >> 2] | 0; //@line 57975
 if (($76 & 1 | 0) != 0) {
  _e68_exception_address($c, $76, 0, 0); //@line 57980
  STACKTOP = sp; //@line 57982
  return;
 }
 $81 = $c + 164 | 0; //@line 57985
 HEAP16[$c + 162 >> 1] = HEAP16[$81 >> 1] | 0; //@line 57988
 $84 = $76 & 16777215; //@line 57989
 $85 = $84 + 1 | 0; //@line 57990
 if ($85 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $91 = HEAP32[$c + 32 >> 2] | 0; //@line 57997
  $_0_i_i = HEAPU8[$91 + $84 | 0] << 8 | HEAPU8[$91 + $85 | 0]; //@line 58007
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $84) | 0; //@line 58015
 }
 HEAP16[$81 >> 1] = $_0_i_i; //@line 58018
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$75 >> 2] = (HEAP32[$75 >> 2] | 0) + 2; //@line 58026
  $113 = $c + 152 | 0; //@line 58027
  HEAP32[$113 >> 2] = (HEAP32[$113 >> 2] | 0) + 2; //@line 58030
  _e68_ea_set_val32($c, $71) | 0; //@line 58031
  STACKTOP = sp; //@line 58033
  return;
 } else {
  _e68_exception_bus($c); //@line 58036
  STACKTOP = sp; //@line 58038
  return;
 }
}
function _opc1c0($c) {
 $c = $c | 0;
 var $s1 = 0, $3 = 0, $6 = 0, $15 = 0, $16 = 0, $18 = 0, $21 = 0, $23 = 0, $n1_0 = 0, $n2_0 = 0, $s2_0 = 0, $33 = 0, $d_0 = 0, $36 = 0, $39 = 0, $40 = 0, $45 = 0, $48 = 0, $49 = 0, $55 = 0, $_0_i_i = 0, $77 = 0, sp = 0;
 sp = STACKTOP; //@line 58057
 STACKTOP = STACKTOP + 8 | 0; //@line 58057
 $s1 = sp | 0; //@line 58058
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 58061
 $6 = $3 & 63; //@line 58064
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($6 << 2) >> 2] & 127]($c, $6, 4093, 16) | 0) != 0) {
  STACKTOP = sp; //@line 58071
  return;
 }
 if ((_e68_ea_get_val16($c, $s1) | 0) != 0) {
  STACKTOP = sp; //@line 58078
  return;
 }
 $15 = $c + 88 + (($3 >>> 9 & 7) << 2) | 0; //@line 58081
 $16 = HEAP32[$15 >> 2] | 0; //@line 58082
 $18 = HEAP16[$s1 >> 1] | 0; //@line 58084
 if ($18 << 16 >> 16 > -1) {
  $n1_0 = 0;
  $23 = $18;
 } else {
  $21 = -$18 & 65535; //@line 58090
  HEAP16[$s1 >> 1] = $21; //@line 58091
  $n1_0 = 1;
  $23 = $21;
 }
 if (($16 & 32768 | 0) == 0) {
  $s2_0 = $16 & 65535;
  $n2_0 = 0;
 } else {
  $s2_0 = ($16 ^ 65535) + 1 & 65535;
  $n2_0 = 1;
 }
 $33 = Math_imul($23 & 65535, $s2_0 & 65535) | 0; //@line 58113
 $d_0 = ($n1_0 | 0) == ($n2_0 | 0) ? $33 : -$33 | 0; //@line 58116
 $36 = $c + 372 | 0; //@line 58117
 HEAP32[$36 >> 2] = (HEAP32[$36 >> 2] | 0) + 74; //@line 58120
 _e68_cc_set_nz_32($c, 15, $d_0); //@line 58121
 $39 = $c + 156 | 0; //@line 58122
 $40 = HEAP32[$39 >> 2] | 0; //@line 58123
 if (($40 & 1 | 0) != 0) {
  _e68_exception_address($c, $40, 0, 0); //@line 58128
  STACKTOP = sp; //@line 58130
  return;
 }
 $45 = $c + 164 | 0; //@line 58133
 HEAP16[$c + 162 >> 1] = HEAP16[$45 >> 1] | 0; //@line 58136
 $48 = $40 & 16777215; //@line 58137
 $49 = $48 + 1 | 0; //@line 58138
 if ($49 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $55 = HEAP32[$c + 32 >> 2] | 0; //@line 58145
  $_0_i_i = HEAPU8[$55 + $48 | 0] << 8 | HEAPU8[$55 + $49 | 0]; //@line 58155
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $48) | 0; //@line 58163
 }
 HEAP16[$45 >> 1] = $_0_i_i; //@line 58166
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 2; //@line 58174
  $77 = $c + 152 | 0; //@line 58175
  HEAP32[$77 >> 2] = (HEAP32[$77 >> 2] | 0) + 2; //@line 58178
  HEAP32[$15 >> 2] = $d_0; //@line 58179
  STACKTOP = sp; //@line 58181
  return;
 } else {
  _e68_exception_bus($c); //@line 58184
  STACKTOP = sp; //@line 58186
  return;
 }
}
function _opd000($c) {
 $c = $c | 0;
 var $s1 = 0, $3 = 0, $6 = 0, $15 = 0, $16 = 0, $18 = 0, $20 = 0, $22 = 0, $25 = 0, $26 = 0, $31 = 0, $34 = 0, $35 = 0, $41 = 0, $_0_i_i = 0, $63 = 0, sp = 0;
 sp = STACKTOP; //@line 58203
 STACKTOP = STACKTOP + 8 | 0; //@line 58203
 $s1 = sp | 0; //@line 58204
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 58207
 $6 = $3 & 63; //@line 58210
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($6 << 2) >> 2] & 127]($c, $6, 4093, 8) | 0) != 0) {
  STACKTOP = sp; //@line 58217
  return;
 }
 if ((_e68_ea_get_val8($c, $s1) | 0) != 0) {
  STACKTOP = sp; //@line 58224
  return;
 }
 $15 = $c + 88 + (($3 >>> 9 & 7) << 2) | 0; //@line 58227
 $16 = HEAP32[$15 >> 2] | 0; //@line 58228
 $18 = HEAP8[$s1] | 0; //@line 58230
 $20 = ($18 & 255) + $16 | 0; //@line 58232
 $22 = $c + 372 | 0; //@line 58234
 HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + 4; //@line 58237
 _e68_cc_set_add_8($c, $20 & 255, $18, $16 & 255); //@line 58238
 $25 = $c + 156 | 0; //@line 58239
 $26 = HEAP32[$25 >> 2] | 0; //@line 58240
 if (($26 & 1 | 0) != 0) {
  _e68_exception_address($c, $26, 0, 0); //@line 58245
  STACKTOP = sp; //@line 58247
  return;
 }
 $31 = $c + 164 | 0; //@line 58250
 HEAP16[$c + 162 >> 1] = HEAP16[$31 >> 1] | 0; //@line 58253
 $34 = $26 & 16777215; //@line 58254
 $35 = $34 + 1 | 0; //@line 58255
 if ($35 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $41 = HEAP32[$c + 32 >> 2] | 0; //@line 58262
  $_0_i_i = HEAPU8[$41 + $34 | 0] << 8 | HEAPU8[$41 + $35 | 0]; //@line 58272
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $34) | 0; //@line 58280
 }
 HEAP16[$31 >> 1] = $_0_i_i; //@line 58283
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$25 >> 2] = (HEAP32[$25 >> 2] | 0) + 2; //@line 58291
  $63 = $c + 152 | 0; //@line 58292
  HEAP32[$63 >> 2] = (HEAP32[$63 >> 2] | 0) + 2; //@line 58295
  HEAP32[$15 >> 2] = HEAP32[$15 >> 2] & -256 | $20 & 255; //@line 58300
  STACKTOP = sp; //@line 58302
  return;
 } else {
  _e68_exception_bus($c); //@line 58305
  STACKTOP = sp; //@line 58307
  return;
 }
}
function _opd040($c) {
 $c = $c | 0;
 var $s1 = 0, $3 = 0, $6 = 0, $15 = 0, $16 = 0, $18 = 0, $20 = 0, $22 = 0, $25 = 0, $26 = 0, $31 = 0, $34 = 0, $35 = 0, $41 = 0, $_0_i_i = 0, $63 = 0, sp = 0;
 sp = STACKTOP; //@line 58324
 STACKTOP = STACKTOP + 8 | 0; //@line 58324
 $s1 = sp | 0; //@line 58325
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 58328
 $6 = $3 & 63; //@line 58331
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($6 << 2) >> 2] & 127]($c, $6, 4095, 16) | 0) != 0) {
  STACKTOP = sp; //@line 58338
  return;
 }
 if ((_e68_ea_get_val16($c, $s1) | 0) != 0) {
  STACKTOP = sp; //@line 58345
  return;
 }
 $15 = $c + 88 + (($3 >>> 9 & 7) << 2) | 0; //@line 58348
 $16 = HEAP32[$15 >> 2] | 0; //@line 58349
 $18 = HEAP16[$s1 >> 1] | 0; //@line 58351
 $20 = ($18 & 65535) + $16 | 0; //@line 58353
 $22 = $c + 372 | 0; //@line 58355
 HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + 4; //@line 58358
 _e68_cc_set_add_16($c, $20 & 65535, $18, $16 & 65535); //@line 58359
 $25 = $c + 156 | 0; //@line 58360
 $26 = HEAP32[$25 >> 2] | 0; //@line 58361
 if (($26 & 1 | 0) != 0) {
  _e68_exception_address($c, $26, 0, 0); //@line 58366
  STACKTOP = sp; //@line 58368
  return;
 }
 $31 = $c + 164 | 0; //@line 58371
 HEAP16[$c + 162 >> 1] = HEAP16[$31 >> 1] | 0; //@line 58374
 $34 = $26 & 16777215; //@line 58375
 $35 = $34 + 1 | 0; //@line 58376
 if ($35 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $41 = HEAP32[$c + 32 >> 2] | 0; //@line 58383
  $_0_i_i = HEAPU8[$41 + $34 | 0] << 8 | HEAPU8[$41 + $35 | 0]; //@line 58393
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $34) | 0; //@line 58401
 }
 HEAP16[$31 >> 1] = $_0_i_i; //@line 58404
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$25 >> 2] = (HEAP32[$25 >> 2] | 0) + 2; //@line 58412
  $63 = $c + 152 | 0; //@line 58413
  HEAP32[$63 >> 2] = (HEAP32[$63 >> 2] | 0) + 2; //@line 58416
  HEAP32[$15 >> 2] = HEAP32[$15 >> 2] & -65536 | $20 & 65535; //@line 58421
  STACKTOP = sp; //@line 58423
  return;
 } else {
  _e68_exception_bus($c); //@line 58426
  STACKTOP = sp; //@line 58428
  return;
 }
}
function _opd080($c) {
 $c = $c | 0;
 var $s1 = 0, $3 = 0, $6 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $23 = 0, $28 = 0, $31 = 0, $32 = 0, $38 = 0, $_0_i_i = 0, $60 = 0, sp = 0;
 sp = STACKTOP; //@line 58444
 STACKTOP = STACKTOP + 8 | 0; //@line 58444
 $s1 = sp | 0; //@line 58445
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 58448
 $6 = $3 & 63; //@line 58451
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($6 << 2) >> 2] & 127]($c, $6, 4095, 32) | 0) != 0) {
  STACKTOP = sp; //@line 58458
  return;
 }
 if ((_e68_ea_get_val32($c, $s1) | 0) != 0) {
  STACKTOP = sp; //@line 58465
  return;
 }
 $15 = $c + 88 + (($3 >>> 9 & 7) << 2) | 0; //@line 58468
 $16 = HEAP32[$15 >> 2] | 0; //@line 58469
 $17 = HEAP32[$s1 >> 2] | 0; //@line 58470
 $18 = $17 + $16 | 0; //@line 58471
 $19 = $c + 372 | 0; //@line 58472
 HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 6; //@line 58475
 _e68_cc_set_add_32($c, $18, $17, $16); //@line 58476
 $22 = $c + 156 | 0; //@line 58477
 $23 = HEAP32[$22 >> 2] | 0; //@line 58478
 if (($23 & 1 | 0) != 0) {
  _e68_exception_address($c, $23, 0, 0); //@line 58483
  STACKTOP = sp; //@line 58485
  return;
 }
 $28 = $c + 164 | 0; //@line 58488
 HEAP16[$c + 162 >> 1] = HEAP16[$28 >> 1] | 0; //@line 58491
 $31 = $23 & 16777215; //@line 58492
 $32 = $31 + 1 | 0; //@line 58493
 if ($32 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $38 = HEAP32[$c + 32 >> 2] | 0; //@line 58500
  $_0_i_i = HEAPU8[$38 + $31 | 0] << 8 | HEAPU8[$38 + $32 | 0]; //@line 58510
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $31) | 0; //@line 58518
 }
 HEAP16[$28 >> 1] = $_0_i_i; //@line 58521
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + 2; //@line 58529
  $60 = $c + 152 | 0; //@line 58530
  HEAP32[$60 >> 2] = (HEAP32[$60 >> 2] | 0) + 2; //@line 58533
  HEAP32[$15 >> 2] = $18; //@line 58534
  STACKTOP = sp; //@line 58536
  return;
 } else {
  _e68_exception_bus($c); //@line 58539
  STACKTOP = sp; //@line 58541
  return;
 }
}
function _opd0c0($c) {
 $c = $c | 0;
 var $t = 0, $3 = 0, $6 = 0, $16 = 0, $21 = 0, $22 = 0, $23 = 0, $26 = 0, $27 = 0, $32 = 0, $35 = 0, $36 = 0, $42 = 0, $_0_i_i = 0, $64 = 0, sp = 0;
 sp = STACKTOP; //@line 58558
 STACKTOP = STACKTOP + 8 | 0; //@line 58558
 $t = sp | 0; //@line 58559
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 58562
 $6 = $3 & 63; //@line 58565
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($6 << 2) >> 2] & 127]($c, $6, 4095, 16) | 0) != 0) {
  STACKTOP = sp; //@line 58572
  return;
 }
 if ((_e68_ea_get_val16($c, $t) | 0) != 0) {
  STACKTOP = sp; //@line 58579
  return;
 }
 $16 = HEAPU16[$t >> 1] | 0; //@line 58583
 $21 = $c + 120 + (($3 >>> 9 & 7) << 2) | 0; //@line 58588
 $22 = HEAP32[$21 >> 2] | 0; //@line 58589
 $23 = $c + 372 | 0; //@line 58590
 HEAP32[$23 >> 2] = (HEAP32[$23 >> 2] | 0) + 8; //@line 58593
 $26 = $c + 156 | 0; //@line 58594
 $27 = HEAP32[$26 >> 2] | 0; //@line 58595
 if (($27 & 1 | 0) != 0) {
  _e68_exception_address($c, $27, 0, 0); //@line 58600
  STACKTOP = sp; //@line 58602
  return;
 }
 $32 = $c + 164 | 0; //@line 58605
 HEAP16[$c + 162 >> 1] = HEAP16[$32 >> 1] | 0; //@line 58608
 $35 = $27 & 16777215; //@line 58609
 $36 = $35 + 1 | 0; //@line 58610
 if ($36 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $42 = HEAP32[$c + 32 >> 2] | 0; //@line 58617
  $_0_i_i = HEAPU8[$42 + $35 | 0] << 8 | HEAPU8[$42 + $36 | 0]; //@line 58627
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $35) | 0; //@line 58635
 }
 HEAP16[$32 >> 1] = $_0_i_i; //@line 58638
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$26 >> 2] = (HEAP32[$26 >> 2] | 0) + 2; //@line 58646
  $64 = $c + 152 | 0; //@line 58647
  HEAP32[$64 >> 2] = (HEAP32[$64 >> 2] | 0) + 2; //@line 58650
  HEAP32[$21 >> 2] = (($16 & 32768 | 0) != 0 ? $16 | -65536 : $16) + $22; //@line 58652
  STACKTOP = sp; //@line 58654
  return;
 } else {
  _e68_exception_bus($c); //@line 58657
  STACKTOP = sp; //@line 58659
  return;
 }
}
function _opd100($c) {
 $c = $c | 0;
 var $s1_i = 0, $s2_i = 0, $s2 = 0, $3 = 0, $7 = 0, $9 = 0, $ea1_0_i = 0, $ea2_0_i = 0, $32 = 0, $33 = 0, $39 = 0, $40 = 0, $43 = 0, $44 = 0, $49 = 0, $52 = 0, $53 = 0, $59 = 0, $_0_i_i_i = 0, $81 = 0, $89 = 0, $91 = 0, $100 = 0, $103 = 0, $104 = 0, $107 = 0, $108 = 0, $113 = 0, $116 = 0, $117 = 0, $123 = 0, $_0_i_i = 0, $145 = 0, sp = 0;
 sp = STACKTOP; //@line 58685
 STACKTOP = STACKTOP + 24 | 0; //@line 58685
 $s1_i = sp | 0; //@line 58686
 $s2_i = sp + 8 | 0; //@line 58687
 $s2 = sp + 16 | 0; //@line 58688
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 58691
 if (($3 & 48 | 0) != 0) {
  $89 = HEAP32[$c + 88 + (($3 >>> 9 & 7) << 2) >> 2] | 0; //@line 58699
  $91 = $3 & 63; //@line 58701
  if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($91 << 2) >> 2] & 127]($c, $91, 508, 8) | 0) != 0) {
   STACKTOP = sp; //@line 58708
   return;
  }
  if ((_e68_ea_get_val8($c, $s2) | 0) != 0) {
   STACKTOP = sp; //@line 58715
   return;
  }
  $100 = HEAP8[$s2] | 0; //@line 58718
  $103 = ($100 & 255) + $89 & 255; //@line 58721
  $104 = $c + 372 | 0; //@line 58722
  HEAP32[$104 >> 2] = (HEAP32[$104 >> 2] | 0) + 8; //@line 58725
  _e68_cc_set_add_8($c, $103, $89 & 255, $100); //@line 58726
  $107 = $c + 156 | 0; //@line 58727
  $108 = HEAP32[$107 >> 2] | 0; //@line 58728
  if (($108 & 1 | 0) != 0) {
   _e68_exception_address($c, $108, 0, 0); //@line 58733
   STACKTOP = sp; //@line 58735
   return;
  }
  $113 = $c + 164 | 0; //@line 58738
  HEAP16[$c + 162 >> 1] = HEAP16[$113 >> 1] | 0; //@line 58741
  $116 = $108 & 16777215; //@line 58742
  $117 = $116 + 1 | 0; //@line 58743
  if ($117 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $123 = HEAP32[$c + 32 >> 2] | 0; //@line 58750
   $_0_i_i = HEAPU8[$123 + $116 | 0] << 8 | HEAPU8[$123 + $117 | 0]; //@line 58760
  } else {
   $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $116) | 0; //@line 58768
  }
  HEAP16[$113 >> 1] = $_0_i_i; //@line 58771
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$107 >> 2] = (HEAP32[$107 >> 2] | 0) + 2; //@line 58779
   $145 = $c + 152 | 0; //@line 58780
   HEAP32[$145 >> 2] = (HEAP32[$145 >> 2] | 0) + 2; //@line 58783
   _e68_ea_set_val8($c, $103) | 0; //@line 58784
   STACKTOP = sp; //@line 58786
   return;
  } else {
   _e68_exception_bus($c); //@line 58789
   STACKTOP = sp; //@line 58791
   return;
  }
 }
 $7 = $3 & 7; //@line 58795
 $9 = $3 >>> 9 & 7; //@line 58797
 if (($3 & 8 | 0) == 0) {
  $ea2_0_i = $9;
  $ea1_0_i = $7;
 } else {
  $ea2_0_i = $9 | 32;
  $ea1_0_i = $7 | 32;
 }
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($ea1_0_i << 2) >> 2] & 127]($c, $ea1_0_i, 17, 8) | 0) != 0) {
  STACKTOP = sp; //@line 58817
  return;
 }
 if ((_e68_ea_get_val8($c, $s1_i) | 0) != 0) {
  STACKTOP = sp; //@line 58824
  return;
 }
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($ea2_0_i << 2) >> 2] & 127]($c, $ea2_0_i, 17, 8) | 0) != 0) {
  STACKTOP = sp; //@line 58833
  return;
 }
 if ((_e68_ea_get_val8($c, $s2_i) | 0) != 0) {
  STACKTOP = sp; //@line 58840
  return;
 }
 $32 = HEAP8[$s1_i] | 0; //@line 58843
 $33 = HEAP8[$s2_i] | 0; //@line 58844
 $39 = ($33 + $32 & 255) + ((HEAPU16[$c + 166 >> 1] | 0) >>> 4 & 1) & 255; //@line 58851
 $40 = $c + 372 | 0; //@line 58852
 HEAP32[$40 >> 2] = (HEAP32[$40 >> 2] | 0) + 8; //@line 58855
 _e68_cc_set_addx_8($c, $39, $32, $33); //@line 58856
 $43 = $c + 156 | 0; //@line 58857
 $44 = HEAP32[$43 >> 2] | 0; //@line 58858
 if (($44 & 1 | 0) != 0) {
  _e68_exception_address($c, $44, 0, 0); //@line 58863
  STACKTOP = sp; //@line 58865
  return;
 }
 $49 = $c + 164 | 0; //@line 58868
 HEAP16[$c + 162 >> 1] = HEAP16[$49 >> 1] | 0; //@line 58871
 $52 = $44 & 16777215; //@line 58872
 $53 = $52 + 1 | 0; //@line 58873
 if ($53 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $59 = HEAP32[$c + 32 >> 2] | 0; //@line 58880
  $_0_i_i_i = HEAPU8[$59 + $52 | 0] << 8 | HEAPU8[$59 + $53 | 0]; //@line 58890
 } else {
  $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $52) | 0; //@line 58898
 }
 HEAP16[$49 >> 1] = $_0_i_i_i; //@line 58901
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) + 2; //@line 58909
  $81 = $c + 152 | 0; //@line 58910
  HEAP32[$81 >> 2] = (HEAP32[$81 >> 2] | 0) + 2; //@line 58913
  _e68_ea_set_val8($c, $39) | 0; //@line 58914
  STACKTOP = sp; //@line 58916
  return;
 } else {
  _e68_exception_bus($c); //@line 58919
  STACKTOP = sp; //@line 58921
  return;
 }
}
function _opd140($c) {
 $c = $c | 0;
 var $s1_i = 0, $s2_i = 0, $s2 = 0, $3 = 0, $9 = 0, $11 = 0, $ea1_0_i = 0, $ea2_0_i = 0, $34 = 0, $35 = 0, $40 = 0, $41 = 0, $44 = 0, $45 = 0, $50 = 0, $53 = 0, $54 = 0, $60 = 0, $_0_i_i_i = 0, $82 = 0, $90 = 0, $92 = 0, $101 = 0, $104 = 0, $105 = 0, $108 = 0, $109 = 0, $114 = 0, $117 = 0, $118 = 0, $124 = 0, $_0_i_i = 0, $146 = 0, sp = 0;
 sp = STACKTOP; //@line 58947
 STACKTOP = STACKTOP + 24 | 0; //@line 58947
 $s1_i = sp | 0; //@line 58948
 $s2_i = sp + 8 | 0; //@line 58949
 $s2 = sp + 16 | 0; //@line 58950
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 58953
 if (($3 & 48 | 0) != 0) {
  $90 = HEAP32[$c + 88 + (($3 >>> 9 & 7) << 2) >> 2] | 0; //@line 58961
  $92 = $3 & 63; //@line 58963
  if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($92 << 2) >> 2] & 127]($c, $92, 508, 16) | 0) != 0) {
   STACKTOP = sp; //@line 58970
   return;
  }
  if ((_e68_ea_get_val16($c, $s2) | 0) != 0) {
   STACKTOP = sp; //@line 58977
   return;
  }
  $101 = HEAP16[$s2 >> 1] | 0; //@line 58980
  $104 = ($101 & 65535) + $90 & 65535; //@line 58983
  $105 = $c + 372 | 0; //@line 58984
  HEAP32[$105 >> 2] = (HEAP32[$105 >> 2] | 0) + 8; //@line 58987
  _e68_cc_set_add_16($c, $104, $90 & 65535, $101); //@line 58988
  $108 = $c + 156 | 0; //@line 58989
  $109 = HEAP32[$108 >> 2] | 0; //@line 58990
  if (($109 & 1 | 0) != 0) {
   _e68_exception_address($c, $109, 0, 0); //@line 58995
   STACKTOP = sp; //@line 58997
   return;
  }
  $114 = $c + 164 | 0; //@line 59000
  HEAP16[$c + 162 >> 1] = HEAP16[$114 >> 1] | 0; //@line 59003
  $117 = $109 & 16777215; //@line 59004
  $118 = $117 + 1 | 0; //@line 59005
  if ($118 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $124 = HEAP32[$c + 32 >> 2] | 0; //@line 59012
   $_0_i_i = HEAPU8[$124 + $117 | 0] << 8 | HEAPU8[$124 + $118 | 0]; //@line 59022
  } else {
   $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $117) | 0; //@line 59030
  }
  HEAP16[$114 >> 1] = $_0_i_i; //@line 59033
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$108 >> 2] = (HEAP32[$108 >> 2] | 0) + 2; //@line 59041
   $146 = $c + 152 | 0; //@line 59042
   HEAP32[$146 >> 2] = (HEAP32[$146 >> 2] | 0) + 2; //@line 59045
   _e68_ea_set_val16($c, $104) | 0; //@line 59046
   STACKTOP = sp; //@line 59048
   return;
  } else {
   _e68_exception_bus($c); //@line 59051
   STACKTOP = sp; //@line 59053
   return;
  }
 }
 $9 = $3 & 7; //@line 59059
 $11 = $3 >>> 9 & 7; //@line 59061
 if (($3 & 8 | 0) == 0) {
  $ea2_0_i = $11;
  $ea1_0_i = $9;
 } else {
  $ea2_0_i = $11 | 32;
  $ea1_0_i = $9 | 32;
 }
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($ea1_0_i << 2) >> 2] & 127]($c, $ea1_0_i, 17, 16) | 0) != 0) {
  STACKTOP = sp; //@line 59081
  return;
 }
 if ((_e68_ea_get_val16($c, $s1_i) | 0) != 0) {
  STACKTOP = sp; //@line 59088
  return;
 }
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($ea2_0_i << 2) >> 2] & 127]($c, $ea2_0_i, 17, 16) | 0) != 0) {
  STACKTOP = sp; //@line 59097
  return;
 }
 if ((_e68_ea_get_val16($c, $s2_i) | 0) != 0) {
  STACKTOP = sp; //@line 59104
  return;
 }
 $34 = HEAP16[$s1_i >> 1] | 0; //@line 59107
 $35 = HEAP16[$s2_i >> 1] | 0; //@line 59108
 $40 = ($35 + $34 & 65535) + ((HEAPU16[$c + 166 >> 1] | 0) >>> 4 & 1) & 65535; //@line 59114
 $41 = $c + 372 | 0; //@line 59115
 HEAP32[$41 >> 2] = (HEAP32[$41 >> 2] | 0) + 8; //@line 59118
 _e68_cc_set_addx_16($c, $40, $34, $35); //@line 59119
 $44 = $c + 156 | 0; //@line 59120
 $45 = HEAP32[$44 >> 2] | 0; //@line 59121
 if (($45 & 1 | 0) != 0) {
  _e68_exception_address($c, $45, 0, 0); //@line 59126
  STACKTOP = sp; //@line 59128
  return;
 }
 $50 = $c + 164 | 0; //@line 59131
 HEAP16[$c + 162 >> 1] = HEAP16[$50 >> 1] | 0; //@line 59134
 $53 = $45 & 16777215; //@line 59135
 $54 = $53 + 1 | 0; //@line 59136
 if ($54 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $60 = HEAP32[$c + 32 >> 2] | 0; //@line 59143
  $_0_i_i_i = HEAPU8[$60 + $53 | 0] << 8 | HEAPU8[$60 + $54 | 0]; //@line 59153
 } else {
  $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $53) | 0; //@line 59161
 }
 HEAP16[$50 >> 1] = $_0_i_i_i; //@line 59164
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$44 >> 2] = (HEAP32[$44 >> 2] | 0) + 2; //@line 59172
  $82 = $c + 152 | 0; //@line 59173
  HEAP32[$82 >> 2] = (HEAP32[$82 >> 2] | 0) + 2; //@line 59176
  _e68_ea_set_val16($c, $40) | 0; //@line 59177
  STACKTOP = sp; //@line 59179
  return;
 } else {
  _e68_exception_bus($c); //@line 59182
  STACKTOP = sp; //@line 59184
  return;
 }
}
function _opd180($c) {
 $c = $c | 0;
 var $s1_i = 0, $s2_i = 0, $s2 = 0, $3 = 0, $9 = 0, $11 = 0, $ea1_0_i = 0, $ea2_0_i = 0, $34 = 0, $35 = 0, $41 = 0, $42 = 0, $45 = 0, $46 = 0, $51 = 0, $54 = 0, $55 = 0, $61 = 0, $_0_i_i_i = 0, $83 = 0, $91 = 0, $92 = 0, $101 = 0, $102 = 0, $103 = 0, $106 = 0, $107 = 0, $112 = 0, $115 = 0, $116 = 0, $122 = 0, $_0_i_i = 0, $144 = 0, sp = 0;
 sp = STACKTOP; //@line 59210
 STACKTOP = STACKTOP + 24 | 0; //@line 59210
 $s1_i = sp | 0; //@line 59211
 $s2_i = sp + 8 | 0; //@line 59212
 $s2 = sp + 16 | 0; //@line 59213
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 59216
 if (($3 & 48 | 0) != 0) {
  $91 = HEAP32[$c + 88 + (($3 >>> 9 & 7) << 2) >> 2] | 0; //@line 59224
  $92 = $3 & 63; //@line 59225
  if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($92 << 2) >> 2] & 127]($c, $92, 508, 32) | 0) != 0) {
   STACKTOP = sp; //@line 59232
   return;
  }
  if ((_e68_ea_get_val32($c, $s2) | 0) != 0) {
   STACKTOP = sp; //@line 59239
   return;
  }
  $101 = HEAP32[$s2 >> 2] | 0; //@line 59242
  $102 = $101 + $91 | 0; //@line 59243
  $103 = $c + 372 | 0; //@line 59244
  HEAP32[$103 >> 2] = (HEAP32[$103 >> 2] | 0) + 12; //@line 59247
  _e68_cc_set_add_32($c, $102, $91, $101); //@line 59248
  $106 = $c + 156 | 0; //@line 59249
  $107 = HEAP32[$106 >> 2] | 0; //@line 59250
  if (($107 & 1 | 0) != 0) {
   _e68_exception_address($c, $107, 0, 0); //@line 59255
   STACKTOP = sp; //@line 59257
   return;
  }
  $112 = $c + 164 | 0; //@line 59260
  HEAP16[$c + 162 >> 1] = HEAP16[$112 >> 1] | 0; //@line 59263
  $115 = $107 & 16777215; //@line 59264
  $116 = $115 + 1 | 0; //@line 59265
  if ($116 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $122 = HEAP32[$c + 32 >> 2] | 0; //@line 59272
   $_0_i_i = HEAPU8[$122 + $115 | 0] << 8 | HEAPU8[$122 + $116 | 0]; //@line 59282
  } else {
   $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $115) | 0; //@line 59290
  }
  HEAP16[$112 >> 1] = $_0_i_i; //@line 59293
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$106 >> 2] = (HEAP32[$106 >> 2] | 0) + 2; //@line 59301
   $144 = $c + 152 | 0; //@line 59302
   HEAP32[$144 >> 2] = (HEAP32[$144 >> 2] | 0) + 2; //@line 59305
   _e68_ea_set_val32($c, $102) | 0; //@line 59306
   STACKTOP = sp; //@line 59308
   return;
  } else {
   _e68_exception_bus($c); //@line 59311
   STACKTOP = sp; //@line 59313
   return;
  }
 }
 $9 = $3 & 7; //@line 59319
 $11 = $3 >>> 9 & 7; //@line 59321
 if (($3 & 8 | 0) == 0) {
  $ea2_0_i = $11;
  $ea1_0_i = $9;
 } else {
  $ea2_0_i = $11 | 32;
  $ea1_0_i = $9 | 32;
 }
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($ea1_0_i << 2) >> 2] & 127]($c, $ea1_0_i, 17, 32) | 0) != 0) {
  STACKTOP = sp; //@line 59341
  return;
 }
 if ((_e68_ea_get_val32($c, $s1_i) | 0) != 0) {
  STACKTOP = sp; //@line 59348
  return;
 }
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($ea2_0_i << 2) >> 2] & 127]($c, $ea2_0_i, 17, 32) | 0) != 0) {
  STACKTOP = sp; //@line 59357
  return;
 }
 if ((_e68_ea_get_val32($c, $s2_i) | 0) != 0) {
  STACKTOP = sp; //@line 59364
  return;
 }
 $34 = HEAP32[$s1_i >> 2] | 0; //@line 59367
 $35 = HEAP32[$s2_i >> 2] | 0; //@line 59368
 $41 = $35 + $34 + ((HEAPU16[$c + 166 >> 1] | 0) >>> 4 & 1) | 0; //@line 59375
 $42 = $c + 372 | 0; //@line 59376
 HEAP32[$42 >> 2] = (HEAP32[$42 >> 2] | 0) + 12; //@line 59379
 _e68_cc_set_addx_32($c, $41, $34, $35); //@line 59380
 $45 = $c + 156 | 0; //@line 59381
 $46 = HEAP32[$45 >> 2] | 0; //@line 59382
 if (($46 & 1 | 0) != 0) {
  _e68_exception_address($c, $46, 0, 0); //@line 59387
  STACKTOP = sp; //@line 59389
  return;
 }
 $51 = $c + 164 | 0; //@line 59392
 HEAP16[$c + 162 >> 1] = HEAP16[$51 >> 1] | 0; //@line 59395
 $54 = $46 & 16777215; //@line 59396
 $55 = $54 + 1 | 0; //@line 59397
 if ($55 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $61 = HEAP32[$c + 32 >> 2] | 0; //@line 59404
  $_0_i_i_i = HEAPU8[$61 + $54 | 0] << 8 | HEAPU8[$61 + $55 | 0]; //@line 59414
 } else {
  $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $54) | 0; //@line 59422
 }
 HEAP16[$51 >> 1] = $_0_i_i_i; //@line 59425
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$45 >> 2] = (HEAP32[$45 >> 2] | 0) + 2; //@line 59433
  $83 = $c + 152 | 0; //@line 59434
  HEAP32[$83 >> 2] = (HEAP32[$83 >> 2] | 0) + 2; //@line 59437
  _e68_ea_set_val32($c, $41) | 0; //@line 59438
  STACKTOP = sp; //@line 59440
  return;
 } else {
  _e68_exception_bus($c); //@line 59443
  STACKTOP = sp; //@line 59445
  return;
 }
}
function _opd1c0($c) {
 $c = $c | 0;
 var $s1 = 0, $3 = 0, $6 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $21 = 0, $22 = 0, $27 = 0, $30 = 0, $31 = 0, $37 = 0, $_0_i_i = 0, $59 = 0, sp = 0;
 sp = STACKTOP; //@line 59461
 STACKTOP = STACKTOP + 8 | 0; //@line 59461
 $s1 = sp | 0; //@line 59462
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 59465
 $6 = $3 & 63; //@line 59468
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($6 << 2) >> 2] & 127]($c, $6, 4095, 32) | 0) != 0) {
  STACKTOP = sp; //@line 59475
  return;
 }
 if ((_e68_ea_get_val32($c, $s1) | 0) != 0) {
  STACKTOP = sp; //@line 59482
  return;
 }
 $15 = $c + 120 + (($3 >>> 9 & 7) << 2) | 0; //@line 59485
 $16 = HEAP32[$15 >> 2] | 0; //@line 59486
 $17 = HEAP32[$s1 >> 2] | 0; //@line 59487
 $18 = $c + 372 | 0; //@line 59488
 HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 6; //@line 59491
 $21 = $c + 156 | 0; //@line 59492
 $22 = HEAP32[$21 >> 2] | 0; //@line 59493
 if (($22 & 1 | 0) != 0) {
  _e68_exception_address($c, $22, 0, 0); //@line 59498
  STACKTOP = sp; //@line 59500
  return;
 }
 $27 = $c + 164 | 0; //@line 59503
 HEAP16[$c + 162 >> 1] = HEAP16[$27 >> 1] | 0; //@line 59506
 $30 = $22 & 16777215; //@line 59507
 $31 = $30 + 1 | 0; //@line 59508
 if ($31 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $37 = HEAP32[$c + 32 >> 2] | 0; //@line 59515
  $_0_i_i = HEAPU8[$37 + $30 | 0] << 8 | HEAPU8[$37 + $31 | 0]; //@line 59525
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $30) | 0; //@line 59533
 }
 HEAP16[$27 >> 1] = $_0_i_i; //@line 59536
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$21 >> 2] = (HEAP32[$21 >> 2] | 0) + 2; //@line 59544
  $59 = $c + 152 | 0; //@line 59545
  HEAP32[$59 >> 2] = (HEAP32[$59 >> 2] | 0) + 2; //@line 59548
  HEAP32[$15 >> 2] = $17 + $16; //@line 59550
  STACKTOP = sp; //@line 59552
  return;
 } else {
  _e68_exception_bus($c); //@line 59555
  STACKTOP = sp; //@line 59557
  return;
 }
}
function _ope000($c) {
 $c = $c | 0;
 var $3 = 0, $5 = 0, $7 = 0, $9 = 0, $13 = 0, $17 = 0, $18 = 0, $19 = 0, $23 = 0, $27 = 0, $28 = 0, $_0_i23_i = 0, $30 = 0, $32 = 0, $36 = 0, $41 = 0, $42 = 0, $48 = 0, $49 = 0, $55 = 0, $_0_i24_i = 0, $d_1_i = 0, $58 = 0, $61 = 0, $62 = 0, $67 = 0, $70 = 0, $71 = 0, $77 = 0, $_0_i_i_i = 0, $99 = 0, $108 = 0, $109 = 0, $111 = 0, $117 = 0, $121 = 0, $_0_i22_i = 0, $127 = 0, $129 = 0, $134 = 0, $135 = 0, $146 = 0, $150 = 0, $_0_i23_i9 = 0, $d_0_i = 0, $156 = 0, $159 = 0, $160 = 0, $165 = 0, $168 = 0, $169 = 0, $175 = 0, $_0_i_i_i10 = 0, $197 = 0, $206 = 0, $208 = 0, $209 = 0, $211 = 0, $213 = 0, $219 = 0, $x_017_i = 0, $x_01726_i = 0, $_0_i24_i15 = 0, $x_020_i = 0, $v_019_i = 0, $i_018_i = 0, $224 = 0, $225 = 0, $x_0_i = 0, $_0_i25_i = 0, $x_0_lcssa_i = 0, $v_0_lcssa_i = 0, $229 = 0, $234 = 0, $237 = 0, $238 = 0, $243 = 0, $246 = 0, $247 = 0, $253 = 0, $_0_i_i_i16 = 0, $275 = 0, $284 = 0, $285 = 0, $286 = 0, $288 = 0, $_0_i_i = 0, $297 = 0, $300 = 0, $304 = 0, $305 = 0, $308 = 0, $309 = 0, $320 = 0, $324 = 0, $d_0_i20 = 0, $330 = 0, $333 = 0, $334 = 0, $339 = 0, $342 = 0, $343 = 0, $349 = 0, $_0_i_i_i21 = 0, $371 = 0, $379 = 0, label = 0;
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 59614
 $5 = $3 >>> 3 & 3; //@line 59616
 if (($5 | 0) == 0) {
  $7 = $3 & 7; //@line 59618
  $9 = $3 >>> 9 & 7; //@line 59620
  do {
   if (($3 & 32 | 0) == 0) {
    $13 = $c + 88 + ($7 << 2) | 0; //@line 59628
    $_0_i23_i = ($9 | 0) == 0 ? 8 : $9;
    $28 = $13;
    $27 = HEAP32[$13 >> 2] | 0;
    label = 7408; //@line 59632
   } else {
    $17 = HEAP32[$c + 88 + ($9 << 2) >> 2] & 63; //@line 59636
    $18 = $c + 88 + ($7 << 2) | 0; //@line 59637
    $19 = HEAP32[$18 >> 2] | 0; //@line 59638
    if (($17 | 0) != 0) {
     $_0_i23_i = $17;
     $28 = $18;
     $27 = $19;
     label = 7408; //@line 59643
     break;
    }
    $23 = $c + 166 | 0; //@line 59647
    HEAP16[$23 >> 1] = HEAP16[$23 >> 1] & -2; //@line 59650
    $d_1_i = $19 & 255;
    $_0_i24_i = 0;
    $55 = $18;
   }
  } while (0);
  do {
   if ((label | 0) == 7408) {
    $30 = $27 & 255; //@line 59661
    $32 = ($27 & 128 | 0) != 0; //@line 59663
    if ($_0_i23_i >>> 0 < 8) {
     $36 = ($32 ? $30 | 65280 : $30) >>> ($_0_i23_i >>> 0) & 255; //@line 59669
     $41 = $c + 166 | 0; //@line 59674
     $42 = HEAP16[$41 >> 1] | 0; //@line 59675
     if ((1 << $_0_i23_i - 1 & $30 | 0) == 0) {
      HEAP16[$41 >> 1] = $42 & -18; //@line 59679
      $d_1_i = $36;
      $_0_i24_i = $_0_i23_i;
      $55 = $28;
      break;
     } else {
      HEAP16[$41 >> 1] = $42 | 17; //@line 59684
      $d_1_i = $36;
      $_0_i24_i = $_0_i23_i;
      $55 = $28;
      break;
     }
    } else {
     $48 = $c + 166 | 0; //@line 59690
     $49 = HEAP16[$48 >> 1] | 0; //@line 59691
     if ($32) {
      HEAP16[$48 >> 1] = $49 | 17; //@line 59695
      $d_1_i = -1;
      $_0_i24_i = $_0_i23_i;
      $55 = $28;
      break;
     } else {
      HEAP16[$48 >> 1] = $49 & -18; //@line 59701
      $d_1_i = 0;
      $_0_i24_i = $_0_i23_i;
      $55 = $28;
      break;
     }
    }
   }
  } while (0);
  $58 = $c + 372 | 0; //@line 59713
  HEAP32[$58 >> 2] = ($_0_i24_i << 1) + 6 + (HEAP32[$58 >> 2] | 0); //@line 59716
  _e68_cc_set_nz_8($c, 14, $d_1_i); //@line 59717
  $61 = $c + 156 | 0; //@line 59718
  $62 = HEAP32[$61 >> 2] | 0; //@line 59719
  if (($62 & 1 | 0) != 0) {
   _e68_exception_address($c, $62, 0, 0); //@line 59724
   return;
  }
  $67 = $c + 164 | 0; //@line 59729
  HEAP16[$c + 162 >> 1] = HEAP16[$67 >> 1] | 0; //@line 59732
  $70 = $62 & 16777215; //@line 59733
  $71 = $70 + 1 | 0; //@line 59734
  if ($71 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $77 = HEAP32[$c + 32 >> 2] | 0; //@line 59741
   $_0_i_i_i = HEAPU8[$77 + $70 | 0] << 8 | HEAPU8[$77 + $71 | 0]; //@line 59751
  } else {
   $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $70) | 0; //@line 59759
  }
  HEAP16[$67 >> 1] = $_0_i_i_i; //@line 59762
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$61 >> 2] = (HEAP32[$61 >> 2] | 0) + 2; //@line 59770
   $99 = $c + 152 | 0; //@line 59771
   HEAP32[$99 >> 2] = (HEAP32[$99 >> 2] | 0) + 2; //@line 59774
   HEAP32[$55 >> 2] = HEAP32[$55 >> 2] & -256 | $d_1_i & 255; //@line 59779
   return;
  } else {
   _e68_exception_bus($c); //@line 59784
   return;
  }
 } else if (($5 | 0) == 2) {
  $206 = $c + 88 + (($3 & 7) << 2) | 0; //@line 59791
  $208 = HEAP32[$206 >> 2] & 255; //@line 59794
  $209 = $c + 166 | 0; //@line 59795
  $211 = (HEAPU16[$209 >> 1] | 0) >>> 4; //@line 59797
  $213 = $3 >>> 9 & 7; //@line 59799
  if (($3 & 32 | 0) == 0) {
   $_0_i24_i15 = ($213 | 0) == 0 ? 8 : $213;
   $x_01726_i = $211 & 1;
   label = 7446; //@line 59809
  } else {
   $219 = HEAP32[$c + 88 + ($213 << 2) >> 2] & 63; //@line 59813
   $x_017_i = $211 & 1; //@line 59814
   if (($219 | 0) == 0) {
    $v_0_lcssa_i = $208;
    $x_0_lcssa_i = $x_017_i;
    $_0_i25_i = 0;
   } else {
    $_0_i24_i15 = $219;
    $x_01726_i = $x_017_i;
    label = 7446; //@line 59821
   }
  }
  if ((label | 0) == 7446) {
   $i_018_i = 0;
   $v_019_i = $208;
   $x_020_i = $x_01726_i;
   while (1) {
    $224 = ($v_019_i & 65535) >>> 1 | $x_020_i << 7; //@line 59835
    $225 = $i_018_i + 1 | 0; //@line 59836
    $x_0_i = $v_019_i & 1; //@line 59837
    if ($225 >>> 0 < $_0_i24_i15 >>> 0) {
     $i_018_i = $225;
     $v_019_i = $224;
     $x_020_i = $x_0_i;
    } else {
     $v_0_lcssa_i = $224;
     $x_0_lcssa_i = $x_0_i;
     $_0_i25_i = $_0_i24_i15;
     break;
    }
   }
  }
  $229 = $c + 372 | 0; //@line 59853
  HEAP32[$229 >> 2] = ($_0_i25_i << 1) + 6 + (HEAP32[$229 >> 2] | 0); //@line 59856
  _e68_cc_set_nz_8($c, 14, $v_0_lcssa_i & 255); //@line 59858
  $234 = HEAP16[$209 >> 1] | 0; //@line 59860
  HEAP16[$209 >> 1] = $x_0_lcssa_i << 16 >> 16 == 0 ? $234 & -18 : $234 | 17; //@line 59864
  $237 = $c + 156 | 0; //@line 59865
  $238 = HEAP32[$237 >> 2] | 0; //@line 59866
  if (($238 & 1 | 0) != 0) {
   _e68_exception_address($c, $238, 0, 0); //@line 59871
   return;
  }
  $243 = $c + 164 | 0; //@line 59876
  HEAP16[$c + 162 >> 1] = HEAP16[$243 >> 1] | 0; //@line 59879
  $246 = $238 & 16777215; //@line 59880
  $247 = $246 + 1 | 0; //@line 59881
  if ($247 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $253 = HEAP32[$c + 32 >> 2] | 0; //@line 59888
   $_0_i_i_i16 = HEAPU8[$253 + $246 | 0] << 8 | HEAPU8[$253 + $247 | 0]; //@line 59898
  } else {
   $_0_i_i_i16 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $246) | 0; //@line 59906
  }
  HEAP16[$243 >> 1] = $_0_i_i_i16; //@line 59909
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$237 >> 2] = (HEAP32[$237 >> 2] | 0) + 2; //@line 59917
   $275 = $c + 152 | 0; //@line 59918
   HEAP32[$275 >> 2] = (HEAP32[$275 >> 2] | 0) + 2; //@line 59921
   HEAP32[$206 >> 2] = HEAP32[$206 >> 2] & -256 | $v_0_lcssa_i & 255; //@line 59927
   return;
  } else {
   _e68_exception_bus($c); //@line 59932
   return;
  }
 } else if (($5 | 0) == 1) {
  $108 = $c + 88 + (($3 & 7) << 2) | 0; //@line 59939
  $109 = HEAP32[$108 >> 2] | 0; //@line 59940
  $111 = $3 >>> 9 & 7; //@line 59942
  do {
   if (($3 & 32 | 0) == 0) {
    $_0_i22_i = ($111 | 0) == 0 ? 8 : $111; //@line 59951
    label = 7427; //@line 59952
   } else {
    $117 = HEAP32[$c + 88 + ($111 << 2) >> 2] & 63; //@line 59956
    if (($117 | 0) != 0) {
     $_0_i22_i = $117; //@line 59960
     label = 7427; //@line 59961
     break;
    }
    $121 = $c + 166 | 0; //@line 59965
    HEAP16[$121 >> 1] = HEAP16[$121 >> 1] & -2; //@line 59968
    $d_0_i = $109 & 255;
    $_0_i23_i9 = 0;
   }
  } while (0);
  L9321 : do {
   if ((label | 0) == 7427) {
    if ($_0_i22_i >>> 0 < 8) {
     $127 = $109 & 255; //@line 59979
     $129 = $127 >>> ($_0_i22_i >>> 0) & 255; //@line 59981
     $134 = $c + 166 | 0; //@line 59986
     $135 = HEAP16[$134 >> 1] | 0; //@line 59987
     if ((1 << $_0_i22_i - 1 & $127 | 0) == 0) {
      HEAP16[$134 >> 1] = $135 & -18; //@line 59991
      $d_0_i = $129;
      $_0_i23_i9 = $_0_i22_i;
      break;
     } else {
      HEAP16[$134 >> 1] = $135 | 17; //@line 59996
      $d_0_i = $129;
      $_0_i23_i9 = $_0_i22_i;
      break;
     }
    }
    do {
     if (($_0_i22_i | 0) == 8) {
      if (($109 & 128 | 0) == 0) {
       break;
      }
      $146 = $c + 166 | 0; //@line 60012
      HEAP16[$146 >> 1] = HEAP16[$146 >> 1] | 17; //@line 60015
      $d_0_i = 0;
      $_0_i23_i9 = 8;
      break L9321;
     }
    } while (0);
    $150 = $c + 166 | 0; //@line 60021
    HEAP16[$150 >> 1] = HEAP16[$150 >> 1] & -18; //@line 60024
    $d_0_i = 0;
    $_0_i23_i9 = $_0_i22_i;
   }
  } while (0);
  $156 = $c + 372 | 0; //@line 60032
  HEAP32[$156 >> 2] = ($_0_i23_i9 << 1) + 6 + (HEAP32[$156 >> 2] | 0); //@line 60035
  _e68_cc_set_nz_8($c, 14, $d_0_i); //@line 60036
  $159 = $c + 156 | 0; //@line 60037
  $160 = HEAP32[$159 >> 2] | 0; //@line 60038
  if (($160 & 1 | 0) != 0) {
   _e68_exception_address($c, $160, 0, 0); //@line 60043
   return;
  }
  $165 = $c + 164 | 0; //@line 60048
  HEAP16[$c + 162 >> 1] = HEAP16[$165 >> 1] | 0; //@line 60051
  $168 = $160 & 16777215; //@line 60052
  $169 = $168 + 1 | 0; //@line 60053
  if ($169 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $175 = HEAP32[$c + 32 >> 2] | 0; //@line 60060
   $_0_i_i_i10 = HEAPU8[$175 + $168 | 0] << 8 | HEAPU8[$175 + $169 | 0]; //@line 60070
  } else {
   $_0_i_i_i10 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $168) | 0; //@line 60078
  }
  HEAP16[$165 >> 1] = $_0_i_i_i10; //@line 60081
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$159 >> 2] = (HEAP32[$159 >> 2] | 0) + 2; //@line 60089
   $197 = $c + 152 | 0; //@line 60090
   HEAP32[$197 >> 2] = (HEAP32[$197 >> 2] | 0) + 2; //@line 60093
   HEAP32[$108 >> 2] = HEAP32[$108 >> 2] & -256 | $d_0_i & 255; //@line 60098
   return;
  } else {
   _e68_exception_bus($c); //@line 60103
   return;
  }
 } else if (($5 | 0) == 3) {
  $284 = $c + 88 + (($3 & 7) << 2) | 0; //@line 60110
  $285 = HEAP32[$284 >> 2] | 0; //@line 60111
  $286 = $285 & 255; //@line 60112
  $288 = $3 >>> 9 & 7; //@line 60114
  if (($3 & 32 | 0) == 0) {
   $_0_i_i = ($288 | 0) == 0 ? 8 : $288; //@line 60122
  } else {
   $_0_i_i = HEAP32[$c + 88 + ($288 << 2) >> 2] & 63; //@line 60128
  }
  $297 = $_0_i_i & 7; //@line 60131
  L9352 : do {
   if (($297 | 0) == 0) {
    do {
     if (($_0_i_i | 0) != 0) {
      if (($285 & 128 | 0) == 0) {
       break;
      }
      $320 = $c + 166 | 0; //@line 60146
      HEAP16[$320 >> 1] = HEAP16[$320 >> 1] | 1; //@line 60149
      $d_0_i20 = $286; //@line 60151
      break L9352;
     }
    } while (0);
    $324 = $c + 166 | 0; //@line 60155
    HEAP16[$324 >> 1] = HEAP16[$324 >> 1] & -2; //@line 60158
    $d_0_i20 = $286; //@line 60159
   } else {
    $300 = $285 & 255; //@line 60161
    $304 = $300 << 8 - $297 | $300 >>> ($297 >>> 0); //@line 60165
    $305 = $304 & 255; //@line 60166
    $308 = $c + 166 | 0; //@line 60169
    $309 = HEAP16[$308 >> 1] | 0; //@line 60170
    if (($304 & 128 | 0) == 0) {
     HEAP16[$308 >> 1] = $309 & -2; //@line 60174
     $d_0_i20 = $305; //@line 60175
     break;
    } else {
     HEAP16[$308 >> 1] = $309 | 1; //@line 60179
     $d_0_i20 = $305; //@line 60181
     break;
    }
   }
  } while (0);
  $330 = $c + 372 | 0; //@line 60189
  HEAP32[$330 >> 2] = ($_0_i_i << 1) + 6 + (HEAP32[$330 >> 2] | 0); //@line 60192
  _e68_cc_set_nz_8($c, 14, $d_0_i20); //@line 60193
  $333 = $c + 156 | 0; //@line 60194
  $334 = HEAP32[$333 >> 2] | 0; //@line 60195
  if (($334 & 1 | 0) != 0) {
   _e68_exception_address($c, $334, 0, 0); //@line 60200
   return;
  }
  $339 = $c + 164 | 0; //@line 60205
  HEAP16[$c + 162 >> 1] = HEAP16[$339 >> 1] | 0; //@line 60208
  $342 = $334 & 16777215; //@line 60209
  $343 = $342 + 1 | 0; //@line 60210
  if ($343 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $349 = HEAP32[$c + 32 >> 2] | 0; //@line 60217
   $_0_i_i_i21 = HEAPU8[$349 + $342 | 0] << 8 | HEAPU8[$349 + $343 | 0]; //@line 60227
  } else {
   $_0_i_i_i21 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $342) | 0; //@line 60235
  }
  HEAP16[$339 >> 1] = $_0_i_i_i21; //@line 60238
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$333 >> 2] = (HEAP32[$333 >> 2] | 0) + 2; //@line 60246
   $371 = $c + 152 | 0; //@line 60247
   HEAP32[$371 >> 2] = (HEAP32[$371 >> 2] | 0) + 2; //@line 60250
   HEAP32[$284 >> 2] = HEAP32[$284 >> 2] & -256 | $d_0_i20 & 255; //@line 60255
   return;
  } else {
   _e68_exception_bus($c); //@line 60260
   return;
  }
 } else {
  _e68_exception_illegal($c); //@line 60266
  $379 = $c + 372 | 0; //@line 60267
  HEAP32[$379 >> 2] = (HEAP32[$379 >> 2] | 0) + 2; //@line 60270
  return;
 }
}
function _ope040($c) {
 $c = $c | 0;
 var $3 = 0, $5 = 0, $8 = 0, $9 = 0, $11 = 0, $19 = 0, $23 = 0, $29 = 0, $31 = 0, $_0_i2325_i = 0, $32 = 0, $35 = 0, $40 = 0, $41 = 0, $47 = 0, $48 = 0, $_0_i24_i = 0, $d_1_i = 0, $56 = 0, $59 = 0, $60 = 0, $65 = 0, $68 = 0, $69 = 0, $75 = 0, $_0_i_i_i = 0, $97 = 0, $106 = 0, $107 = 0, $109 = 0, $115 = 0, $119 = 0, $_0_i2224_i = 0, $125 = 0, $127 = 0, $132 = 0, $133 = 0, $144 = 0, $148 = 0, $_0_i23_i = 0, $d_0_i = 0, $154 = 0, $157 = 0, $158 = 0, $163 = 0, $166 = 0, $167 = 0, $173 = 0, $_0_i_i_i9 = 0, $195 = 0, $204 = 0, $206 = 0, $208 = 0, $212 = 0, $217 = 0, $218 = 0, $220 = 0, $222 = 0, $223 = 0, $_0_i21_i = 0, $d_019_i = 0, $i_018_i = 0, $x_0_in17_i = 0, $227 = 0, $228 = 0, $230 = 0, $_0_i22_i = 0, $d_0_lcssa_i = 0, $x_0_in_lcssa_i = 0, $233 = 0, $237 = 0, $240 = 0, $241 = 0, $246 = 0, $249 = 0, $250 = 0, $256 = 0, $_0_i_i_i13 = 0, $278 = 0, $287 = 0, $288 = 0, $289 = 0, $291 = 0, $_0_i_i = 0, $303 = 0, $307 = 0, $308 = 0, $311 = 0, $312 = 0, $323 = 0, $327 = 0, $d_0_i17 = 0, $333 = 0, $336 = 0, $337 = 0, $342 = 0, $345 = 0, $346 = 0, $352 = 0, $_0_i_i_i18 = 0, $374 = 0, $382 = 0, label = 0;
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 60328
 $5 = $3 >>> 3 & 3; //@line 60330
 if (($5 | 0) == 0) {
  $8 = $c + 88 + (($3 & 7) << 2) | 0; //@line 60333
  $9 = HEAP32[$8 >> 2] | 0; //@line 60334
  $11 = $3 >>> 9 & 7; //@line 60336
  do {
   if (($3 & 32 | 0) == 0) {
    $_0_i2325_i = ($11 | 0) == 0 ? 8 : $11;
    $31 = ($9 & 32768 | 0) != 0;
    label = 7496; //@line 60348
   } else {
    $19 = HEAP32[$c + 88 + ($11 << 2) >> 2] & 63; //@line 60352
    if (($19 | 0) == 0) {
     $23 = $c + 166 | 0; //@line 60357
     HEAP16[$23 >> 1] = HEAP16[$23 >> 1] & -2; //@line 60360
     $d_1_i = $9 & 65535;
     $_0_i24_i = 0;
     break;
    }
    $29 = ($9 & 32768 | 0) != 0; //@line 60367
    if ($19 >>> 0 < 16) {
     $_0_i2325_i = $19;
     $31 = $29;
     label = 7496; //@line 60371
     break;
    }
    $47 = $c + 166 | 0; //@line 60374
    $48 = HEAP16[$47 >> 1] | 0; //@line 60375
    if ($29) {
     HEAP16[$47 >> 1] = $48 | 17; //@line 60379
     $d_1_i = -1;
     $_0_i24_i = $19;
     break;
    } else {
     HEAP16[$47 >> 1] = $48 & -18; //@line 60385
     $d_1_i = 0;
     $_0_i24_i = $19;
     break;
    }
   }
  } while (0);
  do {
   if ((label | 0) == 7496) {
    $32 = $9 & 65535; //@line 60395
    $35 = ($31 ? $9 | -65536 : $32) >>> ($_0_i2325_i >>> 0) & 65535; //@line 60399
    $40 = $c + 166 | 0; //@line 60404
    $41 = HEAP16[$40 >> 1] | 0; //@line 60405
    if ((1 << $_0_i2325_i - 1 & $32 | 0) == 0) {
     HEAP16[$40 >> 1] = $41 & -18; //@line 60409
     $d_1_i = $35;
     $_0_i24_i = $_0_i2325_i;
     break;
    } else {
     HEAP16[$40 >> 1] = $41 | 17; //@line 60414
     $d_1_i = $35;
     $_0_i24_i = $_0_i2325_i;
     break;
    }
   }
  } while (0);
  $56 = $c + 372 | 0; //@line 60425
  HEAP32[$56 >> 2] = ($_0_i24_i << 1) + 6 + (HEAP32[$56 >> 2] | 0); //@line 60428
  _e68_cc_set_nz_16($c, 14, $d_1_i); //@line 60429
  $59 = $c + 156 | 0; //@line 60430
  $60 = HEAP32[$59 >> 2] | 0; //@line 60431
  if (($60 & 1 | 0) != 0) {
   _e68_exception_address($c, $60, 0, 0); //@line 60436
   return;
  }
  $65 = $c + 164 | 0; //@line 60441
  HEAP16[$c + 162 >> 1] = HEAP16[$65 >> 1] | 0; //@line 60444
  $68 = $60 & 16777215; //@line 60445
  $69 = $68 + 1 | 0; //@line 60446
  if ($69 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $75 = HEAP32[$c + 32 >> 2] | 0; //@line 60453
   $_0_i_i_i = HEAPU8[$75 + $68 | 0] << 8 | HEAPU8[$75 + $69 | 0]; //@line 60463
  } else {
   $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $68) | 0; //@line 60471
  }
  HEAP16[$65 >> 1] = $_0_i_i_i; //@line 60474
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$59 >> 2] = (HEAP32[$59 >> 2] | 0) + 2; //@line 60482
   $97 = $c + 152 | 0; //@line 60483
   HEAP32[$97 >> 2] = (HEAP32[$97 >> 2] | 0) + 2; //@line 60486
   HEAP32[$8 >> 2] = HEAP32[$8 >> 2] & -65536 | $d_1_i & 65535; //@line 60491
   return;
  } else {
   _e68_exception_bus($c); //@line 60496
   return;
  }
 } else if (($5 | 0) == 1) {
  $106 = $c + 88 + (($3 & 7) << 2) | 0; //@line 60503
  $107 = HEAP32[$106 >> 2] | 0; //@line 60504
  $109 = $3 >>> 9 & 7; //@line 60506
  L9411 : do {
   if (($3 & 32 | 0) == 0) {
    $_0_i2224_i = ($109 | 0) == 0 ? 8 : $109; //@line 60515
    label = 7515; //@line 60516
   } else {
    $115 = HEAP32[$c + 88 + ($109 << 2) >> 2] & 63; //@line 60520
    if (($115 | 0) == 0) {
     $119 = $c + 166 | 0; //@line 60525
     HEAP16[$119 >> 1] = HEAP16[$119 >> 1] & -2; //@line 60528
     $d_0_i = $107 & 65535;
     $_0_i23_i = 0;
     break;
    }
    if ($115 >>> 0 < 16) {
     $_0_i2224_i = $115; //@line 60536
     label = 7515; //@line 60537
     break;
    }
    do {
     if (($115 | 0) == 16) {
      if (($107 & 32768 | 0) == 0) {
       break;
      }
      $144 = $c + 166 | 0; //@line 60550
      HEAP16[$144 >> 1] = HEAP16[$144 >> 1] | 17; //@line 60553
      $d_0_i = 0;
      $_0_i23_i = 16;
      break L9411;
     }
    } while (0);
    $148 = $c + 166 | 0; //@line 60559
    HEAP16[$148 >> 1] = HEAP16[$148 >> 1] & -18; //@line 60562
    $d_0_i = 0;
    $_0_i23_i = $115;
   }
  } while (0);
  do {
   if ((label | 0) == 7515) {
    $125 = $107 & 65535; //@line 60569
    $127 = $125 >>> ($_0_i2224_i >>> 0) & 65535; //@line 60571
    $132 = $c + 166 | 0; //@line 60576
    $133 = HEAP16[$132 >> 1] | 0; //@line 60577
    if ((1 << $_0_i2224_i - 1 & $125 | 0) == 0) {
     HEAP16[$132 >> 1] = $133 & -18; //@line 60581
     $d_0_i = $127;
     $_0_i23_i = $_0_i2224_i;
     break;
    } else {
     HEAP16[$132 >> 1] = $133 | 17; //@line 60586
     $d_0_i = $127;
     $_0_i23_i = $_0_i2224_i;
     break;
    }
   }
  } while (0);
  $154 = $c + 372 | 0; //@line 60597
  HEAP32[$154 >> 2] = ($_0_i23_i << 1) + 6 + (HEAP32[$154 >> 2] | 0); //@line 60600
  _e68_cc_set_nz_16($c, 14, $d_0_i); //@line 60601
  $157 = $c + 156 | 0; //@line 60602
  $158 = HEAP32[$157 >> 2] | 0; //@line 60603
  if (($158 & 1 | 0) != 0) {
   _e68_exception_address($c, $158, 0, 0); //@line 60608
   return;
  }
  $163 = $c + 164 | 0; //@line 60613
  HEAP16[$c + 162 >> 1] = HEAP16[$163 >> 1] | 0; //@line 60616
  $166 = $158 & 16777215; //@line 60617
  $167 = $166 + 1 | 0; //@line 60618
  if ($167 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $173 = HEAP32[$c + 32 >> 2] | 0; //@line 60625
   $_0_i_i_i9 = HEAPU8[$173 + $166 | 0] << 8 | HEAPU8[$173 + $167 | 0]; //@line 60635
  } else {
   $_0_i_i_i9 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $166) | 0; //@line 60643
  }
  HEAP16[$163 >> 1] = $_0_i_i_i9; //@line 60646
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$157 >> 2] = (HEAP32[$157 >> 2] | 0) + 2; //@line 60654
   $195 = $c + 152 | 0; //@line 60655
   HEAP32[$195 >> 2] = (HEAP32[$195 >> 2] | 0) + 2; //@line 60658
   HEAP32[$106 >> 2] = HEAP32[$106 >> 2] & -65536 | $d_0_i & 65535; //@line 60663
   return;
  } else {
   _e68_exception_bus($c); //@line 60668
   return;
  }
 } else if (($5 | 0) == 3) {
  $287 = $c + 88 + (($3 & 7) << 2) | 0; //@line 60675
  $288 = HEAP32[$287 >> 2] | 0; //@line 60676
  $289 = $288 & 65535; //@line 60677
  $291 = $3 >>> 9 & 7; //@line 60679
  if (($3 & 32 | 0) == 0) {
   $_0_i_i = ($291 | 0) == 0 ? 8 : $291; //@line 60687
  } else {
   $_0_i_i = HEAP32[$c + 88 + ($291 << 2) >> 2] & 63; //@line 60693
  }
  L9446 : do {
   if (($_0_i_i & 15 | 0) == 0) {
    do {
     if (($_0_i_i | 0) != 0) {
      if (($288 & 32768 | 0) == 0) {
       break;
      }
      $323 = $c + 166 | 0; //@line 60711
      HEAP16[$323 >> 1] = HEAP16[$323 >> 1] | 1; //@line 60714
      $d_0_i17 = $289; //@line 60716
      break L9446;
     }
    } while (0);
    $327 = $c + 166 | 0; //@line 60720
    HEAP16[$327 >> 1] = HEAP16[$327 >> 1] & -2; //@line 60723
    $d_0_i17 = $289; //@line 60724
   } else {
    $303 = $288 & 65535; //@line 60726
    $307 = $303 << 16 - $_0_i_i | $303 >>> ($_0_i_i >>> 0); //@line 60730
    $308 = $307 & 65535; //@line 60731
    $311 = $c + 166 | 0; //@line 60734
    $312 = HEAP16[$311 >> 1] | 0; //@line 60735
    if (($307 & 32768 | 0) == 0) {
     HEAP16[$311 >> 1] = $312 & -2; //@line 60739
     $d_0_i17 = $308; //@line 60740
     break;
    } else {
     HEAP16[$311 >> 1] = $312 | 1; //@line 60744
     $d_0_i17 = $308; //@line 60746
     break;
    }
   }
  } while (0);
  $333 = $c + 372 | 0; //@line 60754
  HEAP32[$333 >> 2] = ($_0_i_i << 1) + 6 + (HEAP32[$333 >> 2] | 0); //@line 60757
  _e68_cc_set_nz_16($c, 14, $d_0_i17); //@line 60758
  $336 = $c + 156 | 0; //@line 60759
  $337 = HEAP32[$336 >> 2] | 0; //@line 60760
  if (($337 & 1 | 0) != 0) {
   _e68_exception_address($c, $337, 0, 0); //@line 60765
   return;
  }
  $342 = $c + 164 | 0; //@line 60770
  HEAP16[$c + 162 >> 1] = HEAP16[$342 >> 1] | 0; //@line 60773
  $345 = $337 & 16777215; //@line 60774
  $346 = $345 + 1 | 0; //@line 60775
  if ($346 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $352 = HEAP32[$c + 32 >> 2] | 0; //@line 60782
   $_0_i_i_i18 = HEAPU8[$352 + $345 | 0] << 8 | HEAPU8[$352 + $346 | 0]; //@line 60792
  } else {
   $_0_i_i_i18 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $345) | 0; //@line 60800
  }
  HEAP16[$342 >> 1] = $_0_i_i_i18; //@line 60803
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$336 >> 2] = (HEAP32[$336 >> 2] | 0) + 2; //@line 60811
   $374 = $c + 152 | 0; //@line 60812
   HEAP32[$374 >> 2] = (HEAP32[$374 >> 2] | 0) + 2; //@line 60815
   HEAP32[$287 >> 2] = HEAP32[$287 >> 2] & -65536 | $d_0_i17 & 65535; //@line 60820
   return;
  } else {
   _e68_exception_bus($c); //@line 60825
   return;
  }
 } else if (($5 | 0) == 2) {
  $204 = $c + 88 + (($3 & 7) << 2) | 0; //@line 60832
  $206 = HEAP32[$204 >> 2] & 65535; //@line 60834
  $208 = $3 >>> 9 & 7; //@line 60836
  if (($3 & 32 | 0) == 0) {
   $212 = $c + 166 | 0; //@line 60843
   $_0_i21_i = ($208 | 0) == 0 ? 8 : $208;
   $223 = $212;
   $222 = (HEAPU16[$212 >> 1] | 0) >>> 4;
   label = 7533; //@line 60848
  } else {
   $217 = HEAP32[$c + 88 + ($208 << 2) >> 2] & 63; //@line 60852
   $218 = $c + 166 | 0; //@line 60853
   $220 = (HEAPU16[$218 >> 1] | 0) >>> 4; //@line 60855
   if (($217 | 0) == 0) {
    $x_0_in_lcssa_i = $220;
    $d_0_lcssa_i = $206;
    $_0_i22_i = 0;
    $230 = $218;
   } else {
    $_0_i21_i = $217;
    $223 = $218;
    $222 = $220;
    label = 7533; //@line 60862
   }
  }
  if ((label | 0) == 7533) {
   $x_0_in17_i = $222;
   $i_018_i = 0;
   $d_019_i = $206;
   while (1) {
    $227 = $x_0_in17_i << 15 | ($d_019_i & 65535) >>> 1; //@line 60877
    $228 = $i_018_i + 1 | 0; //@line 60878
    if ($228 >>> 0 < $_0_i21_i >>> 0) {
     $x_0_in17_i = $d_019_i;
     $i_018_i = $228;
     $d_019_i = $227;
    } else {
     $x_0_in_lcssa_i = $d_019_i;
     $d_0_lcssa_i = $227;
     $_0_i22_i = $_0_i21_i;
     $230 = $223;
     break;
    }
   }
  }
  $233 = $c + 372 | 0; //@line 60896
  HEAP32[$233 >> 2] = ($_0_i22_i << 1) + 6 + (HEAP32[$233 >> 2] | 0); //@line 60899
  _e68_cc_set_nz_16($c, 14, $d_0_lcssa_i); //@line 60900
  $237 = HEAP16[$230 >> 1] | 0; //@line 60902
  HEAP16[$230 >> 1] = ($x_0_in_lcssa_i & 1) == 0 ? $237 & -18 : $237 | 17; //@line 60906
  $240 = $c + 156 | 0; //@line 60907
  $241 = HEAP32[$240 >> 2] | 0; //@line 60908
  if (($241 & 1 | 0) != 0) {
   _e68_exception_address($c, $241, 0, 0); //@line 60913
   return;
  }
  $246 = $c + 164 | 0; //@line 60918
  HEAP16[$c + 162 >> 1] = HEAP16[$246 >> 1] | 0; //@line 60921
  $249 = $241 & 16777215; //@line 60922
  $250 = $249 + 1 | 0; //@line 60923
  if ($250 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $256 = HEAP32[$c + 32 >> 2] | 0; //@line 60930
   $_0_i_i_i13 = HEAPU8[$256 + $249 | 0] << 8 | HEAPU8[$256 + $250 | 0]; //@line 60940
  } else {
   $_0_i_i_i13 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $249) | 0; //@line 60948
  }
  HEAP16[$246 >> 1] = $_0_i_i_i13; //@line 60951
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$240 >> 2] = (HEAP32[$240 >> 2] | 0) + 2; //@line 60959
   $278 = $c + 152 | 0; //@line 60960
   HEAP32[$278 >> 2] = (HEAP32[$278 >> 2] | 0) + 2; //@line 60963
   HEAP32[$204 >> 2] = HEAP32[$204 >> 2] & -65536 | $d_0_lcssa_i & 65535; //@line 60968
   return;
  } else {
   _e68_exception_bus($c); //@line 60973
   return;
  }
 } else {
  _e68_exception_illegal($c); //@line 60979
  $382 = $c + 372 | 0; //@line 60980
  HEAP32[$382 >> 2] = (HEAP32[$382 >> 2] | 0) + 2; //@line 60983
  return;
 }
}
function _ope080($c) {
 $c = $c | 0;
 var $3 = 0, $5 = 0, $8 = 0, $9 = 0, $11 = 0, $__i_i = 0, $16 = 0, $19 = 0, $22 = 0, $27 = 0, $29 = 0, $31 = 0, $_0_i222426_i = 0, $_0_i222425_i = 0, $d_0_i = 0, $40 = 0, $41 = 0, $47 = 0, $48 = 0, $_0_i23_i = 0, $d_1_i = 0, $56 = 0, $59 = 0, $60 = 0, $65 = 0, $68 = 0, $69 = 0, $75 = 0, $_0_i_i_i = 0, $97 = 0, $102 = 0, $103 = 0, $105 = 0, $111 = 0, $114 = 0, $_0_i2224_i = 0, $120 = 0, $125 = 0, $126 = 0, $134 = 0, $135 = 0, $_0_i23_i9 = 0, $d_0_i10 = 0, $143 = 0, $146 = 0, $147 = 0, $152 = 0, $155 = 0, $156 = 0, $162 = 0, $_0_i_i_i11 = 0, $184 = 0, $189 = 0, $190 = 0, $192 = 0, $196 = 0, $202 = 0, $203 = 0, $206 = 0, $208 = 0, $209 = 0, $_0_i23_i15 = 0, $d_019_i = 0, $i_018_i = 0, $x_017_i = 0, $211 = 0, $214 = 0, $215 = 0, $217 = 0, $_0_i24_i = 0, $d_0_lcssa_i = 0, $x_0_lcssa_i = 0, $220 = 0, $224 = 0, $227 = 0, $228 = 0, $233 = 0, $236 = 0, $237 = 0, $243 = 0, $_0_i_i_i16 = 0, $265 = 0, $270 = 0, $271 = 0, $273 = 0, $_0_i_i = 0, $282 = 0, $288 = 0, $290 = 0, $291 = 0, $299 = 0, $300 = 0, $d_0_i21 = 0, $308 = 0, $311 = 0, $312 = 0, $317 = 0, $320 = 0, $321 = 0, $327 = 0, $_0_i_i_i22 = 0, $349 = 0, $353 = 0, label = 0;
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 61038
 $5 = $3 >>> 3 & 3; //@line 61040
 if (($5 | 0) == 0) {
  $8 = $c + 88 + (($3 & 7) << 2) | 0; //@line 61043
  $9 = HEAP32[$8 >> 2] | 0; //@line 61044
  $11 = $3 >>> 9 & 7; //@line 61046
  do {
   if (($3 & 32 | 0) == 0) {
    $__i_i = ($11 | 0) == 0 ? 8 : $11; //@line 61053
    $16 = $9 >>> ($__i_i >>> 0); //@line 61055
    if (($9 | 0) < 0) {
     $_0_i222426_i = $__i_i;
     $31 = $16;
     label = 7584; //@line 61059
    } else {
     $d_0_i = $16;
     $_0_i222425_i = $__i_i;
     label = 7585; //@line 61062
    }
   } else {
    $19 = HEAP32[$c + 88 + ($11 << 2) >> 2] & 63; //@line 61067
    if (($19 | 0) == 0) {
     $22 = $c + 166 | 0; //@line 61071
     HEAP16[$22 >> 1] = HEAP16[$22 >> 1] & -2; //@line 61074
     $d_1_i = $9;
     $_0_i23_i = 0;
     break;
    }
    $27 = ($9 | 0) < 0; //@line 61080
    if ($19 >>> 0 < 32) {
     $29 = $9 >>> ($19 >>> 0); //@line 61083
     if ($27) {
      $_0_i222426_i = $19;
      $31 = $29;
      label = 7584; //@line 61087
      break;
     } else {
      $d_0_i = $29;
      $_0_i222425_i = $19;
      label = 7585; //@line 61091
      break;
     }
    }
    $47 = $c + 166 | 0; //@line 61095
    $48 = HEAP16[$47 >> 1] | 0; //@line 61096
    if ($27) {
     HEAP16[$47 >> 1] = $48 | 17; //@line 61100
     $d_1_i = -1;
     $_0_i23_i = $19;
     break;
    } else {
     HEAP16[$47 >> 1] = $48 & -18; //@line 61106
     $d_1_i = 0;
     $_0_i23_i = $19;
     break;
    }
   }
  } while (0);
  if ((label | 0) == 7584) {
   $d_0_i = -1 << 32 - $_0_i222426_i | $31;
   $_0_i222425_i = $_0_i222426_i;
   label = 7585; //@line 61120
  }
  do {
   if ((label | 0) == 7585) {
    $40 = $c + 166 | 0; //@line 61130
    $41 = HEAP16[$40 >> 1] | 0; //@line 61131
    if ((1 << $_0_i222425_i - 1 & $9 | 0) == 0) {
     HEAP16[$40 >> 1] = $41 & -18; //@line 61135
     $d_1_i = $d_0_i;
     $_0_i23_i = $_0_i222425_i;
     break;
    } else {
     HEAP16[$40 >> 1] = $41 | 17; //@line 61140
     $d_1_i = $d_0_i;
     $_0_i23_i = $_0_i222425_i;
     break;
    }
   }
  } while (0);
  $56 = $c + 372 | 0; //@line 61151
  HEAP32[$56 >> 2] = ($_0_i23_i << 1) + 8 + (HEAP32[$56 >> 2] | 0); //@line 61154
  _e68_cc_set_nz_32($c, 14, $d_1_i); //@line 61155
  $59 = $c + 156 | 0; //@line 61156
  $60 = HEAP32[$59 >> 2] | 0; //@line 61157
  if (($60 & 1 | 0) != 0) {
   _e68_exception_address($c, $60, 0, 0); //@line 61162
   return;
  }
  $65 = $c + 164 | 0; //@line 61167
  HEAP16[$c + 162 >> 1] = HEAP16[$65 >> 1] | 0; //@line 61170
  $68 = $60 & 16777215; //@line 61171
  $69 = $68 + 1 | 0; //@line 61172
  if ($69 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $75 = HEAP32[$c + 32 >> 2] | 0; //@line 61179
   $_0_i_i_i = HEAPU8[$75 + $68 | 0] << 8 | HEAPU8[$75 + $69 | 0]; //@line 61189
  } else {
   $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $68) | 0; //@line 61197
  }
  HEAP16[$65 >> 1] = $_0_i_i_i; //@line 61200
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$59 >> 2] = (HEAP32[$59 >> 2] | 0) + 2; //@line 61208
   $97 = $c + 152 | 0; //@line 61209
   HEAP32[$97 >> 2] = (HEAP32[$97 >> 2] | 0) + 2; //@line 61212
   HEAP32[$8 >> 2] = $d_1_i; //@line 61213
   return;
  } else {
   _e68_exception_bus($c); //@line 61218
   return;
  }
 } else if (($5 | 0) == 2) {
  $189 = $c + 88 + (($3 & 7) << 2) | 0; //@line 61225
  $190 = HEAP32[$189 >> 2] | 0; //@line 61226
  $192 = $3 >>> 9 & 7; //@line 61228
  if (($3 & 32 | 0) == 0) {
   $196 = $c + 166 | 0; //@line 61235
   $_0_i23_i15 = ($192 | 0) == 0 ? 8 : $192;
   $209 = $196;
   $208 = (HEAPU16[$196 >> 1] | 0) >>> 4 & 1;
   label = 7621; //@line 61242
  } else {
   $202 = HEAP32[$c + 88 + ($192 << 2) >> 2] & 63; //@line 61246
   $203 = $c + 166 | 0; //@line 61247
   $206 = (HEAPU16[$203 >> 1] | 0) >>> 4 & 1; //@line 61251
   if (($202 | 0) == 0) {
    $x_0_lcssa_i = $206;
    $d_0_lcssa_i = $190;
    $_0_i24_i = 0;
    $217 = $203;
   } else {
    $_0_i23_i15 = $202;
    $209 = $203;
    $208 = $206;
    label = 7621; //@line 61258
   }
  }
  if ((label | 0) == 7621) {
   $x_017_i = $208;
   $i_018_i = 0;
   $d_019_i = $190;
   while (1) {
    $211 = $d_019_i & 1; //@line 61271
    $214 = $x_017_i << 31 | $d_019_i >>> 1; //@line 61274
    $215 = $i_018_i + 1 | 0; //@line 61275
    if ($215 >>> 0 < $_0_i23_i15 >>> 0) {
     $x_017_i = $211;
     $i_018_i = $215;
     $d_019_i = $214;
    } else {
     $x_0_lcssa_i = $211;
     $d_0_lcssa_i = $214;
     $_0_i24_i = $_0_i23_i15;
     $217 = $209;
     break;
    }
   }
  }
  $220 = $c + 372 | 0; //@line 61292
  HEAP32[$220 >> 2] = ($_0_i24_i << 1) + 8 + (HEAP32[$220 >> 2] | 0); //@line 61295
  _e68_cc_set_nz_32($c, 14, $d_0_lcssa_i); //@line 61296
  $224 = HEAP16[$217 >> 1] | 0; //@line 61298
  HEAP16[$217 >> 1] = ($x_0_lcssa_i | 0) == 0 ? $224 & -18 : $224 | 17; //@line 61302
  $227 = $c + 156 | 0; //@line 61303
  $228 = HEAP32[$227 >> 2] | 0; //@line 61304
  if (($228 & 1 | 0) != 0) {
   _e68_exception_address($c, $228, 0, 0); //@line 61309
   return;
  }
  $233 = $c + 164 | 0; //@line 61314
  HEAP16[$c + 162 >> 1] = HEAP16[$233 >> 1] | 0; //@line 61317
  $236 = $228 & 16777215; //@line 61318
  $237 = $236 + 1 | 0; //@line 61319
  if ($237 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $243 = HEAP32[$c + 32 >> 2] | 0; //@line 61326
   $_0_i_i_i16 = HEAPU8[$243 + $236 | 0] << 8 | HEAPU8[$243 + $237 | 0]; //@line 61336
  } else {
   $_0_i_i_i16 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $236) | 0; //@line 61344
  }
  HEAP16[$233 >> 1] = $_0_i_i_i16; //@line 61347
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$227 >> 2] = (HEAP32[$227 >> 2] | 0) + 2; //@line 61355
   $265 = $c + 152 | 0; //@line 61356
   HEAP32[$265 >> 2] = (HEAP32[$265 >> 2] | 0) + 2; //@line 61359
   HEAP32[$189 >> 2] = $d_0_lcssa_i; //@line 61360
   return;
  } else {
   _e68_exception_bus($c); //@line 61365
   return;
  }
 } else if (($5 | 0) == 1) {
  $102 = $c + 88 + (($3 & 7) << 2) | 0; //@line 61372
  $103 = HEAP32[$102 >> 2] | 0; //@line 61373
  $105 = $3 >>> 9 & 7; //@line 61375
  do {
   if (($3 & 32 | 0) == 0) {
    $_0_i2224_i = ($105 | 0) == 0 ? 8 : $105; //@line 61384
    label = 7604; //@line 61385
   } else {
    $111 = HEAP32[$c + 88 + ($105 << 2) >> 2] & 63; //@line 61389
    if (($111 | 0) == 0) {
     $114 = $c + 166 | 0; //@line 61393
     HEAP16[$114 >> 1] = HEAP16[$114 >> 1] & -2; //@line 61396
     $d_0_i10 = $103;
     $_0_i23_i9 = 0;
     break;
    }
    if ($111 >>> 0 < 32) {
     $_0_i2224_i = $111; //@line 61404
     label = 7604; //@line 61405
     break;
    }
    $134 = $c + 166 | 0; //@line 61411
    $135 = HEAP16[$134 >> 1] | 0; //@line 61412
    if (($111 | 0) == 32 & ($103 | 0) < 0) {
     HEAP16[$134 >> 1] = $135 | 17; //@line 61416
     $d_0_i10 = 0;
     $_0_i23_i9 = 32;
     break;
    } else {
     HEAP16[$134 >> 1] = $135 & -18; //@line 61422
     $d_0_i10 = 0;
     $_0_i23_i9 = $111;
     break;
    }
   }
  } while (0);
  do {
   if ((label | 0) == 7604) {
    $120 = $103 >>> ($_0_i2224_i >>> 0); //@line 61431
    $125 = $c + 166 | 0; //@line 61436
    $126 = HEAP16[$125 >> 1] | 0; //@line 61437
    if ((1 << $_0_i2224_i - 1 & $103 | 0) == 0) {
     HEAP16[$125 >> 1] = $126 & -18; //@line 61441
     $d_0_i10 = $120;
     $_0_i23_i9 = $_0_i2224_i;
     break;
    } else {
     HEAP16[$125 >> 1] = $126 | 17; //@line 61446
     $d_0_i10 = $120;
     $_0_i23_i9 = $_0_i2224_i;
     break;
    }
   }
  } while (0);
  $143 = $c + 372 | 0; //@line 61457
  HEAP32[$143 >> 2] = ($_0_i23_i9 << 1) + 8 + (HEAP32[$143 >> 2] | 0); //@line 61460
  _e68_cc_set_nz_32($c, 14, $d_0_i10); //@line 61461
  $146 = $c + 156 | 0; //@line 61462
  $147 = HEAP32[$146 >> 2] | 0; //@line 61463
  if (($147 & 1 | 0) != 0) {
   _e68_exception_address($c, $147, 0, 0); //@line 61468
   return;
  }
  $152 = $c + 164 | 0; //@line 61473
  HEAP16[$c + 162 >> 1] = HEAP16[$152 >> 1] | 0; //@line 61476
  $155 = $147 & 16777215; //@line 61477
  $156 = $155 + 1 | 0; //@line 61478
  if ($156 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $162 = HEAP32[$c + 32 >> 2] | 0; //@line 61485
   $_0_i_i_i11 = HEAPU8[$162 + $155 | 0] << 8 | HEAPU8[$162 + $156 | 0]; //@line 61495
  } else {
   $_0_i_i_i11 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $155) | 0; //@line 61503
  }
  HEAP16[$152 >> 1] = $_0_i_i_i11; //@line 61506
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$146 >> 2] = (HEAP32[$146 >> 2] | 0) + 2; //@line 61514
   $184 = $c + 152 | 0; //@line 61515
   HEAP32[$184 >> 2] = (HEAP32[$184 >> 2] | 0) + 2; //@line 61518
   HEAP32[$102 >> 2] = $d_0_i10; //@line 61519
   return;
  } else {
   _e68_exception_bus($c); //@line 61524
   return;
  }
 } else if (($5 | 0) == 3) {
  $270 = $c + 88 + (($3 & 7) << 2) | 0; //@line 61531
  $271 = HEAP32[$270 >> 2] | 0; //@line 61532
  $273 = $3 >>> 9 & 7; //@line 61534
  if (($3 & 32 | 0) == 0) {
   $_0_i_i = ($273 | 0) == 0 ? 8 : $273; //@line 61542
  } else {
   $_0_i_i = HEAP32[$c + 88 + ($273 << 2) >> 2] & 63; //@line 61548
  }
  $282 = $_0_i_i & 31; //@line 61551
  do {
   if (($282 | 0) == 0) {
    $299 = $c + 166 | 0; //@line 61559
    $300 = HEAP16[$299 >> 1] | 0; //@line 61560
    if (($_0_i_i | 0) != 0 & ($271 | 0) < 0) {
     HEAP16[$299 >> 1] = $300 | 1; //@line 61564
     $d_0_i21 = $271; //@line 61566
     break;
    } else {
     HEAP16[$299 >> 1] = $300 & -2; //@line 61570
     $d_0_i21 = $271; //@line 61571
     break;
    }
   } else {
    $288 = $271 << 32 - $282 | $271 >>> ($282 >>> 0); //@line 61578
    $290 = $c + 166 | 0; //@line 61580
    $291 = HEAP16[$290 >> 1] | 0; //@line 61581
    if (($288 | 0) < 0) {
     HEAP16[$290 >> 1] = $291 | 1; //@line 61585
     $d_0_i21 = $288; //@line 61587
     break;
    } else {
     HEAP16[$290 >> 1] = $291 & -2; //@line 61591
     $d_0_i21 = $288; //@line 61592
     break;
    }
   }
  } while (0);
  $308 = $c + 372 | 0; //@line 61600
  HEAP32[$308 >> 2] = ($_0_i_i << 1) + 8 + (HEAP32[$308 >> 2] | 0); //@line 61603
  _e68_cc_set_nz_32($c, 14, $d_0_i21); //@line 61604
  $311 = $c + 156 | 0; //@line 61605
  $312 = HEAP32[$311 >> 2] | 0; //@line 61606
  if (($312 & 1 | 0) != 0) {
   _e68_exception_address($c, $312, 0, 0); //@line 61611
   return;
  }
  $317 = $c + 164 | 0; //@line 61616
  HEAP16[$c + 162 >> 1] = HEAP16[$317 >> 1] | 0; //@line 61619
  $320 = $312 & 16777215; //@line 61620
  $321 = $320 + 1 | 0; //@line 61621
  if ($321 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $327 = HEAP32[$c + 32 >> 2] | 0; //@line 61628
   $_0_i_i_i22 = HEAPU8[$327 + $320 | 0] << 8 | HEAPU8[$327 + $321 | 0]; //@line 61638
  } else {
   $_0_i_i_i22 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $320) | 0; //@line 61646
  }
  HEAP16[$317 >> 1] = $_0_i_i_i22; //@line 61649
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$311 >> 2] = (HEAP32[$311 >> 2] | 0) + 2; //@line 61657
   $349 = $c + 152 | 0; //@line 61658
   HEAP32[$349 >> 2] = (HEAP32[$349 >> 2] | 0) + 2; //@line 61661
   HEAP32[$270 >> 2] = $d_0_i21; //@line 61662
   return;
  } else {
   _e68_exception_bus($c); //@line 61667
   return;
  }
 } else {
  _e68_exception_illegal($c); //@line 61673
  $353 = $c + 372 | 0; //@line 61674
  HEAP32[$353 >> 2] = (HEAP32[$353 >> 2] | 0) + 2; //@line 61677
  return;
 }
}
function _ope0c0($c) {
 $c = $c | 0;
 var $s = 0, $4 = 0, $13 = 0, $16 = 0, $17 = 0, $23 = 0, $24 = 0, $27 = 0, $28 = 0, $33 = 0, $36 = 0, $37 = 0, $43 = 0, $_0_i_i = 0, $65 = 0, sp = 0;
 sp = STACKTOP; //@line 61696
 STACKTOP = STACKTOP + 8 | 0; //@line 61696
 $s = sp | 0; //@line 61697
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 61701
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 508, 16) | 0) != 0) {
  STACKTOP = sp; //@line 61708
  return;
 }
 if ((_e68_ea_get_val16($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 61715
  return;
 }
 $13 = HEAP16[$s >> 1] | 0; //@line 61718
 $16 = ($13 & 65535) >>> 1 | $13 & -32768; //@line 61721
 $17 = $c + 372 | 0; //@line 61722
 HEAP32[$17 >> 2] = (HEAP32[$17 >> 2] | 0) + 8; //@line 61725
 _e68_cc_set_nz_16($c, 14, $16); //@line 61726
 $23 = $c + 166 | 0; //@line 61730
 $24 = HEAP16[$23 >> 1] | 0; //@line 61731
 HEAP16[$23 >> 1] = (HEAP16[$s >> 1] & 1) == 0 ? $24 & -18 : $24 | 17; //@line 61735
 $27 = $c + 156 | 0; //@line 61736
 $28 = HEAP32[$27 >> 2] | 0; //@line 61737
 if (($28 & 1 | 0) != 0) {
  _e68_exception_address($c, $28, 0, 0); //@line 61742
  STACKTOP = sp; //@line 61744
  return;
 }
 $33 = $c + 164 | 0; //@line 61747
 HEAP16[$c + 162 >> 1] = HEAP16[$33 >> 1] | 0; //@line 61750
 $36 = $28 & 16777215; //@line 61751
 $37 = $36 + 1 | 0; //@line 61752
 if ($37 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $43 = HEAP32[$c + 32 >> 2] | 0; //@line 61759
  $_0_i_i = HEAPU8[$43 + $36 | 0] << 8 | HEAPU8[$43 + $37 | 0]; //@line 61769
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $36) | 0; //@line 61777
 }
 HEAP16[$33 >> 1] = $_0_i_i; //@line 61780
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$27 >> 2] = (HEAP32[$27 >> 2] | 0) + 2; //@line 61788
  $65 = $c + 152 | 0; //@line 61789
  HEAP32[$65 >> 2] = (HEAP32[$65 >> 2] | 0) + 2; //@line 61792
  _e68_ea_set_val16($c, $16) | 0; //@line 61793
  STACKTOP = sp; //@line 61795
  return;
 } else {
  _e68_exception_bus($c); //@line 61798
  STACKTOP = sp; //@line 61800
  return;
 }
}
function _ope100($c) {
 $c = $c | 0;
 var $3 = 0, $5 = 0, $8 = 0, $9 = 0, $11 = 0, $17 = 0, $21 = 0, $_0_i32_i = 0, $27 = 0, $29 = 0, $36 = 0, $37 = 0, $storemerge_i = 0, $40 = 0, $41 = 0, $54 = 0, $56 = 0, $58 = 0, $60 = 0, $62 = 0, $65 = 0, $_0_i31_i = 0, $d_0_i = 0, $73 = 0, $76 = 0, $77 = 0, $82 = 0, $85 = 0, $86 = 0, $92 = 0, $_0_i_i_i = 0, $114 = 0, $123 = 0, $124 = 0, $126 = 0, $132 = 0, $136 = 0, $_0_i23_i = 0, $142 = 0, $144 = 0, $149 = 0, $150 = 0, $161 = 0, $165 = 0, $_0_i22_i = 0, $d_0_i9 = 0, $171 = 0, $174 = 0, $175 = 0, $180 = 0, $183 = 0, $184 = 0, $190 = 0, $_0_i_i_i10 = 0, $212 = 0, $221 = 0, $223 = 0, $225 = 0, $229 = 0, $234 = 0, $235 = 0, $x_017_i = 0, $x_01726_i = 0, $239 = 0, $_0_i24_i = 0, $x_020_i = 0, $d_019_i = 0, $i_018_i = 0, $243 = 0, $244 = 0, $x_0_i = 0, $246 = 0, $_0_i25_i = 0, $x_0_lcssa_i = 0, $d_0_lcssa_i = 0, $249 = 0, $254 = 0, $257 = 0, $258 = 0, $263 = 0, $266 = 0, $267 = 0, $273 = 0, $_0_i_i_i16 = 0, $295 = 0, $304 = 0, $305 = 0, $306 = 0, $308 = 0, $_0_i_i = 0, $317 = 0, $320 = 0, $324 = 0, $325 = 0, $328 = 0, $329 = 0, $340 = 0, $344 = 0, $d_0_i20 = 0, $350 = 0, $353 = 0, $354 = 0, $359 = 0, $362 = 0, $363 = 0, $369 = 0, $_0_i_i_i21 = 0, $391 = 0, $399 = 0, label = 0;
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 61859
 $5 = $3 >>> 3 & 3; //@line 61861
 if (($5 | 0) == 1) {
  $123 = $c + 88 + (($3 & 7) << 2) | 0; //@line 61864
  $124 = HEAP32[$123 >> 2] | 0; //@line 61865
  $126 = $3 >>> 9 & 7; //@line 61867
  do {
   if (($3 & 32 | 0) == 0) {
    $_0_i23_i = ($126 | 0) == 0 ? 8 : $126; //@line 61876
    label = 7708; //@line 61877
   } else {
    $132 = HEAP32[$c + 88 + ($126 << 2) >> 2] & 63; //@line 61881
    if (($132 | 0) != 0) {
     $_0_i23_i = $132; //@line 61885
     label = 7708; //@line 61886
     break;
    }
    $136 = $c + 166 | 0; //@line 61890
    HEAP16[$136 >> 1] = HEAP16[$136 >> 1] & -2; //@line 61893
    $d_0_i9 = $124 & 255;
    $_0_i22_i = 0;
   }
  } while (0);
  L9637 : do {
   if ((label | 0) == 7708) {
    if ($_0_i23_i >>> 0 < 8) {
     $142 = $124 & 255; //@line 61904
     $144 = $142 << $_0_i23_i & 255; //@line 61906
     $149 = $c + 166 | 0; //@line 61911
     $150 = HEAP16[$149 >> 1] | 0; //@line 61912
     if ((1 << 8 - $_0_i23_i & $142 | 0) == 0) {
      HEAP16[$149 >> 1] = $150 & -18; //@line 61916
      $d_0_i9 = $144;
      $_0_i22_i = $_0_i23_i;
      break;
     } else {
      HEAP16[$149 >> 1] = $150 | 17; //@line 61921
      $d_0_i9 = $144;
      $_0_i22_i = $_0_i23_i;
      break;
     }
    }
    do {
     if (($_0_i23_i | 0) == 8) {
      if (($124 & 1 | 0) == 0) {
       break;
      }
      $161 = $c + 166 | 0; //@line 61937
      HEAP16[$161 >> 1] = HEAP16[$161 >> 1] | 17; //@line 61940
      $d_0_i9 = 0;
      $_0_i22_i = 8;
      break L9637;
     }
    } while (0);
    $165 = $c + 166 | 0; //@line 61946
    HEAP16[$165 >> 1] = HEAP16[$165 >> 1] & -18; //@line 61949
    $d_0_i9 = 0;
    $_0_i22_i = $_0_i23_i;
   }
  } while (0);
  $171 = $c + 372 | 0; //@line 61957
  HEAP32[$171 >> 2] = ($_0_i22_i << 1) + 6 + (HEAP32[$171 >> 2] | 0); //@line 61960
  _e68_cc_set_nz_8($c, 14, $d_0_i9); //@line 61961
  $174 = $c + 156 | 0; //@line 61962
  $175 = HEAP32[$174 >> 2] | 0; //@line 61963
  if (($175 & 1 | 0) != 0) {
   _e68_exception_address($c, $175, 0, 0); //@line 61968
   return;
  }
  $180 = $c + 164 | 0; //@line 61973
  HEAP16[$c + 162 >> 1] = HEAP16[$180 >> 1] | 0; //@line 61976
  $183 = $175 & 16777215; //@line 61977
  $184 = $183 + 1 | 0; //@line 61978
  if ($184 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $190 = HEAP32[$c + 32 >> 2] | 0; //@line 61985
   $_0_i_i_i10 = HEAPU8[$190 + $183 | 0] << 8 | HEAPU8[$190 + $184 | 0]; //@line 61995
  } else {
   $_0_i_i_i10 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $183) | 0; //@line 62003
  }
  HEAP16[$180 >> 1] = $_0_i_i_i10; //@line 62006
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$174 >> 2] = (HEAP32[$174 >> 2] | 0) + 2; //@line 62014
   $212 = $c + 152 | 0; //@line 62015
   HEAP32[$212 >> 2] = (HEAP32[$212 >> 2] | 0) + 2; //@line 62018
   HEAP32[$123 >> 2] = HEAP32[$123 >> 2] & -256 | $d_0_i9 & 255; //@line 62023
   return;
  } else {
   _e68_exception_bus($c); //@line 62028
   return;
  }
 } else if (($5 | 0) == 0) {
  $8 = $c + 88 + (($3 & 7) << 2) | 0; //@line 62035
  $9 = HEAP32[$8 >> 2] | 0; //@line 62036
  $11 = $3 >>> 9 & 7; //@line 62038
  do {
   if (($3 & 32 | 0) == 0) {
    $_0_i32_i = ($11 | 0) == 0 ? 8 : $11; //@line 62047
    label = 7685; //@line 62048
   } else {
    $17 = HEAP32[$c + 88 + ($11 << 2) >> 2] & 63; //@line 62052
    if (($17 | 0) != 0) {
     $_0_i32_i = $17; //@line 62056
     label = 7685; //@line 62057
     break;
    }
    $21 = $c + 166 | 0; //@line 62061
    HEAP16[$21 >> 1] = HEAP16[$21 >> 1] & -4; //@line 62064
    $d_0_i = $9 & 255;
    $_0_i31_i = 0;
   }
  } while (0);
  do {
   if ((label | 0) == 7685) {
    if ($_0_i32_i >>> 0 < 8) {
     $27 = $9 & 255; //@line 62075
     $29 = $27 << $_0_i32_i & 255; //@line 62077
     $36 = $c + 166 | 0; //@line 62084
     $37 = HEAP16[$36 >> 1] | 0; //@line 62085
     $storemerge_i = (1 << 8 - $_0_i32_i & $27 | 0) == 0 ? $37 & -18 : $37 | 17; //@line 62088
     HEAP16[$36 >> 1] = $storemerge_i; //@line 62089
     $40 = 255 << 7 - $_0_i32_i & 255; //@line 62090
     $41 = $40 & $9; //@line 62091
     if (($41 | 0) == 0 | ($41 | 0) == ($40 | 0)) {
      HEAP16[$36 >> 1] = $storemerge_i & -3; //@line 62098
      $d_0_i = $29;
      $_0_i31_i = $_0_i32_i;
      break;
     } else {
      HEAP16[$36 >> 1] = $storemerge_i | 2; //@line 62103
      $d_0_i = $29;
      $_0_i31_i = $_0_i32_i;
      break;
     }
    }
    do {
     if (($_0_i32_i | 0) == 8) {
      if (($9 & 1 | 0) == 0) {
       label = 7692; //@line 62117
       break;
      }
      $54 = $c + 166 | 0; //@line 62120
      $56 = HEAP16[$54 >> 1] | 17; //@line 62122
      HEAP16[$54 >> 1] = $56; //@line 62123
      $62 = $56; //@line 62125
     } else {
      label = 7692; //@line 62127
     }
    } while (0);
    if ((label | 0) == 7692) {
     $58 = $c + 166 | 0; //@line 62131
     $60 = HEAP16[$58 >> 1] & -18; //@line 62133
     HEAP16[$58 >> 1] = $60; //@line 62134
     $62 = $60; //@line 62135
    }
    $65 = $c + 166 | 0; //@line 62140
    if (($9 & 255 | 0) == 0) {
     HEAP16[$65 >> 1] = $62 & -3; //@line 62144
     $d_0_i = 0;
     $_0_i31_i = $_0_i32_i;
     break;
    } else {
     HEAP16[$65 >> 1] = $62 | 2; //@line 62149
     $d_0_i = 0;
     $_0_i31_i = $_0_i32_i;
     break;
    }
   }
  } while (0);
  $73 = $c + 372 | 0; //@line 62160
  HEAP32[$73 >> 2] = ($_0_i31_i << 1) + 6 + (HEAP32[$73 >> 2] | 0); //@line 62163
  _e68_cc_set_nz_8($c, 12, $d_0_i); //@line 62164
  $76 = $c + 156 | 0; //@line 62165
  $77 = HEAP32[$76 >> 2] | 0; //@line 62166
  if (($77 & 1 | 0) != 0) {
   _e68_exception_address($c, $77, 0, 0); //@line 62171
   return;
  }
  $82 = $c + 164 | 0; //@line 62176
  HEAP16[$c + 162 >> 1] = HEAP16[$82 >> 1] | 0; //@line 62179
  $85 = $77 & 16777215; //@line 62180
  $86 = $85 + 1 | 0; //@line 62181
  if ($86 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $92 = HEAP32[$c + 32 >> 2] | 0; //@line 62188
   $_0_i_i_i = HEAPU8[$92 + $85 | 0] << 8 | HEAPU8[$92 + $86 | 0]; //@line 62198
  } else {
   $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $85) | 0; //@line 62206
  }
  HEAP16[$82 >> 1] = $_0_i_i_i; //@line 62209
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$76 >> 2] = (HEAP32[$76 >> 2] | 0) + 2; //@line 62217
   $114 = $c + 152 | 0; //@line 62218
   HEAP32[$114 >> 2] = (HEAP32[$114 >> 2] | 0) + 2; //@line 62221
   HEAP32[$8 >> 2] = HEAP32[$8 >> 2] & -256 | $d_0_i & 255; //@line 62226
   return;
  } else {
   _e68_exception_bus($c); //@line 62231
   return;
  }
 } else if (($5 | 0) == 2) {
  $221 = $c + 88 + (($3 & 7) << 2) | 0; //@line 62238
  $223 = HEAP32[$221 >> 2] & 255; //@line 62241
  $225 = $3 >>> 9 & 7; //@line 62243
  if (($3 & 32 | 0) == 0) {
   $229 = $c + 166 | 0; //@line 62250
   $_0_i24_i = ($225 | 0) == 0 ? 8 : $225;
   $239 = $229;
   $x_01726_i = (HEAPU16[$229 >> 1] | 0) >>> 4 & 1;
   label = 7727; //@line 62256
  } else {
   $234 = HEAP32[$c + 88 + ($225 << 2) >> 2] & 63; //@line 62260
   $235 = $c + 166 | 0; //@line 62261
   $x_017_i = (HEAPU16[$235 >> 1] | 0) >>> 4 & 1; //@line 62264
   if (($234 | 0) == 0) {
    $d_0_lcssa_i = $223;
    $x_0_lcssa_i = $x_017_i;
    $_0_i25_i = 0;
    $246 = $235;
   } else {
    $_0_i24_i = $234;
    $239 = $235;
    $x_01726_i = $x_017_i;
    label = 7727; //@line 62271
   }
  }
  if ((label | 0) == 7727) {
   $i_018_i = 0;
   $d_019_i = $223;
   $x_020_i = $x_01726_i;
   while (1) {
    $243 = $d_019_i << 1 | $x_020_i; //@line 62286
    $244 = $i_018_i + 1 | 0; //@line 62287
    $x_0_i = ($d_019_i & 65535) >>> 7 & 1; //@line 62288
    if ($244 >>> 0 < $_0_i24_i >>> 0) {
     $i_018_i = $244;
     $d_019_i = $243;
     $x_020_i = $x_0_i;
    } else {
     $d_0_lcssa_i = $243;
     $x_0_lcssa_i = $x_0_i;
     $_0_i25_i = $_0_i24_i;
     $246 = $239;
     break;
    }
   }
  }
  $249 = $c + 372 | 0; //@line 62305
  HEAP32[$249 >> 2] = ($_0_i25_i << 1) + 6 + (HEAP32[$249 >> 2] | 0); //@line 62308
  _e68_cc_set_nz_8($c, 14, $d_0_lcssa_i & 255); //@line 62310
  $254 = HEAP16[$246 >> 1] | 0; //@line 62312
  HEAP16[$246 >> 1] = $x_0_lcssa_i << 16 >> 16 == 0 ? $254 & -18 : $254 | 17; //@line 62316
  $257 = $c + 156 | 0; //@line 62317
  $258 = HEAP32[$257 >> 2] | 0; //@line 62318
  if (($258 & 1 | 0) != 0) {
   _e68_exception_address($c, $258, 0, 0); //@line 62323
   return;
  }
  $263 = $c + 164 | 0; //@line 62328
  HEAP16[$c + 162 >> 1] = HEAP16[$263 >> 1] | 0; //@line 62331
  $266 = $258 & 16777215; //@line 62332
  $267 = $266 + 1 | 0; //@line 62333
  if ($267 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $273 = HEAP32[$c + 32 >> 2] | 0; //@line 62340
   $_0_i_i_i16 = HEAPU8[$273 + $266 | 0] << 8 | HEAPU8[$273 + $267 | 0]; //@line 62350
  } else {
   $_0_i_i_i16 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $266) | 0; //@line 62358
  }
  HEAP16[$263 >> 1] = $_0_i_i_i16; //@line 62361
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$257 >> 2] = (HEAP32[$257 >> 2] | 0) + 2; //@line 62369
   $295 = $c + 152 | 0; //@line 62370
   HEAP32[$295 >> 2] = (HEAP32[$295 >> 2] | 0) + 2; //@line 62373
   HEAP32[$221 >> 2] = HEAP32[$221 >> 2] & -256 | $d_0_lcssa_i & 255; //@line 62379
   return;
  } else {
   _e68_exception_bus($c); //@line 62384
   return;
  }
 } else if (($5 | 0) == 3) {
  $304 = $c + 88 + (($3 & 7) << 2) | 0; //@line 62391
  $305 = HEAP32[$304 >> 2] | 0; //@line 62392
  $306 = $305 & 255; //@line 62393
  $308 = $3 >>> 9 & 7; //@line 62395
  if (($3 & 32 | 0) == 0) {
   $_0_i_i = ($308 | 0) == 0 ? 8 : $308; //@line 62403
  } else {
   $_0_i_i = HEAP32[$c + 88 + ($308 << 2) >> 2] & 63; //@line 62409
  }
  $317 = $_0_i_i & 7; //@line 62412
  L9728 : do {
   if (($317 | 0) == 0) {
    do {
     if (($_0_i_i | 0) != 0) {
      if (($305 & 1 | 0) == 0) {
       break;
      }
      $340 = $c + 166 | 0; //@line 62427
      HEAP16[$340 >> 1] = HEAP16[$340 >> 1] | 1; //@line 62430
      $d_0_i20 = $306; //@line 62432
      break L9728;
     }
    } while (0);
    $344 = $c + 166 | 0; //@line 62436
    HEAP16[$344 >> 1] = HEAP16[$344 >> 1] & -2; //@line 62439
    $d_0_i20 = $306; //@line 62440
   } else {
    $320 = $305 & 255; //@line 62442
    $324 = $320 >>> ((8 - $317 | 0) >>> 0) | $320 << $317; //@line 62446
    $325 = $324 & 255; //@line 62447
    $328 = $c + 166 | 0; //@line 62450
    $329 = HEAP16[$328 >> 1] | 0; //@line 62451
    if (($324 & 1 | 0) == 0) {
     HEAP16[$328 >> 1] = $329 & -2; //@line 62455
     $d_0_i20 = $325; //@line 62456
     break;
    } else {
     HEAP16[$328 >> 1] = $329 | 1; //@line 62460
     $d_0_i20 = $325; //@line 62462
     break;
    }
   }
  } while (0);
  $350 = $c + 372 | 0; //@line 62470
  HEAP32[$350 >> 2] = ($_0_i_i << 1) + 6 + (HEAP32[$350 >> 2] | 0); //@line 62473
  _e68_cc_set_nz_8($c, 14, $d_0_i20); //@line 62474
  $353 = $c + 156 | 0; //@line 62475
  $354 = HEAP32[$353 >> 2] | 0; //@line 62476
  if (($354 & 1 | 0) != 0) {
   _e68_exception_address($c, $354, 0, 0); //@line 62481
   return;
  }
  $359 = $c + 164 | 0; //@line 62486
  HEAP16[$c + 162 >> 1] = HEAP16[$359 >> 1] | 0; //@line 62489
  $362 = $354 & 16777215; //@line 62490
  $363 = $362 + 1 | 0; //@line 62491
  if ($363 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $369 = HEAP32[$c + 32 >> 2] | 0; //@line 62498
   $_0_i_i_i21 = HEAPU8[$369 + $362 | 0] << 8 | HEAPU8[$369 + $363 | 0]; //@line 62508
  } else {
   $_0_i_i_i21 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $362) | 0; //@line 62516
  }
  HEAP16[$359 >> 1] = $_0_i_i_i21; //@line 62519
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$353 >> 2] = (HEAP32[$353 >> 2] | 0) + 2; //@line 62527
   $391 = $c + 152 | 0; //@line 62528
   HEAP32[$391 >> 2] = (HEAP32[$391 >> 2] | 0) + 2; //@line 62531
   HEAP32[$304 >> 2] = HEAP32[$304 >> 2] & -256 | $d_0_i20 & 255; //@line 62536
   return;
  } else {
   _e68_exception_bus($c); //@line 62541
   return;
  }
 } else {
  _e68_exception_illegal($c); //@line 62547
  $399 = $c + 372 | 0; //@line 62548
  HEAP32[$399 >> 2] = (HEAP32[$399 >> 2] | 0) + 2; //@line 62551
  return;
 }
}
function _ope140($c) {
 $c = $c | 0;
 var $3 = 0, $5 = 0, $8 = 0, $9 = 0, $11 = 0, $17 = 0, $21 = 0, $_0_i3233_i = 0, $27 = 0, $29 = 0, $36 = 0, $37 = 0, $storemerge_i = 0, $40 = 0, $41 = 0, $54 = 0, $56 = 0, $58 = 0, $60 = 0, $62 = 0, $65 = 0, $_0_i31_i = 0, $d_0_i = 0, $73 = 0, $76 = 0, $77 = 0, $82 = 0, $85 = 0, $86 = 0, $92 = 0, $_0_i_i_i = 0, $114 = 0, $123 = 0, $124 = 0, $126 = 0, $132 = 0, $136 = 0, $_0_i2324_i = 0, $142 = 0, $144 = 0, $149 = 0, $150 = 0, $161 = 0, $165 = 0, $_0_i22_i = 0, $d_0_i9 = 0, $171 = 0, $174 = 0, $175 = 0, $180 = 0, $183 = 0, $184 = 0, $190 = 0, $_0_i_i_i10 = 0, $212 = 0, $221 = 0, $223 = 0, $225 = 0, $229 = 0, $234 = 0, $235 = 0, $_lobit_i = 0, $_lobit25_i = 0, $239 = 0, $_0_i23_i = 0, $d_019_i = 0, $i_018_i = 0, $x_017_i = 0, $241 = 0, $243 = 0, $244 = 0, $246 = 0, $_0_i24_i = 0, $d_0_lcssa_i = 0, $x_0_lcssa_i = 0, $249 = 0, $253 = 0, $256 = 0, $257 = 0, $262 = 0, $265 = 0, $266 = 0, $272 = 0, $_0_i_i_i15 = 0, $294 = 0, $303 = 0, $304 = 0, $305 = 0, $307 = 0, $_0_i_i = 0, $316 = 0, $319 = 0, $323 = 0, $324 = 0, $327 = 0, $328 = 0, $339 = 0, $343 = 0, $d_0_i19 = 0, $349 = 0, $352 = 0, $353 = 0, $358 = 0, $361 = 0, $362 = 0, $368 = 0, $_0_i_i_i20 = 0, $390 = 0, $398 = 0, label = 0;
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 62611
 $5 = $3 >>> 3 & 3; //@line 62613
 if (($5 | 0) == 1) {
  $123 = $c + 88 + (($3 & 7) << 2) | 0; //@line 62616
  $124 = HEAP32[$123 >> 2] | 0; //@line 62617
  $126 = $3 >>> 9 & 7; //@line 62619
  L9755 : do {
   if (($3 & 32 | 0) == 0) {
    $_0_i2324_i = ($126 | 0) == 0 ? 8 : $126; //@line 62628
    label = 7800; //@line 62629
   } else {
    $132 = HEAP32[$c + 88 + ($126 << 2) >> 2] & 63; //@line 62633
    if (($132 | 0) == 0) {
     $136 = $c + 166 | 0; //@line 62638
     HEAP16[$136 >> 1] = HEAP16[$136 >> 1] & -2; //@line 62641
     $d_0_i9 = $124 & 65535;
     $_0_i22_i = 0;
     break;
    }
    if ($132 >>> 0 < 16) {
     $_0_i2324_i = $132; //@line 62649
     label = 7800; //@line 62650
     break;
    }
    do {
     if (($132 | 0) == 16) {
      if (($124 & 1 | 0) == 0) {
       break;
      }
      $161 = $c + 166 | 0; //@line 62663
      HEAP16[$161 >> 1] = HEAP16[$161 >> 1] | 17; //@line 62666
      $d_0_i9 = 0;
      $_0_i22_i = 16;
      break L9755;
     }
    } while (0);
    $165 = $c + 166 | 0; //@line 62672
    HEAP16[$165 >> 1] = HEAP16[$165 >> 1] & -18; //@line 62675
    $d_0_i9 = 0;
    $_0_i22_i = $132;
   }
  } while (0);
  do {
   if ((label | 0) == 7800) {
    $142 = $124 & 65535; //@line 62682
    $144 = $142 << $_0_i2324_i & 65535; //@line 62684
    $149 = $c + 166 | 0; //@line 62689
    $150 = HEAP16[$149 >> 1] | 0; //@line 62690
    if ((1 << 16 - $_0_i2324_i & $142 | 0) == 0) {
     HEAP16[$149 >> 1] = $150 & -18; //@line 62694
     $d_0_i9 = $144;
     $_0_i22_i = $_0_i2324_i;
     break;
    } else {
     HEAP16[$149 >> 1] = $150 | 17; //@line 62699
     $d_0_i9 = $144;
     $_0_i22_i = $_0_i2324_i;
     break;
    }
   }
  } while (0);
  $171 = $c + 372 | 0; //@line 62710
  HEAP32[$171 >> 2] = ($_0_i22_i << 1) + 6 + (HEAP32[$171 >> 2] | 0); //@line 62713
  _e68_cc_set_nz_16($c, 14, $d_0_i9); //@line 62714
  $174 = $c + 156 | 0; //@line 62715
  $175 = HEAP32[$174 >> 2] | 0; //@line 62716
  if (($175 & 1 | 0) != 0) {
   _e68_exception_address($c, $175, 0, 0); //@line 62721
   return;
  }
  $180 = $c + 164 | 0; //@line 62726
  HEAP16[$c + 162 >> 1] = HEAP16[$180 >> 1] | 0; //@line 62729
  $183 = $175 & 16777215; //@line 62730
  $184 = $183 + 1 | 0; //@line 62731
  if ($184 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $190 = HEAP32[$c + 32 >> 2] | 0; //@line 62738
   $_0_i_i_i10 = HEAPU8[$190 + $183 | 0] << 8 | HEAPU8[$190 + $184 | 0]; //@line 62748
  } else {
   $_0_i_i_i10 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $183) | 0; //@line 62756
  }
  HEAP16[$180 >> 1] = $_0_i_i_i10; //@line 62759
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$174 >> 2] = (HEAP32[$174 >> 2] | 0) + 2; //@line 62767
   $212 = $c + 152 | 0; //@line 62768
   HEAP32[$212 >> 2] = (HEAP32[$212 >> 2] | 0) + 2; //@line 62771
   HEAP32[$123 >> 2] = HEAP32[$123 >> 2] & -65536 | $d_0_i9 & 65535; //@line 62776
   return;
  } else {
   _e68_exception_bus($c); //@line 62781
   return;
  }
 } else if (($5 | 0) == 2) {
  $221 = $c + 88 + (($3 & 7) << 2) | 0; //@line 62788
  $223 = HEAP32[$221 >> 2] & 65535; //@line 62790
  $225 = $3 >>> 9 & 7; //@line 62792
  if (($3 & 32 | 0) == 0) {
   $229 = $c + 166 | 0; //@line 62799
   $_0_i23_i = ($225 | 0) == 0 ? 8 : $225;
   $239 = $229;
   $_lobit25_i = (HEAPU16[$229 >> 1] | 0) >>> 4 & 1;
   label = 7818; //@line 62805
  } else {
   $234 = HEAP32[$c + 88 + ($225 << 2) >> 2] & 63; //@line 62809
   $235 = $c + 166 | 0; //@line 62810
   $_lobit_i = (HEAPU16[$235 >> 1] | 0) >>> 4 & 1; //@line 62813
   if (($234 | 0) == 0) {
    $x_0_lcssa_i = $_lobit_i;
    $d_0_lcssa_i = $223;
    $_0_i24_i = 0;
    $246 = $235;
   } else {
    $_0_i23_i = $234;
    $239 = $235;
    $_lobit25_i = $_lobit_i;
    label = 7818; //@line 62820
   }
  }
  if ((label | 0) == 7818) {
   $x_017_i = $_lobit25_i;
   $i_018_i = 0;
   $d_019_i = $223;
   while (1) {
    $241 = ($d_019_i & 65535) >>> 15; //@line 62833
    $243 = $x_017_i | $d_019_i << 1; //@line 62835
    $244 = $i_018_i + 1 | 0; //@line 62836
    if ($244 >>> 0 < $_0_i23_i >>> 0) {
     $x_017_i = $241;
     $i_018_i = $244;
     $d_019_i = $243;
    } else {
     $x_0_lcssa_i = $241;
     $d_0_lcssa_i = $243;
     $_0_i24_i = $_0_i23_i;
     $246 = $239;
     break;
    }
   }
  }
  $249 = $c + 372 | 0; //@line 62853
  HEAP32[$249 >> 2] = ($_0_i24_i << 1) + 6 + (HEAP32[$249 >> 2] | 0); //@line 62856
  _e68_cc_set_nz_16($c, 14, $d_0_lcssa_i); //@line 62857
  $253 = HEAP16[$246 >> 1] | 0; //@line 62859
  HEAP16[$246 >> 1] = $x_0_lcssa_i << 16 >> 16 == 0 ? $253 & -18 : $253 | 17; //@line 62863
  $256 = $c + 156 | 0; //@line 62864
  $257 = HEAP32[$256 >> 2] | 0; //@line 62865
  if (($257 & 1 | 0) != 0) {
   _e68_exception_address($c, $257, 0, 0); //@line 62870
   return;
  }
  $262 = $c + 164 | 0; //@line 62875
  HEAP16[$c + 162 >> 1] = HEAP16[$262 >> 1] | 0; //@line 62878
  $265 = $257 & 16777215; //@line 62879
  $266 = $265 + 1 | 0; //@line 62880
  if ($266 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $272 = HEAP32[$c + 32 >> 2] | 0; //@line 62887
   $_0_i_i_i15 = HEAPU8[$272 + $265 | 0] << 8 | HEAPU8[$272 + $266 | 0]; //@line 62897
  } else {
   $_0_i_i_i15 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $265) | 0; //@line 62905
  }
  HEAP16[$262 >> 1] = $_0_i_i_i15; //@line 62908
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$256 >> 2] = (HEAP32[$256 >> 2] | 0) + 2; //@line 62916
   $294 = $c + 152 | 0; //@line 62917
   HEAP32[$294 >> 2] = (HEAP32[$294 >> 2] | 0) + 2; //@line 62920
   HEAP32[$221 >> 2] = HEAP32[$221 >> 2] & -65536 | $d_0_lcssa_i & 65535; //@line 62925
   return;
  } else {
   _e68_exception_bus($c); //@line 62930
   return;
  }
 } else if (($5 | 0) == 0) {
  $8 = $c + 88 + (($3 & 7) << 2) | 0; //@line 62937
  $9 = HEAP32[$8 >> 2] | 0; //@line 62938
  $11 = $3 >>> 9 & 7; //@line 62940
  do {
   if (($3 & 32 | 0) == 0) {
    $_0_i3233_i = ($11 | 0) == 0 ? 8 : $11; //@line 62949
    label = 7777; //@line 62950
   } else {
    $17 = HEAP32[$c + 88 + ($11 << 2) >> 2] & 63; //@line 62954
    if (($17 | 0) == 0) {
     $21 = $c + 166 | 0; //@line 62959
     HEAP16[$21 >> 1] = HEAP16[$21 >> 1] & -4; //@line 62962
     $d_0_i = $9 & 65535;
     $_0_i31_i = 0;
     break;
    }
    if ($17 >>> 0 < 16) {
     $_0_i3233_i = $17; //@line 62970
     label = 7777; //@line 62971
     break;
    }
    do {
     if (($17 | 0) == 16) {
      if (($9 & 1 | 0) == 0) {
       label = 7783; //@line 62982
       break;
      }
      $54 = $c + 166 | 0; //@line 62985
      $56 = HEAP16[$54 >> 1] | 17; //@line 62987
      HEAP16[$54 >> 1] = $56; //@line 62988
      $62 = $56; //@line 62990
     } else {
      label = 7783; //@line 62992
     }
    } while (0);
    if ((label | 0) == 7783) {
     $58 = $c + 166 | 0; //@line 62996
     $60 = HEAP16[$58 >> 1] & -18; //@line 62998
     HEAP16[$58 >> 1] = $60; //@line 62999
     $62 = $60; //@line 63000
    }
    $65 = $c + 166 | 0; //@line 63005
    if (($9 & 65535 | 0) == 0) {
     HEAP16[$65 >> 1] = $62 & -3; //@line 63009
     $d_0_i = 0;
     $_0_i31_i = $17;
     break;
    } else {
     HEAP16[$65 >> 1] = $62 | 2; //@line 63014
     $d_0_i = 0;
     $_0_i31_i = $17;
     break;
    }
   }
  } while (0);
  do {
   if ((label | 0) == 7777) {
    $27 = $9 & 65535; //@line 63024
    $29 = $27 << $_0_i3233_i & 65535; //@line 63026
    $36 = $c + 166 | 0; //@line 63033
    $37 = HEAP16[$36 >> 1] | 0; //@line 63034
    $storemerge_i = (1 << 16 - $_0_i3233_i & $27 | 0) == 0 ? $37 & -18 : $37 | 17; //@line 63037
    HEAP16[$36 >> 1] = $storemerge_i; //@line 63038
    $40 = 65535 << 15 - $_0_i3233_i & 65535; //@line 63039
    $41 = $40 & $9; //@line 63040
    if (($41 | 0) == 0 | ($41 | 0) == ($40 | 0)) {
     HEAP16[$36 >> 1] = $storemerge_i & -3; //@line 63047
     $d_0_i = $29;
     $_0_i31_i = $_0_i3233_i;
     break;
    } else {
     HEAP16[$36 >> 1] = $storemerge_i | 2; //@line 63052
     $d_0_i = $29;
     $_0_i31_i = $_0_i3233_i;
     break;
    }
   }
  } while (0);
  $73 = $c + 372 | 0; //@line 63063
  HEAP32[$73 >> 2] = ($_0_i31_i << 1) + 6 + (HEAP32[$73 >> 2] | 0); //@line 63066
  _e68_cc_set_nz_16($c, 12, $d_0_i); //@line 63067
  $76 = $c + 156 | 0; //@line 63068
  $77 = HEAP32[$76 >> 2] | 0; //@line 63069
  if (($77 & 1 | 0) != 0) {
   _e68_exception_address($c, $77, 0, 0); //@line 63074
   return;
  }
  $82 = $c + 164 | 0; //@line 63079
  HEAP16[$c + 162 >> 1] = HEAP16[$82 >> 1] | 0; //@line 63082
  $85 = $77 & 16777215; //@line 63083
  $86 = $85 + 1 | 0; //@line 63084
  if ($86 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $92 = HEAP32[$c + 32 >> 2] | 0; //@line 63091
   $_0_i_i_i = HEAPU8[$92 + $85 | 0] << 8 | HEAPU8[$92 + $86 | 0]; //@line 63101
  } else {
   $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $85) | 0; //@line 63109
  }
  HEAP16[$82 >> 1] = $_0_i_i_i; //@line 63112
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$76 >> 2] = (HEAP32[$76 >> 2] | 0) + 2; //@line 63120
   $114 = $c + 152 | 0; //@line 63121
   HEAP32[$114 >> 2] = (HEAP32[$114 >> 2] | 0) + 2; //@line 63124
   HEAP32[$8 >> 2] = HEAP32[$8 >> 2] & -65536 | $d_0_i & 65535; //@line 63129
   return;
  } else {
   _e68_exception_bus($c); //@line 63134
   return;
  }
 } else if (($5 | 0) == 3) {
  $303 = $c + 88 + (($3 & 7) << 2) | 0; //@line 63141
  $304 = HEAP32[$303 >> 2] | 0; //@line 63142
  $305 = $304 & 65535; //@line 63143
  $307 = $3 >>> 9 & 7; //@line 63145
  if (($3 & 32 | 0) == 0) {
   $_0_i_i = ($307 | 0) == 0 ? 8 : $307; //@line 63153
  } else {
   $_0_i_i = HEAP32[$c + 88 + ($307 << 2) >> 2] & 63; //@line 63159
  }
  $316 = $_0_i_i & 15; //@line 63162
  L9848 : do {
   if (($316 | 0) == 0) {
    do {
     if (($_0_i_i | 0) != 0) {
      if (($304 & 1 | 0) == 0) {
       break;
      }
      $339 = $c + 166 | 0; //@line 63177
      HEAP16[$339 >> 1] = HEAP16[$339 >> 1] | 1; //@line 63180
      $d_0_i19 = $305; //@line 63182
      break L9848;
     }
    } while (0);
    $343 = $c + 166 | 0; //@line 63186
    HEAP16[$343 >> 1] = HEAP16[$343 >> 1] & -2; //@line 63189
    $d_0_i19 = $305; //@line 63190
   } else {
    $319 = $304 & 65535; //@line 63192
    $323 = $319 >>> ((16 - $316 | 0) >>> 0) | $319 << $316; //@line 63196
    $324 = $323 & 65535; //@line 63197
    $327 = $c + 166 | 0; //@line 63200
    $328 = HEAP16[$327 >> 1] | 0; //@line 63201
    if (($323 & 1 | 0) == 0) {
     HEAP16[$327 >> 1] = $328 & -2; //@line 63205
     $d_0_i19 = $324; //@line 63206
     break;
    } else {
     HEAP16[$327 >> 1] = $328 | 1; //@line 63210
     $d_0_i19 = $324; //@line 63212
     break;
    }
   }
  } while (0);
  $349 = $c + 372 | 0; //@line 63220
  HEAP32[$349 >> 2] = ($_0_i_i << 1) + 6 + (HEAP32[$349 >> 2] | 0); //@line 63223
  _e68_cc_set_nz_16($c, 14, $d_0_i19); //@line 63224
  $352 = $c + 156 | 0; //@line 63225
  $353 = HEAP32[$352 >> 2] | 0; //@line 63226
  if (($353 & 1 | 0) != 0) {
   _e68_exception_address($c, $353, 0, 0); //@line 63231
   return;
  }
  $358 = $c + 164 | 0; //@line 63236
  HEAP16[$c + 162 >> 1] = HEAP16[$358 >> 1] | 0; //@line 63239
  $361 = $353 & 16777215; //@line 63240
  $362 = $361 + 1 | 0; //@line 63241
  if ($362 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $368 = HEAP32[$c + 32 >> 2] | 0; //@line 63248
   $_0_i_i_i20 = HEAPU8[$368 + $361 | 0] << 8 | HEAPU8[$368 + $362 | 0]; //@line 63258
  } else {
   $_0_i_i_i20 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $361) | 0; //@line 63266
  }
  HEAP16[$358 >> 1] = $_0_i_i_i20; //@line 63269
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$352 >> 2] = (HEAP32[$352 >> 2] | 0) + 2; //@line 63277
   $390 = $c + 152 | 0; //@line 63278
   HEAP32[$390 >> 2] = (HEAP32[$390 >> 2] | 0) + 2; //@line 63281
   HEAP32[$303 >> 2] = HEAP32[$303 >> 2] & -65536 | $d_0_i19 & 65535; //@line 63286
   return;
  } else {
   _e68_exception_bus($c); //@line 63291
   return;
  }
 } else {
  _e68_exception_illegal($c); //@line 63297
  $398 = $c + 372 | 0; //@line 63298
  HEAP32[$398 >> 2] = (HEAP32[$398 >> 2] | 0) + 2; //@line 63301
  return;
 }
}
function _ope180($c) {
 $c = $c | 0;
 var $3 = 0, $5 = 0, $8 = 0, $9 = 0, $11 = 0, $17 = 0, $20 = 0, $_0_i3233_i = 0, $26 = 0, $28 = 0, $33 = 0, $34 = 0, $storemerge_i = 0, $37 = 0, $50 = 0, $52 = 0, $54 = 0, $56 = 0, $58 = 0, $60 = 0, $_0_i31_i = 0, $d_0_i = 0, $68 = 0, $71 = 0, $72 = 0, $77 = 0, $80 = 0, $81 = 0, $87 = 0, $_0_i_i_i = 0, $109 = 0, $114 = 0, $115 = 0, $117 = 0, $123 = 0, $126 = 0, $_0_i2324_i = 0, $132 = 0, $137 = 0, $138 = 0, $149 = 0, $153 = 0, $_0_i22_i = 0, $d_0_i9 = 0, $159 = 0, $162 = 0, $163 = 0, $168 = 0, $171 = 0, $172 = 0, $178 = 0, $_0_i_i_i10 = 0, $200 = 0, $206 = 0, $_0_i_i = 0, $215 = 0, $216 = 0, $217 = 0, $220 = 0, $d_019_i = 0, $i_018_i = 0, $x_017_i = 0, $222 = 0, $224 = 0, $225 = 0, $d_0_lcssa_i = 0, $x_0_lcssa_i = 0, $229 = 0, $233 = 0, $236 = 0, $237 = 0, $242 = 0, $245 = 0, $246 = 0, $252 = 0, $_0_i_i_i15 = 0, $274 = 0, $279 = 0, $280 = 0, $282 = 0, $_0_i_i18 = 0, $291 = 0, $297 = 0, $300 = 0, $301 = 0, $312 = 0, $316 = 0, $d_0_i20 = 0, $322 = 0, $325 = 0, $326 = 0, $331 = 0, $334 = 0, $335 = 0, $341 = 0, $_0_i_i_i21 = 0, $363 = 0, $367 = 0, label = 0;
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 63357
 $5 = $3 >>> 3 & 3; //@line 63359
 if (($5 | 0) == 2) {
  $206 = $3 >>> 9 & 7; //@line 63363
  if (($3 & 32 | 0) == 0) {
   $_0_i_i = ($206 | 0) == 0 ? 8 : $206; //@line 63371
  } else {
   $_0_i_i = HEAP32[$c + 88 + ($206 << 2) >> 2] & 63; //@line 63377
  }
  $215 = $c + 88 + (($3 & 7) << 2) | 0; //@line 63380
  $216 = HEAP32[$215 >> 2] | 0; //@line 63381
  $217 = $c + 166 | 0; //@line 63382
  $220 = (HEAPU16[$217 >> 1] | 0) >>> 4 & 1; //@line 63386
  if (($_0_i_i | 0) == 0) {
   $x_0_lcssa_i = $220;
   $d_0_lcssa_i = $216;
  } else {
   $x_017_i = $220;
   $i_018_i = 0;
   $d_019_i = $216;
   while (1) {
    $222 = $d_019_i >>> 31; //@line 63397
    $224 = $x_017_i | $d_019_i << 1; //@line 63399
    $225 = $i_018_i + 1 | 0; //@line 63400
    if ($225 >>> 0 < $_0_i_i >>> 0) {
     $x_017_i = $222;
     $i_018_i = $225;
     $d_019_i = $224;
    } else {
     $x_0_lcssa_i = $222;
     $d_0_lcssa_i = $224;
     break;
    }
   }
  }
  $229 = $c + 372 | 0; //@line 63415
  HEAP32[$229 >> 2] = ($_0_i_i << 1) + 8 + (HEAP32[$229 >> 2] | 0); //@line 63418
  _e68_cc_set_nz_32($c, 14, $d_0_lcssa_i); //@line 63419
  $233 = HEAP16[$217 >> 1] | 0; //@line 63421
  HEAP16[$217 >> 1] = ($x_0_lcssa_i | 0) == 0 ? $233 & -18 : $233 | 17; //@line 63425
  $236 = $c + 156 | 0; //@line 63426
  $237 = HEAP32[$236 >> 2] | 0; //@line 63427
  if (($237 & 1 | 0) != 0) {
   _e68_exception_address($c, $237, 0, 0); //@line 63432
   return;
  }
  $242 = $c + 164 | 0; //@line 63437
  HEAP16[$c + 162 >> 1] = HEAP16[$242 >> 1] | 0; //@line 63440
  $245 = $237 & 16777215; //@line 63441
  $246 = $245 + 1 | 0; //@line 63442
  if ($246 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $252 = HEAP32[$c + 32 >> 2] | 0; //@line 63449
   $_0_i_i_i15 = HEAPU8[$252 + $245 | 0] << 8 | HEAPU8[$252 + $246 | 0]; //@line 63459
  } else {
   $_0_i_i_i15 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $245) | 0; //@line 63467
  }
  HEAP16[$242 >> 1] = $_0_i_i_i15; //@line 63470
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$236 >> 2] = (HEAP32[$236 >> 2] | 0) + 2; //@line 63478
   $274 = $c + 152 | 0; //@line 63479
   HEAP32[$274 >> 2] = (HEAP32[$274 >> 2] | 0) + 2; //@line 63482
   HEAP32[$215 >> 2] = $d_0_lcssa_i; //@line 63483
   return;
  } else {
   _e68_exception_bus($c); //@line 63488
   return;
  }
 } else if (($5 | 0) == 1) {
  $114 = $c + 88 + (($3 & 7) << 2) | 0; //@line 63495
  $115 = HEAP32[$114 >> 2] | 0; //@line 63496
  $117 = $3 >>> 9 & 7; //@line 63498
  L9899 : do {
   if (($3 & 32 | 0) == 0) {
    $_0_i2324_i = ($117 | 0) == 0 ? 8 : $117; //@line 63507
    label = 7891; //@line 63508
   } else {
    $123 = HEAP32[$c + 88 + ($117 << 2) >> 2] & 63; //@line 63512
    if (($123 | 0) == 0) {
     $126 = $c + 166 | 0; //@line 63516
     HEAP16[$126 >> 1] = HEAP16[$126 >> 1] & -2; //@line 63519
     $d_0_i9 = $115;
     $_0_i22_i = 0;
     break;
    }
    if ($123 >>> 0 < 32) {
     $_0_i2324_i = $123; //@line 63527
     label = 7891; //@line 63528
     break;
    }
    do {
     if (($123 | 0) == 32) {
      if (($115 & 1 | 0) == 0) {
       break;
      }
      $149 = $c + 166 | 0; //@line 63541
      HEAP16[$149 >> 1] = HEAP16[$149 >> 1] | 17; //@line 63544
      $d_0_i9 = 0;
      $_0_i22_i = 32;
      break L9899;
     }
    } while (0);
    $153 = $c + 166 | 0; //@line 63550
    HEAP16[$153 >> 1] = HEAP16[$153 >> 1] & -18; //@line 63553
    $d_0_i9 = 0;
    $_0_i22_i = $123;
   }
  } while (0);
  do {
   if ((label | 0) == 7891) {
    $132 = $115 << $_0_i2324_i; //@line 63560
    $137 = $c + 166 | 0; //@line 63565
    $138 = HEAP16[$137 >> 1] | 0; //@line 63566
    if ((1 << 32 - $_0_i2324_i & $115 | 0) == 0) {
     HEAP16[$137 >> 1] = $138 & -18; //@line 63570
     $d_0_i9 = $132;
     $_0_i22_i = $_0_i2324_i;
     break;
    } else {
     HEAP16[$137 >> 1] = $138 | 17; //@line 63575
     $d_0_i9 = $132;
     $_0_i22_i = $_0_i2324_i;
     break;
    }
   }
  } while (0);
  $159 = $c + 372 | 0; //@line 63586
  HEAP32[$159 >> 2] = ($_0_i22_i << 1) + 8 + (HEAP32[$159 >> 2] | 0); //@line 63589
  _e68_cc_set_nz_32($c, 14, $d_0_i9); //@line 63590
  $162 = $c + 156 | 0; //@line 63591
  $163 = HEAP32[$162 >> 2] | 0; //@line 63592
  if (($163 & 1 | 0) != 0) {
   _e68_exception_address($c, $163, 0, 0); //@line 63597
   return;
  }
  $168 = $c + 164 | 0; //@line 63602
  HEAP16[$c + 162 >> 1] = HEAP16[$168 >> 1] | 0; //@line 63605
  $171 = $163 & 16777215; //@line 63606
  $172 = $171 + 1 | 0; //@line 63607
  if ($172 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $178 = HEAP32[$c + 32 >> 2] | 0; //@line 63614
   $_0_i_i_i10 = HEAPU8[$178 + $171 | 0] << 8 | HEAPU8[$178 + $172 | 0]; //@line 63624
  } else {
   $_0_i_i_i10 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $171) | 0; //@line 63632
  }
  HEAP16[$168 >> 1] = $_0_i_i_i10; //@line 63635
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$162 >> 2] = (HEAP32[$162 >> 2] | 0) + 2; //@line 63643
   $200 = $c + 152 | 0; //@line 63644
   HEAP32[$200 >> 2] = (HEAP32[$200 >> 2] | 0) + 2; //@line 63647
   HEAP32[$114 >> 2] = $d_0_i9; //@line 63648
   return;
  } else {
   _e68_exception_bus($c); //@line 63653
   return;
  }
 } else if (($5 | 0) == 3) {
  $279 = $c + 88 + (($3 & 7) << 2) | 0; //@line 63660
  $280 = HEAP32[$279 >> 2] | 0; //@line 63661
  $282 = $3 >>> 9 & 7; //@line 63663
  if (($3 & 32 | 0) == 0) {
   $_0_i_i18 = ($282 | 0) == 0 ? 8 : $282; //@line 63671
  } else {
   $_0_i_i18 = HEAP32[$c + 88 + ($282 << 2) >> 2] & 63; //@line 63677
  }
  $291 = $_0_i_i18 & 31; //@line 63680
  L9934 : do {
   if (($291 | 0) == 0) {
    do {
     if (($_0_i_i18 | 0) != 0) {
      if (($280 & 1 | 0) == 0) {
       break;
      }
      $312 = $c + 166 | 0; //@line 63695
      HEAP16[$312 >> 1] = HEAP16[$312 >> 1] | 1; //@line 63698
      $d_0_i20 = $280; //@line 63700
      break L9934;
     }
    } while (0);
    $316 = $c + 166 | 0; //@line 63704
    HEAP16[$316 >> 1] = HEAP16[$316 >> 1] & -2; //@line 63707
    $d_0_i20 = $280; //@line 63708
   } else {
    $297 = $280 >>> ((32 - $291 | 0) >>> 0) | $280 << $291; //@line 63713
    $300 = $c + 166 | 0; //@line 63716
    $301 = HEAP16[$300 >> 1] | 0; //@line 63717
    if (($297 & 1 | 0) == 0) {
     HEAP16[$300 >> 1] = $301 & -2; //@line 63721
     $d_0_i20 = $297; //@line 63722
     break;
    } else {
     HEAP16[$300 >> 1] = $301 | 1; //@line 63726
     $d_0_i20 = $297; //@line 63728
     break;
    }
   }
  } while (0);
  $322 = $c + 372 | 0; //@line 63736
  HEAP32[$322 >> 2] = ($_0_i_i18 << 1) + 8 + (HEAP32[$322 >> 2] | 0); //@line 63739
  _e68_cc_set_nz_32($c, 14, $d_0_i20); //@line 63740
  $325 = $c + 156 | 0; //@line 63741
  $326 = HEAP32[$325 >> 2] | 0; //@line 63742
  if (($326 & 1 | 0) != 0) {
   _e68_exception_address($c, $326, 0, 0); //@line 63747
   return;
  }
  $331 = $c + 164 | 0; //@line 63752
  HEAP16[$c + 162 >> 1] = HEAP16[$331 >> 1] | 0; //@line 63755
  $334 = $326 & 16777215; //@line 63756
  $335 = $334 + 1 | 0; //@line 63757
  if ($335 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $341 = HEAP32[$c + 32 >> 2] | 0; //@line 63764
   $_0_i_i_i21 = HEAPU8[$341 + $334 | 0] << 8 | HEAPU8[$341 + $335 | 0]; //@line 63774
  } else {
   $_0_i_i_i21 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $334) | 0; //@line 63782
  }
  HEAP16[$331 >> 1] = $_0_i_i_i21; //@line 63785
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$325 >> 2] = (HEAP32[$325 >> 2] | 0) + 2; //@line 63793
   $363 = $c + 152 | 0; //@line 63794
   HEAP32[$363 >> 2] = (HEAP32[$363 >> 2] | 0) + 2; //@line 63797
   HEAP32[$279 >> 2] = $d_0_i20; //@line 63798
   return;
  } else {
   _e68_exception_bus($c); //@line 63803
   return;
  }
 } else if (($5 | 0) == 0) {
  $8 = $c + 88 + (($3 & 7) << 2) | 0; //@line 63810
  $9 = HEAP32[$8 >> 2] | 0; //@line 63811
  $11 = $3 >>> 9 & 7; //@line 63813
  do {
   if (($3 & 32 | 0) == 0) {
    $_0_i3233_i = ($11 | 0) == 0 ? 8 : $11; //@line 63822
    label = 7868; //@line 63823
   } else {
    $17 = HEAP32[$c + 88 + ($11 << 2) >> 2] & 63; //@line 63827
    if (($17 | 0) == 0) {
     $20 = $c + 166 | 0; //@line 63831
     HEAP16[$20 >> 1] = HEAP16[$20 >> 1] & -4; //@line 63834
     $d_0_i = $9;
     $_0_i31_i = 0;
     break;
    }
    if ($17 >>> 0 < 32) {
     $_0_i3233_i = $17; //@line 63842
     label = 7868; //@line 63843
     break;
    }
    do {
     if (($17 | 0) == 32) {
      if (($9 & 1 | 0) == 0) {
       label = 7874; //@line 63854
       break;
      }
      $50 = $c + 166 | 0; //@line 63857
      $52 = HEAP16[$50 >> 1] | 17; //@line 63859
      HEAP16[$50 >> 1] = $52; //@line 63860
      $58 = $52; //@line 63862
     } else {
      label = 7874; //@line 63864
     }
    } while (0);
    if ((label | 0) == 7874) {
     $54 = $c + 166 | 0; //@line 63868
     $56 = HEAP16[$54 >> 1] & -18; //@line 63870
     HEAP16[$54 >> 1] = $56; //@line 63871
     $58 = $56; //@line 63872
    }
    $60 = $c + 166 | 0; //@line 63876
    if (($9 | 0) == 0) {
     HEAP16[$60 >> 1] = $58 & -3; //@line 63880
     $d_0_i = 0;
     $_0_i31_i = $17;
     break;
    } else {
     HEAP16[$60 >> 1] = $58 | 2; //@line 63885
     $d_0_i = 0;
     $_0_i31_i = $17;
     break;
    }
   }
  } while (0);
  do {
   if ((label | 0) == 7868) {
    $26 = $9 << $_0_i3233_i; //@line 63895
    $28 = -1 << 31 - $_0_i3233_i; //@line 63897
    $33 = $c + 166 | 0; //@line 63902
    $34 = HEAP16[$33 >> 1] | 0; //@line 63903
    $storemerge_i = (1 << 32 - $_0_i3233_i & $9 | 0) == 0 ? $34 & -18 : $34 | 17; //@line 63906
    HEAP16[$33 >> 1] = $storemerge_i; //@line 63907
    $37 = $28 & $9; //@line 63908
    if (($37 | 0) == 0 | ($37 | 0) == ($28 | 0)) {
     HEAP16[$33 >> 1] = $storemerge_i & -3; //@line 63915
     $d_0_i = $26;
     $_0_i31_i = $_0_i3233_i;
     break;
    } else {
     HEAP16[$33 >> 1] = $storemerge_i | 2; //@line 63920
     $d_0_i = $26;
     $_0_i31_i = $_0_i3233_i;
     break;
    }
   }
  } while (0);
  $68 = $c + 372 | 0; //@line 63931
  HEAP32[$68 >> 2] = ($_0_i31_i << 1) + 8 + (HEAP32[$68 >> 2] | 0); //@line 63934
  _e68_cc_set_nz_32($c, 12, $d_0_i); //@line 63935
  $71 = $c + 156 | 0; //@line 63936
  $72 = HEAP32[$71 >> 2] | 0; //@line 63937
  if (($72 & 1 | 0) != 0) {
   _e68_exception_address($c, $72, 0, 0); //@line 63942
   return;
  }
  $77 = $c + 164 | 0; //@line 63947
  HEAP16[$c + 162 >> 1] = HEAP16[$77 >> 1] | 0; //@line 63950
  $80 = $72 & 16777215; //@line 63951
  $81 = $80 + 1 | 0; //@line 63952
  if ($81 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $87 = HEAP32[$c + 32 >> 2] | 0; //@line 63959
   $_0_i_i_i = HEAPU8[$87 + $80 | 0] << 8 | HEAPU8[$87 + $81 | 0]; //@line 63969
  } else {
   $_0_i_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $80) | 0; //@line 63977
  }
  HEAP16[$77 >> 1] = $_0_i_i_i; //@line 63980
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   HEAP32[$71 >> 2] = (HEAP32[$71 >> 2] | 0) + 2; //@line 63988
   $109 = $c + 152 | 0; //@line 63989
   HEAP32[$109 >> 2] = (HEAP32[$109 >> 2] | 0) + 2; //@line 63992
   HEAP32[$8 >> 2] = $d_0_i; //@line 63993
   return;
  } else {
   _e68_exception_bus($c); //@line 63998
   return;
  }
 } else {
  _e68_exception_illegal($c); //@line 64004
  $367 = $c + 372 | 0; //@line 64005
  HEAP32[$367 >> 2] = (HEAP32[$367 >> 2] | 0) + 2; //@line 64008
  return;
 }
}
function _ope1c0($c) {
 $c = $c | 0;
 var $s = 0, $4 = 0, $15 = 0, $16 = 0, $17 = 0, $20 = 0, $22 = 0, $23 = 0, $storemerge = 0, $32 = 0, $33 = 0, $38 = 0, $41 = 0, $42 = 0, $48 = 0, $_0_i_i = 0, $70 = 0, sp = 0;
 sp = STACKTOP; //@line 64028
 STACKTOP = STACKTOP + 8 | 0; //@line 64028
 $s = sp | 0; //@line 64029
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 64033
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 508, 16) | 0) != 0) {
  STACKTOP = sp; //@line 64040
  return;
 }
 if ((_e68_ea_get_val16($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 64047
  return;
 }
 $15 = HEAPU16[$s >> 1] << 1; //@line 64052
 $16 = $15 & 65535; //@line 64053
 $17 = $c + 372 | 0; //@line 64054
 HEAP32[$17 >> 2] = (HEAP32[$17 >> 2] | 0) + 8; //@line 64057
 _e68_cc_set_nz_16($c, 12, $16); //@line 64058
 $20 = HEAP16[$s >> 1] | 0; //@line 64059
 $22 = $c + 166 | 0; //@line 64061
 $23 = HEAP16[$22 >> 1] | 0; //@line 64062
 $storemerge = $20 << 16 >> 16 < 0 ? $23 | 17 : $23 & -18; //@line 64065
 HEAP16[$22 >> 1] = (($20 & 65535 ^ $15) & 32768 | 0) == 0 ? $storemerge & -3 : $storemerge | 2; //@line 64073
 $32 = $c + 156 | 0; //@line 64074
 $33 = HEAP32[$32 >> 2] | 0; //@line 64075
 if (($33 & 1 | 0) != 0) {
  _e68_exception_address($c, $33, 0, 0); //@line 64080
  STACKTOP = sp; //@line 64082
  return;
 }
 $38 = $c + 164 | 0; //@line 64085
 HEAP16[$c + 162 >> 1] = HEAP16[$38 >> 1] | 0; //@line 64088
 $41 = $33 & 16777215; //@line 64089
 $42 = $41 + 1 | 0; //@line 64090
 if ($42 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $48 = HEAP32[$c + 32 >> 2] | 0; //@line 64097
  $_0_i_i = HEAPU8[$48 + $41 | 0] << 8 | HEAPU8[$48 + $42 | 0]; //@line 64107
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $41) | 0; //@line 64115
 }
 HEAP16[$38 >> 1] = $_0_i_i; //@line 64118
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$32 >> 2] = (HEAP32[$32 >> 2] | 0) + 2; //@line 64126
  $70 = $c + 152 | 0; //@line 64127
  HEAP32[$70 >> 2] = (HEAP32[$70 >> 2] | 0) + 2; //@line 64130
  _e68_ea_set_val16($c, $16) | 0; //@line 64131
  STACKTOP = sp; //@line 64133
  return;
 } else {
  _e68_exception_bus($c); //@line 64136
  STACKTOP = sp; //@line 64138
  return;
 }
}
function _ope2c0($c) {
 $c = $c | 0;
 var $s = 0, $4 = 0, $14 = 0, $15 = 0, $21 = 0, $22 = 0, $25 = 0, $26 = 0, $31 = 0, $34 = 0, $35 = 0, $41 = 0, $_0_i_i = 0, $63 = 0, sp = 0;
 sp = STACKTOP; //@line 64155
 STACKTOP = STACKTOP + 8 | 0; //@line 64155
 $s = sp | 0; //@line 64156
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 64160
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 508, 16) | 0) != 0) {
  STACKTOP = sp; //@line 64167
  return;
 }
 if ((_e68_ea_get_val16($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 64174
  return;
 }
 $14 = (HEAPU16[$s >> 1] | 0) >>> 1; //@line 64178
 $15 = $c + 372 | 0; //@line 64179
 HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + 8; //@line 64182
 _e68_cc_set_nz_16($c, 14, $14); //@line 64183
 $21 = $c + 166 | 0; //@line 64187
 $22 = HEAP16[$21 >> 1] | 0; //@line 64188
 HEAP16[$21 >> 1] = (HEAP16[$s >> 1] & 1) == 0 ? $22 & -18 : $22 | 17; //@line 64192
 $25 = $c + 156 | 0; //@line 64193
 $26 = HEAP32[$25 >> 2] | 0; //@line 64194
 if (($26 & 1 | 0) != 0) {
  _e68_exception_address($c, $26, 0, 0); //@line 64199
  STACKTOP = sp; //@line 64201
  return;
 }
 $31 = $c + 164 | 0; //@line 64204
 HEAP16[$c + 162 >> 1] = HEAP16[$31 >> 1] | 0; //@line 64207
 $34 = $26 & 16777215; //@line 64208
 $35 = $34 + 1 | 0; //@line 64209
 if ($35 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $41 = HEAP32[$c + 32 >> 2] | 0; //@line 64216
  $_0_i_i = HEAPU8[$41 + $34 | 0] << 8 | HEAPU8[$41 + $35 | 0]; //@line 64226
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $34) | 0; //@line 64234
 }
 HEAP16[$31 >> 1] = $_0_i_i; //@line 64237
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$25 >> 2] = (HEAP32[$25 >> 2] | 0) + 2; //@line 64245
  $63 = $c + 152 | 0; //@line 64246
  HEAP32[$63 >> 2] = (HEAP32[$63 >> 2] | 0) + 2; //@line 64249
  _e68_ea_set_val16($c, $14) | 0; //@line 64250
  STACKTOP = sp; //@line 64252
  return;
 } else {
  _e68_exception_bus($c); //@line 64255
  STACKTOP = sp; //@line 64257
  return;
 }
}
function _ope3c0($c) {
 $c = $c | 0;
 var $s = 0, $4 = 0, $14 = 0, $15 = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $30 = 0, $33 = 0, $34 = 0, $40 = 0, $_0_i_i = 0, $62 = 0, sp = 0;
 sp = STACKTOP; //@line 64274
 STACKTOP = STACKTOP + 8 | 0; //@line 64274
 $s = sp | 0; //@line 64275
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 64279
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 508, 16) | 0) != 0) {
  STACKTOP = sp; //@line 64286
  return;
 }
 if ((_e68_ea_get_val16($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 64293
  return;
 }
 $14 = HEAP16[$s >> 1] << 1; //@line 64297
 $15 = $c + 372 | 0; //@line 64298
 HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + 8; //@line 64301
 _e68_cc_set_nz_16($c, 14, $14); //@line 64302
 $20 = $c + 166 | 0; //@line 64305
 $21 = HEAP16[$20 >> 1] | 0; //@line 64306
 HEAP16[$20 >> 1] = (HEAP16[$s >> 1] | 0) < 0 ? $21 | 17 : $21 & -18; //@line 64310
 $24 = $c + 156 | 0; //@line 64311
 $25 = HEAP32[$24 >> 2] | 0; //@line 64312
 if (($25 & 1 | 0) != 0) {
  _e68_exception_address($c, $25, 0, 0); //@line 64317
  STACKTOP = sp; //@line 64319
  return;
 }
 $30 = $c + 164 | 0; //@line 64322
 HEAP16[$c + 162 >> 1] = HEAP16[$30 >> 1] | 0; //@line 64325
 $33 = $25 & 16777215; //@line 64326
 $34 = $33 + 1 | 0; //@line 64327
 if ($34 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $40 = HEAP32[$c + 32 >> 2] | 0; //@line 64334
  $_0_i_i = HEAPU8[$40 + $33 | 0] << 8 | HEAPU8[$40 + $34 | 0]; //@line 64344
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $33) | 0; //@line 64352
 }
 HEAP16[$30 >> 1] = $_0_i_i; //@line 64355
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$24 >> 2] = (HEAP32[$24 >> 2] | 0) + 2; //@line 64363
  $62 = $c + 152 | 0; //@line 64364
  HEAP32[$62 >> 2] = (HEAP32[$62 >> 2] | 0) + 2; //@line 64367
  _e68_ea_set_val16($c, $14) | 0; //@line 64368
  STACKTOP = sp; //@line 64370
  return;
 } else {
  _e68_exception_bus($c); //@line 64373
  STACKTOP = sp; //@line 64375
  return;
 }
}
function _ope4c0($c) {
 $c = $c | 0;
 var $s = 0, $4 = 0, $13 = 0, $19 = 0, $20 = 0, $26 = 0, $29 = 0, $30 = 0, $35 = 0, $38 = 0, $39 = 0, $45 = 0, $_0_i_i = 0, $67 = 0, sp = 0;
 sp = STACKTOP; //@line 64393
 STACKTOP = STACKTOP + 8 | 0; //@line 64393
 $s = sp | 0; //@line 64394
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 64398
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 508, 16) | 0) != 0) {
  STACKTOP = sp; //@line 64405
  return;
 }
 if ((_e68_ea_get_val16($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 64412
  return;
 }
 $13 = $c + 166 | 0; //@line 64415
 $19 = (HEAPU16[$s >> 1] | 0) >>> 1 | (HEAPU16[$13 >> 1] | 0) >>> 4 << 15; //@line 64421
 $20 = $c + 372 | 0; //@line 64422
 HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 8; //@line 64425
 _e68_cc_set_nz_16($c, 14, $19); //@line 64426
 $26 = HEAP16[$13 >> 1] | 0; //@line 64430
 HEAP16[$13 >> 1] = (HEAP16[$s >> 1] & 1) == 0 ? $26 & -18 : $26 | 17; //@line 64434
 $29 = $c + 156 | 0; //@line 64435
 $30 = HEAP32[$29 >> 2] | 0; //@line 64436
 if (($30 & 1 | 0) != 0) {
  _e68_exception_address($c, $30, 0, 0); //@line 64441
  STACKTOP = sp; //@line 64443
  return;
 }
 $35 = $c + 164 | 0; //@line 64446
 HEAP16[$c + 162 >> 1] = HEAP16[$35 >> 1] | 0; //@line 64449
 $38 = $30 & 16777215; //@line 64450
 $39 = $38 + 1 | 0; //@line 64451
 if ($39 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $45 = HEAP32[$c + 32 >> 2] | 0; //@line 64458
  $_0_i_i = HEAPU8[$45 + $38 | 0] << 8 | HEAPU8[$45 + $39 | 0]; //@line 64468
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $38) | 0; //@line 64476
 }
 HEAP16[$35 >> 1] = $_0_i_i; //@line 64479
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$29 >> 2] = (HEAP32[$29 >> 2] | 0) + 2; //@line 64487
  $67 = $c + 152 | 0; //@line 64488
  HEAP32[$67 >> 2] = (HEAP32[$67 >> 2] | 0) + 2; //@line 64491
  _e68_ea_set_val16($c, $19) | 0; //@line 64492
  STACKTOP = sp; //@line 64494
  return;
 } else {
  _e68_exception_bus($c); //@line 64497
  STACKTOP = sp; //@line 64499
  return;
 }
}
function _ope5c0($c) {
 $c = $c | 0;
 var $s = 0, $4 = 0, $13 = 0, $18 = 0, $19 = 0, $24 = 0, $27 = 0, $28 = 0, $33 = 0, $36 = 0, $37 = 0, $43 = 0, $_0_i_i = 0, $65 = 0, sp = 0;
 sp = STACKTOP; //@line 64516
 STACKTOP = STACKTOP + 8 | 0; //@line 64516
 $s = sp | 0; //@line 64517
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 64521
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 508, 16) | 0) != 0) {
  STACKTOP = sp; //@line 64528
  return;
 }
 if ((_e68_ea_get_val16($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 64535
  return;
 }
 $13 = $c + 166 | 0; //@line 64538
 $18 = HEAP16[$s >> 1] << 1 | (HEAPU16[$13 >> 1] | 0) >>> 4 & 1; //@line 64544
 $19 = $c + 372 | 0; //@line 64545
 HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 8; //@line 64548
 _e68_cc_set_nz_16($c, 14, $18); //@line 64549
 $24 = HEAP16[$13 >> 1] | 0; //@line 64552
 HEAP16[$13 >> 1] = (HEAP16[$s >> 1] | 0) < 0 ? $24 | 17 : $24 & -18; //@line 64556
 $27 = $c + 156 | 0; //@line 64557
 $28 = HEAP32[$27 >> 2] | 0; //@line 64558
 if (($28 & 1 | 0) != 0) {
  _e68_exception_address($c, $28, 0, 0); //@line 64563
  STACKTOP = sp; //@line 64565
  return;
 }
 $33 = $c + 164 | 0; //@line 64568
 HEAP16[$c + 162 >> 1] = HEAP16[$33 >> 1] | 0; //@line 64571
 $36 = $28 & 16777215; //@line 64572
 $37 = $36 + 1 | 0; //@line 64573
 if ($37 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $43 = HEAP32[$c + 32 >> 2] | 0; //@line 64580
  $_0_i_i = HEAPU8[$43 + $36 | 0] << 8 | HEAPU8[$43 + $37 | 0]; //@line 64590
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $36) | 0; //@line 64598
 }
 HEAP16[$33 >> 1] = $_0_i_i; //@line 64601
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$27 >> 2] = (HEAP32[$27 >> 2] | 0) + 2; //@line 64609
  $65 = $c + 152 | 0; //@line 64610
  HEAP32[$65 >> 2] = (HEAP32[$65 >> 2] | 0) + 2; //@line 64613
  _e68_ea_set_val16($c, $18) | 0; //@line 64614
  STACKTOP = sp; //@line 64616
  return;
 } else {
  _e68_exception_bus($c); //@line 64619
  STACKTOP = sp; //@line 64621
  return;
 }
}
function _ope6c0($c) {
 $c = $c | 0;
 var $s = 0, $4 = 0, $13 = 0, $16 = 0, $17 = 0, $23 = 0, $24 = 0, $27 = 0, $28 = 0, $33 = 0, $36 = 0, $37 = 0, $43 = 0, $_0_i_i = 0, $65 = 0, sp = 0;
 sp = STACKTOP; //@line 64638
 STACKTOP = STACKTOP + 8 | 0; //@line 64638
 $s = sp | 0; //@line 64639
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 64643
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 508, 16) | 0) != 0) {
  STACKTOP = sp; //@line 64650
  return;
 }
 if ((_e68_ea_get_val16($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 64657
  return;
 }
 $13 = HEAP16[$s >> 1] | 0; //@line 64660
 $16 = ($13 & 65535) >>> 1 | $13 << 15; //@line 64663
 $17 = $c + 372 | 0; //@line 64664
 HEAP32[$17 >> 2] = (HEAP32[$17 >> 2] | 0) + 8; //@line 64667
 _e68_cc_set_nz_16($c, 14, $16); //@line 64668
 $23 = $c + 166 | 0; //@line 64672
 $24 = HEAP16[$23 >> 1] | 0; //@line 64673
 HEAP16[$23 >> 1] = (HEAP16[$s >> 1] & 1) == 0 ? $24 & -2 : $24 | 1; //@line 64677
 $27 = $c + 156 | 0; //@line 64678
 $28 = HEAP32[$27 >> 2] | 0; //@line 64679
 if (($28 & 1 | 0) != 0) {
  _e68_exception_address($c, $28, 0, 0); //@line 64684
  STACKTOP = sp; //@line 64686
  return;
 }
 $33 = $c + 164 | 0; //@line 64689
 HEAP16[$c + 162 >> 1] = HEAP16[$33 >> 1] | 0; //@line 64692
 $36 = $28 & 16777215; //@line 64693
 $37 = $36 + 1 | 0; //@line 64694
 if ($37 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $43 = HEAP32[$c + 32 >> 2] | 0; //@line 64701
  $_0_i_i = HEAPU8[$43 + $36 | 0] << 8 | HEAPU8[$43 + $37 | 0]; //@line 64711
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $36) | 0; //@line 64719
 }
 HEAP16[$33 >> 1] = $_0_i_i; //@line 64722
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$27 >> 2] = (HEAP32[$27 >> 2] | 0) + 2; //@line 64730
  $65 = $c + 152 | 0; //@line 64731
  HEAP32[$65 >> 2] = (HEAP32[$65 >> 2] | 0) + 2; //@line 64734
  _e68_ea_set_val16($c, $16) | 0; //@line 64735
  STACKTOP = sp; //@line 64737
  return;
 } else {
  _e68_exception_bus($c); //@line 64740
  STACKTOP = sp; //@line 64742
  return;
 }
}
function _ope7c0($c) {
 $c = $c | 0;
 var $s = 0, $4 = 0, $14 = 0, $16 = 0, $18 = 0, $19 = 0, $23 = 0, $24 = 0, $27 = 0, $28 = 0, $33 = 0, $36 = 0, $37 = 0, $43 = 0, $_0_i_i = 0, $65 = 0, sp = 0;
 sp = STACKTOP; //@line 64759
 STACKTOP = STACKTOP + 8 | 0; //@line 64759
 $s = sp | 0; //@line 64760
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 64764
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 508, 16) | 0) != 0) {
  STACKTOP = sp; //@line 64771
  return;
 }
 if ((_e68_ea_get_val16($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 64778
  return;
 }
 $14 = HEAPU16[$s >> 1] | 0; //@line 64782
 $16 = $14 >>> 15; //@line 64784
 $18 = ($14 << 1 | $16) & 65535; //@line 64786
 $19 = $c + 372 | 0; //@line 64787
 HEAP32[$19 >> 2] = (HEAP32[$19 >> 2] | 0) + 8; //@line 64790
 _e68_cc_set_nz_16($c, 14, $18); //@line 64791
 $23 = $c + 166 | 0; //@line 64793
 $24 = HEAP16[$23 >> 1] | 0; //@line 64794
 HEAP16[$23 >> 1] = ($16 | 0) == 0 ? $24 & -2 : $24 | 1; //@line 64798
 $27 = $c + 156 | 0; //@line 64799
 $28 = HEAP32[$27 >> 2] | 0; //@line 64800
 if (($28 & 1 | 0) != 0) {
  _e68_exception_address($c, $28, 0, 0); //@line 64805
  STACKTOP = sp; //@line 64807
  return;
 }
 $33 = $c + 164 | 0; //@line 64810
 HEAP16[$c + 162 >> 1] = HEAP16[$33 >> 1] | 0; //@line 64813
 $36 = $28 & 16777215; //@line 64814
 $37 = $36 + 1 | 0; //@line 64815
 if ($37 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $43 = HEAP32[$c + 32 >> 2] | 0; //@line 64822
  $_0_i_i = HEAPU8[$43 + $36 | 0] << 8 | HEAPU8[$43 + $37 | 0]; //@line 64832
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $36) | 0; //@line 64840
 }
 HEAP16[$33 >> 1] = $_0_i_i; //@line 64843
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$27 >> 2] = (HEAP32[$27 >> 2] | 0) + 2; //@line 64851
  $65 = $c + 152 | 0; //@line 64852
  HEAP32[$65 >> 2] = (HEAP32[$65 >> 2] | 0) + 2; //@line 64855
  _e68_ea_set_val16($c, $18) | 0; //@line 64856
  STACKTOP = sp; //@line 64858
  return;
 } else {
  _e68_exception_bus($c); //@line 64861
  STACKTOP = sp; //@line 64863
  return;
 }
}
function _opf000($c) {
 $c = $c | 0;
 HEAP16[$c + 330 >> 1] = HEAP16[$c + 160 >> 1] | 0; //@line 64877
 _e68_exception_fxxx($c); //@line 64878
 return;
}
function _e68_op_bcc($c, $cond) {
 $c = $c | 0;
 $cond = $cond | 0;
 var $1 = 0, $3 = 0, $4 = 0, $6 = 0, $11 = 0, $14 = 0, $15 = 0, $20 = 0, $22 = 0, $23 = 0, $24 = 0, $30 = 0, $_0_i_i13 = 0, $55 = 0, $dist_0 = 0, $63 = 0, $66 = 0, $67 = 0, $72 = 0, $75 = 0, $76 = 0, $82 = 0, $_0_i_i17 = 0, $102 = 0, $110 = 0, $114 = 0, $115 = 0, $120 = 0, $123 = 0, $124 = 0, $130 = 0, $_0_i_i = 0, $150 = 0;
 $1 = $c + 152 | 0; //@line 64906
 $3 = (HEAP32[$1 >> 2] | 0) + 2 | 0; //@line 64908
 $4 = $c + 160 | 0; //@line 64909
 $6 = HEAPU16[$4 >> 1] | 0; //@line 64911
 $11 = ($6 & 128 | 0) != 0 ? $6 | -256 : $6 & 255; //@line 64916
 do {
  if (($11 | 0) == 0) {
   $14 = $c + 156 | 0; //@line 64921
   $15 = HEAP32[$14 >> 2] | 0; //@line 64922
   if (($15 & 1 | 0) != 0) {
    _e68_exception_address($c, $15, 0, 0); //@line 64927
    return;
   }
   $20 = $c + 164 | 0; //@line 64932
   $22 = $c + 162 | 0; //@line 64934
   HEAP16[$22 >> 1] = HEAP16[$20 >> 1] | 0; //@line 64935
   $23 = $15 & 16777215; //@line 64936
   $24 = $23 + 1 | 0; //@line 64937
   if ($24 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
    $30 = HEAP32[$c + 32 >> 2] | 0; //@line 64944
    $_0_i_i13 = HEAPU8[$30 + $23 | 0] << 8 | HEAPU8[$30 + $24 | 0]; //@line 64954
   } else {
    $_0_i_i13 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $23) | 0; //@line 64962
   }
   HEAP16[$20 >> 1] = $_0_i_i13; //@line 64965
   if ((HEAP8[$c + 336 | 0] | 0) == 0) {
    HEAP32[$14 >> 2] = (HEAP32[$14 >> 2] | 0) + 2; //@line 64973
    HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 64976
    $55 = HEAPU16[$22 >> 1] | 0; //@line 64978
    $dist_0 = ($55 & 32768 | 0) != 0 ? $55 | -65536 : $55; //@line 64984
    break;
   }
   _e68_exception_bus($c); //@line 64987
   return;
  } else {
   $dist_0 = $11; //@line 64992
  }
 } while (0);
 do {
  if (($cond | 0) == 0) {
   $110 = $c + 372 | 0; //@line 65004
   HEAP32[$110 >> 2] = ((HEAP16[$4 >> 1] & 255) == 0 ? 12 : 8) + (HEAP32[$110 >> 2] | 0); //@line 65007
   $114 = HEAP32[$c + 156 >> 2] | 0; //@line 65010
  } else {
   $63 = $c + 372 | 0; //@line 65012
   HEAP32[$63 >> 2] = (HEAP32[$63 >> 2] | 0) + 10; //@line 65015
   $66 = $3 + $dist_0 | 0; //@line 65016
   $67 = $c + 156 | 0; //@line 65017
   HEAP32[$67 >> 2] = $66; //@line 65018
   if (($66 & 1 | 0) != 0) {
    _e68_exception_address($c, $66, 0, 0); //@line 65023
    return;
   }
   $72 = $c + 164 | 0; //@line 65028
   HEAP16[$c + 162 >> 1] = HEAP16[$72 >> 1] | 0; //@line 65031
   $75 = $66 & 16777215; //@line 65032
   $76 = $75 + 1 | 0; //@line 65033
   if ($76 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
    $82 = HEAP32[$c + 32 >> 2] | 0; //@line 65040
    $_0_i_i17 = HEAPU8[$82 + $75 | 0] << 8 | HEAPU8[$82 + $76 | 0]; //@line 65050
   } else {
    $_0_i_i17 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $75) | 0; //@line 65058
   }
   HEAP16[$72 >> 1] = $_0_i_i17; //@line 65061
   if ((HEAP8[$c + 336 | 0] | 0) == 0) {
    $102 = (HEAP32[$67 >> 2] | 0) + 2 | 0; //@line 65068
    HEAP32[$67 >> 2] = $102; //@line 65069
    HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 65072
    $114 = $102; //@line 65074
    break;
   }
   _e68_exception_bus($c); //@line 65077
   return;
  }
 } while (0);
 $115 = $c + 156 | 0; //@line 65084
 if (($114 & 1 | 0) != 0) {
  _e68_exception_address($c, $114, 0, 0); //@line 65089
  return;
 }
 $120 = $c + 164 | 0; //@line 65094
 HEAP16[$c + 162 >> 1] = HEAP16[$120 >> 1] | 0; //@line 65097
 $123 = $114 & 16777215; //@line 65098
 $124 = $123 + 1 | 0; //@line 65099
 if ($124 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $130 = HEAP32[$c + 32 >> 2] | 0; //@line 65106
  $_0_i_i = HEAPU8[$130 + $123 | 0] << 8 | HEAPU8[$130 + $124 | 0]; //@line 65116
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $123) | 0; //@line 65124
 }
 HEAP16[$120 >> 1] = $_0_i_i; //@line 65127
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  $150 = HEAP32[$115 >> 2] | 0; //@line 65133
  HEAP32[$115 >> 2] = $150 + 2; //@line 65135
  HEAP32[$1 >> 2] = $150 - 2; //@line 65137
  return;
 } else {
  _e68_exception_bus($c); //@line 65142
  return;
 }
}
function _e68_op_trapcc($c, $cond) {
 $c = $c | 0;
 $cond = $cond | 0;
 var $4 = 0, $6 = 0, $7 = 0, $12 = 0, $15 = 0, $16 = 0, $22 = 0, $_0_i_i = 0, $42 = 0, $43 = 0, $47 = 0, $48 = 0, $53 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $63 = 0, $78 = 0, $79 = 0, $85 = 0, $86 = 0, $93 = 0, $94 = 0, $98 = 0, $111 = 0, $phitmp = 0, $114 = 0, $118 = 0, $122 = 0, $123 = 0, $128 = 0, $131 = 0, $132 = 0, $138 = 0, $_0_i_i16 = 0, $160 = 0, $166 = 0;
 $4 = HEAP16[$c + 160 >> 1] & 7; //@line 65177
 do {
  if (($4 | 0) == 2) {
   $6 = $c + 156 | 0; //@line 65180
   $7 = HEAP32[$6 >> 2] | 0; //@line 65181
   if (($7 & 1 | 0) != 0) {
    _e68_exception_address($c, $7, 0, 0); //@line 65186
    return;
   }
   $12 = $c + 164 | 0; //@line 65191
   HEAP16[$c + 162 >> 1] = HEAP16[$12 >> 1] | 0; //@line 65194
   $15 = $7 & 16777215; //@line 65195
   $16 = $15 + 1 | 0; //@line 65196
   if ($16 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
    $22 = HEAP32[$c + 32 >> 2] | 0; //@line 65203
    $_0_i_i = HEAPU8[$22 + $15 | 0] << 8 | HEAPU8[$22 + $16 | 0]; //@line 65213
   } else {
    $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $15) | 0; //@line 65221
   }
   HEAP16[$12 >> 1] = $_0_i_i; //@line 65224
   if ((HEAP8[$c + 336 | 0] | 0) == 0) {
    $42 = (HEAP32[$6 >> 2] | 0) + 2 | 0; //@line 65231
    HEAP32[$6 >> 2] = $42; //@line 65232
    $43 = $c + 152 | 0; //@line 65233
    HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) + 2; //@line 65236
    $122 = $42; //@line 65238
    break;
   }
   _e68_exception_bus($c); //@line 65241
   return;
  } else if (($4 | 0) == 3) {
   $47 = $c + 156 | 0; //@line 65246
   $48 = HEAP32[$47 >> 2] | 0; //@line 65247
   if (($48 & 1 | 0) != 0) {
    _e68_exception_address($c, $48, 0, 0); //@line 65252
    return;
   }
   $53 = $c + 164 | 0; //@line 65257
   $55 = $c + 162 | 0; //@line 65259
   HEAP16[$55 >> 1] = HEAP16[$53 >> 1] | 0; //@line 65260
   $56 = $48 & 16777215; //@line 65261
   $57 = $56 + 1 | 0; //@line 65262
   $58 = $c + 36 | 0; //@line 65263
   if ($57 >>> 0 < (HEAP32[$58 >> 2] | 0) >>> 0) {
    $63 = HEAP32[$c + 32 >> 2] | 0; //@line 65269
    $78 = HEAPU8[$63 + $56 | 0] << 8 | HEAPU8[$63 + $57 | 0]; //@line 65279
   } else {
    $78 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $56) | 0; //@line 65287
   }
   HEAP16[$53 >> 1] = $78; //@line 65290
   $79 = $c + 336 | 0; //@line 65291
   if ((HEAP8[$79] | 0) != 0) {
    _e68_exception_bus($c); //@line 65296
    return;
   }
   $85 = (HEAP32[$47 >> 2] | 0) + 2 | 0; //@line 65302
   HEAP32[$47 >> 2] = $85; //@line 65303
   $86 = $c + 152 | 0; //@line 65304
   HEAP32[$86 >> 2] = (HEAP32[$86 >> 2] | 0) + 2; //@line 65307
   if (($85 & 1 | 0) != 0) {
    _e68_exception_address($c, $85, 0, 0); //@line 65312
    return;
   }
   HEAP16[$55 >> 1] = $78; //@line 65317
   $93 = $85 & 16777215; //@line 65318
   $94 = $93 + 1 | 0; //@line 65319
   do {
    if ($94 >>> 0 < (HEAP32[$58 >> 2] | 0) >>> 0) {
     $98 = HEAP32[$c + 32 >> 2] | 0; //@line 65326
     HEAP16[$53 >> 1] = HEAPU8[$98 + $93 | 0] << 8 | HEAPU8[$98 + $94 | 0]; //@line 65335
    } else {
     $111 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $93) | 0; //@line 65342
     $phitmp = (HEAP8[$79] | 0) == 0; //@line 65344
     HEAP16[$53 >> 1] = $111; //@line 65345
     if ($phitmp) {
      break;
     }
     _e68_exception_bus($c); //@line 65350
     return;
    }
   } while (0);
   $114 = (HEAP32[$47 >> 2] | 0) + 2 | 0; //@line 65357
   HEAP32[$47 >> 2] = $114; //@line 65358
   HEAP32[$86 >> 2] = (HEAP32[$86 >> 2] | 0) + 2; //@line 65361
   $122 = $114; //@line 65363
  } else if (($4 | 0) == 4) {
   $122 = HEAP32[$c + 156 >> 2] | 0; //@line 65368
  } else {
   $118 = $c + 372 | 0; //@line 65370
   HEAP32[$118 >> 2] = (HEAP32[$118 >> 2] | 0) + 2; //@line 65373
   _e68_exception_illegal($c); //@line 65374
   return;
  }
 } while (0);
 $123 = $c + 156 | 0; //@line 65381
 if (($122 & 1 | 0) != 0) {
  _e68_exception_address($c, $122, 0, 0); //@line 65386
  return;
 }
 $128 = $c + 164 | 0; //@line 65391
 HEAP16[$c + 162 >> 1] = HEAP16[$128 >> 1] | 0; //@line 65394
 $131 = $122 & 16777215; //@line 65395
 $132 = $131 + 1 | 0; //@line 65396
 if ($132 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $138 = HEAP32[$c + 32 >> 2] | 0; //@line 65403
  $_0_i_i16 = HEAPU8[$138 + $131 | 0] << 8 | HEAPU8[$138 + $132 | 0]; //@line 65413
 } else {
  $_0_i_i16 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $131) | 0; //@line 65421
 }
 HEAP16[$128 >> 1] = $_0_i_i16; //@line 65424
 if ((HEAP8[$c + 336 | 0] | 0) != 0) {
  _e68_exception_bus($c); //@line 65430
  return;
 }
 HEAP32[$123 >> 2] = (HEAP32[$123 >> 2] | 0) + 2; //@line 65437
 $160 = $c + 152 | 0; //@line 65438
 HEAP32[$160 >> 2] = (HEAP32[$160 >> 2] | 0) + 2; //@line 65441
 if (($cond | 0) == 0) {
  $166 = $c + 372 | 0; //@line 65445
  HEAP32[$166 >> 2] = (HEAP32[$166 >> 2] | 0) + 4; //@line 65448
  return;
 } else {
  _e68_exception_overflow($c); //@line 65452
  return;
 }
}
function _e68_set_opcodes_020($c) {
 $c = $c | 0;
 var $i_013 = 0, $3 = 0;
 _e68_set_opcodes($c); //@line 65465
 $i_013 = 0; //@line 65467
 do {
  $3 = HEAP32[24920 + ($i_013 << 2) >> 2] | 0; //@line 65471
  if (($3 | 0) != 0) {
   HEAP32[$c + 400 + ($i_013 << 2) >> 2] = $3; //@line 65476
  }
  $i_013 = $i_013 + 1 | 0; //@line 65479
 } while ($i_013 >>> 0 < 1024);
 HEAP32[$c + 4496 >> 2] = 496; //@line 65489
 return;
}
function _op49c0_00($c) {
 $c = $c | 0;
 var $5 = 0, $6 = 0, $11 = 0, $12 = 0, $15 = 0, $16 = 0, $21 = 0, $24 = 0, $25 = 0, $31 = 0, $_0_i_i = 0, $53 = 0;
 $5 = $c + 88 + ((HEAP16[$c + 160 >> 1] & 7) << 2) | 0; //@line 65510
 $6 = HEAP32[$5 >> 2] | 0; //@line 65511
 $11 = ($6 & 128 | 0) != 0 ? $6 | -256 : $6 & 255; //@line 65516
 $12 = $c + 372 | 0; //@line 65517
 HEAP32[$12 >> 2] = (HEAP32[$12 >> 2] | 0) + 4; //@line 65520
 _e68_cc_set_nz_32($c, 15, $11); //@line 65521
 $15 = $c + 156 | 0; //@line 65522
 $16 = HEAP32[$15 >> 2] | 0; //@line 65523
 if (($16 & 1 | 0) != 0) {
  _e68_exception_address($c, $16, 0, 0); //@line 65528
  return;
 }
 $21 = $c + 164 | 0; //@line 65533
 HEAP16[$c + 162 >> 1] = HEAP16[$21 >> 1] | 0; //@line 65536
 $24 = $16 & 16777215; //@line 65537
 $25 = $24 + 1 | 0; //@line 65538
 if ($25 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $31 = HEAP32[$c + 32 >> 2] | 0; //@line 65545
  $_0_i_i = HEAPU8[$31 + $24 | 0] << 8 | HEAPU8[$31 + $25 | 0]; //@line 65555
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $24) | 0; //@line 65563
 }
 HEAP16[$21 >> 1] = $_0_i_i; //@line 65566
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$15 >> 2] = (HEAP32[$15 >> 2] | 0) + 2; //@line 65574
  $53 = $c + 152 | 0; //@line 65575
  HEAP32[$53 >> 2] = (HEAP32[$53 >> 2] | 0) + 2; //@line 65578
  HEAP32[$5 >> 2] = $11; //@line 65579
  return;
 } else {
  _e68_exception_bus($c); //@line 65584
  return;
 }
}
function _op00c0($c) {
 $c = $c | 0;
 var $1 = 0, $5 = 0, $6 = 0, $7 = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $22 = 0, $_0_i_i = 0, $37 = 0, $44 = 0, $51 = 0, $57 = 0, $67 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $84 = 0, $85 = 0, $86 = 0, $_0_i41 = 0, $87 = 0, $93 = 0, $_0_i42 = 0, $106 = 0, $113 = 0, $114 = 0, $115 = 0, $117 = 0, $118 = 0, $122 = 0, $136 = 0, $137 = 0, $138 = 0, $_0_i44 = 0, $139 = 0, $145 = 0, $146 = 0, $150 = 0, $_0_i49 = 0, $165 = 0, $171 = 0, $172 = 0, $176 = 0, $202 = 0, $203 = 0, $204 = 0, $_0_i51 = 0, $206 = 0, $207 = 0, $211 = 0, $239 = 0, $b1_0 = 0, $b2_0 = 0, $242 = 0, $243 = 0, $247 = 0, $253 = 0, $s2_0 = 0, $270 = 0, $276 = 0, $279 = 0, $280 = 0, $storemerge54 = 0, $285 = 0, $292 = 0, $298 = 0, $299 = 0, $304 = 0, $_0_i_i45 = 0;
 $1 = $c + 160 | 0; //@line 65634
 $5 = (HEAPU16[$1 >> 1] | 0) >>> 9 & 3; //@line 65638
 $6 = $c + 156 | 0; //@line 65639
 $7 = HEAP32[$6 >> 2] | 0; //@line 65640
 if (($7 & 1 | 0) != 0) {
  _e68_exception_address($c, $7, 0, 0); //@line 65645
  return;
 }
 $12 = $c + 164 | 0; //@line 65650
 $14 = $c + 162 | 0; //@line 65652
 HEAP16[$14 >> 1] = HEAP16[$12 >> 1] | 0; //@line 65653
 $15 = $7 & 16777215; //@line 65654
 $16 = $15 + 1 | 0; //@line 65655
 $17 = $c + 36 | 0; //@line 65656
 if ($16 >>> 0 < (HEAP32[$17 >> 2] | 0) >>> 0) {
  $22 = HEAP32[$c + 32 >> 2] | 0; //@line 65662
  $_0_i_i = HEAPU8[$22 + $15 | 0] << 8 | HEAPU8[$22 + $16 | 0]; //@line 65672
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $15) | 0; //@line 65680
 }
 HEAP16[$12 >> 1] = $_0_i_i; //@line 65683
 $37 = $c + 336 | 0; //@line 65684
 if ((HEAP8[$37] | 0) != 0) {
  _e68_exception_bus($c); //@line 65689
  return;
 }
 HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 2; //@line 65696
 $44 = $c + 152 | 0; //@line 65697
 HEAP32[$44 >> 2] = (HEAP32[$44 >> 2] | 0) + 2; //@line 65700
 if ((HEAP16[$14 >> 1] & 2047) != 0) {
  $51 = $c + 372 | 0; //@line 65706
  HEAP32[$51 >> 2] = (HEAP32[$51 >> 2] | 0) + 2; //@line 65709
  _e68_exception_illegal($c); //@line 65710
  return;
 }
 $57 = HEAP16[$1 >> 1] & 63; //@line 65717
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($57 << 2) >> 2] & 127]($c, $57, 2020, 8) | 0) != 0) {
  return;
 }
 if ((HEAP32[$c + 340 >> 2] | 0) != 2) {
  $239 = $c + 372 | 0; //@line 65732
  HEAP32[$239 >> 2] = (HEAP32[$239 >> 2] | 0) + 2; //@line 65735
  _e68_exception_illegal($c); //@line 65736
  return;
 }
 $67 = ($5 | 0) == 0; //@line 65741
 do {
  if ($67) {
   $69 = $c + 344 | 0; //@line 65745
   $70 = HEAP32[$69 >> 2] | 0; //@line 65746
   $71 = $70 & 16777215; //@line 65747
   $72 = HEAP32[$17 >> 2] | 0; //@line 65748
   if ($71 >>> 0 < $72 >>> 0) {
    $_0_i41 = HEAP8[(HEAP32[$c + 32 >> 2] | 0) + $71 | 0] | 0;
    $86 = $70;
    $85 = $72;
   } else {
    $84 = FUNCTION_TABLE_iii[HEAP32[$c + 8 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $71) | 0; //@line 65763
    $_0_i41 = $84;
    $86 = HEAP32[$69 >> 2] | 0;
    $85 = HEAP32[$17 >> 2] | 0;
   }
   $87 = $_0_i41 & 255; //@line 65772
   $93 = $86 + 1 & 16777215; //@line 65778
   if ($93 >>> 0 < $85 >>> 0) {
    $_0_i42 = HEAP8[(HEAP32[$c + 32 >> 2] | 0) + $93 | 0] | 0; //@line 65787
   } else {
    $_0_i42 = FUNCTION_TABLE_iii[HEAP32[$c + 8 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $93) | 0; //@line 65795
   }
   $106 = $_0_i42 & 255; //@line 65798
   $b2_0 = ($106 & 128 | 0) != 0 ? $106 | -256 : $106;
   $b1_0 = ($87 & 128 | 0) != 0 ? $87 | -256 : $87;
  } else {
   $113 = $c + 344 | 0; //@line 65807
   $114 = HEAP32[$113 >> 2] | 0; //@line 65808
   $115 = $114 & 16777215; //@line 65809
   if (($5 | 0) != 1) {
    $171 = $115 + 3 | 0; //@line 65812
    $172 = HEAP32[$17 >> 2] | 0; //@line 65813
    if ($171 >>> 0 < $172 >>> 0) {
     $176 = HEAP32[$c + 32 >> 2] | 0; //@line 65818
     $_0_i51 = ((HEAPU8[$176 + $115 | 0] << 8 | HEAPU8[$176 + ($115 + 1) | 0]) << 8 | HEAPU8[$176 + ($115 + 2) | 0]) << 8 | HEAPU8[$176 + $171 | 0];
     $204 = $114;
     $203 = $172;
    } else {
     $202 = FUNCTION_TABLE_iii[HEAP32[$c + 16 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $115) | 0; //@line 65846
     $_0_i51 = $202;
     $204 = HEAP32[$113 >> 2] | 0;
     $203 = HEAP32[$17 >> 2] | 0;
    }
    $206 = $204 + 4 & 16777215; //@line 65856
    $207 = $206 + 3 | 0; //@line 65857
    if ($207 >>> 0 < $203 >>> 0) {
     $211 = HEAP32[$c + 32 >> 2] | 0; //@line 65862
     $b2_0 = ((HEAPU8[$211 + $206 | 0] << 8 | HEAPU8[$211 + ($206 + 1) | 0]) << 8 | HEAPU8[$211 + ($206 + 2) | 0]) << 8 | HEAPU8[$211 + $207 | 0];
     $b1_0 = $_0_i51;
     break;
    } else {
     $b2_0 = FUNCTION_TABLE_iii[HEAP32[$c + 16 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $206) | 0;
     $b1_0 = $_0_i51;
     break;
    }
   }
   $117 = $115 + 1 | 0; //@line 65897
   $118 = HEAP32[$17 >> 2] | 0; //@line 65898
   if ($117 >>> 0 < $118 >>> 0) {
    $122 = HEAP32[$c + 32 >> 2] | 0; //@line 65903
    $_0_i44 = HEAPU8[$122 + $115 | 0] << 8 | HEAPU8[$122 + $117 | 0];
    $138 = $114;
    $137 = $118;
   } else {
    $136 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $115) | 0; //@line 65919
    $_0_i44 = $136;
    $138 = HEAP32[$113 >> 2] | 0;
    $137 = HEAP32[$17 >> 2] | 0;
   }
   $139 = $_0_i44 & 65535; //@line 65928
   $145 = $138 + 2 & 16777215; //@line 65934
   $146 = $145 + 1 | 0; //@line 65935
   if ($146 >>> 0 < $137 >>> 0) {
    $150 = HEAP32[$c + 32 >> 2] | 0; //@line 65940
    $_0_i49 = HEAPU8[$150 + $145 | 0] << 8 | HEAPU8[$150 + $146 | 0]; //@line 65950
   } else {
    $_0_i49 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $145) | 0; //@line 65958
   }
   $165 = $_0_i49 & 65535; //@line 65961
   $b2_0 = ($165 & 32768 | 0) != 0 ? $165 | -65536 : $165;
   $b1_0 = ($139 & 32768 | 0) != 0 ? $139 | -65536 : $139;
  }
 } while (0);
 $242 = HEAP16[$14 >> 1] | 0; //@line 65972
 $243 = $242 & 65535; //@line 65973
 $247 = $243 >>> 12 & 7; //@line 65977
 do {
  if (($243 & 32768 | 0) == 0) {
   $253 = HEAP32[$c + 88 + ($247 << 2) >> 2] | 0; //@line 65982
   if ($67) {
    $s2_0 = ($253 & 128 | 0) != 0 ? $253 | -256 : $253 & 255; //@line 65991
    break;
   }
   if (($5 | 0) != 1) {
    $s2_0 = $253; //@line 65997
    break;
   }
   $s2_0 = ($253 & 32768 | 0) != 0 ? $253 | -65536 : $253 & 65535; //@line 66006
  } else {
   $s2_0 = HEAP32[$c + 120 + ($247 << 2) >> 2] | 0; //@line 66011
  }
 } while (0);
 $270 = $s2_0 ^ -2147483648; //@line 66016
 if ($270 >>> 0 < ($b1_0 ^ -2147483648) >>> 0) {
  $276 = 1; //@line 66020
 } else {
  $276 = $270 >>> 0 > ($b2_0 ^ -2147483648) >>> 0; //@line 66025
 }
 $279 = $c + 166 | 0; //@line 66031
 $280 = HEAP16[$279 >> 1] | 0; //@line 66032
 $storemerge54 = ($s2_0 | 0) == ($b1_0 | 0) | ($s2_0 | 0) == ($b2_0 | 0) ? $280 | 4 : $280 & -5; //@line 66035
 HEAP16[$279 >> 1] = $276 ? $storemerge54 | 1 : $storemerge54 & -2; //@line 66039
 $285 = $c + 372 | 0; //@line 66040
 HEAP32[$285 >> 2] = (HEAP32[$285 >> 2] | 0) + 14; //@line 66043
 if (!(($242 & 2048) == 0 | $276 ^ 1)) {
  _e68_exception_check($c); //@line 66050
  return;
 }
 $292 = HEAP32[$6 >> 2] | 0; //@line 66055
 if (($292 & 1 | 0) != 0) {
  _e68_exception_address($c, $292, 0, 0); //@line 66060
  return;
 }
 HEAP16[$14 >> 1] = HEAP16[$12 >> 1] | 0; //@line 66066
 $298 = $292 & 16777215; //@line 66067
 $299 = $298 + 1 | 0; //@line 66068
 if ($299 >>> 0 < (HEAP32[$17 >> 2] | 0) >>> 0) {
  $304 = HEAP32[$c + 32 >> 2] | 0; //@line 66074
  $_0_i_i45 = HEAPU8[$304 + $298 | 0] << 8 | HEAPU8[$304 + $299 | 0]; //@line 66084
 } else {
  $_0_i_i45 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $298) | 0; //@line 66092
 }
 HEAP16[$12 >> 1] = $_0_i_i45; //@line 66095
 if ((HEAP8[$37] | 0) == 0) {
  HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 2; //@line 66102
  HEAP32[$44 >> 2] = (HEAP32[$44 >> 2] | 0) + 2; //@line 66105
  return;
 } else {
  _e68_exception_bus($c); //@line 66110
  return;
 }
}
function _op4100($c) {
 $c = $c | 0;
 var $s1 = 0, $1 = 0, $4 = 0, $18 = 0, $20 = 0, $24 = 0, $27 = 0, $32 = 0, $35 = 0, $36 = 0, $41 = 0, $44 = 0, $45 = 0, $51 = 0, $_0_i_i = 0, $73 = 0, sp = 0;
 sp = STACKTOP; //@line 66130
 STACKTOP = STACKTOP + 8 | 0; //@line 66130
 $s1 = sp | 0; //@line 66131
 $1 = $c + 160 | 0; //@line 66132
 $4 = HEAP16[$1 >> 1] & 63; //@line 66135
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 4093, 32) | 0) != 0) {
  STACKTOP = sp; //@line 66142
  return;
 }
 if ((_e68_ea_get_val32($c, $s1) | 0) != 0) {
  STACKTOP = sp; //@line 66149
  return;
 }
 $18 = HEAP32[$c + 88 + (((HEAPU16[$1 >> 1] | 0) >>> 9 & 7) << 2) >> 2] | 0; //@line 66157
 do {
  if (($18 | 0) < 0) {
   $20 = $c + 166 | 0; //@line 66162
   HEAP16[$20 >> 1] = HEAP16[$20 >> 1] | 8; //@line 66165
  } else {
   $24 = HEAP32[$s1 >> 2] | 0; //@line 66167
   if (($24 | 0) < 0 | $18 >>> 0 > $24 >>> 0) {
    $27 = $c + 166 | 0; //@line 66173
    HEAP16[$27 >> 1] = HEAP16[$27 >> 1] & -9; //@line 66176
    break;
   }
   $32 = $c + 372 | 0; //@line 66179
   HEAP32[$32 >> 2] = (HEAP32[$32 >> 2] | 0) + 14; //@line 66182
   $35 = $c + 156 | 0; //@line 66183
   $36 = HEAP32[$35 >> 2] | 0; //@line 66184
   if (($36 & 1 | 0) != 0) {
    _e68_exception_address($c, $36, 0, 0); //@line 66189
    STACKTOP = sp; //@line 66191
    return;
   }
   $41 = $c + 164 | 0; //@line 66194
   HEAP16[$c + 162 >> 1] = HEAP16[$41 >> 1] | 0; //@line 66197
   $44 = $36 & 16777215; //@line 66198
   $45 = $44 + 1 | 0; //@line 66199
   if ($45 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
    $51 = HEAP32[$c + 32 >> 2] | 0; //@line 66206
    $_0_i_i = HEAPU8[$51 + $44 | 0] << 8 | HEAPU8[$51 + $45 | 0]; //@line 66216
   } else {
    $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $44) | 0; //@line 66224
   }
   HEAP16[$41 >> 1] = $_0_i_i; //@line 66227
   if ((HEAP8[$c + 336 | 0] | 0) == 0) {
    HEAP32[$35 >> 2] = (HEAP32[$35 >> 2] | 0) + 2; //@line 66235
    $73 = $c + 152 | 0; //@line 66236
    HEAP32[$73 >> 2] = (HEAP32[$73 >> 2] | 0) + 2; //@line 66239
    STACKTOP = sp; //@line 66241
    return;
   } else {
    _e68_exception_bus($c); //@line 66244
    STACKTOP = sp; //@line 66246
    return;
   }
  }
 } while (0);
 _e68_exception_check($c); //@line 66251
 STACKTOP = sp; //@line 66253
 return;
}
function _op4a001068($c) {
 $c = $c | 0;
 var $s = 0, $4 = 0, $13 = 0, $17 = 0, $18 = 0, $23 = 0, $26 = 0, $27 = 0, $33 = 0, $_0_i_i = 0, $55 = 0, sp = 0;
 sp = STACKTOP; //@line 66268
 STACKTOP = STACKTOP + 8 | 0; //@line 66268
 $s = sp | 0; //@line 66269
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 66273
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 4093, 8) | 0) != 0) {
  STACKTOP = sp; //@line 66280
  return;
 }
 if ((_e68_ea_get_val8($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 66287
  return;
 }
 $13 = $c + 372 | 0; //@line 66290
 HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 8; //@line 66293
 _e68_cc_set_nz_8($c, 15, HEAP8[$s] | 0); //@line 66295
 $17 = $c + 156 | 0; //@line 66296
 $18 = HEAP32[$17 >> 2] | 0; //@line 66297
 if (($18 & 1 | 0) != 0) {
  _e68_exception_address($c, $18, 0, 0); //@line 66302
  STACKTOP = sp; //@line 66304
  return;
 }
 $23 = $c + 164 | 0; //@line 66307
 HEAP16[$c + 162 >> 1] = HEAP16[$23 >> 1] | 0; //@line 66310
 $26 = $18 & 16777215; //@line 66311
 $27 = $26 + 1 | 0; //@line 66312
 if ($27 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $33 = HEAP32[$c + 32 >> 2] | 0; //@line 66319
  $_0_i_i = HEAPU8[$33 + $26 | 0] << 8 | HEAPU8[$33 + $27 | 0]; //@line 66329
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $26) | 0; //@line 66337
 }
 HEAP16[$23 >> 1] = $_0_i_i; //@line 66340
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$17 >> 2] = (HEAP32[$17 >> 2] | 0) + 2; //@line 66348
  $55 = $c + 152 | 0; //@line 66349
  HEAP32[$55 >> 2] = (HEAP32[$55 >> 2] | 0) + 2; //@line 66352
  STACKTOP = sp; //@line 66354
  return;
 } else {
  _e68_exception_bus($c); //@line 66357
  STACKTOP = sp; //@line 66359
  return;
 }
}
function _op4a401069($c) {
 $c = $c | 0;
 var $s = 0, $4 = 0, $13 = 0, $17 = 0, $18 = 0, $23 = 0, $26 = 0, $27 = 0, $33 = 0, $_0_i_i = 0, $55 = 0, sp = 0;
 sp = STACKTOP; //@line 66375
 STACKTOP = STACKTOP + 8 | 0; //@line 66375
 $s = sp | 0; //@line 66376
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 66380
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 4095, 16) | 0) != 0) {
  STACKTOP = sp; //@line 66387
  return;
 }
 if ((_e68_ea_get_val16($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 66394
  return;
 }
 $13 = $c + 372 | 0; //@line 66397
 HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 8; //@line 66400
 _e68_cc_set_nz_16($c, 15, HEAP16[$s >> 1] | 0); //@line 66402
 $17 = $c + 156 | 0; //@line 66403
 $18 = HEAP32[$17 >> 2] | 0; //@line 66404
 if (($18 & 1 | 0) != 0) {
  _e68_exception_address($c, $18, 0, 0); //@line 66409
  STACKTOP = sp; //@line 66411
  return;
 }
 $23 = $c + 164 | 0; //@line 66414
 HEAP16[$c + 162 >> 1] = HEAP16[$23 >> 1] | 0; //@line 66417
 $26 = $18 & 16777215; //@line 66418
 $27 = $26 + 1 | 0; //@line 66419
 if ($27 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $33 = HEAP32[$c + 32 >> 2] | 0; //@line 66426
  $_0_i_i = HEAPU8[$33 + $26 | 0] << 8 | HEAPU8[$33 + $27 | 0]; //@line 66436
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $26) | 0; //@line 66444
 }
 HEAP16[$23 >> 1] = $_0_i_i; //@line 66447
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$17 >> 2] = (HEAP32[$17 >> 2] | 0) + 2; //@line 66455
  $55 = $c + 152 | 0; //@line 66456
  HEAP32[$55 >> 2] = (HEAP32[$55 >> 2] | 0) + 2; //@line 66459
  STACKTOP = sp; //@line 66461
  return;
 } else {
  _e68_exception_bus($c); //@line 66464
  STACKTOP = sp; //@line 66466
  return;
 }
}
function _op4a801070($c) {
 $c = $c | 0;
 var $s = 0, $4 = 0, $13 = 0, $17 = 0, $18 = 0, $23 = 0, $26 = 0, $27 = 0, $33 = 0, $_0_i_i = 0, $55 = 0, sp = 0;
 sp = STACKTOP; //@line 66482
 STACKTOP = STACKTOP + 8 | 0; //@line 66482
 $s = sp | 0; //@line 66483
 $4 = HEAP16[$c + 160 >> 1] & 63; //@line 66487
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($4 << 2) >> 2] & 127]($c, $4, 4095, 32) | 0) != 0) {
  STACKTOP = sp; //@line 66494
  return;
 }
 if ((_e68_ea_get_val32($c, $s) | 0) != 0) {
  STACKTOP = sp; //@line 66501
  return;
 }
 $13 = $c + 372 | 0; //@line 66504
 HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 8; //@line 66507
 _e68_cc_set_nz_32($c, 15, HEAP32[$s >> 2] | 0); //@line 66509
 $17 = $c + 156 | 0; //@line 66510
 $18 = HEAP32[$17 >> 2] | 0; //@line 66511
 if (($18 & 1 | 0) != 0) {
  _e68_exception_address($c, $18, 0, 0); //@line 66516
  STACKTOP = sp; //@line 66518
  return;
 }
 $23 = $c + 164 | 0; //@line 66521
 HEAP16[$c + 162 >> 1] = HEAP16[$23 >> 1] | 0; //@line 66524
 $26 = $18 & 16777215; //@line 66525
 $27 = $26 + 1 | 0; //@line 66526
 if ($27 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $33 = HEAP32[$c + 32 >> 2] | 0; //@line 66533
  $_0_i_i = HEAPU8[$33 + $26 | 0] << 8 | HEAPU8[$33 + $27 | 0]; //@line 66543
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $26) | 0; //@line 66551
 }
 HEAP16[$23 >> 1] = $_0_i_i; //@line 66554
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$17 >> 2] = (HEAP32[$17 >> 2] | 0) + 2; //@line 66562
  $55 = $c + 152 | 0; //@line 66563
  HEAP32[$55 >> 2] = (HEAP32[$55 >> 2] | 0) + 2; //@line 66566
  STACKTOP = sp; //@line 66568
  return;
 } else {
  _e68_exception_bus($c); //@line 66571
  STACKTOP = sp; //@line 66573
  return;
 }
}
function _op4c00($c) {
 $c = $c | 0;
 var $st = 0, $1 = 0, $2 = 0, $7 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $17 = 0, $_0_i_i = 0, $32 = 0, $39 = 0, $43 = 0, $47 = 0, $52 = 0, $55 = 0, $59 = 0, $69$0 = 0, $69$1 = 0, $70 = 0, $72$0 = 0, $72$1 = 0, $75 = 0, $78 = 0, $s1_1$0 = 0, $s1_1$1 = 0, $s2_0$0 = 0, $s2_0$1 = 0, $81$0 = 0, $82 = 0, $83$0 = 0, $84 = 0, $90 = 0, $91 = 0, $storemerge39 = 0, $99 = 0, $102 = 0, $103 = 0, $storemerge = 0, $storemerge38 = 0, $115 = 0, $117 = 0, $119 = 0, $120 = 0, $125 = 0, $131 = 0, $132 = 0, $137 = 0, $_0_i_i42 = 0, sp = 0;
 sp = STACKTOP; //@line 66605
 STACKTOP = STACKTOP + 8 | 0; //@line 66605
 $st = sp | 0; //@line 66606
 $1 = $c + 156 | 0; //@line 66607
 $2 = HEAP32[$1 >> 2] | 0; //@line 66608
 if (($2 & 1 | 0) != 0) {
  _e68_exception_address($c, $2, 0, 0); //@line 66613
  STACKTOP = sp; //@line 66615
  return;
 }
 $7 = $c + 164 | 0; //@line 66618
 $9 = $c + 162 | 0; //@line 66620
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 66621
 $10 = $2 & 16777215; //@line 66622
 $11 = $10 + 1 | 0; //@line 66623
 $12 = $c + 36 | 0; //@line 66624
 if ($11 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $17 = HEAP32[$c + 32 >> 2] | 0; //@line 66630
  $_0_i_i = HEAPU8[$17 + $10 | 0] << 8 | HEAPU8[$17 + $11 | 0]; //@line 66640
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $10) | 0; //@line 66648
 }
 HEAP16[$7 >> 1] = $_0_i_i; //@line 66651
 $32 = $c + 336 | 0; //@line 66652
 if ((HEAP8[$32] | 0) != 0) {
  _e68_exception_bus($c); //@line 66657
  STACKTOP = sp; //@line 66659
  return;
 }
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 66664
 $39 = $c + 152 | 0; //@line 66665
 HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 2; //@line 66668
 $43 = HEAPU16[$9 >> 1] | 0; //@line 66670
 if (($43 & 33544 | 0) != 0) {
  $47 = $c + 372 | 0; //@line 66675
  HEAP32[$47 >> 2] = (HEAP32[$47 >> 2] | 0) + 2; //@line 66678
  _e68_exception_illegal($c); //@line 66679
  STACKTOP = sp; //@line 66681
  return;
 }
 $52 = ($43 & 2048 | 0) != 0; //@line 66685
 $55 = $43 & 7; //@line 66688
 $59 = HEAP16[$c + 160 >> 1] & 63; //@line 66692
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($59 << 2) >> 2] & 127]($c, $59, 4093, 32) | 0) != 0) {
  STACKTOP = sp; //@line 66699
  return;
 }
 if ((_e68_ea_get_val32($c, $st) | 0) != 0) {
  STACKTOP = sp; //@line 66706
  return;
 }
 $69$0 = HEAP32[$st >> 2] | 0; //@line 66710
 $69$1 = 0; //@line 66711
 $70 = $c + 88 + (($43 >>> 12 & 7) << 2) | 0; //@line 66712
 $72$0 = HEAP32[$70 >> 2] | 0; //@line 66714
 $72$1 = 0; //@line 66715
 if ($52) {
  $75 = ($69$0 & -2147483648 | 0) == 0 & ($69$1 & 0 | 0) == 0; //@line 66724
  $78 = ($72$0 & -2147483648 | 0) == 0 & ($72$1 & 0 | 0) == 0; //@line 66737
  $s2_0$1 = $78 ? $72$1 : $72$1 | -1;
  $s2_0$0 = $78 ? $72$0 : $72$0 | 0;
  $s1_1$1 = $75 ? $69$1 : $69$1 | -1;
  $s1_1$0 = $75 ? $69$0 : $69$0 | 0;
 } else {
  $s2_0$1 = $72$1;
  $s2_0$0 = $72$0;
  $s1_1$1 = $69$1;
  $s1_1$0 = $69$0;
 }
 $81$0 = ___muldi3($s2_0$0, $s2_0$1, $s1_1$0, $s1_1$1) | 0;
 $82 = $81$0; //@line 66755
 $83$0 = tempRet0; //@line 66756
 $84 = $83$0; //@line 66759
 HEAP32[$70 >> 2] = $82; //@line 66760
 do {
  if (($43 & 1024 | 0) == 0) {
   $102 = $c + 166 | 0; //@line 66767
   $103 = HEAP16[$102 >> 1] | 0; //@line 66768
   $storemerge = ($84 | 0) < 0 ? $103 | 8 : $103 & -9; //@line 66771
   $storemerge38 = ($83$0 | $81$0 | 0) == 0 ? $storemerge | 4 : $storemerge & -5; //@line 66779
   HEAP16[$102 >> 1] = $storemerge38; //@line 66780
   if (($84 | 0) == (($52 & ($82 | 0) < 0) << 31 >> 31 | 0)) {
    $117 = $storemerge38 & -3; //@line 66787
    HEAP16[$102 >> 1] = $117; //@line 66788
    $119 = $117; //@line 66789
    break;
   } else {
    $115 = $storemerge38 | 2; //@line 66792
    HEAP16[$102 >> 1] = $115; //@line 66793
    $119 = $115; //@line 66795
    break;
   }
  } else {
   HEAP32[$c + 88 + ($55 << 2) >> 2] = $84; //@line 66800
   $90 = $c + 166 | 0; //@line 66802
   $91 = HEAP16[$90 >> 1] | 0; //@line 66803
   $storemerge39 = ($84 | 0) < 0 ? $91 | 8 : $91 & -9; //@line 66806
   $99 = (($83$0 | $81$0 | 0) == 0 ? $storemerge39 | 4 : $storemerge39 & -7) & -3; //@line 66815
   HEAP16[$90 >> 1] = $99; //@line 66816
   $119 = $99; //@line 66818
  }
 } while (0);
 $120 = $c + 372 | 0; //@line 66822
 HEAP32[$120 >> 2] = (HEAP32[$120 >> 2] | 0) + 74; //@line 66825
 HEAP16[$c + 166 >> 1] = $119 & -2; //@line 66828
 $125 = HEAP32[$1 >> 2] | 0; //@line 66829
 if (($125 & 1 | 0) != 0) {
  _e68_exception_address($c, $125, 0, 0); //@line 66834
  STACKTOP = sp; //@line 66836
  return;
 }
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 66840
 $131 = $125 & 16777215; //@line 66841
 $132 = $131 + 1 | 0; //@line 66842
 if ($132 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $137 = HEAP32[$c + 32 >> 2] | 0; //@line 66848
  $_0_i_i42 = HEAPU8[$137 + $131 | 0] << 8 | HEAPU8[$137 + $132 | 0]; //@line 66858
 } else {
  $_0_i_i42 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $131) | 0; //@line 66866
 }
 HEAP16[$7 >> 1] = $_0_i_i42; //@line 66869
 if ((HEAP8[$32] | 0) == 0) {
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 66876
  HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 2; //@line 66879
  STACKTOP = sp; //@line 66881
  return;
 } else {
  _e68_exception_bus($c); //@line 66884
  STACKTOP = sp; //@line 66886
  return;
 }
}
function _op4c40($c) {
 $c = $c | 0;
 var $s1 = 0, $1 = 0, $2 = 0, $7 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $17 = 0, $_0_i_i = 0, $32 = 0, $39 = 0, $43 = 0, $47 = 0, $52 = 0, $54 = 0, $55 = 0, $59 = 0, $68 = 0, $69 = 0, $70 = 0, $78 = 0, $80 = 0, $83 = 0, $s2_0 = 0, $neg2_0 = 0, $neg1_0 = 0, $88 = 0, $_lobit = 0, $s2_1 = 0, $s3_0 = 0, $neg2_1 = 0, $101$0 = 0, $101$1 = 0, $102$0 = 0, $102$1 = 0, $103$0 = 0, $103$1 = 0, $104 = 0, $105$0 = 0, $106 = 0, $$etemp$0$1 = 0, $$etemp$2$1 = 0, $neg2_256 = 0, $d2_055 = 0, $d1_054 = 0, $d1_0_ = 0, $124 = 0, $128 = 0, $131 = 0, $137 = 0, $138 = 0, $143 = 0, $_0_i_i50 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 66916
 STACKTOP = STACKTOP + 8 | 0; //@line 66916
 $s1 = sp | 0; //@line 66917
 $1 = $c + 156 | 0; //@line 66918
 $2 = HEAP32[$1 >> 2] | 0; //@line 66919
 if (($2 & 1 | 0) != 0) {
  _e68_exception_address($c, $2, 0, 0); //@line 66924
  STACKTOP = sp; //@line 66926
  return;
 }
 $7 = $c + 164 | 0; //@line 66929
 $9 = $c + 162 | 0; //@line 66931
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 66932
 $10 = $2 & 16777215; //@line 66933
 $11 = $10 + 1 | 0; //@line 66934
 $12 = $c + 36 | 0; //@line 66935
 if ($11 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $17 = HEAP32[$c + 32 >> 2] | 0; //@line 66941
  $_0_i_i = HEAPU8[$17 + $10 | 0] << 8 | HEAPU8[$17 + $11 | 0]; //@line 66951
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $10) | 0; //@line 66959
 }
 HEAP16[$7 >> 1] = $_0_i_i; //@line 66962
 $32 = $c + 336 | 0; //@line 66963
 if ((HEAP8[$32] | 0) != 0) {
  _e68_exception_bus($c); //@line 66968
  STACKTOP = sp; //@line 66970
  return;
 }
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 66975
 $39 = $c + 152 | 0; //@line 66976
 HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 2; //@line 66979
 $43 = HEAPU16[$9 >> 1] | 0; //@line 66981
 if (($43 & 33544 | 0) != 0) {
  $47 = $c + 372 | 0; //@line 66986
  HEAP32[$47 >> 2] = (HEAP32[$47 >> 2] | 0) + 2; //@line 66989
  _e68_exception_illegal($c); //@line 66990
  STACKTOP = sp; //@line 66992
  return;
 }
 $52 = ($43 & 2048 | 0) != 0; //@line 66996
 $54 = $43 >>> 12 & 7; //@line 66998
 $55 = $43 & 7; //@line 66999
 $59 = HEAP16[$c + 160 >> 1] & 63; //@line 67003
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($59 << 2) >> 2] & 127]($c, $59, 4093, 32) | 0) != 0) {
  STACKTOP = sp; //@line 67010
  return;
 }
 if ((_e68_ea_get_val32($c, $s1) | 0) != 0) {
  STACKTOP = sp; //@line 67017
  return;
 }
 $68 = $c + 88 + ($54 << 2) | 0; //@line 67020
 $69 = HEAP32[$68 >> 2] | 0; //@line 67021
 $70 = HEAP32[$s1 >> 2] | 0; //@line 67022
 if (($70 | 0) == 0) {
  _e68_exception_divzero($c); //@line 67026
  STACKTOP = sp; //@line 67028
  return;
 }
 if ($52) {
  if (($70 | 0) < 0) {
   $78 = -$70 | 0; //@line 67039
   HEAP32[$s1 >> 2] = $78; //@line 67040
   $80 = $78; //@line 67042
  } else {
   $80 = $70; //@line 67044
  }
  $neg1_0 = $70 >>> 31;
  $neg2_0 = $69 >>> 31;
  $s2_0 = ($69 | 0) < 0 ? -$69 | 0 : $69;
  $83 = $80;
 } else {
  $neg1_0 = 0;
  $neg2_0 = 0;
  $s2_0 = $69;
  $83 = $70;
 }
 L10511 : do {
  if (($43 & 1024 | 0) == 0) {
   $d1_054 = ($s2_0 >>> 0) / ($83 >>> 0) | 0;
   $d2_055 = ($s2_0 >>> 0) % ($83 >>> 0) | 0;
   $neg2_256 = $neg2_0;
   label = 8358; //@line 67066
  } else {
   $88 = HEAP32[$c + 88 + ($55 << 2) >> 2] | 0; //@line 67069
   do {
    if ($52) {
     $_lobit = $88 >>> 31; //@line 67074
     if (($88 | 0) >= 0) {
      $neg2_1 = $_lobit;
      $s3_0 = $88;
      $s2_1 = $69;
      break;
     }
     $neg2_1 = $_lobit;
     $s3_0 = (($69 | 0) == 0) + ~$88 | 0;
     $s2_1 = -$69 | 0;
    } else {
     $neg2_1 = $neg2_0;
     $s3_0 = $88;
     $s2_1 = $69;
    }
   } while (0);
   $101$0 = $s2_1 | 0; //@line 67100
   $101$1 = $s3_0 | 0; //@line 67101
   $102$0 = $83; //@line 67102
   $102$1 = 0; //@line 67103
   $103$0 = ___udivdi3($101$0, $101$1, $102$0, $102$1) | 0;
   $103$1 = tempRet0;
   $104 = $103$0; //@line 67106
   $105$0 = ___uremdi3($101$0, $101$1, $102$0, $102$1) | 0;
   $106 = $105$0; //@line 67109
   do {
    if ($52) {
     $$etemp$0$1 = 0; //@line 67114
     if ($103$1 >>> 0 > $$etemp$0$1 >>> 0 | $103$1 >>> 0 == $$etemp$0$1 >>> 0 & $103$0 >>> 0 > -2147483648 >>> 0) {
      break;
     }
     if (!(($103$0 | 0) == (-2147483648 | 0) & ($103$1 | 0) == 0 & ($neg1_0 | 0) == ($neg2_1 | 0))) {
      $d1_054 = $104;
      $d2_055 = $106;
      $neg2_256 = $neg2_1;
      label = 8358; //@line 67128
      break L10511;
     }
    } else {
     $$etemp$2$1 = 1; //@line 67133
     if ($103$1 >>> 0 < $$etemp$2$1 >>> 0 | $103$1 >>> 0 == $$etemp$2$1 >>> 0 & $103$0 >>> 0 < 0 >>> 0) {
      $d1_054 = $104;
      $d2_055 = $106;
      $neg2_256 = $neg2_1;
      label = 8358; //@line 67138
      break L10511;
     }
    }
   } while (0);
   $124 = $c + 166 | 0; //@line 67143
   HEAP16[$124 >> 1] = HEAP16[$124 >> 1] | 2; //@line 67146
  }
 } while (0);
 if ((label | 0) == 8358) {
  $d1_0_ = ($neg1_0 | 0) == ($neg2_256 | 0) ? $d1_054 : -$d1_054 | 0; //@line 67155
  HEAP32[$68 >> 2] = $d1_0_; //@line 67156
  if (($55 | 0) != ($54 | 0)) {
   HEAP32[$c + 88 + ($55 << 2) >> 2] = ($neg2_256 | 0) == 0 ? $d2_055 : -$d2_055 | 0; //@line 67164
  }
  _e68_cc_set_nz_32($c, 15, $d1_0_); //@line 67167
 }
 $128 = $c + 372 | 0; //@line 67170
 HEAP32[$128 >> 2] = (HEAP32[$128 >> 2] | 0) + 144; //@line 67173
 $131 = HEAP32[$1 >> 2] | 0; //@line 67174
 if (($131 & 1 | 0) != 0) {
  _e68_exception_address($c, $131, 0, 0); //@line 67179
  STACKTOP = sp; //@line 67181
  return;
 }
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 67185
 $137 = $131 & 16777215; //@line 67186
 $138 = $137 + 1 | 0; //@line 67187
 if ($138 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $143 = HEAP32[$c + 32 >> 2] | 0; //@line 67193
  $_0_i_i50 = HEAPU8[$143 + $137 | 0] << 8 | HEAPU8[$143 + $138 | 0]; //@line 67203
 } else {
  $_0_i_i50 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $137) | 0; //@line 67211
 }
 HEAP16[$7 >> 1] = $_0_i_i50; //@line 67214
 if ((HEAP8[$32] | 0) == 0) {
  HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 67221
  HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 2; //@line 67224
  STACKTOP = sp; //@line 67226
  return;
 } else {
  _e68_exception_bus($c); //@line 67229
  STACKTOP = sp; //@line 67231
  return;
 }
}
function _op50c01071($c) {
 $c = $c | 0;
 var $3 = 0;
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 67244
 if ((($3 & 63) - 58 | 0) >>> 0 < 3) {
  _e68_op_trapcc($c, 1); //@line 67250
  return;
 }
 if (($3 & 56 | 0) == 8) {
  _e68_op_dbcc($c, 1); //@line 67259
  return;
 } else {
  _e68_op_scc($c, 1); //@line 67264
  return;
 }
}
function _op51c01072($c) {
 $c = $c | 0;
 var $3 = 0;
 $3 = HEAPU16[$c + 160 >> 1] | 0; //@line 67278
 if ((($3 & 63) - 58 | 0) >>> 0 < 3) {
  _e68_op_trapcc($c, 0); //@line 67284
  return;
 }
 if (($3 & 56 | 0) == 8) {
  _e68_op_dbcc($c, 0); //@line 67293
  return;
 } else {
  _e68_op_scc($c, 0); //@line 67298
  return;
 }
}
function _op52c01073($c) {
 $c = $c | 0;
 var $3 = 0, $10 = 0, $13 = 0;
 $3 = HEAPU16[$c + 166 >> 1] | 0; //@line 67314
 if (($3 & 1 | 0) == 0) {
  $10 = $3 >>> 2 & 1 ^ 1; //@line 67322
 } else {
  $10 = 0; //@line 67324
 }
 $13 = HEAPU16[$c + 160 >> 1] | 0; //@line 67329
 if ((($13 & 63) - 58 | 0) >>> 0 < 3) {
  _e68_op_trapcc($c, $10); //@line 67335
  return;
 }
 if (($13 & 56 | 0) == 8) {
  _e68_op_dbcc($c, $10); //@line 67344
  return;
 } else {
  _e68_op_scc($c, $10); //@line 67349
  return;
 }
}
function _op53c01074($c) {
 $c = $c | 0;
 var $3 = 0, $9 = 0, $12 = 0;
 $3 = HEAPU16[$c + 166 >> 1] | 0; //@line 67364
 if (($3 & 1 | 0) == 0) {
  $9 = $3 >>> 2 & 1; //@line 67372
 } else {
  $9 = 1; //@line 67374
 }
 $12 = HEAPU16[$c + 160 >> 1] | 0; //@line 67379
 if ((($12 & 63) - 58 | 0) >>> 0 < 3) {
  _e68_op_trapcc($c, $9); //@line 67385
  return;
 }
 if (($12 & 56 | 0) == 8) {
  _e68_op_dbcc($c, $9); //@line 67394
  return;
 } else {
  _e68_op_scc($c, $9); //@line 67399
  return;
 }
}
function _op54c01075($c) {
 $c = $c | 0;
 var $5 = 0, $8 = 0;
 $5 = (HEAP16[$c + 166 >> 1] & 1 ^ 1) & 65535; //@line 67416
 $8 = HEAPU16[$c + 160 >> 1] | 0; //@line 67419
 if ((($8 & 63) - 58 | 0) >>> 0 < 3) {
  _e68_op_trapcc($c, $5); //@line 67425
  return;
 }
 if (($8 & 56 | 0) == 8) {
  _e68_op_dbcc($c, $5); //@line 67434
  return;
 } else {
  _e68_op_scc($c, $5); //@line 67439
  return;
 }
}
function _op55c01076($c) {
 $c = $c | 0;
 var $4 = 0, $7 = 0;
 $4 = HEAP16[$c + 166 >> 1] & 1; //@line 67455
 $7 = HEAPU16[$c + 160 >> 1] | 0; //@line 67458
 if ((($7 & 63) - 58 | 0) >>> 0 < 3) {
  _e68_op_trapcc($c, $4); //@line 67464
  return;
 }
 if (($7 & 56 | 0) == 8) {
  _e68_op_dbcc($c, $4); //@line 67473
  return;
 } else {
  _e68_op_scc($c, $4); //@line 67478
  return;
 }
}
function _op56c01077($c) {
 $c = $c | 0;
 var $5 = 0, $8 = 0;
 $5 = ((HEAPU16[$c + 166 >> 1] | 0) >>> 2 & 1 ^ 1) & 65535; //@line 67496
 $8 = HEAPU16[$c + 160 >> 1] | 0; //@line 67499
 if ((($8 & 63) - 58 | 0) >>> 0 < 3) {
  _e68_op_trapcc($c, $5); //@line 67505
  return;
 }
 if (($8 & 56 | 0) == 8) {
  _e68_op_dbcc($c, $5); //@line 67514
  return;
 } else {
  _e68_op_scc($c, $5); //@line 67519
  return;
 }
}
function _op57c01078($c) {
 $c = $c | 0;
 var $4 = 0, $7 = 0;
 $4 = (HEAPU16[$c + 166 >> 1] | 0) >>> 2 & 1; //@line 67536
 $7 = HEAPU16[$c + 160 >> 1] | 0; //@line 67539
 if ((($7 & 63) - 58 | 0) >>> 0 < 3) {
  _e68_op_trapcc($c, $4); //@line 67545
  return;
 }
 if (($7 & 56 | 0) == 8) {
  _e68_op_dbcc($c, $4); //@line 67554
  return;
 } else {
  _e68_op_scc($c, $4); //@line 67559
  return;
 }
}
function _op58c01079($c) {
 $c = $c | 0;
 var $5 = 0, $8 = 0;
 $5 = ((HEAPU16[$c + 166 >> 1] | 0) >>> 1 & 1 ^ 1) & 65535; //@line 67577
 $8 = HEAPU16[$c + 160 >> 1] | 0; //@line 67580
 if ((($8 & 63) - 58 | 0) >>> 0 < 3) {
  _e68_op_trapcc($c, $5); //@line 67586
  return;
 }
 if (($8 & 56 | 0) == 8) {
  _e68_op_dbcc($c, $5); //@line 67595
  return;
 } else {
  _e68_op_scc($c, $5); //@line 67600
  return;
 }
}
function _op59c01080($c) {
 $c = $c | 0;
 var $4 = 0, $7 = 0;
 $4 = (HEAPU16[$c + 166 >> 1] | 0) >>> 1 & 1; //@line 67617
 $7 = HEAPU16[$c + 160 >> 1] | 0; //@line 67620
 if ((($7 & 63) - 58 | 0) >>> 0 < 3) {
  _e68_op_trapcc($c, $4); //@line 67626
  return;
 }
 if (($7 & 56 | 0) == 8) {
  _e68_op_dbcc($c, $4); //@line 67635
  return;
 } else {
  _e68_op_scc($c, $4); //@line 67640
  return;
 }
}
function _op5ac01081($c) {
 $c = $c | 0;
 var $5 = 0, $8 = 0;
 $5 = ((HEAPU16[$c + 166 >> 1] | 0) >>> 3 & 1 ^ 1) & 65535; //@line 67658
 $8 = HEAPU16[$c + 160 >> 1] | 0; //@line 67661
 if ((($8 & 63) - 58 | 0) >>> 0 < 3) {
  _e68_op_trapcc($c, $5); //@line 67667
  return;
 }
 if (($8 & 56 | 0) == 8) {
  _e68_op_dbcc($c, $5); //@line 67676
  return;
 } else {
  _e68_op_scc($c, $5); //@line 67681
  return;
 }
}
function _op5bc01082($c) {
 $c = $c | 0;
 var $4 = 0, $7 = 0;
 $4 = (HEAPU16[$c + 166 >> 1] | 0) >>> 3 & 1; //@line 67698
 $7 = HEAPU16[$c + 160 >> 1] | 0; //@line 67701
 if ((($7 & 63) - 58 | 0) >>> 0 < 3) {
  _e68_op_trapcc($c, $4); //@line 67707
  return;
 }
 if (($7 & 56 | 0) == 8) {
  _e68_op_dbcc($c, $4); //@line 67716
  return;
 } else {
  _e68_op_scc($c, $4); //@line 67721
  return;
 }
}
function _op5cc01083($c) {
 $c = $c | 0;
 var $3 = 0, $8 = 0, $11 = 0;
 $3 = HEAPU16[$c + 166 >> 1] | 0; //@line 67736
 $8 = ($3 >>> 3 ^ $3 >>> 1) & 1 ^ 1; //@line 67741
 $11 = HEAPU16[$c + 160 >> 1] | 0; //@line 67744
 if ((($11 & 63) - 58 | 0) >>> 0 < 3) {
  _e68_op_trapcc($c, $8); //@line 67750
  return;
 }
 if (($11 & 56 | 0) == 8) {
  _e68_op_dbcc($c, $8); //@line 67759
  return;
 } else {
  _e68_op_scc($c, $8); //@line 67764
  return;
 }
}
function _op5dc01084($c) {
 $c = $c | 0;
 var $3 = 0, $7 = 0, $10 = 0;
 $3 = HEAPU16[$c + 166 >> 1] | 0; //@line 67779
 $7 = ($3 >>> 3 ^ $3 >>> 1) & 1; //@line 67783
 $10 = HEAPU16[$c + 160 >> 1] | 0; //@line 67786
 if ((($10 & 63) - 58 | 0) >>> 0 < 3) {
  _e68_op_trapcc($c, $7); //@line 67792
  return;
 }
 if (($10 & 56 | 0) == 8) {
  _e68_op_dbcc($c, $7); //@line 67801
  return;
 } else {
  _e68_op_scc($c, $7); //@line 67806
  return;
 }
}
function _op5ec01085($c) {
 $c = $c | 0;
 var $3 = 0, $13 = 0, $16 = 0;
 $3 = HEAPU16[$c + 166 >> 1] | 0; //@line 67822
 if ((($3 >>> 3 ^ $3 >>> 1) & 1 | 0) == 0) {
  $13 = $3 >>> 2 & 1 ^ 1; //@line 67833
 } else {
  $13 = 0; //@line 67835
 }
 $16 = HEAPU16[$c + 160 >> 1] | 0; //@line 67840
 if ((($16 & 63) - 58 | 0) >>> 0 < 3) {
  _e68_op_trapcc($c, $13); //@line 67846
  return;
 }
 if (($16 & 56 | 0) == 8) {
  _e68_op_dbcc($c, $13); //@line 67855
  return;
 } else {
  _e68_op_scc($c, $13); //@line 67860
  return;
 }
}
function _op5fc01086($c) {
 $c = $c | 0;
 var $3 = 0, $12 = 0, $15 = 0;
 $3 = HEAPU16[$c + 166 >> 1] | 0; //@line 67876
 if ((($3 >>> 3 ^ $3 >>> 1) & 1 | 0) == 0) {
  $12 = $3 >>> 2 & 1; //@line 67887
 } else {
  $12 = 1; //@line 67889
 }
 $15 = HEAPU16[$c + 160 >> 1] | 0; //@line 67894
 if ((($15 & 63) - 58 | 0) >>> 0 < 3) {
  _e68_op_trapcc($c, $12); //@line 67900
  return;
 }
 if (($15 & 56 | 0) == 8) {
  _e68_op_dbcc($c, $12); //@line 67909
  return;
 } else {
  _e68_op_scc($c, $12); //@line 67914
  return;
 }
}
function _op60001087($c) {
 $c = $c | 0;
 _e68020_op_bcc($c, 1); //@line 67925
 return;
}
function _op61001088($c) {
 $c = $c | 0;
 var $4 = 0, $addr_0 = 0, $18 = 0, $20 = 0, $21 = 0, $22 = 0, $29 = 0;
 $4 = HEAP16[$c + 160 >> 1] & 255; //@line 67944
 if (($4 | 0) == 0) {
  $addr_0 = (HEAP32[$c + 152 >> 2] | 0) + 4 | 0; //@line 67950
 } else if (($4 | 0) == 255) {
  $addr_0 = (HEAP32[$c + 152 >> 2] | 0) + 6 | 0; //@line 67956
 } else {
  $addr_0 = (HEAP32[$c + 152 >> 2] | 0) + 2 | 0; //@line 67962
 }
 $18 = $c + 148 | 0; //@line 67965
 $20 = (HEAP32[$18 >> 2] | 0) - 4 | 0; //@line 67967
 $21 = $20 & 16777215; //@line 67968
 $22 = $21 + 3 | 0; //@line 67969
 if ($22 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $29 = $c + 32 | 0; //@line 67977
  HEAP8[(HEAP32[$29 >> 2] | 0) + $21 | 0] = $addr_0 >>> 24 & 255; //@line 67980
  HEAP8[(HEAP32[$29 >> 2] | 0) + ($21 + 1) | 0] = $addr_0 >>> 16 & 255; //@line 67986
  HEAP8[(HEAP32[$29 >> 2] | 0) + ($21 + 2) | 0] = $addr_0 >>> 8 & 255; //@line 67992
  HEAP8[(HEAP32[$29 >> 2] | 0) + $22 | 0] = $addr_0 & 255; //@line 67996
  HEAP32[$18 >> 2] = $20; //@line 67998
  _e68020_op_bcc($c, 1); //@line 67999
  return;
 } else {
  FUNCTION_TABLE_viii[HEAP32[$c + 28 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $21, $addr_0); //@line 68007
  HEAP32[$18 >> 2] = $20; //@line 68008
  _e68020_op_bcc($c, 1); //@line 68009
  return;
 }
}
function _op62001089($c) {
 $c = $c | 0;
 var $3 = 0, $10 = 0;
 $3 = HEAPU16[$c + 166 >> 1] | 0; //@line 68024
 if (($3 & 1 | 0) != 0) {
  $10 = 0; //@line 68029
  _e68020_op_bcc($c, $10); //@line 68031
  return;
 }
 $10 = $3 >>> 2 & 1 ^ 1; //@line 68038
 _e68020_op_bcc($c, $10); //@line 68040
 return;
}
function _op63001090($c) {
 $c = $c | 0;
 var $3 = 0, $9 = 0;
 $3 = HEAPU16[$c + 166 >> 1] | 0; //@line 68053
 if (($3 & 1 | 0) != 0) {
  $9 = 1; //@line 68058
  _e68020_op_bcc($c, $9); //@line 68060
  return;
 }
 $9 = $3 >>> 2 & 1; //@line 68067
 _e68020_op_bcc($c, $9); //@line 68069
 return;
}
function _op64001091($c) {
 $c = $c | 0;
 _e68020_op_bcc($c, (HEAP16[$c + 166 >> 1] & 1 ^ 1) & 65535); //@line 68085
 return;
}
function _op65001092($c) {
 $c = $c | 0;
 _e68020_op_bcc($c, HEAP16[$c + 166 >> 1] & 1); //@line 68100
 return;
}
function _op66001093($c) {
 $c = $c | 0;
 _e68020_op_bcc($c, ((HEAPU16[$c + 166 >> 1] | 0) >>> 2 & 1 ^ 1) & 65535); //@line 68117
 return;
}
function _op67001094($c) {
 $c = $c | 0;
 _e68020_op_bcc($c, (HEAPU16[$c + 166 >> 1] | 0) >>> 2 & 1); //@line 68133
 return;
}
function _op68001095($c) {
 $c = $c | 0;
 _e68020_op_bcc($c, ((HEAPU16[$c + 166 >> 1] | 0) >>> 1 & 1 ^ 1) & 65535); //@line 68150
 return;
}
function _op69001096($c) {
 $c = $c | 0;
 _e68020_op_bcc($c, (HEAPU16[$c + 166 >> 1] | 0) >>> 1 & 1); //@line 68166
 return;
}
function _op6a001097($c) {
 $c = $c | 0;
 _e68020_op_bcc($c, ((HEAPU16[$c + 166 >> 1] | 0) >>> 3 & 1 ^ 1) & 65535); //@line 68183
 return;
}
function _op6b001098($c) {
 $c = $c | 0;
 _e68020_op_bcc($c, (HEAPU16[$c + 166 >> 1] | 0) >>> 3 & 1); //@line 68199
 return;
}
function _op6c001099($c) {
 $c = $c | 0;
 var $3 = 0;
 $3 = HEAPU16[$c + 166 >> 1] | 0; //@line 68212
 _e68020_op_bcc($c, ($3 >>> 3 ^ $3 >>> 1) & 1 ^ 1); //@line 68218
 return;
}
function _op6d001100($c) {
 $c = $c | 0;
 var $3 = 0;
 $3 = HEAPU16[$c + 166 >> 1] | 0; //@line 68231
 _e68020_op_bcc($c, ($3 >>> 3 ^ $3 >>> 1) & 1); //@line 68236
 return;
}
function _op6e001101($c) {
 $c = $c | 0;
 var $3 = 0, $13 = 0;
 $3 = HEAPU16[$c + 166 >> 1] | 0; //@line 68250
 if ((($3 >>> 3 ^ $3 >>> 1) & 1 | 0) != 0) {
  $13 = 0; //@line 68258
  _e68020_op_bcc($c, $13); //@line 68260
  return;
 }
 $13 = $3 >>> 2 & 1 ^ 1; //@line 68267
 _e68020_op_bcc($c, $13); //@line 68269
 return;
}
function _op6f001102($c) {
 $c = $c | 0;
 var $3 = 0, $12 = 0;
 $3 = HEAPU16[$c + 166 >> 1] | 0; //@line 68283
 if ((($3 >>> 3 ^ $3 >>> 1) & 1 | 0) != 0) {
  $12 = 1; //@line 68291
  _e68020_op_bcc($c, $12); //@line 68293
  return;
 }
 $12 = $3 >>> 2 & 1; //@line 68300
 _e68020_op_bcc($c, $12); //@line 68302
 return;
}
function _ope8c0($c) {
 $c = $c | 0;
 var $val = 0, $4 = 0, $13 = 0, $14 = 0, $19 = 0, $22 = 0, $23 = 0, $29 = 0, $_0_i_i = 0, $51 = 0, sp = 0;
 sp = STACKTOP; //@line 68317
 STACKTOP = STACKTOP + 8 | 0; //@line 68317
 $val = sp | 0; //@line 68318
 if ((_e68_get_ea_bf($c, $val, 2021) | 0) != 0) {
  $4 = $c + 372 | 0; //@line 68323
  HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 2; //@line 68326
  _e68_exception_illegal($c); //@line 68327
  STACKTOP = sp; //@line 68328
  return;
 }
 _e68_cc_set_nz_32($c, 15, HEAP32[$val >> 2] << 32 - (HEAP32[$c + 352 >> 2] | 0)); //@line 68336
 $13 = $c + 156 | 0; //@line 68337
 $14 = HEAP32[$13 >> 2] | 0; //@line 68338
 if (($14 & 1 | 0) != 0) {
  _e68_exception_address($c, $14, 0, 0); //@line 68343
  STACKTOP = sp; //@line 68345
  return;
 }
 $19 = $c + 164 | 0; //@line 68348
 HEAP16[$c + 162 >> 1] = HEAP16[$19 >> 1] | 0; //@line 68351
 $22 = $14 & 16777215; //@line 68352
 $23 = $22 + 1 | 0; //@line 68353
 if ($23 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $29 = HEAP32[$c + 32 >> 2] | 0; //@line 68360
  $_0_i_i = HEAPU8[$29 + $22 | 0] << 8 | HEAPU8[$29 + $23 | 0]; //@line 68370
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $22) | 0; //@line 68378
 }
 HEAP16[$19 >> 1] = $_0_i_i; //@line 68381
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 2; //@line 68389
  $51 = $c + 152 | 0; //@line 68390
  HEAP32[$51 >> 2] = (HEAP32[$51 >> 2] | 0) + 2; //@line 68393
  STACKTOP = sp; //@line 68395
  return;
 } else {
  _e68_exception_bus($c); //@line 68398
  STACKTOP = sp; //@line 68400
  return;
 }
}
function _ope9c0($c) {
 $c = $c | 0;
 var $val = 0, $4 = 0, $8 = 0, $12 = 0, $15 = 0, $18 = 0, $21 = 0, $22 = 0, $27 = 0, $29 = 0, $30 = 0, $36 = 0, $_0_i_i = 0, $58 = 0, sp = 0;
 sp = STACKTOP; //@line 68416
 STACKTOP = STACKTOP + 8 | 0; //@line 68416
 $val = sp | 0; //@line 68417
 if ((_e68_get_ea_bf($c, $val, 2021) | 0) != 0) {
  $4 = $c + 372 | 0; //@line 68422
  HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 2; //@line 68425
  _e68_exception_illegal($c); //@line 68426
  STACKTOP = sp; //@line 68427
  return;
 }
 $8 = $c + 162 | 0; //@line 68430
 $12 = (HEAPU16[$8 >> 1] | 0) >>> 12 & 7; //@line 68434
 $15 = 32 - (HEAP32[$c + 352 >> 2] | 0) | 0; //@line 68437
 $18 = -1 >>> ($15 >>> 0) & HEAP32[$val >> 2]; //@line 68440
 HEAP32[$val >> 2] = $18; //@line 68441
 _e68_cc_set_nz_32($c, 15, $18 << $15); //@line 68443
 HEAP32[$c + 88 + ($12 << 2) >> 2] = $18; //@line 68445
 $21 = $c + 156 | 0; //@line 68446
 $22 = HEAP32[$21 >> 2] | 0; //@line 68447
 if (($22 & 1 | 0) != 0) {
  _e68_exception_address($c, $22, 0, 0); //@line 68452
  STACKTOP = sp; //@line 68454
  return;
 }
 $27 = $c + 164 | 0; //@line 68457
 HEAP16[$8 >> 1] = HEAP16[$27 >> 1] | 0; //@line 68459
 $29 = $22 & 16777215; //@line 68460
 $30 = $29 + 1 | 0; //@line 68461
 if ($30 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $36 = HEAP32[$c + 32 >> 2] | 0; //@line 68468
  $_0_i_i = HEAPU8[$36 + $29 | 0] << 8 | HEAPU8[$36 + $30 | 0]; //@line 68478
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $29) | 0; //@line 68486
 }
 HEAP16[$27 >> 1] = $_0_i_i; //@line 68489
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$21 >> 2] = (HEAP32[$21 >> 2] | 0) + 2; //@line 68497
  $58 = $c + 152 | 0; //@line 68498
  HEAP32[$58 >> 2] = (HEAP32[$58 >> 2] | 0) + 2; //@line 68501
  STACKTOP = sp; //@line 68503
  return;
 } else {
  _e68_exception_bus($c); //@line 68506
  STACKTOP = sp; //@line 68508
  return;
 }
}
function _opeac0($c) {
 $c = $c | 0;
 var $val = 0, $4 = 0, $8 = 0, $13 = 0, $21 = 0, $22 = 0, $27 = 0, $30 = 0, $31 = 0, $37 = 0, $_0_i_i = 0, $59 = 0, sp = 0;
 sp = STACKTOP; //@line 68524
 STACKTOP = STACKTOP + 8 | 0; //@line 68524
 $val = sp | 0; //@line 68525
 if ((_e68_get_ea_bf($c, $val, 485) | 0) != 0) {
  $4 = $c + 372 | 0; //@line 68530
  HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 2; //@line 68533
  _e68_exception_illegal($c); //@line 68534
  STACKTOP = sp; //@line 68536
  return;
 }
 $8 = HEAP32[$val >> 2] | 0; //@line 68539
 if ((_e68_set_ea_bf($c, ~$8) | 0) != 0) {
  $13 = $c + 372 | 0; //@line 68545
  HEAP32[$13 >> 2] = (HEAP32[$13 >> 2] | 0) + 2; //@line 68548
  _e68_exception_illegal($c); //@line 68549
  STACKTOP = sp; //@line 68551
  return;
 }
 _e68_cc_set_nz_32($c, 15, $8 << 32 - (HEAP32[$c + 352 >> 2] | 0)); //@line 68558
 $21 = $c + 156 | 0; //@line 68559
 $22 = HEAP32[$21 >> 2] | 0; //@line 68560
 if (($22 & 1 | 0) != 0) {
  _e68_exception_address($c, $22, 0, 0); //@line 68565
  STACKTOP = sp; //@line 68567
  return;
 }
 $27 = $c + 164 | 0; //@line 68570
 HEAP16[$c + 162 >> 1] = HEAP16[$27 >> 1] | 0; //@line 68573
 $30 = $22 & 16777215; //@line 68574
 $31 = $30 + 1 | 0; //@line 68575
 if ($31 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $37 = HEAP32[$c + 32 >> 2] | 0; //@line 68582
  $_0_i_i = HEAPU8[$37 + $30 | 0] << 8 | HEAPU8[$37 + $31 | 0]; //@line 68592
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $30) | 0; //@line 68600
 }
 HEAP16[$27 >> 1] = $_0_i_i; //@line 68603
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$21 >> 2] = (HEAP32[$21 >> 2] | 0) + 2; //@line 68611
  $59 = $c + 152 | 0; //@line 68612
  HEAP32[$59 >> 2] = (HEAP32[$59 >> 2] | 0) + 2; //@line 68615
  STACKTOP = sp; //@line 68617
  return;
 } else {
  _e68_exception_bus($c); //@line 68620
  STACKTOP = sp; //@line 68622
  return;
 }
}
function _opebc0($c) {
 $c = $c | 0;
 var $val = 0, $4 = 0, $8 = 0, $12 = 0, $15 = 0, $16 = 0, $18 = 0, $storemerge = 0, $29 = 0, $30 = 0, $35 = 0, $37 = 0, $38 = 0, $44 = 0, $_0_i_i = 0, $66 = 0, sp = 0;
 sp = STACKTOP; //@line 68639
 STACKTOP = STACKTOP + 8 | 0; //@line 68639
 $val = sp | 0; //@line 68640
 if ((_e68_get_ea_bf($c, $val, 2021) | 0) != 0) {
  $4 = $c + 372 | 0; //@line 68645
  HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 2; //@line 68648
  _e68_exception_illegal($c); //@line 68649
  STACKTOP = sp; //@line 68650
  return;
 }
 $8 = $c + 162 | 0; //@line 68653
 $12 = (HEAPU16[$8 >> 1] | 0) >>> 12 & 7; //@line 68657
 $15 = 32 - (HEAP32[$c + 352 >> 2] | 0) | 0; //@line 68660
 $16 = -1 >>> ($15 >>> 0); //@line 68661
 $18 = HEAP32[$val >> 2] | 0; //@line 68663
 if ((-2147483648 >>> ($15 >>> 0) & $18 | 0) == 0) {
  $storemerge = $16 & $18; //@line 68669
 } else {
  $storemerge = $18 | ~$16; //@line 68674
 }
 HEAP32[$val >> 2] = $storemerge; //@line 68677
 _e68_cc_set_nz_32($c, 15, $storemerge << $15); //@line 68679
 HEAP32[$c + 88 + ($12 << 2) >> 2] = $storemerge; //@line 68681
 $29 = $c + 156 | 0; //@line 68682
 $30 = HEAP32[$29 >> 2] | 0; //@line 68683
 if (($30 & 1 | 0) != 0) {
  _e68_exception_address($c, $30, 0, 0); //@line 68688
  STACKTOP = sp; //@line 68690
  return;
 }
 $35 = $c + 164 | 0; //@line 68693
 HEAP16[$8 >> 1] = HEAP16[$35 >> 1] | 0; //@line 68695
 $37 = $30 & 16777215; //@line 68696
 $38 = $37 + 1 | 0; //@line 68697
 if ($38 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $44 = HEAP32[$c + 32 >> 2] | 0; //@line 68704
  $_0_i_i = HEAPU8[$44 + $37 | 0] << 8 | HEAPU8[$44 + $38 | 0]; //@line 68714
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $37) | 0; //@line 68722
 }
 HEAP16[$35 >> 1] = $_0_i_i; //@line 68725
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$29 >> 2] = (HEAP32[$29 >> 2] | 0) + 2; //@line 68733
  $66 = $c + 152 | 0; //@line 68734
  HEAP32[$66 >> 2] = (HEAP32[$66 >> 2] | 0) + 2; //@line 68737
  STACKTOP = sp; //@line 68739
  return;
 } else {
  _e68_exception_bus($c); //@line 68742
  STACKTOP = sp; //@line 68744
  return;
 }
}
function _opecc0($c) {
 $c = $c | 0;
 var $val = 0, $4 = 0, $11 = 0, $20 = 0, $21 = 0, $26 = 0, $29 = 0, $30 = 0, $36 = 0, $_0_i_i = 0, $58 = 0, sp = 0;
 sp = STACKTOP; //@line 68760
 STACKTOP = STACKTOP + 8 | 0; //@line 68760
 $val = sp | 0; //@line 68761
 if ((_e68_get_ea_bf($c, $val, 485) | 0) != 0) {
  $4 = $c + 372 | 0; //@line 68766
  HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 2; //@line 68769
  _e68_exception_illegal($c); //@line 68770
  STACKTOP = sp; //@line 68772
  return;
 }
 if ((_e68_set_ea_bf($c, 0) | 0) != 0) {
  $11 = $c + 372 | 0; //@line 68779
  HEAP32[$11 >> 2] = (HEAP32[$11 >> 2] | 0) + 2; //@line 68782
  _e68_exception_illegal($c); //@line 68783
  STACKTOP = sp; //@line 68785
  return;
 }
 _e68_cc_set_nz_32($c, 15, HEAP32[$val >> 2] << 32 - (HEAP32[$c + 352 >> 2] | 0)); //@line 68793
 $20 = $c + 156 | 0; //@line 68794
 $21 = HEAP32[$20 >> 2] | 0; //@line 68795
 if (($21 & 1 | 0) != 0) {
  _e68_exception_address($c, $21, 0, 0); //@line 68800
  STACKTOP = sp; //@line 68802
  return;
 }
 $26 = $c + 164 | 0; //@line 68805
 HEAP16[$c + 162 >> 1] = HEAP16[$26 >> 1] | 0; //@line 68808
 $29 = $21 & 16777215; //@line 68809
 $30 = $29 + 1 | 0; //@line 68810
 if ($30 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $36 = HEAP32[$c + 32 >> 2] | 0; //@line 68817
  $_0_i_i = HEAPU8[$36 + $29 | 0] << 8 | HEAPU8[$36 + $30 | 0]; //@line 68827
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $29) | 0; //@line 68835
 }
 HEAP16[$26 >> 1] = $_0_i_i; //@line 68838
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 2; //@line 68846
  $58 = $c + 152 | 0; //@line 68847
  HEAP32[$58 >> 2] = (HEAP32[$58 >> 2] | 0) + 2; //@line 68850
  STACKTOP = sp; //@line 68852
  return;
 } else {
  _e68_exception_bus($c); //@line 68855
  STACKTOP = sp; //@line 68857
  return;
 }
}
function _opeec0($c) {
 $c = $c | 0;
 var $val = 0, $4 = 0, $11 = 0, $20 = 0, $21 = 0, $26 = 0, $29 = 0, $30 = 0, $36 = 0, $_0_i_i = 0, $58 = 0, sp = 0;
 sp = STACKTOP; //@line 68873
 STACKTOP = STACKTOP + 8 | 0; //@line 68873
 $val = sp | 0; //@line 68874
 if ((_e68_get_ea_bf($c, $val, 485) | 0) != 0) {
  $4 = $c + 372 | 0; //@line 68879
  HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 2; //@line 68882
  _e68_exception_illegal($c); //@line 68883
  STACKTOP = sp; //@line 68885
  return;
 }
 if ((_e68_set_ea_bf($c, -1) | 0) != 0) {
  $11 = $c + 372 | 0; //@line 68892
  HEAP32[$11 >> 2] = (HEAP32[$11 >> 2] | 0) + 2; //@line 68895
  _e68_exception_illegal($c); //@line 68896
  STACKTOP = sp; //@line 68898
  return;
 }
 _e68_cc_set_nz_32($c, 15, HEAP32[$val >> 2] << 32 - (HEAP32[$c + 352 >> 2] | 0)); //@line 68906
 $20 = $c + 156 | 0; //@line 68907
 $21 = HEAP32[$20 >> 2] | 0; //@line 68908
 if (($21 & 1 | 0) != 0) {
  _e68_exception_address($c, $21, 0, 0); //@line 68913
  STACKTOP = sp; //@line 68915
  return;
 }
 $26 = $c + 164 | 0; //@line 68918
 HEAP16[$c + 162 >> 1] = HEAP16[$26 >> 1] | 0; //@line 68921
 $29 = $21 & 16777215; //@line 68922
 $30 = $29 + 1 | 0; //@line 68923
 if ($30 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $36 = HEAP32[$c + 32 >> 2] | 0; //@line 68930
  $_0_i_i = HEAPU8[$36 + $29 | 0] << 8 | HEAPU8[$36 + $30 | 0]; //@line 68940
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $29) | 0; //@line 68948
 }
 HEAP16[$26 >> 1] = $_0_i_i; //@line 68951
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 2; //@line 68959
  $58 = $c + 152 | 0; //@line 68960
  HEAP32[$58 >> 2] = (HEAP32[$58 >> 2] | 0) + 2; //@line 68963
  STACKTOP = sp; //@line 68965
  return;
 } else {
  _e68_exception_bus($c); //@line 68968
  STACKTOP = sp; //@line 68970
  return;
 }
}
function _e68_cc_set_nz_8($c, $msk, $val) {
 $c = $c | 0;
 $msk = $msk | 0;
 $val = $val | 0;
 var $set_0 = 0, $5 = 0, $7 = 0;
 if ($val << 24 >> 24 == 0) {
  $set_0 = 4; //@line 68987
 } else {
  $set_0 = $val << 24 >> 24 < 0 ? 8 : 0; //@line 68992
 }
 $5 = $msk & 255; //@line 68995
 $7 = $c + 166 | 0; //@line 68997
 HEAP16[$7 >> 1] = ((HEAPU16[$7 >> 1] | 0) & ($5 ^ 65535) | $set_0 & $5) & 65535; //@line 69004
 return;
}
function _e68_cc_set_nz_16($c, $msk, $val) {
 $c = $c | 0;
 $msk = $msk | 0;
 $val = $val | 0;
 var $set_0 = 0, $5 = 0, $7 = 0;
 if ($val << 16 >> 16 == 0) {
  $set_0 = 4; //@line 69021
 } else {
  $set_0 = $val << 16 >> 16 < 0 ? 8 : 0; //@line 69026
 }
 $5 = $msk & 255; //@line 69029
 $7 = $c + 166 | 0; //@line 69031
 HEAP16[$7 >> 1] = ((HEAPU16[$7 >> 1] | 0) & ($5 ^ 65535) | $set_0 & $5) & 65535; //@line 69038
 return;
}
function _e68_cc_set_nz_32($c, $msk, $val) {
 $c = $c | 0;
 $msk = $msk | 0;
 $val = $val | 0;
 var $set_0 = 0, $6 = 0, $8 = 0;
 if (($val | 0) == 0) {
  $set_0 = 4; //@line 69055
 } else {
  $set_0 = $val >> 31 & 8; //@line 69060
 }
 $6 = $msk & 255; //@line 69063
 $8 = $c + 166 | 0; //@line 69065
 HEAP16[$8 >> 1] = ((HEAPU16[$8 >> 1] | 0) & ($6 ^ 65535) | $set_0 & $6) & 65535; //@line 69072
 return;
}
function _opefc0($c) {
 $c = $c | 0;
 var $val = 0, $4 = 0, $8 = 0, $14 = 0, $18 = 0, $26 = 0, $27 = 0, $32 = 0, $34 = 0, $35 = 0, $41 = 0, $_0_i_i = 0, $63 = 0, sp = 0;
 sp = STACKTOP; //@line 69089
 STACKTOP = STACKTOP + 8 | 0; //@line 69089
 $val = sp | 0; //@line 69090
 if ((_e68_get_ea_bf($c, $val, 2021) | 0) != 0) {
  $4 = $c + 372 | 0; //@line 69095
  HEAP32[$4 >> 2] = (HEAP32[$4 >> 2] | 0) + 2; //@line 69098
  _e68_exception_illegal($c); //@line 69099
  STACKTOP = sp; //@line 69101
  return;
 }
 $8 = $c + 162 | 0; //@line 69104
 $14 = HEAP32[$c + 88 + (((HEAPU16[$8 >> 1] | 0) >>> 12 & 7) << 2) >> 2] | 0; //@line 69110
 HEAP32[$val >> 2] = $14; //@line 69111
 if ((_e68_set_ea_bf($c, $14) | 0) != 0) {
  $18 = $c + 372 | 0; //@line 69116
  HEAP32[$18 >> 2] = (HEAP32[$18 >> 2] | 0) + 2; //@line 69119
  _e68_exception_illegal($c); //@line 69120
  STACKTOP = sp; //@line 69122
  return;
 }
 _e68_cc_set_nz_32($c, 15, $14 << 32 - (HEAP32[$c + 352 >> 2] | 0)); //@line 69129
 $26 = $c + 156 | 0; //@line 69130
 $27 = HEAP32[$26 >> 2] | 0; //@line 69131
 if (($27 & 1 | 0) != 0) {
  _e68_exception_address($c, $27, 0, 0); //@line 69136
  STACKTOP = sp; //@line 69138
  return;
 }
 $32 = $c + 164 | 0; //@line 69141
 HEAP16[$8 >> 1] = HEAP16[$32 >> 1] | 0; //@line 69143
 $34 = $27 & 16777215; //@line 69144
 $35 = $34 + 1 | 0; //@line 69145
 if ($35 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $41 = HEAP32[$c + 32 >> 2] | 0; //@line 69152
  $_0_i_i = HEAPU8[$41 + $34 | 0] << 8 | HEAPU8[$41 + $35 | 0]; //@line 69162
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $34) | 0; //@line 69170
 }
 HEAP16[$32 >> 1] = $_0_i_i; //@line 69173
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$26 >> 2] = (HEAP32[$26 >> 2] | 0) + 2; //@line 69181
  $63 = $c + 152 | 0; //@line 69182
  HEAP32[$63 >> 2] = (HEAP32[$63 >> 2] | 0) + 2; //@line 69185
  STACKTOP = sp; //@line 69187
  return;
 } else {
  _e68_exception_bus($c); //@line 69190
  STACKTOP = sp; //@line 69192
  return;
 }
}
function _e68_get_ea_bf($c, $bf, $mask) {
 $c = $c | 0;
 $bf = $bf | 0;
 $mask = $mask | 0;
 var $1 = 0, $2 = 0, $7 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $17 = 0, $_0_i_i = 0, $39 = 0, $42 = 0, $43 = 0, $44 = 0, $53 = 0, $wth_0_in = 0, $wth_0 = 0, $_wth_0 = 0, $65 = 0, $71 = 0, $72 = 0, $74 = 0, $80 = 0, $82 = 0, $val_0_i = 0, $91 = 0, $92 = 0, $93 = 0, $99 = 0, $100 = 0, $101 = 0, $n1_027_in_i = 0, $adr_126_i = 0, $buf_025_i = 0, $cnt_024_i = 0, $n1_027_i = 0, $103 = 0, $cnt_0__i = 0, $105 = 0, $108 = 0, $_0_i_i22 = 0, $131 = 0, $_0 = 0;
 $1 = $c + 156 | 0; //@line 69221
 $2 = HEAP32[$1 >> 2] | 0; //@line 69222
 if (($2 & 1 | 0) != 0) {
  _e68_exception_address($c, $2, 0, 0); //@line 69227
  $_0 = 1; //@line 69229
  return $_0 | 0; //@line 69232
 }
 $7 = $c + 164 | 0; //@line 69234
 $9 = $c + 162 | 0; //@line 69236
 HEAP16[$9 >> 1] = HEAP16[$7 >> 1] | 0; //@line 69237
 $10 = $2 & 16777215; //@line 69238
 $11 = $10 + 1 | 0; //@line 69239
 $12 = $c + 36 | 0; //@line 69240
 if ($11 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
  $17 = HEAP32[$c + 32 >> 2] | 0; //@line 69246
  $_0_i_i = HEAPU8[$17 + $10 | 0] << 8 | HEAPU8[$17 + $11 | 0]; //@line 69256
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $10) | 0; //@line 69264
 }
 HEAP16[$7 >> 1] = $_0_i_i; //@line 69267
 if ((HEAP8[$c + 336 | 0] | 0) != 0) {
  _e68_exception_bus($c); //@line 69273
  $_0 = 1; //@line 69275
  return $_0 | 0; //@line 69278
 }
 HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 69282
 $39 = $c + 152 | 0; //@line 69283
 HEAP32[$39 >> 2] = (HEAP32[$39 >> 2] | 0) + 2; //@line 69286
 $42 = HEAP16[$9 >> 1] | 0; //@line 69287
 $43 = $42 & 65535; //@line 69288
 $44 = $43 >>> 6; //@line 69289
 if (($43 & 2048 | 0) == 0) {
  $53 = $44 & 31; //@line 69295
 } else {
  $53 = HEAP32[$c + 88 + (($44 & 7) << 2) >> 2] | 0; //@line 69301
 }
 if (($42 & 32) == 0) {
  $wth_0_in = $43; //@line 69308
 } else {
  $wth_0_in = HEAP32[$c + 88 + (($43 & 7) << 2) >> 2] | 0; //@line 69314
 }
 $wth_0 = $wth_0_in & 31; //@line 69317
 $_wth_0 = ($wth_0 | 0) == 0 ? 32 : $wth_0; //@line 69319
 $65 = HEAP16[$c + 160 >> 1] & 63; //@line 69323
 if ((FUNCTION_TABLE_iiiii[HEAP32[20568 + ($65 << 2) >> 2] & 127]($c, $65, $mask, 8) | 0) != 0) {
  $_0 = 1; //@line 69330
  return $_0 | 0; //@line 69333
 }
 $71 = $c + 348 | 0; //@line 69335
 HEAP32[$71 >> 2] = $53; //@line 69336
 $72 = $c + 352 | 0; //@line 69337
 HEAP32[$72 >> 2] = $_wth_0; //@line 69338
 $74 = HEAP32[$c + 340 >> 2] | 0; //@line 69340
 do {
  if (($74 | 0) == 2) {
   $91 = HEAP32[$c + 344 >> 2] | 0; //@line 69344
   $92 = $53 >>> 3; //@line 69345
   HEAP32[$bf >> 2] = 0; //@line 69346
   $93 = HEAP32[$72 >> 2] | 0; //@line 69347
   if (($93 | 0) == 0) {
    break;
   }
   $99 = $c + 32 | 0; //@line 69359
   $100 = $c + 8 | 0; //@line 69360
   $101 = $c + 4 | 0; //@line 69361
   $cnt_024_i = $93;
   $buf_025_i = $c + 356 | 0;
   $adr_126_i = (($53 | 0) < 0 ? $92 | -536870912 : $92) + $91 | 0;
   $n1_027_in_i = HEAP32[$71 >> 2] | 0;
   while (1) {
    $n1_027_i = $n1_027_in_i & 7; //@line 69369
    $103 = 8 - $n1_027_i | 0; //@line 69370
    $cnt_0__i = $103 >>> 0 > $cnt_024_i >>> 0 ? $cnt_024_i : $103; //@line 69372
    $105 = $103 - $cnt_0__i | 0; //@line 69373
    $108 = $adr_126_i & 16777215; //@line 69376
    if ($108 >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
     $_0_i_i22 = HEAP8[(HEAP32[$99 >> 2] | 0) + $108 | 0] | 0; //@line 69385
    } else {
     $_0_i_i22 = FUNCTION_TABLE_iii[HEAP32[$100 >> 2] & 63](HEAP32[$101 >> 2] | 0, $108) | 0; //@line 69391
    }
    HEAP8[$buf_025_i] = $_0_i_i22; //@line 69395
    HEAP32[$bf >> 2] = (255 << $105 & 255 >>> ($n1_027_i >>> 0) & ($_0_i_i22 & 255)) >>> ($105 >>> 0) | HEAP32[$bf >> 2] << $cnt_0__i; //@line 69403
    if (($cnt_024_i | 0) == ($cnt_0__i | 0)) {
     break;
    } else {
     $cnt_024_i = $cnt_024_i - $cnt_0__i | 0;
     $buf_025_i = $buf_025_i + 1 | 0;
     $adr_126_i = $adr_126_i + 1 | 0;
     $n1_027_in_i = $cnt_0__i + $n1_027_i | 0;
    }
   }
  } else if (($74 | 0) == 1) {
   $80 = HEAP32[$c + 88 + ((HEAP32[$c + 344 >> 2] & 7) << 2) >> 2] | 0; //@line 69420
   $82 = $53 + $_wth_0 & 31; //@line 69422
   if (($82 | 0) == 0) {
    $val_0_i = $80; //@line 69426
   } else {
    $val_0_i = $80 >>> ((32 - $82 | 0) >>> 0) | $80 << $82; //@line 69433
   }
   HEAP32[$bf >> 2] = $val_0_i; //@line 69436
  } else {
   $_0 = 1; //@line 69439
   return $_0 | 0; //@line 69442
  }
 } while (0);
 $131 = $c + 372 | 0; //@line 69445
 HEAP32[$131 >> 2] = (HEAP32[$131 >> 2] | 0) + 18; //@line 69448
 $_0 = 0; //@line 69450
 return $_0 | 0; //@line 69453
}
function _e68_set_ea_bf($c, $bf) {
 $c = $c | 0;
 $bf = $bf | 0;
 var $2 = 0, $7 = 0, $11 = 0, $12 = 0, $16 = 0, $20 = 0, $_0_i = 0, $msk_0_i = 0, $32 = 0, $33 = 0, $35 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $n1_027_in_i = 0, $adr_126_i = 0, $buf_025_i = 0, $cnt_024_i = 0, $n1_027_i = 0, $47 = 0, $cnt_0__i = 0, $49 = 0, $52 = 0, $58 = 0, $63 = 0, $64 = 0, $_0 = 0;
 $2 = HEAP32[$c + 340 >> 2] | 0; //@line 69473
 if (($2 | 0) == 1) {
  $7 = $c + 88 + ((HEAP32[$c + 344 >> 2] & 7) << 2) | 0; //@line 69478
  $11 = 32 - (HEAP32[$c + 352 >> 2] | 0) | 0; //@line 69482
  $12 = -1 >>> ($11 >>> 0); //@line 69483
  $16 = $11 - (HEAP32[$c + 348 >> 2] | 0) & 31; //@line 69487
  if (($16 | 0) == 0) {
   $msk_0_i = $12;
   $_0_i = $bf;
  } else {
   $20 = 32 - $16 | 0; //@line 69494
   $msk_0_i = $12 >>> ($20 >>> 0) | $12 << $16;
   $_0_i = $bf >>> ($20 >>> 0) | $bf << $16;
  }
  HEAP32[$7 >> 2] = HEAP32[$7 >> 2] & ~$msk_0_i | $msk_0_i & $_0_i; //@line 69509
  $_0 = 0; //@line 69511
  return $_0 | 0; //@line 69514
 } else if (($2 | 0) == 2) {
  $32 = HEAP32[$c + 348 >> 2] | 0; //@line 69517
  $33 = $32 >>> 3; //@line 69518
  $35 = HEAP32[$c + 352 >> 2] | 0; //@line 69520
  if (($35 | 0) == 0) {
   $_0 = 0; //@line 69524
   return $_0 | 0; //@line 69527
  }
  $42 = $c + 36 | 0; //@line 69536
  $43 = $c + 32 | 0; //@line 69537
  $44 = $c + 20 | 0; //@line 69538
  $45 = $c + 4 | 0; //@line 69539
  $cnt_024_i = $35;
  $buf_025_i = $c + 356 | 0;
  $adr_126_i = (HEAP32[$c + 344 >> 2] | 0) + (($32 | 0) < 0 ? $33 | -536870912 : $33) | 0;
  $n1_027_in_i = $32;
  while (1) {
   $n1_027_i = $n1_027_in_i & 7; //@line 69547
   $47 = 8 - $n1_027_i | 0; //@line 69548
   $cnt_0__i = $47 >>> 0 > $cnt_024_i >>> 0 ? $cnt_024_i : $47; //@line 69550
   $49 = $47 - $cnt_0__i | 0; //@line 69551
   $52 = 255 << $49 & 255 >>> ($n1_027_i >>> 0); //@line 69554
   $58 = $cnt_024_i - $cnt_0__i | 0; //@line 69560
   $63 = (($52 ^ 255) & (HEAPU8[$buf_025_i] | 0) | $bf >>> (($58 - $49 | 0) >>> 0) & $52) & 255; //@line 69565
   $64 = $adr_126_i & 16777215; //@line 69566
   if ($64 >>> 0 < (HEAP32[$42 >> 2] | 0) >>> 0) {
    HEAP8[(HEAP32[$43 >> 2] | 0) + $64 | 0] = $63; //@line 69573
   } else {
    FUNCTION_TABLE_viii[HEAP32[$44 >> 2] & 63](HEAP32[$45 >> 2] | 0, $64, $63); //@line 69578
   }
   if (($cnt_024_i | 0) == ($cnt_0__i | 0)) {
    $_0 = 0; //@line 69585
    break;
   } else {
    $cnt_024_i = $58;
    $buf_025_i = $buf_025_i + 1 | 0;
    $adr_126_i = $adr_126_i + 1 | 0;
    $n1_027_in_i = $cnt_0__i + $n1_027_i | 0;
   }
  }
  return $_0 | 0; //@line 69593
 } else {
  $_0 = 1; //@line 69595
  return $_0 | 0; //@line 69598
 }
 return 0;
}
function _e68020_op_bcc($c, $cond) {
 $c = $c | 0;
 $cond = $cond | 0;
 var $1 = 0, $3 = 0, $4 = 0, $6 = 0, $11 = 0, $14 = 0, $15 = 0, $20 = 0, $22 = 0, $23 = 0, $24 = 0, $30 = 0, $_0_i_i19 = 0, $55 = 0, $64 = 0, $65 = 0, $70 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $80 = 0, $95 = 0, $96 = 0, $102 = 0, $105 = 0, $110 = 0, $111 = 0, $115 = 0, $128 = 0, $phitmp = 0, $dist_0 = 0, $143 = 0, $146 = 0, $147 = 0, $152 = 0, $155 = 0, $156 = 0, $162 = 0, $_0_i_i31 = 0, $182 = 0, $190 = 0, $194 = 0, $195 = 0, $200 = 0, $203 = 0, $204 = 0, $210 = 0, $_0_i_i = 0, $230 = 0;
 $1 = $c + 152 | 0; //@line 69634
 $3 = (HEAP32[$1 >> 2] | 0) + 2 | 0; //@line 69636
 $4 = $c + 160 | 0; //@line 69637
 $6 = HEAPU16[$4 >> 1] | 0; //@line 69639
 $11 = ($6 & 128 | 0) != 0 ? $6 | -256 : $6 & 255; //@line 69644
 do {
  if (($11 | 0) == 0) {
   $14 = $c + 156 | 0; //@line 69649
   $15 = HEAP32[$14 >> 2] | 0; //@line 69650
   if (($15 & 1 | 0) != 0) {
    _e68_exception_address($c, $15, 0, 0); //@line 69655
    return;
   }
   $20 = $c + 164 | 0; //@line 69660
   $22 = $c + 162 | 0; //@line 69662
   HEAP16[$22 >> 1] = HEAP16[$20 >> 1] | 0; //@line 69663
   $23 = $15 & 16777215; //@line 69664
   $24 = $23 + 1 | 0; //@line 69665
   if ($24 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
    $30 = HEAP32[$c + 32 >> 2] | 0; //@line 69672
    $_0_i_i19 = HEAPU8[$30 + $23 | 0] << 8 | HEAPU8[$30 + $24 | 0]; //@line 69682
   } else {
    $_0_i_i19 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $23) | 0; //@line 69690
   }
   HEAP16[$20 >> 1] = $_0_i_i19; //@line 69693
   if ((HEAP8[$c + 336 | 0] | 0) == 0) {
    HEAP32[$14 >> 2] = (HEAP32[$14 >> 2] | 0) + 2; //@line 69701
    HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 69704
    $55 = HEAPU16[$22 >> 1] | 0; //@line 69706
    $dist_0 = ($55 & 32768 | 0) != 0 ? $55 | -65536 : $55; //@line 69712
    break;
   }
   _e68_exception_bus($c); //@line 69715
   return;
  } else {
   if (($11 & 255 | 0) != 255) {
    $dist_0 = $11; //@line 69724
    break;
   }
   $64 = $c + 156 | 0; //@line 69727
   $65 = HEAP32[$64 >> 2] | 0; //@line 69728
   if (($65 & 1 | 0) != 0) {
    _e68_exception_address($c, $65, 0, 0); //@line 69733
    return;
   }
   $70 = $c + 164 | 0; //@line 69738
   $72 = $c + 162 | 0; //@line 69740
   HEAP16[$72 >> 1] = HEAP16[$70 >> 1] | 0; //@line 69741
   $73 = $65 & 16777215; //@line 69742
   $74 = $73 + 1 | 0; //@line 69743
   $75 = $c + 36 | 0; //@line 69744
   if ($74 >>> 0 < (HEAP32[$75 >> 2] | 0) >>> 0) {
    $80 = HEAP32[$c + 32 >> 2] | 0; //@line 69750
    $95 = HEAPU8[$80 + $73 | 0] << 8 | HEAPU8[$80 + $74 | 0]; //@line 69760
   } else {
    $95 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $73) | 0; //@line 69768
   }
   HEAP16[$70 >> 1] = $95; //@line 69771
   $96 = $c + 336 | 0; //@line 69772
   if ((HEAP8[$96] | 0) != 0) {
    _e68_exception_bus($c); //@line 69777
    return;
   }
   $102 = (HEAP32[$64 >> 2] | 0) + 2 | 0; //@line 69783
   HEAP32[$64 >> 2] = $102; //@line 69784
   HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 69787
   $105 = HEAP16[$72 >> 1] | 0; //@line 69788
   if (($102 & 1 | 0) != 0) {
    _e68_exception_address($c, $102, 0, 0); //@line 69793
    return;
   }
   HEAP16[$72 >> 1] = $95; //@line 69798
   $110 = $102 & 16777215; //@line 69799
   $111 = $110 + 1 | 0; //@line 69800
   do {
    if ($111 >>> 0 < (HEAP32[$75 >> 2] | 0) >>> 0) {
     $115 = HEAP32[$c + 32 >> 2] | 0; //@line 69807
     HEAP16[$70 >> 1] = HEAPU8[$115 + $110 | 0] << 8 | HEAPU8[$115 + $111 | 0]; //@line 69816
    } else {
     $128 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $110) | 0; //@line 69823
     $phitmp = (HEAP8[$96] | 0) == 0; //@line 69825
     HEAP16[$70 >> 1] = $128; //@line 69826
     if ($phitmp) {
      break;
     }
     _e68_exception_bus($c); //@line 69831
     return;
    }
   } while (0);
   HEAP32[$64 >> 2] = (HEAP32[$64 >> 2] | 0) + 2; //@line 69839
   HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 69842
   $dist_0 = HEAPU16[$72 >> 1] | ($105 & 65535) << 16; //@line 69849
  }
 } while (0);
 do {
  if (($cond | 0) == 0) {
   $190 = $c + 372 | 0; //@line 69861
   HEAP32[$190 >> 2] = ((HEAP16[$4 >> 1] & 255) == 0 ? 12 : 8) + (HEAP32[$190 >> 2] | 0); //@line 69864
   $194 = HEAP32[$c + 156 >> 2] | 0; //@line 69867
  } else {
   $143 = $c + 372 | 0; //@line 69869
   HEAP32[$143 >> 2] = (HEAP32[$143 >> 2] | 0) + 10; //@line 69872
   $146 = $3 + $dist_0 | 0; //@line 69873
   $147 = $c + 156 | 0; //@line 69874
   HEAP32[$147 >> 2] = $146; //@line 69875
   if (($146 & 1 | 0) != 0) {
    _e68_exception_address($c, $146, 0, 0); //@line 69880
    return;
   }
   $152 = $c + 164 | 0; //@line 69885
   HEAP16[$c + 162 >> 1] = HEAP16[$152 >> 1] | 0; //@line 69888
   $155 = $146 & 16777215; //@line 69889
   $156 = $155 + 1 | 0; //@line 69890
   if ($156 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
    $162 = HEAP32[$c + 32 >> 2] | 0; //@line 69897
    $_0_i_i31 = HEAPU8[$162 + $155 | 0] << 8 | HEAPU8[$162 + $156 | 0]; //@line 69907
   } else {
    $_0_i_i31 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $155) | 0; //@line 69915
   }
   HEAP16[$152 >> 1] = $_0_i_i31; //@line 69918
   if ((HEAP8[$c + 336 | 0] | 0) == 0) {
    $182 = (HEAP32[$147 >> 2] | 0) + 2 | 0; //@line 69925
    HEAP32[$147 >> 2] = $182; //@line 69926
    HEAP32[$1 >> 2] = (HEAP32[$1 >> 2] | 0) + 2; //@line 69929
    $194 = $182; //@line 69931
    break;
   }
   _e68_exception_bus($c); //@line 69934
   return;
  }
 } while (0);
 $195 = $c + 156 | 0; //@line 69941
 if (($194 & 1 | 0) != 0) {
  _e68_exception_address($c, $194, 0, 0); //@line 69946
  return;
 }
 $200 = $c + 164 | 0; //@line 69951
 HEAP16[$c + 162 >> 1] = HEAP16[$200 >> 1] | 0; //@line 69954
 $203 = $194 & 16777215; //@line 69955
 $204 = $203 + 1 | 0; //@line 69956
 if ($204 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $210 = HEAP32[$c + 32 >> 2] | 0; //@line 69963
  $_0_i_i = HEAPU8[$210 + $203 | 0] << 8 | HEAPU8[$210 + $204 | 0]; //@line 69973
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $203) | 0; //@line 69981
 }
 HEAP16[$200 >> 1] = $_0_i_i; //@line 69984
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  $230 = HEAP32[$195 >> 2] | 0; //@line 69990
  HEAP32[$195 >> 2] = $230 + 2; //@line 69992
  HEAP32[$1 >> 2] = $230 - 2; //@line 69994
  return;
 } else {
  _e68_exception_bus($c); //@line 69999
  return;
 }
}
function _e68_cc_set_add_8($c, $d, $s1, $s2) {
 $c = $c | 0;
 $d = $d | 0;
 $s1 = $s1 | 0;
 $s2 = $s2 | 0;
 var $2 = 0, $3 = 0, $storemerge = 0, $7 = 0, $9 = 0, $set_0_i = 0, $set_1_i = 0, $set_2_i = 0;
 $2 = $c + 166 | 0; //@line 70019
 $3 = HEAP16[$2 >> 1] | 0; //@line 70020
 $storemerge = $d << 24 >> 24 == 0 ? $3 | 4 : $3 & -5; //@line 70023
 HEAP16[$2 >> 1] = $storemerge; //@line 70024
 $7 = ($s1 & 255) >>> 7; //@line 70026
 $9 = ($s2 & 255) >>> 7; //@line 70028
 do {
  if ($d << 24 >> 24 > -1) {
   $set_1_i = ($9 | $7 | 0) == 0 ? 0 : 17; //@line 70035
   if (($9 & $7 | 0) == 0) {
    $set_2_i = $set_1_i; //@line 70040
    break;
   }
   $set_2_i = $set_1_i | 2; //@line 70045
  } else {
   $set_0_i = ($9 & $7 | 0) == 0 ? 8 : 25; //@line 70049
   if (($9 | $7 | 0) != 0) {
    $set_2_i = $set_0_i; //@line 70054
    break;
   }
   $set_2_i = $set_0_i | 2; //@line 70059
  }
 } while (0);
 HEAP16[$2 >> 1] = $storemerge & -28 | $set_2_i; //@line 70065
 return;
}
function _e68_cc_set_add_16($c, $d, $s1, $s2) {
 $c = $c | 0;
 $d = $d | 0;
 $s1 = $s1 | 0;
 $s2 = $s2 | 0;
 var $2 = 0, $3 = 0, $storemerge = 0, $7 = 0, $9 = 0, $set_0_i = 0, $set_1_i = 0, $set_2_i = 0;
 $2 = $c + 166 | 0; //@line 70083
 $3 = HEAP16[$2 >> 1] | 0; //@line 70084
 $storemerge = $d << 16 >> 16 == 0 ? $3 | 4 : $3 & -5; //@line 70087
 HEAP16[$2 >> 1] = $storemerge; //@line 70088
 $7 = ($s1 & 65535) >>> 15; //@line 70090
 $9 = ($s2 & 65535) >>> 15; //@line 70092
 do {
  if ($d << 16 >> 16 > -1) {
   $set_1_i = ($9 | $7 | 0) == 0 ? 0 : 17; //@line 70099
   if (($9 & $7 | 0) == 0) {
    $set_2_i = $set_1_i; //@line 70104
    break;
   }
   $set_2_i = $set_1_i | 2; //@line 70109
  } else {
   $set_0_i = ($9 & $7 | 0) == 0 ? 8 : 25; //@line 70113
   if (($9 | $7 | 0) != 0) {
    $set_2_i = $set_0_i; //@line 70118
    break;
   }
   $set_2_i = $set_0_i | 2; //@line 70123
  }
 } while (0);
 HEAP16[$2 >> 1] = $storemerge & -28 | $set_2_i; //@line 70129
 return;
}
function _e68_cc_set_add_32($c, $d, $s1, $s2) {
 $c = $c | 0;
 $d = $d | 0;
 $s1 = $s1 | 0;
 $s2 = $s2 | 0;
 var $2 = 0, $3 = 0, $storemerge = 0, $6 = 0, $7 = 0, $set_0_i = 0, $set_1_i = 0, $set_2_i = 0;
 $2 = $c + 166 | 0; //@line 70146
 $3 = HEAP16[$2 >> 1] | 0; //@line 70147
 $storemerge = ($d | 0) == 0 ? $3 | 4 : $3 & -5; //@line 70150
 HEAP16[$2 >> 1] = $storemerge; //@line 70151
 $6 = $s1 >>> 31; //@line 70152
 $7 = $s2 >>> 31; //@line 70153
 do {
  if (($d | 0) > -1) {
   $set_1_i = ($7 | $6 | 0) == 0 ? 0 : 17; //@line 70160
   if (($7 & $6 | 0) == 0) {
    $set_2_i = $set_1_i; //@line 70165
    break;
   }
   $set_2_i = $set_1_i | 2; //@line 70170
  } else {
   $set_0_i = ($7 & $6 | 0) == 0 ? 8 : 25; //@line 70174
   if (($7 | $6 | 0) != 0) {
    $set_2_i = $set_0_i; //@line 70179
    break;
   }
   $set_2_i = $set_0_i | 2; //@line 70184
  }
 } while (0);
 HEAP16[$2 >> 1] = $storemerge & -28 | $set_2_i; //@line 70190
 return;
}
function _e68_cc_set_addx_8($c, $d, $s1, $s2) {
 $c = $c | 0;
 $d = $d | 0;
 $s1 = $s1 | 0;
 $s2 = $s2 | 0;
 var $2 = 0, $4 = 0, $set_0_i = 0, $set_1_i = 0, $set_2_i = 0, $20 = 0, $23 = 0;
 $2 = ($s1 & 255) >>> 7; //@line 70208
 $4 = ($s2 & 255) >>> 7; //@line 70210
 do {
  if ($d << 24 >> 24 > -1) {
   $set_1_i = ($4 | $2 | 0) == 0 ? 0 : 17; //@line 70217
   if (($4 & $2 | 0) == 0) {
    $set_2_i = $set_1_i; //@line 70222
    break;
   }
   $set_2_i = $set_1_i | 2; //@line 70227
  } else {
   $set_0_i = ($4 & $2 | 0) == 0 ? 8 : 25; //@line 70231
   if (($4 | $2 | 0) != 0) {
    $set_2_i = $set_0_i; //@line 70236
    break;
   }
   $set_2_i = $set_0_i | 2; //@line 70241
  }
 } while (0);
 $20 = $c + 166 | 0; //@line 70245
 $23 = HEAP16[$20 >> 1] & -28 | $set_2_i; //@line 70248
 HEAP16[$20 >> 1] = $d << 24 >> 24 == 0 ? $23 : $23 & -5; //@line 70252
 return;
}
function _e68_cc_set_addx_16($c, $d, $s1, $s2) {
 $c = $c | 0;
 $d = $d | 0;
 $s1 = $s1 | 0;
 $s2 = $s2 | 0;
 var $2 = 0, $4 = 0, $set_0_i = 0, $set_1_i = 0, $set_2_i = 0, $20 = 0, $23 = 0;
 $2 = ($s1 & 65535) >>> 15; //@line 70270
 $4 = ($s2 & 65535) >>> 15; //@line 70272
 do {
  if ($d << 16 >> 16 > -1) {
   $set_1_i = ($4 | $2 | 0) == 0 ? 0 : 17; //@line 70279
   if (($4 & $2 | 0) == 0) {
    $set_2_i = $set_1_i; //@line 70284
    break;
   }
   $set_2_i = $set_1_i | 2; //@line 70289
  } else {
   $set_0_i = ($4 & $2 | 0) == 0 ? 8 : 25; //@line 70293
   if (($4 | $2 | 0) != 0) {
    $set_2_i = $set_0_i; //@line 70298
    break;
   }
   $set_2_i = $set_0_i | 2; //@line 70303
  }
 } while (0);
 $20 = $c + 166 | 0; //@line 70307
 $23 = HEAP16[$20 >> 1] & -28 | $set_2_i; //@line 70310
 HEAP16[$20 >> 1] = $d << 16 >> 16 == 0 ? $23 : $23 & -5; //@line 70314
 return;
}
function _e68_cc_set_addx_32($c, $d, $s1, $s2) {
 $c = $c | 0;
 $d = $d | 0;
 $s1 = $s1 | 0;
 $s2 = $s2 | 0;
 var $1 = 0, $2 = 0, $set_0_i = 0, $set_1_i = 0, $set_2_i = 0, $18 = 0, $21 = 0;
 $1 = $s1 >>> 31; //@line 70330
 $2 = $s2 >>> 31; //@line 70331
 do {
  if (($d | 0) > -1) {
   $set_1_i = ($2 | $1 | 0) == 0 ? 0 : 17; //@line 70338
   if (($2 & $1 | 0) == 0) {
    $set_2_i = $set_1_i; //@line 70343
    break;
   }
   $set_2_i = $set_1_i | 2; //@line 70348
  } else {
   $set_0_i = ($2 & $1 | 0) == 0 ? 8 : 25; //@line 70352
   if (($2 | $1 | 0) != 0) {
    $set_2_i = $set_0_i; //@line 70357
    break;
   }
   $set_2_i = $set_0_i | 2; //@line 70362
  }
 } while (0);
 $18 = $c + 166 | 0; //@line 70366
 $21 = HEAP16[$18 >> 1] & -28 | $set_2_i; //@line 70369
 HEAP16[$18 >> 1] = ($d | 0) == 0 ? $21 : $21 & -5; //@line 70373
 return;
}
function _e68_cc_set_cmp_8($c, $d, $s1, $s2) {
 $c = $c | 0;
 $d = $d | 0;
 $s1 = $s1 | 0;
 $s2 = $s2 | 0;
 var $2 = 0, $3 = 0, $set_0_i = 0, $set_1_i = 0, $set_2_i = 0, $10 = 0, $14 = 0;
 $2 = $s1 << 24 >> 24 < 0; //@line 70390
 $3 = $s2 << 24 >> 24 > -1; //@line 70391
 do {
  if ($d << 24 >> 24 > -1) {
   $set_1_i = $2 & $3 ? 17 : 0; //@line 70396
   if ($2 | $3) {
    $set_2_i = $set_1_i; //@line 70400
    break;
   }
   $set_2_i = $set_1_i | 2; //@line 70405
  } else {
   $set_0_i = $2 | $3 ? 25 : 8; //@line 70408
   if (!($2 & $3)) {
    $set_2_i = $set_0_i; //@line 70412
    break;
   }
   $set_2_i = $set_0_i | 2; //@line 70417
  }
 } while (0);
 $10 = $c + 166 | 0; //@line 70421
 $14 = HEAP16[$10 >> 1] & -16 | $set_2_i & 15; //@line 70425
 HEAP16[$10 >> 1] = $d << 24 >> 24 == 0 ? $14 | 4 : $14; //@line 70429
 return;
}
function _e68_cc_set_cmp_16($c, $d, $s1, $s2) {
 $c = $c | 0;
 $d = $d | 0;
 $s1 = $s1 | 0;
 $s2 = $s2 | 0;
 var $2 = 0, $3 = 0, $set_0_i = 0, $set_1_i = 0, $set_2_i = 0, $10 = 0, $14 = 0;
 $2 = $s1 << 16 >> 16 < 0; //@line 70446
 $3 = $s2 << 16 >> 16 > -1; //@line 70447
 do {
  if ($d << 16 >> 16 > -1) {
   $set_1_i = $2 & $3 ? 17 : 0; //@line 70452
   if ($2 | $3) {
    $set_2_i = $set_1_i; //@line 70456
    break;
   }
   $set_2_i = $set_1_i | 2; //@line 70461
  } else {
   $set_0_i = $2 | $3 ? 25 : 8; //@line 70464
   if (!($2 & $3)) {
    $set_2_i = $set_0_i; //@line 70468
    break;
   }
   $set_2_i = $set_0_i | 2; //@line 70473
  }
 } while (0);
 $10 = $c + 166 | 0; //@line 70477
 $14 = HEAP16[$10 >> 1] & -16 | $set_2_i & 15; //@line 70481
 HEAP16[$10 >> 1] = $d << 16 >> 16 == 0 ? $14 | 4 : $14; //@line 70485
 return;
}
function _e68_cc_set_cmp_32($c, $d, $s1, $s2) {
 $c = $c | 0;
 $d = $d | 0;
 $s1 = $s1 | 0;
 $s2 = $s2 | 0;
 var $2 = 0, $3 = 0, $set_0_i = 0, $set_1_i = 0, $set_2_i = 0, $10 = 0, $14 = 0;
 $2 = ($s1 | 0) < 0; //@line 70502
 $3 = ($s2 | 0) > -1; //@line 70503
 do {
  if (($d | 0) > -1) {
   $set_1_i = $2 & $3 ? 17 : 0; //@line 70508
   if ($2 | $3) {
    $set_2_i = $set_1_i; //@line 70512
    break;
   }
   $set_2_i = $set_1_i | 2; //@line 70517
  } else {
   $set_0_i = $2 | $3 ? 25 : 8; //@line 70520
   if (!($2 & $3)) {
    $set_2_i = $set_0_i; //@line 70524
    break;
   }
   $set_2_i = $set_0_i | 2; //@line 70529
  }
 } while (0);
 $10 = $c + 166 | 0; //@line 70533
 $14 = HEAP16[$10 >> 1] & -16 | $set_2_i & 15; //@line 70537
 HEAP16[$10 >> 1] = ($d | 0) == 0 ? $14 | 4 : $14; //@line 70541
 return;
}
function _e68_cc_set_sub_8($c, $d, $s1, $s2) {
 $c = $c | 0;
 $d = $d | 0;
 $s1 = $s1 | 0;
 $s2 = $s2 | 0;
 var $2 = 0, $3 = 0, $set_0_i = 0, $set_1_i = 0, $set_2_i = 0, $10 = 0, $14 = 0;
 $2 = $s1 << 24 >> 24 < 0; //@line 70558
 $3 = $s2 << 24 >> 24 > -1; //@line 70559
 do {
  if ($d << 24 >> 24 > -1) {
   $set_1_i = $2 & $3 ? 17 : 0; //@line 70564
   if ($2 | $3) {
    $set_2_i = $set_1_i; //@line 70568
    break;
   }
   $set_2_i = $set_1_i | 2; //@line 70573
  } else {
   $set_0_i = $2 | $3 ? 25 : 8; //@line 70576
   if (!($2 & $3)) {
    $set_2_i = $set_0_i; //@line 70580
    break;
   }
   $set_2_i = $set_0_i | 2; //@line 70585
  }
 } while (0);
 $10 = $c + 166 | 0; //@line 70589
 $14 = HEAP16[$10 >> 1] & -32 | $set_2_i & 31; //@line 70593
 HEAP16[$10 >> 1] = $d << 24 >> 24 == 0 ? $14 | 4 : $14; //@line 70597
 return;
}
function _e68_cc_set_sub_16($c, $d, $s1, $s2) {
 $c = $c | 0;
 $d = $d | 0;
 $s1 = $s1 | 0;
 $s2 = $s2 | 0;
 var $2 = 0, $3 = 0, $set_0_i = 0, $set_1_i = 0, $set_2_i = 0, $10 = 0, $14 = 0;
 $2 = $s1 << 16 >> 16 < 0; //@line 70614
 $3 = $s2 << 16 >> 16 > -1; //@line 70615
 do {
  if ($d << 16 >> 16 > -1) {
   $set_1_i = $2 & $3 ? 17 : 0; //@line 70620
   if ($2 | $3) {
    $set_2_i = $set_1_i; //@line 70624
    break;
   }
   $set_2_i = $set_1_i | 2; //@line 70629
  } else {
   $set_0_i = $2 | $3 ? 25 : 8; //@line 70632
   if (!($2 & $3)) {
    $set_2_i = $set_0_i; //@line 70636
    break;
   }
   $set_2_i = $set_0_i | 2; //@line 70641
  }
 } while (0);
 $10 = $c + 166 | 0; //@line 70645
 $14 = HEAP16[$10 >> 1] & -32 | $set_2_i & 31; //@line 70649
 HEAP16[$10 >> 1] = $d << 16 >> 16 == 0 ? $14 | 4 : $14; //@line 70653
 return;
}
function _e68_cc_set_sub_32($c, $d, $s1, $s2) {
 $c = $c | 0;
 $d = $d | 0;
 $s1 = $s1 | 0;
 $s2 = $s2 | 0;
 var $2 = 0, $3 = 0, $set_0_i = 0, $set_1_i = 0, $set_2_i = 0, $10 = 0, $14 = 0;
 $2 = ($s1 | 0) < 0; //@line 70670
 $3 = ($s2 | 0) > -1; //@line 70671
 do {
  if (($d | 0) > -1) {
   $set_1_i = $2 & $3 ? 17 : 0; //@line 70676
   if ($2 | $3) {
    $set_2_i = $set_1_i; //@line 70680
    break;
   }
   $set_2_i = $set_1_i | 2; //@line 70685
  } else {
   $set_0_i = $2 | $3 ? 25 : 8; //@line 70688
   if (!($2 & $3)) {
    $set_2_i = $set_0_i; //@line 70692
    break;
   }
   $set_2_i = $set_0_i | 2; //@line 70697
  }
 } while (0);
 $10 = $c + 166 | 0; //@line 70701
 $14 = HEAP16[$10 >> 1] & -32 | $set_2_i & 31; //@line 70705
 HEAP16[$10 >> 1] = ($d | 0) == 0 ? $14 | 4 : $14; //@line 70709
 return;
}
function _e68_cc_set_subx_8($c, $d, $s1, $s2) {
 $c = $c | 0;
 $d = $d | 0;
 $s1 = $s1 | 0;
 $s2 = $s2 | 0;
 var $2 = 0, $3 = 0, $set_0_i = 0, $set_1_i = 0, $set_2_i = 0, $10 = 0, $14 = 0;
 $2 = $s1 << 24 >> 24 < 0; //@line 70726
 $3 = $s2 << 24 >> 24 > -1; //@line 70727
 do {
  if ($d << 24 >> 24 > -1) {
   $set_1_i = $2 & $3 ? 17 : 0; //@line 70732
   if ($2 | $3) {
    $set_2_i = $set_1_i; //@line 70736
    break;
   }
   $set_2_i = $set_1_i | 2; //@line 70741
  } else {
   $set_0_i = $2 | $3 ? 25 : 8; //@line 70744
   if (!($2 & $3)) {
    $set_2_i = $set_0_i; //@line 70748
    break;
   }
   $set_2_i = $set_0_i | 2; //@line 70753
  }
 } while (0);
 $10 = $c + 166 | 0; //@line 70757
 $14 = HEAP16[$10 >> 1] & -28 | $set_2_i & 27; //@line 70761
 HEAP16[$10 >> 1] = $d << 24 >> 24 == 0 ? $14 : $14 & -5; //@line 70765
 return;
}
function _e68_cc_set_subx_16($c, $d, $s1, $s2) {
 $c = $c | 0;
 $d = $d | 0;
 $s1 = $s1 | 0;
 $s2 = $s2 | 0;
 var $2 = 0, $3 = 0, $set_0_i = 0, $set_1_i = 0, $set_2_i = 0, $10 = 0, $14 = 0;
 $2 = $s1 << 16 >> 16 < 0; //@line 70782
 $3 = $s2 << 16 >> 16 > -1; //@line 70783
 do {
  if ($d << 16 >> 16 > -1) {
   $set_1_i = $2 & $3 ? 17 : 0; //@line 70788
   if ($2 | $3) {
    $set_2_i = $set_1_i; //@line 70792
    break;
   }
   $set_2_i = $set_1_i | 2; //@line 70797
  } else {
   $set_0_i = $2 | $3 ? 25 : 8; //@line 70800
   if (!($2 & $3)) {
    $set_2_i = $set_0_i; //@line 70804
    break;
   }
   $set_2_i = $set_0_i | 2; //@line 70809
  }
 } while (0);
 $10 = $c + 166 | 0; //@line 70813
 $14 = HEAP16[$10 >> 1] & -28 | $set_2_i & 27; //@line 70817
 HEAP16[$10 >> 1] = $d << 16 >> 16 == 0 ? $14 : $14 & -5; //@line 70821
 return;
}
function _e68_cc_set_subx_32($c, $d, $s1, $s2) {
 $c = $c | 0;
 $d = $d | 0;
 $s1 = $s1 | 0;
 $s2 = $s2 | 0;
 var $2 = 0, $3 = 0, $set_0_i = 0, $set_1_i = 0, $set_2_i = 0, $10 = 0, $14 = 0;
 $2 = ($s1 | 0) < 0; //@line 70838
 $3 = ($s2 | 0) > -1; //@line 70839
 do {
  if (($d | 0) > -1) {
   $set_1_i = $2 & $3 ? 17 : 0; //@line 70844
   if ($2 | $3) {
    $set_2_i = $set_1_i; //@line 70848
    break;
   }
   $set_2_i = $set_1_i | 2; //@line 70853
  } else {
   $set_0_i = $2 | $3 ? 25 : 8; //@line 70856
   if (!($2 & $3)) {
    $set_2_i = $set_0_i; //@line 70860
    break;
   }
   $set_2_i = $set_0_i | 2; //@line 70865
  }
 } while (0);
 $10 = $c + 166 | 0; //@line 70869
 $14 = HEAP16[$10 >> 1] & -28 | $set_2_i & 27; //@line 70873
 HEAP16[$10 >> 1] = ($d | 0) == 0 ? $14 : $14 & -5; //@line 70877
 return;
}
function _e68_ea_000_xxx($c, $ea, $mask, $size) {
 $c = $c | 0;
 $ea = $ea | 0;
 $mask = $mask | 0;
 $size = $size | 0;
 var $_0 = 0;
 if (($mask & 1 | 0) == 0) {
  _e68_exception_illegal($c); //@line 70895
  $_0 = 1; //@line 70897
  return $_0 | 0; //@line 70900
 } else {
  HEAP32[$c + 340 >> 2] = 1; //@line 70903
  HEAP32[$c + 344 >> 2] = $ea & 7; //@line 70906
  $_0 = 0; //@line 70908
  return $_0 | 0; //@line 70911
 }
 return 0;
}
function _e68_ea_001_xxx($c, $ea, $mask, $size) {
 $c = $c | 0;
 $ea = $ea | 0;
 $mask = $mask | 0;
 $size = $size | 0;
 var $_0 = 0;
 if (($mask & 2 | 0) == 0) {
  _e68_exception_illegal($c); //@line 70928
  $_0 = 1; //@line 70930
  return $_0 | 0; //@line 70933
 } else {
  HEAP32[$c + 340 >> 2] = 1; //@line 70936
  HEAP32[$c + 344 >> 2] = $ea & 7 | 8; //@line 70940
  $_0 = 0; //@line 70942
  return $_0 | 0; //@line 70945
 }
 return 0;
}
function _e68_ea_010_xxx($c, $ea, $mask, $size) {
 $c = $c | 0;
 $ea = $ea | 0;
 $mask = $mask | 0;
 $size = $size | 0;
 var $_0 = 0;
 if (($mask & 4 | 0) == 0) {
  _e68_exception_illegal($c); //@line 70962
  $_0 = 1; //@line 70964
  return $_0 | 0; //@line 70967
 } else {
  HEAP32[$c + 340 >> 2] = 2; //@line 70970
  HEAP32[$c + 344 >> 2] = HEAP32[$c + 120 + (($ea & 7) << 2) >> 2]; //@line 70975
  $_0 = 0; //@line 70977
  return $_0 | 0; //@line 70980
 }
 return 0;
}
function _e68_ea_011_xxx($c, $ea, $mask, $size) {
 $c = $c | 0;
 $ea = $ea | 0;
 $mask = $mask | 0;
 $size = $size | 0;
 var $7 = 0, $8 = 0, $_0 = 0;
 if (($mask & 8 | 0) == 0) {
  _e68_exception_illegal($c); //@line 70998
  $_0 = 1; //@line 71000
  return $_0 | 0; //@line 71003
 } else {
  HEAP32[$c + 340 >> 2] = 2; //@line 71007
  $7 = $c + 120 + (($ea & 7) << 2) | 0; //@line 71008
  $8 = HEAP32[$7 >> 2] | 0; //@line 71009
  HEAP32[$c + 344 >> 2] = $8; //@line 71011
  HEAP32[$7 >> 2] = $8 + ($size >>> 3); //@line 71014
  $_0 = 0; //@line 71016
  return $_0 | 0; //@line 71019
 }
 return 0;
}
function _e68_ea_011_111($c, $ea, $mask, $size) {
 $c = $c | 0;
 $ea = $ea | 0;
 $mask = $mask | 0;
 $size = $size | 0;
 var $7 = 0, $8 = 0, $_010 = 0;
 if (($mask & 8 | 0) == 0) {
  _e68_exception_illegal($c); //@line 71037
  $_010 = 1; //@line 71039
  return $_010 | 0; //@line 71042
 } else {
  HEAP32[$c + 340 >> 2] = 2; //@line 71046
  $7 = $c + 148 | 0; //@line 71047
  $8 = HEAP32[$7 >> 2] | 0; //@line 71048
  HEAP32[$c + 344 >> 2] = $8; //@line 71050
  HEAP32[$7 >> 2] = $8 + (($size | 0) == 8 ? 2 : $size >>> 3); //@line 71054
  $_010 = 0; //@line 71056
  return $_010 | 0; //@line 71059
 }
 return 0;
}
function _e68_ea_100_xxx($c, $ea, $mask, $size) {
 $c = $c | 0;
 $ea = $ea | 0;
 $mask = $mask | 0;
 $size = $size | 0;
 var $7 = 0, $10 = 0, $12 = 0, $_0 = 0;
 if (($mask & 16 | 0) == 0) {
  _e68_exception_illegal($c); //@line 71077
  $_0 = 1; //@line 71079
  return $_0 | 0; //@line 71082
 } else {
  HEAP32[$c + 340 >> 2] = 2; //@line 71086
  $7 = $c + 120 + (($ea & 7) << 2) | 0; //@line 71087
  $10 = (HEAP32[$7 >> 2] | 0) - ($size >>> 3) | 0; //@line 71090
  HEAP32[$c + 344 >> 2] = $10; //@line 71092
  HEAP32[$7 >> 2] = $10; //@line 71093
  $12 = $c + 372 | 0; //@line 71094
  HEAP32[$12 >> 2] = (HEAP32[$12 >> 2] | 0) + 2; //@line 71097
  $_0 = 0; //@line 71099
  return $_0 | 0; //@line 71102
 }
 return 0;
}
function _e68_ea_100_111($c, $ea, $mask, $size) {
 $c = $c | 0;
 $ea = $ea | 0;
 $mask = $mask | 0;
 $size = $size | 0;
 var $7 = 0, $10 = 0, $12 = 0, $_011 = 0;
 if (($mask & 16 | 0) == 0) {
  _e68_exception_illegal($c); //@line 71120
  $_011 = 1; //@line 71122
  return $_011 | 0; //@line 71125
 } else {
  HEAP32[$c + 340 >> 2] = 2; //@line 71129
  $7 = $c + 148 | 0; //@line 71130
  $10 = (HEAP32[$7 >> 2] | 0) - (($size | 0) == 8 ? 2 : $size >>> 3) | 0; //@line 71134
  HEAP32[$c + 344 >> 2] = $10; //@line 71136
  HEAP32[$7 >> 2] = $10; //@line 71137
  $12 = $c + 372 | 0; //@line 71138
  HEAP32[$12 >> 2] = (HEAP32[$12 >> 2] | 0) + 2; //@line 71141
  $_011 = 0; //@line 71143
  return $_011 | 0; //@line 71146
 }
 return 0;
}
function _e68_ea_101_xxx($c, $ea, $mask, $size) {
 $c = $c | 0;
 $ea = $ea | 0;
 $mask = $mask | 0;
 $size = $size | 0;
 var $5 = 0, $6 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $21 = 0, $_0_i_i = 0, $43 = 0, $51 = 0, $58 = 0, $_0 = 0;
 if (($mask & 32 | 0) == 0) {
  _e68_exception_illegal($c); //@line 71169
  $_0 = 1; //@line 71171
  return $_0 | 0; //@line 71174
 }
 $5 = $c + 156 | 0; //@line 71176
 $6 = HEAP32[$5 >> 2] | 0; //@line 71177
 if (($6 & 1 | 0) != 0) {
  _e68_exception_address($c, $6, 0, 0); //@line 71182
  $_0 = 1; //@line 71184
  return $_0 | 0; //@line 71187
 }
 $11 = $c + 164 | 0; //@line 71189
 $13 = $c + 162 | 0; //@line 71191
 HEAP16[$13 >> 1] = HEAP16[$11 >> 1] | 0; //@line 71192
 $14 = $6 & 16777215; //@line 71193
 $15 = $14 + 1 | 0; //@line 71194
 if ($15 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $21 = HEAP32[$c + 32 >> 2] | 0; //@line 71201
  $_0_i_i = HEAPU8[$21 + $14 | 0] << 8 | HEAPU8[$21 + $15 | 0]; //@line 71211
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $14) | 0; //@line 71219
 }
 HEAP16[$11 >> 1] = $_0_i_i; //@line 71222
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 2; //@line 71230
  $43 = $c + 152 | 0; //@line 71231
  HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) + 2; //@line 71234
  HEAP32[$c + 340 >> 2] = 2; //@line 71236
  $51 = HEAPU16[$13 >> 1] | 0; //@line 71241
  HEAP32[$c + 344 >> 2] = (($51 & 32768 | 0) != 0 ? $51 | -65536 : $51) + (HEAP32[$c + 120 + (($ea & 7) << 2) >> 2] | 0); //@line 71248
  $58 = $c + 372 | 0; //@line 71249
  HEAP32[$58 >> 2] = (HEAP32[$58 >> 2] | 0) + 4; //@line 71252
  $_0 = 0; //@line 71254
  return $_0 | 0; //@line 71257
 } else {
  _e68_exception_bus($c); //@line 71259
  $_0 = 1; //@line 71261
  return $_0 | 0; //@line 71264
 }
 return 0;
}
function _e68_ea_110_xxx($c, $ea, $mask, $size) {
 $c = $c | 0;
 $ea = $ea | 0;
 $mask = $mask | 0;
 $size = $size | 0;
 var $5 = 0, $6 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $21 = 0, $_0_i_i = 0, $43 = 0, $49 = 0, $50 = 0, $_pre = 0, $56 = 0, $scale_0 = 0, $64 = 0, $70 = 0, $74 = 0, $idx_0_in = 0, $idx_0 = 0, $idx_1 = 0, $91 = 0, $_0 = 0;
 if (($mask & 64 | 0) == 0) {
  _e68_exception_illegal($c); //@line 71291
  $_0 = 1; //@line 71293
  return $_0 | 0; //@line 71296
 }
 $5 = $c + 156 | 0; //@line 71298
 $6 = HEAP32[$5 >> 2] | 0; //@line 71299
 if (($6 & 1 | 0) != 0) {
  _e68_exception_address($c, $6, 0, 0); //@line 71304
  $_0 = 1; //@line 71306
  return $_0 | 0; //@line 71309
 }
 $11 = $c + 164 | 0; //@line 71311
 $13 = $c + 162 | 0; //@line 71313
 HEAP16[$13 >> 1] = HEAP16[$11 >> 1] | 0; //@line 71314
 $14 = $6 & 16777215; //@line 71315
 $15 = $14 + 1 | 0; //@line 71316
 if ($15 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $21 = HEAP32[$c + 32 >> 2] | 0; //@line 71323
  $_0_i_i = HEAPU8[$21 + $14 | 0] << 8 | HEAPU8[$21 + $15 | 0]; //@line 71333
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $14) | 0; //@line 71341
 }
 HEAP16[$11 >> 1] = $_0_i_i; //@line 71344
 if ((HEAP8[$c + 336 | 0] | 0) != 0) {
  _e68_exception_bus($c); //@line 71350
  $_0 = 1; //@line 71352
  return $_0 | 0; //@line 71355
 }
 HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 2; //@line 71359
 $43 = $c + 152 | 0; //@line 71360
 HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) + 2; //@line 71363
 HEAP32[$c + 340 >> 2] = 2; //@line 71365
 $49 = HEAP32[$c + 120 + (($ea & 7) << 2) >> 2] | 0; //@line 71368
 $50 = $c + 344 | 0; //@line 71369
 HEAP32[$50 >> 2] = $49; //@line 71370
 $_pre = HEAP16[$13 >> 1] | 0; //@line 71375
 do {
  if ((HEAP32[$c >> 2] & 4 | 0) == 0) {
   $scale_0 = 0; //@line 71379
  } else {
   $56 = $_pre & 65535; //@line 71381
   if (($56 & 256 | 0) == 0) {
    $scale_0 = $56 >>> 9 & 3; //@line 71389
    break;
   }
   $_0 = _e68_ea_full($c, $56) | 0; //@line 71394
   return $_0 | 0; //@line 71397
  }
 } while (0);
 $64 = $_pre & 65535; //@line 71401
 $70 = (($64 & 128 | 0) != 0 ? $64 | -256 : $64 & 255) + $49 | 0; //@line 71407
 HEAP32[$50 >> 2] = $70; //@line 71408
 $74 = $64 >>> 12 & 7; //@line 71412
 if (($64 & 32768 | 0) == 0) {
  $idx_0_in = $c + 88 + ($74 << 2) | 0; //@line 71416
 } else {
  $idx_0_in = $c + 120 + ($74 << 2) | 0; //@line 71420
 }
 $idx_0 = HEAP32[$idx_0_in >> 2] | 0; //@line 71423
 if (($_pre & 2048) == 0) {
  $idx_1 = ($idx_0 & 32768 | 0) != 0 ? $idx_0 | -65536 : $idx_0 & 65535; //@line 71434
 } else {
  $idx_1 = $idx_0; //@line 71436
 }
 HEAP32[$50 >> 2] = $70 + ($idx_1 << $scale_0); //@line 71441
 $91 = $c + 372 | 0; //@line 71442
 HEAP32[$91 >> 2] = (HEAP32[$91 >> 2] | 0) + 6; //@line 71445
 $_0 = 0; //@line 71447
 return $_0 | 0; //@line 71450
}
function _e68_ea_111_000($c, $ea, $mask, $size) {
 $c = $c | 0;
 $ea = $ea | 0;
 $mask = $mask | 0;
 $size = $size | 0;
 var $5 = 0, $6 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $21 = 0, $_0_i_i = 0, $43 = 0, $48 = 0, $54 = 0, $_0 = 0;
 if (($mask & 128 | 0) == 0) {
  _e68_exception_illegal($c); //@line 71472
  $_0 = 1; //@line 71474
  return $_0 | 0; //@line 71477
 }
 $5 = $c + 156 | 0; //@line 71479
 $6 = HEAP32[$5 >> 2] | 0; //@line 71480
 if (($6 & 1 | 0) != 0) {
  _e68_exception_address($c, $6, 0, 0); //@line 71485
  $_0 = 1; //@line 71487
  return $_0 | 0; //@line 71490
 }
 $11 = $c + 164 | 0; //@line 71492
 $13 = $c + 162 | 0; //@line 71494
 HEAP16[$13 >> 1] = HEAP16[$11 >> 1] | 0; //@line 71495
 $14 = $6 & 16777215; //@line 71496
 $15 = $14 + 1 | 0; //@line 71497
 if ($15 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $21 = HEAP32[$c + 32 >> 2] | 0; //@line 71504
  $_0_i_i = HEAPU8[$21 + $14 | 0] << 8 | HEAPU8[$21 + $15 | 0]; //@line 71514
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $14) | 0; //@line 71522
 }
 HEAP16[$11 >> 1] = $_0_i_i; //@line 71525
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 2; //@line 71533
  $43 = $c + 152 | 0; //@line 71534
  HEAP32[$43 >> 2] = (HEAP32[$43 >> 2] | 0) + 2; //@line 71537
  HEAP32[$c + 340 >> 2] = 2; //@line 71539
  $48 = HEAPU16[$13 >> 1] | 0; //@line 71541
  HEAP32[$c + 344 >> 2] = ($48 & 32768 | 0) != 0 ? $48 | -65536 : $48; //@line 71547
  $54 = $c + 372 | 0; //@line 71548
  HEAP32[$54 >> 2] = (HEAP32[$54 >> 2] | 0) + 4; //@line 71551
  $_0 = 0; //@line 71553
  return $_0 | 0; //@line 71556
 } else {
  _e68_exception_bus($c); //@line 71558
  $_0 = 1; //@line 71560
  return $_0 | 0; //@line 71563
 }
 return 0;
}
function _e68_ea_111_001($c, $ea, $mask, $size) {
 $c = $c | 0;
 $ea = $ea | 0;
 $mask = $mask | 0;
 $size = $size | 0;
 var $5 = 0, $6 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $21 = 0, $36 = 0, $37 = 0, $43 = 0, $44 = 0, $50 = 0, $55 = 0, $56 = 0, $60 = 0, $73 = 0, $phitmp = 0, $85 = 0, $_0 = 0;
 if (($mask & 256 | 0) == 0) {
  _e68_exception_illegal($c); //@line 71589
  $_0 = 1; //@line 71591
  return $_0 | 0; //@line 71594
 }
 $5 = $c + 156 | 0; //@line 71596
 $6 = HEAP32[$5 >> 2] | 0; //@line 71597
 if (($6 & 1 | 0) != 0) {
  _e68_exception_address($c, $6, 0, 0); //@line 71602
  $_0 = 1; //@line 71604
  return $_0 | 0; //@line 71607
 }
 $11 = $c + 164 | 0; //@line 71609
 $13 = $c + 162 | 0; //@line 71611
 HEAP16[$13 >> 1] = HEAP16[$11 >> 1] | 0; //@line 71612
 $14 = $6 & 16777215; //@line 71613
 $15 = $14 + 1 | 0; //@line 71614
 $16 = $c + 36 | 0; //@line 71615
 if ($15 >>> 0 < (HEAP32[$16 >> 2] | 0) >>> 0) {
  $21 = HEAP32[$c + 32 >> 2] | 0; //@line 71621
  $36 = HEAPU8[$21 + $14 | 0] << 8 | HEAPU8[$21 + $15 | 0]; //@line 71631
 } else {
  $36 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $14) | 0; //@line 71639
 }
 HEAP16[$11 >> 1] = $36; //@line 71642
 $37 = $c + 336 | 0; //@line 71643
 if ((HEAP8[$37] | 0) != 0) {
  _e68_exception_bus($c); //@line 71648
  $_0 = 1; //@line 71650
  return $_0 | 0; //@line 71653
 }
 $43 = (HEAP32[$5 >> 2] | 0) + 2 | 0; //@line 71656
 HEAP32[$5 >> 2] = $43; //@line 71657
 $44 = $c + 152 | 0; //@line 71658
 HEAP32[$44 >> 2] = (HEAP32[$44 >> 2] | 0) + 2; //@line 71661
 HEAP32[$c + 340 >> 2] = 2; //@line 71663
 $50 = $c + 344 | 0; //@line 71666
 HEAP32[$50 >> 2] = HEAPU16[$13 >> 1] | 0; //@line 71667
 if (($43 & 1 | 0) != 0) {
  _e68_exception_address($c, $43, 0, 0); //@line 71672
  $_0 = 1; //@line 71674
  return $_0 | 0; //@line 71677
 }
 HEAP16[$13 >> 1] = $36; //@line 71679
 $55 = $43 & 16777215; //@line 71680
 $56 = $55 + 1 | 0; //@line 71681
 do {
  if ($56 >>> 0 < (HEAP32[$16 >> 2] | 0) >>> 0) {
   $60 = HEAP32[$c + 32 >> 2] | 0; //@line 71688
   HEAP16[$11 >> 1] = HEAPU8[$60 + $55 | 0] << 8 | HEAPU8[$60 + $56 | 0]; //@line 71697
  } else {
   $73 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $55) | 0; //@line 71704
   $phitmp = (HEAP8[$37] | 0) == 0; //@line 71706
   HEAP16[$11 >> 1] = $73; //@line 71707
   if ($phitmp) {
    break;
   }
   _e68_exception_bus($c); //@line 71712
   $_0 = 1; //@line 71714
   return $_0 | 0; //@line 71717
  }
 } while (0);
 HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 2; //@line 71722
 HEAP32[$44 >> 2] = (HEAP32[$44 >> 2] | 0) + 2; //@line 71725
 HEAP32[$50 >> 2] = HEAPU16[$13 >> 1] | HEAP32[$50 >> 2] << 16; //@line 71731
 $85 = $c + 372 | 0; //@line 71732
 HEAP32[$85 >> 2] = (HEAP32[$85 >> 2] | 0) + 8; //@line 71735
 $_0 = 0; //@line 71737
 return $_0 | 0; //@line 71740
}
function _e68_ea_111_010($c, $ea, $mask, $size) {
 $c = $c | 0;
 $ea = $ea | 0;
 $mask = $mask | 0;
 $size = $size | 0;
 var $6 = 0, $7 = 0, $9 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $24 = 0, $_0_i_i = 0, $46 = 0, $50 = 0, $57 = 0, $_0 = 0;
 if (($mask & 512 | 0) == 0) {
  _e68_exception_illegal($c); //@line 71762
  $_0 = 1; //@line 71764
  return $_0 | 0; //@line 71767
 }
 HEAP32[$c + 340 >> 2] = 2; //@line 71770
 $6 = $c + 156 | 0; //@line 71771
 $7 = HEAP32[$6 >> 2] | 0; //@line 71772
 $9 = $c + 344 | 0; //@line 71774
 HEAP32[$9 >> 2] = $7 - 2; //@line 71775
 if (($7 & 1 | 0) != 0) {
  _e68_exception_address($c, $7, 0, 0); //@line 71780
  $_0 = 1; //@line 71782
  return $_0 | 0; //@line 71785
 }
 $14 = $c + 164 | 0; //@line 71787
 $16 = $c + 162 | 0; //@line 71789
 HEAP16[$16 >> 1] = HEAP16[$14 >> 1] | 0; //@line 71790
 $17 = $7 & 16777215; //@line 71791
 $18 = $17 + 1 | 0; //@line 71792
 if ($18 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $24 = HEAP32[$c + 32 >> 2] | 0; //@line 71799
  $_0_i_i = HEAPU8[$24 + $17 | 0] << 8 | HEAPU8[$24 + $18 | 0]; //@line 71809
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $17) | 0; //@line 71817
 }
 HEAP16[$14 >> 1] = $_0_i_i; //@line 71820
 if ((HEAP8[$c + 336 | 0] | 0) == 0) {
  HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 2; //@line 71828
  $46 = $c + 152 | 0; //@line 71829
  HEAP32[$46 >> 2] = (HEAP32[$46 >> 2] | 0) + 2; //@line 71832
  $50 = HEAPU16[$16 >> 1] | 0; //@line 71834
  HEAP32[$9 >> 2] = (($50 & 32768 | 0) != 0 ? $50 | -65536 : $50) + (HEAP32[$9 >> 2] | 0); //@line 71841
  $57 = $c + 372 | 0; //@line 71842
  HEAP32[$57 >> 2] = (HEAP32[$57 >> 2] | 0) + 4; //@line 71845
  $_0 = 0; //@line 71847
  return $_0 | 0; //@line 71850
 } else {
  _e68_exception_bus($c); //@line 71852
  $_0 = 1; //@line 71854
  return $_0 | 0; //@line 71857
 }
 return 0;
}
function _e68_ea_111_011($c, $ea, $mask, $size) {
 $c = $c | 0;
 $ea = $ea | 0;
 $mask = $mask | 0;
 $size = $size | 0;
 var $6 = 0, $7 = 0, $9 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $24 = 0, $_0_i_i = 0, $46 = 0, $_pre = 0, $54 = 0, $scale_0 = 0, $62 = 0, $69 = 0, $73 = 0, $idx_0_in = 0, $idx_0 = 0, $idx_1 = 0, $90 = 0, $_0 = 0;
 if (($mask & 1024 | 0) == 0) {
  _e68_exception_illegal($c); //@line 71884
  $_0 = 1; //@line 71886
  return $_0 | 0; //@line 71889
 }
 HEAP32[$c + 340 >> 2] = 2; //@line 71892
 $6 = $c + 156 | 0; //@line 71893
 $7 = HEAP32[$6 >> 2] | 0; //@line 71894
 $9 = $c + 344 | 0; //@line 71896
 HEAP32[$9 >> 2] = $7 - 2; //@line 71897
 if (($7 & 1 | 0) != 0) {
  _e68_exception_address($c, $7, 0, 0); //@line 71902
  $_0 = 1; //@line 71904
  return $_0 | 0; //@line 71907
 }
 $14 = $c + 164 | 0; //@line 71909
 $16 = $c + 162 | 0; //@line 71911
 HEAP16[$16 >> 1] = HEAP16[$14 >> 1] | 0; //@line 71912
 $17 = $7 & 16777215; //@line 71913
 $18 = $17 + 1 | 0; //@line 71914
 if ($18 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $24 = HEAP32[$c + 32 >> 2] | 0; //@line 71921
  $_0_i_i = HEAPU8[$24 + $17 | 0] << 8 | HEAPU8[$24 + $18 | 0]; //@line 71931
 } else {
  $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $17) | 0; //@line 71939
 }
 HEAP16[$14 >> 1] = $_0_i_i; //@line 71942
 if ((HEAP8[$c + 336 | 0] | 0) != 0) {
  _e68_exception_bus($c); //@line 71948
  $_0 = 1; //@line 71950
  return $_0 | 0; //@line 71953
 }
 HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 2; //@line 71957
 $46 = $c + 152 | 0; //@line 71958
 HEAP32[$46 >> 2] = (HEAP32[$46 >> 2] | 0) + 2; //@line 71961
 $_pre = HEAP16[$16 >> 1] | 0; //@line 71966
 do {
  if ((HEAP32[$c >> 2] & 4 | 0) == 0) {
   $scale_0 = 0; //@line 71970
  } else {
   $54 = $_pre & 65535; //@line 71972
   if (($54 & 256 | 0) == 0) {
    $scale_0 = $54 >>> 9 & 3; //@line 71980
    break;
   }
   $_0 = _e68_ea_full($c, $54) | 0; //@line 71985
   return $_0 | 0; //@line 71988
  }
 } while (0);
 $62 = $_pre & 65535; //@line 71992
 $69 = (($62 & 128 | 0) != 0 ? $62 | -256 : $62 & 255) + (HEAP32[$9 >> 2] | 0) | 0; //@line 71999
 HEAP32[$9 >> 2] = $69; //@line 72000
 $73 = $62 >>> 12 & 7; //@line 72004
 if (($62 & 32768 | 0) == 0) {
  $idx_0_in = $c + 88 + ($73 << 2) | 0; //@line 72008
 } else {
  $idx_0_in = $c + 120 + ($73 << 2) | 0; //@line 72012
 }
 $idx_0 = HEAP32[$idx_0_in >> 2] | 0; //@line 72015
 if (($_pre & 2048) == 0) {
  $idx_1 = ($idx_0 & 32768 | 0) != 0 ? $idx_0 | -65536 : $idx_0 & 65535; //@line 72026
 } else {
  $idx_1 = $idx_0; //@line 72028
 }
 HEAP32[$9 >> 2] = $69 + ($idx_1 << $scale_0); //@line 72033
 $90 = $c + 372 | 0; //@line 72034
 HEAP32[$90 >> 2] = (HEAP32[$90 >> 2] | 0) + 6; //@line 72037
 $_0 = 0; //@line 72039
 return $_0 | 0; //@line 72042
}
function _e68_ea_111_100($c, $ea, $mask, $size) {
 $c = $c | 0;
 $ea = $ea | 0;
 $mask = $mask | 0;
 $size = $size | 0;
 var $5 = 0, $6 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $21 = 0, $36 = 0, $37 = 0, $43 = 0, $44 = 0, $49 = 0, $50 = 0, $56 = 0, $57 = 0, $61 = 0, $74 = 0, $phitmp = 0, $86 = 0, $90 = 0, $95 = 0, $_0 = 0;
 if (($mask & 2048 | 0) == 0) {
  _e68_exception_illegal($c); //@line 72068
  $_0 = 1; //@line 72070
  return $_0 | 0; //@line 72073
 }
 $5 = $c + 156 | 0; //@line 72075
 $6 = HEAP32[$5 >> 2] | 0; //@line 72076
 if (($6 & 1 | 0) != 0) {
  _e68_exception_address($c, $6, 0, 0); //@line 72081
  $_0 = 1; //@line 72083
  return $_0 | 0; //@line 72086
 }
 $11 = $c + 164 | 0; //@line 72088
 $13 = $c + 162 | 0; //@line 72090
 HEAP16[$13 >> 1] = HEAP16[$11 >> 1] | 0; //@line 72091
 $14 = $6 & 16777215; //@line 72092
 $15 = $14 + 1 | 0; //@line 72093
 $16 = $c + 36 | 0; //@line 72094
 if ($15 >>> 0 < (HEAP32[$16 >> 2] | 0) >>> 0) {
  $21 = HEAP32[$c + 32 >> 2] | 0; //@line 72100
  $36 = HEAPU8[$21 + $14 | 0] << 8 | HEAPU8[$21 + $15 | 0]; //@line 72110
 } else {
  $36 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $14) | 0; //@line 72118
 }
 HEAP16[$11 >> 1] = $36; //@line 72121
 $37 = $c + 336 | 0; //@line 72122
 if ((HEAP8[$37] | 0) != 0) {
  _e68_exception_bus($c); //@line 72127
  $_0 = 1; //@line 72129
  return $_0 | 0; //@line 72132
 }
 $43 = (HEAP32[$5 >> 2] | 0) + 2 | 0; //@line 72135
 HEAP32[$5 >> 2] = $43; //@line 72136
 $44 = $c + 152 | 0; //@line 72137
 HEAP32[$44 >> 2] = (HEAP32[$44 >> 2] | 0) + 2; //@line 72140
 HEAP32[$c + 340 >> 2] = 0; //@line 72142
 $49 = HEAPU16[$13 >> 1] | 0; //@line 72144
 $50 = $c + 344 | 0; //@line 72145
 HEAP32[$50 >> 2] = $49; //@line 72146
 if (($size | 0) == 32) {
  if (($43 & 1 | 0) != 0) {
   _e68_exception_address($c, $43, 0, 0); //@line 72152
   $_0 = 1; //@line 72154
   return $_0 | 0; //@line 72157
  }
  HEAP16[$13 >> 1] = $36; //@line 72159
  $56 = $43 & 16777215; //@line 72160
  $57 = $56 + 1 | 0; //@line 72161
  do {
   if ($57 >>> 0 < (HEAP32[$16 >> 2] | 0) >>> 0) {
    $61 = HEAP32[$c + 32 >> 2] | 0; //@line 72168
    HEAP16[$11 >> 1] = HEAPU8[$61 + $56 | 0] << 8 | HEAPU8[$61 + $57 | 0]; //@line 72177
   } else {
    $74 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $56) | 0; //@line 72184
    $phitmp = (HEAP8[$37] | 0) == 0; //@line 72186
    HEAP16[$11 >> 1] = $74; //@line 72187
    if ($phitmp) {
     break;
    }
    _e68_exception_bus($c); //@line 72192
    $_0 = 1; //@line 72194
    return $_0 | 0; //@line 72197
   }
  } while (0);
  HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 2; //@line 72202
  HEAP32[$44 >> 2] = (HEAP32[$44 >> 2] | 0) + 2; //@line 72205
  HEAP32[$50 >> 2] = HEAPU16[$13 >> 1] | HEAP32[$50 >> 2] << 16; //@line 72211
  $86 = $c + 372 | 0; //@line 72212
  HEAP32[$86 >> 2] = (HEAP32[$86 >> 2] | 0) + 8; //@line 72215
  $_0 = 0; //@line 72217
  return $_0 | 0; //@line 72220
 } else if (($size | 0) == 16) {
  $90 = $c + 372 | 0; //@line 72222
  HEAP32[$90 >> 2] = (HEAP32[$90 >> 2] | 0) + 4; //@line 72225
  $_0 = 0; //@line 72227
  return $_0 | 0; //@line 72230
 } else {
  HEAP32[$50 >> 2] = $49 & 255; //@line 72233
  $95 = $c + 372 | 0; //@line 72234
  HEAP32[$95 >> 2] = (HEAP32[$95 >> 2] | 0) + 4; //@line 72237
  $_0 = 0; //@line 72238
  return $_0 | 0; //@line 72241
 }
 return 0;
}
function _e68_ea_111_xxx($c, $ea, $mask, $size) {
 $c = $c | 0;
 $ea = $ea | 0;
 $mask = $mask | 0;
 $size = $size | 0;
 _e68_exception_illegal($c); //@line 72253
 return 1; //@line 72255
}
function _e68_ea_get_val8($c, $val) {
 $c = $c | 0;
 $val = $val | 0;
 var $2 = 0, $9 = 0, $20 = 0, $_0_i = 0, $35 = 0, $_0 = 0;
 $2 = HEAP32[$c + 340 >> 2] | 0; //@line 72270
 if (($2 | 0) == 1) {
  $9 = HEAP32[$c + 344 >> 2] | 0; //@line 72273
  if ($9 >>> 0 < 8) {
   HEAP8[$val] = HEAP32[$c + 88 + (($9 & 7) << 2) >> 2] & 255; //@line 72281
   $_0 = 0; //@line 72283
   return $_0 | 0; //@line 72286
  } else {
   _e68_exception_illegal($c); //@line 72288
   $_0 = 1; //@line 72290
   return $_0 | 0; //@line 72293
  }
 } else if (($2 | 0) == 2) {
  $20 = HEAP32[$c + 344 >> 2] & 16777215; //@line 72298
  if ($20 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $_0_i = HEAP8[(HEAP32[$c + 32 >> 2] | 0) + $20 | 0] | 0; //@line 72309
  } else {
   $_0_i = FUNCTION_TABLE_iii[HEAP32[$c + 8 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $20) | 0; //@line 72317
  }
  HEAP8[$val] = $_0_i; //@line 72320
  $35 = $c + 372 | 0; //@line 72321
  HEAP32[$35 >> 2] = (HEAP32[$35 >> 2] | 0) + 4; //@line 72324
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   $_0 = 0; //@line 72330
   return $_0 | 0; //@line 72333
  }
  _e68_exception_bus($c); //@line 72335
  $_0 = 1; //@line 72337
  return $_0 | 0; //@line 72340
 } else if (($2 | 0) == 0) {
  HEAP8[$val] = HEAP32[$c + 344 >> 2] & 255; //@line 72345
  $_0 = 0; //@line 72347
  return $_0 | 0; //@line 72350
 } else {
  _e68_exception_illegal($c); //@line 72352
  $_0 = 1; //@line 72354
  return $_0 | 0; //@line 72357
 }
 return 0;
}
function _e68_ea_get_val16($c, $val) {
 $c = $c | 0;
 $val = $val | 0;
 var $2 = 0, $9 = 0, $_sink_in = 0, $24 = 0, $34 = 0, $35 = 0, $41 = 0, $_0_i = 0, $56 = 0, $_0 = 0;
 $2 = HEAP32[$c + 340 >> 2] | 0; //@line 72375
 if (($2 | 0) == 0) {
  HEAP16[$val >> 1] = HEAP32[$c + 344 >> 2] & 65535; //@line 72380
  $_0 = 0; //@line 72382
  return $_0 | 0; //@line 72385
 } else if (($2 | 0) == 2) {
  $24 = HEAP32[$c + 344 >> 2] | 0; //@line 72388
  do {
   if (($24 & 1 | 0) != 0) {
    if ((HEAP32[$c >> 2] & 1 | 0) != 0) {
     break;
    }
    _e68_exception_address($c, $24, 1, 0); //@line 72402
    $_0 = 1; //@line 72404
    return $_0 | 0; //@line 72407
   }
  } while (0);
  $34 = $24 & 16777215; //@line 72410
  $35 = $34 + 1 | 0; //@line 72411
  if ($35 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $41 = HEAP32[$c + 32 >> 2] | 0; //@line 72418
   $_0_i = HEAPU8[$41 + $34 | 0] << 8 | HEAPU8[$41 + $35 | 0]; //@line 72428
  } else {
   $_0_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $34) | 0; //@line 72436
  }
  HEAP16[$val >> 1] = $_0_i; //@line 72439
  $56 = $c + 372 | 0; //@line 72440
  HEAP32[$56 >> 2] = (HEAP32[$56 >> 2] | 0) + 4; //@line 72443
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   $_0 = 0; //@line 72449
   return $_0 | 0; //@line 72452
  }
  _e68_exception_bus($c); //@line 72454
  $_0 = 1; //@line 72456
  return $_0 | 0; //@line 72459
 } else if (($2 | 0) == 1) {
  $9 = HEAP32[$c + 344 >> 2] | 0; //@line 72462
  do {
   if ($9 >>> 0 < 8) {
    $_sink_in = $c + 88 + (($9 & 7) << 2) | 0; //@line 72470
   } else {
    if ($9 >>> 0 < 16) {
     $_sink_in = $c + 120 + (($9 & 7) << 2) | 0; //@line 72477
     break;
    }
    _e68_exception_illegal($c); //@line 72480
    $_0 = 1; //@line 72482
    return $_0 | 0; //@line 72485
   }
  } while (0);
  HEAP16[$val >> 1] = HEAP32[$_sink_in >> 2] & 65535; //@line 72491
  $_0 = 0; //@line 72493
  return $_0 | 0; //@line 72496
 } else {
  _e68_exception_illegal($c); //@line 72498
  $_0 = 1; //@line 72500
  return $_0 | 0; //@line 72503
 }
 return 0;
}
function _e68_ea_get_val32($c, $val) {
 $c = $c | 0;
 $val = $val | 0;
 var $2 = 0, $8 = 0, $storemerge_in = 0, $22 = 0, $32 = 0, $33 = 0, $39 = 0, $_0_i = 0, $66 = 0, $_0 = 0;
 $2 = HEAP32[$c + 340 >> 2] | 0; //@line 72522
 if (($2 | 0) == 0) {
  HEAP32[$val >> 2] = HEAP32[$c + 344 >> 2]; //@line 72526
  $_0 = 0; //@line 72528
  return $_0 | 0; //@line 72531
 } else if (($2 | 0) == 2) {
  $22 = HEAP32[$c + 344 >> 2] | 0; //@line 72534
  do {
   if (($22 & 1 | 0) != 0) {
    if ((HEAP32[$c >> 2] & 1 | 0) != 0) {
     break;
    }
    _e68_exception_address($c, $22, 1, 0); //@line 72548
    $_0 = 1; //@line 72550
    return $_0 | 0; //@line 72553
   }
  } while (0);
  $32 = $22 & 16777215; //@line 72556
  $33 = $32 + 3 | 0; //@line 72557
  if ($33 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $39 = HEAP32[$c + 32 >> 2] | 0; //@line 72564
   $_0_i = ((HEAPU8[$39 + $32 | 0] << 8 | HEAPU8[$39 + ($32 + 1) | 0]) << 8 | HEAPU8[$39 + ($32 + 2) | 0]) << 8 | HEAPU8[$39 + $33 | 0]; //@line 72586
  } else {
   $_0_i = FUNCTION_TABLE_iii[HEAP32[$c + 16 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $32) | 0; //@line 72594
  }
  HEAP32[$val >> 2] = $_0_i; //@line 72597
  $66 = $c + 372 | 0; //@line 72598
  HEAP32[$66 >> 2] = (HEAP32[$66 >> 2] | 0) + 8; //@line 72601
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   $_0 = 0; //@line 72607
   return $_0 | 0; //@line 72610
  }
  _e68_exception_bus($c); //@line 72612
  $_0 = 1; //@line 72614
  return $_0 | 0; //@line 72617
 } else if (($2 | 0) == 1) {
  $8 = HEAP32[$c + 344 >> 2] | 0; //@line 72620
  do {
   if ($8 >>> 0 < 8) {
    $storemerge_in = $c + 88 + (($8 & 7) << 2) | 0; //@line 72628
   } else {
    if ($8 >>> 0 < 16) {
     $storemerge_in = $c + 120 + (($8 & 7) << 2) | 0; //@line 72635
     break;
    }
    _e68_exception_illegal($c); //@line 72638
    $_0 = 1; //@line 72640
    return $_0 | 0; //@line 72643
   }
  } while (0);
  HEAP32[$val >> 2] = HEAP32[$storemerge_in >> 2]; //@line 72648
  $_0 = 0; //@line 72650
  return $_0 | 0; //@line 72653
 } else {
  _e68_exception_illegal($c); //@line 72655
  $_0 = 1; //@line 72657
  return $_0 | 0; //@line 72660
 }
 return 0;
}
function _e68_ea_set_val8($c, $val) {
 $c = $c | 0;
 $val = $val | 0;
 var $2 = 0, $6 = 0, $10 = 0, $19 = 0, $32 = 0, $_0 = 0;
 $2 = HEAP32[$c + 340 >> 2] | 0; //@line 72675
 if (($2 | 0) == 0) {
  _e68_exception_illegal($c); //@line 72677
  $_0 = 1; //@line 72679
  return $_0 | 0; //@line 72682
 } else if (($2 | 0) == 1) {
  $6 = HEAP32[$c + 344 >> 2] | 0; //@line 72685
  if ($6 >>> 0 < 8) {
   $10 = $c + 88 + (($6 & 7) << 2) | 0; //@line 72690
   HEAP32[$10 >> 2] = HEAP32[$10 >> 2] & -256 | $val & 255; //@line 72695
   $_0 = 0; //@line 72697
   return $_0 | 0; //@line 72700
  } else {
   _e68_exception_illegal($c); //@line 72702
   $_0 = 1; //@line 72704
   return $_0 | 0; //@line 72707
  }
 } else if (($2 | 0) == 2) {
  $19 = HEAP32[$c + 344 >> 2] & 16777215; //@line 72712
  if ($19 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   HEAP8[(HEAP32[$c + 32 >> 2] | 0) + $19 | 0] = $val; //@line 72721
  } else {
   FUNCTION_TABLE_viii[HEAP32[$c + 20 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $19, $val); //@line 72728
  }
  $32 = $c + 372 | 0; //@line 72730
  HEAP32[$32 >> 2] = (HEAP32[$32 >> 2] | 0) + 4; //@line 72733
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   $_0 = 0; //@line 72739
   return $_0 | 0; //@line 72742
  }
  _e68_exception_bus($c); //@line 72744
  $_0 = 1; //@line 72746
  return $_0 | 0; //@line 72749
 } else {
  _e68_exception_illegal($c); //@line 72751
  $_0 = 1; //@line 72753
  return $_0 | 0; //@line 72756
 }
 return 0;
}
function _e68_ea_set_val16($c, $val) {
 $c = $c | 0;
 $val = $val | 0;
 var $2 = 0, $6 = 0, $10 = 0, $19 = 0, $27 = 0, $37 = 0, $38 = 0, $45 = 0, $56 = 0, $_0 = 0;
 $2 = HEAP32[$c + 340 >> 2] | 0; //@line 72774
 if (($2 | 0) == 1) {
  $6 = HEAP32[$c + 344 >> 2] | 0; //@line 72777
  if ($6 >>> 0 < 8) {
   $10 = $c + 88 + (($6 & 7) << 2) | 0; //@line 72782
   HEAP32[$10 >> 2] = HEAP32[$10 >> 2] & -65536 | $val & 65535; //@line 72787
   $_0 = 0; //@line 72789
   return $_0 | 0; //@line 72792
  }
  if ($6 >>> 0 < 16) {
   $19 = $val & 65535; //@line 72798
   HEAP32[$c + 120 + (($6 & 7) << 2) >> 2] = ($19 & 32768 | 0) == 0 ? $19 : $19 | -65536; //@line 72804
   $_0 = 0; //@line 72805
   return $_0 | 0; //@line 72808
  } else {
   _e68_exception_illegal($c); //@line 72810
   $_0 = 1; //@line 72812
   return $_0 | 0; //@line 72815
  }
 } else if (($2 | 0) == 0) {
  _e68_exception_illegal($c); //@line 72818
  $_0 = 1; //@line 72820
  return $_0 | 0; //@line 72823
 } else if (($2 | 0) == 2) {
  $27 = HEAP32[$c + 344 >> 2] | 0; //@line 72826
  do {
   if (($27 & 1 | 0) != 0) {
    if ((HEAP32[$c >> 2] & 1 | 0) != 0) {
     break;
    }
    _e68_exception_address($c, $27, 1, 1); //@line 72840
    $_0 = 1; //@line 72842
    return $_0 | 0; //@line 72845
   }
  } while (0);
  $37 = $27 & 16777215; //@line 72848
  $38 = $37 + 1 | 0; //@line 72849
  if ($38 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $45 = $c + 32 | 0; //@line 72857
   HEAP8[(HEAP32[$45 >> 2] | 0) + $37 | 0] = ($val & 65535) >>> 8 & 255; //@line 72860
   HEAP8[(HEAP32[$45 >> 2] | 0) + $38 | 0] = $val & 255; //@line 72864
  } else {
   FUNCTION_TABLE_viii[HEAP32[$c + 24 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $37, $val); //@line 72871
  }
  $56 = $c + 372 | 0; //@line 72873
  HEAP32[$56 >> 2] = (HEAP32[$56 >> 2] | 0) + 4; //@line 72876
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   $_0 = 0; //@line 72882
   return $_0 | 0; //@line 72885
  }
  _e68_exception_bus($c); //@line 72887
  $_0 = 1; //@line 72889
  return $_0 | 0; //@line 72892
 } else {
  _e68_exception_illegal($c); //@line 72894
  $_0 = 1; //@line 72896
  return $_0 | 0; //@line 72899
 }
 return 0;
}
function _e68_ea_set_val32($c, $val) {
 $c = $c | 0;
 $val = $val | 0;
 var $2 = 0, $6 = 0, $19 = 0, $29 = 0, $30 = 0, $37 = 0, $58 = 0, $_0 = 0;
 $2 = HEAP32[$c + 340 >> 2] | 0; //@line 72917
 if (($2 | 0) == 0) {
  _e68_exception_illegal($c); //@line 72919
  $_0 = 1; //@line 72921
  return $_0 | 0; //@line 72924
 } else if (($2 | 0) == 1) {
  $6 = HEAP32[$c + 344 >> 2] | 0; //@line 72927
  if ($6 >>> 0 < 8) {
   HEAP32[$c + 88 + (($6 & 7) << 2) >> 2] = $val; //@line 72933
   $_0 = 0; //@line 72935
   return $_0 | 0; //@line 72938
  }
  if ($6 >>> 0 < 16) {
   HEAP32[$c + 120 + (($6 & 7) << 2) >> 2] = $val; //@line 72945
   $_0 = 0; //@line 72946
   return $_0 | 0; //@line 72949
  } else {
   _e68_exception_illegal($c); //@line 72951
   $_0 = 1; //@line 72953
   return $_0 | 0; //@line 72956
  }
 } else if (($2 | 0) == 2) {
  $19 = HEAP32[$c + 344 >> 2] | 0; //@line 72960
  do {
   if (($19 & 1 | 0) != 0) {
    if ((HEAP32[$c >> 2] & 1 | 0) != 0) {
     break;
    }
    _e68_exception_address($c, $19, 1, 1); //@line 72974
    $_0 = 1; //@line 72976
    return $_0 | 0; //@line 72979
   }
  } while (0);
  $29 = $19 & 16777215; //@line 72982
  $30 = $29 + 3 | 0; //@line 72983
  if ($30 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $37 = $c + 32 | 0; //@line 72991
   HEAP8[(HEAP32[$37 >> 2] | 0) + $29 | 0] = $val >>> 24 & 255; //@line 72994
   HEAP8[(HEAP32[$37 >> 2] | 0) + ($29 + 1) | 0] = $val >>> 16 & 255; //@line 73000
   HEAP8[(HEAP32[$37 >> 2] | 0) + ($29 + 2) | 0] = $val >>> 8 & 255; //@line 73006
   HEAP8[(HEAP32[$37 >> 2] | 0) + $30 | 0] = $val & 255; //@line 73010
  } else {
   FUNCTION_TABLE_viii[HEAP32[$c + 28 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $29, $val); //@line 73017
  }
  $58 = $c + 372 | 0; //@line 73019
  HEAP32[$58 >> 2] = (HEAP32[$58 >> 2] | 0) + 8; //@line 73022
  if ((HEAP8[$c + 336 | 0] | 0) == 0) {
   $_0 = 0; //@line 73028
   return $_0 | 0; //@line 73031
  }
  _e68_exception_bus($c); //@line 73033
  $_0 = 1; //@line 73035
  return $_0 | 0; //@line 73038
 } else {
  _e68_exception_illegal($c); //@line 73040
  $_0 = 1; //@line 73042
  return $_0 | 0; //@line 73045
 }
 return 0;
}
function _e6522_set_ora_fct($via, $ext, $fct) {
 $via = $via | 0;
 $ext = $ext | 0;
 $fct = $fct | 0;
 HEAP32[$via + 36 >> 2] = $ext; //@line 73058
 HEAP32[$via + 40 >> 2] = $fct; //@line 73061
 return;
}
function _e6522_set_orb_fct($via, $ext, $fct) {
 $via = $via | 0;
 $ext = $ext | 0;
 $fct = $fct | 0;
 HEAP32[$via + 48 >> 2] = $ext; //@line 73075
 HEAP32[$via + 52 >> 2] = $fct; //@line 73078
 return;
}
function _e6522_set_cb2_fct($via, $ext, $fct) {
 $via = $via | 0;
 $ext = $ext | 0;
 $fct = $fct | 0;
 HEAP32[$via + 60 >> 2] = $ext; //@line 73092
 HEAP32[$via + 64 >> 2] = $fct; //@line 73095
 return;
}
function _e6522_set_shift_out_fct($via, $ext, $fct) {
 $via = $via | 0;
 $ext = $ext | 0;
 $fct = $fct | 0;
 HEAP32[$via + 72 >> 2] = $ext; //@line 73109
 HEAP32[$via + 76 >> 2] = $fct; //@line 73112
 return;
}
function _e6522_set_irq_fct($via, $ext, $fct) {
 $via = $via | 0;
 $ext = $ext | 0;
 $fct = $fct | 0;
 HEAP32[$via + 80 >> 2] = $ext; //@line 73126
 HEAP32[$via + 84 >> 2] = $fct; //@line 73129
 return;
}
function _e68_ea_full($c, $ext) {
 $c = $c | 0;
 $ext = $ext | 0;
 var $4 = 0, $9 = 0, $14 = 0, $ix_0_in = 0, $ix_0 = 0, $ix_1 = 0, $30 = 0, $33 = 0, $34 = 0, $39 = 0, $41 = 0, $42 = 0, $43 = 0, $49 = 0, $_0_i_i = 0, $71 = 0, $75 = 0, $81 = 0, $82 = 0, $87 = 0, $89 = 0, $90 = 0, $91 = 0, $92 = 0, $97 = 0, $112 = 0, $113 = 0, $119 = 0, $120 = 0, $123 = 0, $128 = 0, $129 = 0, $133 = 0, $146 = 0, $phitmp25 = 0, $bd_0 = 0, $164 = 0, $168 = 0, $171 = 0, $172 = 0, $177 = 0, $179 = 0, $180 = 0, $181 = 0, $187 = 0, $_0_i_i10 = 0, $209 = 0, $213 = 0, $219 = 0, $220 = 0, $225 = 0, $227 = 0, $228 = 0, $229 = 0, $230 = 0, $235 = 0, $250 = 0, $251 = 0, $257 = 0, $258 = 0, $261 = 0, $266 = 0, $267 = 0, $271 = 0, $284 = 0, $phitmp = 0, $od_0 = 0, $302 = 0, $305 = 0, $306 = 0, $312 = 0, $_0_i22 = 0, $343 = 0, $348 = 0, $349 = 0, $355 = 0, $_0_i = 0, $_0 = 0;
 $4 = ($ext & 64 | 0) != 0; //@line 73186
 if (($ext & 128 | 0) != 0) {
  HEAP32[$c + 344 >> 2] = 0; //@line 73190
 }
 $9 = $ext >>> 9 & 3; //@line 73194
 do {
  if ($4) {
   $ix_1 = 0; //@line 73198
  } else {
   $14 = $ext >>> 12 & 7; //@line 73203
   if (($ext & 32768 | 0) == 0) {
    $ix_0_in = $c + 88 + ($14 << 2) | 0; //@line 73207
   } else {
    $ix_0_in = $c + 120 + ($14 << 2) | 0; //@line 73211
   }
   $ix_0 = HEAP32[$ix_0_in >> 2] | 0; //@line 73214
   if (($ext & 2048 | 0) != 0) {
    $ix_1 = $ix_0; //@line 73219
    break;
   }
   $ix_1 = ($ix_0 & 32768 | 0) != 0 ? $ix_0 | -65536 : $ix_0 & 65535; //@line 73228
  }
 } while (0);
 $30 = $ext >>> 4 & 3; //@line 73233
 do {
  if (($30 | 0) == 3) {
   $81 = $c + 156 | 0; //@line 73236
   $82 = HEAP32[$81 >> 2] | 0; //@line 73237
   if (($82 & 1 | 0) != 0) {
    _e68_exception_address($c, $82, 0, 0); //@line 73242
    $_0 = 1; //@line 73244
    return $_0 | 0; //@line 73247
   }
   $87 = $c + 164 | 0; //@line 73249
   $89 = $c + 162 | 0; //@line 73251
   HEAP16[$89 >> 1] = HEAP16[$87 >> 1] | 0; //@line 73252
   $90 = $82 & 16777215; //@line 73253
   $91 = $90 + 1 | 0; //@line 73254
   $92 = $c + 36 | 0; //@line 73255
   if ($91 >>> 0 < (HEAP32[$92 >> 2] | 0) >>> 0) {
    $97 = HEAP32[$c + 32 >> 2] | 0; //@line 73261
    $112 = HEAPU8[$97 + $90 | 0] << 8 | HEAPU8[$97 + $91 | 0]; //@line 73271
   } else {
    $112 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $90) | 0; //@line 73279
   }
   HEAP16[$87 >> 1] = $112; //@line 73282
   $113 = $c + 336 | 0; //@line 73283
   if ((HEAP8[$113] | 0) != 0) {
    _e68_exception_bus($c); //@line 73288
    $_0 = 1; //@line 73290
    return $_0 | 0; //@line 73293
   }
   $119 = (HEAP32[$81 >> 2] | 0) + 2 | 0; //@line 73296
   HEAP32[$81 >> 2] = $119; //@line 73297
   $120 = $c + 152 | 0; //@line 73298
   HEAP32[$120 >> 2] = (HEAP32[$120 >> 2] | 0) + 2; //@line 73301
   $123 = HEAP16[$89 >> 1] | 0; //@line 73302
   if (($119 & 1 | 0) != 0) {
    _e68_exception_address($c, $119, 0, 0); //@line 73307
    $_0 = 1; //@line 73309
    return $_0 | 0; //@line 73312
   }
   HEAP16[$89 >> 1] = $112; //@line 73314
   $128 = $119 & 16777215; //@line 73315
   $129 = $128 + 1 | 0; //@line 73316
   do {
    if ($129 >>> 0 < (HEAP32[$92 >> 2] | 0) >>> 0) {
     $133 = HEAP32[$c + 32 >> 2] | 0; //@line 73323
     HEAP16[$87 >> 1] = HEAPU8[$133 + $128 | 0] << 8 | HEAPU8[$133 + $129 | 0]; //@line 73332
    } else {
     $146 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $128) | 0; //@line 73339
     $phitmp25 = (HEAP8[$113] | 0) == 0; //@line 73341
     HEAP16[$87 >> 1] = $146; //@line 73342
     if ($phitmp25) {
      break;
     }
     _e68_exception_bus($c); //@line 73347
     $_0 = 1; //@line 73349
     return $_0 | 0; //@line 73352
    }
   } while (0);
   HEAP32[$81 >> 2] = (HEAP32[$81 >> 2] | 0) + 2; //@line 73357
   HEAP32[$120 >> 2] = (HEAP32[$120 >> 2] | 0) + 2; //@line 73360
   $bd_0 = HEAPU16[$89 >> 1] | ($123 & 65535) << 16; //@line 73367
  } else if (($30 | 0) == 2) {
   $33 = $c + 156 | 0; //@line 73369
   $34 = HEAP32[$33 >> 2] | 0; //@line 73370
   if (($34 & 1 | 0) != 0) {
    _e68_exception_address($c, $34, 0, 0); //@line 73375
    $_0 = 1; //@line 73377
    return $_0 | 0; //@line 73380
   }
   $39 = $c + 164 | 0; //@line 73382
   $41 = $c + 162 | 0; //@line 73384
   HEAP16[$41 >> 1] = HEAP16[$39 >> 1] | 0; //@line 73385
   $42 = $34 & 16777215; //@line 73386
   $43 = $42 + 1 | 0; //@line 73387
   if ($43 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
    $49 = HEAP32[$c + 32 >> 2] | 0; //@line 73394
    $_0_i_i = HEAPU8[$49 + $42 | 0] << 8 | HEAPU8[$49 + $43 | 0]; //@line 73404
   } else {
    $_0_i_i = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $42) | 0; //@line 73412
   }
   HEAP16[$39 >> 1] = $_0_i_i; //@line 73415
   if ((HEAP8[$c + 336 | 0] | 0) == 0) {
    HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 2; //@line 73423
    $71 = $c + 152 | 0; //@line 73424
    HEAP32[$71 >> 2] = (HEAP32[$71 >> 2] | 0) + 2; //@line 73427
    $75 = HEAPU16[$41 >> 1] | 0; //@line 73429
    $bd_0 = ($75 & 32768 | 0) != 0 ? $75 | -65536 : $75; //@line 73435
    break;
   }
   _e68_exception_bus($c); //@line 73438
   $_0 = 1; //@line 73440
   return $_0 | 0; //@line 73443
  } else if (($30 | 0) == 0) {
   _e68_exception_illegal($c); //@line 73445
   $_0 = 1; //@line 73447
   return $_0 | 0; //@line 73450
  } else {
   $bd_0 = 0; //@line 73452
  }
 } while (0);
 if (($ext & 7 | 0) == 0) {
  $164 = $c + 344 | 0; //@line 73462
  HEAP32[$164 >> 2] = $bd_0 + ($ix_1 << $9) + (HEAP32[$164 >> 2] | 0); //@line 73465
  $_0 = 0; //@line 73467
  return $_0 | 0; //@line 73470
 }
 $168 = $ext & 3; //@line 73472
 do {
  if (($168 | 0) == 0) {
   _e68_exception_illegal($c); //@line 73475
   $_0 = 1; //@line 73477
   return $_0 | 0; //@line 73480
  } else if (($168 | 0) == 2) {
   $171 = $c + 156 | 0; //@line 73482
   $172 = HEAP32[$171 >> 2] | 0; //@line 73483
   if (($172 & 1 | 0) != 0) {
    _e68_exception_address($c, $172, 0, 0); //@line 73488
    $_0 = 1; //@line 73490
    return $_0 | 0; //@line 73493
   }
   $177 = $c + 164 | 0; //@line 73495
   $179 = $c + 162 | 0; //@line 73497
   HEAP16[$179 >> 1] = HEAP16[$177 >> 1] | 0; //@line 73498
   $180 = $172 & 16777215; //@line 73499
   $181 = $180 + 1 | 0; //@line 73500
   if ($181 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
    $187 = HEAP32[$c + 32 >> 2] | 0; //@line 73507
    $_0_i_i10 = HEAPU8[$187 + $180 | 0] << 8 | HEAPU8[$187 + $181 | 0]; //@line 73517
   } else {
    $_0_i_i10 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $180) | 0; //@line 73525
   }
   HEAP16[$177 >> 1] = $_0_i_i10; //@line 73528
   if ((HEAP8[$c + 336 | 0] | 0) == 0) {
    HEAP32[$171 >> 2] = (HEAP32[$171 >> 2] | 0) + 2; //@line 73536
    $209 = $c + 152 | 0; //@line 73537
    HEAP32[$209 >> 2] = (HEAP32[$209 >> 2] | 0) + 2; //@line 73540
    $213 = HEAPU16[$179 >> 1] | 0; //@line 73542
    $od_0 = ($213 & 32768 | 0) != 0 ? $213 | -65536 : $213; //@line 73548
    break;
   }
   _e68_exception_bus($c); //@line 73551
   $_0 = 1; //@line 73553
   return $_0 | 0; //@line 73556
  } else if (($168 | 0) == 3) {
   $219 = $c + 156 | 0; //@line 73558
   $220 = HEAP32[$219 >> 2] | 0; //@line 73559
   if (($220 & 1 | 0) != 0) {
    _e68_exception_address($c, $220, 0, 0); //@line 73564
    $_0 = 1; //@line 73566
    return $_0 | 0; //@line 73569
   }
   $225 = $c + 164 | 0; //@line 73571
   $227 = $c + 162 | 0; //@line 73573
   HEAP16[$227 >> 1] = HEAP16[$225 >> 1] | 0; //@line 73574
   $228 = $220 & 16777215; //@line 73575
   $229 = $228 + 1 | 0; //@line 73576
   $230 = $c + 36 | 0; //@line 73577
   if ($229 >>> 0 < (HEAP32[$230 >> 2] | 0) >>> 0) {
    $235 = HEAP32[$c + 32 >> 2] | 0; //@line 73583
    $250 = HEAPU8[$235 + $228 | 0] << 8 | HEAPU8[$235 + $229 | 0]; //@line 73593
   } else {
    $250 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $228) | 0; //@line 73601
   }
   HEAP16[$225 >> 1] = $250; //@line 73604
   $251 = $c + 336 | 0; //@line 73605
   if ((HEAP8[$251] | 0) != 0) {
    _e68_exception_bus($c); //@line 73610
    $_0 = 1; //@line 73612
    return $_0 | 0; //@line 73615
   }
   $257 = (HEAP32[$219 >> 2] | 0) + 2 | 0; //@line 73618
   HEAP32[$219 >> 2] = $257; //@line 73619
   $258 = $c + 152 | 0; //@line 73620
   HEAP32[$258 >> 2] = (HEAP32[$258 >> 2] | 0) + 2; //@line 73623
   $261 = HEAP16[$227 >> 1] | 0; //@line 73624
   if (($257 & 1 | 0) != 0) {
    _e68_exception_address($c, $257, 0, 0); //@line 73629
    $_0 = 1; //@line 73631
    return $_0 | 0; //@line 73634
   }
   HEAP16[$227 >> 1] = $250; //@line 73636
   $266 = $257 & 16777215; //@line 73637
   $267 = $266 + 1 | 0; //@line 73638
   do {
    if ($267 >>> 0 < (HEAP32[$230 >> 2] | 0) >>> 0) {
     $271 = HEAP32[$c + 32 >> 2] | 0; //@line 73645
     HEAP16[$225 >> 1] = HEAPU8[$271 + $266 | 0] << 8 | HEAPU8[$271 + $267 | 0]; //@line 73654
    } else {
     $284 = FUNCTION_TABLE_iii[HEAP32[$c + 12 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $266) | 0; //@line 73661
     $phitmp = (HEAP8[$251] | 0) == 0; //@line 73663
     HEAP16[$225 >> 1] = $284; //@line 73664
     if ($phitmp) {
      break;
     }
     _e68_exception_bus($c); //@line 73669
     $_0 = 1; //@line 73671
     return $_0 | 0; //@line 73674
    }
   } while (0);
   HEAP32[$219 >> 2] = (HEAP32[$219 >> 2] | 0) + 2; //@line 73679
   HEAP32[$258 >> 2] = (HEAP32[$258 >> 2] | 0) + 2; //@line 73682
   $od_0 = HEAPU16[$227 >> 1] | ($261 & 65535) << 16; //@line 73689
  } else {
   $od_0 = 0; //@line 73691
  }
 } while (0);
 if (($ext & 4 | 0) == 0) {
  $343 = $c + 344 | 0; //@line 73699
  $348 = $bd_0 + ($ix_1 << $9) + (HEAP32[$343 >> 2] | 0) & 16777215; //@line 73704
  $349 = $348 + 3 | 0; //@line 73705
  if ($349 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
   $355 = HEAP32[$c + 32 >> 2] | 0; //@line 73712
   $_0_i = ((HEAPU8[$355 + $348 | 0] << 8 | HEAPU8[$355 + ($348 + 1) | 0]) << 8 | HEAPU8[$355 + ($348 + 2) | 0]) << 8 | HEAPU8[$355 + $349 | 0]; //@line 73734
  } else {
   $_0_i = FUNCTION_TABLE_iii[HEAP32[$c + 16 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $348) | 0; //@line 73742
  }
  HEAP32[$343 >> 2] = $_0_i + $od_0; //@line 73746
  $_0 = 0; //@line 73747
  return $_0 | 0; //@line 73750
 }
 if ($4) {
  _e68_exception_illegal($c); //@line 73754
  $_0 = 1; //@line 73756
  return $_0 | 0; //@line 73759
 }
 $302 = $c + 344 | 0; //@line 73761
 $305 = (HEAP32[$302 >> 2] | 0) + $bd_0 & 16777215; //@line 73764
 $306 = $305 + 3 | 0; //@line 73765
 if ($306 >>> 0 < (HEAP32[$c + 36 >> 2] | 0) >>> 0) {
  $312 = HEAP32[$c + 32 >> 2] | 0; //@line 73772
  $_0_i22 = ((HEAPU8[$312 + $305 | 0] << 8 | HEAPU8[$312 + ($305 + 1) | 0]) << 8 | HEAPU8[$312 + ($305 + 2) | 0]) << 8 | HEAPU8[$312 + $306 | 0]; //@line 73794
 } else {
  $_0_i22 = FUNCTION_TABLE_iii[HEAP32[$c + 16 >> 2] & 63](HEAP32[$c + 4 >> 2] | 0, $305) | 0; //@line 73802
 }
 HEAP32[$302 >> 2] = $od_0 + ($ix_1 << $9) + $_0_i22; //@line 73808
 $_0 = 0; //@line 73810
 return $_0 | 0; //@line 73813
}
function _e6522_init($via, $addr_shift) {
 $via = $via | 0;
 $addr_shift = $addr_shift | 0;
 HEAP32[$via >> 2] = $addr_shift; //@line 73825
 HEAP32[$via + 48 >> 2] = 0; //@line 73828
 HEAP32[$via + 52 >> 2] = 0; //@line 73830
 HEAP8[$via + 56 | 0] = 0; //@line 73832
 HEAP32[$via + 60 >> 2] = 0; //@line 73834
 HEAP32[$via + 64 >> 2] = 0; //@line 73836
 HEAP8[$via + 68 | 0] = 0; //@line 73838
 _memset($via + 4 | 0, 0, 41); //@line 73840
 _memset($via + 72 | 0, 0, 17); //@line 73842
 return;
}
function _e6522_shift_out($via) {
 $via = $via | 0;
 var $6 = 0, $8 = 0, $9 = 0, $10 = 0, $14 = 0, $17 = 0, $20 = 0, $21 = 0, $23 = 0, $__i = 0, $_0_lobit_i = 0, $29 = 0, $34 = 0, $_0 = 0;
 if ((HEAP8[$via + 12 | 0] & 28) != 28) {
  $_0 = 0; //@line 73863
  return $_0 | 0; //@line 73866
 }
 $6 = $via + 10 | 0; //@line 73868
 $8 = HEAPU8[$6] | 0; //@line 73870
 $9 = $8 >>> 7; //@line 73871
 $10 = $9 & 255; //@line 73872
 HEAP8[$6] = ($8 << 1 | $9) & 255; //@line 73876
 $14 = $via + 11 | 0; //@line 73877
 $17 = (HEAP8[$14] | 0) + 1 & 7; //@line 73880
 HEAP8[$14] = $17; //@line 73881
 if ($17 << 24 >> 24 != 0) {
  $_0 = $10; //@line 73885
  return $_0 | 0; //@line 73888
 }
 $20 = $via + 14 | 0; //@line 73890
 $21 = HEAP8[$20] | 0; //@line 73891
 $23 = $21 & 123 | 4; //@line 73893
 $__i = ($23 & HEAP8[$via + 15 | 0]) << 24 >> 24 == 0 ? $23 : $21 | -124; //@line 73899
 HEAP8[$20] = $__i; //@line 73900
 $_0_lobit_i = ($__i & 255) >>> 7; //@line 73901
 $29 = $via + 88 | 0; //@line 73902
 if ((HEAP8[$29] | 0) == $_0_lobit_i << 24 >> 24) {
  $_0 = $10; //@line 73907
  return $_0 | 0; //@line 73910
 }
 HEAP8[$29] = $_0_lobit_i; //@line 73912
 $34 = HEAP32[$via + 84 >> 2] | 0; //@line 73914
 if (($34 | 0) == 0) {
  $_0 = $10; //@line 73918
  return $_0 | 0; //@line 73921
 }
 FUNCTION_TABLE_vii[$34 & 511](HEAP32[$via + 80 >> 2] | 0, $_0_lobit_i); //@line 73925
 $_0 = $10; //@line 73927
 return $_0 | 0; //@line 73930
}
function _e6522_shift_in($via, $val) {
 $via = $via | 0;
 $val = $val | 0;
 var $6 = 0, $12 = 0, $15 = 0, $17 = 0, $19 = 0, $21 = 0, $22 = 0, $__i = 0, $_0_lobit_i = 0, $27 = 0, $32 = 0, $_pre_phi17 = 0, $_pre_phi15 = 0, $37 = 0, $39 = 0, $__i11 = 0, $_0_lobit_i12 = 0, $48 = 0;
 if ((HEAP8[$via + 12 | 0] & 28) != 12) {
  return;
 }
 $6 = $via + 10 | 0; //@line 73955
 HEAP8[$6] = HEAP8[$6] << 1 | $val << 24 >> 24 != 0; //@line 73961
 $12 = $via + 11 | 0; //@line 73962
 $15 = (HEAP8[$12] | 0) + 1 & 7; //@line 73965
 HEAP8[$12] = $15; //@line 73966
 $17 = $via + 14 | 0; //@line 73968
 do {
  if ($15 << 24 >> 24 == 0) {
   $19 = HEAP8[$17] | 0; //@line 73972
   $21 = $19 & 123 | 4; //@line 73974
   $22 = $via + 15 | 0; //@line 73975
   $__i = ($21 & HEAP8[$22]) << 24 >> 24 == 0 ? $21 : $19 | -124; //@line 73980
   HEAP8[$17] = $__i; //@line 73981
   $_0_lobit_i = ($__i & 255) >>> 7; //@line 73982
   $27 = $via + 88 | 0; //@line 73983
   if ((HEAP8[$27] | 0) == $_0_lobit_i << 24 >> 24) {
    $_pre_phi15 = $22;
    $_pre_phi17 = $27;
    break;
   }
   HEAP8[$27] = $_0_lobit_i; //@line 73991
   $32 = HEAP32[$via + 84 >> 2] | 0; //@line 73993
   if (($32 | 0) == 0) {
    $_pre_phi15 = $22;
    $_pre_phi17 = $27;
    break;
   }
   FUNCTION_TABLE_vii[$32 & 511](HEAP32[$via + 80 >> 2] | 0, $_0_lobit_i); //@line 74002
   $_pre_phi15 = $22;
   $_pre_phi17 = $27;
  } else {
   $_pre_phi15 = $via + 15 | 0;
   $_pre_phi17 = $via + 88 | 0;
  }
 } while (0);
 $37 = HEAP8[$17] | 0; //@line 74014
 $39 = $37 & 111 | 16; //@line 74016
 $__i11 = ($39 & HEAP8[$_pre_phi15]) << 24 >> 24 == 0 ? $39 : $37 | -112; //@line 74021
 HEAP8[$17] = $__i11; //@line 74022
 $_0_lobit_i12 = ($__i11 & 255) >>> 7; //@line 74023
 if ((HEAP8[$_pre_phi17] | 0) == $_0_lobit_i12 << 24 >> 24) {
  return;
 }
 HEAP8[$_pre_phi17] = $_0_lobit_i12; //@line 74031
 $48 = HEAP32[$via + 84 >> 2] | 0; //@line 74033
 if (($48 | 0) == 0) {
  return;
 }
 FUNCTION_TABLE_vii[$48 & 511](HEAP32[$via + 80 >> 2] | 0, $_0_lobit_i12); //@line 74042
 return;
}
function _e6522_set_ca1_inp($via, $val) {
 $via = $via | 0;
 $val = $val | 0;
 var $1 = 0, $3 = 0, $4 = 0, $15 = 0, $16 = 0, $18 = 0, $__i = 0, $_0_lobit_i = 0, $24 = 0, $29 = 0;
 $1 = $via + 32 | 0; //@line 74058
 $3 = (HEAP8[$1] | 0) != 0; //@line 74060
 $4 = $val << 24 >> 24 != 0; //@line 74061
 HEAP8[$1] = $4 & 1; //@line 74063
 if (!($3 ^ $4)) {
  return;
 }
 if (($4 & 1 | 0) != (HEAP8[$via + 13 | 0] & 1 | 0)) {
  return;
 }
 $15 = $via + 14 | 0; //@line 74081
 $16 = HEAP8[$15] | 0; //@line 74082
 $18 = $16 & 125 | 2; //@line 74084
 $__i = ($18 & HEAP8[$via + 15 | 0]) << 24 >> 24 == 0 ? $18 : $16 | -126; //@line 74090
 HEAP8[$15] = $__i; //@line 74091
 $_0_lobit_i = ($__i & 255) >>> 7; //@line 74092
 $24 = $via + 88 | 0; //@line 74093
 if ((HEAP8[$24] | 0) == $_0_lobit_i << 24 >> 24) {
  return;
 }
 HEAP8[$24] = $_0_lobit_i; //@line 74101
 $29 = HEAP32[$via + 84 >> 2] | 0; //@line 74103
 if (($29 | 0) == 0) {
  return;
 }
 FUNCTION_TABLE_vii[$29 & 511](HEAP32[$via + 80 >> 2] | 0, $_0_lobit_i); //@line 74112
 return;
}
function _e6522_set_ca2_inp($via, $val) {
 $via = $via | 0;
 $val = $val | 0;
 var $1 = 0, $2 = 0, $3 = 0, $7 = 0, $17 = 0, $18 = 0, $20 = 0, $__i = 0, $_0_lobit_i = 0, $26 = 0, $31 = 0;
 $1 = $via + 33 | 0; //@line 74129
 $2 = HEAP8[$1] | 0; //@line 74130
 $3 = $val << 24 >> 24 != 0; //@line 74131
 HEAP8[$1] = $3 & 1; //@line 74133
 $7 = HEAPU8[$via + 13 | 0] | 0; //@line 74136
 if (($7 & 8 | 0) != 0) {
  return;
 }
 if (!($2 << 24 >> 24 != 0 ^ $3)) {
  return;
 }
 if ($3 ^ ($7 & 4 | 0) != 0) {
  return;
 }
 $17 = $via + 14 | 0; //@line 74159
 $18 = HEAP8[$17] | 0; //@line 74160
 $20 = $18 & 126 | 1; //@line 74162
 $__i = ($20 & HEAP8[$via + 15 | 0]) << 24 >> 24 == 0 ? $20 : $18 | -127; //@line 74168
 HEAP8[$17] = $__i; //@line 74169
 $_0_lobit_i = ($__i & 255) >>> 7; //@line 74170
 $26 = $via + 88 | 0; //@line 74171
 if ((HEAP8[$26] | 0) == $_0_lobit_i << 24 >> 24) {
  return;
 }
 HEAP8[$26] = $_0_lobit_i; //@line 74179
 $31 = HEAP32[$via + 84 >> 2] | 0; //@line 74181
 if (($31 | 0) == 0) {
  return;
 }
 FUNCTION_TABLE_vii[$31 & 511](HEAP32[$via + 80 >> 2] | 0, $_0_lobit_i); //@line 74190
 return;
}
function _e6522_set_ira_inp($via, $val) {
 $via = $via | 0;
 $val = $val | 0;
 var $3 = 0, $5 = 0;
 HEAP8[$via + 6 | 0] = $val; //@line 74205
 $3 = HEAP8[$via + 8 | 0] | 0; //@line 74207
 $5 = HEAP32[$via + 40 >> 2] | 0; //@line 74209
 if (($5 | 0) == 0) {
  return;
 }
 FUNCTION_TABLE_vii[$5 & 511](HEAP32[$via + 36 >> 2] | 0, HEAP8[$via + 4 | 0] & $3 | ~$3 & $val); //@line 74224
 return;
}
function _e6522_set_irb_inp($via, $val) {
 $via = $via | 0;
 $val = $val | 0;
 var $3 = 0, $5 = 0;
 HEAP8[$via + 7 | 0] = $val; //@line 74239
 $3 = HEAP8[$via + 9 | 0] | 0; //@line 74241
 $5 = HEAP32[$via + 52 >> 2] | 0; //@line 74243
 if (($5 | 0) == 0) {
  return;
 }
 FUNCTION_TABLE_vii[$5 & 511](HEAP32[$via + 48 >> 2] | 0, HEAP8[$via + 5 | 0] & $3 | ~$3 & $val); //@line 74258
 return;
}
function _e6522_set_shift_inp($via, $val) {
 $via = $via | 0;
 $val = $val | 0;
 var $8 = 0, $9 = 0, $11 = 0, $__i = 0, $_0_lobit_i = 0, $17 = 0, $22 = 0;
 if ((HEAP8[$via + 12 | 0] & 28) != 12) {
  return;
 }
 HEAP8[$via + 10 | 0] = $val; //@line 74284
 HEAP8[$via + 11 | 0] = 0; //@line 74286
 $8 = $via + 14 | 0; //@line 74287
 $9 = HEAP8[$8] | 0; //@line 74288
 $11 = $9 & 123 | 4; //@line 74290
 $__i = ($11 & HEAP8[$via + 15 | 0]) << 24 >> 24 == 0 ? $11 : $9 | -124; //@line 74296
 HEAP8[$8] = $__i; //@line 74297
 $_0_lobit_i = ($__i & 255) >>> 7; //@line 74298
 $17 = $via + 88 | 0; //@line 74299
 if ((HEAP8[$17] | 0) == $_0_lobit_i << 24 >> 24) {
  return;
 }
 HEAP8[$17] = $_0_lobit_i; //@line 74307
 $22 = HEAP32[$via + 84 >> 2] | 0; //@line 74309
 if (($22 | 0) == 0) {
  return;
 }
 FUNCTION_TABLE_vii[$22 & 511](HEAP32[$via + 80 >> 2] | 0, $_0_lobit_i); //@line 74318
 return;
}
function _e6522_get_uint8($via, $addr) {
 $via = $via | 0;
 $addr = $addr | 0;
 var $1 = 0, $3 = 0, $5 = 0, $__i_i25 = 0, $_0_lobit_i_i26 = 0, $11 = 0, $16 = 0, $24 = 0, $32 = 0, $34 = 0, $__i_i27 = 0, $_0_lobit_i_i28 = 0, $40 = 0, $45 = 0, $53 = 0, $67 = 0, $69 = 0, $__i_i29 = 0, $_0_lobit_i_i30 = 0, $75 = 0, $80 = 0, $97 = 0, $99 = 0, $__i_i31 = 0, $_0_lobit_i_i32 = 0, $105 = 0, $110 = 0, $122 = 0, $124 = 0, $__i_i = 0, $_0_lobit_i_i = 0, $130 = 0, $135 = 0, $156 = 0, $val_0 = 0;
 $1 = $addr >>> ((HEAP32[$via >> 2] | 0) >>> 0); //@line 74353
 if (($1 | 0) == 10) {
  $122 = $via + 14 | 0; //@line 74355
  $124 = HEAP8[$122] & 123; //@line 74357
  $__i_i = (HEAP8[$via + 15 | 0] & $124) << 24 >> 24 == 0 ? $124 : $124 | -128; //@line 74363
  HEAP8[$122] = $__i_i; //@line 74364
  $_0_lobit_i_i = ($__i_i & 255) >>> 7; //@line 74365
  $130 = $via + 88 | 0; //@line 74366
  do {
   if ((HEAP8[$130] | 0) != $_0_lobit_i_i << 24 >> 24) {
    HEAP8[$130] = $_0_lobit_i_i; //@line 74372
    $135 = HEAP32[$via + 84 >> 2] | 0; //@line 74374
    if (($135 | 0) == 0) {
     break;
    }
    FUNCTION_TABLE_vii[$135 & 511](HEAP32[$via + 80 >> 2] | 0, $_0_lobit_i_i); //@line 74382
   }
  } while (0);
  HEAP8[$via + 11 | 0] = 0; //@line 74387
  $val_0 = HEAP8[$via + 10 | 0] | 0; //@line 74391
  return $val_0 | 0; //@line 74394
 } else if (($1 | 0) == 15) {
  $156 = HEAP8[$via + 8 | 0] | 0; //@line 74399
  $val_0 = HEAP8[$via + 6 | 0] & ~$156 | $156 & HEAP8[$via + 4 | 0]; //@line 74407
  return $val_0 | 0; //@line 74410
 } else if (($1 | 0) == 8) {
  $97 = $via + 14 | 0; //@line 74412
  $99 = HEAP8[$97] & 95; //@line 74414
  $__i_i31 = (HEAP8[$via + 15 | 0] & $99) << 24 >> 24 == 0 ? $99 : $99 | -128; //@line 74420
  HEAP8[$97] = $__i_i31; //@line 74421
  $_0_lobit_i_i32 = ($__i_i31 & 255) >>> 7; //@line 74422
  $105 = $via + 88 | 0; //@line 74423
  do {
   if ((HEAP8[$105] | 0) != $_0_lobit_i_i32 << 24 >> 24) {
    HEAP8[$105] = $_0_lobit_i_i32; //@line 74429
    $110 = HEAP32[$via + 84 >> 2] | 0; //@line 74431
    if (($110 | 0) == 0) {
     break;
    }
    FUNCTION_TABLE_vii[$110 & 511](HEAP32[$via + 80 >> 2] | 0, $_0_lobit_i_i32); //@line 74439
   }
  } while (0);
  $val_0 = HEAP16[$via + 26 >> 1] & 255; //@line 74447
  return $val_0 | 0; //@line 74450
 } else if (($1 | 0) == 3) {
  $val_0 = HEAP8[$via + 8 | 0] | 0; //@line 74455
  return $val_0 | 0; //@line 74458
 } else if (($1 | 0) == 4) {
  $67 = $via + 14 | 0; //@line 74460
  $69 = HEAP8[$67] & 63; //@line 74462
  $__i_i29 = (HEAP8[$via + 15 | 0] & $69) << 24 >> 24 == 0 ? $69 : $69 | -128; //@line 74468
  HEAP8[$67] = $__i_i29; //@line 74469
  $_0_lobit_i_i30 = ($__i_i29 & 255) >>> 7; //@line 74470
  $75 = $via + 88 | 0; //@line 74471
  do {
   if ((HEAP8[$75] | 0) != $_0_lobit_i_i30 << 24 >> 24) {
    HEAP8[$75] = $_0_lobit_i_i30; //@line 74477
    $80 = HEAP32[$via + 84 >> 2] | 0; //@line 74479
    if (($80 | 0) == 0) {
     break;
    }
    FUNCTION_TABLE_vii[$80 & 511](HEAP32[$via + 80 >> 2] | 0, $_0_lobit_i_i30); //@line 74487
   }
  } while (0);
  $val_0 = HEAP16[$via + 18 >> 1] & 255; //@line 74495
  return $val_0 | 0; //@line 74498
 } else if (($1 | 0) == 0) {
  $3 = $via + 14 | 0; //@line 74500
  $5 = HEAP8[$3] & 103; //@line 74502
  $__i_i25 = (HEAP8[$via + 15 | 0] & $5) << 24 >> 24 == 0 ? $5 : $5 | -128; //@line 74508
  HEAP8[$3] = $__i_i25; //@line 74509
  $_0_lobit_i_i26 = ($__i_i25 & 255) >>> 7; //@line 74510
  $11 = $via + 88 | 0; //@line 74511
  do {
   if ((HEAP8[$11] | 0) != $_0_lobit_i_i26 << 24 >> 24) {
    HEAP8[$11] = $_0_lobit_i_i26; //@line 74517
    $16 = HEAP32[$via + 84 >> 2] | 0; //@line 74519
    if (($16 | 0) == 0) {
     break;
    }
    FUNCTION_TABLE_vii[$16 & 511](HEAP32[$via + 80 >> 2] | 0, $_0_lobit_i_i26); //@line 74527
   }
  } while (0);
  $24 = HEAP8[$via + 9 | 0] | 0; //@line 74534
  $val_0 = HEAP8[$via + 7 | 0] & ~$24 | $24 & HEAP8[$via + 5 | 0]; //@line 74542
  return $val_0 | 0; //@line 74545
 } else if (($1 | 0) == 7) {
  $val_0 = (HEAPU16[$via + 16 >> 1] | 0) >>> 8 & 255; //@line 74552
  return $val_0 | 0; //@line 74555
 } else if (($1 | 0) == 13) {
  $val_0 = HEAP8[$via + 14 | 0] | 0; //@line 74560
  return $val_0 | 0; //@line 74563
 } else if (($1 | 0) == 11) {
  $val_0 = HEAP8[$via + 12 | 0] | 0; //@line 74568
  return $val_0 | 0; //@line 74571
 } else if (($1 | 0) == 12) {
  $val_0 = HEAP8[$via + 13 | 0] | 0; //@line 74576
  return $val_0 | 0; //@line 74579
 } else if (($1 | 0) == 14) {
  $val_0 = HEAP8[$via + 15 | 0] | -128; //@line 74585
  return $val_0 | 0; //@line 74588
 } else if (($1 | 0) == 2) {
  $val_0 = HEAP8[$via + 9 | 0] | 0; //@line 74593
  return $val_0 | 0; //@line 74596
 } else if (($1 | 0) == 9) {
  $val_0 = (HEAPU16[$via + 26 >> 1] | 0) >>> 8 & 255; //@line 74603
  return $val_0 | 0; //@line 74606
 } else if (($1 | 0) == 5) {
  $val_0 = (HEAPU16[$via + 18 >> 1] | 0) >>> 8 & 255; //@line 74613
  return $val_0 | 0; //@line 74616
 } else if (($1 | 0) == 6) {
  $val_0 = HEAP16[$via + 16 >> 1] & 255; //@line 74622
  return $val_0 | 0; //@line 74625
 } else if (($1 | 0) == 1) {
  $32 = $via + 14 | 0; //@line 74627
  $34 = HEAP8[$32] & 124; //@line 74629
  $__i_i27 = (HEAP8[$via + 15 | 0] & $34) << 24 >> 24 == 0 ? $34 : $34 | -128; //@line 74635
  HEAP8[$32] = $__i_i27; //@line 74636
  $_0_lobit_i_i28 = ($__i_i27 & 255) >>> 7; //@line 74637
  $40 = $via + 88 | 0; //@line 74638
  do {
   if ((HEAP8[$40] | 0) != $_0_lobit_i_i28 << 24 >> 24) {
    HEAP8[$40] = $_0_lobit_i_i28; //@line 74644
    $45 = HEAP32[$via + 84 >> 2] | 0; //@line 74646
    if (($45 | 0) == 0) {
     break;
    }
    FUNCTION_TABLE_vii[$45 & 511](HEAP32[$via + 80 >> 2] | 0, $_0_lobit_i_i28); //@line 74654
   }
  } while (0);
  $53 = HEAP8[$via + 8 | 0] | 0; //@line 74661
  $val_0 = HEAP8[$via + 6 | 0] & ~$53 | $53 & HEAP8[$via + 4 | 0]; //@line 74669
  return $val_0 | 0; //@line 74672
 } else {
  $val_0 = -86; //@line 74674
  return $val_0 | 0; //@line 74677
 }
 return 0;
}
function _e6522_get_uint16($via, $addr) {
 $via = $via | 0;
 $addr = $addr | 0;
 return (_e6522_get_uint8($via, $addr) | 0) & 255 | 0; //@line 74691
}
function _e6522_get_uint32($via, $addr) {
 $via = $via | 0;
 $addr = $addr | 0;
 return (_e6522_get_uint8($via, $addr) | 0) & 255 | 0; //@line 74704
}
function _e6522_set_uint8($via, $addr, $val) {
 $via = $via | 0;
 $addr = $addr | 0;
 $val = $val | 0;
 var $1 = 0, $5 = 0, $7 = 0, $18 = 0, $20 = 0, $__i_i36 = 0, $_0_lobit_i_i37 = 0, $26 = 0, $31 = 0, $39 = 0, $41 = 0, $52 = 0, $54 = 0, $__i_i38 = 0, $_0_lobit_i_i39 = 0, $60 = 0, $65 = 0, $73 = 0, $89 = 0, $103 = 0, $109 = 0, $114 = 0, $123 = 0, $125 = 0, $__i_i44 = 0, $_0_lobit_i_i45 = 0, $131 = 0, $136 = 0, $142 = 0, $148 = 0, $155 = 0, $161 = 0, $166 = 0, $175 = 0, $177 = 0, $__i_i48 = 0, $_0_lobit_i_i49 = 0, $183 = 0, $188 = 0, $194 = 0, $196 = 0, $197 = 0, $__i_i50 = 0, $_0_lobit_i_i51 = 0, $202 = 0, $207 = 0, $220 = 0, $224 = 0, $226 = 0, $__i11_i = 0, $_0_lobit_i12_i = 0, $235 = 0, $247 = 0, $val_0_i_i = 0, $262 = 0, $267 = 0, $276 = 0, $val_0_i_i55 = 0, $289 = 0, $294 = 0, $300 = 0, $303 = 0, $304 = 0, $__i = 0, $_0_lobit_i = 0, $310 = 0, $315 = 0, $322 = 0, $324 = 0, $326 = 0, $329 = 0, $331 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $__i_i46 = 0, $_0_lobit_i_i47 = 0, $340 = 0, $345 = 0, $353 = 0, $355 = 0, $366 = 0, $368 = 0, $__i_i = 0, $_0_lobit_i_i = 0, $374 = 0, $379 = 0;
 $1 = $addr >>> ((HEAP32[$via >> 2] | 0) >>> 0); //@line 74760
 if (($1 | 0) == 12) {
  HEAP8[$via + 13 | 0] = $val; //@line 74763
  $276 = HEAPU8[$via + 12 | 0] | 0; //@line 74766
  do {
   if (($276 & 28 | 0) == 0) {
    $val_0_i_i55 = ($val & -32) << 24 >> 24 != -64 | 0; //@line 74776
   } else {
    if (($276 & 16 | 0) == 0) {
     $val_0_i_i55 = 1; //@line 74782
     break;
    }
    $val_0_i_i55 = HEAP8[$via + 10 | 0] & 1; //@line 74789
   }
  } while (0);
  $289 = $via + 68 | 0; //@line 74793
  if ($val_0_i_i55 << 24 >> 24 == (HEAP8[$289] | 0)) {
   return;
  }
  HEAP8[$289] = $val_0_i_i55; //@line 74801
  $294 = HEAP32[$via + 64 >> 2] | 0; //@line 74803
  if (($294 | 0) == 0) {
   return;
  }
  FUNCTION_TABLE_vii[$294 & 511](HEAP32[$via + 60 >> 2] | 0, $val_0_i_i55); //@line 74812
  return;
 } else if (($1 | 0) == 4) {
  $103 = $via + 16 | 0; //@line 74817
  HEAP16[$103 >> 1] = HEAP16[$103 >> 1] & -256 | $val & 255; //@line 74822
  return;
 } else if (($1 | 0) == 5) {
  $109 = $via + 16 | 0; //@line 74827
  $114 = HEAP16[$109 >> 1] & 255 | ($val & 255) << 8; //@line 74832
  HEAP16[$109 >> 1] = $114; //@line 74833
  HEAP16[$via + 18 >> 1] = $114; //@line 74835
  if ((HEAP8[$via + 12 | 0] & 64) == 0) {
   HEAP32[$via + 20 >> 2] = 1; //@line 74843
  }
  $123 = $via + 14 | 0; //@line 74846
  $125 = HEAP8[$123] & 63; //@line 74848
  $__i_i44 = (HEAP8[$via + 15 | 0] & $125) << 24 >> 24 == 0 ? $125 : $125 | -128; //@line 74854
  HEAP8[$123] = $__i_i44; //@line 74855
  $_0_lobit_i_i45 = ($__i_i44 & 255) >>> 7; //@line 74856
  $131 = $via + 88 | 0; //@line 74857
  if ((HEAP8[$131] | 0) == $_0_lobit_i_i45 << 24 >> 24) {
   return;
  }
  HEAP8[$131] = $_0_lobit_i_i45; //@line 74865
  $136 = HEAP32[$via + 84 >> 2] | 0; //@line 74867
  if (($136 | 0) == 0) {
   return;
  }
  FUNCTION_TABLE_vii[$136 & 511](HEAP32[$via + 80 >> 2] | 0, $_0_lobit_i_i45); //@line 74876
  return;
 } else if (($1 | 0) == 6) {
  $142 = $via + 16 | 0; //@line 74881
  HEAP16[$142 >> 1] = HEAP16[$142 >> 1] & -256 | $val & 255; //@line 74886
  return;
 } else if (($1 | 0) == 11) {
  HEAP8[$via + 12 | 0] = $val; //@line 74892
  if (($val & 28) == 0) {
   HEAP8[$via + 11 | 0] = 0; //@line 74898
  }
  $247 = $val & 255; //@line 74901
  do {
   if (($247 & 28 | 0) == 0) {
    $val_0_i_i = (HEAP8[$via + 13 | 0] & -32) << 24 >> 24 != -64 | 0; //@line 74913
   } else {
    if (($247 & 16 | 0) == 0) {
     $val_0_i_i = 1; //@line 74919
     break;
    }
    $val_0_i_i = HEAP8[$via + 10 | 0] & 1; //@line 74926
   }
  } while (0);
  $262 = $via + 68 | 0; //@line 74930
  if ($val_0_i_i << 24 >> 24 == (HEAP8[$262] | 0)) {
   return;
  }
  HEAP8[$262] = $val_0_i_i; //@line 74938
  $267 = HEAP32[$via + 64 >> 2] | 0; //@line 74940
  if (($267 | 0) == 0) {
   return;
  }
  FUNCTION_TABLE_vii[$267 & 511](HEAP32[$via + 60 >> 2] | 0, $val_0_i_i); //@line 74949
  return;
 } else if (($1 | 0) == 0) {
  HEAP8[$via + 5 | 0] = $val; //@line 74955
  $5 = HEAP8[$via + 9 | 0] | 0; //@line 74957
  $7 = HEAP32[$via + 52 >> 2] | 0; //@line 74959
  if (($7 | 0) != 0) {
   FUNCTION_TABLE_vii[$7 & 511](HEAP32[$via + 48 >> 2] | 0, HEAP8[$via + 7 | 0] & ~$5 | $5 & $val); //@line 74971
  }
  $18 = $via + 14 | 0; //@line 74974
  $20 = HEAP8[$18] & 103; //@line 74976
  $__i_i36 = (HEAP8[$via + 15 | 0] & $20) << 24 >> 24 == 0 ? $20 : $20 | -128; //@line 74982
  HEAP8[$18] = $__i_i36; //@line 74983
  $_0_lobit_i_i37 = ($__i_i36 & 255) >>> 7; //@line 74984
  $26 = $via + 88 | 0; //@line 74985
  if ((HEAP8[$26] | 0) == $_0_lobit_i_i37 << 24 >> 24) {
   return;
  }
  HEAP8[$26] = $_0_lobit_i_i37; //@line 74993
  $31 = HEAP32[$via + 84 >> 2] | 0; //@line 74995
  if (($31 | 0) == 0) {
   return;
  }
  FUNCTION_TABLE_vii[$31 & 511](HEAP32[$via + 80 >> 2] | 0, $_0_lobit_i_i37); //@line 75004
  return;
 } else if (($1 | 0) == 10) {
  $194 = $via + 14 | 0; //@line 75009
  $196 = HEAP8[$194] & 123; //@line 75011
  $197 = $via + 15 | 0; //@line 75012
  $__i_i50 = (HEAP8[$197] & $196) << 24 >> 24 == 0 ? $196 : $196 | -128; //@line 75017
  HEAP8[$194] = $__i_i50; //@line 75018
  $_0_lobit_i_i51 = ($__i_i50 & 255) >>> 7; //@line 75019
  $202 = $via + 88 | 0; //@line 75020
  do {
   if ((HEAP8[$202] | 0) != $_0_lobit_i_i51 << 24 >> 24) {
    HEAP8[$202] = $_0_lobit_i_i51; //@line 75026
    $207 = HEAP32[$via + 84 >> 2] | 0; //@line 75028
    if (($207 | 0) == 0) {
     break;
    }
    FUNCTION_TABLE_vii[$207 & 511](HEAP32[$via + 80 >> 2] | 0, $_0_lobit_i_i51); //@line 75036
   }
  } while (0);
  HEAP8[$via + 10 | 0] = $val; //@line 75041
  HEAP8[$via + 11 | 0] = 0; //@line 75043
  if ((HEAP8[$via + 12 | 0] & 28) != 28) {
   return;
  }
  $220 = HEAP32[$via + 76 >> 2] | 0; //@line 75054
  if (($220 | 0) == 0) {
   return;
  }
  FUNCTION_TABLE_vii[$220 & 511](HEAP32[$via + 72 >> 2] | 0, $val); //@line 75063
  $224 = HEAP8[$194] | 0; //@line 75064
  $226 = $224 & 123 | 4; //@line 75066
  $__i11_i = ($226 & HEAP8[$197]) << 24 >> 24 == 0 ? $226 : $224 | -124; //@line 75071
  HEAP8[$194] = $__i11_i; //@line 75072
  $_0_lobit_i12_i = ($__i11_i & 255) >>> 7; //@line 75073
  if ((HEAP8[$202] | 0) == $_0_lobit_i12_i << 24 >> 24) {
   return;
  }
  HEAP8[$202] = $_0_lobit_i12_i; //@line 75081
  $235 = HEAP32[$via + 84 >> 2] | 0; //@line 75083
  if (($235 | 0) == 0) {
   return;
  }
  FUNCTION_TABLE_vii[$235 & 511](HEAP32[$via + 80 >> 2] | 0, $_0_lobit_i12_i); //@line 75092
  return;
 } else if (($1 | 0) == 2) {
  HEAP8[$via + 9 | 0] = $val; //@line 75098
  $73 = HEAP32[$via + 52 >> 2] | 0; //@line 75100
  if (($73 | 0) == 0) {
   return;
  }
  FUNCTION_TABLE_vii[$73 & 511](HEAP32[$via + 48 >> 2] | 0, HEAP8[$via + 7 | 0] & ~$val | HEAP8[$via + 5 | 0] & $val); //@line 75117
  return;
 } else if (($1 | 0) == 8) {
  $155 = $via + 24 | 0; //@line 75122
  HEAP16[$155 >> 1] = HEAP16[$155 >> 1] & -256 | $val & 255; //@line 75127
  return;
 } else if (($1 | 0) == 15) {
  HEAP8[$via + 4 | 0] = $val; //@line 75133
  $353 = HEAP8[$via + 8 | 0] | 0; //@line 75135
  $355 = HEAP32[$via + 40 >> 2] | 0; //@line 75137
  if (($355 | 0) != 0) {
   FUNCTION_TABLE_vii[$355 & 511](HEAP32[$via + 36 >> 2] | 0, HEAP8[$via + 6 | 0] & ~$353 | $353 & $val); //@line 75149
  }
  $366 = $via + 14 | 0; //@line 75152
  $368 = HEAP8[$366] & 124; //@line 75154
  $__i_i = (HEAP8[$via + 15 | 0] & $368) << 24 >> 24 == 0 ? $368 : $368 | -128; //@line 75160
  HEAP8[$366] = $__i_i; //@line 75161
  $_0_lobit_i_i = ($__i_i & 255) >>> 7; //@line 75162
  $374 = $via + 88 | 0; //@line 75163
  if ((HEAP8[$374] | 0) == $_0_lobit_i_i << 24 >> 24) {
   return;
  }
  HEAP8[$374] = $_0_lobit_i_i; //@line 75171
  $379 = HEAP32[$via + 84 >> 2] | 0; //@line 75173
  if (($379 | 0) == 0) {
   return;
  }
  FUNCTION_TABLE_vii[$379 & 511](HEAP32[$via + 80 >> 2] | 0, $_0_lobit_i_i); //@line 75182
  return;
 } else if (($1 | 0) == 9) {
  $161 = $via + 24 | 0; //@line 75187
  $166 = HEAP16[$161 >> 1] & 255 | ($val & 255) << 8; //@line 75192
  HEAP16[$161 >> 1] = $166; //@line 75193
  HEAP16[$via + 26 >> 1] = $166; //@line 75195
  if ((HEAP8[$via + 12 | 0] & 32) == 0) {
   HEAP32[$via + 28 >> 2] = 1; //@line 75203
  }
  $175 = $via + 14 | 0; //@line 75206
  $177 = HEAP8[$175] & 95; //@line 75208
  $__i_i48 = (HEAP8[$via + 15 | 0] & $177) << 24 >> 24 == 0 ? $177 : $177 | -128; //@line 75214
  HEAP8[$175] = $__i_i48; //@line 75215
  $_0_lobit_i_i49 = ($__i_i48 & 255) >>> 7; //@line 75216
  $183 = $via + 88 | 0; //@line 75217
  if ((HEAP8[$183] | 0) == $_0_lobit_i_i49 << 24 >> 24) {
   return;
  }
  HEAP8[$183] = $_0_lobit_i_i49; //@line 75225
  $188 = HEAP32[$via + 84 >> 2] | 0; //@line 75227
  if (($188 | 0) == 0) {
   return;
  }
  FUNCTION_TABLE_vii[$188 & 511](HEAP32[$via + 80 >> 2] | 0, $_0_lobit_i_i49); //@line 75236
  return;
 } else if (($1 | 0) == 1) {
  HEAP8[$via + 4 | 0] = $val; //@line 75242
  $39 = HEAP8[$via + 8 | 0] | 0; //@line 75244
  $41 = HEAP32[$via + 40 >> 2] | 0; //@line 75246
  if (($41 | 0) != 0) {
   FUNCTION_TABLE_vii[$41 & 511](HEAP32[$via + 36 >> 2] | 0, HEAP8[$via + 6 | 0] & ~$39 | $39 & $val); //@line 75258
  }
  $52 = $via + 14 | 0; //@line 75261
  $54 = HEAP8[$52] & 124; //@line 75263
  $__i_i38 = (HEAP8[$via + 15 | 0] & $54) << 24 >> 24 == 0 ? $54 : $54 | -128; //@line 75269
  HEAP8[$52] = $__i_i38; //@line 75270
  $_0_lobit_i_i39 = ($__i_i38 & 255) >>> 7; //@line 75271
  $60 = $via + 88 | 0; //@line 75272
  if ((HEAP8[$60] | 0) == $_0_lobit_i_i39 << 24 >> 24) {
   return;
  }
  HEAP8[$60] = $_0_lobit_i_i39; //@line 75280
  $65 = HEAP32[$via + 84 >> 2] | 0; //@line 75282
  if (($65 | 0) == 0) {
   return;
  }
  FUNCTION_TABLE_vii[$65 & 511](HEAP32[$via + 80 >> 2] | 0, $_0_lobit_i_i39); //@line 75291
  return;
 } else if (($1 | 0) == 3) {
  HEAP8[$via + 8 | 0] = $val; //@line 75297
  $89 = HEAP32[$via + 40 >> 2] | 0; //@line 75299
  if (($89 | 0) == 0) {
   return;
  }
  FUNCTION_TABLE_vii[$89 & 511](HEAP32[$via + 36 >> 2] | 0, HEAP8[$via + 6 | 0] & ~$val | HEAP8[$via + 4 | 0] & $val); //@line 75316
  return;
 } else if (($1 | 0) == 14) {
  $322 = $val & 127; //@line 75322
  if ($val << 24 >> 24 > -1) {
   $329 = $via + 15 | 0; //@line 75326
   $331 = HEAP8[$329] & ($322 ^ 127); //@line 75328
   HEAP8[$329] = $331; //@line 75329
   $333 = $331; //@line 75330
  } else {
   $324 = $via + 15 | 0; //@line 75332
   $326 = HEAP8[$324] | $322; //@line 75334
   HEAP8[$324] = $326; //@line 75335
   $333 = $326; //@line 75337
  }
  $334 = $via + 14 | 0; //@line 75340
  $335 = HEAP8[$334] | 0; //@line 75341
  $336 = $335 & 127; //@line 75342
  $__i_i46 = ($336 & $333) << 24 >> 24 == 0 ? $336 : $335 | -128; //@line 75346
  HEAP8[$334] = $__i_i46; //@line 75347
  $_0_lobit_i_i47 = ($__i_i46 & 255) >>> 7; //@line 75348
  $340 = $via + 88 | 0; //@line 75349
  if ((HEAP8[$340] | 0) == $_0_lobit_i_i47 << 24 >> 24) {
   return;
  }
  HEAP8[$340] = $_0_lobit_i_i47; //@line 75357
  $345 = HEAP32[$via + 84 >> 2] | 0; //@line 75359
  if (($345 | 0) == 0) {
   return;
  }
  FUNCTION_TABLE_vii[$345 & 511](HEAP32[$via + 80 >> 2] | 0, $_0_lobit_i_i47); //@line 75368
  return;
 } else if (($1 | 0) == 7) {
  $148 = $via + 16 | 0; //@line 75373
  HEAP16[$148 >> 1] = HEAP16[$148 >> 1] & 255 | ($val & 255) << 8; //@line 75379
  return;
 } else if (($1 | 0) == 13) {
  $300 = $via + 14 | 0; //@line 75384
  $303 = HEAP8[$300] & ($val ^ 127); //@line 75387
  $304 = $303 & 127; //@line 75388
  $__i = ($304 & HEAP8[$via + 15 | 0]) << 24 >> 24 == 0 ? $304 : $303 | -128; //@line 75394
  HEAP8[$300] = $__i; //@line 75395
  $_0_lobit_i = ($__i & 255) >>> 7; //@line 75396
  $310 = $via + 88 | 0; //@line 75397
  if ((HEAP8[$310] | 0) == $_0_lobit_i << 24 >> 24) {
   return;
  }
  HEAP8[$310] = $_0_lobit_i; //@line 75405
  $315 = HEAP32[$via + 84 >> 2] | 0; //@line 75407
  if (($315 | 0) == 0) {
   return;
  }
  FUNCTION_TABLE_vii[$315 & 511](HEAP32[$via + 80 >> 2] | 0, $_0_lobit_i); //@line 75416
  return;
 } else {
  return;
 }
}
function _e6522_set_uint16($via, $addr, $val) {
 $via = $via | 0;
 $addr = $addr | 0;
 $val = $val | 0;
 _e6522_set_uint8($via, $addr, $val & 255); //@line 75435
 return;
}
function _e6522_set_uint32($via, $addr, $val) {
 $via = $via | 0;
 $addr = $addr | 0;
 $val = $val | 0;
 _e6522_set_uint8($via, $addr, $val & 255); //@line 75449
 return;
}
function _e6522_reset($via) {
 $via = $via | 0;
 var $2 = 0, $4 = 0, $7 = 0, $15 = 0, $17 = 0, $29 = 0, $30 = 0, $__i = 0, $_0_lobit_i = 0, $35 = 0, $40 = 0;
 HEAP8[$via + 4 | 0] = 0; //@line 75466
 $2 = $via + 5 | 0; //@line 75467
 HEAP8[$2] = 0; //@line 75468
 $4 = $via + 14 | 0; //@line 75470
 _memset($via + 8 | 0, 0, 24); //@line 75473
 $7 = HEAP32[$via + 40 >> 2] | 0; //@line 75474
 if (($7 | 0) == 0) {
  $15 = 0; //@line 75478
 } else {
  FUNCTION_TABLE_vii[$7 & 511](HEAP32[$via + 36 >> 2] | 0, HEAP8[$via + 6 | 0] | 0); //@line 75485
  $15 = HEAP8[$via + 9 | 0] | 0; //@line 75488
 }
 $17 = HEAP32[$via + 52 >> 2] | 0; //@line 75492
 if (($17 | 0) != 0) {
  FUNCTION_TABLE_vii[$17 & 511](HEAP32[$via + 48 >> 2] | 0, HEAP8[$via + 7 | 0] & ~$15 | HEAP8[$2] & $15); //@line 75505
 }
 $29 = HEAP8[$4] | 0; //@line 75508
 $30 = $29 & 127; //@line 75509
 $__i = (HEAP8[$via + 15 | 0] & $30) << 24 >> 24 == 0 ? $30 : $29 | -128; //@line 75514
 HEAP8[$4] = $__i; //@line 75515
 $_0_lobit_i = ($__i & 255) >>> 7; //@line 75516
 $35 = $via + 88 | 0; //@line 75517
 if ((HEAP8[$35] | 0) == $_0_lobit_i << 24 >> 24) {
  return;
 }
 HEAP8[$35] = $_0_lobit_i; //@line 75525
 $40 = HEAP32[$via + 84 >> 2] | 0; //@line 75527
 if (($40 | 0) == 0) {
  return;
 }
 FUNCTION_TABLE_vii[$40 & 511](HEAP32[$via + 80 >> 2] | 0, $_0_lobit_i); //@line 75536
 return;
}
function _e8530_set_irq_fct($scc, $ext, $fct) {
 $scc = $scc | 0;
 $ext = $ext | 0;
 $fct = $fct | 0;
 HEAP32[$scc + 1288 >> 2] = $ext; //@line 75551
 HEAP32[$scc + 1292 >> 2] = $fct; //@line 75554
 return;
}
function _e8530_set_inp_fct($scc, $chn, $ext, $fct) {
 $scc = $scc | 0;
 $chn = $chn | 0;
 $ext = $ext | 0;
 $fct = $fct | 0;
 if ($chn >>> 0 >= 2) {
  return;
 }
 HEAP32[$scc + 4 + ($chn * 640 | 0) + 608 >> 2] = $ext; //@line 75575
 HEAP32[$scc + 4 + ($chn * 640 | 0) + 612 >> 2] = $fct; //@line 75578
 return;
}
function _e8530_set_out_fct($scc, $chn, $ext, $fct) {
 $scc = $scc | 0;
 $chn = $chn | 0;
 $ext = $ext | 0;
 $fct = $fct | 0;
 if ($chn >>> 0 >= 2) {
  return;
 }
 HEAP32[$scc + 4 + ($chn * 640 | 0) + 616 >> 2] = $ext; //@line 75600
 HEAP32[$scc + 4 + ($chn * 640 | 0) + 620 >> 2] = $fct; //@line 75603
 return;
}
function _e8530_set_rts_fct($scc, $chn, $ext, $fct) {
 $scc = $scc | 0;
 $chn = $chn | 0;
 $ext = $ext | 0;
 $fct = $fct | 0;
 if ($chn >>> 0 >= 2) {
  return;
 }
 HEAP32[$scc + 4 + ($chn * 640 | 0) + 624 >> 2] = $ext; //@line 75625
 HEAP32[$scc + 4 + ($chn * 640 | 0) + 628 >> 2] = $fct; //@line 75628
 return;
}
function _e8530_set_comm_fct($scc, $chn, $ext, $fct) {
 $scc = $scc | 0;
 $chn = $chn | 0;
 $ext = $ext | 0;
 $fct = $fct | 0;
 if ($chn >>> 0 >= 2) {
  return;
 }
 HEAP32[$scc + 4 + ($chn * 640 | 0) + 632 >> 2] = $ext; //@line 75650
 HEAP32[$scc + 4 + ($chn * 640 | 0) + 636 >> 2] = $fct; //@line 75653
 return;
}
function _e8530_set_multichar($scc, $chn, $read_max, $write_max) {
 $scc = $scc | 0;
 $chn = $chn | 0;
 $read_max = $read_max | 0;
 $write_max = $write_max | 0;
 if ($chn >>> 0 > 1) {
  return;
 }
 HEAP32[$scc + 4 + ($chn * 640 | 0) + 60 >> 2] = 0; //@line 75676
 HEAP32[$scc + 4 + ($chn * 640 | 0) + 64 >> 2] = ($read_max | 0) == 0 ? 1 : $read_max; //@line 75680
 HEAP32[$scc + 4 + ($chn * 640 | 0) + 68 >> 2] = 0; //@line 75682
 HEAP32[$scc + 4 + ($chn * 640 | 0) + 72 >> 2] = ($write_max | 0) == 0 ? 1 : $write_max; //@line 75686
 return;
}
function _e8530_set_clock($scc, $pclk, $rtxca, $rtxcb) {
 $scc = $scc | 0;
 $pclk = $pclk | 0;
 $rtxca = $rtxca | 0;
 $rtxcb = $rtxcb | 0;
 HEAP32[$scc + 1284 >> 2] = $pclk; //@line 75702
 HEAP32[$scc + 80 >> 2] = $rtxca; //@line 75704
 HEAP32[$scc + 720 >> 2] = $rtxcb; //@line 75706
 return;
}
function _e6522_clock($via, $n) {
 $via = $via | 0;
 $n = $n | 0;
 var $1 = 0, $2 = 0, $3 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $__i_i = 0, $_0_lobit_i_i = 0, $25 = 0, $30 = 0, $36 = 0, $39 = 0, $_pre_phi_i = 0, $_0_i = 0, $49 = 0, $53 = 0, $54 = 0, $56 = 0, $__i22_i = 0, $_0_lobit_i23_i = 0, $62 = 0, $67 = 0, $72 = 0, $73 = 0, $74 = 0, $88 = 0, $92 = 0, $93 = 0, $95 = 0, $__i_i5 = 0, $_0_lobit_i_i6 = 0, $101 = 0, $106 = 0;
 $1 = $via + 18 | 0; //@line 75730
 $2 = HEAP16[$1 >> 1] | 0; //@line 75731
 $3 = $2 & 65535; //@line 75732
 do {
  if ($3 >>> 0 > $n >>> 0 | $2 << 16 >> 16 == 0) {
   HEAP16[$1 >> 1] = $3 - $n & 65535; //@line 75741
  } else {
   if ((HEAP8[$via + 12 | 0] & 64) == 0) {
    HEAP16[$1 >> 1] = $3 - $n & 65535; //@line 75752
    $49 = $via + 20 | 0; //@line 75753
    if ((HEAP32[$49 >> 2] | 0) == 0) {
     break;
    }
    HEAP32[$49 >> 2] = 0; //@line 75760
    $53 = $via + 14 | 0; //@line 75761
    $54 = HEAP8[$53] | 0; //@line 75762
    $56 = $54 & 63 | 64; //@line 75764
    $__i22_i = ($56 & HEAP8[$via + 15 | 0]) << 24 >> 24 == 0 ? $56 : $54 | -64; //@line 75770
    HEAP8[$53] = $__i22_i; //@line 75771
    $_0_lobit_i23_i = ($__i22_i & 255) >>> 7; //@line 75772
    $62 = $via + 88 | 0; //@line 75773
    if ((HEAP8[$62] | 0) == $_0_lobit_i23_i << 24 >> 24) {
     break;
    }
    HEAP8[$62] = $_0_lobit_i23_i; //@line 75780
    $67 = HEAP32[$via + 84 >> 2] | 0; //@line 75782
    if (($67 | 0) == 0) {
     break;
    }
    FUNCTION_TABLE_vii[$67 & 511](HEAP32[$via + 80 >> 2] | 0, $_0_lobit_i23_i); //@line 75790
    break;
   }
   $15 = $n - $3 | 0; //@line 75794
   $16 = $via + 14 | 0; //@line 75795
   $17 = HEAP8[$16] | 0; //@line 75796
   $19 = $17 & 63 | 64; //@line 75798
   $__i_i = ($19 & HEAP8[$via + 15 | 0]) << 24 >> 24 == 0 ? $19 : $17 | -64; //@line 75804
   HEAP8[$16] = $__i_i; //@line 75805
   $_0_lobit_i_i = ($__i_i & 255) >>> 7; //@line 75806
   $25 = $via + 88 | 0; //@line 75807
   do {
    if ((HEAP8[$25] | 0) != $_0_lobit_i_i << 24 >> 24) {
     HEAP8[$25] = $_0_lobit_i_i; //@line 75813
     $30 = HEAP32[$via + 84 >> 2] | 0; //@line 75815
     if (($30 | 0) == 0) {
      break;
     }
     FUNCTION_TABLE_vii[$30 & 511](HEAP32[$via + 80 >> 2] | 0, $_0_lobit_i_i); //@line 75823
    }
   } while (0);
   $36 = HEAP16[$via + 16 >> 1] | 0; //@line 75828
   if ($36 << 16 >> 16 == 0) {
    $_0_i = $15 & 65535;
    $_pre_phi_i = 0;
   } else {
    $39 = $36 & 65535; //@line 75835
    $_0_i = ($15 >>> 0) % ($39 >>> 0) | 0;
    $_pre_phi_i = $39;
   }
   HEAP16[$1 >> 1] = $_pre_phi_i - $_0_i & 65535; //@line 75844
  }
 } while (0);
 $72 = $via + 26 | 0; //@line 75848
 $73 = HEAP16[$72 >> 1] | 0; //@line 75849
 $74 = $73 & 65535; //@line 75850
 if ($74 >>> 0 > $n >>> 0 | $73 << 16 >> 16 == 0) {
  HEAP16[$72 >> 1] = $74 - $n & 65535; //@line 75858
  return;
 }
 if ((HEAP8[$via + 12 | 0] & 32) != 0) {
  return;
 }
 HEAP16[$72 >> 1] = $74 - $n & 65535; //@line 75874
 $88 = $via + 28 | 0; //@line 75875
 if ((HEAP32[$88 >> 2] | 0) == 0) {
  return;
 }
 HEAP32[$88 >> 2] = 0; //@line 75883
 $92 = $via + 14 | 0; //@line 75884
 $93 = HEAP8[$92] | 0; //@line 75885
 $95 = $93 & 95 | 32; //@line 75887
 $__i_i5 = ($95 & HEAP8[$via + 15 | 0]) << 24 >> 24 == 0 ? $95 : $93 | -96; //@line 75893
 HEAP8[$92] = $__i_i5; //@line 75894
 $_0_lobit_i_i6 = ($__i_i5 & 255) >>> 7; //@line 75895
 $101 = $via + 88 | 0; //@line 75896
 if ((HEAP8[$101] | 0) == $_0_lobit_i_i6 << 24 >> 24) {
  return;
 }
 HEAP8[$101] = $_0_lobit_i_i6; //@line 75904
 $106 = HEAP32[$via + 84 >> 2] | 0; //@line 75906
 if (($106 | 0) == 0) {
  return;
 }
 FUNCTION_TABLE_vii[$106 & 511](HEAP32[$via + 80 >> 2] | 0, $_0_lobit_i_i6); //@line 75915
 return;
}
function _e8530_init($scc) {
 $scc = $scc | 0;
 HEAP32[$scc >> 2] = 0; //@line 75932
 HEAP32[$scc + 1284 >> 2] = 0; //@line 75934
 HEAP8[$scc + 38 | 0] = 1; //@line 75936
 HEAP8[$scc + 39 | 0] = 1; //@line 75938
 HEAP32[$scc + 56 >> 2] = 0; //@line 75940
 HEAP32[$scc + 60 >> 2] = 16384; //@line 75942
 HEAP32[$scc + 64 >> 2] = 0; //@line 75944
 HEAP32[$scc + 68 >> 2] = 1; //@line 75946
 HEAP32[$scc + 72 >> 2] = 0; //@line 75948
 HEAP32[$scc + 76 >> 2] = 1; //@line 75950
 HEAP32[$scc + 80 >> 2] = 0; //@line 75952
 HEAP32[$scc + 84 >> 2] = 0; //@line 75954
 HEAP32[$scc + 88 >> 2] = 0; //@line 75956
 HEAP32[$scc + 348 >> 2] = 0; //@line 75958
 HEAP32[$scc + 352 >> 2] = 0; //@line 75960
 _memset($scc + 612 | 0, 0, 32); //@line 75963
 HEAP8[$scc + 678 | 0] = 1; //@line 75965
 HEAP8[$scc + 679 | 0] = 1; //@line 75967
 HEAP32[$scc + 696 >> 2] = 0; //@line 75969
 HEAP32[$scc + 700 >> 2] = 16384; //@line 75971
 HEAP32[$scc + 704 >> 2] = 0; //@line 75973
 HEAP32[$scc + 708 >> 2] = 1; //@line 75975
 HEAP32[$scc + 712 >> 2] = 0; //@line 75977
 HEAP32[$scc + 716 >> 2] = 1; //@line 75979
 HEAP32[$scc + 720 >> 2] = 0; //@line 75981
 HEAP32[$scc + 724 >> 2] = 0; //@line 75983
 HEAP32[$scc + 728 >> 2] = 0; //@line 75985
 HEAP32[$scc + 988 >> 2] = 0; //@line 75987
 HEAP32[$scc + 992 >> 2] = 0; //@line 75989
 _memset($scc + 1252 | 0, 0, 32); //@line 75992
 HEAP32[$scc + 1288 >> 2] = 0; //@line 75994
 HEAP32[$scc + 1292 >> 2] = 0; //@line 75996
 HEAP8[$scc + 1296 | 0] = 0; //@line 75998
 return;
}
function _e8530_set_reg($scc, $chn, $reg, $val) {
 $scc = $scc | 0;
 $chn = $chn | 0;
 $reg = $reg | 0;
 $val = $val | 0;
 var $1 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, $14 = 0, $16 = 0, $23 = 0, $28 = 0, $35 = 0, $36 = 0, $41 = 0, $49 = 0, $51 = 0, $57 = 0, $62 = 0, $69 = 0, $70 = 0, $75 = 0, $92 = 0, $98 = 0, $99 = 0, $105 = 0, $111 = 0, $112 = 0, $115 = 0, $118 = 0, $120 = 0, $126 = 0, $131 = 0, $138 = 0, $139 = 0, $144 = 0, $149 = 0, $150 = 0, $153 = 0, $154 = 0, $168 = 0, $174 = 0, $183 = 0, $184 = 0, label = 0;
 $1 = $chn & 1; //@line 76032
 do {
  if (($reg | 0) == 11) {
   HEAP8[$scc + 4 + ($1 * 640 | 0) + 11 | 0] = $val; //@line 76036
  } else if (($reg | 0) == 12) {
   HEAP8[$scc + 4 + ($1 * 640 | 0) + 12 | 0] = $val; //@line 76040
   _e8530_set_params($scc, $1); //@line 76041
  } else if (($reg | 0) == 4) {
   HEAP8[$scc + 4 + ($1 * 640 | 0) + 4 | 0] = $val; //@line 76045
   _e8530_set_params($scc, $1); //@line 76046
  } else if (($reg | 0) == 13) {
   HEAP8[$scc + 4 + ($1 * 640 | 0) + 13 | 0] = $val; //@line 76050
   _e8530_set_params($scc, $1); //@line 76051
  } else if (($reg | 0) == 5) {
   $98 = $scc + 4 + ($1 * 640 | 0) + 5 | 0; //@line 76054
   $99 = HEAP8[$98] | 0; //@line 76055
   HEAP8[$98] = $val; //@line 76056
   do {
    if ((($99 ^ $val) & 2) != 0) {
     $105 = HEAP32[$scc + 4 + ($1 * 640 | 0) + 628 >> 2] | 0; //@line 76064
     if (($105 | 0) == 0) {
      break;
     }
     FUNCTION_TABLE_vii[$105 & 511](HEAP32[$scc + 4 + ($1 * 640 | 0) + 624 >> 2] | 0, ($val & 255) >>> 1 & 1); //@line 76074
    }
   } while (0);
   _e8530_set_params($scc, $1); //@line 76078
   label = 9653; //@line 76080
  } else if (($reg | 0) == 1) {
   HEAP8[$scc + 4 + ($1 * 640 | 0) + 1 | 0] = $val; //@line 76083
   _e8530_set_int_cond($scc, $1, 0); //@line 76084
  } else if (($reg | 0) == 2) {
   HEAP8[$scc + 6 | 0] = $val; //@line 76088
   HEAP8[$scc + 646 | 0] = $val; //@line 76090
   HEAP8[$scc + 22 | 0] = $val; //@line 76092
   HEAP8[$scc + 662 | 0] = $val; //@line 76094
  } else if (($reg | 0) == 8) {
   $111 = $scc + 4 + ($1 * 640 | 0) + 8 | 0; //@line 76097
   HEAP8[$111] = $val; //@line 76098
   $112 = $scc + 4 + ($1 * 640 | 0) + 16 | 0; //@line 76099
   HEAP8[$112] = HEAP8[$112] & -5; //@line 76102
   $115 = $scc + 4 + ($1 * 640 | 0) + 34 | 0; //@line 76103
   HEAP8[$115] = 0; //@line 76104
   $118 = $scc + 23 | 0; //@line 76107
   $120 = HEAP8[$118] & (($1 | 0) == 0 ? -17 : -3); //@line 76109
   HEAP8[$118] = $120; //@line 76110
   do {
    if ((HEAP8[$scc + 13 | 0] & 8) == 0) {
     $126 = $scc + 1296 | 0; //@line 76118
     if ((HEAP8[$126] | 0) == 0) {
      break;
     }
     HEAP8[$126] = 0; //@line 76125
     $131 = HEAP32[$scc + 1292 >> 2] | 0; //@line 76127
     if (($131 | 0) == 0) {
      break;
     }
     FUNCTION_TABLE_vii[$131 & 511](HEAP32[$scc + 1288 >> 2] | 0, 0); //@line 76135
    } else {
     $138 = $120 << 24 >> 24 != 0 | 0; //@line 76139
     $139 = $scc + 1296 | 0; //@line 76140
     if ((HEAP8[$139] | 0) == $138 << 24 >> 24) {
      break;
     }
     HEAP8[$139] = $138; //@line 76147
     $144 = HEAP32[$scc + 1292 >> 2] | 0; //@line 76149
     if (($144 | 0) == 0) {
      break;
     }
     FUNCTION_TABLE_vii[$144 & 511](HEAP32[$scc + 1288 >> 2] | 0, $138); //@line 76157
    }
   } while (0);
   $149 = $scc + 4 + ($1 * 640 | 0) + 68 | 0; //@line 76161
   $150 = HEAP32[$149 >> 2] | 0; //@line 76162
   if (($150 | 0) == 0) {
    label = 9653; //@line 76166
    break;
   }
   $153 = $scc + 4 + ($1 * 640 | 0) + 80 | 0; //@line 76169
   $154 = HEAP32[$153 >> 2] | 0; //@line 76170
   if (($154 + 1 & 255 | 0) == (HEAP32[$scc + 4 + ($1 * 640 | 0) + 84 >> 2] | 0)) {
    label = 9653; //@line 76178
    break;
   }
   if ((HEAP8[$115] | 0) != 0) {
    HEAP8[$112] = HEAP8[$112] | 64; //@line 76187
    label = 9653; //@line 76189
    break;
   }
   HEAP32[$149 >> 2] = $150 - 1; //@line 76193
   $168 = HEAP8[$111] | 0; //@line 76194
   HEAP8[$scc + 4 + ($1 * 640 | 0) + 88 + $154 | 0] = $168; //@line 76196
   HEAP32[$153 >> 2] = (HEAP32[$153 >> 2] | 0) + 1 & 255; //@line 76200
   $174 = HEAP32[$scc + 4 + ($1 * 640 | 0) + 620 >> 2] | 0; //@line 76202
   if (($174 | 0) != 0) {
    FUNCTION_TABLE_vii[$174 & 511](HEAP32[$scc + 4 + ($1 * 640 | 0) + 616 >> 2] | 0, $168); //@line 76208
   }
   HEAP8[$112] = HEAP8[$112] | 4; //@line 76213
   HEAP8[$115] = 1; //@line 76214
   _e8530_set_int_cond($scc, $1, 2); //@line 76215
   label = 9653; //@line 76217
  } else if (($reg | 0) == 9) {
   $183 = $scc + 13 | 0; //@line 76219
   $184 = HEAP8[$183] | 0; //@line 76220
   HEAP8[$183] = $val; //@line 76221
   HEAP8[$scc + 653 | 0] = $val; //@line 76223
   if (($val & 8 & ($184 ^ 8)) << 24 >> 24 == 0) {
    break;
   }
   _e8530_set_int_cond($scc, 0, 0); //@line 76232
   _e8530_set_int_cond($scc, 1, 0); //@line 76233
   label = 9653; //@line 76235
  } else if (($reg | 0) == 0) {
   HEAP8[$scc + 4 + ($1 * 640 | 0) | 0] = $val; //@line 76238
   $4 = $val & 255; //@line 76239
   $5 = $4 & 7; //@line 76240
   $6 = $scc | 0; //@line 76241
   HEAP32[$6 >> 2] = $5; //@line 76242
   $8 = $4 >>> 3 & 7; //@line 76244
   if (($8 | 0) == 1) {
    HEAP32[$6 >> 2] = $5 | 8; //@line 76247
    return;
   } else if (($8 | 0) == 5) {
    $49 = $scc + 23 | 0; //@line 76254
    $51 = HEAP8[$49] & (($1 | 0) == 0 ? -17 : -3); //@line 76256
    HEAP8[$49] = $51; //@line 76257
    if ((HEAP8[$scc + 13 | 0] & 8) == 0) {
     $57 = $scc + 1296 | 0; //@line 76264
     if ((HEAP8[$57] | 0) == 0) {
      label = 9653; //@line 76269
      break;
     }
     HEAP8[$57] = 0; //@line 76272
     $62 = HEAP32[$scc + 1292 >> 2] | 0; //@line 76274
     if (($62 | 0) == 0) {
      label = 9653; //@line 76278
      break;
     }
     FUNCTION_TABLE_vii[$62 & 511](HEAP32[$scc + 1288 >> 2] | 0, 0); //@line 76283
     label = 9653; //@line 76285
     break;
    } else {
     $69 = $51 << 24 >> 24 != 0 | 0; //@line 76289
     $70 = $scc + 1296 | 0; //@line 76290
     if ((HEAP8[$70] | 0) == $69 << 24 >> 24) {
      label = 9653; //@line 76295
      break;
     }
     HEAP8[$70] = $69; //@line 76298
     $75 = HEAP32[$scc + 1292 >> 2] | 0; //@line 76300
     if (($75 | 0) == 0) {
      label = 9653; //@line 76304
      break;
     }
     FUNCTION_TABLE_vii[$75 & 511](HEAP32[$scc + 1288 >> 2] | 0, $69); //@line 76309
     label = 9653; //@line 76311
     break;
    }
   } else if (($8 | 0) == 2) {
    $14 = $scc + 23 | 0; //@line 76317
    $16 = HEAP8[$14] & (($1 | 0) == 0 ? -9 : -2); //@line 76319
    HEAP8[$14] = $16; //@line 76320
    HEAP8[$scc + 4 + ($1 * 640 | 0) + 32 | 0] = 0; //@line 76322
    if ((HEAP8[$scc + 13 | 0] & 8) != 0) {
     $35 = $16 << 24 >> 24 != 0 | 0; //@line 76330
     $36 = $scc + 1296 | 0; //@line 76331
     if ((HEAP8[$36] | 0) == $35 << 24 >> 24) {
      label = 9653; //@line 76336
      break;
     }
     HEAP8[$36] = $35; //@line 76339
     $41 = HEAP32[$scc + 1292 >> 2] | 0; //@line 76341
     if (($41 | 0) == 0) {
      label = 9653; //@line 76345
      break;
     }
     FUNCTION_TABLE_vii[$41 & 511](HEAP32[$scc + 1288 >> 2] | 0, $35); //@line 76350
     label = 9653; //@line 76352
     break;
    }
    $23 = $scc + 1296 | 0; //@line 76355
    if ((HEAP8[$23] | 0) == 0) {
     return;
    }
    HEAP8[$23] = 0; //@line 76363
    $28 = HEAP32[$scc + 1292 >> 2] | 0; //@line 76365
    if (($28 | 0) == 0) {
     label = 9653; //@line 76369
     break;
    }
    FUNCTION_TABLE_vii[$28 & 511](HEAP32[$scc + 1288 >> 2] | 0, 0); //@line 76374
    label = 9653; //@line 76376
    break;
   } else {
    return;
   }
  } else if (($reg | 0) == 14) {
   HEAP8[$scc + 4 + ($1 * 640 | 0) + 14 | 0] = $val; //@line 76384
   _e8530_set_params($scc, $1); //@line 76385
  } else if (($reg | 0) == 10) {
   HEAP8[$scc + 4 + ($1 * 640 | 0) + 10 | 0] = $val; //@line 76389
  } else if (($reg | 0) == 3) {
   HEAP8[$scc + 4 + ($1 * 640 | 0) + 3 | 0] = $val; //@line 76393
   if (($val & 16) == 0) {
    break;
   }
   $92 = $scc + 4 + ($1 * 640 | 0) + 16 | 0; //@line 76400
   HEAP8[$92] = HEAP8[$92] | 16; //@line 76403
   label = 9653; //@line 76405
  } else if (($reg | 0) == 15) {
   HEAP8[$scc + 4 + ($1 * 640 | 0) + 15 | 0] = $val; //@line 76408
   HEAP8[$scc + 4 + ($1 * 640 | 0) + 31 | 0] = $val; //@line 76410
  } else {
   HEAP8[($reg & 15) + ($scc + 4 + ($1 * 640 | 0)) | 0] = $val; //@line 76415
   label = 9653; //@line 76417
  }
 } while (0);
 do {
  if ((label | 0) == 9653) {
   if (($reg | 0) != 0) {
    break;
   }
   return;
  }
 } while (0);
 HEAP32[$scc >> 2] = 0; //@line 76432
 return;
}
function _e8530_receive($scc, $chn, $val) {
 $scc = $scc | 0;
 $chn = $chn | 0;
 $val = $val | 0;
 var $1 = 0, $2 = 0, $3 = 0;
 $1 = $chn & 1; //@line 76447
 $2 = $scc + 4 + ($1 * 640 | 0) + 344 | 0; //@line 76448
 $3 = HEAP32[$2 >> 2] | 0; //@line 76449
 if (($3 + 1 & 255 | 0) == (HEAP32[$scc + 4 + ($1 * 640 | 0) + 348 >> 2] | 0)) {
  return;
 }
 HEAP8[$scc + 4 + ($1 * 640 | 0) + 352 + $3 | 0] = $val; //@line 76461
 HEAP32[$2 >> 2] = (HEAP32[$2 >> 2] | 0) + 1 & 255; //@line 76465
 return;
}
function _e8530_send($scc, $chn) {
 $scc = $scc | 0;
 $chn = $chn | 0;
 var $1 = 0, $4 = 0, $5 = 0, $9 = 0, $_0 = 0;
 $1 = $chn & 1; //@line 76479
 $4 = $scc + 4 + ($1 * 640 | 0) + 84 | 0; //@line 76482
 $5 = HEAP32[$4 >> 2] | 0; //@line 76483
 if ((HEAP32[$scc + 4 + ($1 * 640 | 0) + 80 >> 2] | 0) == ($5 | 0)) {
  $_0 = 0; //@line 76487
  return $_0 | 0; //@line 76490
 }
 $9 = HEAP8[$scc + 4 + ($1 * 640 | 0) + 88 + $5 | 0] | 0; //@line 76493
 HEAP32[$4 >> 2] = $5 + 1 & 255; //@line 76496
 $_0 = $9; //@line 76498
 return $_0 | 0; //@line 76501
}
function _e8530_inp_full($scc, $chn) {
 $scc = $scc | 0;
 $chn = $chn | 0;
 var $1 = 0;
 $1 = $chn & 1; //@line 76512
 return ((HEAP32[$scc + 4 + ($1 * 640 | 0) + 344 >> 2] | 0) + 1 & 255 | 0) == (HEAP32[$scc + 4 + ($1 * 640 | 0) + 348 >> 2] | 0) | 0; //@line 76522
}
function _e8530_out_empty($scc, $chn) {
 $scc = $scc | 0;
 $chn = $chn | 0;
 var $1 = 0;
 $1 = $chn & 1; //@line 76532
 return (HEAP32[$scc + 4 + ($1 * 640 | 0) + 80 >> 2] | 0) == (HEAP32[$scc + 4 + ($1 * 640 | 0) + 84 >> 2] | 0) | 0; //@line 76540
}
function _e8530_get_reg($scc, $chn, $reg) {
 $scc = $scc | 0;
 $chn = $chn | 0;
 $reg = $reg | 0;
 var $1 = 0, $6 = 0, $15 = 0, $20 = 0, $st_0_i = 0, $43 = 0, $58 = 0, $59 = 0, $60 = 0, $63 = 0, $66 = 0, $68 = 0, $74 = 0, $79 = 0, $86 = 0, $87 = 0, $92 = 0, $99 = 0, $100 = 0, $103 = 0, $104 = 0, $116 = 0, $val_0 = 0;
 $1 = $chn & 1; //@line 76564
 do {
  if (($reg | 0) == 3) {
   if (($1 | 0) != 0) {
    $val_0 = 0; //@line 76570
    break;
   }
   $val_0 = HEAP8[$scc + 23 | 0] | 0; //@line 76576
  } else if (($reg | 0) == 0) {
   $6 = HEAP8[$scc + 4 + ($1 * 640 | 0) + 32 | 0] | 0; //@line 76581
   $val_0 = HEAP8[$scc + 4 + ($1 * 640 | 0) + 33 | 0] & $6 | HEAP8[$scc + 4 + ($1 * 640 | 0) + 16 | 0] & ~$6; //@line 76589
  } else if (($reg | 0) == 8) {
   $58 = $scc + 4 + ($1 * 640 | 0) + 24 | 0; //@line 76591
   $59 = HEAP8[$58] | 0; //@line 76592
   $60 = $scc + 4 + ($1 * 640 | 0) + 16 | 0; //@line 76593
   HEAP8[$60] = HEAP8[$60] & -2; //@line 76596
   $63 = $scc + 4 + ($1 * 640 | 0) + 35 | 0; //@line 76597
   HEAP8[$63] = 1; //@line 76598
   $66 = $scc + 23 | 0; //@line 76601
   $68 = HEAP8[$66] & (($1 | 0) == 0 ? -33 : -5); //@line 76603
   HEAP8[$66] = $68; //@line 76604
   do {
    if ((HEAP8[$scc + 13 | 0] & 8) == 0) {
     $74 = $scc + 1296 | 0; //@line 76612
     if ((HEAP8[$74] | 0) == 0) {
      break;
     }
     HEAP8[$74] = 0; //@line 76619
     $79 = HEAP32[$scc + 1292 >> 2] | 0; //@line 76621
     if (($79 | 0) == 0) {
      break;
     }
     FUNCTION_TABLE_vii[$79 & 511](HEAP32[$scc + 1288 >> 2] | 0, 0); //@line 76629
    } else {
     $86 = $68 << 24 >> 24 != 0 | 0; //@line 76633
     $87 = $scc + 1296 | 0; //@line 76634
     if ((HEAP8[$87] | 0) == $86 << 24 >> 24) {
      break;
     }
     HEAP8[$87] = $86; //@line 76641
     $92 = HEAP32[$scc + 1292 >> 2] | 0; //@line 76643
     if (($92 | 0) == 0) {
      break;
     }
     FUNCTION_TABLE_vii[$92 & 511](HEAP32[$scc + 1288 >> 2] | 0, $86); //@line 76651
    }
   } while (0);
   $99 = $scc + 4 + ($1 * 640 | 0) + 348 | 0; //@line 76657
   $100 = HEAP32[$99 >> 2] | 0; //@line 76658
   if ((HEAP32[$scc + 4 + ($1 * 640 | 0) + 344 >> 2] | 0) == ($100 | 0)) {
    $val_0 = $59; //@line 76662
    break;
   }
   $103 = $scc + 4 + ($1 * 640 | 0) + 60 | 0; //@line 76665
   $104 = HEAP32[$103 >> 2] | 0; //@line 76666
   if (($104 | 0) == 0) {
    $val_0 = $59; //@line 76670
    break;
   }
   if ((HEAP8[$63] | 0) == 0) {
    $val_0 = $59; //@line 76677
    break;
   }
   HEAP32[$103 >> 2] = $104 - 1; //@line 76681
   HEAP8[$58] = HEAP8[$scc + 4 + ($1 * 640 | 0) + 352 + $100 | 0] | 0; //@line 76684
   HEAP32[$99 >> 2] = $100 + 1 & 255; //@line 76687
   $116 = HEAP32[$scc + 4 + ($1 * 640 | 0) + 612 >> 2] | 0; //@line 76689
   if (($116 | 0) != 0) {
    FUNCTION_TABLE_vii[$116 & 511](HEAP32[$scc + 4 + ($1 * 640 | 0) + 608 >> 2] | 0, 1); //@line 76695
   }
   HEAP8[$60] = HEAP8[$60] | 1; //@line 76700
   HEAP8[$63] = 0; //@line 76701
   _e8530_set_int_cond($scc, $1, 4); //@line 76702
   $val_0 = $59; //@line 76704
  } else if (($reg | 0) == 2) {
   $15 = HEAP8[$scc + 22 | 0] | 0; //@line 76707
   if (($1 | 0) == 0) {
    $val_0 = $15; //@line 76711
    break;
   }
   $20 = HEAPU8[$scc + 23 | 0] | 0; //@line 76716
   do {
    if (($20 & 32 | 0) == 0) {
     if (($20 & 16 | 0) != 0) {
      $st_0_i = 24; //@line 76726
      break;
     }
     if (($20 & 8 | 0) != 0) {
      $st_0_i = 90; //@line 76733
      break;
     }
     if (($20 & 4 | 0) != 0) {
      $st_0_i = 36; //@line 76740
      break;
     }
     if (($20 & 2 | 0) != 0) {
      $st_0_i = 0; //@line 76747
      break;
     }
     $st_0_i = ($20 & 1 | 0) == 0 ? 102 : 66; //@line 76753
    } else {
     $st_0_i = 60; //@line 76755
    }
   } while (0);
   $43 = $15 & 255; //@line 76763
   if ((HEAP8[$scc + 13 | 0] & 16) == 0) {
    $val_0 = ($st_0_i & 14 | $43 & 241) & 255; //@line 76770
    break;
   } else {
    $val_0 = ($st_0_i | $43) & 112; //@line 76777
    break;
   }
  } else {
   $val_0 = HEAP8[($reg & 15) + ($scc + 4 + ($1 * 640 | 0) + 16) | 0] | 0; //@line 76785
  }
 } while (0);
 HEAP32[$scc >> 2] = 0; //@line 76790
 return $val_0 | 0; //@line 76792
}
function _e8530_get_ctl_a($scc) {
 $scc = $scc | 0;
 return _e8530_get_reg($scc, 0, HEAP32[$scc >> 2] | 0) | 0; //@line 76805
}
function _e8530_get_ctl_b($scc) {
 $scc = $scc | 0;
 return _e8530_get_reg($scc, 1, HEAP32[$scc >> 2] | 0) | 0; //@line 76818
}
function _e8530_set_ctl_a($scc, $val) {
 $scc = $scc | 0;
 $val = $val | 0;
 _e8530_set_reg($scc, 0, HEAP32[$scc >> 2] | 0, $val); //@line 76830
 return;
}
function _e8530_set_ctl_b($scc, $val) {
 $scc = $scc | 0;
 $val = $val | 0;
 _e8530_set_reg($scc, 1, HEAP32[$scc >> 2] | 0, $val); //@line 76844
 return;
}
function _e8530_get_data_a($scc) {
 $scc = $scc | 0;
 return _e8530_get_reg($scc, 0, 8) | 0; //@line 76857
}
function _e8530_get_data_b($scc) {
 $scc = $scc | 0;
 return _e8530_get_reg($scc, 1, 8) | 0; //@line 76868
}
function _e8530_set_data_a($scc, $val) {
 $scc = $scc | 0;
 $val = $val | 0;
 _e8530_set_reg($scc, 0, 8, $val); //@line 76877
 return;
}
function _e8530_set_data_b($scc, $val) {
 $scc = $scc | 0;
 $val = $val | 0;
 _e8530_set_reg($scc, 1, 8, $val); //@line 76888
 return;
}
function _e8530_set_dcd_a($scc, $val) {
 $scc = $scc | 0;
 $val = $val | 0;
 var $1 = 0, $2 = 0, $old_0_i = 0;
 $1 = $scc + 20 | 0; //@line 76901
 $2 = HEAP8[$1] | 0; //@line 76902
 $old_0_i = $val << 24 >> 24 == 0 ? $2 | 8 : $2 & -9; //@line 76906
 HEAP8[$1] = $old_0_i; //@line 76907
 if ((HEAP8[$scc + 19 | 0] & -6 & ($old_0_i ^ $2)) << 24 >> 24 == 0) {
  return;
 }
 _e8530_set_int_cond($scc, 0, 1); //@line 76919
 return;
}
function _e8530_set_dcd_b($scc, $val) {
 $scc = $scc | 0;
 $val = $val | 0;
 var $1 = 0, $2 = 0, $old_0_i = 0;
 $1 = $scc + 660 | 0; //@line 76933
 $2 = HEAP8[$1] | 0; //@line 76934
 $old_0_i = $val << 24 >> 24 == 0 ? $2 | 8 : $2 & -9; //@line 76938
 HEAP8[$1] = $old_0_i; //@line 76939
 if ((HEAP8[$scc + 659 | 0] & -6 & ($old_0_i ^ $2)) << 24 >> 24 == 0) {
  return;
 }
 _e8530_set_int_cond($scc, 1, 1); //@line 76951
 return;
}
function _e8530_set_cts($scc, $chn, $val) {
 $scc = $scc | 0;
 $chn = $chn | 0;
 $val = $val | 0;
 var $1 = 0, $2 = 0, $3 = 0, $rr0_0 = 0;
 $1 = $chn & 1; //@line 76966
 $2 = $scc + 4 + ($1 * 640 | 0) + 16 | 0; //@line 76967
 $3 = HEAP8[$2] | 0; //@line 76968
 $rr0_0 = $val << 24 >> 24 == 0 ? $3 | 32 : $3 & -33; //@line 76972
 HEAP8[$2] = $rr0_0; //@line 76973
 if ((HEAP8[$scc + 4 + ($1 * 640 | 0) + 15 | 0] & -6 & ($rr0_0 ^ $3)) << 24 >> 24 == 0) {
  return;
 }
 _e8530_set_int_cond($scc, $1, 1); //@line 76985
 return;
}
function _e8530_reset($scc) {
 $scc = $scc | 0;
 var $i_016 = 0, $10 = 0, $13 = 0, $23 = 0, $26 = 0, $37 = 0, $43 = 0, $48 = 0, $53 = 0;
 HEAP32[$scc >> 2] = 0; //@line 77004
 $i_016 = 0; //@line 77006
 do {
  HEAP8[$scc + 20 + $i_016 | 0] = 0; //@line 77010
  HEAP8[$scc + 4 + $i_016 | 0] = 0; //@line 77012
  HEAP8[$scc + 660 + $i_016 | 0] = 0; //@line 77014
  HEAP8[$scc + 644 + $i_016 | 0] = 0; //@line 77016
  $i_016 = $i_016 + 1 | 0; //@line 77017
 } while ($i_016 >>> 0 < 16);
 $10 = $scc + 20 | 0; //@line 77026
 HEAP8[$10] = HEAP8[$10] | 4; //@line 77029
 $13 = $scc + 21 | 0; //@line 77030
 HEAP8[$13] = HEAP8[$13] | 1; //@line 77033
 HEAP8[$scc + 36 | 0] = 0; //@line 77035
 HEAP32[$scc + 84 >> 2] = 0; //@line 77038
 HEAP32[$scc + 88 >> 2] = 0; //@line 77040
 HEAP32[$scc + 348 >> 2] = 0; //@line 77042
 HEAP32[$scc + 352 >> 2] = 0; //@line 77044
 _memset($scc + 40 | 0, 0, 16); //@line 77046
 $23 = $scc + 660 | 0; //@line 77047
 HEAP8[$23] = HEAP8[$23] | 4; //@line 77050
 $26 = $scc + 661 | 0; //@line 77051
 HEAP8[$26] = HEAP8[$26] | 1; //@line 77054
 HEAP8[$scc + 676 | 0] = 0; //@line 77056
 HEAP32[$scc + 724 >> 2] = 0; //@line 77059
 HEAP32[$scc + 728 >> 2] = 0; //@line 77061
 HEAP32[$scc + 988 >> 2] = 0; //@line 77063
 HEAP32[$scc + 992 >> 2] = 0; //@line 77065
 _memset($scc + 680 | 0, 0, 16); //@line 77067
 $37 = HEAP32[$scc + 632 >> 2] | 0; //@line 77069
 if (($37 | 0) != 0) {
  FUNCTION_TABLE_vii[$37 & 511](HEAP32[$scc + 628 >> 2] | 0, 0); //@line 77075
 }
 $43 = HEAP32[$scc + 1272 >> 2] | 0; //@line 77079
 if (($43 | 0) != 0) {
  FUNCTION_TABLE_vii[$43 & 511](HEAP32[$scc + 1268 >> 2] | 0, 0); //@line 77085
 }
 $48 = $scc + 1296 | 0; //@line 77088
 if ((HEAP8[$48] | 0) == 0) {
  return;
 }
 HEAP8[$48] = 0; //@line 77096
 $53 = HEAP32[$scc + 1292 >> 2] | 0; //@line 77098
 if (($53 | 0) == 0) {
  return;
 }
 FUNCTION_TABLE_vii[$53 & 511](HEAP32[$scc + 1288 >> 2] | 0, 0); //@line 77107
 return;
}
function _e8530_clock($scc, $n) {
 $scc = $scc | 0;
 $n = $n | 0;
 _e8530_chn_clock($scc, 0, $n); //@line 77119
 _e8530_chn_clock($scc, 1, $n); //@line 77120
 return;
}
function _e8530_chn_clock($scc, $chn, $n) {
 $scc = $scc | 0;
 $chn = $chn | 0;
 $n = $n | 0;
 var $1 = 0, $2 = 0, $7 = 0, $9 = 0, $_0 = 0, $16 = 0, $17 = 0, $19 = 0, $20 = 0, $23 = 0, $24 = 0, $28 = 0, $39 = 0, $45 = 0, $48 = 0, $51 = 0, $52 = 0, $59 = 0, $63 = 0, $69 = 0, $75 = 0, $81 = 0;
 $1 = $scc + 4 + ($chn * 640 | 0) + 52 | 0; //@line 77141
 $2 = HEAP32[$1 >> 2] | 0; //@line 77142
 if ($2 >>> 0 > $n >>> 0) {
  HEAP32[$1 >> 2] = $2 - $n; //@line 77147
  return;
 }
 $7 = $n - $2 | 0; //@line 77152
 $9 = HEAP32[$scc + 4 + ($chn * 640 | 0) + 56 >> 2] | 0; //@line 77154
 if ($7 >>> 0 > $9 >>> 0) {
  $_0 = ($7 >>> 0) % ($9 >>> 0) | 0; //@line 77160
 } else {
  $_0 = $7; //@line 77162
 }
 HEAP32[$1 >> 2] = $9 - $_0; //@line 77166
 $16 = HEAP32[$scc + 4 + ($chn * 640 | 0) + 64 >> 2] | 0; //@line 77168
 $17 = $scc + 4 + ($chn * 640 | 0) + 60 | 0; //@line 77169
 HEAP32[$17 >> 2] = $16; //@line 77170
 $19 = HEAP32[$scc + 4 + ($chn * 640 | 0) + 72 >> 2] | 0; //@line 77172
 $20 = $scc + 4 + ($chn * 640 | 0) + 68 | 0; //@line 77173
 HEAP32[$20 >> 2] = $19; //@line 77174
 $23 = $scc + 4 + ($chn * 640 | 0) + 348 | 0; //@line 77177
 $24 = HEAP32[$23 >> 2] | 0; //@line 77178
 do {
  if ((HEAP32[$scc + 4 + ($chn * 640 | 0) + 344 >> 2] | 0) == ($24 | 0) | ($16 | 0) == 0) {
   $48 = $19; //@line 77185
  } else {
   $28 = $scc + 4 + ($chn * 640 | 0) + 35 | 0; //@line 77187
   if ((HEAP8[$28] | 0) == 0) {
    $48 = $19; //@line 77192
    break;
   }
   HEAP32[$17 >> 2] = $16 - 1; //@line 77196
   HEAP8[$scc + 4 + ($chn * 640 | 0) + 24 | 0] = HEAP8[$scc + 4 + ($chn * 640 | 0) + 352 + $24 | 0] | 0; //@line 77200
   HEAP32[$23 >> 2] = $24 + 1 & 255; //@line 77203
   $39 = HEAP32[$scc + 4 + ($chn * 640 | 0) + 612 >> 2] | 0; //@line 77205
   if (($39 | 0) != 0) {
    FUNCTION_TABLE_vii[$39 & 511](HEAP32[$scc + 4 + ($chn * 640 | 0) + 608 >> 2] | 0, 1); //@line 77211
   }
   $45 = $scc + 4 + ($chn * 640 | 0) + 16 | 0; //@line 77214
   HEAP8[$45] = HEAP8[$45] | 1; //@line 77217
   HEAP8[$28] = 0; //@line 77218
   _e8530_set_int_cond($scc, $chn, 4); //@line 77219
   $48 = HEAP32[$20 >> 2] | 0; //@line 77222
  }
 } while (0);
 if (($48 | 0) == 0) {
  return;
 }
 $51 = $scc + 4 + ($chn * 640 | 0) + 80 | 0; //@line 77232
 $52 = HEAP32[$51 >> 2] | 0; //@line 77233
 if (($52 + 1 & 255 | 0) == (HEAP32[$scc + 4 + ($chn * 640 | 0) + 84 >> 2] | 0)) {
  return;
 }
 $59 = $scc + 4 + ($chn * 640 | 0) + 34 | 0; //@line 77244
 if ((HEAP8[$59] | 0) != 0) {
  $63 = $scc + 4 + ($chn * 640 | 0) + 16 | 0; //@line 77249
  HEAP8[$63] = HEAP8[$63] | 64; //@line 77252
  return;
 }
 HEAP32[$20 >> 2] = $48 - 1; //@line 77258
 $69 = HEAP8[$scc + 4 + ($chn * 640 | 0) + 8 | 0] | 0; //@line 77260
 HEAP8[$scc + 4 + ($chn * 640 | 0) + 88 + $52 | 0] = $69; //@line 77262
 HEAP32[$51 >> 2] = (HEAP32[$51 >> 2] | 0) + 1 & 255; //@line 77266
 $75 = HEAP32[$scc + 4 + ($chn * 640 | 0) + 620 >> 2] | 0; //@line 77268
 if (($75 | 0) != 0) {
  FUNCTION_TABLE_vii[$75 & 511](HEAP32[$scc + 4 + ($chn * 640 | 0) + 616 >> 2] | 0, $69); //@line 77274
 }
 $81 = $scc + 4 + ($chn * 640 | 0) + 16 | 0; //@line 77277
 HEAP8[$81] = HEAP8[$81] | 4; //@line 77280
 HEAP8[$59] = 1; //@line 77281
 _e8530_set_int_cond($scc, $chn, 2); //@line 77282
 return;
}
function _e8530_set_int_cond($scc, $chn, $cond) {
 $scc = $scc | 0;
 $chn = $chn | 0;
 $cond = $cond | 0;
 var $1 = 0, $12 = 0, $32 = 0, $46 = 0, $55 = 0, $60 = 0, $69 = 0, $70 = 0, $75 = 0;
 $1 = $cond & 255; //@line 77303
 do {
  if (($1 & 1 | 0) != 0) {
   if ((HEAP8[$scc + 4 + ($chn * 640 | 0) + 1 | 0] & 1) == 0) {
    break;
   }
   $12 = $scc + 23 | 0; //@line 77319
   HEAP8[$12] = HEAP8[$12] | (($chn | 0) == 0 ? 8 : 1); //@line 77322
   HEAP8[$scc + 4 + ($chn * 640 | 0) + 32 | 0] = HEAP8[$scc + 4 + ($chn * 640 | 0) + 15 | 0] | 0; //@line 77326
   HEAP8[$scc + 4 + ($chn * 640 | 0) + 33 | 0] = HEAP8[$scc + 4 + ($chn * 640 | 0) + 16 | 0] | 0; //@line 77330
  }
 } while (0);
 do {
  if (($1 & 2 | 0) != 0) {
   if ((HEAP8[$scc + 4 + ($chn * 640 | 0) + 1 | 0] & 2) == 0) {
    break;
   }
   $32 = $scc + 23 | 0; //@line 77349
   HEAP8[$32] = HEAP8[$32] | (($chn | 0) == 0 ? 16 : 2); //@line 77352
  }
 } while (0);
 do {
  if (($1 & 4 | 0) != 0) {
   if ((HEAP8[$scc + 4 + ($chn * 640 | 0) + 1 | 0] & 24) != 16) {
    break;
   }
   $46 = $scc + 23 | 0; //@line 77371
   HEAP8[$46] = HEAP8[$46] | (($chn | 0) == 0 ? 32 : 4); //@line 77374
  }
 } while (0);
 if ((HEAP8[$scc + 13 | 0] & 8) == 0) {
  $55 = $scc + 1296 | 0; //@line 77384
  if ((HEAP8[$55] | 0) == 0) {
   return;
  }
  HEAP8[$55] = 0; //@line 77392
  $60 = HEAP32[$scc + 1292 >> 2] | 0; //@line 77394
  if (($60 | 0) == 0) {
   return;
  }
  FUNCTION_TABLE_vii[$60 & 511](HEAP32[$scc + 1288 >> 2] | 0, 0); //@line 77403
  return;
 } else {
  $69 = (HEAP8[$scc + 23 | 0] | 0) != 0 | 0; //@line 77411
  $70 = $scc + 1296 | 0; //@line 77412
  if ((HEAP8[$70] | 0) == $69 << 24 >> 24) {
   return;
  }
  HEAP8[$70] = $69; //@line 77420
  $75 = HEAP32[$scc + 1292 >> 2] | 0; //@line 77422
  if (($75 | 0) == 0) {
   return;
  }
  FUNCTION_TABLE_vii[$75 & 511](HEAP32[$scc + 1288 >> 2] | 0, $69); //@line 77431
  return;
 }
}
function _mem_blk_get_uint8_null($ext, $addr) {
 $ext = $ext | 0;
 $addr = $addr | 0;
 return 0; //@line 77445
}
function _mem_blk_get_uint16_null($ext, $addr) {
 $ext = $ext | 0;
 $addr = $addr | 0;
 return 0; //@line 77455
}
function _mem_blk_get_uint32_null($ext, $addr) {
 $ext = $ext | 0;
 $addr = $addr | 0;
 return 0; //@line 77465
}
function _mem_blk_set_uint8_null($ext, $addr, $val) {
 $ext = $ext | 0;
 $addr = $addr | 0;
 $val = $val | 0;
 return;
}
function _mem_blk_set_uint16_null($ext, $addr, $val) {
 $ext = $ext | 0;
 $addr = $addr | 0;
 $val = $val | 0;
 return;
}
function _mem_blk_set_uint32_null($ext, $addr, $val) {
 $ext = $ext | 0;
 $addr = $addr | 0;
 $val = $val | 0;
 return;
}
function _mem_blk_set_fct($blk, $ext, $g8, $g16, $g32, $s8, $s16, $s32) {
 $blk = $blk | 0;
 $ext = $ext | 0;
 $g8 = $g8 | 0;
 $g16 = $g16 | 0;
 $g32 = $g32 | 0;
 $s8 = $s8 | 0;
 $s16 = $s16 | 0;
 $s32 = $s32 | 0;
 var $3 = 0, $5 = 0, $7 = 0, $9 = 0, $11 = 0, $13 = 0;
 HEAP32[$blk + 24 >> 2] = $ext; //@line 77517
 $3 = $blk | 0; //@line 77519
 HEAP32[$3 >> 2] = $g8; //@line 77520
 $5 = $blk + 4 | 0; //@line 77522
 HEAP32[$5 >> 2] = $g16; //@line 77523
 $7 = $blk + 8 | 0; //@line 77525
 HEAP32[$7 >> 2] = $g32; //@line 77526
 $9 = $blk + 12 | 0; //@line 77528
 HEAP32[$9 >> 2] = $s8; //@line 77529
 $11 = $blk + 16 | 0; //@line 77531
 HEAP32[$11 >> 2] = $s16; //@line 77532
 $13 = $blk + 20 | 0; //@line 77534
 HEAP32[$13 >> 2] = $s32; //@line 77535
 if ((HEAP32[$blk + 44 >> 2] | 0) != 0) {
  return;
 }
 if (($g8 | 0) == 0) {
  HEAP32[$3 >> 2] = 20; //@line 77547
 }
 if (($g16 | 0) == 0) {
  HEAP32[$5 >> 2] = 42; //@line 77553
 }
 if (($g32 | 0) == 0) {
  HEAP32[$7 >> 2] = 6; //@line 77559
 }
 if (($s8 | 0) == 0) {
  HEAP32[$9 >> 2] = 6; //@line 77565
 }
 if (($s16 | 0) == 0) {
  HEAP32[$11 >> 2] = 34; //@line 77571
 }
 if (($s32 | 0) != 0) {
  return;
 }
 HEAP32[$13 >> 2] = 26; //@line 77580
 return;
}
function _mem_blk_get_data($blk) {
 $blk = $blk | 0;
 return HEAP32[$blk + 44 >> 2] | 0; //@line 77595
}
function _mem_blk_set_readonly($blk, $val) {
 $blk = $blk | 0;
 $val = $val | 0;
 HEAP8[$blk + 29 | 0] = ($val | 0) != 0 | 0; //@line 77608
 return;
}
function _mem_blk_get_addr($blk) {
 $blk = $blk | 0;
 return HEAP32[$blk + 32 >> 2] | 0; //@line 77622
}
function _mem_blk_set_addr($blk, $addr) {
 $blk = $blk | 0;
 $addr = $addr | 0;
 HEAP32[$blk + 32 >> 2] = $addr; //@line 77633
 HEAP32[$blk + 36 >> 2] = $addr - 1 + (HEAP32[$blk + 40 >> 2] | 0); //@line 77639
 return;
}
function _mem_blk_get_size($blk) {
 $blk = $blk | 0;
 return HEAP32[$blk + 40 >> 2] | 0; //@line 77653
}
function _mem_blk_set_size($blk, $size) {
 $blk = $blk | 0;
 $size = $size | 0;
 HEAP32[$blk + 40 >> 2] = $size; //@line 77664
 HEAP32[$blk + 36 >> 2] = $size - 1 + (HEAP32[$blk + 32 >> 2] | 0); //@line 77670
 return;
}
function _buf_set_uint16_be($buf, $addr, $val) {
 $buf = $buf | 0;
 $addr = $addr | 0;
 $val = $val | 0;
 HEAP8[$buf + $addr | 0] = ($val & 65535) >>> 8 & 255; //@line 77686
 HEAP8[$buf + ($addr + 1) | 0] = $val & 255; //@line 77690
 return;
}
function _buf_set_uint32_be($buf, $addr, $val) {
 $buf = $buf | 0;
 $addr = $addr | 0;
 $val = $val | 0;
 HEAP8[$buf + $addr | 0] = $val >>> 24 & 255; //@line 77707
 HEAP8[$buf + ($addr + 1) | 0] = $val >>> 16 & 255; //@line 77712
 HEAP8[$buf + ($addr + 2) | 0] = $val >>> 8 & 255; //@line 77717
 HEAP8[$buf + ($addr + 3) | 0] = $val & 255; //@line 77721
 return;
}
function _mem_blk_get_uint32_be($blk, $addr) {
 $blk = $blk | 0;
 $addr = $addr | 0;
 var $2 = 0;
 $2 = HEAP32[$blk + 44 >> 2] | 0; //@line 77736
 return (((HEAPU8[$2 + $addr | 0] | 0) << 8 | (HEAPU8[$2 + ($addr + 1) | 0] | 0)) << 8 | (HEAPU8[$2 + ($addr + 2) | 0] | 0)) << 8 | (HEAPU8[$2 + ($addr + 3) | 0] | 0) | 0; //@line 77759
}
function _mem_set_fct($mem, $ext, $g8, $g16, $g32, $s8, $s16, $s32) {
 $mem = $mem | 0;
 $ext = $ext | 0;
 $g8 = $g8 | 0;
 $g16 = $g16 | 0;
 $g32 = $g32 | 0;
 $s8 = $s8 | 0;
 $s16 = $s16 | 0;
 $s32 = $s32 | 0;
 HEAP32[$mem + 24 >> 2] = $ext; //@line 77777
 HEAP32[$mem + 28 >> 2] = $g8; //@line 77780
 HEAP32[$mem + 32 >> 2] = $g16; //@line 77783
 HEAP32[$mem + 36 >> 2] = $g32; //@line 77786
 HEAP32[$mem + 40 >> 2] = $s8; //@line 77789
 HEAP32[$mem + 44 >> 2] = $s16; //@line 77792
 HEAP32[$mem + 48 >> 2] = $s32; //@line 77795
 return;
}
function _mem_get_blk($mem, $addr) {
 $mem = $mem | 0;
 $addr = $addr | 0;
 var $1 = 0, $2 = 0, $6 = 0, $20 = 0, $lst_026_i = 0, $i_025_i = 0, $26 = 0, $41 = 0, $_0_i = 0, label = 0;
 $1 = $mem + 8 | 0; //@line 77811
 $2 = HEAP32[$1 >> 2] | 0; //@line 77812
 do {
  if (($2 | 0) != 0) {
   $6 = HEAP32[$2 >> 2] | 0; //@line 77818
   if ((HEAP8[$6 + 28 | 0] | 0) == 0) {
    break;
   }
   if ((HEAP32[$6 + 32 >> 2] | 0) >>> 0 > $addr >>> 0) {
    break;
   }
   if ((HEAP32[$6 + 36 >> 2] | 0) >>> 0 < $addr >>> 0) {
    break;
   } else {
    $_0_i = $6; //@line 77840
   }
   return $_0_i | 0; //@line 77844
  }
 } while (0);
 $20 = HEAP32[$mem >> 2] | 0; //@line 77848
 if (($20 | 0) == 0) {
  $_0_i = 0; //@line 77852
  return $_0_i | 0; //@line 77855
 }
 $i_025_i = 0;
 $lst_026_i = HEAP32[$mem + 4 >> 2] | 0;
 L12270 : while (1) {
  $26 = HEAP32[$lst_026_i >> 2] | 0; //@line 77865
  do {
   if ((HEAP8[$26 + 28 | 0] | 0) != 0) {
    if ((HEAP32[$26 + 32 >> 2] | 0) >>> 0 > $addr >>> 0) {
     break;
    }
    if ((HEAP32[$26 + 36 >> 2] | 0) >>> 0 >= $addr >>> 0) {
     break L12270;
    }
   }
  } while (0);
  $41 = $i_025_i + 1 | 0; //@line 77889
  if ($41 >>> 0 < $20 >>> 0) {
   $i_025_i = $41;
   $lst_026_i = $lst_026_i + 8 | 0;
  } else {
   $_0_i = 0; //@line 77895
   label = 9832; //@line 77896
   break;
  }
 }
 if ((label | 0) == 9832) {
  return $_0_i | 0; //@line 77903
 }
 HEAP32[$1 >> 2] = $lst_026_i; //@line 77905
 $_0_i = $26; //@line 77907
 return $_0_i | 0; //@line 77910
}
function _e8530_set_params($scc, $chn) {
 $scc = $scc | 0;
 $chn = $chn | 0;
 var $5 = 0, $10 = 0, $14 = 0, $15 = 0, $19 = 0, $22 = 0, $26 = 0, $28 = 0, $_0_i36 = 0, $_ = 0, $36 = 0, $clk_0_in = 0, $clk_0 = 0, $56 = 0, $bps_0 = 0, $69 = 0;
 $5 = (HEAPU8[$scc + 4 + ($chn * 640 | 0) + 5 | 0] | 0) >>> 5 & 3; //@line 77931
 if (($5 | 0) == 3) {
  $10 = 8; //@line 77934
 } else if (($5 | 0) == 2) {
  $10 = 6; //@line 77937
 } else if (($5 | 0) == 1) {
  $10 = 7; //@line 77940
 } else if (($5 | 0) == 0) {
  $10 = 5; //@line 77942
 } else {
  $10 = 0; //@line 77945
 }
 HEAP32[$scc + 4 + ($chn * 640 | 0) + 44 >> 2] = $10; //@line 77949
 $14 = HEAPU8[$scc + 4 + ($chn * 640 | 0) + 4 | 0] | 0; //@line 77952
 $15 = $14 & 3; //@line 77953
 if (($15 | 0) == 0 | ($15 | 0) == 1) {
  $19 = $15;
 } else if (($15 | 0) == 2) {
  $19 = 0; //@line 77958
 } else if (($15 | 0) == 3) {
  $19 = 2; //@line 77961
 } else {
  $19 = 0; //@line 77964
 }
 HEAP32[$scc + 4 + ($chn * 640 | 0) + 40 >> 2] = $19; //@line 77968
 $22 = $14 >>> 2 & 3; //@line 77970
 if (($22 | 0) == 3) {
  $26 = 4; //@line 77973
 } else if (($22 | 0) == 1) {
  $26 = 2; //@line 77976
 } else if (($22 | 0) == 2) {
  $26 = 3; //@line 77979
 } else {
  $26 = 0; //@line 77981
 }
 HEAP32[$scc + 4 + ($chn * 640 | 0) + 48 >> 2] = $26; //@line 77985
 $28 = $14 >>> 6; //@line 77986
 if (($28 | 0) == 3) {
  $_0_i36 = 128; //@line 77989
 } else if (($28 | 0) == 2) {
  $_0_i36 = 64; //@line 77992
 } else if (($28 | 0) == 0) {
  $_0_i36 = 2; //@line 77994
 } else if (($28 | 0) == 1) {
  $_0_i36 = 32; //@line 77997
 } else {
  $_0_i36 = 0; //@line 78000
 }
 $_ = ($26 | 0) == 0 ? 2 : $_0_i36; //@line 78004
 $36 = HEAPU8[$scc + 4 + ($chn * 640 | 0) + 14 | 0] | 0; //@line 78007
 if (($36 & 1 | 0) == 0) {
  HEAP32[$scc + 4 + ($chn * 640 | 0) + 56 >> 2] = 16384; //@line 78013
  $bps_0 = 0; //@line 78014
 } else {
  if (($36 & 2 | 0) == 0) {
   $clk_0_in = $scc + 4 + ($chn * 640 | 0) + 76 | 0; //@line 78021
  } else {
   $clk_0_in = $scc + 1284 | 0; //@line 78025
  }
  $clk_0 = HEAP32[$clk_0_in >> 2] | 0; //@line 78028
  $56 = Math_imul(((HEAPU8[$scc + 4 + ($chn * 640 | 0) + 13 | 0] | 0) << 8 | (HEAPU8[$scc + 4 + ($chn * 640 | 0) + 12 | 0] | 0)) + 2 | 0, $_) | 0; //@line 78038
  HEAP32[$scc + 4 + ($chn * 640 | 0) + 56 >> 2] = (Math_imul($56, $10 + 1 + $26 | 0) | 0) + (($19 | 0) == 0 ? 0 : $56); //@line 78046
  $bps_0 = ($clk_0 >>> 0) / ($56 >>> 0) | 0; //@line 78049
 }
 HEAP32[$scc + 4 + ($chn * 640 | 0) + 36 >> 2] = $bps_0; //@line 78053
 $69 = HEAP32[$scc + 4 + ($chn * 640 | 0) + 636 >> 2] | 0; //@line 78055
 if (($69 | 0) == 0) {
  return;
 }
 FUNCTION_TABLE_viiiii[$69 & 3](HEAP32[$scc + 4 + ($chn * 640 | 0) + 632 >> 2] | 0, $bps_0, $19, $10, $26); //@line 78064
 return;
}
function _mem_blk_new($base, $size, $alloc) {
 $base = $base | 0;
 $size = $size | 0;
 $alloc = $alloc | 0;
 var $1 = 0, $2 = 0, $8 = 0, $15 = 0, $_0 = 0;
 $1 = _malloc(48) | 0; //@line 78081
 $2 = $1; //@line 78082
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 78086
  return $_0 | 0; //@line 78089
 }
 do {
  if (($alloc | 0) == 0) {
   HEAP32[$1 + 44 >> 2] = 0; //@line 78097
   $15 = 0; //@line 78098
  } else {
   $8 = _malloc($size + 16 | 0) | 0; //@line 78101
   HEAP32[$1 + 44 >> 2] = $8; //@line 78104
   if (($8 | 0) != 0) {
    $15 = $8; //@line 78108
    break;
   }
   _free($1); //@line 78111
   $_0 = 0; //@line 78113
   return $_0 | 0; //@line 78116
  }
 } while (0);
 _memset($1 | 0, 0, 24); //@line 78122
 HEAP32[$1 + 24 >> 2] = $1; //@line 78123
 HEAP8[$1 + 28 | 0] = 1; //@line 78125
 HEAP8[$1 + 29 | 0] = 0; //@line 78127
 HEAP8[$1 + 30 | 0] = ($15 | 0) != 0 | 0; //@line 78131
 HEAP32[$1 + 32 >> 2] = $base; //@line 78134
 HEAP32[$1 + 36 >> 2] = $base - 1 + $size; //@line 78139
 HEAP32[$1 + 40 >> 2] = $size; //@line 78142
 $_0 = $2; //@line 78144
 return $_0 | 0; //@line 78147
}
function _mem_blk_clone($blk) {
 $blk = $blk | 0;
 var $1 = 0, $4 = 0, $5 = 0, $_0 = 0;
 $1 = _malloc(48) | 0; //@line 78156
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 78160
  return $_0 | 0; //@line 78163
 }
 $4 = $1; //@line 78165
 $5 = $blk; //@line 78166
 _memcpy($1 | 0, $5 | 0, 48) | 0; //@line 78167
 HEAP8[$1 + 30 | 0] = 0; //@line 78169
 HEAP8[$1 + 28 | 0] = 1; //@line 78171
 $_0 = $4; //@line 78173
 return $_0 | 0; //@line 78176
}
function _mem_blk_clear($blk, $val) {
 $blk = $blk | 0;
 $val = $val | 0;
 var $2 = 0;
 $2 = HEAP32[$blk + 44 >> 2] | 0; //@line 78187
 if (($2 | 0) == 0) {
  return;
 }
 _memset($2 | 0, $val | 0, HEAP32[$blk + 40 >> 2] | 0); //@line 78196
 return;
}
function _mem_new() {
 var $1 = 0, $_0 = 0;
 $1 = _malloc(56) | 0; //@line 78207
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 78211
  return $_0 | 0; //@line 78214
 }
 _memset($1 | 0, 0, 52); //@line 78219
 HEAP32[$1 + 52 >> 2] = -1; //@line 78220
 $_0 = $1; //@line 78222
 return $_0 | 0; //@line 78225
}
function _mem_prt_state($mem, $fp) {
 $mem = $mem | 0;
 $fp = $fp | 0;
 var $1 = 0, $4 = 0, $i_09 = 0, $8 = 0, $10 = 0, $12 = 0, $14 = 0, $18 = 0, sp = 0;
 sp = STACKTOP; //@line 78236
 $1 = $mem | 0; //@line 78237
 if ((HEAP32[$1 >> 2] | 0) == 0) {
  STACKTOP = sp; //@line 78242
  return;
 }
 $4 = $mem + 4 | 0; //@line 78245
 $i_09 = 0; //@line 78247
 do {
  $8 = HEAP32[(HEAP32[$4 >> 2] | 0) + ($i_09 << 3) >> 2] | 0; //@line 78252
  $10 = HEAP32[$8 + 32 >> 2] | 0; //@line 78254
  $12 = HEAP32[$8 + 36 >> 2] | 0; //@line 78256
  $14 = HEAP32[$8 + 40 >> 2] | 0; //@line 78258
  $18 = (HEAP8[$8 + 29 | 0] | 0) != 0 | 0; //@line 78262
  _fprintf($fp | 0, 55544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 40 | 0, HEAP32[tempInt >> 2] = $i_09, HEAP32[tempInt + 8 >> 2] = $10, HEAP32[tempInt + 16 >> 2] = $12, HEAP32[tempInt + 24 >> 2] = $14, HEAP32[tempInt + 32 >> 2] = $18, tempInt) | 0) | 0; //@line 78263
  $i_09 = $i_09 + 1 | 0; //@line 78264
 } while ($i_09 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0);
 STACKTOP = sp; //@line 78274
 return;
}
function _mem_add_blk($mem, $blk, $del) {
 $mem = $mem | 0;
 $blk = $blk | 0;
 $del = $del | 0;
 var $3 = 0, $6 = 0, $10 = 0, $11 = 0, $14 = 0;
 if (($blk | 0) == 0) {
  return;
 }
 $3 = $mem + 4 | 0; //@line 78294
 $6 = $mem | 0; //@line 78297
 $10 = _realloc(HEAP32[$3 >> 2] | 0, (HEAP32[$6 >> 2] << 3) + 8 | 0) | 0; //@line 78301
 $11 = $10; //@line 78302
 if (($10 | 0) == 0) {
  return;
 }
 HEAP32[$3 >> 2] = $11; //@line 78309
 $14 = HEAP32[$6 >> 2] | 0; //@line 78310
 HEAP32[$6 >> 2] = $14 + 1; //@line 78312
 HEAP32[$11 + ($14 << 3) >> 2] = $blk; //@line 78314
 HEAP32[$11 + ($14 << 3) + 4 >> 2] = ($del | 0) != 0; //@line 78318
 _memset($mem + 8 | 0, 0, 16); //@line 78321
 return;
}
function _mem_rmv_blk($mem, $blk) {
 $mem = $mem | 0;
 $blk = $blk | 0;
 var $2 = 0, $3 = 0, $4 = 0, $6 = 0, $i_012 = 0, $j_011 = 0, $7 = 0, $14 = 0, $15 = 0, $16$1 = 0, $18 = 0, $j_1 = 0, $19 = 0, $j_0_lcssa = 0, $scevgep_i = 0, $scevgep4_i = 0;
 $2 = HEAP32[$mem + 4 >> 2] | 0; //@line 78338
 $3 = $mem | 0; //@line 78339
 $4 = HEAP32[$3 >> 2] | 0; //@line 78340
 if (($4 | 0) == 0) {
  $j_0_lcssa = 0; //@line 78344
  HEAP32[$3 >> 2] = $j_0_lcssa; //@line 78346
  $scevgep_i = $mem + 8 | 0; //@line 78347
  $scevgep4_i = $scevgep_i; //@line 78348
  _memset($scevgep4_i | 0, 0, 16); //@line 78349
  return;
 } else {
  $j_011 = 0;
  $i_012 = 0;
  $6 = $4;
 }
 while (1) {
  $7 = $2 + ($i_012 << 3) | 0; //@line 78359
  if ((HEAP32[$7 >> 2] | 0) == ($blk | 0)) {
   $j_1 = $j_011;
   $18 = $6;
  } else {
   $14 = $7; //@line 78369
   $15 = $2 + ($j_011 << 3) | 0; //@line 78370
   $16$1 = HEAP32[$14 + 4 >> 2] | 0; //@line 78374
   HEAP32[$15 >> 2] = HEAP32[$14 >> 2]; //@line 78376
   HEAP32[$15 + 4 >> 2] = $16$1; //@line 78378
   $j_1 = $j_011 + 1 | 0;
   $18 = HEAP32[$3 >> 2] | 0;
  }
  $19 = $i_012 + 1 | 0; //@line 78385
  if ($19 >>> 0 < $18 >>> 0) {
   $j_011 = $j_1;
   $i_012 = $19;
   $6 = $18;
  } else {
   $j_0_lcssa = $j_1; //@line 78391
   break;
  }
 }
 HEAP32[$3 >> 2] = $j_0_lcssa; //@line 78396
 $scevgep_i = $mem + 8 | 0; //@line 78397
 $scevgep4_i = $scevgep_i; //@line 78398
 _memset($scevgep4_i | 0, 0, 16); //@line 78399
 return;
}
function _mem_get_uint8($mem, $addr) {
 $mem = $mem | 0;
 $addr = $addr | 0;
 var $1 = 0, $2 = 0, $6 = 0, $20 = 0, $lst_026_i = 0, $i_025_i = 0, $26 = 0, $41 = 0, $_0_i = 0, $47 = 0, $49 = 0, $61 = 0, $_0 = 0, label = 0;
 $1 = $mem + 12 | 0; //@line 78418
 $2 = HEAP32[$1 >> 2] | 0; //@line 78419
 do {
  if (($2 | 0) == 0) {
   label = 9911; //@line 78424
  } else {
   $6 = HEAP32[$2 >> 2] | 0; //@line 78427
   if ((HEAP8[$6 + 28 | 0] | 0) == 0) {
    label = 9911; //@line 78433
    break;
   }
   if ((HEAP32[$6 + 32 >> 2] | 0) >>> 0 > $addr >>> 0) {
    label = 9911; //@line 78441
    break;
   }
   if ((HEAP32[$6 + 36 >> 2] | 0) >>> 0 < $addr >>> 0) {
    label = 9911; //@line 78449
   } else {
    $_0_i = $6; //@line 78451
    label = 9918; //@line 78452
   }
  }
 } while (0);
 L12370 : do {
  if ((label | 0) == 9911) {
   $20 = HEAP32[$mem >> 2] | 0; //@line 78459
   if (($20 | 0) == 0) {
    break;
   }
   $i_025_i = 0;
   $lst_026_i = HEAP32[$mem + 4 >> 2] | 0;
   L12373 : while (1) {
    $26 = HEAP32[$lst_026_i >> 2] | 0; //@line 78473
    do {
     if ((HEAP8[$26 + 28 | 0] | 0) != 0) {
      if ((HEAP32[$26 + 32 >> 2] | 0) >>> 0 > $addr >>> 0) {
       break;
      }
      if ((HEAP32[$26 + 36 >> 2] | 0) >>> 0 >= $addr >>> 0) {
       break L12373;
      }
     }
    } while (0);
    $41 = $i_025_i + 1 | 0; //@line 78497
    if ($41 >>> 0 < $20 >>> 0) {
     $i_025_i = $41;
     $lst_026_i = $lst_026_i + 8 | 0;
    } else {
     break L12370;
    }
   }
   HEAP32[$1 >> 2] = $lst_026_i; //@line 78506
   $_0_i = $26; //@line 78508
   label = 9918; //@line 78509
  }
 } while (0);
 do {
  if ((label | 0) == 9918) {
   if (($_0_i | 0) == 0) {
    break;
   }
   $47 = $addr - (HEAP32[$_0_i + 32 >> 2] | 0) | 0; //@line 78522
   $49 = HEAP32[$_0_i >> 2] | 0; //@line 78524
   if (($49 | 0) == 0) {
    $_0 = HEAP8[(HEAP32[$_0_i + 44 >> 2] | 0) + $47 | 0] | 0; //@line 78533
    return $_0 | 0; //@line 78536
   } else {
    $_0 = FUNCTION_TABLE_iii[$49 & 63](HEAP32[$_0_i + 24 >> 2] | 0, $47) | 0; //@line 78542
    return $_0 | 0; //@line 78545
   }
  }
 } while (0);
 $61 = HEAP32[$mem + 28 >> 2] | 0; //@line 78550
 if (($61 | 0) == 0) {
  $_0 = HEAP32[$mem + 52 >> 2] & 255; //@line 78558
  return $_0 | 0; //@line 78561
 } else {
  $_0 = FUNCTION_TABLE_iii[$61 & 63](HEAP32[$mem + 24 >> 2] | 0, $addr) | 0; //@line 78567
  return $_0 | 0; //@line 78570
 }
 return 0;
}
function _mem_get_uint16_be($mem, $addr) {
 $mem = $mem | 0;
 $addr = $addr | 0;
 var $1 = 0, $2 = 0, $6 = 0, $20 = 0, $lst_026_i = 0, $i_025_i = 0, $26 = 0, $41 = 0, $_0_i = 0, $45 = 0, $52 = 0, $59 = 0, $61 = 0, $69 = 0, $80 = 0, $_0 = 0, label = 0;
 $1 = $mem + 12 | 0; //@line 78590
 $2 = HEAP32[$1 >> 2] | 0; //@line 78591
 do {
  if (($2 | 0) == 0) {
   label = 9934; //@line 78596
  } else {
   $6 = HEAP32[$2 >> 2] | 0; //@line 78599
   if ((HEAP8[$6 + 28 | 0] | 0) == 0) {
    label = 9934; //@line 78605
    break;
   }
   if ((HEAP32[$6 + 32 >> 2] | 0) >>> 0 > $addr >>> 0) {
    label = 9934; //@line 78613
    break;
   }
   if ((HEAP32[$6 + 36 >> 2] | 0) >>> 0 < $addr >>> 0) {
    label = 9934; //@line 78621
   } else {
    $_0_i = $6; //@line 78623
    label = 9941; //@line 78624
   }
  }
 } while (0);
 L12399 : do {
  if ((label | 0) == 9934) {
   $20 = HEAP32[$mem >> 2] | 0; //@line 78631
   if (($20 | 0) == 0) {
    break;
   }
   $i_025_i = 0;
   $lst_026_i = HEAP32[$mem + 4 >> 2] | 0;
   L12402 : while (1) {
    $26 = HEAP32[$lst_026_i >> 2] | 0; //@line 78645
    do {
     if ((HEAP8[$26 + 28 | 0] | 0) != 0) {
      if ((HEAP32[$26 + 32 >> 2] | 0) >>> 0 > $addr >>> 0) {
       break;
      }
      if ((HEAP32[$26 + 36 >> 2] | 0) >>> 0 >= $addr >>> 0) {
       break L12402;
      }
     }
    } while (0);
    $41 = $i_025_i + 1 | 0; //@line 78669
    if ($41 >>> 0 < $20 >>> 0) {
     $i_025_i = $41;
     $lst_026_i = $lst_026_i + 8 | 0;
    } else {
     break L12399;
    }
   }
   HEAP32[$1 >> 2] = $lst_026_i; //@line 78678
   $_0_i = $26; //@line 78680
   label = 9941; //@line 78681
  }
 } while (0);
 do {
  if ((label | 0) == 9941) {
   if (($_0_i | 0) == 0) {
    break;
   }
   $45 = $addr + 1 | 0; //@line 78692
   if ($45 >>> 0 > (HEAP32[$_0_i + 36 >> 2] | 0) >>> 0) {
    $52 = ((_mem_get_uint8($mem, $addr) | 0) & 255) << 8; //@line 78700
    $_0 = $52 | (_mem_get_uint8($mem, $45) | 0) & 255; //@line 78705
    return $_0 | 0; //@line 78708
   }
   $59 = $addr - (HEAP32[$_0_i + 32 >> 2] | 0) | 0; //@line 78712
   $61 = HEAP32[$_0_i + 4 >> 2] | 0; //@line 78714
   if (($61 | 0) == 0) {
    $69 = HEAP32[$_0_i + 44 >> 2] | 0; //@line 78719
    $_0 = HEAPU8[$69 + $59 | 0] << 8 | HEAPU8[$69 + ($59 + 1) | 0]; //@line 78730
    return $_0 | 0; //@line 78733
   } else {
    $_0 = FUNCTION_TABLE_iii[$61 & 63](HEAP32[$_0_i + 24 >> 2] | 0, $59) | 0; //@line 78739
    return $_0 | 0; //@line 78742
   }
  }
 } while (0);
 $80 = HEAP32[$mem + 32 >> 2] | 0; //@line 78747
 if (($80 | 0) == 0) {
  $_0 = HEAP32[$mem + 52 >> 2] & 65535; //@line 78755
  return $_0 | 0; //@line 78758
 } else {
  $_0 = FUNCTION_TABLE_iii[$80 & 63](HEAP32[$mem + 24 >> 2] | 0, $addr) | 0; //@line 78764
  return $_0 | 0; //@line 78767
 }
 return 0;
}
function _mem_get_uint32_be($mem, $addr) {
 $mem = $mem | 0;
 $addr = $addr | 0;
 var $1 = 0, $2 = 0, $6 = 0, $20 = 0, $lst_026_i = 0, $i_025_i = 0, $26 = 0, $41 = 0, $_0_i = 0, $45 = 0, $52 = 0, $57 = 0, $62 = 0, $69 = 0, $71 = 0, $79 = 0, $102 = 0, $_0 = 0, label = 0;
 $1 = $mem + 12 | 0; //@line 78790
 $2 = HEAP32[$1 >> 2] | 0; //@line 78791
 do {
  if (($2 | 0) == 0) {
   label = 9960; //@line 78796
  } else {
   $6 = HEAP32[$2 >> 2] | 0; //@line 78799
   if ((HEAP8[$6 + 28 | 0] | 0) == 0) {
    label = 9960; //@line 78805
    break;
   }
   if ((HEAP32[$6 + 32 >> 2] | 0) >>> 0 > $addr >>> 0) {
    label = 9960; //@line 78813
    break;
   }
   if ((HEAP32[$6 + 36 >> 2] | 0) >>> 0 < $addr >>> 0) {
    label = 9960; //@line 78821
   } else {
    $_0_i = $6; //@line 78823
    label = 9967; //@line 78824
   }
  }
 } while (0);
 L12432 : do {
  if ((label | 0) == 9960) {
   $20 = HEAP32[$mem >> 2] | 0; //@line 78831
   if (($20 | 0) == 0) {
    break;
   }
   $i_025_i = 0;
   $lst_026_i = HEAP32[$mem + 4 >> 2] | 0;
   L12435 : while (1) {
    $26 = HEAP32[$lst_026_i >> 2] | 0; //@line 78845
    do {
     if ((HEAP8[$26 + 28 | 0] | 0) != 0) {
      if ((HEAP32[$26 + 32 >> 2] | 0) >>> 0 > $addr >>> 0) {
       break;
      }
      if ((HEAP32[$26 + 36 >> 2] | 0) >>> 0 >= $addr >>> 0) {
       break L12435;
      }
     }
    } while (0);
    $41 = $i_025_i + 1 | 0; //@line 78869
    if ($41 >>> 0 < $20 >>> 0) {
     $i_025_i = $41;
     $lst_026_i = $lst_026_i + 8 | 0;
    } else {
     break L12432;
    }
   }
   HEAP32[$1 >> 2] = $lst_026_i; //@line 78878
   $_0_i = $26; //@line 78880
   label = 9967; //@line 78881
  }
 } while (0);
 do {
  if ((label | 0) == 9967) {
   if (($_0_i | 0) == 0) {
    break;
   }
   $45 = $addr + 3 | 0; //@line 78892
   if ($45 >>> 0 > (HEAP32[$_0_i + 36 >> 2] | 0) >>> 0) {
    $52 = ((_mem_get_uint8($mem, $addr) | 0) & 255) << 24; //@line 78900
    $57 = ((_mem_get_uint8($mem, $addr + 1 | 0) | 0) & 255) << 16 | $52; //@line 78905
    $62 = $57 | ((_mem_get_uint8($mem, $addr + 2 | 0) | 0) & 255) << 8; //@line 78910
    $_0 = $62 | (_mem_get_uint8($mem, $45) | 0) & 255; //@line 78915
    return $_0 | 0; //@line 78918
   }
   $69 = $addr - (HEAP32[$_0_i + 32 >> 2] | 0) | 0; //@line 78922
   $71 = HEAP32[$_0_i + 8 >> 2] | 0; //@line 78924
   if (($71 | 0) == 0) {
    $79 = HEAP32[$_0_i + 44 >> 2] | 0; //@line 78929
    $_0 = HEAPU8[$79 + ($69 + 1) | 0] << 16 | HEAPU8[$79 + $69 | 0] << 24 | HEAPU8[$79 + ($69 + 2) | 0] << 8 | HEAPU8[$79 + ($69 + 3) | 0]; //@line 78952
    return $_0 | 0; //@line 78955
   } else {
    $_0 = FUNCTION_TABLE_iii[$71 & 63](HEAP32[$_0_i + 24 >> 2] | 0, $69) | 0; //@line 78961
    return $_0 | 0; //@line 78964
   }
  }
 } while (0);
 $102 = HEAP32[$mem + 36 >> 2] | 0; //@line 78969
 if (($102 | 0) == 0) {
  $_0 = HEAP32[$mem + 52 >> 2] | 0; //@line 78976
  return $_0 | 0; //@line 78979
 } else {
  $_0 = FUNCTION_TABLE_iii[$102 & 63](HEAP32[$mem + 24 >> 2] | 0, $addr) | 0; //@line 78985
  return $_0 | 0; //@line 78988
 }
 return 0;
}
function _mem_set_uint8_rw($mem, $addr, $val) {
 $mem = $mem | 0;
 $addr = $addr | 0;
 $val = $val | 0;
 var $1 = 0, $2 = 0, $6 = 0, $20 = 0, $lst_026_i_i = 0, $i_025_i_i = 0, $26 = 0, $41 = 0, $_0_i_i = 0, $47 = 0, $49 = 0, $59 = 0, label = 0;
 $1 = $mem + 8 | 0; //@line 15
 $2 = HEAP32[$1 >> 2] | 0; //@line 16
 do {
  if (($2 | 0) == 0) {
   label = 9986; //@line 21
  } else {
   $6 = HEAP32[$2 >> 2] | 0; //@line 24
   if ((HEAP8[$6 + 28 | 0] | 0) == 0) {
    label = 9986; //@line 30
    break;
   }
   if ((HEAP32[$6 + 32 >> 2] | 0) >>> 0 > $addr >>> 0) {
    label = 9986; //@line 38
    break;
   }
   if ((HEAP32[$6 + 36 >> 2] | 0) >>> 0 < $addr >>> 0) {
    label = 9986; //@line 46
   } else {
    $_0_i_i = $6; //@line 48
    label = 9993; //@line 49
   }
  }
 } while (0);
 L12465 : do {
  if ((label | 0) == 9986) {
   $20 = HEAP32[$mem >> 2] | 0; //@line 56
   if (($20 | 0) == 0) {
    break;
   }
   $i_025_i_i = 0;
   $lst_026_i_i = HEAP32[$mem + 4 >> 2] | 0;
   L12468 : while (1) {
    $26 = HEAP32[$lst_026_i_i >> 2] | 0; //@line 70
    do {
     if ((HEAP8[$26 + 28 | 0] | 0) != 0) {
      if ((HEAP32[$26 + 32 >> 2] | 0) >>> 0 > $addr >>> 0) {
       break;
      }
      if ((HEAP32[$26 + 36 >> 2] | 0) >>> 0 >= $addr >>> 0) {
       break L12468;
      }
     }
    } while (0);
    $41 = $i_025_i_i + 1 | 0; //@line 94
    if ($41 >>> 0 < $20 >>> 0) {
     $i_025_i_i = $41;
     $lst_026_i_i = $lst_026_i_i + 8 | 0;
    } else {
     break L12465;
    }
   }
   HEAP32[$1 >> 2] = $lst_026_i_i; //@line 103
   $_0_i_i = $26; //@line 105
   label = 9993; //@line 106
  }
 } while (0);
 do {
  if ((label | 0) == 9993) {
   if (($_0_i_i | 0) == 0) {
    break;
   }
   $47 = $addr - (HEAP32[$_0_i_i + 32 >> 2] | 0) | 0; //@line 119
   $49 = HEAP32[$_0_i_i + 12 >> 2] | 0; //@line 121
   if (($49 | 0) == 0) {
    HEAP8[(HEAP32[$_0_i_i + 44 >> 2] | 0) + $47 | 0] = $val; //@line 128
    return;
   } else {
    FUNCTION_TABLE_viii[$49 & 63](HEAP32[$_0_i_i + 24 >> 2] | 0, $47, $val); //@line 134
    return;
   }
  }
 } while (0);
 $59 = HEAP32[$mem + 40 >> 2] | 0; //@line 142
 if (($59 | 0) == 0) {
  return;
 }
 FUNCTION_TABLE_viii[$59 & 63](HEAP32[$mem + 24 >> 2] | 0, $addr, $val); //@line 151
 return;
}
function _mem_set_uint8($mem, $addr, $val) {
 $mem = $mem | 0;
 $addr = $addr | 0;
 $val = $val | 0;
 var $1 = 0, $2 = 0, $6 = 0, $20 = 0, $lst_026_i = 0, $i_025_i = 0, $26 = 0, $41 = 0, $_0_i = 0, $51 = 0, $53 = 0, $63 = 0, label = 0;
 $1 = $mem + 16 | 0; //@line 171
 $2 = HEAP32[$1 >> 2] | 0; //@line 172
 do {
  if (($2 | 0) == 0) {
   label = 10008; //@line 177
  } else {
   $6 = HEAP32[$2 >> 2] | 0; //@line 180
   if ((HEAP8[$6 + 28 | 0] | 0) == 0) {
    label = 10008; //@line 186
    break;
   }
   if ((HEAP32[$6 + 32 >> 2] | 0) >>> 0 > $addr >>> 0) {
    label = 10008; //@line 194
    break;
   }
   if ((HEAP32[$6 + 36 >> 2] | 0) >>> 0 < $addr >>> 0) {
    label = 10008; //@line 202
   } else {
    $_0_i = $6; //@line 204
    label = 10015; //@line 205
   }
  }
 } while (0);
 L12493 : do {
  if ((label | 0) == 10008) {
   $20 = HEAP32[$mem >> 2] | 0; //@line 212
   if (($20 | 0) == 0) {
    break;
   }
   $i_025_i = 0;
   $lst_026_i = HEAP32[$mem + 4 >> 2] | 0;
   L12496 : while (1) {
    $26 = HEAP32[$lst_026_i >> 2] | 0; //@line 226
    do {
     if ((HEAP8[$26 + 28 | 0] | 0) != 0) {
      if ((HEAP32[$26 + 32 >> 2] | 0) >>> 0 > $addr >>> 0) {
       break;
      }
      if ((HEAP32[$26 + 36 >> 2] | 0) >>> 0 >= $addr >>> 0) {
       break L12496;
      }
     }
    } while (0);
    $41 = $i_025_i + 1 | 0; //@line 250
    if ($41 >>> 0 < $20 >>> 0) {
     $i_025_i = $41;
     $lst_026_i = $lst_026_i + 8 | 0;
    } else {
     break L12493;
    }
   }
   HEAP32[$1 >> 2] = $lst_026_i; //@line 259
   $_0_i = $26; //@line 261
   label = 10015; //@line 262
  }
 } while (0);
 do {
  if ((label | 0) == 10015) {
   if (($_0_i | 0) == 0) {
    break;
   }
   if ((HEAP8[$_0_i + 29 | 0] | 0) != 0) {
    return;
   }
   $51 = $addr - (HEAP32[$_0_i + 32 >> 2] | 0) | 0; //@line 283
   $53 = HEAP32[$_0_i + 12 >> 2] | 0; //@line 285
   if (($53 | 0) == 0) {
    HEAP8[(HEAP32[$_0_i + 44 >> 2] | 0) + $51 | 0] = $val; //@line 292
    return;
   } else {
    FUNCTION_TABLE_viii[$53 & 63](HEAP32[$_0_i + 24 >> 2] | 0, $51, $val); //@line 298
    return;
   }
  }
 } while (0);
 $63 = HEAP32[$mem + 40 >> 2] | 0; //@line 306
 if (($63 | 0) == 0) {
  return;
 }
 FUNCTION_TABLE_viii[$63 & 63](HEAP32[$mem + 24 >> 2] | 0, $addr, $val); //@line 315
 return;
}
function _mem_set_uint16_be($mem, $addr, $val) {
 $mem = $mem | 0;
 $addr = $addr | 0;
 $val = $val | 0;
 var $1 = 0, $2 = 0, $6 = 0, $20 = 0, $lst_026_i = 0, $i_025_i = 0, $26 = 0, $41 = 0, $_0_i = 0, $45 = 0, $60 = 0, $62 = 0, $70 = 0, $78 = 0, label = 0;
 $1 = $mem + 16 | 0; //@line 337
 $2 = HEAP32[$1 >> 2] | 0; //@line 338
 do {
  if (($2 | 0) == 0) {
   label = 10032; //@line 343
  } else {
   $6 = HEAP32[$2 >> 2] | 0; //@line 346
   if ((HEAP8[$6 + 28 | 0] | 0) == 0) {
    label = 10032; //@line 352
    break;
   }
   if ((HEAP32[$6 + 32 >> 2] | 0) >>> 0 > $addr >>> 0) {
    label = 10032; //@line 360
    break;
   }
   if ((HEAP32[$6 + 36 >> 2] | 0) >>> 0 < $addr >>> 0) {
    label = 10032; //@line 368
   } else {
    $_0_i = $6; //@line 370
    label = 10039; //@line 371
   }
  }
 } while (0);
 L12524 : do {
  if ((label | 0) == 10032) {
   $20 = HEAP32[$mem >> 2] | 0; //@line 378
   if (($20 | 0) == 0) {
    break;
   }
   $i_025_i = 0;
   $lst_026_i = HEAP32[$mem + 4 >> 2] | 0;
   L12527 : while (1) {
    $26 = HEAP32[$lst_026_i >> 2] | 0; //@line 392
    do {
     if ((HEAP8[$26 + 28 | 0] | 0) != 0) {
      if ((HEAP32[$26 + 32 >> 2] | 0) >>> 0 > $addr >>> 0) {
       break;
      }
      if ((HEAP32[$26 + 36 >> 2] | 0) >>> 0 >= $addr >>> 0) {
       break L12527;
      }
     }
    } while (0);
    $41 = $i_025_i + 1 | 0; //@line 416
    if ($41 >>> 0 < $20 >>> 0) {
     $i_025_i = $41;
     $lst_026_i = $lst_026_i + 8 | 0;
    } else {
     break L12524;
    }
   }
   HEAP32[$1 >> 2] = $lst_026_i; //@line 425
   $_0_i = $26; //@line 427
   label = 10039; //@line 428
  }
 } while (0);
 do {
  if ((label | 0) == 10039) {
   if (($_0_i | 0) == 0) {
    break;
   }
   $45 = $addr + 1 | 0; //@line 439
   if ($45 >>> 0 > (HEAP32[$_0_i + 36 >> 2] | 0) >>> 0) {
    _mem_set_uint8($mem, $addr, ($val & 65535) >>> 8 & 255); //@line 447
    _mem_set_uint8($mem, $45, $val & 255); //@line 449
    return;
   }
   if ((HEAP8[$_0_i + 29 | 0] | 0) != 0) {
    return;
   }
   $60 = $addr - (HEAP32[$_0_i + 32 >> 2] | 0) | 0; //@line 464
   $62 = HEAP32[$_0_i + 16 >> 2] | 0; //@line 466
   if (($62 | 0) == 0) {
    $70 = $_0_i + 44 | 0; //@line 472
    HEAP8[(HEAP32[$70 >> 2] | 0) + $60 | 0] = ($val & 65535) >>> 8 & 255; //@line 475
    HEAP8[(HEAP32[$70 >> 2] | 0) + ($60 + 1) | 0] = $val & 255; //@line 480
    return;
   } else {
    FUNCTION_TABLE_viii[$62 & 63](HEAP32[$_0_i + 24 >> 2] | 0, $60, $val); //@line 486
    return;
   }
  }
 } while (0);
 $78 = HEAP32[$mem + 44 >> 2] | 0; //@line 494
 if (($78 | 0) == 0) {
  return;
 }
 FUNCTION_TABLE_viii[$78 & 63](HEAP32[$mem + 24 >> 2] | 0, $addr, $val); //@line 503
 return;
}
function _mem_set_uint32_be($mem, $addr, $val) {
 $mem = $mem | 0;
 $addr = $addr | 0;
 $val = $val | 0;
 var $1 = 0, $2 = 0, $6 = 0, $20 = 0, $lst_026_i = 0, $i_025_i = 0, $26 = 0, $41 = 0, $_0_i = 0, $45 = 0, $66 = 0, $68 = 0, $76 = 0, $94 = 0, label = 0;
 $1 = $mem + 16 | 0; //@line 527
 $2 = HEAP32[$1 >> 2] | 0; //@line 528
 do {
  if (($2 | 0) == 0) {
   label = 10059; //@line 533
  } else {
   $6 = HEAP32[$2 >> 2] | 0; //@line 536
   if ((HEAP8[$6 + 28 | 0] | 0) == 0) {
    label = 10059; //@line 542
    break;
   }
   if ((HEAP32[$6 + 32 >> 2] | 0) >>> 0 > $addr >>> 0) {
    label = 10059; //@line 550
    break;
   }
   if ((HEAP32[$6 + 36 >> 2] | 0) >>> 0 < $addr >>> 0) {
    label = 10059; //@line 558
   } else {
    $_0_i = $6; //@line 560
    label = 10066; //@line 561
   }
  }
 } while (0);
 L12559 : do {
  if ((label | 0) == 10059) {
   $20 = HEAP32[$mem >> 2] | 0; //@line 568
   if (($20 | 0) == 0) {
    break;
   }
   $i_025_i = 0;
   $lst_026_i = HEAP32[$mem + 4 >> 2] | 0;
   L12562 : while (1) {
    $26 = HEAP32[$lst_026_i >> 2] | 0; //@line 582
    do {
     if ((HEAP8[$26 + 28 | 0] | 0) != 0) {
      if ((HEAP32[$26 + 32 >> 2] | 0) >>> 0 > $addr >>> 0) {
       break;
      }
      if ((HEAP32[$26 + 36 >> 2] | 0) >>> 0 >= $addr >>> 0) {
       break L12562;
      }
     }
    } while (0);
    $41 = $i_025_i + 1 | 0; //@line 606
    if ($41 >>> 0 < $20 >>> 0) {
     $i_025_i = $41;
     $lst_026_i = $lst_026_i + 8 | 0;
    } else {
     break L12559;
    }
   }
   HEAP32[$1 >> 2] = $lst_026_i; //@line 615
   $_0_i = $26; //@line 617
   label = 10066; //@line 618
  }
 } while (0);
 do {
  if ((label | 0) == 10066) {
   if (($_0_i | 0) == 0) {
    break;
   }
   $45 = $addr + 3 | 0; //@line 629
   if ($45 >>> 0 > (HEAP32[$_0_i + 36 >> 2] | 0) >>> 0) {
    _mem_set_uint8($mem, $addr, $val >>> 24 & 255); //@line 637
    _mem_set_uint8($mem, $addr + 1 | 0, $val >>> 16 & 255); //@line 641
    _mem_set_uint8($mem, $addr + 2 | 0, $val >>> 8 & 255); //@line 645
    _mem_set_uint8($mem, $45, $val & 255); //@line 647
    return;
   }
   if ((HEAP8[$_0_i + 29 | 0] | 0) != 0) {
    return;
   }
   $66 = $addr - (HEAP32[$_0_i + 32 >> 2] | 0) | 0; //@line 662
   $68 = HEAP32[$_0_i + 20 >> 2] | 0; //@line 664
   if (($68 | 0) == 0) {
    $76 = $_0_i + 44 | 0; //@line 670
    HEAP8[(HEAP32[$76 >> 2] | 0) + $66 | 0] = $val >>> 24 & 255; //@line 673
    HEAP8[(HEAP32[$76 >> 2] | 0) + ($66 + 1) | 0] = $val >>> 16 & 255; //@line 679
    HEAP8[(HEAP32[$76 >> 2] | 0) + ($66 + 2) | 0] = $val >>> 8 & 255; //@line 685
    HEAP8[(HEAP32[$76 >> 2] | 0) + ($66 + 3) | 0] = $val & 255; //@line 690
    return;
   } else {
    FUNCTION_TABLE_viii[$68 & 63](HEAP32[$_0_i + 24 >> 2] | 0, $66, $val); //@line 696
    return;
   }
  }
 } while (0);
 $94 = HEAP32[$mem + 48 >> 2] | 0; //@line 704
 if (($94 | 0) == 0) {
  return;
 }
 FUNCTION_TABLE_viii[$94 & 63](HEAP32[$mem + 24 >> 2] | 0, $addr, $val); //@line 713
 return;
}
function _dsk_psi_set_encoding($fdc, $enc) {
 $fdc = $fdc | 0;
 $enc = $enc | 0;
 HEAP32[$fdc + 76 >> 2] = $enc; //@line 727
 return;
}
function _dsk_get_uint32_be($buf, $i) {
 $buf = $buf | 0;
 $i = $i | 0;
 return (((HEAPU8[$buf + $i | 0] | 0) << 8 | (HEAPU8[$buf + ($i + 1) | 0] | 0)) << 8 | (HEAPU8[$buf + ($i + 2) | 0] | 0)) << 8 | (HEAPU8[$buf + ($i + 3) | 0] | 0) | 0; //@line 763
}
function _dsk_set_uint32_be($buf, $i, $v) {
 $buf = $buf | 0;
 $i = $i | 0;
 $v = $v | 0;
 HEAP8[$buf + $i | 0] = $v >>> 24 & 255; //@line 778
 HEAP8[$buf + ($i + 1) | 0] = $v >>> 16 & 255; //@line 783
 HEAP8[$buf + ($i + 2) | 0] = $v >>> 8 & 255; //@line 788
 HEAP8[$buf + ($i + 3) | 0] = $v & 255; //@line 792
 return;
}
function _dsk_psi_read_chs($fdc, $buf, $cnt, $c, $h, $s, $phy) {
 $fdc = $fdc | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 $c = $c | 0;
 $h = $h | 0;
 $s = $s | 0;
 $phy = $phy | 0;
 var $2 = 0, $6 = 0, $10 = 0, $12 = 0, $alt_0 = 0, $16 = 0, $19 = 0, $23 = 0, $ret_0 = 0, $27 = 0, $30 = 0, $ret_0_ = 0, $ret_2 = 0, $ret_2_ = 0, $ret_4 = 0, $_0 = 0;
 $2 = HEAP32[$fdc + 68 >> 2] | 0; //@line 815
 if (($2 | 0) == 0) {
  HEAP32[$cnt >> 2] = 0; //@line 819
  $_0 = 1; //@line 821
  return $_0 | 0; //@line 824
 }
 $6 = _psi_img_get_sector($2, $c, $h, $s, $phy) | 0; //@line 826
 if (($6 | 0) == 0) {
  HEAP32[$cnt >> 2] = 0; //@line 830
  $_0 = 1; //@line 832
  return $_0 | 0; //@line 835
 }
 $10 = $6 + 20 | 0; //@line 837
 $12 = _psi_sct_get_alternate($6, HEAP32[$10 >> 2] | 0) | 0; //@line 839
 if (($12 | 0) == 0) {
  HEAP32[$10 >> 2] = 0; //@line 843
  $alt_0 = $6; //@line 845
 } else {
  $alt_0 = $12; //@line 847
 }
 $16 = HEAP32[$cnt >> 2] | 0; //@line 850
 $19 = HEAPU16[$alt_0 + 10 >> 1] | 0; //@line 853
 if ($16 >>> 0 > $19 >>> 0) {
  HEAP32[$cnt >> 2] = $19; //@line 857
  $ret_0 = 32;
  $23 = $19;
 } else {
  $ret_0 = 0;
  $23 = $16;
 }
 if (($23 | 0) != 0) {
  $27 = HEAP32[$alt_0 + 24 >> 2] | 0; //@line 869
  _memcpy($buf | 0, $27 | 0, $23) | 0; //@line 870
 }
 $30 = HEAP32[$alt_0 + 12 >> 2] | 0; //@line 874
 $ret_0_ = ($30 & 8 | 0) == 0 ? $ret_0 : $ret_0 | 2; //@line 878
 $ret_2 = ($30 & 1 | 0) == 0 ? $ret_0_ : $ret_0_ | 4; //@line 882
 $ret_2_ = ($30 & 2 | 0) == 0 ? $ret_2 : $ret_2 | 8; //@line 886
 $ret_4 = ($30 & 4 | 0) == 0 ? $ret_2_ : $ret_2_ | 16; //@line 890
 if ((HEAP32[$6 >> 2] | 0) == 0) {
  $_0 = $ret_4; //@line 896
  return $_0 | 0; //@line 899
 }
 HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 1; //@line 903
 $_0 = $ret_4; //@line 905
 return $_0 | 0; //@line 908
}
function _dsk_psi_read_tags($fdc, $buf, $cnt, $c, $h, $s, $phy) {
 $fdc = $fdc | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 $c = $c | 0;
 $h = $h | 0;
 $s = $s | 0;
 $phy = $phy | 0;
 var $2 = 0, $5 = 0, $8 = 0, $10 = 0, $alt_0 = 0, $_0 = 0;
 _memset($buf | 0, 0, $cnt | 0); //@line 924
 $2 = HEAP32[$fdc + 68 >> 2] | 0; //@line 926
 if (($2 | 0) == 0) {
  $_0 = 0; //@line 930
  return $_0 | 0; //@line 933
 }
 $5 = _psi_img_get_sector($2, $c, $h, $s, $phy) | 0; //@line 935
 if (($5 | 0) == 0) {
  $_0 = 0; //@line 939
  return $_0 | 0; //@line 942
 }
 $8 = $5 + 20 | 0; //@line 944
 $10 = _psi_sct_get_alternate($5, HEAP32[$8 >> 2] | 0) | 0; //@line 946
 if (($10 | 0) == 0) {
  HEAP32[$8 >> 2] = 0; //@line 950
  $alt_0 = $5; //@line 952
 } else {
  $alt_0 = $10; //@line 954
 }
 $_0 = _psi_sct_get_tags($alt_0, $buf, $cnt) | 0; //@line 959
 return $_0 | 0; //@line 962
}
function _dsk_psi_write_chs($fdc, $buf, $cnt, $c, $h, $s, $phy) {
 $fdc = $fdc | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 $c = $c | 0;
 $h = $h | 0;
 $s = $s | 0;
 $phy = $phy | 0;
 var $2 = 0, $10 = 0, $14 = 0, $20 = 0, $23 = 0, $27 = 0, $ret_0 = 0, $31 = 0, $35 = 0, $36 = 0, $_0 = 0;
 $2 = HEAP32[$fdc + 68 >> 2] | 0; //@line 981
 if (($2 | 0) == 0) {
  HEAP32[$cnt >> 2] = 0; //@line 985
  $_0 = 1; //@line 987
  return $_0 | 0; //@line 990
 }
 if ((HEAP8[$fdc + 56 | 0] | 0) != 0) {
  $_0 = 64; //@line 997
  return $_0 | 0; //@line 1000
 }
 $10 = _psi_img_get_sector($2, $c, $h, $s, $phy) | 0; //@line 1002
 if (($10 | 0) == 0) {
  HEAP32[$cnt >> 2] = 0; //@line 1006
  $_0 = 1; //@line 1008
  return $_0 | 0; //@line 1011
 }
 $14 = $10 + 12 | 0; //@line 1013
 if ((HEAP32[$14 >> 2] & 8 | 0) != 0) {
  $_0 = 2; //@line 1019
  return $_0 | 0; //@line 1022
 }
 HEAP8[$fdc + 72 | 0] = 1; //@line 1025
 $20 = HEAP32[$cnt >> 2] | 0; //@line 1026
 $23 = HEAPU16[$10 + 10 >> 1] | 0; //@line 1029
 if ($20 >>> 0 > $23 >>> 0) {
  HEAP32[$cnt >> 2] = $23; //@line 1033
  $ret_0 = 32;
  $27 = $23;
 } else {
  $ret_0 = 0;
  $27 = $20;
 }
 if (($27 | 0) != 0) {
  $31 = HEAP32[$10 + 24 >> 2] | 0; //@line 1045
  _memcpy($31 | 0, $buf | 0, $27) | 0; //@line 1046
 }
 HEAP32[$14 >> 2] = HEAP32[$14 >> 2] & -3; //@line 1051
 $35 = $10 | 0; //@line 1052
 $36 = HEAP32[$35 >> 2] | 0; //@line 1053
 if (($36 | 0) == 0) {
  $_0 = $ret_0; //@line 1057
  return $_0 | 0; //@line 1060
 }
 _psi_sct_del($36); //@line 1062
 HEAP32[$35 >> 2] = 0; //@line 1063
 HEAP32[$10 + 20 >> 2] = 0; //@line 1065
 $_0 = $ret_0; //@line 1067
 return $_0 | 0; //@line 1070
}
function _dsk_psi_write_tags($fdc, $buf, $cnt, $c, $h, $s, $phy) {
 $fdc = $fdc | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 $c = $c | 0;
 $h = $h | 0;
 $s = $s | 0;
 $phy = $phy | 0;
 var $2 = 0, $9 = 0, $_0 = 0;
 $2 = HEAP32[$fdc + 68 >> 2] | 0; //@line 1087
 if (($2 | 0) == 0) {
  $_0 = 0; //@line 1091
  return $_0 | 0; //@line 1094
 }
 if ((HEAP8[$fdc + 56 | 0] | 0) != 0) {
  $_0 = 0; //@line 1101
  return $_0 | 0; //@line 1104
 }
 $9 = _psi_img_get_sector($2, $c, $h, $s, $phy) | 0; //@line 1106
 if (($9 | 0) == 0) {
  $_0 = 0; //@line 1110
  return $_0 | 0; //@line 1113
 }
 HEAP8[$fdc + 72 | 0] = 1; //@line 1116
 $_0 = _psi_sct_set_tags($9, $buf, $cnt) | 0; //@line 1119
 return $_0 | 0; //@line 1122
}
function _dsk_psi_erase_disk($fdc) {
 $fdc = $fdc | 0;
 var $2 = 0, $_0 = 0;
 $2 = HEAP32[$fdc + 68 >> 2] | 0; //@line 1133
 if (($2 | 0) == 0) {
  $_0 = 1; //@line 1137
  return $_0 | 0; //@line 1140
 }
 if ((HEAP8[$fdc + 56 | 0] | 0) != 0) {
  $_0 = 1; //@line 1147
  return $_0 | 0; //@line 1150
 }
 _psi_img_erase($2); //@line 1152
 HEAP32[$fdc + 28 >> 2] = 0; //@line 1154
 HEAP8[$fdc + 72 | 0] = 1; //@line 1156
 $_0 = 0; //@line 1158
 return $_0 | 0; //@line 1161
}
function _dsk_psi_format_sector($fdc, $pc, $ph, $c, $h, $s, $cnt, $fill) {
 $fdc = $fdc | 0;
 $pc = $pc | 0;
 $ph = $ph | 0;
 $c = $c | 0;
 $h = $h | 0;
 $s = $s | 0;
 $cnt = $cnt | 0;
 $fill = $fill | 0;
 var $2 = 0, $9 = 0, $13 = 0, $22 = 0, $_0 = 0;
 $2 = HEAP32[$fdc + 68 >> 2] | 0; //@line 1180
 if (($2 | 0) == 0) {
  $_0 = 1; //@line 1184
  return $_0 | 0; //@line 1187
 }
 if ((HEAP8[$fdc + 56 | 0] | 0) != 0) {
  $_0 = 1; //@line 1194
  return $_0 | 0; //@line 1197
 }
 $9 = _psi_img_get_track($2, $pc, $ph, 1) | 0; //@line 1199
 if (($9 | 0) == 0) {
  $_0 = 1; //@line 1203
  return $_0 | 0; //@line 1206
 }
 HEAP8[$fdc + 72 | 0] = 1; //@line 1209
 $13 = _psi_sct_new($c, $h, $s, $cnt) | 0; //@line 1210
 if (($13 | 0) == 0) {
  $_0 = 1; //@line 1214
  return $_0 | 0; //@line 1217
 }
 _psi_sct_fill($13, $fill); //@line 1219
 if ((_psi_trk_add_sector($9, $13) | 0) == 0) {
  _psi_sct_set_encoding($13, HEAP32[$fdc + 76 >> 2] | 0); //@line 1226
  $22 = $fdc + 28 | 0; //@line 1227
  HEAP32[$22 >> 2] = (HEAP32[$22 >> 2] | 0) + 1; //@line 1230
  $_0 = 0; //@line 1232
  return $_0 | 0; //@line 1235
 } else {
  _psi_sct_del($13); //@line 1237
  $_0 = 1; //@line 1239
  return $_0 | 0; //@line 1242
 }
 return 0;
}
function _dsk_psi_open_fp($fp, $type, $ro) {
 $fp = $fp | 0;
 $type = $type | 0;
 $ro = $ro | 0;
 var $1 = 0, $4 = 0, $20 = 0, $27 = 0, $28 = 0, $31 = 0, $c_06_i = 0, $sct_cnt_05_i = 0, $trk_cnt_04_i = 0, $34 = 0, $36 = 0, $37 = 0, $38 = 0, $41 = 0, $t_03_i = 0, $sct_cnt_12_i = 0, $48 = 0, $49 = 0, $sct_cnt_1_lcssa_i = 0, $51 = 0, $59 = 0, $63 = 0, $_0 = 0;
 $1 = _malloc(88) | 0; //@line 1262
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 1266
  return $_0 | 0; //@line 1269
 }
 $4 = $1; //@line 1271
 _dsk_init($4, $1, 0, 0, 0, 0); //@line 1272
 _dsk_set_type($4, 6); //@line 1273
 _dsk_set_readonly($4, $ro); //@line 1274
 HEAP32[$1 + 4 >> 2] = 406; //@line 1277
 HEAP32[$1 + 8 >> 2] = 42; //@line 1280
 HEAP32[$1 + 12 >> 2] = 38; //@line 1283
 HEAP32[$1 + 20 >> 2] = 32; //@line 1286
 HEAP8[$1 + 72 | 0] = 0; //@line 1288
 HEAP32[$1 + 76 >> 2] = 2; //@line 1291
 HEAP32[$1 + 80 >> 2] = $type; //@line 1294
 HEAP32[$1 + 84 >> 2] = 0; //@line 1297
 $20 = _psi_load_fp($fp, $type) | 0; //@line 1298
 HEAP32[$1 + 68 >> 2] = $20; //@line 1301
 if (($20 | 0) == 0) {
  _dsk_psi_del($4); //@line 1305
  $_0 = 0; //@line 1307
  return $_0 | 0; //@line 1310
 }
 $27 = HEAP16[$20 >> 1] | 0; //@line 1313
 $28 = $27 & 65535; //@line 1314
 if ($27 << 16 >> 16 == 0) {
  $_0 = $4; //@line 1318
  return $_0 | 0; //@line 1321
 }
 $31 = HEAP32[$20 + 4 >> 2] | 0; //@line 1324
 $trk_cnt_04_i = 0;
 $sct_cnt_05_i = 0;
 $c_06_i = 0;
 while (1) {
  $34 = HEAP32[$31 + ($c_06_i << 2) >> 2] | 0; //@line 1332
  $36 = HEAP16[$34 + 2 >> 1] | 0; //@line 1334
  $37 = $36 & 65535; //@line 1335
  $38 = $37 + $trk_cnt_04_i | 0; //@line 1336
  if ($36 << 16 >> 16 == 0) {
   $sct_cnt_1_lcssa_i = $sct_cnt_05_i; //@line 1340
  } else {
   $41 = HEAP32[$34 + 4 >> 2] | 0; //@line 1343
   $sct_cnt_12_i = $sct_cnt_05_i;
   $t_03_i = 0;
   while (1) {
    $48 = (HEAPU16[(HEAP32[$41 + ($t_03_i << 2) >> 2] | 0) + 2 >> 1] | 0) + $sct_cnt_12_i | 0; //@line 1354
    $49 = $t_03_i + 1 | 0; //@line 1355
    if ($49 >>> 0 < $37 >>> 0) {
     $sct_cnt_12_i = $48;
     $t_03_i = $49;
    } else {
     $sct_cnt_1_lcssa_i = $48; //@line 1361
     break;
    }
   }
  }
  $51 = $c_06_i + 1 | 0; //@line 1367
  if ($51 >>> 0 < $28 >>> 0) {
   $trk_cnt_04_i = $38;
   $sct_cnt_05_i = $sct_cnt_1_lcssa_i;
   $c_06_i = $51;
  } else {
   break;
  }
 }
 if (($38 | 0) == 0 | ($sct_cnt_1_lcssa_i | 0) == 0) {
  $_0 = $4; //@line 1381
  return $_0 | 0; //@line 1384
 }
 $59 = ((((($38 >>> 0) / ($28 >>> 0) | 0) >>> 1) + $38 | 0) >>> 0) / ($28 >>> 0) | 0; //@line 1389
 $63 = ((((($sct_cnt_1_lcssa_i >>> 0) / ($38 >>> 0) | 0) >>> 1) + $sct_cnt_1_lcssa_i | 0) >>> 0) / ($38 >>> 0) | 0; //@line 1393
 if ((_dsk_set_geometry($4, $sct_cnt_1_lcssa_i, $28, $59, $63) | 0) != 0) {
  $_0 = $4; //@line 1398
  return $_0 | 0; //@line 1401
 }
 _dsk_set_visible_chs($4, $28, $59, $63); //@line 1403
 $_0 = $4; //@line 1405
 return $_0 | 0; //@line 1408
}
function _dsk_psi_del($dsk) {
 $dsk = $dsk | 0;
 var $2 = 0, $7 = 0, $8 = 0, $9 = 0, $12 = 0, $17 = 0, $30 = 0, $35 = 0, $39 = 0, $40 = 0, $41 = 0, sp = 0;
 sp = STACKTOP; //@line 1420
 $2 = HEAP32[$dsk + 64 >> 2] | 0; //@line 1422
 L12714 : do {
  if ((HEAP8[$2 + 72 | 0] | 0) != 0) {
   $7 = HEAP32[_stderr >> 2] | 0; //@line 1429
   $8 = $dsk + 24 | 0; //@line 1430
   $9 = HEAP32[$8 >> 2] | 0; //@line 1431
   _fprintf($7 | 0, 42808, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $9, tempInt) | 0) | 0; //@line 1432
   $12 = $2 + 84 | 0; //@line 1434
   do {
    if ((HEAP32[$12 >> 2] | 0) != 0) {
     $17 = $2 + 68 | 0; //@line 1441
     if ((HEAP32[$17 >> 2] | 0) == 0) {
      break;
     }
     if ((_dsk_get_readonly($2) | 0) != 0) {
      break;
     }
     if ((_psi_save(HEAP32[$12 >> 2] | 0, HEAP32[$17 >> 2] | 0, HEAP32[$2 + 80 >> 2] | 0) | 0) == 0) {
      break L12714;
     }
    }
   } while (0);
   $30 = HEAP32[$8 >> 2] | 0; //@line 1468
   _fprintf($7 | 0, 39672, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $30, tempInt) | 0) | 0; //@line 1469
  }
 } while (0);
 $35 = HEAP32[$2 + 68 >> 2] | 0; //@line 1475
 if (($35 | 0) == 0) {
  $39 = $2 + 84 | 0; //@line 1479
  $40 = $39; //@line 1480
  $41 = HEAP32[$40 >> 2] | 0; //@line 1481
  _free($41); //@line 1482
  _free($2); //@line 1483
  STACKTOP = sp; //@line 1484
  return;
 }
 _psi_img_del($35); //@line 1487
 $39 = $2 + 84 | 0; //@line 1489
 $40 = $39; //@line 1490
 $41 = HEAP32[$40 >> 2] | 0; //@line 1491
 _free($41); //@line 1492
 _free($2); //@line 1493
 STACKTOP = sp; //@line 1494
 return;
}
function _dsk_psi_read($dsk, $buf, $i, $n) {
 $dsk = $dsk | 0;
 $buf = $buf | 0;
 $i = $i | 0;
 $n = $n | 0;
 var $c = 0, $h = 0, $s = 0, $cnt = 0, $2 = 0, $3 = 0, $5 = 0, $tmp_014 = 0, $_0913 = 0, $_01012 = 0, $15 = 0, $21 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 1509
 STACKTOP = STACKTOP + 32 | 0; //@line 1509
 $c = sp | 0; //@line 1510
 $h = sp + 8 | 0; //@line 1511
 $s = sp + 16 | 0; //@line 1512
 $cnt = sp + 24 | 0; //@line 1513
 $2 = HEAP32[$dsk + 64 >> 2] | 0; //@line 1515
 $3 = $2; //@line 1516
 $5 = $2 + 68 | 0; //@line 1518
 if (($n | 0) == 0) {
  $_0 = 0; //@line 1522
  STACKTOP = sp; //@line 1524
  return $_0 | 0; //@line 1525
 } else {
  $_01012 = $i;
  $_0913 = $n;
  $tmp_014 = $buf;
 }
 while (1) {
  if ((_psi_img_map_sector(HEAP32[$5 >> 2] | 0, $_01012, $c, $h, $s) | 0) != 0) {
   $_0 = 1; //@line 1538
   label = 10196; //@line 1539
   break;
  }
  HEAP32[$cnt >> 2] = 512; //@line 1542
  $15 = (_dsk_psi_read_chs($3, $tmp_014, $cnt, HEAP32[$c >> 2] | 0, HEAP32[$h >> 2] | 0, HEAP32[$s >> 2] | 0, 1) | 0) == 0; //@line 1547
  if (!($15 & (HEAP32[$cnt >> 2] | 0) == 512)) {
   $_0 = 1; //@line 1553
   label = 10195; //@line 1554
   break;
  }
  $21 = $_0913 - 1 | 0; //@line 1559
  if (($21 | 0) == 0) {
   $_0 = 0; //@line 1563
   label = 10198; //@line 1564
   break;
  } else {
   $_01012 = $_01012 + 1 | 0;
   $_0913 = $21;
   $tmp_014 = $tmp_014 + 512 | 0;
  }
 }
 if ((label | 0) == 10195) {
  STACKTOP = sp; //@line 1572
  return $_0 | 0; //@line 1573
 } else if ((label | 0) == 10196) {
  STACKTOP = sp; //@line 1577
  return $_0 | 0; //@line 1578
 } else if ((label | 0) == 10198) {
  STACKTOP = sp; //@line 1582
  return $_0 | 0; //@line 1583
 }
 return 0;
}
function _dsk_psi_write($dsk, $buf, $i, $n) {
 $dsk = $dsk | 0;
 $buf = $buf | 0;
 $i = $i | 0;
 $n = $n | 0;
 var $c = 0, $h = 0, $s = 0, $6 = 0, $8 = 0, $9 = 0, $11 = 0, $tmp_019 = 0, $_01018 = 0, $_01117 = 0, $20 = 0, $26 = 0, $29 = 0, $35 = 0, $ret_0_i14 = 0, $40 = 0, $42 = 0, $ret_0_i15 = 0, $44 = 0, $47 = 0, $48 = 0, $57 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 1602
 STACKTOP = STACKTOP + 24 | 0; //@line 1602
 $c = sp | 0; //@line 1603
 $h = sp + 8 | 0; //@line 1604
 $s = sp + 16 | 0; //@line 1605
 if ((HEAP8[$dsk + 56 | 0] | 0) != 0) {
  $_0 = 1; //@line 1611
  STACKTOP = sp; //@line 1613
  return $_0 | 0; //@line 1614
 }
 $6 = HEAP32[$dsk + 64 >> 2] | 0; //@line 1617
 $8 = $6 + 68 | 0; //@line 1619
 $9 = $6 + 56 | 0; //@line 1620
 if (($n | 0) == 0) {
  $_0 = 0; //@line 1624
  STACKTOP = sp; //@line 1626
  return $_0 | 0; //@line 1627
 }
 $11 = $6 + 72 | 0; //@line 1629
 $_01117 = $i;
 $_01018 = $n;
 $tmp_019 = $buf;
 while (1) {
  if ((_psi_img_map_sector(HEAP32[$8 >> 2] | 0, $_01117, $c, $h, $s) | 0) != 0) {
   $_0 = 1; //@line 1641
   label = 10222; //@line 1642
   break;
  }
  $20 = HEAP32[$8 >> 2] | 0; //@line 1648
  if (($20 | 0) == 0) {
   $_0 = 1; //@line 1652
   label = 10218; //@line 1653
   break;
  }
  if ((HEAP8[$9] | 0) != 0) {
   $_0 = 1; //@line 1660
   label = 10221; //@line 1661
   break;
  }
  $26 = _psi_img_get_sector($20, HEAP32[$c >> 2] | 0, HEAP32[$h >> 2] | 0, HEAP32[$s >> 2] | 0, 1) | 0; //@line 1664
  if (($26 | 0) == 0) {
   $_0 = 1; //@line 1668
   label = 10216; //@line 1669
   break;
  }
  $29 = $26 + 12 | 0; //@line 1672
  if ((HEAP32[$29 >> 2] & 8 | 0) != 0) {
   $_0 = 1; //@line 1678
   label = 10219; //@line 1679
   break;
  }
  HEAP8[$11] = 1; //@line 1682
  $35 = HEAP16[$26 + 10 >> 1] | 0; //@line 1684
  if (($35 & 65535) < 512) {
   if ($35 << 16 >> 16 == 0) {
    $44 = 0;
    $ret_0_i15 = 32;
   } else {
    $40 = $35 & 65535;
    $ret_0_i14 = 32;
    label = 10209; //@line 1695
   }
  } else {
   $40 = 512;
   $ret_0_i14 = 0;
   label = 10209; //@line 1699
  }
  if ((label | 0) == 10209) {
   label = 0; //@line 1702
   $42 = HEAP32[$26 + 24 >> 2] | 0; //@line 1706
   _memcpy($42 | 0, $tmp_019 | 0, $40) | 0; //@line 1707
   $44 = $40;
   $ret_0_i15 = $ret_0_i14;
  }
  HEAP32[$29 >> 2] = HEAP32[$29 >> 2] & -3; //@line 1715
  $47 = $26 | 0; //@line 1716
  $48 = HEAP32[$47 >> 2] | 0; //@line 1717
  if (($48 | 0) != 0) {
   _psi_sct_del($48); //@line 1721
   HEAP32[$47 >> 2] = 0; //@line 1722
   HEAP32[$26 + 20 >> 2] = 0; //@line 1724
  }
  if (!(($ret_0_i15 | 0) == 0 & ($44 | 0) == 512)) {
   $_0 = 1; //@line 1732
   label = 10215; //@line 1733
   break;
  }
  $57 = $_01018 - 1 | 0; //@line 1738
  if (($57 | 0) == 0) {
   $_0 = 0; //@line 1742
   label = 10217; //@line 1743
   break;
  } else {
   $_01117 = $_01117 + 1 | 0;
   $_01018 = $57;
   $tmp_019 = $tmp_019 + 512 | 0;
  }
 }
 if ((label | 0) == 10217) {
  STACKTOP = sp; //@line 1751
  return $_0 | 0; //@line 1752
 } else if ((label | 0) == 10219) {
  STACKTOP = sp; //@line 1756
  return $_0 | 0; //@line 1757
 } else if ((label | 0) == 10221) {
  STACKTOP = sp; //@line 1761
  return $_0 | 0; //@line 1762
 } else if ((label | 0) == 10216) {
  STACKTOP = sp; //@line 1766
  return $_0 | 0; //@line 1767
 } else if ((label | 0) == 10215) {
  STACKTOP = sp; //@line 1771
  return $_0 | 0; //@line 1772
 } else if ((label | 0) == 10222) {
  STACKTOP = sp; //@line 1776
  return $_0 | 0; //@line 1777
 } else if ((label | 0) == 10218) {
  STACKTOP = sp; //@line 1781
  return $_0 | 0; //@line 1782
 }
 return 0;
}
function _dsk_psi_set_msg($dsk, $msg, $val) {
 $dsk = $dsk | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 var $2 = 0, $7 = 0, $12 = 0, $_0 = 0;
 $2 = HEAP32[$dsk + 64 >> 2] | 0; //@line 1797
 if ((_strcmp($msg | 0, 46328) | 0) != 0) {
  $_0 = 1; //@line 1802
  return $_0 | 0; //@line 1805
 }
 $7 = $2 + 84 | 0; //@line 1808
 if ((HEAP32[$7 >> 2] | 0) == 0) {
  $_0 = 1; //@line 1813
  return $_0 | 0; //@line 1816
 }
 $12 = $2 + 68 | 0; //@line 1819
 if ((HEAP32[$12 >> 2] | 0) == 0) {
  $_0 = 1; //@line 1824
  return $_0 | 0; //@line 1827
 }
 if ((_dsk_get_readonly($2) | 0) != 0) {
  $_0 = 1; //@line 1834
  return $_0 | 0; //@line 1837
 }
 if ((_psi_save(HEAP32[$7 >> 2] | 0, HEAP32[$12 >> 2] | 0, HEAP32[$2 + 80 >> 2] | 0) | 0) != 0) {
  $_0 = 1; //@line 1848
  return $_0 | 0; //@line 1851
 }
 HEAP8[$2 + 72 | 0] = 0; //@line 1854
 $_0 = 0; //@line 1856
 return $_0 | 0; //@line 1859
}
function _dsk_psi_open($fname, $type, $ro) {
 $fname = $fname | 0;
 $type = $type | 0;
 $ro = $ro | 0;
 var $3 = 0, $6 = 0, $_02224 = 0, $12 = 0, $_023 = 0, $fp_0 = 0, $fp_027 = 0, $_02326 = 0, $18 = 0, $23 = 0, $26 = 0, $_0 = 0, label = 0;
 do {
  if (($type | 0) == 0) {
   $3 = _psi_probe($fname) | 0; //@line 1877
   if (($3 | 0) != 0) {
    $_02224 = $3; //@line 1881
    break;
   }
   $6 = _psi_guess_type($fname) | 0; //@line 1884
   if (($6 | 0) == 0) {
    $_0 = 0; //@line 1888
   } else {
    $_02224 = $6; //@line 1890
    break;
   }
   return $_0 | 0; //@line 1895
  } else {
   $_02224 = $type; //@line 1897
  }
 } while (0);
 do {
  if (($ro | 0) == 0) {
   $12 = _fopen($fname | 0, 56912) | 0; //@line 1905
   if (($12 | 0) != 0) {
    $_02326 = 0;
    $fp_027 = $12;
    break;
   }
   $fp_0 = _fopen($fname | 0, 55344) | 0;
   $_023 = 1;
   label = 10244; //@line 1915
  } else {
   $fp_0 = _fopen($fname | 0, 55344) | 0;
   $_023 = $ro;
   label = 10244; //@line 1920
  }
 } while (0);
 do {
  if ((label | 0) == 10244) {
   if (($fp_0 | 0) == 0) {
    $_0 = 0; //@line 1930
   } else {
    $_02326 = $_023;
    $fp_027 = $fp_0;
    break;
   }
   return $_0 | 0; //@line 1937
  }
 } while (0);
 $18 = _dsk_psi_open_fp($fp_027, $_02224, $_02326) | 0; //@line 1942
 _fclose($fp_027 | 0) | 0; //@line 1943
 if (($18 | 0) == 0) {
  $_0 = 0; //@line 1947
  return $_0 | 0; //@line 1950
 }
 $23 = HEAP32[$18 + 64 >> 2] | 0; //@line 1953
 $26 = _malloc((_strlen($fname | 0) | 0) + 1 | 0) | 0; //@line 1956
 HEAP32[$23 + 84 >> 2] = $26; //@line 1959
 if (($26 | 0) != 0) {
  _strcpy($26 | 0, $fname | 0) | 0; //@line 1963
 }
 _dsk_set_fname($18, $fname); //@line 1966
 $_0 = $18; //@line 1968
 return $_0 | 0; //@line 1971
}
function _dsk_psi_probe($fname) {
 $fname = $fname | 0;
 return _psi_probe($fname) | 0; //@line 1982
}
function _dsk_get_uint32_le($buf, $i) {
 $buf = $buf | 0;
 $i = $i | 0;
 return (((HEAPU8[$buf + ($i + 3) | 0] | 0) << 8 | (HEAPU8[$buf + ($i + 2) | 0] | 0)) << 8 | (HEAPU8[$buf + ($i + 1) | 0] | 0)) << 8 | (HEAPU8[$buf + $i | 0] | 0) | 0; //@line 2016
}
function _dsk_get_uint64_le($buf, $i) {
 $buf = $buf | 0;
 $i = $i | 0;
 var $4$0 = 0, $9$0 = 0, $14$0 = 0, $19$0 = 0, $24$0 = 0, $29$0 = 0, $34$0 = 0;
 $4$0 = HEAPU8[$buf + ($i + 7) | 0] | 0; //@line 2038
 $9$0 = $4$0 << 8 | 0 >>> 24 | (HEAPU8[$buf + ($i + 6) | 0] | 0); //@line 2047
 $14$0 = $9$0 << 8 | 0 >>> 24 | (HEAPU8[$buf + ($i + 5) | 0] | 0); //@line 2056
 $19$0 = $14$0 << 8 | 0 >>> 24 | (HEAPU8[$buf + ($i + 4) | 0] | 0); //@line 2065
 $24$0 = $19$0 << 8 | 0 >>> 24 | (HEAPU8[$buf + ($i + 3) | 0] | 0); //@line 2074
 $29$0 = $24$0 << 8 | 0 >>> 24 | (HEAPU8[$buf + ($i + 2) | 0] | 0); //@line 2083
 $34$0 = $29$0 << 8 | 0 >>> 24 | (HEAPU8[$buf + ($i + 1) | 0] | 0); //@line 2092
 return (tempRet0 = ((((((0 << 8 | $4$0 >>> 24) << 8 | $9$0 >>> 24) << 8 | $14$0 >>> 24) << 8 | $19$0 >>> 24) << 8 | $24$0 >>> 24) << 8 | $29$0 >>> 24) << 8 | $34$0 >>> 24 | 0, $34$0 << 8 | 0 >>> 24 | (HEAPU8[$buf + $i | 0] | 0)) | 0; //@line 2102
}
function _dsk_set_uint32_le($buf, $i, $v) {
 $buf = $buf | 0;
 $i = $i | 0;
 $v = $v | 0;
 HEAP8[$buf + $i | 0] = $v & 255; //@line 2116
 HEAP8[$buf + ($i + 1) | 0] = $v >>> 8 & 255; //@line 2121
 HEAP8[$buf + ($i + 2) | 0] = $v >>> 16 & 255; //@line 2126
 HEAP8[$buf + ($i + 3) | 0] = $v >>> 24 & 255; //@line 2131
 return;
}
function _dsk_set_uint64_le($buf, $i, $v$0, $v$1) {
 $buf = $buf | 0;
 $i = $i | 0;
 $v$0 = $v$0 | 0;
 $v$1 = $v$1 | 0;
 HEAP8[$buf + $i | 0] = $v$0 & 255; //@line 2153
 HEAP8[$buf + ($i + 1) | 0] = ($v$0 >>> 8 | $v$1 << 24) & 255; //@line 2160
 HEAP8[$buf + ($i + 2) | 0] = ($v$0 >>> 16 | $v$1 << 16) & 255; //@line 2167
 HEAP8[$buf + ($i + 3) | 0] = ($v$0 >>> 24 | $v$1 << 8) & 255; //@line 2174
 HEAP8[$buf + ($i + 4) | 0] = $v$1 & 255; //@line 2181
 HEAP8[$buf + ($i + 5) | 0] = ($v$1 >>> 8 | 0 << 24) & 255; //@line 2188
 HEAP8[$buf + ($i + 6) | 0] = ($v$1 >>> 16 | 0 << 16) & 255; //@line 2195
 HEAP8[$buf + ($i + 7) | 0] = ($v$1 >>> 24 | 0 << 8) & 255; //@line 2202
 return;
}
function _dsk_set_drive($dsk, $d) {
 $dsk = $dsk | 0;
 $d = $d | 0;
 HEAP32[$dsk + 24 >> 2] = $d; //@line 2215
 return;
}
function _dsk_get_type($dsk) {
 $dsk = $dsk | 0;
 return HEAP32[$dsk >> 2] | 0; //@line 2229
}
function _dsk_set_type($dsk, $type) {
 $dsk = $dsk | 0;
 $type = $type | 0;
 HEAP32[$dsk >> 2] = $type; //@line 2240
 return;
}
function _dsk_get_readonly($dsk) {
 $dsk = $dsk | 0;
 return (HEAP8[$dsk + 56 | 0] | 0) != 0 | 0; //@line 2256
}
function _dsk_set_readonly($dsk, $v) {
 $dsk = $dsk | 0;
 $v = $v | 0;
 HEAP8[$dsk + 56 | 0] = ($v | 0) != 0 | 0; //@line 2269
 return;
}
function _dsk_set_geometry($dsk, $n, $c, $h, $s) {
 $dsk = $dsk | 0;
 $n = $n | 0;
 $c = $c | 0;
 $h = $h | 0;
 $s = $s | 0;
 var $4 = 0, $n35 = 0, $_s = 0, $h32 = 0, $13 = 0, $_s27 = 0, $h3045 = 0, $c344244 = 0, $s24_ph = 0, $_0 = 0;
 do {
  if (($n | 0) == 0) {
   $4 = Math_imul(Math_imul($h, $c) | 0, $s) | 0; //@line 2292
   if (($4 | 0) == 0) {
    $_0 = 1; //@line 2296
   } else {
    $n35 = $4; //@line 2298
    break;
   }
   return $_0 | 0; //@line 2303
  } else {
   $n35 = $n; //@line 2305
  }
 } while (0);
 do {
  if (($c | 0) == 0) {
   $_s = ($s | 0) == 0 ? 63 : $s; //@line 2314
   $h32 = ($h | 0) == 0 ? 16 : $h; //@line 2316
   $s24_ph = $_s;
   $c344244 = ($n35 >>> 0) / ((Math_imul($_s, $h32) | 0) >>> 0) | 0;
   $h3045 = $h32;
  } else {
   $13 = ($s | 0) == 0; //@line 2323
   if (($h | 0) == 0) {
    $_s27 = $13 ? 63 : $s; //@line 2326
    $s24_ph = $_s27;
    $c344244 = $c;
    $h3045 = ($n35 >>> 0) / ((Math_imul($_s27, $c) | 0) >>> 0) | 0;
    break;
   }
   if (!$13) {
    $s24_ph = $s;
    $c344244 = $c;
    $h3045 = $h;
    break;
   }
   $s24_ph = ($n35 >>> 0) / ((Math_imul($h, $c) | 0) >>> 0) | 0;
   $c344244 = $c;
   $h3045 = $h;
  }
 } while (0);
 HEAP32[$dsk + 28 >> 2] = $n35; //@line 2348
 HEAP32[$dsk + 32 >> 2] = $c344244; //@line 2350
 HEAP32[$dsk + 36 >> 2] = $h3045; //@line 2352
 HEAP32[$dsk + 40 >> 2] = $s24_ph; //@line 2354
 $_0 = 0; //@line 2356
 return $_0 | 0; //@line 2359
}
function _dsk_set_visible_chs($dsk, $c, $h, $s) {
 $dsk = $dsk | 0;
 $c = $c | 0;
 $h = $h | 0;
 $s = $s | 0;
 HEAP32[$dsk + 44 >> 2] = $c; //@line 2372
 HEAP32[$dsk + 48 >> 2] = $h; //@line 2374
 HEAP32[$dsk + 52 >> 2] = $s; //@line 2376
 return;
}
function _dsk_get_drive($dsk) {
 $dsk = $dsk | 0;
 return HEAP32[$dsk + 24 >> 2] | 0; //@line 2390
}
function _dsk_get_block_cnt($dsk) {
 $dsk = $dsk | 0;
 return HEAP32[$dsk + 28 >> 2] | 0; //@line 2402
}
function _dsk_read($fp, $buf, $ofs$0, $ofs$1, $cnt$0, $cnt$1) {
 $fp = $fp | 0;
 $buf = $buf | 0;
 $ofs$0 = $ofs$0 | 0;
 $ofs$1 = $ofs$1 | 0;
 $cnt$0 = $cnt$0 | 0;
 $cnt$1 = $cnt$1 | 0;
 var $$etemp$0$1 = 0, $6 = 0, $7$0 = 0, $7$1 = 0, $11$0 = 0, $_0 = 0;
 $$etemp$0$1 = 0; //@line 2419
 if ($ofs$1 >>> 0 > $$etemp$0$1 >>> 0 | $ofs$1 >>> 0 == $$etemp$0$1 >>> 0 & $ofs$0 >>> 0 > 2147483647 >>> 0) {
  $_0 = 1; //@line 2423
  return $_0 | 0; //@line 2426
 }
 if ((_fseek($fp | 0, $ofs$0 | 0, 0) | 0) != 0) {
  $_0 = 1; //@line 2434
  return $_0 | 0; //@line 2437
 }
 $6 = _fread($buf | 0, 1, $cnt$0 | 0, $fp | 0) | 0; //@line 2441
 $7$0 = $6; //@line 2442
 $7$1 = 0; //@line 2443
 if (!($7$1 >>> 0 < $cnt$1 >>> 0 | $7$1 >>> 0 == $cnt$1 >>> 0 & $7$0 >>> 0 < $cnt$0 >>> 0)) {
  $_0 = 0; //@line 2447
  return $_0 | 0; //@line 2450
 }
 $11$0 = _i64Subtract($cnt$0, $cnt$1, $7$0, $7$1) | 0;
 _memset($buf + $6 | 0, 0, $11$0 | 0); //@line 2456
 $_0 = 0; //@line 2458
 return $_0 | 0; //@line 2461
}
function _dsk_write($fp, $buf, $ofs$0, $ofs$1, $cnt$0, $cnt$1) {
 $fp = $fp | 0;
 $buf = $buf | 0;
 $ofs$0 = $ofs$0 | 0;
 $ofs$1 = $ofs$1 | 0;
 $cnt$0 = $cnt$0 | 0;
 $cnt$1 = $cnt$1 | 0;
 var $$etemp$0$1 = 0, $_0 = 0;
 $$etemp$0$1 = 0; //@line 2477
 if ($ofs$1 >>> 0 > $$etemp$0$1 >>> 0 | $ofs$1 >>> 0 == $$etemp$0$1 >>> 0 & $ofs$0 >>> 0 > 2147483647 >>> 0) {
  $_0 = 1; //@line 2481
  return $_0 | 0; //@line 2484
 }
 if ((_fseek($fp | 0, $ofs$0 | 0, 0) | 0) != 0) {
  $_0 = 1; //@line 2492
  return $_0 | 0; //@line 2495
 }
 $_0 = ((_fwrite($buf | 0, 1, $cnt$0 | 0, $fp | 0) | 0) != ($cnt$0 | 0) | 0 != ($cnt$1 | 0)) & 1; //@line 2505
 return $_0 | 0; //@line 2508
}
function _dsk_get_filesize($fp, $cnt) {
 $fp = $fp | 0;
 $cnt = $cnt | 0;
 var $4 = 0, $_0 = 0;
 do {
  if ((_fseek($fp | 0, 0, 2) | 0) == 0) {
   $4 = _ftell($fp | 0) | 0; //@line 2524
   if (($4 | 0) == -1) {
    $_0 = 1; //@line 2528
    break;
   }
   HEAP32[$cnt >> 2] = $4; //@line 2534
   HEAP32[$cnt + 4 >> 2] = ($4 | 0) < 0 ? -1 : 0; //@line 2536
   $_0 = 0; //@line 2538
  } else {
   $_0 = 1; //@line 2540
  }
 } while (0);
 return $_0 | 0; //@line 2545
}
function _dsk_set_filesize($fp, $cnt$0, $cnt$1) {
 $fp = $fp | 0;
 $cnt$0 = $cnt$0 | 0;
 $cnt$1 = $cnt$1 | 0;
 _fflush($fp | 0) | 0; //@line 2556
 return (_ftruncate(_fileno($fp | 0) | 0, $cnt$0 | 0) | 0) != 0 | 0; //@line 2564
}
function _dsk_init($dsk, $ext, $n, $c, $h, $s) {
 $dsk = $dsk | 0;
 $ext = $ext | 0;
 $n = $n | 0;
 $c = $c | 0;
 $h = $h | 0;
 $s = $s | 0;
 var $5 = 0, $n51 = 0, $_s = 0, $h48 = 0, $14 = 0, $_s43 = 0, $n52 = 0, $c49 = 0, $h45 = 0, $s40 = 0, label = 0;
 _memset($dsk | 0, 0, 28); //@line 2584
 if (($n | 0) == 0) {
  $5 = Math_imul(Math_imul($h, $c) | 0, $s) | 0; //@line 2588
  if (($5 | 0) == 0) {
   $s40 = $s;
   $h45 = $h;
   $c49 = $c;
   $n52 = 0;
  } else {
   $n51 = $5; //@line 2594
   label = 10302; //@line 2595
  }
 } else {
  $n51 = $n; //@line 2598
  label = 10302; //@line 2599
 }
 do {
  if ((label | 0) == 10302) {
   if (($c | 0) == 0) {
    $_s = ($s | 0) == 0 ? 63 : $s; //@line 2608
    $h48 = ($h | 0) == 0 ? 16 : $h; //@line 2610
    $s40 = $_s;
    $h45 = $h48;
    $c49 = ($n51 >>> 0) / ((Math_imul($_s, $h48) | 0) >>> 0) | 0;
    $n52 = $n51;
    break;
   }
   $14 = ($s | 0) == 0; //@line 2618
   if (($h | 0) == 0) {
    $_s43 = $14 ? 63 : $s; //@line 2621
    $s40 = $_s43;
    $h45 = ($n51 >>> 0) / ((Math_imul($_s43, $c) | 0) >>> 0) | 0;
    $c49 = $c;
    $n52 = $n51;
    break;
   }
   if (!$14) {
    $s40 = $s;
    $h45 = $h;
    $c49 = $c;
    $n52 = $n51;
    break;
   }
   $s40 = ($n51 >>> 0) / ((Math_imul($h, $c) | 0) >>> 0) | 0;
   $h45 = $h;
   $c49 = $c;
   $n52 = $n51;
  }
 } while (0);
 HEAP32[$dsk + 28 >> 2] = $n52; //@line 2644
 HEAP32[$dsk + 32 >> 2] = $c49; //@line 2646
 HEAP32[$dsk + 36 >> 2] = $h45; //@line 2648
 HEAP32[$dsk + 40 >> 2] = $s40; //@line 2650
 HEAP32[$dsk + 44 >> 2] = $c49; //@line 2652
 HEAP32[$dsk + 48 >> 2] = $h45; //@line 2654
 HEAP32[$dsk + 52 >> 2] = $s40; //@line 2656
 HEAP8[$dsk + 56 | 0] = 0; //@line 2658
 HEAP32[$dsk + 60 >> 2] = 0; //@line 2660
 HEAP32[$dsk + 64 >> 2] = $ext; //@line 2662
 return;
}
function _dsk_del($dsk) {
 $dsk = $dsk | 0;
 var $6 = 0;
 if (($dsk | 0) == 0) {
  return;
 }
 _free(HEAP32[$dsk + 60 >> 2] | 0); //@line 2681
 $6 = HEAP32[$dsk + 4 >> 2] | 0; //@line 2683
 if (($6 | 0) == 0) {
  return;
 }
 FUNCTION_TABLE_vi[$6 & 1023]($dsk); //@line 2690
 return;
}
function _dsk_set_fname($dsk, $fname) {
 $dsk = $dsk | 0;
 $fname = $fname | 0;
 var $1 = 0, $2 = 0, $11 = 0;
 $1 = $dsk + 60 | 0; //@line 2704
 $2 = HEAP32[$1 >> 2] | 0; //@line 2705
 if (($2 | 0) != 0) {
  _free($2); //@line 2709
 }
 if (($fname | 0) == 0) {
  HEAP32[$1 >> 2] = 0; //@line 2715
  return;
 }
 $11 = _malloc((_strlen($fname | 0) | 0) + 1 | 0) | 0; //@line 2722
 HEAP32[$1 >> 2] = $11; //@line 2723
 if (($11 | 0) == 0) {
  return;
 }
 _strcpy($11 | 0, $fname | 0) | 0; //@line 2730
 return;
}
function _dsk_guess_geometry($dsk) {
 $dsk = $dsk | 0;
 var $buf_i = 0, $1 = 0, $2 = 0, $3 = 0, $s_042_i = 0, $h_041_i = 0, $i_040_i = 0, $15 = 0, $16 = 0, $27 = 0, $32 = 0, $33 = 0, $51 = 0, $57 = 0, $63 = 0, $81 = 0, $87 = 0, $88 = 0, $90 = 0, $94$0 = 0, $94$1 = 0, $96$0 = 0, $96$1 = 0, $97$0 = 0, $97$1 = 0, $98$0 = 0, $98$1 = 0, $99$0 = 0, $99$1 = 0, $101$0 = 0, $101$1 = 0, $106$0 = 0, $106$1 = 0, $107$0 = 0, $107$1 = 0, $108$0 = 0, $108$1 = 0, $109$0 = 0, $110$0 = 0, $111 = 0, $112$0 = 0, $112$1 = 0, $113$0 = 0, $113$1 = 0, $116$0 = 0, $117$0 = 0, $118$0 = 0, $119 = 0, $122 = 0, $128 = 0, $h_1_i = 0, $s_1_i = 0, $129 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $141 = 0, $n35_i_i = 0, $c344244_i_i = 0, $148 = 0, $178 = 0, $179 = 0, $187 = 0, $188 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $201 = 0, $n35_i_i13 = 0, $c344244_i_i16 = 0, $208 = 0, $chk_011_i = 0, $i_010_i = 0, $226 = 0, $230 = 0, $232 = 0, $274 = 0, $275 = 0, $283 = 0, $284 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $299 = 0, $n35_i_i22 = 0, $_s_i_i = 0, $h32_i_i = 0, $308 = 0, $_s27_i_i = 0, $h3045_i_i = 0, $c344244_i_i25 = 0, $s24_ph_i_i = 0, $319 = 0, $320 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $361 = 0, $n35_i = 0, $_s_i = 0, $h32_i = 0, $370 = 0, $_s27_i = 0, $h3045_i = 0, $c344244_i = 0, $s24_ph_i = 0, sp = 0;
 sp = STACKTOP; //@line 2791
 STACKTOP = STACKTOP + 512 | 0; //@line 2791
 $buf_i = sp | 0; //@line 2792
 $1 = $buf_i | 0; //@line 2793
 $2 = $dsk + 8 | 0; //@line 2794
 $3 = HEAP32[$2 >> 2] | 0; //@line 2795
 L12892 : do {
  if (($3 | 0) != 0) {
   if ((FUNCTION_TABLE_iiiii[$3 & 127]($dsk, $1, 0, 1) | 0) != 0) {
    break;
   }
   if ((HEAP8[$buf_i + 510 | 0] | 0) != 85) {
    break;
   }
   if ((HEAP8[$buf_i + 511 | 0] | 0) == -86) {
    $15 = 0;
    $i_040_i = 0;
    $h_041_i = 0;
    $s_042_i = 0;
   } else {
    break;
   }
   while (1) {
    $16 = $i_040_i << 4; //@line 2827
    do {
     if ((HEAP8[$buf_i + ($16 + 446) | 0] & 127) == 0) {
      $27 = HEAPU8[$buf_i + ($16 + 448) | 0] | 0; //@line 2843
      $32 = HEAP8[$buf_i + ($16 + 447) | 0] | 0; //@line 2849
      $33 = $27 & 63; //@line 2850
      $51 = ((HEAPU8[$buf_i + ($16 + 457) | 0] << 8 | HEAPU8[$buf_i + ($16 + 456) | 0]) << 8 | HEAPU8[$buf_i + ($16 + 455) | 0]) << 8 | HEAPU8[$buf_i + ($16 + 454) | 0]; //@line 2872
      $57 = HEAPU8[$buf_i + ($16 + 452) | 0] | 0; //@line 2880
      $63 = $57 & 63; //@line 2887
      $81 = ((HEAPU8[$buf_i + ($16 + 461) | 0] << 8 | HEAPU8[$buf_i + ($16 + 460) | 0]) << 8 | HEAPU8[$buf_i + ($16 + 459) | 0]) << 8 | HEAPU8[$buf_i + ($16 + 458) | 0]; //@line 2909
      if (($33 | 0) == 0 | ($63 | 0) == 0 | ($51 | 0) == 0 | ($81 | 0) == 0) {
       $s_1_i = $s_042_i;
       $h_1_i = $h_041_i;
       $128 = $15;
       break;
      }
      $87 = $33 - 1 | 0; //@line 2922
      $88 = $63 - 1 | 0; //@line 2923
      $90 = $51 - 1 + $81 | 0; //@line 2925
      if (!($51 >>> 0 > $87 >>> 0 & $90 >>> 0 > $88 >>> 0)) {
       $s_1_i = $s_042_i;
       $h_1_i = $h_041_i;
       $128 = $15;
       break;
      }
      $94$0 = $27 << 2 & 768 | HEAPU8[$buf_i + ($16 + 449) | 0]; //@line 2934
      $94$1 = 0; //@line 2935
      $96$0 = $90 - $88 | 0; //@line 2937
      $96$1 = 0; //@line 2938
      $97$0 = $57 << 2 & 768 | HEAPU8[$buf_i + ($16 + 453) | 0]; //@line 2939
      $97$1 = 0; //@line 2940
      $98$0 = HEAPU8[$buf_i + ($16 + 451) | 0] | 0; //@line 2941
      $98$1 = 0; //@line 2942
      $99$0 = ___muldi3($98$0, $98$1, $94$0, $94$1) | 0;
      $99$1 = tempRet0;
      $101$0 = ___muldi3($97$0, $97$1, $32 & 255, 0) | 0;
      $101$1 = tempRet0;
      if (($99$0 | 0) == ($101$0 | 0) & ($99$1 | 0) == ($101$1 | 0)) {
       $s_1_i = $s_042_i;
       $h_1_i = $h_041_i;
       $128 = $15;
       break;
      }
      $106$0 = ___muldi3($97$0, $97$1, $51 - $87 | 0, 0) | 0;
      $106$1 = tempRet0;
      $107$0 = ___muldi3($96$0, $96$1, $94$0, $94$1) | 0;
      $107$1 = tempRet0;
      $108$0 = _i64Subtract($99$0, $99$1, $101$0, $101$1) | 0;
      $108$1 = tempRet0;
      $109$0 = _i64Subtract($107$0, $107$1, $106$0, $106$1) | 0;
      $110$0 = ___divdi3($109$0, tempRet0, $108$0, $108$1) | 0;
      $111 = $110$0; //@line 2962
      $112$0 = $110$0 | 0; //@line 2965
      $112$1 = tempRet0 & 0; //@line 2966
      $113$0 = ___muldi3($112$0, $112$1, $97$0, $97$1) | 0;
      $113$1 = tempRet0;
      if (($113$0 | 0) == 0 & ($113$1 | 0) == 0) {
       $122 = $15; //@line 2973
      } else {
       $116$0 = ___muldi3($112$0, $112$1, $98$0, $98$1) | 0;
       $117$0 = _i64Subtract($96$0, $96$1, $116$0, tempRet0) | 0;
       $118$0 = ___divdi3($117$0, tempRet0, $113$0, $113$1) | 0;
       $119 = $118$0; //@line 2979
       if (($119 | 0) == 0) {
        $s_1_i = $s_042_i;
        $h_1_i = $h_041_i;
        $128 = 0;
        break;
       }
       if (($111 | 0) == 0) {
        $s_1_i = $s_042_i;
        $h_1_i = $h_041_i;
        $128 = $119;
        break;
       } else {
        $122 = $119; //@line 2992
       }
      }
      if (!(($h_041_i | 0) == 0 | ($h_041_i | 0) == ($122 | 0))) {
       break L12892;
      }
      if (($s_042_i | 0) == 0 | ($s_042_i | 0) == ($111 | 0)) {
       $s_1_i = $111;
       $h_1_i = $122;
       $128 = $122;
      } else {
       break L12892;
      }
     } else {
      $s_1_i = $s_042_i;
      $h_1_i = $h_041_i;
      $128 = $15;
     }
    } while (0);
    $129 = $i_040_i + 1 | 0; //@line 3019
    if ($129 >>> 0 < 4) {
     $15 = $128;
     $i_040_i = $129;
     $h_041_i = $h_1_i;
     $s_042_i = $s_1_i;
    } else {
     break;
    }
   }
   if (($h_1_i | 0) == 0 | ($s_1_i | 0) == 0) {
    break;
   }
   $135 = $dsk + 28 | 0; //@line 3035
   $136 = HEAP32[$135 >> 2] | 0; //@line 3036
   $137 = Math_imul($s_1_i, $h_1_i) | 0; //@line 3037
   $138 = ($136 >>> 0) / ($137 >>> 0) | 0; //@line 3038
   do {
    if (($136 | 0) == 0) {
     $141 = Math_imul($138, $137) | 0; //@line 3043
     if (($141 | 0) != 0) {
      $n35_i_i = $141; //@line 3047
      break;
     }
     STACKTOP = sp; //@line 3050
     return 0; //@line 3051
    } else {
     $n35_i_i = $136; //@line 3053
    }
   } while (0);
   if (($138 | 0) == 0) {
    $c344244_i_i = ($n35_i_i >>> 0) / ($137 >>> 0) | 0; //@line 3062
   } else {
    $c344244_i_i = $138; //@line 3064
   }
   HEAP32[$135 >> 2] = $n35_i_i; //@line 3067
   HEAP32[$dsk + 32 >> 2] = $c344244_i_i; //@line 3069
   HEAP32[$dsk + 36 >> 2] = $h_1_i; //@line 3071
   HEAP32[$dsk + 40 >> 2] = $s_1_i; //@line 3073
   STACKTOP = sp; //@line 3075
   return 0; //@line 3076
  }
 } while (0);
 $148 = HEAP32[$2 >> 2] | 0; //@line 3079
 do {
  if (($148 | 0) != 0) {
   if ((FUNCTION_TABLE_iiiii[$148 & 127]($dsk, $1, 0, 1) | 0) != 0) {
    break;
   }
   if ((HEAP8[$buf_i + 510 | 0] | 0) != 85) {
    break;
   }
   if ((HEAP8[$buf_i + 511 | 0] | 0) != -86) {
    break;
   }
   if ((HEAPU8[$buf_i + 12 | 0] << 8 | HEAPU8[$buf_i + 11 | 0]) << 16 >> 16 != 512) {
    break;
   }
   $178 = HEAPU8[$buf_i + 27 | 0] << 8 | HEAPU8[$buf_i + 26 | 0]; //@line 3124
   $179 = $178 & 65535; //@line 3125
   $187 = HEAPU8[$buf_i + 25 | 0] << 8 | HEAPU8[$buf_i + 24 | 0]; //@line 3133
   $188 = $187 & 65535; //@line 3134
   if ($178 << 16 >> 16 == 0 | ($178 & 65535) > 255) {
    break;
   }
   if ($187 << 16 >> 16 == 0 | ($187 & 65535) > 255) {
    break;
   }
   $195 = $dsk + 28 | 0; //@line 3149
   $196 = HEAP32[$195 >> 2] | 0; //@line 3150
   $197 = Math_imul($188, $179) | 0; //@line 3151
   $198 = ($196 >>> 0) / ($197 >>> 0) | 0; //@line 3152
   do {
    if (($196 | 0) == 0) {
     $201 = Math_imul($198, $197) | 0; //@line 3157
     if (($201 | 0) != 0) {
      $n35_i_i13 = $201; //@line 3161
      break;
     }
     STACKTOP = sp; //@line 3164
     return 0; //@line 3165
    } else {
     $n35_i_i13 = $196; //@line 3167
    }
   } while (0);
   if (($198 | 0) == 0) {
    $c344244_i_i16 = ($n35_i_i13 >>> 0) / ($197 >>> 0) | 0; //@line 3176
   } else {
    $c344244_i_i16 = $198; //@line 3178
   }
   HEAP32[$195 >> 2] = $n35_i_i13; //@line 3181
   HEAP32[$dsk + 32 >> 2] = $c344244_i_i16; //@line 3183
   HEAP32[$dsk + 36 >> 2] = $179; //@line 3185
   HEAP32[$dsk + 40 >> 2] = $188; //@line 3187
   STACKTOP = sp; //@line 3189
   return 0; //@line 3190
  }
 } while (0);
 $208 = HEAP32[$2 >> 2] | 0; //@line 3193
 do {
  if (($208 | 0) != 0) {
   if ((FUNCTION_TABLE_iiiii[$208 & 127]($dsk, $1, 0, 1) | 0) != 0) {
    break;
   }
   if ((HEAPU8[$buf_i + 508 | 0] << 8 | HEAPU8[$buf_i + 509 | 0]) << 16 >> 16 == -9538) {
    $i_010_i = 0;
    $chk_011_i = 0;
   } else {
    break;
   }
   while (1) {
    $226 = HEAPU8[$buf_i + $i_010_i | 0] << 8 ^ $chk_011_i; //@line 3226
    $230 = HEAPU8[$buf_i + ($i_010_i | 1) | 0] | 0; //@line 3230
    $232 = $i_010_i + 2 | 0; //@line 3232
    if ($232 >>> 0 < 512) {
     $i_010_i = $232;
     $chk_011_i = $226 ^ $230;
    } else {
     break;
    }
   }
   if (($226 | 0) != ($230 | 0)) {
    break;
   }
   if ((((HEAPU8[$buf_i + 128 | 0] << 8 | HEAPU8[$buf_i + 129 | 0]) << 8 | HEAPU8[$buf_i + 130 | 0]) << 8 | HEAPU8[$buf_i + 131 | 0] | 0) != 1) {
    break;
   }
   if (((HEAPU8[$buf_i + 140 | 0] << 8 | HEAPU8[$buf_i + 141 | 0]) & 65535) > 8) {
    break;
   }
   $274 = HEAPU8[$buf_i + 422 | 0] << 8 | HEAPU8[$buf_i + 423 | 0]; //@line 3289
   $275 = $274 & 65535; //@line 3290
   $283 = HEAPU8[$buf_i + 436 | 0] << 8 | HEAPU8[$buf_i + 437 | 0]; //@line 3298
   $284 = $283 & 65535; //@line 3299
   $292 = HEAPU8[$buf_i + 438 | 0] << 8 | HEAPU8[$buf_i + 439 | 0]; //@line 3307
   $293 = $292 & 65535; //@line 3308
   $294 = $dsk + 28 | 0; //@line 3309
   $295 = HEAP32[$294 >> 2] | 0; //@line 3310
   do {
    if (($295 | 0) == 0) {
     $299 = Math_imul(Math_imul($284, $275) | 0, $293) | 0; //@line 3316
     if (($299 | 0) != 0) {
      $n35_i_i22 = $299; //@line 3320
      break;
     }
     STACKTOP = sp; //@line 3323
     return 0; //@line 3324
    } else {
     $n35_i_i22 = $295; //@line 3326
    }
   } while (0);
   do {
    if ($274 << 16 >> 16 == 0) {
     $_s_i_i = $292 << 16 >> 16 == 0 ? 63 : $293; //@line 3335
     $h32_i_i = $283 << 16 >> 16 == 0 ? 16 : $284; //@line 3337
     $s24_ph_i_i = $_s_i_i;
     $c344244_i_i25 = ($n35_i_i22 >>> 0) / ((Math_imul($_s_i_i, $h32_i_i) | 0) >>> 0) | 0;
     $h3045_i_i = $h32_i_i;
    } else {
     $308 = $292 << 16 >> 16 == 0; //@line 3344
     if ($283 << 16 >> 16 == 0) {
      $_s27_i_i = $308 ? 63 : $293; //@line 3347
      $s24_ph_i_i = $_s27_i_i;
      $c344244_i_i25 = $275;
      $h3045_i_i = ($n35_i_i22 >>> 0) / ((Math_imul($_s27_i_i, $275) | 0) >>> 0) | 0;
      break;
     }
     if (!$308) {
      $s24_ph_i_i = $293;
      $c344244_i_i25 = $275;
      $h3045_i_i = $284;
      break;
     }
     $s24_ph_i_i = ($n35_i_i22 >>> 0) / ((Math_imul($284, $275) | 0) >>> 0) | 0;
     $c344244_i_i25 = $275;
     $h3045_i_i = $284;
    }
   } while (0);
   HEAP32[$294 >> 2] = $n35_i_i22; //@line 3368
   HEAP32[$dsk + 32 >> 2] = $c344244_i_i25; //@line 3370
   HEAP32[$dsk + 36 >> 2] = $h3045_i_i; //@line 3372
   HEAP32[$dsk + 40 >> 2] = $s24_ph_i_i; //@line 3374
   STACKTOP = sp; //@line 3376
   return 0; //@line 3377
  }
 } while (0);
 $319 = $dsk + 28 | 0; //@line 3380
 $320 = HEAP32[$319 >> 2] | 0; //@line 3381
 if (($320 | 0) == 1440) {
  HEAP32[$319 >> 2] = 1440; //@line 3383
  HEAP32[$dsk + 32 >> 2] = 80; //@line 3385
  HEAP32[$dsk + 36 >> 2] = 2; //@line 3387
  HEAP32[$dsk + 40 >> 2] = 9; //@line 3389
  STACKTOP = sp; //@line 3391
  return 0; //@line 3392
 } else if (($320 | 0) == 1600) {
  HEAP32[$319 >> 2] = 1600; //@line 3394
  HEAP32[$dsk + 32 >> 2] = 80; //@line 3396
  HEAP32[$dsk + 36 >> 2] = 2; //@line 3398
  HEAP32[$dsk + 40 >> 2] = 10; //@line 3400
  STACKTOP = sp; //@line 3402
  return 0; //@line 3403
 } else if (($320 | 0) == 320) {
  HEAP32[$319 >> 2] = 320; //@line 3405
  HEAP32[$dsk + 32 >> 2] = 40; //@line 3407
  HEAP32[$dsk + 36 >> 2] = 1; //@line 3409
  HEAP32[$dsk + 40 >> 2] = 8; //@line 3411
  STACKTOP = sp; //@line 3413
  return 0; //@line 3414
 } else if (($320 | 0) == 360) {
  HEAP32[$319 >> 2] = 360; //@line 3416
  HEAP32[$dsk + 32 >> 2] = 40; //@line 3418
  HEAP32[$dsk + 36 >> 2] = 1; //@line 3420
  HEAP32[$dsk + 40 >> 2] = 9; //@line 3422
  STACKTOP = sp; //@line 3424
  return 0; //@line 3425
 } else if (($320 | 0) == 640) {
  HEAP32[$319 >> 2] = 640; //@line 3427
  HEAP32[$dsk + 32 >> 2] = 40; //@line 3429
  HEAP32[$dsk + 36 >> 2] = 2; //@line 3431
  HEAP32[$dsk + 40 >> 2] = 8; //@line 3433
  STACKTOP = sp; //@line 3435
  return 0; //@line 3436
 } else if (($320 | 0) == 720) {
  HEAP32[$319 >> 2] = 720; //@line 3438
  HEAP32[$dsk + 32 >> 2] = 40; //@line 3440
  HEAP32[$dsk + 36 >> 2] = 2; //@line 3442
  HEAP32[$dsk + 40 >> 2] = 9; //@line 3444
  STACKTOP = sp; //@line 3446
  return 0; //@line 3447
 } else if (($320 | 0) == 800) {
  HEAP32[$319 >> 2] = 800; //@line 3449
  HEAP32[$dsk + 32 >> 2] = 40; //@line 3451
  HEAP32[$dsk + 36 >> 2] = 2; //@line 3453
  HEAP32[$dsk + 40 >> 2] = 10; //@line 3455
  STACKTOP = sp; //@line 3457
  return 0; //@line 3458
 } else if (($320 | 0) == 2400) {
  HEAP32[$319 >> 2] = 2400; //@line 3460
  HEAP32[$dsk + 32 >> 2] = 80; //@line 3462
  HEAP32[$dsk + 36 >> 2] = 2; //@line 3464
  HEAP32[$dsk + 40 >> 2] = 15; //@line 3466
  STACKTOP = sp; //@line 3468
  return 0; //@line 3469
 } else if (($320 | 0) == 2880) {
  HEAP32[$319 >> 2] = 2880; //@line 3471
  HEAP32[$dsk + 32 >> 2] = 80; //@line 3473
  HEAP32[$dsk + 36 >> 2] = 2; //@line 3475
  HEAP32[$dsk + 40 >> 2] = 18; //@line 3477
  STACKTOP = sp; //@line 3479
  return 0; //@line 3480
 } else if (($320 | 0) == 5760) {
  HEAP32[$319 >> 2] = 5760; //@line 3482
  HEAP32[$dsk + 32 >> 2] = 80; //@line 3484
  HEAP32[$dsk + 36 >> 2] = 2; //@line 3486
  HEAP32[$dsk + 40 >> 2] = 36; //@line 3488
  STACKTOP = sp; //@line 3490
  return 0; //@line 3491
 } else {
  $352 = $dsk + 32 | 0; //@line 3493
  $353 = HEAP32[$352 >> 2] | 0; //@line 3494
  $354 = $dsk + 36 | 0; //@line 3495
  $355 = HEAP32[$354 >> 2] | 0; //@line 3496
  $356 = $dsk + 40 | 0; //@line 3497
  $357 = HEAP32[$356 >> 2] | 0; //@line 3498
  do {
   if (($320 | 0) == 0) {
    $361 = Math_imul(Math_imul($355, $353) | 0, $357) | 0; //@line 3504
    if (($361 | 0) != 0) {
     $n35_i = $361; //@line 3508
     break;
    }
    STACKTOP = sp; //@line 3511
    return 0; //@line 3512
   } else {
    $n35_i = $320; //@line 3514
   }
  } while (0);
  do {
   if (($353 | 0) == 0) {
    $_s_i = ($357 | 0) == 0 ? 63 : $357; //@line 3523
    $h32_i = ($355 | 0) == 0 ? 16 : $355; //@line 3525
    $s24_ph_i = $_s_i;
    $c344244_i = ($n35_i >>> 0) / ((Math_imul($_s_i, $h32_i) | 0) >>> 0) | 0;
    $h3045_i = $h32_i;
   } else {
    $370 = ($357 | 0) == 0; //@line 3532
    if (($355 | 0) == 0) {
     $_s27_i = $370 ? 63 : $357; //@line 3535
     $s24_ph_i = $_s27_i;
     $c344244_i = $353;
     $h3045_i = ($n35_i >>> 0) / ((Math_imul($_s27_i, $353) | 0) >>> 0) | 0;
     break;
    }
    if (!$370) {
     $s24_ph_i = $357;
     $c344244_i = $353;
     $h3045_i = $355;
     break;
    }
    $s24_ph_i = ($n35_i >>> 0) / ((Math_imul($355, $353) | 0) >>> 0) | 0;
    $c344244_i = $353;
    $h3045_i = $355;
   }
  } while (0);
  HEAP32[$319 >> 2] = $n35_i; //@line 3556
  HEAP32[$352 >> 2] = $c344244_i; //@line 3557
  HEAP32[$354 >> 2] = $h3045_i; //@line 3558
  HEAP32[$356 >> 2] = $s24_ph_i; //@line 3559
  STACKTOP = sp; //@line 3561
  return 0; //@line 3562
 }
 return 0;
}
function _dsk_pce_get_msg($dsk, $msg, $val, $max) {
 $dsk = $dsk | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 $max = $max | 0;
 return 1; //@line 3575
}
function _dsks_rmv_disk($dsks, $dsk) {
 $dsks = $dsks | 0;
 $dsk = $dsk | 0;
 var $1 = 0, $2 = 0, $4 = 0, $5 = 0, $j_013 = 0, $i_012 = 0, $r_011 = 0, $6 = 0, $8 = 0, $14 = 0, $r_1 = 0, $j_1 = 0, $15 = 0, $j_0_lcssa = 0, $r_0_lcssa = 0;
 $1 = $dsks | 0; //@line 3587
 $2 = HEAP32[$1 >> 2] | 0; //@line 3588
 if (($2 | 0) == 0) {
  $r_0_lcssa = 0;
  $j_0_lcssa = 0;
  HEAP32[$1 >> 2] = $j_0_lcssa; //@line 3595
  return $r_0_lcssa | 0; //@line 3597
 }
 $4 = $dsks + 4 | 0; //@line 3599
 $r_011 = 0;
 $i_012 = 0;
 $j_013 = 0;
 $5 = $2;
 while (1) {
  $6 = HEAP32[$4 >> 2] | 0; //@line 3607
  $8 = HEAP32[$6 + ($i_012 << 2) >> 2] | 0; //@line 3609
  if (($8 | 0) == ($dsk | 0)) {
   $j_1 = $j_013;
   $r_1 = 1;
   $14 = $5;
  } else {
   HEAP32[$6 + ($j_013 << 2) >> 2] = $8; //@line 3616
   $j_1 = $j_013 + 1 | 0;
   $r_1 = $r_011;
   $14 = HEAP32[$1 >> 2] | 0;
  }
  $15 = $i_012 + 1 | 0; //@line 3625
  if ($15 >>> 0 < $14 >>> 0) {
   $r_011 = $r_1;
   $i_012 = $15;
   $j_013 = $j_1;
   $5 = $14;
  } else {
   $r_0_lcssa = $r_1;
   $j_0_lcssa = $j_1;
   break;
  }
 }
 HEAP32[$1 >> 2] = $j_0_lcssa; //@line 3637
 return $r_0_lcssa | 0; //@line 3639
}
function _dsks_get_disk($dsks, $drive) {
 $dsks = $dsks | 0;
 $drive = $drive | 0;
 var $1 = 0, $3 = 0, $i_0 = 0, $9 = 0, $_0 = 0, label = 0;
 $1 = $dsks + 4 | 0; //@line 3650
 $3 = HEAP32[$dsks >> 2] | 0; //@line 3652
 $i_0 = 0; //@line 3654
 while (1) {
  if ($i_0 >>> 0 >= $3 >>> 0) {
   $_0 = 0; //@line 3660
   label = 10427; //@line 3661
   break;
  }
  $9 = HEAP32[(HEAP32[$1 >> 2] | 0) + ($i_0 << 2) >> 2] | 0; //@line 3666
  if ((HEAP32[$9 + 24 >> 2] | 0) == ($drive | 0)) {
   $_0 = $9; //@line 3673
   label = 10426; //@line 3674
   break;
  } else {
   $i_0 = $i_0 + 1 | 0; //@line 3677
  }
 }
 if ((label | 0) == 10426) {
  return $_0 | 0; //@line 3683
 } else if ((label | 0) == 10427) {
  return $_0 | 0; //@line 3688
 }
 return 0;
}
function _dsk_auto_open($fname, $ofs$0, $ofs$1, $ro) {
 $fname = $fname | 0;
 $ofs$0 = $ofs$0 | 0;
 $ofs$1 = $ofs$1 | 0;
 $ro = $ro | 0;
 var $16 = 0, $21 = 0, $_0 = 0;
 do {
  if ((_dsk_pce_probe($fname) | 0) == 0) {
   if ((_dsk_qed_probe($fname) | 0) != 0) {
    $_0 = _dsk_qed_open($fname, $ro) | 0; //@line 3713
    break;
   }
   if ((_dsk_dosemu_probe($fname) | 0) != 0) {
    $_0 = _dsk_dosemu_open($fname, $ro) | 0; //@line 3722
    break;
   }
   $16 = _dsk_psi_probe($fname) | 0; //@line 3725
   if (($16 | 0) != 0) {
    $_0 = _dsk_psi_open($fname, $16, $ro) | 0; //@line 3731
    break;
   }
   $21 = _psi_guess_type($fname) | 0; //@line 3734
   if (($21 | 0) == 12 | ($21 | 0) == 0) {
    $_0 = _dsk_img_open($fname, $ofs$0, $ofs$1, $ro) | 0; //@line 3738
    break;
   } else {
    $_0 = _dsk_psi_open($fname, $21, $ro) | 0; //@line 3743
    break;
   }
  } else {
   $_0 = _dsk_pce_open($fname, $ro) | 0; //@line 3749
  }
 } while (0);
 return $_0 | 0; //@line 3754
}
function _dsk_read_lba($dsk, $buf, $i, $n) {
 $dsk = $dsk | 0;
 $buf = $buf | 0;
 $i = $i | 0;
 $n = $n | 0;
 var $2 = 0, $_0 = 0;
 $2 = HEAP32[$dsk + 8 >> 2] | 0; //@line 3767
 if (($2 | 0) == 0) {
  $_0 = 1; //@line 3771
  return $_0 | 0; //@line 3774
 }
 $_0 = FUNCTION_TABLE_iiiii[$2 & 127]($dsk, $buf, $i, $n) | 0; //@line 3778
 return $_0 | 0; //@line 3781
}
function _dsk_write_lba($dsk, $buf, $i, $n) {
 $dsk = $dsk | 0;
 $buf = $buf | 0;
 $i = $i | 0;
 $n = $n | 0;
 var $2 = 0, $_0 = 0;
 $2 = HEAP32[$dsk + 12 >> 2] | 0; //@line 3794
 if (($2 | 0) == 0) {
  $_0 = 1; //@line 3798
  return $_0 | 0; //@line 3801
 }
 $_0 = FUNCTION_TABLE_iiiii[$2 & 127]($dsk, $buf, $i, $n) | 0; //@line 3805
 return $_0 | 0; //@line 3808
}
function _dsks_new() {
 var $1 = 0, $_0 = 0;
 $1 = _malloc(8) | 0; //@line 3816
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 3820
  return $_0 | 0; //@line 3823
 }
 HEAP32[$1 >> 2] = 0; //@line 3827
 HEAP32[$1 + 4 >> 2] = 0; //@line 3830
 $_0 = $1; //@line 3832
 return $_0 | 0; //@line 3835
}
function _dsks_add_disk($dsks, $dsk) {
 $dsks = $dsks | 0;
 $dsk = $dsk | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $i_0 = 0, $17 = 0, $21 = 0, $22 = 0, $_0 = 0, label = 0;
 $1 = $dsks | 0; //@line 3847
 $2 = HEAP32[$1 >> 2] | 0; //@line 3848
 $3 = $dsks + 4 | 0; //@line 3849
 $4 = $dsk + 24 | 0; //@line 3850
 $i_0 = 0; //@line 3852
 while (1) {
  if ($i_0 >>> 0 >= $2 >>> 0) {
   break;
  }
  if ((HEAP32[(HEAP32[(HEAP32[$3 >> 2] | 0) + ($i_0 << 2) >> 2] | 0) + 24 >> 2] | 0) == (HEAP32[$4 >> 2] | 0)) {
   $_0 = 1; //@line 3870
   label = 10463; //@line 3871
   break;
  } else {
   $i_0 = $i_0 + 1 | 0; //@line 3874
  }
 }
 if ((label | 0) == 10463) {
  return $_0 | 0; //@line 3880
 }
 $17 = $2 + 1 | 0; //@line 3882
 $21 = _realloc(HEAP32[$3 >> 2] | 0, $17 << 2) | 0; //@line 3886
 $22 = $21; //@line 3887
 if (($21 | 0) == 0) {
  $_0 = 1; //@line 3891
  return $_0 | 0; //@line 3894
 }
 HEAP32[$22 + (HEAP32[$1 >> 2] << 2) >> 2] = $dsk; //@line 3898
 HEAP32[$1 >> 2] = $17; //@line 3899
 HEAP32[$3 >> 2] = $22; //@line 3900
 $_0 = 0; //@line 3902
 return $_0 | 0; //@line 3905
}
function _dsks_commit($dsks) {
 $dsks = $dsks | 0;
 var $1 = 0, $2 = 0, $4 = 0, $5 = 0, $r_07 = 0, $i_06 = 0, $8 = 0, $10 = 0, $r_0_ = 0, $15 = 0, $r_1 = 0, $16 = 0, $r_0_lcssa = 0;
 $1 = $dsks | 0; //@line 3916
 $2 = HEAP32[$1 >> 2] | 0; //@line 3917
 if (($2 | 0) == 0) {
  $r_0_lcssa = 0; //@line 3921
  return $r_0_lcssa | 0; //@line 3924
 }
 $4 = $dsks + 4 | 0; //@line 3926
 $i_06 = 0;
 $r_07 = 0;
 $5 = $2;
 while (1) {
  $8 = HEAP32[(HEAP32[$4 >> 2] | 0) + ($i_06 << 2) >> 2] | 0; //@line 3935
  $10 = HEAP32[$8 + 20 >> 2] | 0; //@line 3937
  if (($10 | 0) == 0) {
   $r_1 = $r_07;
   $15 = $5;
  } else {
   $r_0_ = (FUNCTION_TABLE_iiii[$10 & 127]($8, 55144, 62904) | 0) == 0 ? $r_07 : 1; //@line 3945
   $r_1 = $r_0_;
   $15 = HEAP32[$1 >> 2] | 0;
  }
  $16 = $i_06 + 1 | 0; //@line 3952
  if ($16 >>> 0 < $15 >>> 0) {
   $i_06 = $16;
   $r_07 = $r_1;
   $5 = $15;
  } else {
   $r_0_lcssa = $r_1; //@line 3958
   break;
  }
 }
 return $r_0_lcssa | 0; //@line 3964
}
function _dsks_set_msg($dsks, $drv, $msg, $val) {
 $dsks = $dsks | 0;
 $drv = $drv | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 var $1 = 0, $3 = 0, $i_0_i = 0, $9 = 0, $17 = 0, $_0 = 0, label = 0;
 $1 = $dsks + 4 | 0; //@line 3978
 $3 = HEAP32[$dsks >> 2] | 0; //@line 3980
 $i_0_i = 0; //@line 3982
 while (1) {
  if ($i_0_i >>> 0 >= $3 >>> 0) {
   $_0 = 1; //@line 3988
   label = 10479; //@line 3989
   break;
  }
  $9 = HEAP32[(HEAP32[$1 >> 2] | 0) + ($i_0_i << 2) >> 2] | 0; //@line 3994
  if ((HEAP32[$9 + 24 >> 2] | 0) == ($drv | 0)) {
   break;
  } else {
   $i_0_i = $i_0_i + 1 | 0; //@line 4003
  }
 }
 if ((label | 0) == 10479) {
  return $_0 | 0; //@line 4009
 }
 if (($9 | 0) == 0) {
  $_0 = 1; //@line 4014
  return $_0 | 0; //@line 4017
 }
 $17 = HEAP32[$9 + 20 >> 2] | 0; //@line 4020
 if (($17 | 0) == 0) {
  $_0 = 1; //@line 4024
  return $_0 | 0; //@line 4027
 }
 $_0 = FUNCTION_TABLE_iiii[$17 & 127]($9, $msg, ($val | 0) == 0 ? 62904 : $val) | 0; //@line 4033
 return $_0 | 0; //@line 4036
}
function _dsk_dosemu_open_fp($fp, $ro) {
 $fp = $fp | 0;
 $ro = $ro | 0;
 var $1 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $15 = 0, $18 = 0, $26 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 4049
 STACKTOP = STACKTOP + 32 | 0; //@line 4049
 $1 = sp | 0; //@line 4051
 if ((_dsk_read($fp, $1, 0, 0, 23, 0) | 0) != 0) {
  $_0 = 0; //@line 4060
  STACKTOP = sp; //@line 4062
  return $_0 | 0; //@line 4063
 }
 if ((_memcmp($1 | 0, 54912, 7) | 0) != 0) {
  $_0 = 0; //@line 4069
  STACKTOP = sp; //@line 4071
  return $_0 | 0; //@line 4072
 }
 $8 = _dsk_get_uint32_le($1, 15) | 0; //@line 4074
 $9 = _dsk_get_uint32_le($1, 7) | 0; //@line 4075
 $10 = _dsk_get_uint32_le($1, 11) | 0; //@line 4076
 $11 = _dsk_get_uint32_le($1, 19) | 0; //@line 4077
 if ($11 >>> 0 < 23) {
  $_0 = 0; //@line 4083
  STACKTOP = sp; //@line 4085
  return $_0 | 0; //@line 4086
 }
 $15 = _malloc(80) | 0; //@line 4088
 if (($15 | 0) == 0) {
  $_0 = 0; //@line 4092
  STACKTOP = sp; //@line 4094
  return $_0 | 0; //@line 4095
 }
 $18 = $15; //@line 4097
 _dsk_init($18, $15, 0, $8, $9, $10); //@line 4098
 _dsk_set_type($18, 4); //@line 4099
 _dsk_set_readonly($18, $ro); //@line 4100
 HEAP32[$15 + 4 >> 2] = 380; //@line 4103
 HEAP32[$15 + 8 >> 2] = 72; //@line 4106
 HEAP32[$15 + 12 >> 2] = 68; //@line 4109
 $26 = $15 + 72 | 0; //@line 4111
 HEAP32[$26 >> 2] = $11; //@line 4113
 HEAP32[$26 + 4 >> 2] = 0; //@line 4115
 HEAP32[$15 + 68 >> 2] = $fp; //@line 4118
 $_0 = $18; //@line 4120
 STACKTOP = sp; //@line 4122
 return $_0 | 0; //@line 4123
}
function _dsk_dosemu_del($dsk) {
 $dsk = $dsk | 0;
 var $2 = 0;
 $2 = HEAP32[$dsk + 64 >> 2] | 0; //@line 4133
 _fclose(HEAP32[$2 + 68 >> 2] | 0) | 0; //@line 4137
 _free($2); //@line 4138
 return;
}
function _dsk_dosemu_read($dsk, $buf, $i, $n) {
 $dsk = $dsk | 0;
 $buf = $buf | 0;
 $i = $i | 0;
 $n = $n | 0;
 var $7 = 0, $9 = 0, $11$0 = 0, $13$0 = 0, $14$0 = 0, $_0 = 0;
 if (($n + $i | 0) >>> 0 > (HEAP32[$dsk + 28 >> 2] | 0) >>> 0) {
  $_0 = 1; //@line 4161
  return $_0 | 0; //@line 4164
 }
 $7 = HEAP32[$dsk + 64 >> 2] | 0; //@line 4167
 $9 = $7 + 72 | 0; //@line 4169
 $11$0 = $i; //@line 4174
 $13$0 = _i64Add(HEAP32[$9 >> 2] | 0, HEAP32[$9 + 4 >> 2] | 0, $11$0 << 9 | 0 >>> 23, 0 << 9 | $11$0 >>> 23) | 0;
 $14$0 = $n; //@line 4179
 $_0 = (_dsk_read(HEAP32[$7 + 68 >> 2] | 0, $buf, $13$0, tempRet0, $14$0 << 9 | 0 >>> 23, 0 << 9 | $14$0 >>> 23) | 0) != 0 | 0; //@line 4190
 return $_0 | 0; //@line 4193
}
function _dsk_dosemu_write($dsk, $buf, $i, $n) {
 $dsk = $dsk | 0;
 $buf = $buf | 0;
 $i = $i | 0;
 $n = $n | 0;
 var $11 = 0, $13 = 0, $15$0 = 0, $17$0 = 0, $18$0 = 0, $21 = 0, $_0 = 0;
 if ((HEAP8[$dsk + 56 | 0] | 0) != 0) {
  $_0 = 1; //@line 4213
  return $_0 | 0; //@line 4216
 }
 if (($n + $i | 0) >>> 0 > (HEAP32[$dsk + 28 >> 2] | 0) >>> 0) {
  $_0 = 1; //@line 4224
  return $_0 | 0; //@line 4227
 }
 $11 = HEAP32[$dsk + 64 >> 2] | 0; //@line 4230
 $13 = $11 + 72 | 0; //@line 4232
 $15$0 = $i; //@line 4237
 $17$0 = _i64Add(HEAP32[$13 >> 2] | 0, HEAP32[$13 + 4 >> 2] | 0, $15$0 << 9 | 0 >>> 23, 0 << 9 | $15$0 >>> 23) | 0;
 $18$0 = $n; //@line 4242
 $21 = $11 + 68 | 0; //@line 4247
 if ((_dsk_write(HEAP32[$21 >> 2] | 0, $buf, $17$0, tempRet0, $18$0 << 9 | 0 >>> 23, 0 << 9 | $18$0 >>> 23) | 0) != 0) {
  $_0 = 1; //@line 4253
  return $_0 | 0; //@line 4256
 }
 _fflush(HEAP32[$21 >> 2] | 0) | 0; //@line 4259
 $_0 = 0; //@line 4261
 return $_0 | 0; //@line 4264
}
function _dsk_dosemu_open($fname, $ro) {
 $fname = $fname | 0;
 $ro = $ro | 0;
 var $5 = 0, $_011 = 0, $fp_0 = 0, $fp_013 = 0, $_01112 = 0, $11 = 0, $_0 = 0, label = 0;
 do {
  if (($ro | 0) == 0) {
   $5 = _fopen($fname | 0, 50312 | 0) | 0; //@line 4279
   if (($5 | 0) != 0) {
    $_01112 = 0;
    $fp_013 = $5;
    break;
   }
   $fp_0 = _fopen($fname | 0, 56880 | 0) | 0;
   $_011 = 1;
   label = 10513; //@line 4289
  } else {
   $fp_0 = _fopen($fname | 0, 56880 | 0) | 0;
   $_011 = $ro;
   label = 10513; //@line 4294
  }
 } while (0);
 do {
  if ((label | 0) == 10513) {
   if (($fp_0 | 0) == 0) {
    $_0 = 0; //@line 4304
   } else {
    $_01112 = $_011;
    $fp_013 = $fp_0;
    break;
   }
   return $_0 | 0; //@line 4311
  }
 } while (0);
 $11 = _dsk_dosemu_open_fp($fp_013, $_01112) | 0; //@line 4316
 if (($11 | 0) == 0) {
  _fclose($fp_013 | 0) | 0; //@line 4320
  $_0 = 0; //@line 4322
  return $_0 | 0; //@line 4325
 } else {
  _dsk_set_fname($11, $fname); //@line 4327
  $_0 = $11; //@line 4329
  return $_0 | 0; //@line 4332
 }
 return 0;
}
function _dsk_dosemu_probe($fname) {
 $fname = $fname | 0;
 var $1 = 0, $4 = 0, $_0_i = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 4342
 STACKTOP = STACKTOP + 8 | 0; //@line 4342
 $1 = _fopen($fname | 0, 56880) | 0; //@line 4344
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 4348
  STACKTOP = sp; //@line 4350
  return $_0 | 0; //@line 4351
 }
 $4 = sp | 0; //@line 4353
 if ((_dsk_read($1, $4, 0, 0, 8, 0) | 0) == 0) {
  $_0_i = (_memcmp($4 | 0, 54912, 7) | 0) == 0 | 0; //@line 4366
 } else {
  $_0_i = 0; //@line 4368
 }
 _fclose($1 | 0) | 0; //@line 4371
 $_0 = $_0_i; //@line 4373
 STACKTOP = sp; //@line 4375
 return $_0 | 0; //@line 4376
}
function _dsk_pce_open_fp($fp, $ro) {
 $fp = $fp | 0;
 $ro = $ro | 0;
 var $1 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $21 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 4389
 STACKTOP = STACKTOP + 32 | 0; //@line 4389
 $1 = sp | 0; //@line 4391
 if ((_fread($1 | 0, 1, 32, $fp | 0) | 0) != 32) {
  $_0 = 0; //@line 4396
  STACKTOP = sp; //@line 4398
  return $_0 | 0; //@line 4399
 }
 if ((_dsk_get_uint32_be($1, 0) | 0) != 1346981191) {
  $_0 = 0; //@line 4405
  STACKTOP = sp; //@line 4407
  return $_0 | 0; //@line 4408
 }
 if ((_dsk_get_uint32_be($1, 4) | 0) != 0) {
  $_0 = 0; //@line 4414
  STACKTOP = sp; //@line 4416
  return $_0 | 0; //@line 4417
 }
 if ((_dsk_get_uint32_be($1, 28) | 0) != 512) {
  $_0 = 0; //@line 4423
  STACKTOP = sp; //@line 4425
  return $_0 | 0; //@line 4426
 }
 $14 = _dsk_get_uint32_be($1, 12) | 0; //@line 4428
 $15 = _dsk_get_uint32_be($1, 16) | 0; //@line 4429
 $16 = _dsk_get_uint32_be($1, 20) | 0; //@line 4430
 $17 = _dsk_get_uint32_be($1, 24) | 0; //@line 4431
 $18 = _malloc(80) | 0; //@line 4432
 if (($18 | 0) == 0) {
  $_0 = 0; //@line 4436
  STACKTOP = sp; //@line 4438
  return $_0 | 0; //@line 4439
 }
 $21 = $18; //@line 4441
 _dsk_init($21, $18, $14, $15, $16, $17); //@line 4442
 _dsk_set_type($21, 3); //@line 4443
 _dsk_set_readonly($21, $ro); //@line 4444
 HEAP32[$18 + 68 >> 2] = $fp; //@line 4447
 HEAP32[$18 + 4 >> 2] = 82; //@line 4450
 HEAP32[$18 + 8 >> 2] = 48; //@line 4453
 HEAP32[$18 + 12 >> 2] = 70; //@line 4456
 HEAP32[$18 + 16 >> 2] = 44; //@line 4459
 HEAP32[$18 + 20 >> 2] = 24; //@line 4462
 HEAP32[$18 + 72 >> 2] = _dsk_get_uint32_be($1, 8) | 0; //@line 4466
 HEAP32[$18 + 76 >> 2] = _dsk_get_uint32_be($1, 28) | 0; //@line 4470
 $_0 = $21; //@line 4472
 STACKTOP = sp; //@line 4474
 return $_0 | 0; //@line 4475
}
function _dsk_pce_del($dsk) {
 $dsk = $dsk | 0;
 var $2 = 0, $5 = 0;
 $2 = HEAP32[$dsk + 64 >> 2] | 0; //@line 4485
 $5 = HEAP32[$2 + 68 >> 2] | 0; //@line 4488
 if (($5 | 0) == 0) {
  _free($2); //@line 4492
  return;
 }
 _fclose($5 | 0) | 0; //@line 4496
 _free($2); //@line 4498
 return;
}
function _dsk_pce_read($dsk, $buf, $i, $n) {
 $dsk = $dsk | 0;
 $buf = $buf | 0;
 $i = $i | 0;
 $n = $n | 0;
 var $2 = 0, $13$0 = 0, $15$0 = 0, $16$0 = 0, $_0 = 0;
 $2 = HEAP32[$dsk + 64 >> 2] | 0; //@line 4516
 if (($n + $i | 0) >>> 0 > (HEAP32[$2 + 28 >> 2] | 0) >>> 0) {
  $_0 = 1; //@line 4524
  return $_0 | 0; //@line 4527
 }
 $13$0 = $i; //@line 4534
 $15$0 = _i64Add(HEAP32[$2 + 72 >> 2] | 0, 0, $13$0 << 9 | 0 >>> 23, 0 << 9 | $13$0 >>> 23) | 0;
 $16$0 = $n; //@line 4539
 $_0 = (_dsk_read(HEAP32[$2 + 68 >> 2] | 0, $buf, $15$0, tempRet0, $16$0 << 9 | 0 >>> 23, 0 << 9 | $16$0 >>> 23) | 0) != 0 | 0; //@line 4550
 return $_0 | 0; //@line 4553
}
function _dsk_pce_write($dsk, $buf, $i, $n) {
 $dsk = $dsk | 0;
 $buf = $buf | 0;
 $i = $i | 0;
 $n = $n | 0;
 var $2 = 0, $16$0 = 0, $18$0 = 0, $19$0 = 0, $22 = 0, $_0 = 0;
 $2 = HEAP32[$dsk + 64 >> 2] | 0; //@line 4569
 if ((HEAP8[$dsk + 56 | 0] | 0) != 0) {
  $_0 = 1; //@line 4575
  return $_0 | 0; //@line 4578
 }
 if (($n + $i | 0) >>> 0 > (HEAP32[$dsk + 28 >> 2] | 0) >>> 0) {
  $_0 = 1; //@line 4586
  return $_0 | 0; //@line 4589
 }
 $16$0 = $i; //@line 4596
 $18$0 = _i64Add(HEAP32[$2 + 72 >> 2] | 0, 0, $16$0 << 9 | 0 >>> 23, 0 << 9 | $16$0 >>> 23) | 0;
 $19$0 = $n; //@line 4601
 $22 = $2 + 68 | 0; //@line 4606
 if ((_dsk_write(HEAP32[$22 >> 2] | 0, $buf, $18$0, tempRet0, $19$0 << 9 | 0 >>> 23, 0 << 9 | $19$0 >>> 23) | 0) != 0) {
  $_0 = 1; //@line 4612
  return $_0 | 0; //@line 4615
 }
 _fflush(HEAP32[$22 >> 2] | 0) | 0; //@line 4618
 $_0 = 0; //@line 4620
 return $_0 | 0; //@line 4623
}
function _dsk_pce_set_msg($dsk, $msg, $val) {
 $dsk = $dsk | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 return (_strcmp($msg | 0, 46320) | 0) != 0 | 0; //@line 4638
}
function _dsk_pce_open($fname, $ro) {
 $fname = $fname | 0;
 $ro = $ro | 0;
 var $5 = 0, $_011 = 0, $fp_0 = 0, $fp_013 = 0, $_01112 = 0, $11 = 0, $_0 = 0, label = 0;
 do {
  if (($ro | 0) == 0) {
   $5 = _fopen($fname | 0, 56872 | 0) | 0; //@line 4653
   if (($5 | 0) != 0) {
    $_01112 = 0;
    $fp_013 = $5;
    break;
   }
   $fp_0 = _fopen($fname | 0, 54872 | 0) | 0;
   $_011 = 1;
   label = 10565; //@line 4663
  } else {
   $fp_0 = _fopen($fname | 0, 54872 | 0) | 0;
   $_011 = $ro;
   label = 10565; //@line 4668
  }
 } while (0);
 do {
  if ((label | 0) == 10565) {
   if (($fp_0 | 0) == 0) {
    $_0 = 0; //@line 4678
   } else {
    $_01112 = $_011;
    $fp_013 = $fp_0;
    break;
   }
   return $_0 | 0; //@line 4685
  }
 } while (0);
 $11 = _dsk_pce_open_fp($fp_013, $_01112) | 0; //@line 4690
 if (($11 | 0) == 0) {
  _fclose($fp_013 | 0) | 0; //@line 4694
  $_0 = 0; //@line 4696
  return $_0 | 0; //@line 4699
 } else {
  _dsk_set_fname($11, $fname); //@line 4701
  $_0 = $11; //@line 4703
  return $_0 | 0; //@line 4706
 }
 return 0;
}
function _dsk_pce_probe($fname) {
 $fname = $fname | 0;
 var $1 = 0, $4 = 0, $_0_i = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 4716
 STACKTOP = STACKTOP + 8 | 0; //@line 4716
 $1 = _fopen($fname | 0, 54872) | 0; //@line 4718
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 4722
  STACKTOP = sp; //@line 4724
  return $_0 | 0; //@line 4725
 }
 $4 = sp | 0; //@line 4727
 if ((_dsk_read($1, $4, 0, 0, 4, 0) | 0) == 0) {
  $_0_i = (_dsk_get_uint32_be($4, 0) | 0) == 1346981191 | 0; //@line 4740
 } else {
  $_0_i = 0; //@line 4742
 }
 _fclose($1 | 0) | 0; //@line 4745
 $_0 = $_0_i; //@line 4747
 STACKTOP = sp; //@line 4749
 return $_0 | 0; //@line 4750
}
function _dsk_qed_get_msg($dsk, $msg, $val, $max) {
 $dsk = $dsk | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 $max = $max | 0;
 return 1; //@line 4762
}
function _dsk_qed_open_fp($fp, $ro) {
 $fp = $fp | 0;
 $ro = $ro | 0;
 var $1 = 0, $5 = 0, $9 = 0, $11 = 0, $13 = 0, $14 = 0, $20 = 0, $23 = 0, $26 = 0, $27 = 0, $30 = 0, $31 = 0, $35 = 0, $43 = 0, $46 = 0, $47$0 = 0, $49 = 0, $50$0 = 0, $52 = 0, $53$0 = 0, $53$1 = 0, $55 = 0, $57$0 = 0, $57$1 = 0, $60 = 0, $$etemp$14 = 0, $66$0 = 0, $68 = 0, $70 = 0, $71$0 = 0, $71$1 = 0, $73 = 0, $84 = 0, $91$0 = 0, $92$0 = 0, $93$0 = 0, $96$1 = 0, $104 = 0, $108 = 0, $118 = 0, $119 = 0, $122 = 0, $125 = 0, $129 = 0, $132 = 0, $146 = 0, $156 = 0, $159 = 0, $173 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 4801
 $1 = _malloc(4280) | 0; //@line 4802
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 4806
  STACKTOP = sp; //@line 4808
  return $_0 | 0; //@line 4809
 }
 $5 = $1 + 4276 | 0; //@line 4812
 HEAP32[$5 >> 2] = $fp; //@line 4813
 HEAP32[$1 + 68 >> 2] = 0; //@line 4816
 $9 = $1 + 4264 | 0; //@line 4818
 HEAP32[$9 >> 2] = 0; //@line 4819
 $11 = $1 + 4268 | 0; //@line 4821
 HEAP32[$11 >> 2] = 0; //@line 4822
 $13 = $1 + 4272 | 0; //@line 4824
 HEAP32[$13 >> 2] = 0; //@line 4825
 $14 = $1 + 152 | 0; //@line 4826
 do {
  if ((_dsk_read($fp, $14, 0, 0, 4096, 0) | 0) == 0) {
   if ((_dsk_get_uint32_le($14, 0) | 0) != 4474193) {
    break;
   }
   $20 = $1 + 4248 | 0; //@line 4842
   HEAP8[$20] = 0; //@line 4843
   $23 = $1 + 72 | 0; //@line 4846
   HEAP32[$23 >> 2] = _dsk_get_uint32_le($14, 4) | 0; //@line 4847
   $26 = $1 + 76 | 0; //@line 4850
   HEAP32[$26 >> 2] = _dsk_get_uint32_le($14, 8) | 0; //@line 4851
   $27 = _dsk_get_uint32_le($14, 12) | 0; //@line 4852
   HEAP32[$1 + 80 >> 2] = $27; //@line 4855
   $30 = HEAP32[$23 >> 2] | 0; //@line 4856
   $31 = $30 - 1 | 0; //@line 4857
   if (($31 & $30 | 0) != 0) {
    break;
   }
   $35 = HEAP32[$26 >> 2] | 0; //@line 4864
   if (($35 - 1 & $35 | 0) != 0 | ($27 | 0) == 0) {
    break;
   }
   $43 = $1 + 128 | 0; //@line 4876
   HEAP32[$43 >> 2] = Math_imul($35, $30) | 0; //@line 4877
   $46 = $1 + 136 | 0; //@line 4881
   HEAP32[$46 >> 2] = $31; //@line 4883
   HEAP32[$46 + 4 >> 2] = 0; //@line 4885
   $47$0 = _dsk_get_uint64_le($14, 16) | 0; //@line 4886
   $49 = $1 + 88 | 0; //@line 4889
   HEAP32[$49 >> 2] = $47$0; //@line 4891
   HEAP32[$49 + 4 >> 2] = tempRet0; //@line 4893
   $50$0 = _dsk_get_uint64_le($14, 24) | 0; //@line 4894
   $52 = $1 + 96 | 0; //@line 4897
   HEAP32[$52 >> 2] = $50$0; //@line 4899
   HEAP32[$52 + 4 >> 2] = tempRet0; //@line 4901
   $53$0 = _dsk_get_uint64_le($14, 32) | 0; //@line 4902
   $53$1 = tempRet0; //@line 4903
   $55 = $1 + 104 | 0; //@line 4905
   HEAP32[$55 >> 2] = $53$0; //@line 4907
   HEAP32[$55 + 4 >> 2] = $53$1; //@line 4909
   $57$0 = HEAP32[$49 >> 2] & -6; //@line 4916
   $57$1 = HEAP32[$49 + 4 >> 2] | 0; //@line 4917
   if (!(($57$0 | 0) == 0 & ($57$1 | 0) == 0)) {
    $60 = HEAP32[_stderr >> 2] | 0; //@line 4923
    $$etemp$14 = 42768; //@line 4924
    _fprintf($60 | 0, $$etemp$14 | 0, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $57$0, HEAP32[tempInt + 8 >> 2] = $57$1, tempInt) | 0) | 0; //@line 4925
    break;
   }
   if (!(($53$0 | 0) == 0 & ($53$1 | 0) == 0)) {
    HEAP8[$20] = 1; //@line 4934
    HEAP32[$55 >> 2] = 0; //@line 4938
    HEAP32[$55 + 4 >> 2] = 0; //@line 4940
    _dsk_set_uint64_le($14, 32, 0, 0); //@line 4943
   }
   $66$0 = _dsk_get_uint64_le($14, 40) | 0; //@line 4946
   $68 = $1 + 112 | 0; //@line 4949
   HEAP32[$68 >> 2] = $66$0; //@line 4951
   HEAP32[$68 + 4 >> 2] = tempRet0; //@line 4953
   $70 = $1 + 4256 | 0; //@line 4955
   HEAP32[$70 >> 2] = 0; //@line 4959
   HEAP32[$70 + 4 >> 2] = 0; //@line 4961
   $71$0 = _dsk_get_uint64_le($14, 48) | 0; //@line 4962
   $71$1 = tempRet0; //@line 4963
   $73 = $1 + 120 | 0; //@line 4965
   HEAP32[$73 >> 2] = $71$0; //@line 4967
   HEAP32[$73 + 4 >> 2] = $71$1; //@line 4969
   if (!((HEAP32[$46 >> 2] & HEAP32[$68 >> 2] | 0) == 0 & (HEAP32[$46 + 4 >> 2] & HEAP32[$68 + 4 >> 2] | 0) == 0)) {
    break;
   }
   if (!(($71$0 & 511 | 0) == 0 & ($71$1 & 0 | 0) == 0)) {
    break;
   }
   $84 = $1 + 144 | 0; //@line 5000
   if ((_dsk_get_filesize(HEAP32[$5 >> 2] | 0, $84) | 0) != 0) {
    break;
   }
   $91$0 = HEAP32[$23 >> 2] | 0; //@line 5012
   $92$0 = _i64Add(HEAP32[$84 >> 2] | 0, HEAP32[$84 + 4 >> 2] | 0, -1, -1) | 0;
   $93$0 = _i64Add($92$0, tempRet0, $91$0, 0) | 0;
   $96$1 = tempRet0 & ~HEAP32[$46 + 4 >> 2]; //@line 5027
   HEAP32[$84 >> 2] = $93$0 & ~HEAP32[$46 >> 2]; //@line 5029
   HEAP32[$84 + 4 >> 2] = $96$1; //@line 5031
   do {
    if ((HEAP8[$20] | 0) != 0 & ($ro | 0) == 0) {
     if ((_dsk_write(HEAP32[$5 >> 2] | 0, $14, 0, 0, 4096, 0) | 0) == 0) {
      $104 = HEAP32[$5 >> 2] | 0; //@line 5048
      _fflush($104 | 0) | 0; //@line 5049
      break;
     }
     _free($1); //@line 5053
     $_0 = 0; //@line 5055
     STACKTOP = sp; //@line 5057
     return $_0 | 0; //@line 5058
    }
   } while (0);
   $108 = $1; //@line 5061
   _dsk_init($108, $1, (HEAP32[$73 >> 2] | 0) >>> 9 | HEAP32[$73 + 4 >> 2] << 23, 0, 0, 0); //@line 5070
   _dsk_set_type($108, 7); //@line 5071
   _dsk_set_readonly($108, $ro); //@line 5072
   HEAP32[$1 + 4 >> 2] = 462; //@line 5075
   HEAP32[$1 + 8 >> 2] = 62; //@line 5078
   HEAP32[$1 + 12 >> 2] = 12; //@line 5081
   $118 = HEAP32[$43 >> 2] | 0; //@line 5082
   $119 = _malloc($118) | 0; //@line 5083
   HEAP32[$9 >> 2] = $119; //@line 5084
   do {
    if (($119 | 0) != 0) {
     $122 = _malloc($118) | 0; //@line 5089
     HEAP32[$11 >> 2] = $122; //@line 5090
     if (($122 | 0) == 0) {
      break;
     }
     $125 = _malloc(HEAP32[$23 >> 2] | 0) | 0; //@line 5097
     HEAP32[$13 >> 2] = $125; //@line 5098
     if (($125 | 0) == 0) {
      break;
     }
     if ((_dsk_read(HEAP32[$5 >> 2] | 0, $119, HEAP32[$68 >> 2] | 0, HEAP32[$68 + 4 >> 2] | 0, $118, 0) | 0) == 0) {
      _dsk_guess_geometry($108) | 0; //@line 5115
      $_0 = $108; //@line 5117
      STACKTOP = sp; //@line 5119
      return $_0 | 0; //@line 5120
     }
     $156 = HEAP32[$1 + 64 >> 2] | 0; //@line 5124
     $159 = HEAP32[$156 + 68 >> 2] | 0; //@line 5127
     if (($159 | 0) != 0) {
      _dsk_del($159); //@line 5131
     }
     _free(HEAP32[$156 + 4272 >> 2] | 0); //@line 5137
     _free(HEAP32[$156 + 4268 >> 2] | 0); //@line 5141
     _free(HEAP32[$156 + 4264 >> 2] | 0); //@line 5145
     $173 = HEAP32[$156 + 4276 >> 2] | 0; //@line 5148
     _fclose($173 | 0) | 0; //@line 5149
     _free($156); //@line 5150
     $_0 = 0; //@line 5152
     STACKTOP = sp; //@line 5154
     return $_0 | 0; //@line 5155
    }
   } while (0);
   $129 = HEAP32[$1 + 64 >> 2] | 0; //@line 5160
   $132 = HEAP32[$129 + 68 >> 2] | 0; //@line 5163
   if (($132 | 0) != 0) {
    _dsk_del($132); //@line 5167
   }
   _free(HEAP32[$129 + 4272 >> 2] | 0); //@line 5173
   _free(HEAP32[$129 + 4268 >> 2] | 0); //@line 5177
   _free(HEAP32[$129 + 4264 >> 2] | 0); //@line 5181
   $146 = HEAP32[$129 + 4276 >> 2] | 0; //@line 5184
   _fclose($146 | 0) | 0; //@line 5185
   _free($129); //@line 5186
   $_0 = 0; //@line 5188
   STACKTOP = sp; //@line 5190
   return $_0 | 0; //@line 5191
  }
 } while (0);
 _free($1); //@line 5194
 $_0 = 0; //@line 5196
 STACKTOP = sp; //@line 5198
 return $_0 | 0; //@line 5199
}
function _dsk_qed_del($dsk) {
 $dsk = $dsk | 0;
 var $2 = 0, $5 = 0;
 $2 = HEAP32[$dsk + 64 >> 2] | 0; //@line 5211
 $5 = HEAP32[$2 + 68 >> 2] | 0; //@line 5214
 if (($5 | 0) != 0) {
  _dsk_del($5); //@line 5218
 }
 _free(HEAP32[$2 + 4272 >> 2] | 0); //@line 5224
 _free(HEAP32[$2 + 4268 >> 2] | 0); //@line 5228
 _free(HEAP32[$2 + 4264 >> 2] | 0); //@line 5232
 _fclose(HEAP32[$2 + 4276 >> 2] | 0) | 0; //@line 5236
 _free($2); //@line 5237
 return;
}
function _dsk_qed_read($dsk, $buf, $i, $n) {
 $dsk = $dsk | 0;
 $buf = $buf | 0;
 $i = $i | 0;
 $n = $n | 0;
 var $ofs = 0, $7 = 0, $8 = 0, $10 = 0, $12 = 0, $15 = 0, $_02732 = 0, $_02831 = 0, $_02930 = 0, $18 = 0, $20 = 0, $_028_ = 0, $22$0 = 0, $27$0 = 0, $27$1 = 0, $30 = 0, $36 = 0, $39 = 0, $_pre_phi = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 5257
 STACKTOP = STACKTOP + 8 | 0; //@line 5257
 $ofs = sp | 0; //@line 5258
 if (($n + $i | 0) >>> 0 > (HEAP32[$dsk + 28 >> 2] | 0) >>> 0) {
  $_0 = 1; //@line 5265
  STACKTOP = sp; //@line 5267
  return $_0 | 0; //@line 5268
 }
 $7 = HEAP32[$dsk + 64 >> 2] | 0; //@line 5271
 $8 = $7; //@line 5272
 $10 = $7 + 72 | 0; //@line 5274
 $12 = $7 + 4276 | 0; //@line 5276
 if (($n | 0) == 0) {
  $_0 = 0; //@line 5280
  STACKTOP = sp; //@line 5282
  return $_0 | 0; //@line 5283
 }
 $15 = $7 + 68 | 0; //@line 5286
 $_02930 = $i;
 $_02831 = $n;
 $_02732 = $buf;
 L13250 : while (1) {
  $18 = (HEAP32[$10 >> 2] | 0) >>> 9; //@line 5294
  $20 = $18 - (($_02930 >>> 0) % ($18 >>> 0) | 0) | 0; //@line 5296
  $_028_ = $20 >>> 0 > $_02831 >>> 0 ? $_02831 : $20; //@line 5298
  $22$0 = $_02930; //@line 5299
  HEAP32[$ofs >> 2] = $22$0 << 9 | 0 >>> 23; //@line 5304
  HEAP32[$ofs + 4 >> 2] = 0 << 9 | $22$0 >>> 23; //@line 5306
  if ((_dsk_qed_translate($8, $ofs, 0) | 0) != 0) {
   $_0 = 1; //@line 5311
   label = 10636; //@line 5312
   break;
  }
  $27$0 = HEAP32[$ofs >> 2] | 0; //@line 5316
  $27$1 = HEAP32[$ofs + 4 >> 2] | 0; //@line 5318
  do {
   if (($27$0 | 0) == 0 & ($27$1 | 0) == 0) {
    $30 = HEAP32[$15 >> 2] | 0; //@line 5325
    if (($30 | 0) == 0) {
     $36 = $_028_ << 9; //@line 5329
     _memset($_02732 | 0, 0, $36 | 0); //@line 5330
     $_pre_phi = $36; //@line 5331
     break;
    }
    if ((_dsk_read_lba($30, $_02732, $_02930, $_028_) | 0) != 0) {
     $_0 = 1; //@line 5338
     label = 10631; //@line 5339
     break L13250;
    }
    $_pre_phi = $_028_ << 9; //@line 5344
   } else {
    $39 = $_028_ << 9; //@line 5347
    if ((_dsk_read(HEAP32[$12 >> 2] | 0, $_02732, $27$0, $27$1, $39, 0) | 0) == 0) {
     $_pre_phi = $39; //@line 5354
    } else {
     $_0 = 1; //@line 5356
     label = 10632; //@line 5357
     break L13250;
    }
   }
  } while (0);
  if (($_02831 | 0) == ($_028_ | 0)) {
   $_0 = 0; //@line 5369
   label = 10634; //@line 5370
   break;
  } else {
   $_02930 = $_028_ + $_02930 | 0;
   $_02831 = $_02831 - $_028_ | 0;
   $_02732 = $_02732 + $_pre_phi | 0;
  }
 }
 if ((label | 0) == 10636) {
  STACKTOP = sp; //@line 5378
  return $_0 | 0; //@line 5379
 } else if ((label | 0) == 10634) {
  STACKTOP = sp; //@line 5383
  return $_0 | 0; //@line 5384
 } else if ((label | 0) == 10632) {
  STACKTOP = sp; //@line 5388
  return $_0 | 0; //@line 5389
 } else if ((label | 0) == 10631) {
  STACKTOP = sp; //@line 5393
  return $_0 | 0; //@line 5394
 }
 return 0;
}
function _dsk_qed_write($dsk, $buf, $i, $n) {
 $dsk = $dsk | 0;
 $buf = $buf | 0;
 $i = $i | 0;
 $n = $n | 0;
 var $ofs = 0, $7 = 0, $8 = 0, $10 = 0, $12 = 0, $_02126 = 0, $_02225 = 0, $_02324 = 0, $15 = 0, $17 = 0, $_022_ = 0, $19$0 = 0, $26 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 5411
 STACKTOP = STACKTOP + 8 | 0; //@line 5411
 $ofs = sp | 0; //@line 5412
 if (($n + $i | 0) >>> 0 > (HEAP32[$dsk + 28 >> 2] | 0) >>> 0) {
  $_0 = 1; //@line 5419
  STACKTOP = sp; //@line 5421
  return $_0 | 0; //@line 5422
 }
 $7 = HEAP32[$dsk + 64 >> 2] | 0; //@line 5425
 $8 = $7; //@line 5426
 $10 = $7 + 72 | 0; //@line 5428
 $12 = $7 + 4276 | 0; //@line 5430
 if (($n | 0) == 0) {
  $_0 = 0; //@line 5434
  STACKTOP = sp; //@line 5436
  return $_0 | 0; //@line 5437
 } else {
  $_02324 = $i;
  $_02225 = $n;
  $_02126 = $buf;
 }
 while (1) {
  $15 = (HEAP32[$10 >> 2] | 0) >>> 9; //@line 5446
  $17 = $15 - (($_02324 >>> 0) % ($15 >>> 0) | 0) | 0; //@line 5448
  $_022_ = $17 >>> 0 > $_02225 >>> 0 ? $_02225 : $17; //@line 5450
  $19$0 = $_02324; //@line 5451
  HEAP32[$ofs >> 2] = $19$0 << 9 | 0 >>> 23; //@line 5456
  HEAP32[$ofs + 4 >> 2] = 0 << 9 | $19$0 >>> 23; //@line 5458
  if ((_dsk_qed_translate($8, $ofs, 1) | 0) != 0) {
   $_0 = 1; //@line 5463
   label = 10644; //@line 5464
   break;
  }
  $26 = $_022_ << 9; //@line 5472
  if ((_dsk_write(HEAP32[$12 >> 2] | 0, $_02126, HEAP32[$ofs >> 2] | 0, HEAP32[$ofs + 4 >> 2] | 0, $26, 0) | 0) != 0) {
   $_0 = 1; //@line 5479
   label = 10645; //@line 5480
   break;
  }
  if (($_02225 | 0) == ($_022_ | 0)) {
   $_0 = 0; //@line 5489
   label = 10643; //@line 5490
   break;
  } else {
   $_02324 = $_022_ + $_02324 | 0;
   $_02225 = $_02225 - $_022_ | 0;
   $_02126 = $_02126 + $26 | 0;
  }
 }
 if ((label | 0) == 10645) {
  STACKTOP = sp; //@line 5498
  return $_0 | 0; //@line 5499
 } else if ((label | 0) == 10644) {
  STACKTOP = sp; //@line 5503
  return $_0 | 0; //@line 5504
 } else if ((label | 0) == 10643) {
  STACKTOP = sp; //@line 5508
  return $_0 | 0; //@line 5509
 }
 return 0;
}
function _dsk_qed_open($fname, $ro) {
 $fname = $fname | 0;
 $ro = $ro | 0;
 var $5 = 0, $_011 = 0, $fp_0 = 0, $fp_013 = 0, $_01112 = 0, $11 = 0, $_0 = 0, label = 0;
 do {
  if (($ro | 0) == 0) {
   $5 = _fopen($fname | 0, 56864 | 0) | 0; //@line 5525
   if (($5 | 0) != 0) {
    $_01112 = 0;
    $fp_013 = $5;
    break;
   }
   $fp_0 = _fopen($fname | 0, 54848 | 0) | 0;
   $_011 = 1;
   label = 10652; //@line 5535
  } else {
   $fp_0 = _fopen($fname | 0, 54848 | 0) | 0;
   $_011 = $ro;
   label = 10652; //@line 5540
  }
 } while (0);
 do {
  if ((label | 0) == 10652) {
   if (($fp_0 | 0) == 0) {
    $_0 = 0; //@line 5550
   } else {
    $_01112 = $_011;
    $fp_013 = $fp_0;
    break;
   }
   return $_0 | 0; //@line 5557
  }
 } while (0);
 $11 = _dsk_qed_open_fp($fp_013, $_01112) | 0; //@line 5562
 if (($11 | 0) == 0) {
  _fclose($fp_013 | 0) | 0; //@line 5566
  $_0 = 0; //@line 5568
  return $_0 | 0; //@line 5571
 } else {
  _dsk_set_fname($11, $fname); //@line 5573
  $_0 = $11; //@line 5575
  return $_0 | 0; //@line 5578
 }
 return 0;
}
function _dsk_qed_cow_new($dsk, $fname) {
 $dsk = $dsk | 0;
 $fname = $fname | 0;
 var $1 = 0, $minclst_0 = 0, $15 = 0, $16 = 0, $18 = 0, $24 = 0, $27 = 0, $fp_013_i = 0, $_01112_i = 0, $29 = 0, $35 = 0, $43 = 0, $44$0 = 0, $47 = 0, $48 = 0, $49 = 0, $54 = 0, $_42 = 0, $58 = 0, $59 = 0, $62 = 0, $67 = 0, $_0 = 0;
 $1 = _fopen($fname | 0, 56864) | 0; //@line 5599
 do {
  if (($1 | 0) == 0) {
   if ((HEAP32[$dsk >> 2] | 0) == 7) {
    $minclst_0 = HEAP32[(HEAP32[$dsk + 64 >> 2] | 0) + 72 >> 2] | 0; //@line 5615
   } else {
    $minclst_0 = 0; //@line 5617
   }
   $15 = HEAP32[$dsk + 28 >> 2] | 0; //@line 5621
   $16 = _fopen($fname | 0, 50304) | 0; //@line 5622
   if (($16 | 0) == 0) {
    $_0 = 0; //@line 5626
    return $_0 | 0; //@line 5629
   }
   $18 = _dsk_qed_create_fp($16, $15, $minclst_0) | 0; //@line 5631
   _fclose($16 | 0) | 0; //@line 5632
   if (($18 | 0) == 0) {
    break;
   } else {
    $_0 = 0; //@line 5638
   }
   return $_0 | 0; //@line 5642
  } else {
   _fclose($1 | 0) | 0; //@line 5644
  }
 } while (0);
 $24 = _fopen($fname | 0, 56864) | 0; //@line 5647
 do {
  if (($24 | 0) == 0) {
   $27 = _fopen($fname | 0, 54848) | 0; //@line 5652
   if (($27 | 0) == 0) {
    $_0 = 0; //@line 5656
   } else {
    $_01112_i = 1;
    $fp_013_i = $27;
    break;
   }
   return $_0 | 0; //@line 5663
  } else {
   $_01112_i = 0;
   $fp_013_i = $24;
  }
 } while (0);
 $29 = _dsk_qed_open_fp($fp_013_i, $_01112_i) | 0; //@line 5670
 if (($29 | 0) == 0) {
  _fclose($fp_013_i | 0) | 0; //@line 5674
  $_0 = 0; //@line 5676
  return $_0 | 0; //@line 5679
 }
 _dsk_set_fname($29, $fname); //@line 5681
 $35 = HEAP32[$29 + 64 >> 2] | 0; //@line 5683
 HEAP32[$35 + 68 >> 2] = $dsk; //@line 5686
 HEAP32[$29 + 16 >> 2] = 8; //@line 5688
 HEAP32[$29 + 20 >> 2] = 14; //@line 5690
 HEAP32[$29 + 24 >> 2] = HEAP32[$dsk + 24 >> 2]; //@line 5694
 $43 = $35 + 152 | 0; //@line 5695
 $44$0 = _dsk_get_uint64_le($43, 16) | 0; //@line 5696
 $47 = (HEAP32[$dsk >> 2] | 0) == 1; //@line 5700
 _dsk_set_uint64_le($43, 16, ($47 ? 5 : 1) | $44$0, ($47 ? 0 : 0) | tempRet0); //@line 5709
 $48 = $dsk + 60 | 0; //@line 5710
 $49 = HEAP32[$48 >> 2] | 0; //@line 5711
 if (($49 | 0) == 0) {
  $54 = 0; //@line 5715
 } else {
  $54 = _strlen($49 | 0) | 0; //@line 5719
 }
 $_42 = $54 >>> 0 > 1024 ? 0 : $54; //@line 5723
 _dsk_set_uint32_le($43, 56, 64); //@line 5724
 _dsk_set_uint32_le($43, 60, $_42); //@line 5725
 if (($_42 | 0) != 0) {
  $58 = $35 + 216 | 0; //@line 5729
  $59 = HEAP32[$48 >> 2] | 0; //@line 5730
  _memcpy($58 | 0, $59 | 0, $_42) | 0; //@line 5731
 }
 $62 = $35 + 4276 | 0; //@line 5735
 if ((_dsk_write(HEAP32[$62 >> 2] | 0, $43, 0, 0, 4096, 0) | 0) == 0) {
  $67 = HEAP32[$62 >> 2] | 0; //@line 5745
  _fflush($67 | 0) | 0; //@line 5746
 }
 _dsk_set_geometry($29, HEAP32[$dsk + 28 >> 2] | 0, HEAP32[$dsk + 32 >> 2] | 0, HEAP32[$dsk + 36 >> 2] | 0, HEAP32[$dsk + 40 >> 2] | 0) | 0; //@line 5757
 _dsk_set_visible_chs($29, HEAP32[$dsk + 44 >> 2] | 0, HEAP32[$dsk + 48 >> 2] | 0, HEAP32[$dsk + 52 >> 2] | 0); //@line 5764
 _dsk_set_fname($29, $fname); //@line 5765
 $_0 = $29; //@line 5767
 return $_0 | 0; //@line 5770
}
function _dsk_qed_set_msg($dsk, $msg, $val) {
 $dsk = $dsk | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 var $5 = 0, $7 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $18 = 0, $23 = 0, $24 = 0, $26 = 0, $28 = 0, $30 = 0, $32 = 0, $33 = 0, $i_048_us_i = 0, $blki_047_us_i = 0, $36 = 0, $37$0 = 0, $37$1 = 0, $42$0 = 0, $42$1 = 0, $blki_145_us_i = 0, $j_044_us_i = 0, $56$0 = 0, $56$1 = 0, $65 = 0, $66 = 0, $68 = 0, $_pre_phi55_i = 0, $74 = 0, $blki_2_us_i = 0, $79 = 0, $_pre_phi53_i = 0, $_pre_phi_i = 0, $82 = 0, $86 = 0, $97$0 = 0, $97$1 = 0, $99 = 0, $_0 = 0, label = 0;
 if ((_strcmp($msg | 0, 46312) | 0) != 0) {
  $_0 = 1; //@line 5803
  return $_0 | 0; //@line 5806
 }
 $5 = HEAP32[$dsk + 64 >> 2] | 0; //@line 5809
 $7 = $5 + 68 | 0; //@line 5811
 if ((HEAP32[$7 >> 2] | 0) == 0) {
  $_0 = 1; //@line 5816
  return $_0 | 0; //@line 5819
 }
 $12 = $5 + 128 | 0; //@line 5822
 $13 = HEAP32[$12 >> 2] | 0; //@line 5823
 $14 = $13 >>> 3; //@line 5824
 $16 = $5 + 72 | 0; //@line 5826
 $18 = (HEAP32[$16 >> 2] | 0) >>> 9; //@line 5828
 do {
  if (($14 | 0) == 0) {
   $82 = $13;
   $_pre_phi_i = $5 + 4276 | 0;
   $_pre_phi53_i = $5 + 4264 | 0;
  } else {
   $23 = $5 + 4264 | 0; //@line 5841
   $24 = Math_imul($18, $14) | 0; //@line 5842
   $26 = $5 + 136 | 0; //@line 5844
   $28 = $5 + 4256 | 0; //@line 5846
   $30 = $5 + 4276 | 0; //@line 5848
   $32 = $5 + 4268 | 0; //@line 5850
   $33 = $5 + 4272 | 0; //@line 5852
   $blki_047_us_i = 0;
   $i_048_us_i = 0;
   L13334 : while (1) {
    $36 = $i_048_us_i << 3; //@line 5859
    $37$0 = _dsk_get_uint64_le(HEAP32[$23 >> 2] | 0, $36) | 0; //@line 5860
    $37$1 = tempRet0; //@line 5861
    if (($37$0 | 0) == 0 & ($37$1 | 0) == 0) {
     $blki_2_us_i = $blki_047_us_i + $24 | 0; //@line 5869
    } else {
     $42$0 = $37$0 & ~HEAP32[$26 >> 2]; //@line 5879
     $42$1 = $37$1 & ~HEAP32[$26 + 4 >> 2]; //@line 5880
     if ((HEAP32[$28 >> 2] | 0) == ($42$0 | 0) & (HEAP32[$28 + 4 >> 2] | 0) == ($42$1 | 0)) {
      $j_044_us_i = 0;
      $blki_145_us_i = $blki_047_us_i;
     } else {
      if ((_dsk_read(HEAP32[$30 >> 2] | 0, HEAP32[$32 >> 2] | 0, $42$0, $42$1, HEAP32[$12 >> 2] | 0, 0) | 0) != 0) {
       $_0 = 1; //@line 5899
       label = 10708; //@line 5900
       break;
      }
      HEAP32[$28 >> 2] = $42$0; //@line 5904
      HEAP32[$28 + 4 >> 2] = $42$1; //@line 5906
      $j_044_us_i = 0;
      $blki_145_us_i = $blki_047_us_i;
     }
     while (1) {
      $56$0 = _dsk_get_uint64_le(HEAP32[$32 >> 2] | 0, $j_044_us_i << 3) | 0; //@line 5915
      $56$1 = tempRet0; //@line 5916
      if (($56$0 | 0) == 0 & ($56$1 | 0) == 0) {
       $_pre_phi55_i = $blki_145_us_i + $18 | 0; //@line 5924
      } else {
       if ((_dsk_read(HEAP32[$30 >> 2] | 0, HEAP32[$33 >> 2] | 0, $56$0 & ~HEAP32[$26 >> 2], $56$1 & ~HEAP32[$26 + 4 >> 2], HEAP32[$16 >> 2] | 0, 0) | 0) != 0) {
        $_0 = 1; //@line 5945
        label = 10704; //@line 5946
        break L13334;
       }
       $65 = $blki_145_us_i + $18 | 0; //@line 5949
       $66 = HEAP32[$7 >> 2] | 0; //@line 5950
       $68 = HEAP32[$66 + 28 >> 2] | 0; //@line 5952
       if ((_dsk_write_lba($66, HEAP32[$33 >> 2] | 0, $blki_145_us_i, $65 >>> 0 > $68 >>> 0 ? $68 - $blki_145_us_i | 0 : $18) | 0) == 0) {
        $_pre_phi55_i = $65; //@line 5961
       } else {
        $_0 = 1; //@line 5963
        label = 10705; //@line 5964
        break L13334;
       }
      }
      $74 = $j_044_us_i + 1 | 0; //@line 5969
      if ($74 >>> 0 < $14 >>> 0) {
       $j_044_us_i = $74;
       $blki_145_us_i = $_pre_phi55_i;
      } else {
       break;
      }
     }
     _dsk_set_uint64_le(HEAP32[$23 >> 2] | 0, $36, 0, 0); //@line 5981
     $blki_2_us_i = $_pre_phi55_i; //@line 5983
    }
    $79 = $i_048_us_i + 1 | 0; //@line 5986
    if ($79 >>> 0 < $14 >>> 0) {
     $blki_047_us_i = $blki_2_us_i;
     $i_048_us_i = $79;
    } else {
     label = 10700; //@line 5992
     break;
    }
   }
   if ((label | 0) == 10708) {
    return $_0 | 0; //@line 5999
   } else if ((label | 0) == 10700) {
    $82 = HEAP32[$12 >> 2] | 0;
    $_pre_phi_i = $30;
    $_pre_phi53_i = $23;
    break;
   } else if ((label | 0) == 10705) {
    return $_0 | 0; //@line 6010
   } else if ((label | 0) == 10704) {
    return $_0 | 0; //@line 6015
   }
  }
 } while (0);
 $86 = $5 + 112 | 0; //@line 6025
 if ((_dsk_write(HEAP32[$_pre_phi_i >> 2] | 0, HEAP32[$_pre_phi53_i >> 2] | 0, HEAP32[$86 >> 2] | 0, HEAP32[$86 + 4 >> 2] | 0, $82, 0) | 0) != 0) {
  $_0 = 1; //@line 6036
  return $_0 | 0; //@line 6039
 }
 _fflush(HEAP32[$_pre_phi_i >> 2] | 0) | 0; //@line 6042
 $97$0 = _i64Add(HEAP32[$12 >> 2] | 0, 0, HEAP32[$86 >> 2] | 0, HEAP32[$86 + 4 >> 2] | 0) | 0;
 $97$1 = tempRet0;
 $99 = $5 + 144 | 0; //@line 6052
 HEAP32[$99 >> 2] = $97$0; //@line 6054
 HEAP32[$99 + 4 >> 2] = $97$1; //@line 6056
 _dsk_set_filesize(HEAP32[$_pre_phi_i >> 2] | 0, $97$0, $97$1) | 0; //@line 6058
 $_0 = 0; //@line 6060
 return $_0 | 0; //@line 6063
}
function _dsk_qed_create_fp($fp, $n, $minclst) {
 $fp = $fp | 0;
 $n = $n | 0;
 $minclst = $minclst | 0;
 var $1$0 = 0, $2$0 = 0, $2$1 = 0, $_0_i = 0, $10 = 0, $_09_i = 0, $13$0 = 0, $13$1 = 0, $14$0 = 0, $14$1 = 0, $15$0 = 0, $16$0 = 0, $16$1 = 0, $max_size_060$0 = 0, $max_size_060$1 = 0, $max_size_0_lcssa$0 = 0, $max_size_0_lcssa$1 = 0, $table_size_0_lcssa = 0, $18 = 0, $20$0 = 0, $20$1 = 0, $table_size_061 = 0, $21 = 0, $23$0 = 0, $23$1 = 0, $24$0 = 0, $max_size_0$0 = 0, $max_size_0$1 = 0, $cluster_size_058 = 0, $27 = 0, $31$0 = 0, $31$1 = 0, $33$0 = 0, $34$0 = 0, $34$1 = 0, $35 = 0, $_lcssa = 0, $cluster_size_0_lcssa = 0, $38 = 0, $41$0 = 0, $41$1 = 0, $46 = 0, $i_0 = 0, $51$0 = 0, $_0 = 0, label = 0;
 $1$0 = $n; //@line 6084
 $2$0 = $1$0 << 9 | 0 >>> 23; //@line 6086
 $2$1 = 0 << 9 | $1$0 >>> 23; //@line 6087
 do {
  if ($minclst >>> 0 < 4097) {
   $_09_i = 4096; //@line 6092
  } else {
   if ($minclst >>> 0 > 134217727) {
    $_09_i = 134217728; //@line 6097
    break;
   }
   $_0_i = ($minclst << 1) - 1 | 0; //@line 6103
   while (1) {
    $10 = $_0_i - 1 & $_0_i; //@line 6107
    if (($10 | 0) == 0) {
     $_09_i = $_0_i; //@line 6111
     break;
    } else {
     $_0_i = $10; //@line 6114
    }
   }
  }
 } while (0);
 $13$0 = $_09_i >>> 3; //@line 6121
 $13$1 = 0; //@line 6122
 $14$0 = $13$0 << 1 | 0 >>> 31; //@line 6123
 $14$1 = $13$1 << 1 | $13$0 >>> 31; //@line 6124
 $15$0 = ___muldi3($14$0, $14$1, $14$0, $14$1) | 0;
 $16$0 = $_09_i; //@line 6126
 $16$1 = 0; //@line 6127
 $max_size_060$0 = ___muldi3($15$0, tempRet0, $16$0, $16$1) | 0;
 $max_size_060$1 = tempRet0;
 if ($max_size_060$1 >>> 0 < $2$1 >>> 0 | $max_size_060$1 >>> 0 == $2$1 >>> 0 & $max_size_060$0 >>> 0 < $2$0 >>> 0) {
  $table_size_061 = 2; //@line 6132
  while (1) {
   $21 = $table_size_061 << 1; //@line 6135
   $23$0 = ___muldi3($21, 0, $13$0, $13$1) | 0;
   $23$1 = tempRet0;
   $24$0 = ___muldi3($23$0, $23$1, $23$0, $23$1) | 0;
   $max_size_0$0 = ___muldi3($24$0, tempRet0, $16$0, $16$1) | 0;
   $max_size_0$1 = tempRet0;
   if (($max_size_0$1 >>> 0 < $2$1 >>> 0 | $max_size_0$1 >>> 0 == $2$1 >>> 0 & $max_size_0$0 >>> 0 < $2$0 >>> 0) & $21 >>> 0 < 16) {
    $table_size_061 = $21; //@line 6146
   } else {
    $table_size_0_lcssa = $21;
    $max_size_0_lcssa$1 = $max_size_0$1;
    $max_size_0_lcssa$0 = $max_size_0$0;
    break;
   }
  }
 } else {
  $table_size_0_lcssa = 2;
  $max_size_0_lcssa$1 = $max_size_060$1;
  $max_size_0_lcssa$0 = $max_size_060$0;
 }
 $18 = $max_size_0_lcssa$1 >>> 0 < $2$1 >>> 0 | $max_size_0_lcssa$1 >>> 0 == $2$1 >>> 0 & $max_size_0_lcssa$0 >>> 0 < $2$0 >>> 0; //@line 6158
 if ($18 & $_09_i >>> 0 < 134217728) {
  $20$0 = $table_size_0_lcssa; //@line 6163
  $20$1 = 0; //@line 6164
  $cluster_size_058 = $_09_i; //@line 6166
  while (1) {
   $27 = $cluster_size_058 << 1; //@line 6169
   $31$0 = ___muldi3($cluster_size_058 >>> 2 & 536870911, 0, $20$0, $20$1) | 0;
   $31$1 = tempRet0;
   $33$0 = ___muldi3($31$0, $31$1, $27, 0) | 0;
   $34$0 = ___muldi3($33$0, tempRet0, $31$0, $31$1) | 0;
   $34$1 = tempRet0;
   $35 = $34$1 >>> 0 < $2$1 >>> 0 | $34$1 >>> 0 == $2$1 >>> 0 & $34$0 >>> 0 < $2$0 >>> 0; //@line 6179
   if ($35 & $27 >>> 0 < 134217728) {
    $cluster_size_058 = $27; //@line 6184
   } else {
    $cluster_size_0_lcssa = $27;
    $_lcssa = $35;
    break;
   }
  }
 } else {
  $cluster_size_0_lcssa = $_09_i;
  $_lcssa = $18;
 }
 if ($_lcssa) {
  $_0 = 1; //@line 6197
  return $_0 | 0; //@line 6200
 }
 $38 = _malloc($cluster_size_0_lcssa) | 0; //@line 6202
 if (($38 | 0) == 0) {
  $_0 = 1; //@line 6206
  return $_0 | 0; //@line 6209
 }
 _memset($38 | 0, 0, $cluster_size_0_lcssa | 0); //@line 6211
 _dsk_set_uint32_le($38, 0, 4474193); //@line 6212
 _dsk_set_uint32_le($38, 4, $cluster_size_0_lcssa); //@line 6213
 _dsk_set_uint32_le($38, 8, $table_size_0_lcssa); //@line 6214
 _dsk_set_uint32_le($38, 12, 1); //@line 6215
 _dsk_set_uint64_le($38, 16, 0, 0); //@line 6218
 _dsk_set_uint64_le($38, 24, 0, 0); //@line 6221
 _dsk_set_uint64_le($38, 32, 0, 0); //@line 6224
 $41$0 = $cluster_size_0_lcssa; //@line 6225
 $41$1 = 0; //@line 6226
 _dsk_set_uint64_le($38, 40, $41$0, $41$1); //@line 6227
 _dsk_set_uint64_le($38, 48, $2$0, $2$1); //@line 6228
 if ((_dsk_write($fp, $38, 0, 0, $41$0, $41$1) | 0) != 0) {
  _free($38); //@line 6235
  $_0 = 1; //@line 6237
  return $_0 | 0; //@line 6240
 }
 _memset($38 | 0, 0, $cluster_size_0_lcssa | 0); //@line 6242
 $46 = $table_size_0_lcssa | 1; //@line 6243
 $i_0 = 1; //@line 6245
 while (1) {
  if ($i_0 >>> 0 >= $46 >>> 0) {
   label = 10728; //@line 6251
   break;
  }
  $51$0 = ___muldi3($i_0, 0, $41$0, $41$1) | 0;
  if ((_dsk_write($fp, $38, $51$0, tempRet0, $41$0, $41$1) | 0) == 0) {
   $i_0 = $i_0 + 1 | 0; //@line 6262
  } else {
   label = 10727; //@line 6264
   break;
  }
 }
 if ((label | 0) == 10727) {
  _free($38); //@line 6269
  $_0 = 1; //@line 6271
  return $_0 | 0; //@line 6274
 } else if ((label | 0) == 10728) {
  _free($38); //@line 6277
  $_0 = 0; //@line 6279
  return $_0 | 0; //@line 6282
 }
 return 0;
}
function _dsk_qed_probe($fname) {
 $fname = $fname | 0;
 var $1 = 0, $4 = 0, $_0_i = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 6292
 STACKTOP = STACKTOP + 8 | 0; //@line 6292
 $1 = _fopen($fname | 0, 54848) | 0; //@line 6294
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 6298
  STACKTOP = sp; //@line 6300
  return $_0 | 0; //@line 6301
 }
 $4 = sp | 0; //@line 6303
 if ((_dsk_read($1, $4, 0, 0, 4, 0) | 0) == 0) {
  $_0_i = (_dsk_get_uint32_le($4, 0) | 0) == 4474193 | 0; //@line 6316
 } else {
  $_0_i = 0; //@line 6318
 }
 _fclose($1 | 0) | 0; //@line 6321
 $_0 = $_0_i; //@line 6323
 STACKTOP = sp; //@line 6325
 return $_0 | 0; //@line 6326
}
function _dsk_qed_translate($qed, $ofs, $alloc) {
 $qed = $qed | 0;
 $ofs = $ofs | 0;
 $alloc = $alloc | 0;
 var $3 = 0, $4 = 0, $6 = 0, $9$0 = 0, $9$1 = 0, $10$0 = 0, $10$1 = 0, $11$0 = 0, $12 = 0, $13$0 = 0, $14 = 0, $15 = 0, $17 = 0, $19$0 = 0, $19$1 = 0, $20$0 = 0, $20$1 = 0, $21 = 0, $22$0 = 0, $22$1 = 0, $23$0 = 0, $23$1 = 0, $31 = 0, $33 = 0, $36$0 = 0, $36$1 = 0, $37 = 0, $38 = 0, $47 = 0, $48 = 0, $49 = 0, $54 = 0, $57 = 0, $61 = 0, $n_0_i = 0, $qed_idx65 = 0, $68 = 0, $74$0 = 0, $74$1 = 0, $82 = 0, $84 = 0, $90 = 0, $97 = 0, $100$0 = 0, $103$0 = 0, $106$0 = 0, $106$1 = 0, $107 = 0, $113 = 0, $_pre_phi = 0, $123 = 0, $125$0 = 0, $125$1 = 0, $131 = 0, $132 = 0, $143 = 0, $144 = 0, $145 = 0, $150 = 0, $153 = 0, $157 = 0, $n_0_i71 = 0, $161 = 0, $165 = 0, $187$0 = 0, $191$0 = 0, $197$0 = 0, $_0 = 0;
 $3 = $qed + 72 | 0; //@line 6377
 $4 = HEAP32[$3 >> 2] | 0; //@line 6378
 $6 = Math_imul($4 >>> 3, HEAP32[$qed + 76 >> 2] | 0) | 0; //@line 6380
 $9$0 = ___udivdi3(HEAP32[$ofs >> 2] | 0, HEAP32[$ofs + 4 >> 2] | 0, $4, 0) | 0;
 $9$1 = tempRet0;
 $10$0 = $6; //@line 6388
 $10$1 = 0; //@line 6389
 $11$0 = ___udivdi3($9$0, $9$1, $10$0, $10$1) | 0;
 $12 = $11$0; //@line 6392
 $13$0 = ___uremdi3($9$0, $9$1, $10$0, $10$1) | 0;
 $14 = $13$0; //@line 6395
 $15 = $qed + 4264 | 0; //@line 6396
 $17 = $12 << 3; //@line 6398
 $19$0 = _dsk_get_uint64_le((HEAP32[$15 >> 2] | 0) + $17 | 0, 0) | 0; //@line 6400
 $19$1 = tempRet0; //@line 6401
 $20$0 = HEAP32[$ofs >> 2] | 0; //@line 6403
 $20$1 = HEAP32[$ofs + 4 >> 2] | 0; //@line 6405
 $21 = $qed + 136 | 0; //@line 6406
 $22$0 = HEAP32[$21 >> 2] | 0; //@line 6408
 $22$1 = HEAP32[$21 + 4 >> 2] | 0; //@line 6410
 $23$0 = $22$0 & $20$0; //@line 6411
 $23$1 = $22$1 & $20$1; //@line 6412
 if ($12 >>> 0 >= $6 >>> 0) {
  $_0 = 1; //@line 6416
  return $_0 | 0; //@line 6419
 }
 if (($19$0 | 0) == 0 & ($19$1 | 0) == 0) {
  if (($alloc | 0) == 0) {
   HEAP32[$ofs >> 2] = 0; //@line 6432
   HEAP32[$ofs + 4 >> 2] = 0; //@line 6434
   $_0 = 0; //@line 6436
   return $_0 | 0; //@line 6439
  }
  $31 = $qed + 144 | 0; //@line 6441
  $33 = $qed + 128 | 0; //@line 6446
  $36$0 = _i64Add(HEAP32[$33 >> 2] | 0, 0, HEAP32[$31 >> 2] | 0, HEAP32[$31 + 4 >> 2] | 0) | 0;
  $36$1 = tempRet0;
  $37 = $qed + 68 | 0; //@line 6451
  $38 = HEAP32[$37 >> 2] | 0; //@line 6452
  do {
   if (($38 | 0) == 0) {
    _memset(HEAP32[$qed + 4272 >> 2] | 0, 0, HEAP32[$3 >> 2] | 0); //@line 6460
   } else {
    $47 = (($22$0 ^ -512) & $20$0) >>> 9 | (($22$1 ^ 511) & $20$1) << 23; //@line 6472
    $48 = HEAP32[$3 >> 2] | 0; //@line 6473
    $49 = $48 >>> 9; //@line 6474
    $54 = $qed + 4272 | 0; //@line 6479
    if (($49 + $47 | 0) >>> 0 > (HEAP32[$38 + 28 >> 2] | 0) >>> 0) {
     _memset(HEAP32[$54 >> 2] | 0, 0, $48 | 0); //@line 6483
     $57 = HEAP32[$37 >> 2] | 0; //@line 6484
     $n_0_i = (HEAP32[$57 + 28 >> 2] | 0) - $47 | 0;
     $61 = $57;
    } else {
     $n_0_i = $49;
     $61 = $38;
    }
    if ((_dsk_read_lba($61, HEAP32[$54 >> 2] | 0, $47, $n_0_i) | 0) == 0) {
     break;
    } else {
     $_0 = 1; //@line 6502
    }
    return $_0 | 0; //@line 6506
   }
  } while (0);
  $qed_idx65 = $qed + 4276 | 0; //@line 6512
  if ((_dsk_write(HEAP32[$qed_idx65 >> 2] | 0, HEAP32[$qed + 4272 >> 2] | 0, $36$0, $36$1, HEAP32[$3 >> 2] | 0, 0) | 0) != 0) {
   $_0 = 1; //@line 6520
   return $_0 | 0; //@line 6523
  }
  $68 = $qed + 4268 | 0; //@line 6525
  _memset(HEAP32[$68 >> 2] | 0, 0, HEAP32[$33 >> 2] | 0); //@line 6528
  _dsk_set_uint64_le((HEAP32[$68 >> 2] | 0) + ($14 << 3) | 0, 0, $36$0, $36$1); //@line 6532
  $74$0 = HEAP32[$31 >> 2] | 0; //@line 6534
  $74$1 = HEAP32[$31 + 4 >> 2] | 0; //@line 6536
  if ((_dsk_write(HEAP32[$qed_idx65 >> 2] | 0, HEAP32[$68 >> 2] | 0, $74$0, $74$1, HEAP32[$33 >> 2] | 0, 0) | 0) != 0) {
   $_0 = 1; //@line 6546
   return $_0 | 0; //@line 6549
  }
  $82 = HEAP32[$qed_idx65 >> 2] | 0; //@line 6551
  _fflush($82 | 0) | 0; //@line 6552
  $84 = $qed + 4256 | 0; //@line 6553
  HEAP32[$84 >> 2] = $74$0; //@line 6555
  HEAP32[$84 + 4 >> 2] = $74$1; //@line 6557
  _dsk_set_uint64_le((HEAP32[$15 >> 2] | 0) + $17 | 0, 0, HEAP32[$31 >> 2] | 0, HEAP32[$31 + 4 >> 2] | 0); //@line 6564
  $90 = $qed + 112 | 0; //@line 6567
  if ((_dsk_write(HEAP32[$qed_idx65 >> 2] | 0, HEAP32[$15 >> 2] | 0, HEAP32[$90 >> 2] | 0, HEAP32[$90 + 4 >> 2] | 0, HEAP32[$33 >> 2] | 0, 0) | 0) != 0) {
   $_0 = 1; //@line 6579
   return $_0 | 0; //@line 6582
  }
  $97 = HEAP32[$qed_idx65 >> 2] | 0; //@line 6584
  _fflush($97 | 0) | 0; //@line 6585
  $100$0 = _i64Add($36$0, $36$1, $23$0 | 0, $23$1 & 0) | 0;
  HEAP32[$ofs >> 2] = $100$0; //@line 6592
  HEAP32[$ofs + 4 >> 2] = tempRet0; //@line 6594
  $103$0 = _i64Add(HEAP32[$3 >> 2] | 0, 0, $36$0, $36$1) | 0;
  HEAP32[$31 >> 2] = $103$0; //@line 6600
  HEAP32[$31 + 4 >> 2] = tempRet0; //@line 6602
  $_0 = 0; //@line 6604
  return $_0 | 0; //@line 6607
 }
 $106$0 = $19$0 & ~$22$0; //@line 6613
 $106$1 = $19$1 & ~$22$1; //@line 6614
 $107 = $qed + 4256 | 0; //@line 6615
 do {
  if ((HEAP32[$107 >> 2] | 0) == ($106$0 | 0) & (HEAP32[$107 + 4 >> 2] | 0) == ($106$1 | 0)) {
   $_pre_phi = $qed + 4268 | 0; //@line 6626
  } else {
   $113 = $qed + 4268 | 0; //@line 6630
   if ((_dsk_read(HEAP32[$qed + 4276 >> 2] | 0, HEAP32[$113 >> 2] | 0, $106$0, $106$1, HEAP32[$qed + 128 >> 2] | 0, 0) | 0) == 0) {
    HEAP32[$107 >> 2] = $106$0; //@line 6641
    HEAP32[$107 + 4 >> 2] = $106$1; //@line 6643
    $_pre_phi = $113; //@line 6645
    break;
   } else {
    $_0 = 1; //@line 6648
    return $_0 | 0; //@line 6651
   }
  }
 } while (0);
 $123 = $14 << 3; //@line 6657
 $125$0 = _dsk_get_uint64_le((HEAP32[$_pre_phi >> 2] | 0) + $123 | 0, 0) | 0; //@line 6659
 $125$1 = tempRet0; //@line 6660
 if (!(($125$0 | 0) == 0 & ($125$1 | 0) == 0)) {
  $197$0 = _i64Add($125$0 & ~HEAP32[$21 >> 2], $125$1 & ~HEAP32[$21 + 4 >> 2], $23$0 | 0, $23$1 & 0) | 0;
  HEAP32[$ofs >> 2] = $197$0; //@line 6682
  HEAP32[$ofs + 4 >> 2] = tempRet0; //@line 6684
  $_0 = 0; //@line 6686
  return $_0 | 0; //@line 6689
 }
 if (($alloc | 0) == 0) {
  HEAP32[$ofs >> 2] = 0; //@line 6697
  HEAP32[$ofs + 4 >> 2] = 0; //@line 6699
  $_0 = 0; //@line 6701
  return $_0 | 0; //@line 6704
 }
 $131 = $qed + 68 | 0; //@line 6706
 $132 = HEAP32[$131 >> 2] | 0; //@line 6707
 do {
  if (($132 | 0) == 0) {
   _memset(HEAP32[$qed + 4272 >> 2] | 0, 0, HEAP32[$3 >> 2] | 0); //@line 6715
  } else {
   $143 = ((HEAP32[$21 >> 2] ^ -512) & HEAP32[$ofs >> 2]) >>> 9 | ((HEAP32[$21 + 4 >> 2] ^ 511) & HEAP32[$ofs + 4 >> 2]) << 23; //@line 6735
   $144 = HEAP32[$3 >> 2] | 0; //@line 6736
   $145 = $144 >>> 9; //@line 6737
   $150 = $qed + 4272 | 0; //@line 6742
   if (($143 + $145 | 0) >>> 0 > (HEAP32[$132 + 28 >> 2] | 0) >>> 0) {
    _memset(HEAP32[$150 >> 2] | 0, 0, $144 | 0); //@line 6746
    $153 = HEAP32[$131 >> 2] | 0; //@line 6747
    $n_0_i71 = (HEAP32[$153 + 28 >> 2] | 0) - $143 | 0;
    $157 = $153;
   } else {
    $n_0_i71 = $145;
    $157 = $132;
   }
   if ((_dsk_read_lba($157, HEAP32[$150 >> 2] | 0, $143, $n_0_i71) | 0) == 0) {
    break;
   } else {
    $_0 = 1; //@line 6765
   }
   return $_0 | 0; //@line 6769
  }
 } while (0);
 $161 = $qed + 4276 | 0; //@line 6772
 $165 = $qed + 144 | 0; //@line 6776
 if ((_dsk_write(HEAP32[$161 >> 2] | 0, HEAP32[$qed + 4272 >> 2] | 0, HEAP32[$165 >> 2] | 0, HEAP32[$165 + 4 >> 2] | 0, HEAP32[$3 >> 2] | 0, 0) | 0) != 0) {
  $_0 = 1; //@line 6788
  return $_0 | 0; //@line 6791
 }
 _dsk_set_uint64_le((HEAP32[$_pre_phi >> 2] | 0) + $123 | 0, 0, HEAP32[$165 >> 2] | 0, HEAP32[$165 + 4 >> 2] | 0); //@line 6799
 if ((_dsk_write(HEAP32[$161 >> 2] | 0, HEAP32[$_pre_phi >> 2] | 0, $106$0, $106$1, HEAP32[$qed + 128 >> 2] | 0, 0) | 0) != 0) {
  $_0 = 1; //@line 6810
  return $_0 | 0; //@line 6813
 }
 _fflush(HEAP32[$161 >> 2] | 0) | 0; //@line 6816
 HEAP32[$107 >> 2] = $106$0; //@line 6818
 HEAP32[$107 + 4 >> 2] = $106$1; //@line 6820
 $187$0 = _i64Add(HEAP32[$165 >> 2] | 0, HEAP32[$165 + 4 >> 2] | 0, $23$0 | 0, $23$1 & 0) | 0;
 HEAP32[$ofs >> 2] = $187$0; //@line 6831
 HEAP32[$ofs + 4 >> 2] = tempRet0; //@line 6833
 $191$0 = _i64Add(HEAP32[$165 >> 2] | 0, HEAP32[$165 + 4 >> 2] | 0, HEAP32[$3 >> 2] | 0, 0) | 0;
 HEAP32[$165 >> 2] = $191$0; //@line 6843
 HEAP32[$165 + 4 >> 2] = tempRet0; //@line 6845
 $_0 = 0; //@line 6847
 return $_0 | 0; //@line 6850
}
function _dsk_img_open_fp($fp, $ofs$0, $ofs$1, $ro) {
 $fp = $fp | 0;
 $ofs$0 = $ofs$0 | 0;
 $ofs$1 = $ofs$1 | 0;
 $ro = $ro | 0;
 var $cnt = 0, $4$0 = 0, $4$1 = 0, $7$0 = 0, $7$1 = 0, $8$0 = 0, $8$1 = 0, $11 = 0, $14 = 0, $22 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 6865
 STACKTOP = STACKTOP + 8 | 0; //@line 6865
 $cnt = sp | 0; //@line 6866
 if ((_dsk_get_filesize($fp, $cnt) | 0) != 0) {
  $_0 = 0; //@line 6871
  STACKTOP = sp; //@line 6873
  return $_0 | 0; //@line 6874
 }
 $4$0 = HEAP32[$cnt >> 2] | 0; //@line 6877
 $4$1 = HEAP32[$cnt + 4 >> 2] | 0; //@line 6879
 if (!($4$1 >>> 0 > $ofs$1 >>> 0 | $4$1 >>> 0 == $ofs$1 >>> 0 & $4$0 >>> 0 > $ofs$0 >>> 0)) {
  $_0 = 0; //@line 6883
  STACKTOP = sp; //@line 6885
  return $_0 | 0; //@line 6886
 }
 $7$0 = _i64Subtract($4$0, $4$1, $ofs$0, $ofs$1) | 0;
 $7$1 = tempRet0;
 $8$0 = $7$0 >>> 9 | $7$1 << 23; //@line 6889
 $8$1 = $7$1 >>> 9 | 0 << 23; //@line 6890
 HEAP32[$cnt >> 2] = $8$0; //@line 6892
 HEAP32[$cnt + 4 >> 2] = $8$1; //@line 6894
 if (($8$0 | 0) == 0 & ($8$1 | 0) == 0) {
  $_0 = 0; //@line 6900
  STACKTOP = sp; //@line 6902
  return $_0 | 0; //@line 6903
 }
 $11 = _malloc(80) | 0; //@line 6905
 if (($11 | 0) == 0) {
  $_0 = 0; //@line 6909
  STACKTOP = sp; //@line 6911
  return $_0 | 0; //@line 6912
 }
 $14 = $11; //@line 6916
 _dsk_init($14, $11, $8$0, 0, 0, 0); //@line 6917
 _dsk_set_type($14, 1); //@line 6918
 _dsk_set_readonly($14, $ro); //@line 6919
 HEAP32[$11 + 4 >> 2] = 158; //@line 6922
 HEAP32[$11 + 8 >> 2] = 66; //@line 6925
 HEAP32[$11 + 12 >> 2] = 26; //@line 6928
 $22 = $11 + 72 | 0; //@line 6930
 HEAP32[$22 >> 2] = $ofs$0; //@line 6932
 HEAP32[$22 + 4 >> 2] = $ofs$1; //@line 6934
 HEAP32[$11 + 68 >> 2] = $fp; //@line 6937
 _dsk_guess_geometry($14) | 0; //@line 6938
 $_0 = $14; //@line 6940
 STACKTOP = sp; //@line 6942
 return $_0 | 0; //@line 6943
}
function _dsk_img_open($fname, $ofs$0, $ofs$1, $ro) {
 $fname = $fname | 0;
 $ofs$0 = $ofs$0 | 0;
 $ofs$1 = $ofs$1 | 0;
 $ro = $ro | 0;
 var $5 = 0, $_012 = 0, $fp_0 = 0, $fp_014 = 0, $_01213 = 0, $11 = 0, $_0 = 0, label = 0;
 do {
  if (($ro | 0) == 0) {
   $5 = _fopen($fname | 0, 56848 | 0) | 0; //@line 6960
   if (($5 | 0) != 0) {
    $_01213 = 0;
    $fp_014 = $5;
    break;
   }
   $fp_0 = _fopen($fname | 0, 54776 | 0) | 0;
   $_012 = 1;
   label = 10801; //@line 6970
  } else {
   $fp_0 = _fopen($fname | 0, 54776 | 0) | 0;
   $_012 = $ro;
   label = 10801; //@line 6975
  }
 } while (0);
 do {
  if ((label | 0) == 10801) {
   if (($fp_0 | 0) == 0) {
    $_0 = 0; //@line 6985
   } else {
    $_01213 = $_012;
    $fp_014 = $fp_0;
    break;
   }
   return $_0 | 0; //@line 6992
  }
 } while (0);
 $11 = _dsk_img_open_fp($fp_014, $ofs$0, $ofs$1, $_01213) | 0; //@line 6997
 if (($11 | 0) == 0) {
  _fclose($fp_014 | 0) | 0; //@line 7001
  $_0 = 0; //@line 7003
  return $_0 | 0; //@line 7006
 } else {
  _dsk_set_fname($11, $fname); //@line 7008
  $_0 = $11; //@line 7010
  return $_0 | 0; //@line 7013
 }
 return 0;
}
function _dsk_img_del($dsk) {
 $dsk = $dsk | 0;
 var $2 = 0;
 $2 = HEAP32[$dsk + 64 >> 2] | 0; //@line 7024
 _fclose(HEAP32[$2 + 68 >> 2] | 0) | 0; //@line 7028
 _free($2); //@line 7029
 return;
}
function _dsk_img_read($dsk, $buf, $i, $n) {
 $dsk = $dsk | 0;
 $buf = $buf | 0;
 $i = $i | 0;
 $n = $n | 0;
 var $7 = 0, $9 = 0, $11$0 = 0, $13$0 = 0, $14$0 = 0, $_0 = 0;
 if (($n + $i | 0) >>> 0 > (HEAP32[$dsk + 28 >> 2] | 0) >>> 0) {
  $_0 = 1; //@line 7052
  return $_0 | 0; //@line 7055
 }
 $7 = HEAP32[$dsk + 64 >> 2] | 0; //@line 7058
 $9 = $7 + 72 | 0; //@line 7060
 $11$0 = $i; //@line 7065
 $13$0 = _i64Add(HEAP32[$9 >> 2] | 0, HEAP32[$9 + 4 >> 2] | 0, $11$0 << 9 | 0 >>> 23, 0 << 9 | $11$0 >>> 23) | 0;
 $14$0 = $n; //@line 7070
 $_0 = (_dsk_read(HEAP32[$7 + 68 >> 2] | 0, $buf, $13$0, tempRet0, $14$0 << 9 | 0 >>> 23, 0 << 9 | $14$0 >>> 23) | 0) != 0 | 0; //@line 7081
 return $_0 | 0; //@line 7084
}
function _dsk_img_write($dsk, $buf, $i, $n) {
 $dsk = $dsk | 0;
 $buf = $buf | 0;
 $i = $i | 0;
 $n = $n | 0;
 var $11 = 0, $13 = 0, $15$0 = 0, $17$0 = 0, $18$0 = 0, $21 = 0, $_0 = 0;
 if ((HEAP8[$dsk + 56 | 0] | 0) != 0) {
  $_0 = 1; //@line 7104
  return $_0 | 0; //@line 7107
 }
 if (($n + $i | 0) >>> 0 > (HEAP32[$dsk + 28 >> 2] | 0) >>> 0) {
  $_0 = 1; //@line 7115
  return $_0 | 0; //@line 7118
 }
 $11 = HEAP32[$dsk + 64 >> 2] | 0; //@line 7121
 $13 = $11 + 72 | 0; //@line 7123
 $15$0 = $i; //@line 7128
 $17$0 = _i64Add(HEAP32[$13 >> 2] | 0, HEAP32[$13 + 4 >> 2] | 0, $15$0 << 9 | 0 >>> 23, 0 << 9 | $15$0 >>> 23) | 0;
 $18$0 = $n; //@line 7133
 $21 = $11 + 68 | 0; //@line 7138
 if ((_dsk_write(HEAP32[$21 >> 2] | 0, $buf, $17$0, tempRet0, $18$0 << 9 | 0 >>> 23, 0 << 9 | $18$0 >>> 23) | 0) != 0) {
  $_0 = 1; //@line 7144
  return $_0 | 0; //@line 7147
 }
 _fflush(HEAP32[$21 >> 2] | 0) | 0; //@line 7150
 $_0 = 0; //@line 7152
 return $_0 | 0; //@line 7155
}
function _chr_log_flush($cdrv) {
 $cdrv = $cdrv | 0;
 var $1 = 0, $2 = 0, $_pre = 0, $_pre_i = 0, $7 = 0, $_038_i = 0, $_02937_i = 0, $9 = 0, $10 = 0, $13 = 0, $i_030_i = 0, $23 = 0, $24 = 0, $i_131_i = 0, $26 = 0, $28 = 0, $_lcssa_i = 0, $i_233_i = 0, $32 = 0, sp = 0;
 sp = STACKTOP; //@line 7169
 $1 = $cdrv + 28 | 0; //@line 7170
 $2 = HEAP32[$1 >> 2] | 0; //@line 7171
 $_pre = $cdrv + 48 | 0; //@line 7173
 if (($2 | 0) == 0) {
  HEAP32[$1 >> 2] = 0; //@line 7176
  HEAP32[$_pre >> 2] = 0; //@line 7177
  STACKTOP = sp; //@line 7178
  return;
 }
 $_pre_i = $cdrv + 52 | 0; //@line 7183
 $7 = (HEAP32[$_pre >> 2] | 0) != 0 ? 50488 : 49536; //@line 7185
 $_02937_i = $2;
 $_038_i = $cdrv + 32 | 0;
 while (1) {
  $9 = $_02937_i >>> 0 < 16; //@line 7191
  $10 = $9 ? $_02937_i : 16; //@line 7192
  $13 = HEAPU8[$_038_i] | 0; //@line 7195
  _fprintf(HEAP32[$_pre_i >> 2] | 0, 50808, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $7, HEAP32[tempInt + 8 >> 2] = $13, tempInt) | 0) | 0; //@line 7196
  if ($10 >>> 0 > 1) {
   $i_030_i = 1; //@line 7200
   do {
    _fprintf(HEAP32[$_pre_i >> 2] | 0, 49064, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAPU8[$_038_i + $i_030_i | 0] | 0, tempInt) | 0) | 0; //@line 7207
    $i_030_i = $i_030_i + 1 | 0; //@line 7208
   } while ($i_030_i >>> 0 < $10 >>> 0);
  }
  $23 = HEAP32[$_pre_i >> 2] | 0; //@line 7218
  if ($9) {
   $i_131_i = $10;
   $24 = $23;
   while (1) {
    _fwrite(48672, 3, 1, $24 | 0) | 0; //@line 7225
    $26 = $i_131_i + 1 | 0; //@line 7226
    $28 = HEAP32[$_pre_i >> 2] | 0; //@line 7228
    if ($26 >>> 0 < 16) {
     $i_131_i = $26;
     $24 = $28;
    } else {
     $_lcssa_i = $28; //@line 7233
     break;
    }
   }
  } else {
   $_lcssa_i = $23; //@line 7238
  }
  _fwrite(48280, 2, 1, $_lcssa_i | 0) | 0; //@line 7241
  if (($10 | 0) != 0) {
   $i_233_i = 0; //@line 7245
   do {
    $32 = HEAP8[$_038_i + $i_233_i | 0] | 0; //@line 7249
    _fputc((($32 - 32 & 255) > 94 ? 46 : $32 & 255) | 0, HEAP32[$_pre_i >> 2] | 0) | 0; //@line 7255
    $i_233_i = $i_233_i + 1 | 0; //@line 7256
   } while ($i_233_i >>> 0 < $10 >>> 0);
  }
  _fputc(10, HEAP32[$_pre_i >> 2] | 0) | 0; //@line 7267
  if (($_02937_i | 0) == ($10 | 0)) {
   break;
  } else {
   $_02937_i = $_02937_i - $10 | 0;
   $_038_i = $_038_i + $10 | 0;
  }
 }
 _fflush(HEAP32[$_pre_i >> 2] | 0) | 0; //@line 7279
 HEAP32[$1 >> 2] = 0; //@line 7281
 HEAP32[$_pre >> 2] = 0; //@line 7282
 STACKTOP = sp; //@line 7283
 return;
}
function _chr_init($cdrv, $ext) {
 $cdrv = $cdrv | 0;
 $ext = $ext | 0;
 HEAP32[$cdrv >> 2] = $ext; //@line 7295
 _memset($cdrv + 4 | 0, 0, 28); //@line 7299
 _memset($cdrv + 48 | 0, 0, 32); //@line 7301
 return;
}
function _chr_close($cdrv) {
 $cdrv = $cdrv | 0;
 var $3 = 0, $7 = 0, $11 = 0;
 if (($cdrv | 0) == 0) {
  return;
 }
 $3 = $cdrv + 52 | 0; //@line 7319
 if ((HEAP32[$3 >> 2] | 0) != 0) {
  _chr_log_flush($cdrv); //@line 7324
  $7 = HEAP32[$3 >> 2] | 0; //@line 7325
  _fclose($7 | 0) | 0; //@line 7326
 }
 $11 = HEAP32[$cdrv + 56 >> 2] | 0; //@line 7330
 if (($11 | 0) == 0) {
  return;
 }
 FUNCTION_TABLE_vi[$11 & 1023]($cdrv); //@line 7337
 return;
}
function _chr_read($cdrv, $buf, $cnt) {
 $cdrv = $cdrv | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 var $4 = 0, $7 = 0, $13 = 0, $_pre = 0, $_026_i = 0, $_02425_i = 0, $21 = 0, $22 = 0, $_0__i = 0, $24 = 0, $26 = 0, $_0 = 0;
 if (($cdrv | 0) == 0) {
  $_0 = 0; //@line 7357
  return $_0 | 0; //@line 7360
 }
 $4 = HEAP32[$cdrv + 60 >> 2] | 0; //@line 7363
 if (($4 | 0) == 0) {
  $_0 = 0; //@line 7367
  return $_0 | 0; //@line 7370
 }
 $7 = FUNCTION_TABLE_iiii[$4 & 127]($cdrv, $buf, $cnt) | 0; //@line 7372
 if ((HEAP32[$cdrv + 52 >> 2] | 0) == 0 | ($7 | 0) == 0) {
  $_0 = $7; //@line 7380
  return $_0 | 0; //@line 7383
 }
 $13 = $cdrv + 28 | 0; //@line 7385
 $_pre = $cdrv + 48 | 0; //@line 7388
 do {
  if ((HEAP32[$13 >> 2] | 0) != 0) {
   if ((HEAP32[$_pre >> 2] | 0) == 0) {
    break;
   }
   _chr_log_flush($cdrv); //@line 7398
  }
 } while (0);
 $_02425_i = $buf;
 $_026_i = $7;
 while (1) {
  $21 = HEAP32[$13 >> 2] | 0; //@line 7407
  $22 = 16 - $21 | 0; //@line 7408
  $_0__i = $_026_i >>> 0 < $22 >>> 0 ? $_026_i : $22; //@line 7410
  $24 = $cdrv + 32 + $21 | 0; //@line 7411
  _memcpy($24 | 0, $_02425_i | 0, $_0__i) | 0; //@line 7412
  $26 = $_0__i + (HEAP32[$13 >> 2] | 0) | 0; //@line 7414
  HEAP32[$13 >> 2] = $26; //@line 7415
  HEAP32[$_pre >> 2] = 0; //@line 7416
  if ($26 >>> 0 > 15) {
   _chr_log_flush($cdrv); //@line 7420
  }
  if (($_026_i | 0) == ($_0__i | 0)) {
   $_0 = $7; //@line 7426
   break;
  }
  $_02425_i = $_02425_i + $_0__i | 0;
  $_026_i = $_026_i - $_0__i | 0;
 }
 return $_0 | 0; //@line 7436
}
function _chr_mouse_write($cdrv, $buf, $cnt) {
 $cdrv = $cdrv | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 return $cnt | 0; //@line 7447
}
function _chr_mouse_get_ctl($cdrv, $ctl) {
 $cdrv = $cdrv | 0;
 $ctl = $ctl | 0;
 HEAP32[$ctl >> 2] = 1792; //@line 7456
 return 0; //@line 7458
}
function _chr_mouse_set_params($cdrv, $bps, $bpc, $parity, $stop) {
 $cdrv = $cdrv | 0;
 $bps = $bps | 0;
 $bpc = $bpc | 0;
 $parity = $parity | 0;
 $stop = $stop | 0;
 return 0; //@line 7471
}
function _chr_mouse_set_ctl($cdrv, $ctl) {
 $cdrv = $cdrv | 0;
 $ctl = $ctl | 0;
 var $2 = 0, $3 = 0, $5 = 0, $_pre = 0;
 $2 = HEAP32[$cdrv >> 2] | 0; //@line 7486
 $3 = $ctl & 1; //@line 7487
 $5 = $ctl & 2; //@line 7489
 $_pre = $2 + 348 | 0; //@line 7497
 do {
  if (!((HEAP32[$2 + 80 >> 2] | 0) != 0 | ($5 | 0) == 0 | ($3 | 0) == 0)) {
   if ((HEAP8[$_pre] | 0) != 0) {
    if ((HEAP8[$2 + 349 | 0] | 0) != 0) {
     break;
    }
   }
   HEAP32[$2 + 352 >> 2] = 0; //@line 7515
   HEAP32[$2 + 356 >> 2] = 0; //@line 7518
   HEAP32[$2 + 372 >> 2] = 0; //@line 7521
   HEAP32[$2 + 384 >> 2] = 0; //@line 7524
   HEAP32[$2 + 84 >> 2] = 1; //@line 7527
   HEAP32[$2 + 88 >> 2] = 0; //@line 7530
   HEAP8[$2 + 92 | 0] = 77; //@line 7532
  }
 } while (0);
 HEAP8[$_pre] = $3 & 255; //@line 7537
 HEAP8[$2 + 349 | 0] = $5 >>> 1 & 255; //@line 7541
 return 0; //@line 7543
}
function _chr_write($cdrv, $buf, $cnt) {
 $cdrv = $cdrv | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 var $4 = 0, $7 = 0, $13 = 0, $_pre = 0, $_026_i = 0, $_02425_i = 0, $21 = 0, $22 = 0, $_0__i = 0, $24 = 0, $26 = 0, $_0 = 0;
 if (($cdrv | 0) == 0) {
  $_0 = $cnt; //@line 7560
  return $_0 | 0; //@line 7563
 }
 $4 = HEAP32[$cdrv + 64 >> 2] | 0; //@line 7566
 if (($4 | 0) == 0) {
  $_0 = $cnt; //@line 7570
  return $_0 | 0; //@line 7573
 }
 $7 = FUNCTION_TABLE_iiii[$4 & 127]($cdrv, $buf, $cnt) | 0; //@line 7575
 if ((HEAP32[$cdrv + 52 >> 2] | 0) == 0 | ($7 | 0) == 0) {
  $_0 = $7; //@line 7583
  return $_0 | 0; //@line 7586
 }
 $13 = $cdrv + 28 | 0; //@line 7588
 $_pre = $cdrv + 48 | 0; //@line 7591
 do {
  if ((HEAP32[$13 >> 2] | 0) != 0) {
   if ((HEAP32[$_pre >> 2] | 0) == 1) {
    break;
   }
   _chr_log_flush($cdrv); //@line 7601
  }
 } while (0);
 $_02425_i = $buf;
 $_026_i = $7;
 while (1) {
  $21 = HEAP32[$13 >> 2] | 0; //@line 7610
  $22 = 16 - $21 | 0; //@line 7611
  $_0__i = $_026_i >>> 0 < $22 >>> 0 ? $_026_i : $22; //@line 7613
  $24 = $cdrv + 32 + $21 | 0; //@line 7614
  _memcpy($24 | 0, $_02425_i | 0, $_0__i) | 0; //@line 7615
  $26 = $_0__i + (HEAP32[$13 >> 2] | 0) | 0; //@line 7617
  HEAP32[$13 >> 2] = $26; //@line 7618
  HEAP32[$_pre >> 2] = 1; //@line 7619
  if ($26 >>> 0 > 15) {
   _chr_log_flush($cdrv); //@line 7623
  }
  if (($_026_i | 0) == ($_0__i | 0)) {
   $_0 = $7; //@line 7629
   break;
  }
  $_02425_i = $_02425_i + $_0__i | 0;
  $_026_i = $_026_i - $_0__i | 0;
 }
 return $_0 | 0; //@line 7639
}
function _chr_log_ctl($cdrv, $old, $new) {
 $cdrv = $cdrv | 0;
 $old = $old | 0;
 $new = $new | 0;
 var $1 = 0, $6 = 0, $10 = 0, $_lobit = 0, $16 = 0, $17 = 0, $22 = 0, $_lobit27 = 0, $28 = 0, $_lobit28 = 0, $34 = 0, $_lobit29 = 0, sp = 0;
 sp = STACKTOP; //@line 7654
 $1 = $cdrv + 52 | 0; //@line 7655
 if ((HEAP32[$1 >> 2] | 0) == 0 | ($old | 0) == ($new | 0)) {
  STACKTOP = sp; //@line 7662
  return;
 }
 _chr_log_flush($cdrv); //@line 7665
 $6 = $new ^ $old; //@line 7666
 if (($6 & 512 | 0) != 0) {
  $10 = HEAP32[$1 >> 2] | 0; //@line 7671
  $_lobit = $new >>> 9 & 1; //@line 7673
  _fprintf($10 | 0, 51312, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 55288, HEAP32[tempInt + 8 >> 2] = $_lobit, tempInt) | 0) | 0; //@line 7674
 }
 if (($6 & 1 | 0) != 0) {
  $16 = HEAP32[$1 >> 2] | 0; //@line 7681
  $17 = $new & 1; //@line 7682
  _fprintf($16 | 0, 51312, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 54624, HEAP32[tempInt + 8 >> 2] = $17, tempInt) | 0) | 0; //@line 7683
 }
 if (($6 & 2 | 0) != 0) {
  $22 = HEAP32[$1 >> 2] | 0; //@line 7690
  $_lobit27 = $new >>> 1 & 1; //@line 7692
  _fprintf($22 | 0, 51312, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 53928, HEAP32[tempInt + 8 >> 2] = $_lobit27, tempInt) | 0) | 0; //@line 7693
 }
 if (($6 & 256 | 0) != 0) {
  $28 = HEAP32[$1 >> 2] | 0; //@line 7700
  $_lobit28 = $new >>> 8 & 1; //@line 7702
  _fprintf($28 | 0, 51312, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 53320, HEAP32[tempInt + 8 >> 2] = $_lobit28, tempInt) | 0) | 0; //@line 7703
 }
 if (($6 & 1024 | 0) != 0) {
  $34 = HEAP32[$1 >> 2] | 0; //@line 7710
  $_lobit29 = $new >>> 10 & 1; //@line 7712
  _fprintf($34 | 0, 51312, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 52480, HEAP32[tempInt + 8 >> 2] = $_lobit29, tempInt) | 0) | 0; //@line 7713
 }
 if (($6 & 2048 | 0) == 0) {
  STACKTOP = sp; //@line 7720
  return;
 }
 _fprintf(HEAP32[$1 >> 2] | 0, 51312, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 51840, HEAP32[tempInt + 8 >> 2] = $new >>> 11 & 1, tempInt) | 0) | 0; //@line 7726
 STACKTOP = sp; //@line 7728
 return;
}
function _chr_set_ctl($cdrv, $ctl) {
 $cdrv = $cdrv | 0;
 $ctl = $ctl | 0;
 var $3 = 0, $4 = 0, $8 = 0, $_0 = 0;
 do {
  if (($cdrv | 0) == 0) {
   $_0 = 1; //@line 7744
  } else {
   $3 = $cdrv + 24 | 0; //@line 7746
   $4 = HEAP32[$3 >> 2] | 0; //@line 7747
   if (($4 | 0) == ($ctl | 0)) {
    $_0 = 0; //@line 7751
    break;
   }
   _chr_log_ctl($cdrv, $4, $ctl); //@line 7754
   HEAP32[$3 >> 2] = $ctl; //@line 7755
   $8 = HEAP32[$cdrv + 72 >> 2] | 0; //@line 7757
   if (($8 | 0) == 0) {
    $_0 = 0; //@line 7761
    break;
   }
   $_0 = FUNCTION_TABLE_iii[$8 & 63]($cdrv, $ctl) | 0; //@line 7766
  }
 } while (0);
 return $_0 | 0; //@line 7771
}
function _chr_set_params($cdrv, $bps, $bpc, $parity, $stop) {
 $cdrv = $cdrv | 0;
 $bps = $bps | 0;
 $bpc = $bpc | 0;
 $parity = $parity | 0;
 $stop = $stop | 0;
 var $3 = 0, $6 = 0, $17 = 0, $18 = 0, $19 = 0, $23 = 0, $par_0_i = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $33 = 0, $36 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 7786
 if (($cdrv | 0) == 0) {
  $_0 = 1; //@line 7790
  STACKTOP = sp; //@line 7792
  return $_0 | 0; //@line 7793
 }
 $3 = $cdrv + 4 | 0; //@line 7795
 $6 = $cdrv + 8 | 0; //@line 7798
 do {
  if ((HEAP32[$3 >> 2] | 0) == ($bps | 0)) {
   if ((HEAP32[$6 >> 2] | 0) != ($bpc | 0)) {
    break;
   }
   if ((HEAP32[$cdrv + 12 >> 2] | 0) != ($parity | 0)) {
    break;
   }
   if ((HEAP32[$cdrv + 16 >> 2] | 0) == ($stop | 0)) {
    $_0 = 0; //@line 7820
   } else {
    break;
   }
   STACKTOP = sp; //@line 7825
   return $_0 | 0; //@line 7826
  }
 } while (0);
 HEAP32[$3 >> 2] = $bps; //@line 7829
 HEAP32[$6 >> 2] = $bpc; //@line 7830
 $17 = $cdrv + 12 | 0; //@line 7831
 HEAP32[$17 >> 2] = $parity; //@line 7832
 $18 = $cdrv + 16 | 0; //@line 7833
 HEAP32[$18 >> 2] = $stop; //@line 7834
 $19 = $cdrv + 52 | 0; //@line 7835
 if ((HEAP32[$19 >> 2] | 0) != 0) {
  _chr_log_flush($cdrv); //@line 7840
  $23 = HEAP32[$17 >> 2] | 0; //@line 7841
  if (($23 | 0) == 0) {
   $par_0_i = 31848; //@line 7843
  } else if (($23 | 0) == 2) {
   $par_0_i = 58040; //@line 7846
  } else if (($23 | 0) == 1) {
   $par_0_i = 30888; //@line 7849
  } else {
   $par_0_i = 57248; //@line 7852
  }
  $28 = HEAP32[$19 >> 2] | 0; //@line 7855
  $29 = HEAP32[$3 >> 2] | 0; //@line 7856
  $30 = HEAP32[$6 >> 2] | 0; //@line 7857
  $31 = HEAP32[$18 >> 2] | 0; //@line 7858
  _fprintf($28 | 0, 56024, (tempInt = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempInt >> 2] = $29, HEAP32[tempInt + 8 >> 2] = $30, HEAP32[tempInt + 16 >> 2] = $par_0_i, HEAP32[tempInt + 24 >> 2] = $31, tempInt) | 0) | 0; //@line 7859
  $33 = HEAP32[$19 >> 2] | 0; //@line 7860
  _fflush($33 | 0) | 0; //@line 7861
 }
 $36 = HEAP32[$cdrv + 76 >> 2] | 0; //@line 7865
 if (($36 | 0) == 0) {
  $_0 = 1; //@line 7869
  STACKTOP = sp; //@line 7871
  return $_0 | 0; //@line 7872
 }
 $_0 = FUNCTION_TABLE_iiiiii[$36 & 7]($cdrv, $bps, $bpc, $parity, $stop) | 0; //@line 7876
 STACKTOP = sp; //@line 7878
 return $_0 | 0; //@line 7879
}
function _chr_open($name) {
 $name = $name | 0;
 var $1 = 0, $3 = 0, $i_018 = 0, $4 = 0, $_pr = 0, $d_016 = 0, $s_015 = 0, $9 = 0, $10 = 0, $11 = 0, $s_013 = 0, $14 = 0, $18 = 0, $21 = 0, $24 = 0, $28 = 0, $32 = 0, $34 = 0, $_0 = 0, label = 0;
 $1 = HEAP32[7262] | 0; //@line 7892
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 7896
  return $_0 | 0; //@line 7899
 } else {
  $i_018 = 0;
  $3 = $1;
 }
 while (1) {
  $4 = HEAP8[$3] | 0; //@line 7906
  L13647 : do {
   if ($4 << 24 >> 24 == 0) {
    $s_013 = $name; //@line 7911
    label = 10932; //@line 7912
   } else {
    $s_015 = $name;
    $d_016 = $3;
    $_pr = $4;
    while (1) {
     if ($_pr << 24 >> 24 != (HEAP8[$s_015] | 0)) {
      break;
     }
     $9 = $d_016 + 1 | 0; //@line 7924
     $10 = $s_015 + 1 | 0; //@line 7925
     $11 = HEAP8[$9] | 0; //@line 7926
     if ($11 << 24 >> 24 == 0) {
      $s_013 = $10; //@line 7930
      label = 10932; //@line 7931
      break L13647;
     } else {
      $s_015 = $10;
      $d_016 = $9;
      $_pr = $11;
     }
    }
    if ($_pr << 24 >> 24 == 0) {
     $s_013 = $s_015; //@line 7940
     label = 10932; //@line 7941
    }
   }
  } while (0);
  if ((label | 0) == 10932) {
   label = 0; //@line 7946
   $14 = HEAP8[$s_013] | 0; //@line 7948
   if (($14 << 24 >> 24 | 0) == 58 | ($14 << 24 >> 24 | 0) == 0) {
    break;
   }
  }
  $32 = $i_018 + 1 | 0; //@line 7953
  $34 = HEAP32[29048 + ($32 << 3) >> 2] | 0; //@line 7955
  if (($34 | 0) == 0) {
   $_0 = 0; //@line 7959
   label = 10941; //@line 7960
   break;
  } else {
   $i_018 = $32;
   $3 = $34;
  }
 }
 if ((label | 0) == 10941) {
  return $_0 | 0; //@line 7969
 }
 $18 = FUNCTION_TABLE_ii[HEAP32[29052 + ($i_018 << 3) >> 2] & 31]($name) | 0; //@line 7973
 if (($18 | 0) == 0) {
  $_0 = 0; //@line 7977
  return $_0 | 0; //@line 7980
 }
 $21 = _drv_get_option($name, 33728) | 0; //@line 7982
 if (($21 | 0) == 0) {
  $_0 = $18; //@line 7986
  return $_0 | 0; //@line 7989
 }
 $24 = $18 + 52 | 0; //@line 7991
 if ((HEAP32[$24 >> 2] | 0) != 0) {
  _chr_log_flush($18); //@line 7996
  $28 = HEAP32[$24 >> 2] | 0; //@line 7997
  _fclose($28 | 0) | 0; //@line 7998
 }
 HEAP32[$24 >> 2] = _fopen($21 | 0, 36728) | 0; //@line 8002
 _free($21); //@line 8003
 $_0 = $18; //@line 8005
 return $_0 | 0; //@line 8008
}
function _chr_mouse_open($name) {
 $name = $name | 0;
 var $1 = 0, $4 = 0, $5 = 0, $19 = 0, $32 = 0, $storemerge_i = 0, $45 = 0, $47 = 0, $56 = 0, $58 = 0, $64 = 0, $65 = 0, $_0 = 0;
 $1 = _malloc(388) | 0; //@line 8024
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 8028
  return $_0 | 0; //@line 8031
 }
 $4 = $1; //@line 8033
 $5 = $1; //@line 8034
 _chr_init($5, $1); //@line 8035
 HEAP32[$1 + 56 >> 2] = 258; //@line 8038
 HEAP32[$1 + 60 >> 2] = 22; //@line 8041
 HEAP32[$1 + 64 >> 2] = 102; //@line 8044
 HEAP32[$1 + 68 >> 2] = 38; //@line 8047
 HEAP32[$1 + 72 >> 2] = 40; //@line 8050
 HEAP32[$1 + 76 >> 2] = 4; //@line 8053
 $19 = $1 + 80 | 0; //@line 8055
 HEAP32[$19 >> 2] = 0; //@line 8056
 HEAP32[$1 + 84 >> 2] = 0; //@line 8059
 HEAP32[$1 + 88 >> 2] = 0; //@line 8062
 HEAP8[$1 + 348 | 0] = 0; //@line 8064
 HEAP8[$1 + 349 | 0] = 0; //@line 8066
 HEAP32[$1 + 352 >> 2] = 0; //@line 8069
 HEAP32[$1 + 356 >> 2] = 0; //@line 8072
 HEAP32[$1 + 360 >> 2] = 0; //@line 8075
 $32 = _drv_get_option($name, 54352) | 0; //@line 8076
 if (($32 | 0) != 0) {
  do {
   if ((_strcmp($32 | 0, 56760) | 0) == 0) {
    $storemerge_i = 0; //@line 8085
   } else {
    if ((_strcmp($32 | 0, 50264) | 0) == 0) {
     $storemerge_i = 1; //@line 8091
     break;
    }
    _free($32); //@line 8094
    _free($1); //@line 8095
    $_0 = 0; //@line 8097
    return $_0 | 0; //@line 8100
   }
  } while (0);
  HEAP32[$19 >> 2] = $storemerge_i; //@line 8104
  _free($32); //@line 8105
 }
 HEAP32[$1 + 364 >> 2] = _drv_get_option_sint($name, 46280, 1) | 0; //@line 8111
 $45 = _drv_get_option_sint($name, 42736, 1) | 0; //@line 8112
 $47 = $1 + 368 | 0; //@line 8114
 HEAP32[$47 >> 2] = $45; //@line 8115
 HEAP32[$1 + 372 >> 2] = 0; //@line 8118
 if (($45 | 0) == 0) {
  HEAP32[$47 >> 2] = 1; //@line 8122
 }
 HEAP32[$1 + 376 >> 2] = _drv_get_option_sint($name, 39640, 1) | 0; //@line 8128
 $56 = _drv_get_option_sint($name, 36704, 1) | 0; //@line 8129
 $58 = $1 + 380 | 0; //@line 8131
 HEAP32[$58 >> 2] = $56; //@line 8132
 HEAP32[$1 + 384 >> 2] = 0; //@line 8135
 if (($56 | 0) == 0) {
  HEAP32[$58 >> 2] = 1; //@line 8139
 }
 $64 = HEAP32[15682] | 0; //@line 8142
 $65 = $64 + 1 | 0; //@line 8143
 if ($65 >>> 0 >= 8) {
  $_0 = $5; //@line 8147
  return $_0 | 0; //@line 8150
 }
 HEAP32[15682] = $65; //@line 8152
 HEAP32[62736 + ($64 << 2) >> 2] = $4; //@line 8154
 $_0 = $5; //@line 8156
 return $_0 | 0; //@line 8159
}
function _chr_mouse_close($cdrv) {
 $cdrv = $cdrv | 0;
 var $2 = 0, $3 = 0, $4 = 0, $i_07 = 0, $n_06 = 0, $7 = 0, $n_1 = 0, $13 = 0, $n_0_lcssa = 0;
 $2 = HEAP32[$cdrv >> 2] | 0; //@line 8170
 $3 = $2; //@line 8171
 $4 = HEAP32[15682] | 0; //@line 8172
 if (($4 | 0) == 0) {
  $n_0_lcssa = 0; //@line 8176
  HEAP32[15682] = $n_0_lcssa; //@line 8178
  _free($2); //@line 8179
  return;
 } else {
  $n_06 = 0;
  $i_07 = 0;
 }
 while (1) {
  $7 = HEAP32[62736 + ($i_07 << 2) >> 2] | 0; //@line 8189
  if (($7 | 0) == ($3 | 0)) {
   $n_1 = $n_06; //@line 8193
  } else {
   HEAP32[62736 + ($n_06 << 2) >> 2] = $7; //@line 8197
   $n_1 = $n_06 + 1 | 0; //@line 8199
  }
  $13 = $i_07 + 1 | 0; //@line 8202
  if ($13 >>> 0 < $4 >>> 0) {
   $n_06 = $n_1;
   $i_07 = $13;
  } else {
   $n_0_lcssa = $n_1; //@line 8208
   break;
  }
 }
 HEAP32[15682] = $n_0_lcssa; //@line 8213
 _free($2); //@line 8214
 return;
}
function _chr_mouse_read($cdrv, $buf, $cnt) {
 $cdrv = $cdrv | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 var $2 = 0, $3 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, $23 = 0, $24 = 0, $28 = 0, $cnt_ = 0, $31 = 0, $i_021 = 0, $37 = 0, $38 = 0, $_0 = 0;
 $2 = HEAP32[$cdrv >> 2] | 0; //@line 8232
 $3 = $2; //@line 8233
 $5 = $2 + 84 | 0; //@line 8235
 $6 = HEAP32[$5 >> 2] | 0; //@line 8236
 $8 = $2 + 88 | 0; //@line 8238
 $9 = HEAP32[$8 >> 2] | 0; //@line 8239
 if (($6 | 0) == ($9 | 0)) {
  do {
   if ((HEAP32[$2 + 352 >> 2] | 0) == 0) {
    if ((HEAP32[$2 + 356 >> 2] | 0) == 0) {
     $_0 = 0; //@line 8256
    } else {
     break;
    }
    return $_0 | 0; //@line 8262
   }
  } while (0);
  _chr_mouse_add_packet($3); //@line 8265
  $24 = HEAP32[$5 >> 2] | 0;
  $23 = HEAP32[$8 >> 2] | 0;
 } else {
  $24 = $6;
  $23 = $9;
 }
 if (($24 | 0) == ($23 | 0)) {
  $_0 = 0; //@line 8278
  return $_0 | 0; //@line 8281
 }
 $28 = $24 - $23 & 255; //@line 8284
 $cnt_ = $28 >>> 0 > $cnt >>> 0 ? $cnt : $28; //@line 8286
 if (($cnt_ | 0) == 0) {
  $_0 = 0; //@line 8290
  return $_0 | 0; //@line 8293
 } else {
  $i_021 = 0;
  $31 = $23;
 }
 while (1) {
  HEAP8[$buf + $i_021 | 0] = HEAP8[$2 + ($31 + 92) | 0] | 0; //@line 8304
  $37 = (HEAP32[$8 >> 2] | 0) + 1 & 255; //@line 8307
  HEAP32[$8 >> 2] = $37; //@line 8308
  $38 = $i_021 + 1 | 0; //@line 8309
  if ($38 >>> 0 < $cnt_ >>> 0) {
   $i_021 = $38;
   $31 = $37;
  } else {
   $_0 = $cnt_; //@line 8315
   break;
  }
 }
 return $_0 | 0; //@line 8321
}
function _chr_null_read($cdrv, $buf, $cnt) {
 $cdrv = $cdrv | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 return 0; //@line 8332
}
function _chr_null_write($cdrv, $buf, $cnt) {
 $cdrv = $cdrv | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 return $cnt | 0; //@line 8343
}
function _chr_null_get_ctl($cdrv, $ctl) {
 $cdrv = $cdrv | 0;
 $ctl = $ctl | 0;
 HEAP32[$ctl >> 2] = 1792; //@line 8352
 return 0; //@line 8354
}
function _chr_null_set_ctl($cdrv, $ctl) {
 $cdrv = $cdrv | 0;
 $ctl = $ctl | 0;
 return 0; //@line 8364
}
function _chr_null_set_params($cdrv, $bps, $bpc, $parity, $stop) {
 $cdrv = $cdrv | 0;
 $bps = $bps | 0;
 $bpc = $bpc | 0;
 $parity = $parity | 0;
 $stop = $stop | 0;
 return 0; //@line 8377
}
function _chr_mouse_add_packet($drv) {
 $drv = $drv | 0;
 var $2 = 0, $drv_idx_i = 0, $drv_idx_val_i = 0, $9 = 0, $10 = 0, $tmp_0_i17_i = 0, $15 = 0, $16 = 0, $tmp_0_i_i = 0, $22 = 0, $39 = 0, $44 = 0, $drv_idx_i3 = 0, $drv_idx_val_i4 = 0, $57 = 0, $60 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $tmp_0_i17_i8 = 0, $81 = 0, $82 = 0, $tmp_0_i_i11 = 0, $92 = 0, $93 = 0, $tmp_0_i17_1_i = 0, $102 = 0, $103 = 0, $tmp_0_i_1_i = 0;
 $2 = HEAP32[$drv + 80 >> 2] | 0; //@line 8402
 if (($2 | 0) == 0) {
  $drv_idx_i = $drv + 84 | 0; //@line 8404
  $drv_idx_val_i = HEAP32[$drv_idx_i >> 2] | 0; //@line 8405
  if ((256 - ($drv_idx_val_i - (HEAP32[$drv + 88 >> 2] | 0) & 255) | 0) >>> 0 < 3) {
   return;
  }
  $9 = $drv + 352 | 0; //@line 8417
  $10 = HEAP32[$9 >> 2] | 0; //@line 8418
  if (($10 | 0) < -127) {
   $tmp_0_i17_i = -127; //@line 8422
  } else {
   $tmp_0_i17_i = ($10 | 0) > 127 ? 127 : $10; //@line 8427
  }
  HEAP32[$9 >> 2] = $10 - $tmp_0_i17_i; //@line 8431
  $15 = $drv + 356 | 0; //@line 8432
  $16 = HEAP32[$15 >> 2] | 0; //@line 8433
  if (($16 | 0) < -127) {
   $tmp_0_i_i = -127; //@line 8437
  } else {
   $tmp_0_i_i = ($16 | 0) > 127 ? 127 : $16; //@line 8442
  }
  HEAP32[$15 >> 2] = $16 - $tmp_0_i_i; //@line 8446
  $22 = HEAP32[$drv + 360 >> 2] | 0; //@line 8448
  HEAP8[$drv + 92 + $drv_idx_val_i | 0] = ($tmp_0_i17_i >>> 6 & 3 | $tmp_0_i_i >>> 4 & 12 | $22 << 3 & 16 | $22 << 5 & 32 | 64) & 255; //@line 8463
  $39 = (HEAP32[$drv_idx_i >> 2] | 0) + 1 & 255; //@line 8466
  HEAP32[$drv_idx_i >> 2] = $39; //@line 8467
  HEAP8[$drv + 92 + $39 | 0] = $tmp_0_i17_i & 63; //@line 8471
  $44 = (HEAP32[$drv_idx_i >> 2] | 0) + 1 & 255; //@line 8474
  HEAP32[$drv_idx_i >> 2] = $44; //@line 8475
  HEAP8[$drv + 92 + $44 | 0] = $tmp_0_i_i & 63; //@line 8479
  HEAP32[$drv_idx_i >> 2] = (HEAP32[$drv_idx_i >> 2] | 0) + 1 & 255; //@line 8483
  return;
 } else if (($2 | 0) == 1) {
  $drv_idx_i3 = $drv + 84 | 0; //@line 8488
  $drv_idx_val_i4 = HEAP32[$drv_idx_i3 >> 2] | 0; //@line 8489
  if ((256 - ($drv_idx_val_i4 - (HEAP32[$drv + 88 >> 2] | 0) & 255) | 0) >>> 0 < 5) {
   return;
  }
  $57 = HEAP32[$drv + 360 >> 2] | 0; //@line 8502
  $60 = $57 >>> 1; //@line 8505
  HEAP8[$drv + 92 + $drv_idx_val_i4 | 0] = (($60 & 1 | $57 << 2 & 4 | $60 & 2) ^ 135) & 255; //@line 8513
  $69 = (HEAP32[$drv_idx_i3 >> 2] | 0) + 1 & 255; //@line 8516
  HEAP32[$drv_idx_i3 >> 2] = $69; //@line 8517
  $70 = $drv + 352 | 0; //@line 8518
  $71 = $drv + 356 | 0; //@line 8519
  $72 = HEAP32[$70 >> 2] | 0; //@line 8520
  if (($72 | 0) < -127) {
   $tmp_0_i17_i8 = -127; //@line 8524
  } else {
   $tmp_0_i17_i8 = ($72 | 0) > 127 ? 127 : $72; //@line 8529
  }
  HEAP32[$70 >> 2] = $72 - $tmp_0_i17_i8; //@line 8533
  HEAP8[$drv + 92 + $69 | 0] = $tmp_0_i17_i8 & 255; //@line 8536
  $81 = (HEAP32[$drv_idx_i3 >> 2] | 0) + 1 & 255; //@line 8539
  HEAP32[$drv_idx_i3 >> 2] = $81; //@line 8540
  $82 = HEAP32[$71 >> 2] | 0; //@line 8541
  if (($82 | 0) < -127) {
   $tmp_0_i_i11 = -127; //@line 8545
  } else {
   $tmp_0_i_i11 = ($82 | 0) > 127 ? 127 : $82; //@line 8550
  }
  HEAP32[$71 >> 2] = $82 - $tmp_0_i_i11; //@line 8554
  HEAP8[$drv + 92 + $81 | 0] = -$tmp_0_i_i11 & 255; //@line 8558
  $92 = (HEAP32[$drv_idx_i3 >> 2] | 0) + 1 & 255; //@line 8561
  HEAP32[$drv_idx_i3 >> 2] = $92; //@line 8562
  $93 = HEAP32[$70 >> 2] | 0; //@line 8563
  if (($93 | 0) < -127) {
   $tmp_0_i17_1_i = -127; //@line 8567
  } else {
   $tmp_0_i17_1_i = ($93 | 0) > 127 ? 127 : $93; //@line 8572
  }
  HEAP32[$70 >> 2] = $93 - $tmp_0_i17_1_i; //@line 8576
  HEAP8[$drv + 92 + $92 | 0] = $tmp_0_i17_1_i & 255; //@line 8579
  $102 = (HEAP32[$drv_idx_i3 >> 2] | 0) + 1 & 255; //@line 8582
  HEAP32[$drv_idx_i3 >> 2] = $102; //@line 8583
  $103 = HEAP32[$71 >> 2] | 0; //@line 8584
  if (($103 | 0) < -127) {
   $tmp_0_i_1_i = -127; //@line 8588
  } else {
   $tmp_0_i_1_i = ($103 | 0) > 127 ? 127 : $103; //@line 8593
  }
  HEAP32[$71 >> 2] = $103 - $tmp_0_i_1_i; //@line 8597
  HEAP8[$drv + 92 + $102 | 0] = -$tmp_0_i_1_i & 255; //@line 8601
  HEAP32[$drv_idx_i3 >> 2] = (HEAP32[$drv_idx_i3 >> 2] | 0) + 1 & 255; //@line 8605
  return;
 } else {
  return;
 }
}
function _chr_null_open($name) {
 $name = $name | 0;
 var $1 = 0, $4 = 0, $_0 = 0;
 $1 = _malloc(80) | 0; //@line 8621
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 8625
  return $_0 | 0; //@line 8628
 }
 $4 = $1; //@line 8630
 _chr_init($4, $1); //@line 8631
 HEAP32[$1 + 56 >> 2] = 122; //@line 8634
 HEAP32[$1 + 60 >> 2] = 36; //@line 8637
 HEAP32[$1 + 64 >> 2] = 48; //@line 8640
 HEAP32[$1 + 68 >> 2] = 16; //@line 8643
 HEAP32[$1 + 72 >> 2] = 34; //@line 8646
 HEAP32[$1 + 76 >> 2] = 2; //@line 8649
 $_0 = $4; //@line 8651
 return $_0 | 0; //@line 8654
}
function _chr_null_close($cdrv) {
 $cdrv = $cdrv | 0;
 _free(HEAP32[$cdrv >> 2] | 0); //@line 8665
 return;
}
function _chr_posix_open($name) {
 $name = $name | 0;
 var $1 = 0, $4 = 0, $12 = 0, $14 = 0, $16 = 0, $18 = 0, $20 = 0, $21 = 0, $25 = 0, $_pr_i = 0, $27 = 0, $36 = 0, $40 = 0, $48 = 0, $51 = 0, $53 = 0, $62 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 8681
 $1 = _malloc(100) | 0; //@line 8682
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 8686
  STACKTOP = sp; //@line 8688
  return $_0 | 0; //@line 8689
 }
 $4 = $1; //@line 8691
 _chr_init($4, $1); //@line 8692
 HEAP32[$1 + 56 >> 2] = 38; //@line 8695
 HEAP32[$1 + 60 >> 2] = 56; //@line 8698
 HEAP32[$1 + 64 >> 2] = 64; //@line 8701
 $12 = $1 + 80 | 0; //@line 8703
 HEAP32[$12 >> 2] = 0; //@line 8704
 $14 = $1 + 84 | 0; //@line 8706
 HEAP32[$14 >> 2] = 0; //@line 8707
 $16 = $1 + 88 | 0; //@line 8709
 HEAP32[$16 >> 2] = 0; //@line 8710
 $18 = $1 + 92 | 0; //@line 8712
 HEAP32[$18 >> 2] = -1; //@line 8713
 $20 = $1 + 96 | 0; //@line 8715
 HEAP32[$20 >> 2] = -1; //@line 8716
 $21 = _drv_get_option($name, 54248) | 0; //@line 8717
 HEAP32[$12 >> 2] = $21; //@line 8718
 L13761 : do {
  if (($21 | 0) == 0) {
   HEAP32[$14 >> 2] = _drv_get_option($name, 56752) | 0; //@line 8724
   $25 = _drv_get_option($name, 50256) | 0; //@line 8725
   HEAP32[$16 >> 2] = $25; //@line 8726
   $_pr_i = HEAP32[$12 >> 2] | 0; //@line 8727
   if (($_pr_i | 0) != 0) {
    $27 = $_pr_i; //@line 8731
    label = 11018; //@line 8732
    break;
   }
   $40 = HEAP32[$14 >> 2] | 0; //@line 8735
   do {
    if (($40 | 0) == 0) {
     if (($25 | 0) != 0) {
      $53 = $25; //@line 8743
      break;
     }
     if ((_strncmp($name | 0, 39632, 6) | 0) != 0) {
      $_0 = $4; //@line 8750
      STACKTOP = sp; //@line 8752
      return $_0 | 0; //@line 8753
     }
     HEAP32[$18 >> 2] = 0; //@line 8755
     HEAP32[$20 >> 2] = 1; //@line 8756
     $_0 = $4; //@line 8758
     STACKTOP = sp; //@line 8760
     return $_0 | 0; //@line 8761
    } else {
     if ((_strcmp($40 | 0, 46272) | 0) == 0) {
      HEAP32[$18 >> 2] = 0; //@line 8767
      $51 = $25; //@line 8769
     } else {
      $48 = _open($40 | 0, 256, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = 0, tempInt) | 0) | 0; //@line 8771
      HEAP32[$18 >> 2] = $48; //@line 8772
      if (($48 | 0) < 0) {
       break L13761;
      }
      $51 = HEAP32[$16 >> 2] | 0; //@line 8780
     }
     if (($51 | 0) == 0) {
      $_0 = $4; //@line 8786
     } else {
      $53 = $51; //@line 8788
      break;
     }
     STACKTOP = sp; //@line 8792
     return $_0 | 0; //@line 8793
    }
   } while (0);
   if ((_strcmp($53 | 0, 46272) | 0) == 0) {
    HEAP32[$20 >> 2] = 1; //@line 8801
    $_0 = $4; //@line 8803
    STACKTOP = sp; //@line 8805
    return $_0 | 0; //@line 8806
   }
   if ((_strcmp($53 | 0, 42728) | 0) == 0) {
    HEAP32[$20 >> 2] = 2; //@line 8812
    $_0 = $4; //@line 8814
    STACKTOP = sp; //@line 8816
    return $_0 | 0; //@line 8817
   } else {
    $62 = _open($53 | 0, 833, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = 420, tempInt) | 0) | 0; //@line 8819
    HEAP32[$20 >> 2] = $62; //@line 8820
    if (($62 | 0) < 0) {
     break;
    } else {
     $_0 = $4; //@line 8826
    }
    STACKTOP = sp; //@line 8829
    return $_0 | 0; //@line 8830
   }
  } else {
   $27 = $21; //@line 8833
   label = 11018; //@line 8834
  }
 } while (0);
 do {
  if ((label | 0) == 11018) {
   if ((_strcmp($27 | 0, 46272) | 0) == 0) {
    HEAP32[$18 >> 2] = 0; //@line 8844
    HEAP32[$20 >> 2] = 1; //@line 8845
    $_0 = $4; //@line 8847
    STACKTOP = sp; //@line 8849
    return $_0 | 0; //@line 8850
   }
   if ((_strcmp($27 | 0, 42728) | 0) == 0) {
    HEAP32[$18 >> 2] = 0; //@line 8856
    HEAP32[$20 >> 2] = 2; //@line 8857
    $_0 = $4; //@line 8859
    STACKTOP = sp; //@line 8861
    return $_0 | 0; //@line 8862
   }
   $36 = _open($27 | 0, 834, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = 420, tempInt) | 0) | 0; //@line 8864
   HEAP32[$18 >> 2] = $36; //@line 8865
   if (($36 | 0) < 0) {
    break;
   }
   HEAP32[$20 >> 2] = $36; //@line 8871
   $_0 = $4; //@line 8872
   STACKTOP = sp; //@line 8874
   return $_0 | 0; //@line 8875
  }
 } while (0);
 _chr_posix_close($4); //@line 8878
 $_0 = 0; //@line 8880
 STACKTOP = sp; //@line 8882
 return $_0 | 0; //@line 8883
}
function _chr_posix_close($cdrv) {
 $cdrv = $cdrv | 0;
 var $2 = 0, $4 = 0, $5 = 0, $12 = 0, $22 = 0, $28 = 0, $34 = 0;
 $2 = HEAP32[$cdrv >> 2] | 0; //@line 8896
 $4 = $2 + 96 | 0; //@line 8898
 $5 = HEAP32[$4 >> 2] | 0; //@line 8899
 if (($5 | 0) > 2) {
  _close($5 | 0) | 0; //@line 8903
 }
 $12 = HEAP32[$2 + 92 >> 2] | 0; //@line 8908
 do {
  if (($12 | 0) > 2) {
   if (($12 | 0) == (HEAP32[$4 >> 2] | 0)) {
    break;
   }
   _close($12 | 0) | 0; //@line 8919
  }
 } while (0);
 $22 = HEAP32[$2 + 88 >> 2] | 0; //@line 8925
 if (($22 | 0) != 0) {
  _free($22); //@line 8929
 }
 $28 = HEAP32[$2 + 84 >> 2] | 0; //@line 8934
 if (($28 | 0) != 0) {
  _free($28); //@line 8938
 }
 $34 = HEAP32[$2 + 80 >> 2] | 0; //@line 8943
 if (($34 | 0) == 0) {
  _free($2); //@line 8947
  return;
 }
 _free($34); //@line 8951
 _free($2); //@line 8953
 return;
}
function _chr_posix_read($cdrv, $buf, $cnt) {
 $cdrv = $cdrv | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 var $pfd_i = 0, $4 = 0, $5 = 0, $21 = 0, sp = 0;
 sp = STACKTOP; //@line 8967
 STACKTOP = STACKTOP + 8 | 0; //@line 8967
 $pfd_i = sp | 0; //@line 8968
 $4 = (HEAP32[$cdrv >> 2] | 0) + 92 | 0; //@line 8972
 $5 = HEAP32[$4 >> 2] | 0; //@line 8973
 if (($5 | 0) < 0) {
  STACKTOP = sp; //@line 8977
  return 0; //@line 8978
 }
 HEAP32[$pfd_i >> 2] = $5; //@line 8983
 HEAP16[$pfd_i + 4 >> 1] = 1; //@line 8985
 if ((_poll($pfd_i | 0, 1, 0) | 0) < 0) {
  STACKTOP = sp; //@line 8990
  return 0; //@line 8991
 }
 if ((HEAP16[$pfd_i + 6 >> 1] & 5) == 0) {
  STACKTOP = sp; //@line 8999
  return 0; //@line 9000
 } else {
  $21 = _read(HEAP32[$4 >> 2] | 0, $buf | 0, (($cnt | 0) < 0 ? 2147483647 : $cnt) | 0) | 0; //@line 9005
  STACKTOP = sp; //@line 9008
  return (($21 | 0) > 0 ? $21 : 0) | 0; //@line 9009
 }
 return 0;
}
function _chr_posix_write($cdrv, $buf, $cnt) {
 $cdrv = $cdrv | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 var $pfd_i = 0, $4 = 0, $5 = 0, $21 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 9022
 STACKTOP = STACKTOP + 8 | 0; //@line 9022
 $pfd_i = sp | 0; //@line 9023
 $4 = (HEAP32[$cdrv >> 2] | 0) + 96 | 0; //@line 9027
 $5 = HEAP32[$4 >> 2] | 0; //@line 9028
 if (($5 | 0) < 0) {
  $_0 = $cnt; //@line 9032
  STACKTOP = sp; //@line 9034
  return $_0 | 0; //@line 9035
 }
 HEAP32[$pfd_i >> 2] = $5; //@line 9040
 HEAP16[$pfd_i + 4 >> 1] = 4; //@line 9042
 if ((_poll($pfd_i | 0, 1, 0) | 0) < 0) {
  $_0 = 0; //@line 9047
  STACKTOP = sp; //@line 9049
  return $_0 | 0; //@line 9050
 }
 if ((HEAP16[$pfd_i + 6 >> 1] & 5) == 0) {
  $_0 = 0; //@line 9058
  STACKTOP = sp; //@line 9060
  return $_0 | 0; //@line 9061
 } else {
  $21 = _write(HEAP32[$4 >> 2] | 0, $buf | 0, (($cnt | 0) < 0 ? 2147483647 : $cnt) | 0) | 0; //@line 9066
  STACKTOP = sp; //@line 9069
  return (($21 | 0) > 0 ? $21 : 0) | 0; //@line 9070
 }
 return 0;
}
function _chr_pty_open($name) {
 $name = $name | 0;
 var $tio_i_i = 0, $1 = 0, $4 = 0, $12 = 0, $15 = 0, $16 = 0, $18 = 0, $27 = 0, $33 = 0, $34 = 0, $36 = 0, $37 = 0, $40 = 0, $42 = 0, $47 = 0, $50 = 0, $57 = 0, $64 = 0, $65 = 0, $69 = 0, $71 = 0, $72 = 0, $80 = 0, $86 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 9088
 STACKTOP = STACKTOP + 64 | 0; //@line 9088
 $tio_i_i = sp | 0; //@line 9089
 $1 = _malloc(92) | 0; //@line 9090
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 9094
  STACKTOP = sp; //@line 9096
  return $_0 | 0; //@line 9097
 }
 $4 = $1; //@line 9099
 _chr_init($4, $1); //@line 9100
 HEAP32[$1 + 56 >> 2] = 370; //@line 9103
 HEAP32[$1 + 60 >> 2] = 88; //@line 9106
 HEAP32[$1 + 64 >> 2] = 72; //@line 9109
 $12 = $1 + 84 | 0; //@line 9111
 HEAP32[$12 >> 2] = 0; //@line 9112
 $15 = $1 + 88 | 0; //@line 9115
 HEAP32[$15 >> 2] = _drv_get_option($name, 54208) | 0; //@line 9116
 $16 = _posix_openpt(258) | 0; //@line 9117
 $18 = $1 + 80 | 0; //@line 9119
 HEAP32[$18 >> 2] = $16; //@line 9120
 do {
  if (($16 | 0) >= 0) {
   if ((_grantpt($16 | 0) | 0) != 0) {
    break;
   }
   if ((_unlockpt($16 | 0) | 0) != 0) {
    break;
   }
   $27 = _ptsname($16 | 0) | 0; //@line 9137
   if (($27 | 0) == 0) {
    break;
   }
   if ((_strlen($27 | 0) | 0) >>> 0 > 255) {
    break;
   }
   $33 = _strdup($27 | 0) | 0; //@line 9149
   HEAP32[$12 >> 2] = $33; //@line 9150
   $34 = HEAP32[_stderr >> 2] | 0; //@line 9151
   _fprintf($34 | 0, 50240, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $33, tempInt) | 0) | 0; //@line 9152
   $36 = HEAP32[$18 >> 2] | 0; //@line 9153
   $37 = _fcntl($36 | 0, 1, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0) | 0; //@line 9154
   if (($37 | 0) != -1) {
    $40 = $37 | 2048; //@line 9158
    _fcntl($36 | 0, 4, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $40, tempInt) | 0) | 0; //@line 9159
   }
   $42 = HEAP32[$18 >> 2] | 0; //@line 9162
   do {
    if ((_tcgetattr($42 | 0, $tio_i_i | 0) | 0) == 0) {
     $47 = $tio_i_i | 0; //@line 9169
     HEAP32[$47 >> 2] = HEAP32[$47 >> 2] & -449; //@line 9172
     $50 = $tio_i_i + 12 | 0; //@line 9173
     HEAP32[$50 >> 2] = HEAP32[$50 >> 2] & -25; //@line 9176
     if ((_tcsetattr($42 | 0, 0, $tio_i_i | 0) | 0) != 0) {
      break;
     }
     _tcflush($42 | 0, 2) | 0; //@line 9183
    }
   } while (0);
   $57 = HEAP32[$15 >> 2] | 0; //@line 9187
   if (($57 | 0) == 0) {
    $_0 = $4; //@line 9191
    STACKTOP = sp; //@line 9193
    return $_0 | 0; //@line 9194
   }
   if ((_symlink(HEAP32[$12 >> 2] | 0, $57 | 0) | 0) == 0) {
    $_0 = $4; //@line 9201
    STACKTOP = sp; //@line 9203
    return $_0 | 0; //@line 9204
   }
   $64 = HEAP32[$12 >> 2] | 0; //@line 9206
   $65 = HEAP32[$15 >> 2] | 0; //@line 9207
   _fprintf($34 | 0, 56704, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $64, HEAP32[tempInt + 8 >> 2] = $65, tempInt) | 0) | 0; //@line 9208
   $_0 = $4; //@line 9210
   STACKTOP = sp; //@line 9212
   return $_0 | 0; //@line 9213
  }
 } while (0);
 $69 = HEAP32[$1 >> 2] | 0; //@line 9217
 $71 = $69 + 88 | 0; //@line 9219
 $72 = HEAP32[$71 >> 2] | 0; //@line 9220
 if (($72 | 0) != 0) {
  _unlink($72 | 0) | 0; //@line 9224
  _free(HEAP32[$71 >> 2] | 0); //@line 9226
 }
 $80 = HEAP32[$69 + 84 >> 2] | 0; //@line 9231
 if (($80 | 0) != 0) {
  _free($80); //@line 9235
 }
 $86 = HEAP32[$69 + 80 >> 2] | 0; //@line 9240
 if (($86 | 0) > -1) {
  _close($86 | 0) | 0; //@line 9244
 }
 _free($69); //@line 9247
 $_0 = 0; //@line 9249
 STACKTOP = sp; //@line 9251
 return $_0 | 0; //@line 9252
}
function _chr_pty_close($cdrv) {
 $cdrv = $cdrv | 0;
 var $2 = 0, $4 = 0, $5 = 0, $13 = 0, $19 = 0;
 $2 = HEAP32[$cdrv >> 2] | 0; //@line 9264
 $4 = $2 + 88 | 0; //@line 9266
 $5 = HEAP32[$4 >> 2] | 0; //@line 9267
 if (($5 | 0) != 0) {
  _unlink($5 | 0) | 0; //@line 9271
  _free(HEAP32[$4 >> 2] | 0); //@line 9273
 }
 $13 = HEAP32[$2 + 84 >> 2] | 0; //@line 9278
 if (($13 | 0) != 0) {
  _free($13); //@line 9282
 }
 $19 = HEAP32[$2 + 80 >> 2] | 0; //@line 9287
 if (($19 | 0) <= -1) {
  _free($2); //@line 9291
  return;
 }
 _close($19 | 0) | 0; //@line 9295
 _free($2); //@line 9297
 return;
}
function _chr_pty_read($cdrv, $buf, $cnt) {
 $cdrv = $cdrv | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 var $5 = 0, $9 = 0;
 $5 = HEAP32[(HEAP32[$cdrv >> 2] | 0) + 80 >> 2] | 0; //@line 9315
 if (($5 | 0) < 0) {
  return 0; //@line 9320
 } else {
  $9 = _read($5 | 0, $buf | 0, (($cnt | 0) < 0 ? 2147483647 : $cnt) | 0) | 0; //@line 9324
  return (($9 | 0) > 0 ? $9 : 0) | 0; //@line 9328
 }
 return 0;
}
function _chr_pty_write($cdrv, $buf, $cnt) {
 $cdrv = $cdrv | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 var $5 = 0, $9 = 0;
 $5 = HEAP32[(HEAP32[$cdrv >> 2] | 0) + 80 >> 2] | 0; //@line 9345
 if (($5 | 0) < 0) {
  return $cnt | 0; //@line 9350
 } else {
  $9 = _write($5 | 0, $buf | 0, (($cnt | 0) < 0 ? 2147483647 : $cnt) | 0) | 0; //@line 9354
  return (($9 | 0) > 0 ? $9 : 0) | 0; //@line 9358
 }
 return 0;
}
function _chr_stdio_read($cdrv, $buf, $cnt) {
 $cdrv = $cdrv | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 return 0; //@line 9370
}
function _chr_stdio_open($name) {
 $name = $name | 0;
 var $1 = 0, $4 = 0, $12 = 0, $15 = 0, $19 = 0, $27 = 0, $31 = 0, $34 = 0, $40 = 0, $_0 = 0;
 $1 = _malloc(92) | 0; //@line 9384
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 9388
  return $_0 | 0; //@line 9391
 }
 $4 = $1; //@line 9393
 _chr_init($4, $1); //@line 9394
 HEAP32[$1 + 56 >> 2] = 412; //@line 9397
 HEAP32[$1 + 60 >> 2] = 8; //@line 9400
 HEAP32[$1 + 64 >> 2] = 90; //@line 9403
 $12 = $1 + 88 | 0; //@line 9405
 HEAP32[$12 >> 2] = 0; //@line 9406
 $15 = $1 + 80 | 0; //@line 9409
 HEAP32[$15 >> 2] = _drv_get_option($name, 54184) | 0; //@line 9410
 HEAP32[$1 + 84 >> 2] = _drv_get_option_bool($name, 56696, 1) | 0; //@line 9414
 $19 = HEAP32[$15 >> 2] | 0; //@line 9415
 if (($19 | 0) == 0) {
  $_0 = $4; //@line 9419
  return $_0 | 0; //@line 9422
 }
 if ((_strcmp($19 | 0, 50224) | 0) == 0) {
  HEAP32[$12 >> 2] = HEAP32[_stdout >> 2]; //@line 9429
  $_0 = $4; //@line 9431
  return $_0 | 0; //@line 9434
 }
 $27 = _fopen($19 | 0, 46264) | 0; //@line 9436
 HEAP32[$12 >> 2] = $27; //@line 9437
 if (($27 | 0) != 0) {
  $_0 = $4; //@line 9441
  return $_0 | 0; //@line 9444
 }
 $31 = HEAP32[$1 >> 2] | 0; //@line 9447
 $34 = HEAP32[$31 + 80 >> 2] | 0; //@line 9450
 if (($34 | 0) != 0) {
  _free($34); //@line 9454
 }
 $40 = HEAP32[$31 + 88 >> 2] | 0; //@line 9459
 if (!(($40 | 0) == 0 | ($40 | 0) == (HEAP32[_stdin >> 2] | 0) | ($40 | 0) == (HEAP32[_stdout >> 2] | 0) | ($40 | 0) == (HEAP32[_stderr >> 2] | 0))) {
  _fclose($40 | 0) | 0; //@line 9472
 }
 _free($31); //@line 9475
 $_0 = 0; //@line 9477
 return $_0 | 0; //@line 9480
}
function _chr_stdio_close($cdrv) {
 $cdrv = $cdrv | 0;
 var $2 = 0, $5 = 0, $11 = 0;
 $2 = HEAP32[$cdrv >> 2] | 0; //@line 9492
 $5 = HEAP32[$2 + 80 >> 2] | 0; //@line 9495
 if (($5 | 0) != 0) {
  _free($5); //@line 9499
 }
 $11 = HEAP32[$2 + 88 >> 2] | 0; //@line 9504
 if (($11 | 0) == 0 | ($11 | 0) == (HEAP32[_stdin >> 2] | 0) | ($11 | 0) == (HEAP32[_stdout >> 2] | 0) | ($11 | 0) == (HEAP32[_stderr >> 2] | 0)) {
  _free($2); //@line 9517
  return;
 }
 _fclose($11 | 0) | 0; //@line 9521
 _free($2); //@line 9523
 return;
}
function _chr_stdio_write($cdrv, $buf, $cnt) {
 $cdrv = $cdrv | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 var $2 = 0, $4 = 0, $5 = 0, $8 = 0, $_0 = 0;
 $2 = HEAP32[$cdrv >> 2] | 0; //@line 9538
 $4 = $2 + 88 | 0; //@line 9540
 $5 = HEAP32[$4 >> 2] | 0; //@line 9541
 if (($5 | 0) == 0) {
  $_0 = $cnt; //@line 9545
  return $_0 | 0; //@line 9548
 }
 $8 = _fwrite($buf | 0, 1, $cnt | 0, $5 | 0) | 0; //@line 9550
 if ((HEAP32[$2 + 84 >> 2] | 0) == 0) {
  $_0 = $8; //@line 9557
  return $_0 | 0; //@line 9560
 }
 _fflush(HEAP32[$4 >> 2] | 0) | 0; //@line 9563
 $_0 = $8; //@line 9565
 return $_0 | 0; //@line 9568
}
function _pri_decode_gcr_trk($trk, $h) {
 $trk = $trk | 0;
 $h = $h | 0;
 var $bit_i56_i_i = 0, $bit_i46_i_i = 0, $bit_i36_i_i = 0, $bit_i26_i_i = 0, $bit_i16_i_i = 0, $bit_i_i_i = 0, $buf_i_i = 0, $bit_i84_i = 0, $bit_i74_i = 0, $bit_i64_i = 0, $bit_i54_i = 0, $bit_i44_i = 0, $bit_i34_i = 0, $bit_i_i = 0, $buf_i = 0, $bit_i = 0, $1 = 0, $4 = 0, $8 = 0, $9 = 0, $15 = 0, $16 = 0, $24 = 0, $26 = 0, $28 = 0, $29 = 0, $30 = 0, $buf_sroa_2_047 = 0, $buf_sroa_1_046 = 0, $33 = 0, $cnt_09_i = 0, $val_08_i = 0, $37 = 0, $cnt_0_lcssa_i = 0, $45 = 0, $46 = 0, $47 = 0, $55 = 0, $cnt_09_i_i = 0, $val_08_i_i = 0, $59 = 0, $cnt_0_lcssa_i_i = 0, $69 = 0, $70 = 0, $72 = 0, $cnt_09_i35_i = 0, $val_08_i36_i = 0, $76 = 0, $cnt_0_lcssa_i42_i = 0, $86 = 0, $87 = 0, $89 = 0, $cnt_09_i45_i = 0, $val_08_i46_i = 0, $93 = 0, $cnt_0_lcssa_i52_i = 0, $103 = 0, $104 = 0, $106 = 0, $cnt_09_i55_i = 0, $val_08_i56_i = 0, $110 = 0, $cnt_0_lcssa_i62_i = 0, $120 = 0, $122 = 0, $cnt_09_i65_i = 0, $val_08_i66_i = 0, $126 = 0, $cnt_0_lcssa_i72_i = 0, $136 = 0, $140 = 0, $142 = 0, $143 = 0, $153 = 0, $154 = 0, $i_0112_i = 0, $156 = 0, $cnt_09_i75_i = 0, $val_08_i76_i = 0, $160 = 0, $168 = 0, $cnt_0_lcssa_i82_i = 0, $169 = 0, $179 = 0, $cnt_09_i85_i = 0, $val_08_i86_i = 0, $183 = 0, $cnt_0_lcssa_i92_i = 0, $193 = 0, $197 = 0, $high_080_i_i = 0, $i_079_i_i = 0, $205 = 0, $cnt_09_i_i_i = 0, $val_08_i_i_i = 0, $209 = 0, $cnt_0_lcssa_i_i_i = 0, $high_1_i_i = 0, $223 = 0, $cnt_09_i17_i_i = 0, $val_08_i18_i_i = 0, $227 = 0, $cnt_0_lcssa_i24_i_i = 0, $243 = 0, $247 = 0, $cnt_09_i27_i_i = 0, $val_08_i28_i_i = 0, $251 = 0, $cnt_0_lcssa_i34_i_i = 0, $261 = 0, $262 = 0, $264 = 0, $cnt_09_i37_i_i = 0, $val_08_i38_i_i = 0, $268 = 0, $cnt_0_lcssa_i44_i_i = 0, $281 = 0, $283 = 0, $cnt_09_i47_i_i = 0, $val_08_i48_i_i = 0, $287 = 0, $cnt_0_lcssa_i54_i_i = 0, $301 = 0, $303 = 0, $cnt_09_i57_i_i = 0, $val_08_i58_i_i = 0, $307 = 0, $cnt_0_lcssa_i64_i_i = 0, $320 = 0, $chk_sroa_0_037_i_i_i = 0, $chk_sroa_1_036_i_i_i = 0, $chk_sroa_2_035_i_i_i = 0, $i_034_i_i_i = 0, $chk_sroa_0_1_i_i_i = 0, $val_0_i_i_i = 0, $337 = 0, $340 = 0, $350 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 9633
 STACKTOP = STACKTOP + 1168 | 0; //@line 9633
 $bit_i56_i_i = sp | 0; //@line 9634
 $bit_i46_i_i = sp + 8 | 0; //@line 9635
 $bit_i36_i_i = sp + 16 | 0; //@line 9636
 $bit_i26_i_i = sp + 24 | 0; //@line 9637
 $bit_i16_i_i = sp + 32 | 0; //@line 9638
 $bit_i_i_i = sp + 40 | 0; //@line 9639
 $buf_i_i = sp + 48 | 0; //@line 9640
 $bit_i84_i = sp + 576 | 0; //@line 9641
 $bit_i74_i = sp + 584 | 0; //@line 9642
 $bit_i64_i = sp + 592 | 0; //@line 9643
 $bit_i54_i = sp + 600 | 0; //@line 9644
 $bit_i44_i = sp + 608 | 0; //@line 9645
 $bit_i34_i = sp + 616 | 0; //@line 9646
 $bit_i_i = sp + 624 | 0; //@line 9647
 $buf_i = sp + 632 | 0; //@line 9648
 $bit_i = sp + 1160 | 0; //@line 9649
 $1 = _psi_trk_new($h) | 0; //@line 9650
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 9654
  STACKTOP = sp; //@line 9656
  return $_0 | 0; //@line 9657
 }
 _pri_trk_set_pos($trk, 0); //@line 9659
 $4 = $trk + 16 | 0; //@line 9660
 if ((HEAP8[$4] | 0) != 0) {
  $_0 = $1; //@line 9665
  STACKTOP = sp; //@line 9667
  return $_0 | 0; //@line 9668
 }
 $8 = $trk + 12 | 0; //@line 9671
 $9 = $buf_i | 0; //@line 9672
 $15 = $buf_i + 1 | 0; //@line 9678
 $16 = $buf_i + 2 | 0; //@line 9679
 $24 = $buf_i_i + 524 | 0; //@line 9687
 $26 = $buf_i_i + 525 | 0; //@line 9689
 $28 = $buf_i_i + 526 | 0; //@line 9691
 $29 = $buf_i + 12 | 0; //@line 9692
 $30 = HEAP32[_stderr >> 2] | 0; //@line 9693
 $buf_sroa_1_046 = 0;
 $buf_sroa_2_047 = 0;
 while (1) {
  _pri_trk_get_bits($trk, $bit_i, 8) | 0; //@line 9699
  $33 = HEAP32[$bit_i >> 2] | 0; //@line 9700
  if (($33 & 128 | 0) == 0) {
   $val_08_i = $33;
   $cnt_09_i = 8;
   do {
    _pri_trk_get_bits($trk, $bit_i, 1) | 0; //@line 9709
    $37 = $val_08_i << 1; //@line 9710
    $val_08_i = HEAP32[$bit_i >> 2] & 1 | $37; //@line 9713
    $cnt_09_i = $cnt_09_i + 1 | 0; //@line 9714
   } while (($37 & 128 | 0) == 0 & $cnt_09_i >>> 0 < 64);
   $cnt_0_lcssa_i = $cnt_09_i >>> 0 > 63 ? 0 : $val_08_i; //@line 9729
  } else {
   $cnt_0_lcssa_i = $33; //@line 9731
  }
  $45 = $cnt_0_lcssa_i & 255; //@line 9734
  $46 = HEAP32[$8 >> 2] | 0; //@line 9735
  $47 = HEAP8[$4] | 0; //@line 9736
  do {
   if ($buf_sroa_1_046 << 24 >> 24 == -43 & $buf_sroa_2_047 << 24 >> 24 == -86) {
    if (($cnt_0_lcssa_i & 255 | 0) != 150) {
     break;
    }
    _pri_trk_get_bits($trk, $bit_i_i, 8) | 0; //@line 9749
    $55 = HEAP32[$bit_i_i >> 2] | 0; //@line 9750
    if (($55 & 128 | 0) == 0) {
     $val_08_i_i = $55;
     $cnt_09_i_i = 8;
     do {
      _pri_trk_get_bits($trk, $bit_i_i, 1) | 0; //@line 9759
      $59 = $val_08_i_i << 1; //@line 9760
      $val_08_i_i = HEAP32[$bit_i_i >> 2] & 1 | $59; //@line 9763
      $cnt_09_i_i = $cnt_09_i_i + 1 | 0; //@line 9764
     } while (($59 & 128 | 0) == 0 & $cnt_09_i_i >>> 0 < 64);
     $cnt_0_lcssa_i_i = $cnt_09_i_i >>> 0 > 63 ? 0 : $val_08_i_i; //@line 9779
    } else {
     $cnt_0_lcssa_i_i = $55; //@line 9781
    }
    $69 = HEAP8[16216 + ($cnt_0_lcssa_i_i & 255) | 0] | 0; //@line 9786
    $70 = $69 & 255; //@line 9787
    _pri_trk_get_bits($trk, $bit_i34_i, 8) | 0; //@line 9788
    $72 = HEAP32[$bit_i34_i >> 2] | 0; //@line 9789
    if (($72 & 128 | 0) == 0) {
     $val_08_i36_i = $72;
     $cnt_09_i35_i = 8;
     do {
      _pri_trk_get_bits($trk, $bit_i34_i, 1) | 0; //@line 9798
      $76 = $val_08_i36_i << 1; //@line 9799
      $val_08_i36_i = HEAP32[$bit_i34_i >> 2] & 1 | $76; //@line 9802
      $cnt_09_i35_i = $cnt_09_i35_i + 1 | 0; //@line 9803
     } while (($76 & 128 | 0) == 0 & $cnt_09_i35_i >>> 0 < 64);
     $cnt_0_lcssa_i42_i = $cnt_09_i35_i >>> 0 > 63 ? 0 : $val_08_i36_i; //@line 9818
    } else {
     $cnt_0_lcssa_i42_i = $72; //@line 9820
    }
    $86 = HEAP8[16216 + ($cnt_0_lcssa_i42_i & 255) | 0] | 0; //@line 9825
    $87 = $86 & 255; //@line 9826
    _pri_trk_get_bits($trk, $bit_i44_i, 8) | 0; //@line 9827
    $89 = HEAP32[$bit_i44_i >> 2] | 0; //@line 9828
    if (($89 & 128 | 0) == 0) {
     $val_08_i46_i = $89;
     $cnt_09_i45_i = 8;
     do {
      _pri_trk_get_bits($trk, $bit_i44_i, 1) | 0; //@line 9837
      $93 = $val_08_i46_i << 1; //@line 9838
      $val_08_i46_i = HEAP32[$bit_i44_i >> 2] & 1 | $93; //@line 9841
      $cnt_09_i45_i = $cnt_09_i45_i + 1 | 0; //@line 9842
     } while (($93 & 128 | 0) == 0 & $cnt_09_i45_i >>> 0 < 64);
     $cnt_0_lcssa_i52_i = $cnt_09_i45_i >>> 0 > 63 ? 0 : $val_08_i46_i; //@line 9857
    } else {
     $cnt_0_lcssa_i52_i = $89; //@line 9859
    }
    $103 = HEAP8[16216 + ($cnt_0_lcssa_i52_i & 255) | 0] | 0; //@line 9864
    $104 = $103 & 255; //@line 9865
    _pri_trk_get_bits($trk, $bit_i54_i, 8) | 0; //@line 9866
    $106 = HEAP32[$bit_i54_i >> 2] | 0; //@line 9867
    if (($106 & 128 | 0) == 0) {
     $val_08_i56_i = $106;
     $cnt_09_i55_i = 8;
     do {
      _pri_trk_get_bits($trk, $bit_i54_i, 1) | 0; //@line 9876
      $110 = $val_08_i56_i << 1; //@line 9877
      $val_08_i56_i = HEAP32[$bit_i54_i >> 2] & 1 | $110; //@line 9880
      $cnt_09_i55_i = $cnt_09_i55_i + 1 | 0; //@line 9881
     } while (($110 & 128 | 0) == 0 & $cnt_09_i55_i >>> 0 < 64);
     $cnt_0_lcssa_i62_i = $cnt_09_i55_i >>> 0 > 63 ? 0 : $val_08_i56_i; //@line 9896
    } else {
     $cnt_0_lcssa_i62_i = $106; //@line 9898
    }
    $120 = HEAP8[16216 + ($cnt_0_lcssa_i62_i & 255) | 0] | 0; //@line 9903
    _pri_trk_get_bits($trk, $bit_i64_i, 8) | 0; //@line 9904
    $122 = HEAP32[$bit_i64_i >> 2] | 0; //@line 9905
    if (($122 & 128 | 0) == 0) {
     $val_08_i66_i = $122;
     $cnt_09_i65_i = 8;
     do {
      _pri_trk_get_bits($trk, $bit_i64_i, 1) | 0; //@line 9914
      $126 = $val_08_i66_i << 1; //@line 9915
      $val_08_i66_i = HEAP32[$bit_i64_i >> 2] & 1 | $126; //@line 9918
      $cnt_09_i65_i = $cnt_09_i65_i + 1 | 0; //@line 9919
     } while (($126 & 128 | 0) == 0 & $cnt_09_i65_i >>> 0 < 64);
     $cnt_0_lcssa_i72_i = $cnt_09_i65_i >>> 0 > 63 ? 0 : $val_08_i66_i; //@line 9934
    } else {
     $cnt_0_lcssa_i72_i = $122; //@line 9936
    }
    $136 = HEAP8[16216 + ($cnt_0_lcssa_i72_i & 255) | 0] | 0; //@line 9941
    $140 = $104 << 6 & 1984 | $70 & 63; //@line 9945
    $142 = $104 >>> 5 & 3; //@line 9947
    $143 = _psi_sct_new($140, $142, $87, 512) | 0; //@line 9948
    if (($143 | 0) != 0) {
     _psi_sct_set_encoding($143, 3); //@line 9955
     _psi_sct_set_flags($143, 8, 1); //@line 9956
     _psi_sct_set_gcr_format($143, $120); //@line 9957
     if ($136 << 24 >> 24 != ($86 ^ $69 ^ $103 ^ $120) << 24 >> 24) {
      _psi_sct_set_flags($143, 1, 1); //@line 9961
     }
     HEAP8[$9] = 0; //@line 9964
     HEAP8[$15] = 0; //@line 9965
     HEAP8[$16] = 0; //@line 9966
     $i_0112_i = 0;
     $154 = 0;
     $153 = 0;
     while (1) {
      HEAP8[$9] = $153; //@line 9973
      HEAP8[$15] = $154; //@line 9974
      _pri_trk_get_bits($trk, $bit_i74_i, 8) | 0; //@line 9975
      $156 = HEAP32[$bit_i74_i >> 2] | 0; //@line 9976
      if (($156 & 128 | 0) == 0) {
       $val_08_i76_i = $156;
       $cnt_09_i75_i = 8;
       do {
        _pri_trk_get_bits($trk, $bit_i74_i, 1) | 0; //@line 9985
        $160 = $val_08_i76_i << 1; //@line 9986
        $val_08_i76_i = HEAP32[$bit_i74_i >> 2] & 1 | $160; //@line 9989
        $cnt_09_i75_i = $cnt_09_i75_i + 1 | 0; //@line 9990
       } while (($160 & 128 | 0) == 0 & $cnt_09_i75_i >>> 0 < 64);
       $cnt_0_lcssa_i82_i = $cnt_09_i75_i >>> 0 > 63 ? 0 : $val_08_i76_i;
       $168 = HEAP8[$9] | 0;
      } else {
       $cnt_0_lcssa_i82_i = $156;
       $168 = $153;
      }
      $169 = $cnt_0_lcssa_i82_i & 255; //@line 10012
      HEAP8[$16] = $169; //@line 10013
      if ($168 << 24 >> 24 == -43) {
       if ((HEAP8[$15] | 0) == -86) {
        label = 11186; //@line 10021
        break;
       }
      }
      $197 = $i_0112_i + 1 | 0; //@line 10025
      if ($197 >>> 0 >= 64) {
       break;
      }
      $i_0112_i = $197;
      $154 = $169;
      $153 = HEAP8[$15] | 0;
     }
     do {
      if ((label | 0) == 11186) {
       label = 0; //@line 10037
       if (($cnt_0_lcssa_i82_i & 255 | 0) != 173) {
        break;
       }
       _pri_trk_get_bits($trk, $bit_i84_i, 8) | 0; //@line 10044
       $179 = HEAP32[$bit_i84_i >> 2] | 0; //@line 10045
       if (($179 & 128 | 0) == 0) {
        $val_08_i86_i = $179;
        $cnt_09_i85_i = 8;
        do {
         _pri_trk_get_bits($trk, $bit_i84_i, 1) | 0; //@line 10054
         $183 = $val_08_i86_i << 1; //@line 10055
         $val_08_i86_i = HEAP32[$bit_i84_i >> 2] & 1 | $183; //@line 10058
         $cnt_09_i85_i = $cnt_09_i85_i + 1 | 0; //@line 10059
        } while (($183 & 128 | 0) == 0 & $cnt_09_i85_i >>> 0 < 64);
        $cnt_0_lcssa_i92_i = $cnt_09_i85_i >>> 0 > 63 ? 0 : $val_08_i86_i; //@line 10074
       } else {
        $cnt_0_lcssa_i92_i = $179; //@line 10076
       }
       $193 = HEAP8[16216 + ($cnt_0_lcssa_i92_i & 255) | 0] | 0; //@line 10081
       HEAP8[$16] = $193; //@line 10082
       if ($193 << 24 >> 24 != $86 << 24 >> 24 | $i_0112_i >>> 0 > 63) {
        break;
       }
       _psi_sct_set_flags($143, 8, 0); //@line 10090
       $i_079_i_i = 0;
       $high_080_i_i = 0;
       while (1) {
        if ((($i_079_i_i >>> 0) % 3 | 0 | 0) == 0) {
         _pri_trk_get_bits($trk, $bit_i_i_i, 8) | 0; //@line 10100
         $205 = HEAP32[$bit_i_i_i >> 2] | 0; //@line 10101
         if (($205 & 128 | 0) == 0) {
          $val_08_i_i_i = $205;
          $cnt_09_i_i_i = 8;
          do {
           _pri_trk_get_bits($trk, $bit_i_i_i, 1) | 0; //@line 10110
           $209 = $val_08_i_i_i << 1; //@line 10111
           $val_08_i_i_i = HEAP32[$bit_i_i_i >> 2] & 1 | $209; //@line 10114
           $cnt_09_i_i_i = $cnt_09_i_i_i + 1 | 0; //@line 10115
          } while (($209 & 128 | 0) == 0 & $cnt_09_i_i_i >>> 0 < 64);
          $cnt_0_lcssa_i_i_i = $cnt_09_i_i_i >>> 0 > 63 ? 0 : $val_08_i_i_i; //@line 10130
         } else {
          $cnt_0_lcssa_i_i_i = $205; //@line 10132
         }
         $high_1_i_i = HEAP8[16216 + ($cnt_0_lcssa_i_i_i & 255) | 0] << 2; //@line 10140
        } else {
         $high_1_i_i = $high_080_i_i; //@line 10142
        }
        _pri_trk_get_bits($trk, $bit_i16_i_i, 8) | 0; //@line 10145
        $223 = HEAP32[$bit_i16_i_i >> 2] | 0; //@line 10146
        if (($223 & 128 | 0) == 0) {
         $val_08_i18_i_i = $223;
         $cnt_09_i17_i_i = 8;
         do {
          _pri_trk_get_bits($trk, $bit_i16_i_i, 1) | 0; //@line 10155
          $227 = $val_08_i18_i_i << 1; //@line 10156
          $val_08_i18_i_i = HEAP32[$bit_i16_i_i >> 2] & 1 | $227; //@line 10159
          $cnt_09_i17_i_i = $cnt_09_i17_i_i + 1 | 0; //@line 10160
         } while (($227 & 128 | 0) == 0 & $cnt_09_i17_i_i >>> 0 < 64);
         $cnt_0_lcssa_i24_i_i = $cnt_09_i17_i_i >>> 0 > 63 ? 0 : $val_08_i18_i_i; //@line 10175
        } else {
         $cnt_0_lcssa_i24_i_i = $223; //@line 10177
        }
        HEAP8[$buf_i_i + $i_079_i_i | 0] = HEAP8[16216 + ($cnt_0_lcssa_i24_i_i & 255) | 0] & 63 | $high_1_i_i & -64; //@line 10188
        $243 = $i_079_i_i + 1 | 0; //@line 10189
        if ($243 >>> 0 < 524) {
         $i_079_i_i = $243;
         $high_080_i_i = $high_1_i_i << 2;
        } else {
         break;
        }
       }
       _pri_trk_get_bits($trk, $bit_i26_i_i, 8) | 0; //@line 10198
       $247 = HEAP32[$bit_i26_i_i >> 2] | 0; //@line 10199
       if (($247 & 128 | 0) == 0) {
        $val_08_i28_i_i = $247;
        $cnt_09_i27_i_i = 8;
        do {
         _pri_trk_get_bits($trk, $bit_i26_i_i, 1) | 0; //@line 10208
         $251 = $val_08_i28_i_i << 1; //@line 10209
         $val_08_i28_i_i = HEAP32[$bit_i26_i_i >> 2] & 1 | $251; //@line 10212
         $cnt_09_i27_i_i = $cnt_09_i27_i_i + 1 | 0; //@line 10213
        } while (($251 & 128 | 0) == 0 & $cnt_09_i27_i_i >>> 0 < 64);
        $cnt_0_lcssa_i34_i_i = $cnt_09_i27_i_i >>> 0 > 63 ? 0 : $val_08_i28_i_i; //@line 10228
       } else {
        $cnt_0_lcssa_i34_i_i = $247; //@line 10230
       }
       $261 = HEAP8[16216 + ($cnt_0_lcssa_i34_i_i & 255) | 0] | 0; //@line 10235
       $262 = $261 << 2; //@line 10236
       _pri_trk_get_bits($trk, $bit_i36_i_i, 8) | 0; //@line 10237
       $264 = HEAP32[$bit_i36_i_i >> 2] | 0; //@line 10238
       if (($264 & 128 | 0) == 0) {
        $val_08_i38_i_i = $264;
        $cnt_09_i37_i_i = 8;
        do {
         _pri_trk_get_bits($trk, $bit_i36_i_i, 1) | 0; //@line 10247
         $268 = $val_08_i38_i_i << 1; //@line 10248
         $val_08_i38_i_i = HEAP32[$bit_i36_i_i >> 2] & 1 | $268; //@line 10251
         $cnt_09_i37_i_i = $cnt_09_i37_i_i + 1 | 0; //@line 10252
        } while (($268 & 128 | 0) == 0 & $cnt_09_i37_i_i >>> 0 < 64);
        $cnt_0_lcssa_i44_i_i = $cnt_09_i37_i_i >>> 0 > 63 ? 0 : $val_08_i38_i_i; //@line 10267
       } else {
        $cnt_0_lcssa_i44_i_i = $264; //@line 10269
       }
       $281 = HEAP8[16216 + ($cnt_0_lcssa_i44_i_i & 255) | 0] & 63 | $262 & -64; //@line 10277
       HEAP8[$24] = $281; //@line 10278
       _pri_trk_get_bits($trk, $bit_i46_i_i, 8) | 0; //@line 10279
       $283 = HEAP32[$bit_i46_i_i >> 2] | 0; //@line 10280
       if (($283 & 128 | 0) == 0) {
        $val_08_i48_i_i = $283;
        $cnt_09_i47_i_i = 8;
        do {
         _pri_trk_get_bits($trk, $bit_i46_i_i, 1) | 0; //@line 10289
         $287 = $val_08_i48_i_i << 1; //@line 10290
         $val_08_i48_i_i = HEAP32[$bit_i46_i_i >> 2] & 1 | $287; //@line 10293
         $cnt_09_i47_i_i = $cnt_09_i47_i_i + 1 | 0; //@line 10294
        } while (($287 & 128 | 0) == 0 & $cnt_09_i47_i_i >>> 0 < 64);
        $cnt_0_lcssa_i54_i_i = $cnt_09_i47_i_i >>> 0 > 63 ? 0 : $val_08_i48_i_i; //@line 10309
       } else {
        $cnt_0_lcssa_i54_i_i = $283; //@line 10311
       }
       $301 = HEAP8[16216 + ($cnt_0_lcssa_i54_i_i & 255) | 0] & 63 | $261 << 4 & -64; //@line 10320
       HEAP8[$26] = $301; //@line 10321
       _pri_trk_get_bits($trk, $bit_i56_i_i, 8) | 0; //@line 10322
       $303 = HEAP32[$bit_i56_i_i >> 2] | 0; //@line 10323
       if (($303 & 128 | 0) == 0) {
        $val_08_i58_i_i = $303;
        $cnt_09_i57_i_i = 8;
        do {
         _pri_trk_get_bits($trk, $bit_i56_i_i, 1) | 0; //@line 10332
         $307 = $val_08_i58_i_i << 1; //@line 10333
         $val_08_i58_i_i = HEAP32[$bit_i56_i_i >> 2] & 1 | $307; //@line 10336
         $cnt_09_i57_i_i = $cnt_09_i57_i_i + 1 | 0; //@line 10337
        } while (($307 & 128 | 0) == 0 & $cnt_09_i57_i_i >>> 0 < 64);
        $cnt_0_lcssa_i64_i_i = $cnt_09_i57_i_i >>> 0 > 63 ? 0 : $val_08_i58_i_i; //@line 10352
       } else {
        $cnt_0_lcssa_i64_i_i = $303; //@line 10354
       }
       $320 = HEAP8[16216 + ($cnt_0_lcssa_i64_i_i & 255) | 0] & 63 | $261 << 6; //@line 10362
       HEAP8[$28] = $320; //@line 10363
       $i_034_i_i_i = 0;
       $chk_sroa_2_035_i_i_i = 0;
       $chk_sroa_1_036_i_i_i = 0;
       $chk_sroa_0_037_i_i_i = 0;
       while (1) {
        if ((($i_034_i_i_i >>> 0) % 3 | 0 | 0) == 0) {
         $chk_sroa_0_1_i_i_i = $chk_sroa_0_037_i_i_i << 1 & 510 | $chk_sroa_0_037_i_i_i >>> 7 & 1; //@line 10380
        } else {
         $chk_sroa_0_1_i_i_i = $chk_sroa_0_037_i_i_i; //@line 10382
        }
        $val_0_i_i_i = HEAPU8[$buf_i_i + $i_034_i_i_i | 0] ^ $chk_sroa_0_1_i_i_i; //@line 10388
        $337 = ($chk_sroa_0_1_i_i_i >>> 8 & 1) + $chk_sroa_2_035_i_i_i + ($val_0_i_i_i & 255) | 0; //@line 10393
        HEAP8[$buf_i + $i_034_i_i_i | 0] = $val_0_i_i_i & 255; //@line 10397
        $340 = $i_034_i_i_i + 1 | 0; //@line 10398
        if ($340 >>> 0 < 524) {
         $i_034_i_i_i = $340;
         $chk_sroa_2_035_i_i_i = $chk_sroa_1_036_i_i_i;
         $chk_sroa_1_036_i_i_i = $chk_sroa_0_1_i_i_i & 255;
         $chk_sroa_0_037_i_i_i = $337;
        } else {
         break;
        }
       }
       if ($281 << 24 >> 24 == ($chk_sroa_0_1_i_i_i & 255) << 24 >> 24 & $301 << 24 >> 24 == ($337 & 255) << 24 >> 24) {
        if (($320 & 255 | 0) != ($chk_sroa_1_036_i_i_i | 0)) {
         label = 11221; //@line 10418
        }
       } else {
        label = 11221; //@line 10421
       }
       if ((label | 0) == 11221) {
        label = 0; //@line 10424
        _fprintf($30 | 0, 54136, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = $140, HEAP32[tempInt + 8 >> 2] = $142, HEAP32[tempInt + 16 >> 2] = $87, tempInt) | 0) | 0; //@line 10425
        _psi_sct_set_flags($143, 2, 1); //@line 10426
       }
       $350 = HEAP32[$143 + 24 >> 2] | 0; //@line 10430
       _memcpy($350 | 0, $29 | 0, 512) | 0; //@line 10431
       _psi_sct_set_tags($143, $9, 12) | 0; //@line 10432
      }
     } while (0);
     _psi_trk_add_sector($1, $143) | 0; //@line 10436
    }
    HEAP32[$8 >> 2] = $46; //@line 10439
    HEAP8[$4] = $47; //@line 10440
   }
  } while (0);
  if ($47 << 24 >> 24 == 0) {
   $buf_sroa_1_046 = $buf_sroa_2_047;
   $buf_sroa_2_047 = $45;
  } else {
   $_0 = $1; //@line 10449
   break;
  }
 }
 STACKTOP = sp; //@line 10454
 return $_0 | 0; //@line 10455
}
function _pri_get_uint16_be($buf, $idx) {
 $buf = $buf | 0;
 $idx = $idx | 0;
 return (HEAPU8[$buf + $idx | 0] | 0) << 8 | (HEAPU8[$buf + ($idx + 1) | 0] | 0) | 0; //@line 10476
}
function _pri_get_uint16_le($buf, $idx) {
 $buf = $buf | 0;
 $idx = $idx | 0;
 return (HEAPU8[$buf + ($idx + 1) | 0] | 0) << 8 | (HEAPU8[$buf + $idx | 0] | 0) | 0; //@line 10497
}
function _pri_get_uint32_be($buf, $idx) {
 $buf = $buf | 0;
 $idx = $idx | 0;
 return (((HEAPU8[$buf + $idx | 0] | 0) << 8 | (HEAPU8[$buf + ($idx + 1) | 0] | 0)) << 8 | (HEAPU8[$buf + ($idx + 2) | 0] | 0)) << 8 | (HEAPU8[$buf + ($idx + 3) | 0] | 0) | 0; //@line 10531
}
function _pri_set_uint32_be($buf, $idx, $val) {
 $buf = $buf | 0;
 $idx = $idx | 0;
 $val = $val | 0;
 HEAP8[$buf + $idx | 0] = $val >>> 24 & 255; //@line 10546
 HEAP8[$buf + ($idx + 1) | 0] = $val >>> 16 & 255; //@line 10551
 HEAP8[$buf + ($idx + 2) | 0] = $val >>> 8 & 255; //@line 10556
 HEAP8[$buf + ($idx + 3) | 0] = $val & 255; //@line 10560
 return;
}
function _pri_trk_set_clock($trk, $clock) {
 $trk = $trk | 0;
 $clock = $clock | 0;
 HEAP32[$trk >> 2] = $clock; //@line 10573
 return;
}
function _pri_trk_set_pos($trk, $pos) {
 $trk = $trk | 0;
 $pos = $pos | 0;
 var $2 = 0;
 $2 = HEAP32[$trk + 4 >> 2] | 0; //@line 10586
 if (($2 | 0) == 0) {
  return;
 }
 HEAP32[$trk + 12 >> 2] = ($pos >>> 0) % ($2 >>> 0) | 0; //@line 10595
 HEAP8[$trk + 16 | 0] = 0; //@line 10597
 return;
}
function _pri_decode_gcr($img) {
 $img = $img | 0;
 var $1 = 0, $3 = 0, $4 = 0, $6 = 0, $7 = 0, $c_023 = 0, $10 = 0, $12 = 0, $15 = 0, $h_020 = 0, $19 = 0, $dtrk_0 = 0, $30 = 0, $_pre_phi = 0, $42 = 0, $43 = 0, $_0 = 0, label = 0;
 $1 = _psi_img_new() | 0; //@line 10614
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 10618
  return $_0 | 0; //@line 10621
 }
 $3 = $img | 0; //@line 10623
 $4 = HEAP32[$3 >> 2] | 0; //@line 10624
 if (($4 | 0) == 0) {
  $_0 = $1; //@line 10628
  return $_0 | 0; //@line 10631
 }
 $6 = $img + 4 | 0; //@line 10633
 $c_023 = 0;
 $7 = $4;
 L14067 : while (1) {
  $10 = HEAP32[(HEAP32[$6 >> 2] | 0) + ($c_023 << 2) >> 2] | 0; //@line 10641
  do {
   if (($10 | 0) == 0) {
    $42 = $7; //@line 10646
   } else {
    $12 = $10 | 0; //@line 10648
    if ((HEAP32[$12 >> 2] | 0) == 0) {
     $42 = $7; //@line 10653
     break;
    }
    $15 = $10 + 4 | 0; //@line 10656
    $h_020 = 0; //@line 10658
    while (1) {
     $19 = HEAP32[(HEAP32[$15 >> 2] | 0) + ($h_020 << 2) >> 2] | 0; //@line 10663
     if (($19 | 0) == 0) {
      $dtrk_0 = _psi_trk_new($h_020) | 0; //@line 10669
     } else {
      $dtrk_0 = _pri_decode_gcr_trk($19, $h_020) | 0; //@line 10672
     }
     do {
      if ((HEAP16[$dtrk_0 + 2 >> 1] | 0) == 0) {
       $30 = $h_020 + 1 | 0; //@line 10681
       if (($30 | 0) != (HEAP32[$12 >> 2] | 0)) {
        label = 11252; //@line 10686
        break;
       }
       _psi_trk_del($dtrk_0); //@line 10689
       $_pre_phi = $30; //@line 10691
      } else {
       label = 11252; //@line 10693
      }
     } while (0);
     if ((label | 0) == 11252) {
      label = 0; //@line 10697
      if (($dtrk_0 | 0) == 0) {
       break L14067;
      }
      _psi_img_add_track($1, $dtrk_0, $c_023) | 0; //@line 10703
      $_pre_phi = $h_020 + 1 | 0; //@line 10706
     }
     if ($_pre_phi >>> 0 < (HEAP32[$12 >> 2] | 0) >>> 0) {
      $h_020 = $_pre_phi; //@line 10713
     } else {
      break;
     }
    }
    $42 = HEAP32[$3 >> 2] | 0; //@line 10720
   }
  } while (0);
  $43 = $c_023 + 1 | 0; //@line 10724
  if ($43 >>> 0 < $42 >>> 0) {
   $c_023 = $43;
   $7 = $42;
  } else {
   $_0 = $1; //@line 10730
   label = 11261; //@line 10731
   break;
  }
 }
 if ((label | 0) == 11261) {
  return $_0 | 0; //@line 10738
 }
 _psi_img_del($1); //@line 10740
 $_0 = 0; //@line 10742
 return $_0 | 0; //@line 10745
}
function _pri_encode_gcr_trk($dtrk, $strk, $fmt) {
 $dtrk = $dtrk | 0;
 $strk = $strk | 0;
 $fmt = $fmt | 0;
 var $buf_i = 0, $buf = 0, $1 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $scevgep62_i = 0, $scevgep_i = 0, $i_023 = 0, $i_122 = 0, $19 = 0, $21 = 0, $24 = 0, $26 = 0, $29 = 0, $30 = 0, $33 = 0, $34 = 0, $36 = 0, $38 = 0, $39 = 0, $i_059_i = 0, $fmt_ = 0, $49 = 0, $59 = 0, $chk_sroa_0_037_us_i_i = 0, $chk_sroa_1_036_us_i_i = 0, $chk_sroa_2_035_us_i_i = 0, $i_034_us_i_i = 0, $chk_sroa_0_1_us_i_i = 0, $102 = 0, $106 = 0, $110 = 0, $124 = 0, $125 = 0, $p_056_i = 0, $i_255_i = 0, $126 = 0, $156 = 0, $157 = 0, $163 = 0, $168 = 0, $223 = 0, $225 = 0, $cnt_08_i = 0, $230 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 10785
 STACKTOP = STACKTOP + 1056 | 0; //@line 10785
 $buf_i = sp | 0; //@line 10786
 $buf = sp + 528 | 0; //@line 10787
 _pri_trk_set_pos($dtrk, 0); //@line 10788
 $i_023 = 0; //@line 10790
 do {
  _pri_trk_set_bits($dtrk, 255, 10) | 0; //@line 10793
  $i_023 = $i_023 + 1 | 0; //@line 10794
 } while ($i_023 >>> 0 < 32);
 $1 = $strk + 2 | 0; //@line 10803
 if ((HEAP16[$1 >> 1] | 0) != 0) {
  $4 = $strk + 4 | 0; //@line 10808
  $5 = $buf | 0; //@line 10809
  $6 = $buf + 12 | 0; //@line 10810
  $7 = $buf_i | 0; //@line 10811
  $8 = $buf_i + 524 | 0; //@line 10812
  $9 = $buf_i + 525 | 0; //@line 10813
  $10 = $buf_i + 526 | 0; //@line 10814
  $11 = $buf_i + 1 | 0; //@line 10815
  $scevgep62_i = $buf_i + 522 | 0; //@line 10816
  $scevgep_i = $buf_i + 523 | 0; //@line 10817
  $i_122 = 0; //@line 10819
  do {
   $19 = HEAP32[(HEAP32[$4 >> 2] | 0) + ($i_122 << 2) >> 2] | 0; //@line 10824
   $21 = HEAP16[$19 + 10 >> 1] | 0; //@line 10826
   $24 = HEAP32[$19 + 24 >> 2] | 0; //@line 10829
   if (($21 & 65535) < 512) {
    $26 = $21 & 65535; //@line 10832
    _memcpy($6 | 0, $24 | 0, $26) | 0; //@line 10833
   } else {
    _memcpy($6 | 0, $24 | 0, 512) | 0; //@line 10836
   }
   $29 = _psi_sct_get_gcr_format($19) | 0; //@line 10838
   $30 = ($29 | 0) == 0; //@line 10839
   _psi_sct_get_tags($19, $5, 12) | 0; //@line 10840
   $33 = HEAP16[$19 + 4 >> 1] | 0; //@line 10842
   $34 = $33 & 65535; //@line 10843
   $36 = HEAP16[$19 + 6 >> 1] | 0; //@line 10845
   $38 = HEAP16[$19 + 8 >> 1] | 0; //@line 10847
   $39 = $34 >>> 6; //@line 10848
   $i_059_i = 0; //@line 10850
   do {
    _pri_trk_set_bits($dtrk, 255, 10) | 0; //@line 10853
    $i_059_i = $i_059_i + 1 | 0; //@line 10854
   } while ($i_059_i >>> 0 < 38);
   $fmt_ = $30 ? $fmt : $29; //@line 10863
   $49 = ($36 & 65535) << 5 | $39 & 31; //@line 10868
   _pri_trk_set_bits($dtrk, 14002838, 24) | 0; //@line 10869
   _pri_trk_set_bits($dtrk, HEAPU8[16152 + ($34 & 63) | 0] | 0, 8) | 0; //@line 10874
   $59 = HEAPU8[16152 + ($38 & 63) | 0] | 0; //@line 10878
   _pri_trk_set_bits($dtrk, $59, 8) | 0; //@line 10879
   _pri_trk_set_bits($dtrk, HEAPU8[16152 + ($49 & 63) | 0] | 0, 8) | 0; //@line 10884
   _pri_trk_set_bits($dtrk, HEAPU8[16152 + ($fmt_ & 63) | 0] | 0, 8) | 0; //@line 10889
   _pri_trk_set_bits($dtrk, HEAPU8[16152 + (($49 ^ $fmt_ ^ ($38 ^ $33) & 65535) & 63) | 0] | 0, 8) | 0; //@line 10898
   _pri_trk_set_bits($dtrk, 57002, 16) | 0; //@line 10899
   _pri_trk_set_bits($dtrk, 255, 10) | 0; //@line 10900
   _pri_trk_set_bits($dtrk, 255, 10) | 0; //@line 10901
   _pri_trk_set_bits($dtrk, 255, 10) | 0; //@line 10902
   _pri_trk_set_bits($dtrk, 255, 10) | 0; //@line 10903
   _pri_trk_set_bits($dtrk, 255, 10) | 0; //@line 10904
   _pri_trk_set_bits($dtrk, 255, 10) | 0; //@line 10905
   _pri_trk_set_bits($dtrk, 255, 10) | 0; //@line 10906
   _pri_trk_set_bits($dtrk, 255, 10) | 0; //@line 10907
   _pri_trk_set_bits($dtrk, 14002861, 24) | 0; //@line 10908
   _pri_trk_set_bits($dtrk, $59, 8) | 0; //@line 10909
   $i_034_us_i_i = 0;
   $chk_sroa_2_035_us_i_i = 0;
   $chk_sroa_1_036_us_i_i = 0;
   $chk_sroa_0_037_us_i_i = 0;
   while (1) {
    if ((($i_034_us_i_i >>> 0) % 3 | 0 | 0) == 0) {
     $chk_sroa_0_1_us_i_i = $chk_sroa_0_037_us_i_i << 1 & 510 | $chk_sroa_0_037_us_i_i >>> 7 & 1; //@line 10926
    } else {
     $chk_sroa_0_1_us_i_i = $chk_sroa_0_037_us_i_i; //@line 10928
    }
    $102 = HEAPU8[$buf + $i_034_us_i_i | 0] | 0; //@line 10933
    $106 = ($chk_sroa_0_1_us_i_i >>> 8 & 1) + $chk_sroa_2_035_us_i_i + $102 | 0; //@line 10937
    HEAP8[$buf_i + $i_034_us_i_i | 0] = ($102 ^ $chk_sroa_0_1_us_i_i) & 255; //@line 10942
    $110 = $i_034_us_i_i + 1 | 0; //@line 10943
    if ($110 >>> 0 < 524) {
     $i_034_us_i_i = $110;
     $chk_sroa_2_035_us_i_i = $chk_sroa_1_036_us_i_i;
     $chk_sroa_1_036_us_i_i = $chk_sroa_0_1_us_i_i & 255;
     $chk_sroa_0_037_us_i_i = $106;
    } else {
     break;
    }
   }
   HEAP8[$8] = $chk_sroa_0_1_us_i_i & 255; //@line 10954
   HEAP8[$9] = $106 & 255; //@line 10955
   HEAP8[$10] = $chk_sroa_1_036_us_i_i & 255; //@line 10957
   $i_255_i = 0;
   $p_056_i = $7;
   $125 = $11;
   $124 = (HEAPU8[$11] | 0) >>> 4 & 12 | (HEAPU8[$7] | 0) >>> 2 & 48;
   while (1) {
    $126 = $p_056_i + 2 | 0; //@line 10974
    _pri_trk_set_bits($dtrk, HEAPU8[16152 + ((HEAPU8[$126] | 0) >>> 6 | $124) | 0] | 0, 8) | 0; //@line 10982
    _pri_trk_set_bits($dtrk, HEAPU8[16152 + (HEAP8[$p_056_i] & 63) | 0] | 0, 8) | 0; //@line 10989
    _pri_trk_set_bits($dtrk, HEAPU8[16152 + (HEAP8[$125] & 63) | 0] | 0, 8) | 0; //@line 10996
    _pri_trk_set_bits($dtrk, HEAPU8[16152 + (HEAP8[$126] & 63) | 0] | 0, 8) | 0; //@line 11003
    $156 = $p_056_i + 3 | 0; //@line 11004
    $157 = $i_255_i + 3 | 0; //@line 11005
    $163 = $p_056_i + 4 | 0; //@line 11011
    $168 = (HEAPU8[$163] | 0) >>> 4 & 12 | (HEAPU8[$156] | 0) >>> 2 & 48; //@line 11016
    if ($157 >>> 0 < 522) {
     $i_255_i = $157;
     $p_056_i = $156;
     $125 = $163;
     $124 = $168;
    } else {
     break;
    }
   }
   _pri_trk_set_bits($dtrk, HEAPU8[16152 + $168 | 0] | 0, 8) | 0; //@line 11027
   _pri_trk_set_bits($dtrk, HEAPU8[16152 + (HEAP8[$scevgep62_i] & 63) | 0] | 0, 8) | 0; //@line 11034
   _pri_trk_set_bits($dtrk, HEAPU8[16152 + (HEAP8[$scevgep_i] & 63) | 0] | 0, 8) | 0; //@line 11041
   _pri_trk_set_bits($dtrk, HEAPU8[16152 + ($chk_sroa_0_1_us_i_i >>> 2 & 48 | $chk_sroa_1_036_us_i_i >>> 6 | $106 >>> 4 & 12) | 0] | 0, 8) | 0; //@line 11052
   _pri_trk_set_bits($dtrk, HEAPU8[16152 + ($chk_sroa_0_1_us_i_i & 63) | 0] | 0, 8) | 0; //@line 11057
   _pri_trk_set_bits($dtrk, HEAPU8[16152 + ($106 & 63) | 0] | 0, 8) | 0; //@line 11062
   _pri_trk_set_bits($dtrk, HEAPU8[16152 + ($chk_sroa_1_036_us_i_i & 63) | 0] | 0, 8) | 0; //@line 11067
   _pri_trk_set_bits($dtrk, 57002, 16) | 0; //@line 11068
   $i_122 = $i_122 + 1 | 0; //@line 11069
  } while ($i_122 >>> 0 < (HEAPU16[$1 >> 1] | 0) >>> 0);
 }
 if ((HEAP8[$dtrk + 16 | 0] | 0) != 0) {
  $_0 = 1; //@line 11086
  STACKTOP = sp; //@line 11088
  return $_0 | 0; //@line 11089
 }
 $223 = HEAP32[$dtrk + 4 >> 2] | 0; //@line 11092
 $225 = HEAP32[$dtrk + 12 >> 2] | 0; //@line 11094
 if (($223 | 0) == ($225 | 0)) {
  $_0 = 0; //@line 11098
  STACKTOP = sp; //@line 11100
  return $_0 | 0; //@line 11101
 }
 $cnt_08_i = $223 - $225 | 0; //@line 11105
 while (1) {
  $230 = $cnt_08_i >>> 0 < 10 ? $cnt_08_i : 10; //@line 11109
  _pri_trk_set_bits($dtrk, 255 >>> ((10 - $230 | 0) >>> 0), $230) | 0; //@line 11112
  if (($cnt_08_i | 0) == ($230 | 0)) {
   $_0 = 0; //@line 11117
   break;
  } else {
   $cnt_08_i = $cnt_08_i - $230 | 0; //@line 11120
  }
 }
 STACKTOP = sp; //@line 11124
 return $_0 | 0; //@line 11125
}
function _pri_encode_gcr_img($dimg, $simg) {
 $dimg = $dimg | 0;
 $simg = $simg | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $c_0_i = 0, $_0_i = 0, $c_018 = 0, $18 = 0, $_0_i16 = 0, $24 = 0, $25 = 0, $h_0 = 0, $33 = 0, $34 = 0, $44 = 0, $_0 = 0, label = 0;
 $1 = $simg + 4 | 0; //@line 11140
 $2 = $simg | 0; //@line 11141
 $3 = HEAP16[$2 >> 1] | 0; //@line 11142
 $4 = $3 & 65535; //@line 11143
 $c_0_i = 0; //@line 11145
 while (1) {
  if ($c_0_i >>> 0 >= $4 >>> 0) {
   $_0_i = 2; //@line 11151
   break;
  }
  if ((HEAPU16[(HEAP32[(HEAP32[$1 >> 2] | 0) + ($c_0_i << 2) >> 2] | 0) + 2 >> 1] | 0) > 1) {
   $_0_i = 34; //@line 11163
   break;
  } else {
   $c_0_i = $c_0_i + 1 | 0; //@line 11166
  }
 }
 if ($3 << 16 >> 16 == 0) {
  $_0 = 0; //@line 11173
  return $_0 | 0; //@line 11176
 } else {
  $c_018 = 0; //@line 11178
 }
 L14132 : while (1) {
  $18 = HEAP32[(HEAP32[$1 >> 2] | 0) + ($c_018 << 2) >> 2] | 0; //@line 11184
  if ($c_018 >>> 0 < 80) {
   $_0_i16 = HEAP32[16128 + ($c_018 >>> 4 << 2) >> 2] | 0; //@line 11192
  } else {
   $_0_i16 = 0; //@line 11194
  }
  $24 = $18 + 2 | 0; //@line 11197
  $25 = $18 + 4 | 0; //@line 11198
  $h_0 = 0; //@line 11200
  while (1) {
   if ($h_0 >>> 0 >= (HEAPU16[$24 >> 1] | 0) >>> 0) {
    break;
   }
   $33 = HEAP32[(HEAP32[$25 >> 2] | 0) + ($h_0 << 2) >> 2] | 0; //@line 11212
   $34 = _pri_img_get_track($dimg, $c_018, $h_0, 1) | 0; //@line 11213
   if (($34 | 0) == 0) {
    $_0 = 1; //@line 11217
    label = 11301; //@line 11218
    break L14132;
   }
   if ((_pri_trk_set_size($34, $_0_i16) | 0) != 0) {
    $_0 = 1; //@line 11225
    label = 11302; //@line 11226
    break L14132;
   }
   _pri_trk_set_clock($34, 5e5); //@line 11229
   if ((_pri_encode_gcr_trk($34, $33, $_0_i) | 0) == 0) {
    $h_0 = $h_0 + 1 | 0; //@line 11235
   } else {
    $_0 = 1; //@line 11237
    label = 11300; //@line 11238
    break L14132;
   }
  }
  $44 = $c_018 + 1 | 0; //@line 11242
  if ($44 >>> 0 < (HEAPU16[$2 >> 1] | 0) >>> 0) {
   $c_018 = $44; //@line 11248
  } else {
   $_0 = 0; //@line 11250
   label = 11304; //@line 11251
   break;
  }
 }
 if ((label | 0) == 11300) {
  return $_0 | 0; //@line 11258
 } else if ((label | 0) == 11302) {
  return $_0 | 0; //@line 11263
 } else if ((label | 0) == 11304) {
  return $_0 | 0; //@line 11268
 } else if ((label | 0) == 11301) {
  return $_0 | 0; //@line 11273
 }
 return 0;
}
function _pri_encode_gcr($img) {
 $img = $img | 0;
 var $1 = 0, $_0 = 0;
 $1 = _pri_img_new() | 0; //@line 11283
 do {
  if (($1 | 0) == 0) {
   $_0 = 0; //@line 11288
  } else {
   if ((_pri_encode_gcr_img($1, $img) | 0) == 0) {
    $_0 = $1; //@line 11294
    break;
   }
   _pri_img_del($1); //@line 11297
   $_0 = 0; //@line 11299
  }
 } while (0);
 return $_0 | 0; //@line 11304
}
function _pri_read($fp, $buf, $cnt) {
 $fp = $fp | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 return (_fread($buf | 0, 1, $cnt | 0, $fp | 0) | 0) != ($cnt | 0) | 0; //@line 11319
}
function _pri_read_ofs($fp, $ofs, $buf, $cnt) {
 $fp = $fp | 0;
 $ofs = $ofs | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 var $_0 = 0;
 if ((_fseek($fp | 0, $ofs | 0, 0) | 0) != 0) {
  $_0 = 1; //@line 11335
  return $_0 | 0; //@line 11338
 }
 $_0 = (_fread($buf | 0, 1, $cnt | 0, $fp | 0) | 0) != ($cnt | 0) | 0; //@line 11344
 return $_0 | 0; //@line 11347
}
function _pri_write($fp, $buf, $cnt) {
 $fp = $fp | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 return (_fwrite($buf | 0, 1, $cnt | 0, $fp | 0) | 0) != ($cnt | 0) | 0; //@line 11362
}
function _pri_img_load($fname, $type) {
 $fname = $fname | 0;
 $type = $type | 0;
 var $i_0_i = 0, $ext_0_i = 0, $2 = 0, $3 = 0, $ext_1_i = 0, $_0_i = 0, $16 = 0, $img_0_i = 0, $_0 = 0;
 do {
  if (($type | 0) == 0) {
   $ext_0_i = 62872;
   $i_0_i = 0;
   while (1) {
    $2 = $fname + $i_0_i | 0; //@line 11382
    $3 = HEAP8[$2] | 0; //@line 11383
    if (($3 << 24 >> 24 | 0) == 46) {
     $ext_1_i = $2; //@line 11386
    } else if (($3 << 24 >> 24 | 0) == 0) {
     break;
    } else {
     $ext_1_i = $ext_0_i; //@line 11390
    }
    $ext_0_i = $ext_1_i;
    $i_0_i = $i_0_i + 1 | 0;
   }
   if ((_strcasecmp($ext_0_i | 0, 46240) | 0) == 0) {
    $_0_i = 1; //@line 11401
    break;
   }
   if ((_strcasecmp($ext_0_i | 0, 42720) | 0) == 0) {
    $_0_i = 2; //@line 11408
    break;
   }
   $_0_i = (_strcasecmp($ext_0_i | 0, 39624) | 0) == 0 ? 3 : 2; //@line 11415
  } else {
   $_0_i = $type; //@line 11417
  }
 } while (0);
 $16 = _fopen($fname | 0, 54128) | 0; //@line 11421
 if (($16 | 0) == 0) {
  $_0 = 0; //@line 11425
  return $_0 | 0; //@line 11428
 }
 if (($_0_i | 0) == 3) {
  $img_0_i = _pri_load_tc($16) | 0; //@line 11433
 } else if (($_0_i | 0) == 1) {
  $img_0_i = _pri_load_pbit($16) | 0; //@line 11437
 } else if (($_0_i | 0) == 2) {
  $img_0_i = _pri_load_pri($16) | 0; //@line 11441
 } else {
  $img_0_i = 0; //@line 11443
 }
 _fclose($16 | 0) | 0; //@line 11446
 $_0 = $img_0_i; //@line 11448
 return $_0 | 0; //@line 11451
}
function _pri_img_save($fname, $img, $type) {
 $fname = $fname | 0;
 $img = $img | 0;
 $type = $type | 0;
 var $i_0_i = 0, $ext_0_i = 0, $2 = 0, $3 = 0, $ext_1_i = 0, $_0_i = 0, $16 = 0, $_0_i7 = 0, $_0 = 0;
 do {
  if (($type | 0) == 0) {
   $ext_0_i = 62872;
   $i_0_i = 0;
   while (1) {
    $2 = $fname + $i_0_i | 0; //@line 11472
    $3 = HEAP8[$2] | 0; //@line 11473
    if (($3 << 24 >> 24 | 0) == 46) {
     $ext_1_i = $2; //@line 11476
    } else if (($3 << 24 >> 24 | 0) == 0) {
     break;
    } else {
     $ext_1_i = $ext_0_i; //@line 11480
    }
    $ext_0_i = $ext_1_i;
    $i_0_i = $i_0_i + 1 | 0;
   }
   if ((_strcasecmp($ext_0_i | 0, 46240) | 0) == 0) {
    $_0_i = 1; //@line 11491
    break;
   }
   if ((_strcasecmp($ext_0_i | 0, 42720) | 0) == 0) {
    $_0_i = 2; //@line 11498
    break;
   }
   $_0_i = (_strcasecmp($ext_0_i | 0, 39624) | 0) == 0 ? 3 : 2; //@line 11505
  } else {
   $_0_i = $type; //@line 11507
  }
 } while (0);
 $16 = _fopen($fname | 0, 56688) | 0; //@line 11511
 if (($16 | 0) == 0) {
  $_0 = 1; //@line 11515
  return $_0 | 0; //@line 11518
 }
 if (($_0_i | 0) == 1) {
  $_0_i7 = _pri_save_pbit($16, $img) | 0; //@line 11523
 } else if (($_0_i | 0) == 2) {
  $_0_i7 = _pri_save_pri($16, $img) | 0; //@line 11527
 } else if (($_0_i | 0) == 3) {
  $_0_i7 = _pri_save_tc($16, $img) | 0; //@line 11531
 } else {
  $_0_i7 = 1; //@line 11533
 }
 _fclose($16 | 0) | 0; //@line 11536
 $_0 = $_0_i7; //@line 11538
 return $_0 | 0; //@line 11541
}
function _pri_trk_set_size($trk, $size) {
 $trk = $trk | 0;
 $size = $size | 0;
 var $1 = 0, $8 = 0, $9 = 0, $14 = 0, $17 = 0, $size_ = 0, $19 = 0, $25 = 0, $26 = 0, $29 = 0, $_019_i = 0, $_0 = 0;
 $1 = $trk + 4 | 0; //@line 11555
 if ((HEAP32[$1 >> 2] | 0) == ($size | 0)) {
  $_0 = 0; //@line 11560
  return $_0 | 0; //@line 11563
 }
 HEAP32[$trk + 12 >> 2] = 0; //@line 11566
 HEAP8[$trk + 16 | 0] = 0; //@line 11568
 $8 = $trk + 8 | 0; //@line 11570
 $9 = HEAP32[$8 >> 2] | 0; //@line 11571
 if (($size | 0) == 0) {
  _free($9); //@line 11574
  HEAP32[$1 >> 2] = 0; //@line 11575
  HEAP32[$8 >> 2] = 0; //@line 11576
  $_0 = 0; //@line 11578
  return $_0 | 0; //@line 11581
 }
 $14 = _realloc($9, ($size + 7 | 0) >>> 3) | 0; //@line 11585
 if (($14 | 0) == 0) {
  $_0 = 1; //@line 11589
  return $_0 | 0; //@line 11592
 }
 $17 = HEAP32[$1 >> 2] | 0; //@line 11594
 $size_ = $17 >>> 0 > $size >>> 0 ? $size : $17; //@line 11596
 $19 = $size - 1 | 0; //@line 11597
 do {
  if (($19 | 7) >>> 0 >= $size_ >>> 0) {
   $25 = $size_ >>> 3; //@line 11605
   $26 = $19 >>> 3; //@line 11606
   $29 = $14 + $25 | 0; //@line 11609
   HEAP8[$29] = (HEAPU8[$29] | 0) & (255 >>> (($size_ & 7) >>> 0) ^ 255) & 255; //@line 11614
   if (($25 | 0) == ($26 | 0)) {
    break;
   }
   $_019_i = $25 + 1 | 0; //@line 11619
   if ($_019_i >>> 0 < $26 >>> 0) {
    _memset($14 + $_019_i | 0, 0, $26 - 1 - $25 | 0); //@line 11626
   }
   HEAP8[$14 + $26 | 0] = 0; //@line 11630
  }
 } while (0);
 HEAP32[$1 >> 2] = $size; //@line 11633
 HEAP32[$8 >> 2] = $14; //@line 11634
 $_0 = 0; //@line 11636
 return $_0 | 0; //@line 11639
}
function _pri_trk_get_bits($trk, $val, $cnt) {
 $trk = $trk | 0;
 $val = $val | 0;
 $cnt = $cnt | 0;
 var $2 = 0, $6 = 0, $7 = 0, $13 = 0, $16 = 0, $18 = 0, $p_023 = 0, $m_022 = 0, $v_021 = 0, $_020 = 0, $24 = 0, $25 = 0, $26 = 0, $30 = 0, $33 = 0, $m_1 = 0, $p_1 = 0, $34 = 0, $_pre_phi = 0, $v_0_lcssa = 0, $_019 = 0;
 $2 = HEAP32[$trk + 4 >> 2] | 0; //@line 11656
 if (($2 | 0) == 0) {
  HEAP32[$val >> 2] = 0; //@line 11660
  $_019 = 1; //@line 11662
  return $_019 | 0; //@line 11665
 }
 $6 = $trk + 12 | 0; //@line 11667
 $7 = HEAP32[$6 >> 2] | 0; //@line 11668
 if (($cnt | 0) == 0) {
  $v_0_lcssa = 0;
  $_pre_phi = $trk + 16 | 0;
 } else {
  $13 = HEAP32[$trk + 8 >> 2] | 0; //@line 11680
  $16 = $trk + 16 | 0; //@line 11683
  $_020 = $cnt;
  $v_021 = 0;
  $m_022 = 128 >>> (($7 & 7) >>> 0) & 255;
  $p_023 = $13 + ($7 >>> 3) | 0;
  $18 = $7;
  while (1) {
   $24 = (HEAP8[$p_023] & $m_022) << 24 >> 24 != 0 | $v_021 << 1; //@line 11697
   $25 = ($m_022 & 255) >>> 1; //@line 11698
   $26 = $18 + 1 | 0; //@line 11699
   HEAP32[$6 >> 2] = $26; //@line 11700
   if ($26 >>> 0 < $2 >>> 0) {
    $30 = $25 << 24 >> 24 == 0; //@line 11704
    $p_1 = $30 ? $p_023 + 1 | 0 : $p_023;
    $m_1 = $30 ? -128 : $25;
    $33 = $26;
   } else {
    HEAP32[$6 >> 2] = 0; //@line 11711
    HEAP8[$16] = 1; //@line 11712
    $p_1 = $13;
    $m_1 = -128;
    $33 = 0;
   }
   $34 = $_020 - 1 | 0; //@line 11719
   if (($34 | 0) == 0) {
    $v_0_lcssa = $24;
    $_pre_phi = $16;
    break;
   } else {
    $_020 = $34;
    $v_021 = $24;
    $m_022 = $m_1;
    $p_023 = $p_1;
    $18 = $33;
   }
  }
 }
 HEAP32[$val >> 2] = $v_0_lcssa; //@line 11732
 $_019 = HEAP8[$_pre_phi] | 0; //@line 11736
 return $_019 | 0; //@line 11739
}
function _pri_trk_set_bits($trk, $val, $cnt) {
 $trk = $trk | 0;
 $val = $val | 0;
 $cnt = $cnt | 0;
 var $1 = 0, $5 = 0, $6 = 0, $7 = 0, $15 = 0, $p_023 = 0, $m_022 = 0, $_021 = 0, $17 = 0, $storemerge = 0, $29 = 0, $31 = 0, $35 = 0, $m_0_be = 0, $p_0_be = 0, $38 = 0, $_pre_phi = 0, $_020 = 0;
 $1 = $trk + 4 | 0; //@line 11755
 if ((HEAP32[$1 >> 2] | 0) == 0) {
  $_020 = 1; //@line 11760
  return $_020 | 0; //@line 11763
 }
 $5 = $trk + 8 | 0; //@line 11765
 $6 = $trk + 12 | 0; //@line 11766
 $7 = HEAP32[$6 >> 2] | 0; //@line 11767
 if (($cnt | 0) == 0) {
  $_pre_phi = $trk + 16 | 0; //@line 11773
 } else {
  $15 = $trk + 16 | 0; //@line 11781
  $_021 = $cnt;
  $m_022 = 128 >>> (($7 & 7) >>> 0) & 255;
  $p_023 = (HEAP32[$5 >> 2] | 0) + ($7 >>> 3) | 0;
  while (1) {
   $17 = $_021 - 1 | 0; //@line 11788
   if ((1 << $17 & $val | 0) == 0) {
    $storemerge = HEAP8[$p_023] & ~$m_022; //@line 11797
   } else {
    $storemerge = HEAP8[$p_023] | $m_022; //@line 11802
   }
   HEAP8[$p_023] = $storemerge; //@line 11805
   $29 = ($m_022 & 255) >>> 1; //@line 11806
   $31 = (HEAP32[$6 >> 2] | 0) + 1 | 0; //@line 11808
   HEAP32[$6 >> 2] = $31; //@line 11809
   if ($31 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
    $38 = $29 << 24 >> 24 == 0; //@line 11814
    $p_0_be = $38 ? $p_023 + 1 | 0 : $p_023;
    $m_0_be = $38 ? -128 : $29;
   } else {
    $35 = HEAP32[$5 >> 2] | 0; //@line 11821
    HEAP32[$6 >> 2] = 0; //@line 11822
    HEAP8[$15] = 1; //@line 11823
    $p_0_be = $35;
    $m_0_be = -128;
   }
   if (($17 | 0) == 0) {
    $_pre_phi = $15; //@line 11832
    break;
   } else {
    $_021 = $17;
    $m_022 = $m_0_be;
    $p_023 = $p_0_be;
   }
  }
 }
 $_020 = HEAP8[$_pre_phi] | 0; //@line 11843
 return $_020 | 0; //@line 11846
}
function _pri_trk_rotate($trk, $idx) {
 $trk = $trk | 0;
 $idx = $idx | 0;
 var $1 = 0, $2 = 0, $8 = 0, $9 = 0, $12 = 0, $21 = 0, $dp_033 = 0, $sp_032 = 0, $sm_031 = 0, $dm_030 = 0, $i_029 = 0, $_02628 = 0, $29 = 0, $30 = 0, $31 = 0, $33 = 0, $38 = 0, $39 = 0, $_1 = 0, $sm_1 = 0, $sp_1 = 0, $42 = 0, $_0 = 0;
 $1 = $trk + 4 | 0; //@line 11862
 $2 = HEAP32[$1 >> 2] | 0; //@line 11863
 if ($2 >>> 0 <= $idx >>> 0) {
  $_0 = 1; //@line 11867
  return $_0 | 0; //@line 11870
 }
 if (($idx | 0) == 0) {
  $_0 = 0; //@line 11875
  return $_0 | 0; //@line 11878
 }
 $8 = ($2 + 7 | 0) >>> 3; //@line 11881
 $9 = _malloc($8) | 0; //@line 11882
 if (($9 | 0) == 0) {
  $_0 = 1; //@line 11886
  return $_0 | 0; //@line 11889
 }
 _memset($9 | 0, 0, $8 | 0); //@line 11891
 $12 = $trk + 8 | 0; //@line 11892
 if (($2 | 0) != 0) {
  $_02628 = $idx;
  $i_029 = 0;
  $dm_030 = -128;
  $sm_031 = 128 >>> (($idx & 7) >>> 0) & 255;
  $sp_032 = (HEAP32[$12 >> 2] | 0) + ($idx >>> 3) | 0;
  $dp_033 = $9;
  $21 = $2;
  while (1) {
   if ((HEAP8[$sp_032] & $sm_031) << 24 >> 24 == 0) {
    $29 = $21; //@line 11917
   } else {
    HEAP8[$dp_033] = HEAP8[$dp_033] | $dm_030; //@line 11921
    $29 = HEAP32[$1 >> 2] | 0; //@line 11924
   }
   $30 = ($dm_030 & 255) >>> 1; //@line 11927
   $31 = $30 << 24 >> 24 == 0; //@line 11928
   $33 = $_02628 + 1 | 0; //@line 11932
   if ($33 >>> 0 < $29 >>> 0) {
    $38 = ($sm_031 & 255) >>> 1; //@line 11936
    $39 = $38 << 24 >> 24 == 0; //@line 11937
    $sp_1 = $39 ? $sp_032 + 1 | 0 : $sp_032;
    $sm_1 = $39 ? -128 : $38;
    $_1 = $33;
   } else {
    $sp_1 = HEAP32[$12 >> 2] | 0;
    $sm_1 = -128;
    $_1 = 0;
   }
   $42 = $i_029 + 1 | 0; //@line 11951
   if ($42 >>> 0 < $29 >>> 0) {
    $_02628 = $_1;
    $i_029 = $42;
    $dm_030 = $31 ? -128 : $30;
    $sm_031 = $sm_1;
    $sp_032 = $sp_1;
    $dp_033 = $31 ? $dp_033 + 1 | 0 : $dp_033;
    $21 = $29;
   } else {
    break;
   }
  }
 }
 _free(HEAP32[$12 >> 2] | 0); //@line 11962
 HEAP32[$12 >> 2] = $9; //@line 11963
 $_0 = 0; //@line 11965
 return $_0 | 0; //@line 11968
}
function _pri_cyl_get_track($cyl, $h, $alloc) {
 $cyl = $cyl | 0;
 $h = $h | 0;
 $alloc = $alloc | 0;
 var $1 = 0, $3 = 0, $8 = 0, $13 = 0, $14 = 0, $18 = 0, $19 = 0, $20 = 0, $23 = 0, $29 = 0, $33 = 0, $35 = 0, $36 = 0, $39 = 0, $_0 = 0;
 $1 = $cyl | 0; //@line 11983
 $3 = (HEAP32[$1 >> 2] | 0) >>> 0 > $h >>> 0; //@line 11985
 do {
  if ($3) {
   $8 = HEAP32[(HEAP32[$cyl + 4 >> 2] | 0) + ($h << 2) >> 2] | 0; //@line 11992
   if (($8 | 0) == 0) {
    break;
   } else {
    $_0 = $8; //@line 11998
   }
   return $_0 | 0; //@line 12002
  }
 } while (0);
 if (($alloc | 0) == 0) {
  $_0 = 0; //@line 12008
  return $_0 | 0; //@line 12011
 }
 $13 = _malloc(20) | 0; //@line 12013
 $14 = $13; //@line 12014
 if (($13 | 0) == 0) {
  $_0 = 0; //@line 12018
  return $_0 | 0; //@line 12021
 }
 $18 = $13 + 8 | 0; //@line 12024
 _memset($13 | 0, 0, 17); //@line 12025
 $19 = $cyl + 4 | 0; //@line 12026
 $20 = HEAP32[$19 >> 2] | 0; //@line 12027
 if ($3) {
  $23 = HEAP32[$20 + ($h << 2) >> 2] | 0; //@line 12031
  if (($23 | 0) == 0) {
   $29 = $20; //@line 12035
  } else {
   _free(HEAP32[$23 + 8 >> 2] | 0); //@line 12039
   _free($23); //@line 12041
   $29 = HEAP32[$19 >> 2] | 0; //@line 12044
  }
  HEAP32[$29 + ($h << 2) >> 2] = $14; //@line 12048
  $_0 = $14; //@line 12050
  return $_0 | 0; //@line 12053
 }
 $33 = $h + 1 | 0; //@line 12056
 $35 = _realloc($20, $33 << 2) | 0; //@line 12058
 $36 = $35; //@line 12059
 if (($35 | 0) == 0) {
  _free(HEAP32[$18 >> 2] | 0); //@line 12064
  _free($13); //@line 12065
  $_0 = 0; //@line 12067
  return $_0 | 0; //@line 12070
 }
 $39 = HEAP32[$1 >> 2] | 0; //@line 12072
 if ($39 >>> 0 < $h >>> 0) {
  _memset($35 + ($39 << 2) | 0, 0, $h - $39 << 2 | 0); //@line 12080
 }
 HEAP32[$36 + ($h << 2) >> 2] = $14; //@line 12084
 HEAP32[$19 >> 2] = $36; //@line 12085
 HEAP32[$1 >> 2] = $33; //@line 12086
 $_0 = $14; //@line 12088
 return $_0 | 0; //@line 12091
}
function _pri_img_new() {
 var $1 = 0, $_0 = 0;
 $1 = _malloc(16) | 0; //@line 12099
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 12103
  return $_0 | 0; //@line 12106
 }
 _memset($1 | 0, 0, 16); //@line 12109
 $_0 = $1; //@line 12111
 return $_0 | 0; //@line 12114
}
function _pri_img_del($img) {
 $img = $img | 0;
 var $2 = 0, $3 = 0, $_pre9 = 0, $5 = 0, $i_08 = 0, $8 = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $i_07_i = 0, $18 = 0, $24 = 0, $25 = 0, $26 = 0, $_lcssa_i = 0, $30 = 0, $31 = 0;
 if (($img | 0) == 0) {
  return;
 }
 $2 = $img | 0; //@line 12134
 $3 = HEAP32[$2 >> 2] | 0; //@line 12135
 $_pre9 = $img + 4 | 0; //@line 12137
 if (($3 | 0) != 0) {
  $i_08 = 0;
  $5 = $3;
  while (1) {
   $8 = HEAP32[(HEAP32[$_pre9 >> 2] | 0) + ($i_08 << 2) >> 2] | 0; //@line 12146
   if (($8 | 0) == 0) {
    $30 = $5; //@line 12150
   } else {
    $10 = $8 | 0; //@line 12152
    $11 = HEAP32[$10 >> 2] | 0; //@line 12153
    $13 = $8 + 4 | 0; //@line 12155
    $14 = HEAP32[$13 >> 2] | 0; //@line 12156
    if (($11 | 0) == 0) {
     $_lcssa_i = $14; //@line 12159
    } else {
     $i_07_i = 0;
     $16 = $14;
     $15 = $11;
     while (1) {
      $18 = HEAP32[$16 + ($i_07_i << 2) >> 2] | 0; //@line 12167
      if (($18 | 0) == 0) {
       $25 = $15;
       $24 = $16;
      } else {
       _free(HEAP32[$18 + 8 >> 2] | 0); //@line 12175
       _free($18); //@line 12177
       $25 = HEAP32[$10 >> 2] | 0;
       $24 = HEAP32[$13 >> 2] | 0;
      }
      $26 = $i_07_i + 1 | 0; //@line 12185
      if ($26 >>> 0 < $25 >>> 0) {
       $i_07_i = $26;
       $16 = $24;
       $15 = $25;
      } else {
       $_lcssa_i = $24; //@line 12191
       break;
      }
     }
    }
    _free($_lcssa_i); //@line 12198
    _free($8); //@line 12200
    $30 = HEAP32[$2 >> 2] | 0; //@line 12203
   }
   $31 = $i_08 + 1 | 0; //@line 12206
   if ($31 >>> 0 < $30 >>> 0) {
    $i_08 = $31;
    $5 = $30;
   } else {
    break;
   }
  }
 }
 _free(HEAP32[$img + 12 >> 2] | 0); //@line 12218
 _free(HEAP32[$_pre9 >> 2] | 0); //@line 12221
 _free($img); //@line 12223
 return;
}
function _pri_img_get_cylinder($img, $c, $alloc) {
 $img = $img | 0;
 $c = $c | 0;
 $alloc = $alloc | 0;
 var $8 = 0, $13 = 0, $15 = 0, $16 = 0, $18 = 0, $21 = 0, $23 = 0, $24 = 0, $25 = 0, $i_07_i = 0, $27 = 0, $33 = 0, $34 = 0, $35 = 0, $_lcssa_i = 0, $_0 = 0;
 do {
  if ((HEAP32[$img >> 2] | 0) >>> 0 > $c >>> 0) {
   $8 = HEAP32[(HEAP32[$img + 4 >> 2] | 0) + ($c << 2) >> 2] | 0; //@line 12250
   if (($8 | 0) == 0) {
    break;
   } else {
    $_0 = $8; //@line 12256
   }
   return $_0 | 0; //@line 12260
  }
 } while (0);
 if (($alloc | 0) == 0) {
  $_0 = 0; //@line 12266
  return $_0 | 0; //@line 12269
 }
 $13 = _malloc(8) | 0; //@line 12271
 if (($13 | 0) == 0) {
  $_0 = 0; //@line 12275
  return $_0 | 0; //@line 12278
 }
 $15 = $13; //@line 12280
 $16 = $13; //@line 12281
 HEAP32[$16 >> 2] = 0; //@line 12282
 $18 = $13 + 4 | 0; //@line 12284
 HEAP32[$18 >> 2] = 0; //@line 12285
 if ((_pri_img_set_cylinder($img, $15, $c) | 0) == 0) {
  $_0 = $15; //@line 12290
  return $_0 | 0; //@line 12293
 }
 $21 = HEAP32[$16 >> 2] | 0; //@line 12295
 $23 = HEAP32[$18 >> 2] | 0; //@line 12297
 if (($21 | 0) == 0) {
  $_lcssa_i = $23; //@line 12300
 } else {
  $i_07_i = 0;
  $25 = $23;
  $24 = $21;
  while (1) {
   $27 = HEAP32[$25 + ($i_07_i << 2) >> 2] | 0; //@line 12308
   if (($27 | 0) == 0) {
    $34 = $24;
    $33 = $25;
   } else {
    _free(HEAP32[$27 + 8 >> 2] | 0); //@line 12316
    _free($27); //@line 12318
    $34 = HEAP32[$16 >> 2] | 0;
    $33 = HEAP32[$18 >> 2] | 0;
   }
   $35 = $i_07_i + 1 | 0; //@line 12326
   if ($35 >>> 0 < $34 >>> 0) {
    $i_07_i = $35;
    $25 = $33;
    $24 = $34;
   } else {
    $_lcssa_i = $33; //@line 12332
    break;
   }
  }
 }
 _free($_lcssa_i); //@line 12339
 _free($13); //@line 12340
 $_0 = 0; //@line 12342
 return $_0 | 0; //@line 12345
}
function _pri_img_set_cylinder($img, $cyl, $c) {
 $img = $img | 0;
 $cyl = $cyl | 0;
 $c = $c | 0;
 var $1 = 0, $4 = 0, $5 = 0, $8 = 0, $10 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $i_07_i = 0, $18 = 0, $24 = 0, $25 = 0, $26 = 0, $_lcssa_i = 0, $30 = 0, $32 = 0, $_pre_i24 = 0, $35 = 0, $36 = 0, $44 = 0, $46 = 0, $47 = 0, $50 = 0, $58 = 0, $59 = 0, $_0 = 0, label = 0;
 $1 = $img | 0; //@line 12363
 $4 = $img + 4 | 0; //@line 12366
 $5 = HEAP32[$4 >> 2] | 0; //@line 12367
 if ((HEAP32[$1 >> 2] | 0) >>> 0 <= $c >>> 0) {
  $44 = $c + 1 | 0; //@line 12371
  $46 = _realloc($5, $44 << 2) | 0; //@line 12373
  $47 = $46; //@line 12374
  if (($46 | 0) == 0) {
   $_0 = 1; //@line 12378
   return $_0 | 0; //@line 12381
  }
  $50 = HEAP32[$1 >> 2] | 0; //@line 12383
  if ($50 >>> 0 < $c >>> 0) {
   _memset($46 + ($50 << 2) | 0, 0, $c - $50 << 2 | 0); //@line 12391
  }
  HEAP32[$47 + ($c << 2) >> 2] = $cyl; //@line 12395
  HEAP32[$4 >> 2] = $47; //@line 12396
  HEAP32[$1 >> 2] = $44; //@line 12397
  if (($44 | 0) == 0) {
   $_0 = 0; //@line 12401
   return $_0 | 0; //@line 12404
  } else {
   $58 = $44; //@line 12406
  }
  while (1) {
   $59 = $58 - 1 | 0; //@line 12410
   if ((HEAP32[$47 + ($59 << 2) >> 2] | 0) != 0) {
    $_0 = 0; //@line 12415
    label = 11485; //@line 12416
    break;
   }
   HEAP32[$1 >> 2] = $59; //@line 12419
   if (($59 | 0) == 0) {
    $_0 = 0; //@line 12423
    label = 11482; //@line 12424
    break;
   } else {
    $58 = $59; //@line 12427
   }
  }
  if ((label | 0) == 11482) {
   return $_0 | 0; //@line 12433
  } else if ((label | 0) == 11485) {
   return $_0 | 0; //@line 12438
  }
 }
 $8 = HEAP32[$5 + ($c << 2) >> 2] | 0; //@line 12442
 if (($8 | 0) == 0) {
  $30 = $5; //@line 12446
 } else {
  $10 = $8 | 0; //@line 12448
  $11 = HEAP32[$10 >> 2] | 0; //@line 12449
  $13 = $8 + 4 | 0; //@line 12451
  $14 = HEAP32[$13 >> 2] | 0; //@line 12452
  if (($11 | 0) == 0) {
   $_lcssa_i = $14; //@line 12455
  } else {
   $i_07_i = 0;
   $16 = $14;
   $15 = $11;
   while (1) {
    $18 = HEAP32[$16 + ($i_07_i << 2) >> 2] | 0; //@line 12463
    if (($18 | 0) == 0) {
     $25 = $15;
     $24 = $16;
    } else {
     _free(HEAP32[$18 + 8 >> 2] | 0); //@line 12471
     _free($18); //@line 12473
     $25 = HEAP32[$10 >> 2] | 0;
     $24 = HEAP32[$13 >> 2] | 0;
    }
    $26 = $i_07_i + 1 | 0; //@line 12481
    if ($26 >>> 0 < $25 >>> 0) {
     $i_07_i = $26;
     $16 = $24;
     $15 = $25;
    } else {
     $_lcssa_i = $24; //@line 12487
     break;
    }
   }
  }
  _free($_lcssa_i); //@line 12494
  _free($8); //@line 12496
  $30 = HEAP32[$4 >> 2] | 0; //@line 12499
 }
 HEAP32[$30 + ($c << 2) >> 2] = $cyl; //@line 12503
 $32 = HEAP32[$1 >> 2] | 0; //@line 12504
 if (($32 | 0) == 0) {
  $_0 = 0; //@line 12508
  return $_0 | 0; //@line 12511
 }
 $_pre_i24 = HEAP32[$4 >> 2] | 0; //@line 12513
 $35 = $32; //@line 12515
 while (1) {
  $36 = $35 - 1 | 0; //@line 12518
  if ((HEAP32[$_pre_i24 + ($36 << 2) >> 2] | 0) != 0) {
   $_0 = 0; //@line 12523
   label = 11481; //@line 12524
   break;
  }
  HEAP32[$1 >> 2] = $36; //@line 12527
  if (($36 | 0) == 0) {
   $_0 = 0; //@line 12531
   label = 11484; //@line 12532
   break;
  } else {
   $35 = $36; //@line 12535
  }
 }
 if ((label | 0) == 11481) {
  return $_0 | 0; //@line 12541
 } else if ((label | 0) == 11484) {
  return $_0 | 0; //@line 12546
 }
 return 0;
}
function _pri_img_get_track($img, $c, $h, $alloc) {
 $img = $img | 0;
 $c = $c | 0;
 $h = $h | 0;
 $alloc = $alloc | 0;
 var $1 = 0, $_0 = 0;
 $1 = _pri_img_get_cylinder($img, $c, $alloc) | 0; //@line 12559
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 12563
  return $_0 | 0; //@line 12566
 }
 $_0 = _pri_cyl_get_track($1, $h, $alloc) | 0; //@line 12570
 return $_0 | 0; //@line 12573
}
function _pri_img_add_comment($img, $buf, $cnt) {
 $img = $img | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 var $1 = 0, $3 = 0, $6 = 0, $9 = 0, $10 = 0, $_0 = 0;
 $1 = $img + 12 | 0; //@line 12585
 $3 = $img + 8 | 0; //@line 12587
 $6 = _realloc(HEAP32[$1 >> 2] | 0, (HEAP32[$3 >> 2] | 0) + $cnt | 0) | 0; //@line 12590
 if (($6 | 0) == 0) {
  $_0 = 1; //@line 12594
  return $_0 | 0; //@line 12597
 }
 $9 = HEAP32[$3 >> 2] | 0; //@line 12599
 $10 = $6 + $9 | 0; //@line 12600
 _memcpy($10 | 0, $buf | 0, $cnt) | 0; //@line 12601
 HEAP32[$3 >> 2] = $9 + $cnt; //@line 12603
 HEAP32[$1 >> 2] = $6; //@line 12604
 $_0 = 0; //@line 12606
 return $_0 | 0; //@line 12609
}
function _pri_img_set_comment($img, $buf, $cnt) {
 $img = $img | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 var $1 = 0, $3 = 0, $7 = 0, $10 = 0, $11 = 0, $_0 = 0;
 $1 = $img + 12 | 0; //@line 12621
 _free(HEAP32[$1 >> 2] | 0); //@line 12623
 $3 = $img + 8 | 0; //@line 12624
 HEAP32[$3 >> 2] = 0; //@line 12625
 HEAP32[$1 >> 2] = 0; //@line 12626
 if (($buf | 0) == 0 | ($cnt | 0) == 0) {
  $_0 = 0; //@line 12632
  return $_0 | 0; //@line 12635
 }
 $7 = _realloc(0, $cnt) | 0; //@line 12637
 if (($7 | 0) == 0) {
  $_0 = 1; //@line 12641
  return $_0 | 0; //@line 12644
 }
 $10 = HEAP32[$3 >> 2] | 0; //@line 12646
 $11 = $7 + $10 | 0; //@line 12647
 _memcpy($11 | 0, $buf | 0, $cnt) | 0; //@line 12648
 HEAP32[$3 >> 2] = $10 + $cnt; //@line 12650
 HEAP32[$1 >> 2] = $7; //@line 12651
 $_0 = 0; //@line 12653
 return $_0 | 0; //@line 12656
}
function _pri_load_pbit($fp) {
 $fp = $fp | 0;
 var $buf_i102_i = 0, $buf_i63_i = 0, $buf_i_i_i = 0, $c_i_i = 0, $buf_i_i = 0, $buf_i = 0, $1 = 0, $4 = 0, $11 = 0, $15 = 0, $i_017_i_i = 0, $17 = 0, $reg_1_i_i = 0, $20 = 0, $reg_1_1_i_i = 0, $23 = 0, $reg_1_2_i_i = 0, $26 = 0, $reg_1_3_i_i = 0, $29 = 0, $reg_1_4_i_i = 0, $32 = 0, $reg_1_5_i_i = 0, $35 = 0, $reg_1_6_i_i = 0, $38 = 0, $44 = 0, $48 = 0, $50 = 0, $57 = 0, $59 = 0, $66 = 0, $74 = 0, $76 = 0, $83 = 0, $85 = 0, $92 = 0, $94 = 0, $101 = 0, $109 = 0, $110 = 0, $i_017_i_i_i = 0, $117 = 0, $reg_1_i_i_i = 0, $120 = 0, $reg_1_1_i_i_i = 0, $123 = 0, $reg_1_2_i_i_i = 0, $126 = 0, $reg_1_3_i_i_i = 0, $129 = 0, $reg_1_4_i_i_i = 0, $132 = 0, $reg_1_5_i_i_i = 0, $135 = 0, $reg_1_6_i_i_i = 0, $138 = 0, $152 = 0, $161 = 0, $170 = 0, $179 = 0, $188 = 0, $197 = 0, $206 = 0, $212 = 0, $213 = 0, $216 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $trk_0_ph_i = 0, $228 = 0, $229 = 0, $230 = 0, $232 = 0, $233 = 0, $i_017_i31_i = 0, $235 = 0, $reg_1_i33_i = 0, $238 = 0, $reg_1_1_i34_i = 0, $241 = 0, $reg_1_2_i35_i = 0, $244 = 0, $reg_1_3_i36_i = 0, $247 = 0, $reg_1_4_i37_i = 0, $250 = 0, $reg_1_5_i38_i = 0, $253 = 0, $reg_1_6_i39_i = 0, $256 = 0, $265 = 0, $273 = 0, $281 = 0, $289 = 0, $297 = 0, $305 = 0, $313 = 0, $321 = 0, $334 = 0, $i_017_i_i49_i = 0, $342 = 0, $reg_1_i_i51_i = 0, $345 = 0, $reg_1_1_i_i52_i = 0, $348 = 0, $reg_1_2_i_i53_i = 0, $351 = 0, $reg_1_3_i_i54_i = 0, $354 = 0, $reg_1_4_i_i55_i = 0, $357 = 0, $reg_1_5_i_i56_i = 0, $360 = 0, $reg_1_6_i_i57_i = 0, $363 = 0, $src_013_i_i_i = 0, $_012_i_i_i = 0, $_01011_i_i_i = 0, $377 = 0, $378 = 0, $i_075_i_i = 0, $381 = 0, $i_0_lcssa_i_i = 0, $i_0_be_i_i = 0, $j_069_i_i = 0, $384 = 0, $386 = 0, $j_0_be_i_i = 0, $j_0_lcssa_i_i = 0, $d_067_i_i = 0, $k_066_i_i = 0, $402 = 0, $405 = 0, $k_1_i_i = 0, $d_1_i_i = 0, $418 = 0, $d_0_lcssa_i_i = 0, $429 = 0, $437 = 0, $i_017_i_i65_i = 0, $446 = 0, $reg_1_i_i67_i = 0, $449 = 0, $reg_1_1_i_i68_i = 0, $452 = 0, $reg_1_2_i_i69_i = 0, $455 = 0, $reg_1_3_i_i70_i = 0, $458 = 0, $reg_1_4_i_i71_i = 0, $461 = 0, $reg_1_5_i_i72_i = 0, $464 = 0, $reg_1_6_i_i73_i = 0, $467 = 0, $src_013_i_i76_i = 0, $_012_i_i77_i = 0, $_01011_i_i78_i = 0, $481 = 0, $482 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $501 = 0, $size__i_i = 0, $507 = 0, $i_017_i_i83_i = 0, $509 = 0, $reg_1_i_i85_i = 0, $512 = 0, $reg_1_1_i_i86_i = 0, $515 = 0, $reg_1_2_i_i87_i = 0, $518 = 0, $reg_1_3_i_i88_i = 0, $521 = 0, $reg_1_4_i_i89_i = 0, $524 = 0, $reg_1_5_i_i90_i = 0, $527 = 0, $reg_1_6_i_i91_i = 0, $530 = 0, $src_013_i_i94_i = 0, $_012_i_i95_i = 0, $_01011_i_i96_i = 0, $545 = 0, $546 = 0, $_0_lcssa_i_i_i = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 12740
 STACKTOP = STACKTOP + 560 | 0; //@line 12740
 $buf_i102_i = sp | 0; //@line 12741
 $buf_i63_i = sp + 256 | 0; //@line 12742
 $buf_i_i_i = sp + 280 | 0; //@line 12743
 $c_i_i = sp + 536 | 0; //@line 12744
 $buf_i_i = sp + 544 | 0; //@line 12745
 $buf_i = sp + 552 | 0; //@line 12746
 $1 = _pri_img_new() | 0; //@line 12747
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 12751
  STACKTOP = sp; //@line 12753
  return $_0 | 0; //@line 12754
 }
 $4 = $buf_i | 0; //@line 12756
 if ((_pri_read($fp, $4, 4) | 0) != 0) {
  $_0 = $1; //@line 12761
  STACKTOP = sp; //@line 12763
  return $_0 | 0; //@line 12764
 }
 L14411 : do {
  if ((_pri_get_uint32_be($4, 0) | 0) == 1346521428) {
   $11 = $buf_i + 4 | 0; //@line 12771
   if ((_pri_read($fp, $11, 4) | 0) != 0) {
    break;
   }
   $15 = _pri_get_uint32_be($4, 4) | 0; //@line 12778
   if (!(HEAP8[6704] | 0)) {
    $i_017_i_i = 0; //@line 12782
    do {
     $17 = $i_017_i_i << 25; //@line 12787
     $reg_1_i_i = ($i_017_i_i & 128 | 0) != 0 ? $17 ^ 517762881 : $17; //@line 12789
     $20 = $reg_1_i_i << 1; //@line 12791
     $reg_1_1_i_i = ($reg_1_i_i | 0) < 0 ? $20 ^ 517762881 : $20; //@line 12793
     $23 = $reg_1_1_i_i << 1; //@line 12795
     $reg_1_2_i_i = ($reg_1_1_i_i | 0) < 0 ? $23 ^ 517762881 : $23; //@line 12797
     $26 = $reg_1_2_i_i << 1; //@line 12799
     $reg_1_3_i_i = ($reg_1_2_i_i | 0) < 0 ? $26 ^ 517762881 : $26; //@line 12801
     $29 = $reg_1_3_i_i << 1; //@line 12803
     $reg_1_4_i_i = ($reg_1_3_i_i | 0) < 0 ? $29 ^ 517762881 : $29; //@line 12805
     $32 = $reg_1_4_i_i << 1; //@line 12807
     $reg_1_5_i_i = ($reg_1_4_i_i | 0) < 0 ? $32 ^ 517762881 : $32; //@line 12809
     $35 = $reg_1_5_i_i << 1; //@line 12811
     $reg_1_6_i_i = ($reg_1_5_i_i | 0) < 0 ? $35 ^ 517762881 : $35; //@line 12813
     $38 = $reg_1_6_i_i << 1; //@line 12815
     HEAP32[61320 + ($i_017_i_i << 2) >> 2] = ($reg_1_6_i_i | 0) < 0 ? $38 ^ 517762881 : $38; //@line 12819
     $i_017_i_i = $i_017_i_i + 1 | 0; //@line 12820
    } while ($i_017_i_i >>> 0 < 256);
    HEAP8[6704] = 1; //@line 12829
   }
   $44 = $buf_i + 1 | 0; //@line 12832
   $48 = HEAP32[61320 + (HEAPU8[$4] << 2) >> 2] | 0; //@line 12836
   $50 = $buf_i + 2 | 0; //@line 12838
   $57 = HEAP32[61320 + ((HEAPU8[$44] ^ $48 >>> 24) << 2) >> 2] ^ $48 << 8; //@line 12845
   $59 = $buf_i + 3 | 0; //@line 12847
   $66 = HEAP32[61320 + ((HEAPU8[$50] ^ $57 >>> 24) << 2) >> 2] ^ $57 << 8; //@line 12854
   $74 = HEAP32[61320 + ((HEAPU8[$59] ^ $66 >>> 24) << 2) >> 2] ^ $66 << 8; //@line 12862
   $76 = $buf_i + 5 | 0; //@line 12864
   $83 = HEAP32[61320 + ((HEAPU8[$11] ^ $74 >>> 24) << 2) >> 2] ^ $74 << 8; //@line 12871
   $85 = $buf_i + 6 | 0; //@line 12873
   $92 = HEAP32[61320 + ((HEAPU8[$76] ^ $83 >>> 24) << 2) >> 2] ^ $83 << 8; //@line 12880
   $94 = $buf_i + 7 | 0; //@line 12882
   $101 = HEAP32[61320 + ((HEAPU8[$85] ^ $92 >>> 24) << 2) >> 2] ^ $92 << 8; //@line 12889
   $109 = HEAP32[61320 + ((HEAPU8[$94] ^ $101 >>> 24) << 2) >> 2] ^ $101 << 8; //@line 12897
   $110 = $buf_i_i | 0; //@line 12898
   if ($15 >>> 0 < 8) {
    break;
   }
   if ((_pri_read($fp, $110, 8) | 0) != 0) {
    break;
   }
   if (!(HEAP8[6704] | 0)) {
    $i_017_i_i_i = 0; //@line 12913
    do {
     $117 = $i_017_i_i_i << 25; //@line 12918
     $reg_1_i_i_i = ($i_017_i_i_i & 128 | 0) != 0 ? $117 ^ 517762881 : $117; //@line 12920
     $120 = $reg_1_i_i_i << 1; //@line 12922
     $reg_1_1_i_i_i = ($reg_1_i_i_i | 0) < 0 ? $120 ^ 517762881 : $120; //@line 12924
     $123 = $reg_1_1_i_i_i << 1; //@line 12926
     $reg_1_2_i_i_i = ($reg_1_1_i_i_i | 0) < 0 ? $123 ^ 517762881 : $123; //@line 12928
     $126 = $reg_1_2_i_i_i << 1; //@line 12930
     $reg_1_3_i_i_i = ($reg_1_2_i_i_i | 0) < 0 ? $126 ^ 517762881 : $126; //@line 12932
     $129 = $reg_1_3_i_i_i << 1; //@line 12934
     $reg_1_4_i_i_i = ($reg_1_3_i_i_i | 0) < 0 ? $129 ^ 517762881 : $129; //@line 12936
     $132 = $reg_1_4_i_i_i << 1; //@line 12938
     $reg_1_5_i_i_i = ($reg_1_4_i_i_i | 0) < 0 ? $132 ^ 517762881 : $132; //@line 12940
     $135 = $reg_1_5_i_i_i << 1; //@line 12942
     $reg_1_6_i_i_i = ($reg_1_5_i_i_i | 0) < 0 ? $135 ^ 517762881 : $135; //@line 12944
     $138 = $reg_1_6_i_i_i << 1; //@line 12946
     HEAP32[61320 + ($i_017_i_i_i << 2) >> 2] = ($reg_1_6_i_i_i | 0) < 0 ? $138 ^ 517762881 : $138; //@line 12950
     $i_017_i_i_i = $i_017_i_i_i + 1 | 0; //@line 12951
    } while ($i_017_i_i_i >>> 0 < 256);
    HEAP8[6704] = 1; //@line 12960
   }
   $152 = HEAP32[61320 + ((HEAPU8[$110] ^ $109 >>> 24) << 2) >> 2] ^ $109 << 8; //@line 12971
   $161 = HEAP32[61320 + ((HEAPU8[$buf_i_i + 1 | 0] ^ $152 >>> 24) << 2) >> 2] ^ $152 << 8; //@line 12980
   $170 = HEAP32[61320 + ((HEAPU8[$buf_i_i + 2 | 0] ^ $161 >>> 24) << 2) >> 2] ^ $161 << 8; //@line 12989
   $179 = HEAP32[61320 + ((HEAPU8[$buf_i_i + 3 | 0] ^ $170 >>> 24) << 2) >> 2] ^ $170 << 8; //@line 12998
   $188 = HEAP32[61320 + ((HEAPU8[$buf_i_i + 4 | 0] ^ $179 >>> 24) << 2) >> 2] ^ $179 << 8; //@line 13007
   $197 = HEAP32[61320 + ((HEAPU8[$buf_i_i + 5 | 0] ^ $188 >>> 24) << 2) >> 2] ^ $188 << 8; //@line 13016
   $206 = HEAP32[61320 + ((HEAPU8[$buf_i_i + 6 | 0] ^ $197 >>> 24) << 2) >> 2] ^ $197 << 8; //@line 13025
   $212 = HEAP32[61320 + ((HEAPU8[$buf_i_i + 7 | 0] ^ $206 >>> 24) << 2) >> 2] | 0; //@line 13031
   $213 = _pri_get_uint32_be($110, 0) | 0; //@line 13032
   if (($213 | 0) != 0) {
    $216 = HEAP32[_stderr >> 2] | 0; //@line 13036
    _fprintf($216 | 0, 50176, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $213, tempInt) | 0) | 0; //@line 13037
    break;
   }
   if ((_pbit_skip_chunk($fp, $15 - 8 | 0, $212 ^ $206 << 8) | 0) != 0) {
    break;
   }
   $222 = $buf_i102_i | 0; //@line 13050
   $223 = $buf_i_i_i | 0; //@line 13051
   $224 = $1 + 8 | 0; //@line 13052
   $225 = $buf_i63_i | 0; //@line 13053
   $trk_0_ph_i = 0; //@line 13055
   L14430 : while (1) {
    if ((_pri_read($fp, $4, 8) | 0) != 0) {
     break L14411;
    }
    $228 = ($trk_0_ph_i | 0) == 0; //@line 13064
    $229 = $trk_0_ph_i + 4 | 0; //@line 13065
    $230 = $trk_0_ph_i + 8 | 0; //@line 13066
    L14433 : while (1) {
     $232 = _pri_get_uint32_be($4, 0) | 0; //@line 13069
     $233 = _pri_get_uint32_be($4, 4) | 0; //@line 13070
     if (!(HEAP8[6704] | 0)) {
      $i_017_i31_i = 0; //@line 13074
      do {
       $235 = $i_017_i31_i << 25; //@line 13079
       $reg_1_i33_i = ($i_017_i31_i & 128 | 0) != 0 ? $235 ^ 517762881 : $235; //@line 13081
       $238 = $reg_1_i33_i << 1; //@line 13083
       $reg_1_1_i34_i = ($reg_1_i33_i | 0) < 0 ? $238 ^ 517762881 : $238; //@line 13085
       $241 = $reg_1_1_i34_i << 1; //@line 13087
       $reg_1_2_i35_i = ($reg_1_1_i34_i | 0) < 0 ? $241 ^ 517762881 : $241; //@line 13089
       $244 = $reg_1_2_i35_i << 1; //@line 13091
       $reg_1_3_i36_i = ($reg_1_2_i35_i | 0) < 0 ? $244 ^ 517762881 : $244; //@line 13093
       $247 = $reg_1_3_i36_i << 1; //@line 13095
       $reg_1_4_i37_i = ($reg_1_3_i36_i | 0) < 0 ? $247 ^ 517762881 : $247; //@line 13097
       $250 = $reg_1_4_i37_i << 1; //@line 13099
       $reg_1_5_i38_i = ($reg_1_4_i37_i | 0) < 0 ? $250 ^ 517762881 : $250; //@line 13101
       $253 = $reg_1_5_i38_i << 1; //@line 13103
       $reg_1_6_i39_i = ($reg_1_5_i38_i | 0) < 0 ? $253 ^ 517762881 : $253; //@line 13105
       $256 = $reg_1_6_i39_i << 1; //@line 13107
       HEAP32[61320 + ($i_017_i31_i << 2) >> 2] = ($reg_1_6_i39_i | 0) < 0 ? $256 ^ 517762881 : $256; //@line 13111
       $i_017_i31_i = $i_017_i31_i + 1 | 0; //@line 13112
      } while ($i_017_i31_i >>> 0 < 256);
      HEAP8[6704] = 1; //@line 13121
     }
     $265 = HEAP32[61320 + (HEAPU8[$4] << 2) >> 2] | 0; //@line 13127
     $273 = HEAP32[61320 + ((HEAPU8[$44] ^ $265 >>> 24) << 2) >> 2] ^ $265 << 8; //@line 13135
     $281 = HEAP32[61320 + ((HEAPU8[$50] ^ $273 >>> 24) << 2) >> 2] ^ $273 << 8; //@line 13143
     $289 = HEAP32[61320 + ((HEAPU8[$59] ^ $281 >>> 24) << 2) >> 2] ^ $281 << 8; //@line 13151
     $297 = HEAP32[61320 + ((HEAPU8[$11] ^ $289 >>> 24) << 2) >> 2] ^ $289 << 8; //@line 13159
     $305 = HEAP32[61320 + ((HEAPU8[$76] ^ $297 >>> 24) << 2) >> 2] ^ $297 << 8; //@line 13167
     $313 = HEAP32[61320 + ((HEAPU8[$85] ^ $305 >>> 24) << 2) >> 2] ^ $305 << 8; //@line 13175
     $321 = HEAP32[61320 + ((HEAPU8[$94] ^ $313 >>> 24) << 2) >> 2] ^ $313 << 8; //@line 13183
     do {
      if (($232 | 0) == 1414676811) {
       break L14433;
      } else if (($232 | 0) == 1413830740) {
       if (($233 | 0) == 0) {
        if ((_pri_read($fp, $222, 4) | 0) != 0) {
         break L14411;
        }
        if ((_pri_get_uint32_be($222, 0) | 0) == ($321 | 0)) {
         break;
        } else {
         label = 11529; //@line 13203
         break L14430;
        }
       }
       $334 = _malloc($233) | 0; //@line 13207
       if (($334 | 0) == 0) {
        break L14411;
       }
       if ((_pri_read($fp, $334, $233) | 0) != 0) {
        label = 11532; //@line 13217
        break L14430;
       }
       if (HEAP8[6704] | 0) {
        $_01011_i_i_i = $233;
        $_012_i_i_i = $321;
        $src_013_i_i_i = $334;
       } else {
        $i_017_i_i49_i = 0; //@line 13225
        do {
         $342 = $i_017_i_i49_i << 25; //@line 13230
         $reg_1_i_i51_i = ($i_017_i_i49_i & 128 | 0) != 0 ? $342 ^ 517762881 : $342; //@line 13232
         $345 = $reg_1_i_i51_i << 1; //@line 13234
         $reg_1_1_i_i52_i = ($reg_1_i_i51_i | 0) < 0 ? $345 ^ 517762881 : $345; //@line 13236
         $348 = $reg_1_1_i_i52_i << 1; //@line 13238
         $reg_1_2_i_i53_i = ($reg_1_1_i_i52_i | 0) < 0 ? $348 ^ 517762881 : $348; //@line 13240
         $351 = $reg_1_2_i_i53_i << 1; //@line 13242
         $reg_1_3_i_i54_i = ($reg_1_2_i_i53_i | 0) < 0 ? $351 ^ 517762881 : $351; //@line 13244
         $354 = $reg_1_3_i_i54_i << 1; //@line 13246
         $reg_1_4_i_i55_i = ($reg_1_3_i_i54_i | 0) < 0 ? $354 ^ 517762881 : $354; //@line 13248
         $357 = $reg_1_4_i_i55_i << 1; //@line 13250
         $reg_1_5_i_i56_i = ($reg_1_4_i_i55_i | 0) < 0 ? $357 ^ 517762881 : $357; //@line 13252
         $360 = $reg_1_5_i_i56_i << 1; //@line 13254
         $reg_1_6_i_i57_i = ($reg_1_5_i_i56_i | 0) < 0 ? $360 ^ 517762881 : $360; //@line 13256
         $363 = $reg_1_6_i_i57_i << 1; //@line 13258
         HEAP32[61320 + ($i_017_i_i49_i << 2) >> 2] = ($reg_1_6_i_i57_i | 0) < 0 ? $363 ^ 517762881 : $363; //@line 13262
         $i_017_i_i49_i = $i_017_i_i49_i + 1 | 0; //@line 13263
        } while ($i_017_i_i49_i >>> 0 < 256);
        HEAP8[6704] = 1; //@line 13272
        $_01011_i_i_i = $233;
        $_012_i_i_i = $321;
        $src_013_i_i_i = $334;
       }
       while (1) {
        $377 = HEAP32[61320 + ((HEAPU8[$src_013_i_i_i] ^ $_012_i_i_i >>> 24) << 2) >> 2] ^ $_012_i_i_i << 8; //@line 13288
        $378 = $_01011_i_i_i - 1 | 0; //@line 13289
        if (($378 | 0) == 0) {
         $i_075_i_i = 0; //@line 13293
         break;
        } else {
         $_01011_i_i_i = $378;
         $_012_i_i_i = $377;
         $src_013_i_i_i = $src_013_i_i_i + 1 | 0;
        }
       }
       while (1) {
        $381 = HEAP8[$334 + $i_075_i_i | 0] | 0; //@line 13302
        if (!(($381 << 24 >> 24 | 0) == 13 | ($381 << 24 >> 24 | 0) == 10 | ($381 << 24 >> 24 | 0) == 0)) {
         $i_0_lcssa_i_i = $i_075_i_i; //@line 13304
         break;
        }
        $i_0_be_i_i = $i_075_i_i + 1 | 0; //@line 13307
        if ($i_0_be_i_i >>> 0 < $233 >>> 0) {
         $i_075_i_i = $i_0_be_i_i; //@line 13311
        } else {
         $i_0_lcssa_i_i = $i_0_be_i_i; //@line 13313
         break;
        }
       }
       L14458 : do {
        if ($i_0_lcssa_i_i >>> 0 < $233 >>> 0) {
         $j_069_i_i = $233; //@line 13322
         while (1) {
          $384 = $j_069_i_i - 1 | 0; //@line 13325
          $386 = HEAP8[$334 + $384 | 0] | 0; //@line 13327
          if (($386 << 24 >> 24 | 0) == 0) {
           $j_0_be_i_i = $j_069_i_i + 1 | 0; //@line 13330
          } else if (($386 << 24 >> 24 | 0) == 13 | ($386 << 24 >> 24 | 0) == 10) {
           $j_0_be_i_i = $384;
          } else {
           $j_0_lcssa_i_i = $j_069_i_i; //@line 13334
           break L14458;
          }
          if ($j_0_be_i_i >>> 0 > $i_0_lcssa_i_i >>> 0) {
           $j_069_i_i = $j_0_be_i_i; //@line 13341
          } else {
           $j_0_lcssa_i_i = $j_0_be_i_i; //@line 13343
           break;
          }
         }
        } else {
         $j_0_lcssa_i_i = $233; //@line 13348
        }
       } while (0);
       if (($i_0_lcssa_i_i | 0) == ($j_0_lcssa_i_i | 0)) {
        if ((_pri_read($fp, $223, 4) | 0) != 0) {
         break L14411;
        }
        if ((_pri_get_uint32_be($223, 0) | 0) == ($377 | 0)) {
         break;
        } else {
         label = 11547; //@line 13367
         break L14430;
        }
       }
       if ($i_0_lcssa_i_i >>> 0 < $j_0_lcssa_i_i >>> 0) {
        $k_066_i_i = $i_0_lcssa_i_i;
        $d_067_i_i = $i_0_lcssa_i_i;
        while (1) {
         $402 = HEAP8[$334 + $k_066_i_i | 0] | 0; //@line 13379
         do {
          if ($402 << 24 >> 24 == 13) {
           $405 = $k_066_i_i + 1 | 0; //@line 13384
           if ($405 >>> 0 < $j_0_lcssa_i_i >>> 0) {
            if ((HEAP8[$334 + $405 | 0] | 0) == 10) {
             $d_1_i_i = $d_067_i_i;
             $k_1_i_i = $405;
             break;
            }
           }
           HEAP8[$334 + $d_067_i_i | 0] = 10; //@line 13399
           $d_1_i_i = $d_067_i_i + 1 | 0;
           $k_1_i_i = $k_066_i_i;
          } else {
           HEAP8[$334 + $d_067_i_i | 0] = $402; //@line 13404
           $d_1_i_i = $d_067_i_i + 1 | 0;
           $k_1_i_i = $k_066_i_i;
          }
         } while (0);
         $418 = $k_1_i_i + 1 | 0; //@line 13410
         if ($418 >>> 0 < $j_0_lcssa_i_i >>> 0) {
          $k_066_i_i = $418;
          $d_067_i_i = $d_1_i_i;
         } else {
          $d_0_lcssa_i_i = $d_1_i_i; //@line 13416
          break;
         }
        }
       } else {
        $d_0_lcssa_i_i = $i_0_lcssa_i_i; //@line 13421
       }
       if ((HEAP32[$224 >> 2] | 0) != 0) {
        HEAP8[$c_i_i] = 10; //@line 13428
        if ((_pri_img_add_comment($1, $c_i_i, 1) | 0) != 0) {
         break L14411;
        }
       }
       $429 = (_pri_img_add_comment($1, $334 + $i_0_lcssa_i_i | 0, $d_0_lcssa_i_i - $i_0_lcssa_i_i | 0) | 0) == 0; //@line 13439
       _free($334); //@line 13440
       if (!$429) {
        break L14411;
       }
       if ((_pri_read($fp, $223, 4) | 0) != 0) {
        break L14411;
       }
       if ((_pri_get_uint32_be($223, 0) | 0) != ($377 | 0)) {
        label = 11559; //@line 13455
        break L14430;
       }
      } else if (($232 | 0) == 1145132097) {
       if ($228) {
        break L14411;
       }
       $501 = ((HEAP32[$229 >> 2] | 0) + 7 | 0) >>> 3; //@line 13465
       $size__i_i = $501 >>> 0 < $233 >>> 0 ? $233 : $501; //@line 13467
       if ((_pri_read($fp, HEAP32[$230 >> 2] | 0, $size__i_i) | 0) != 0) {
        break L14411;
       }
       $507 = HEAP32[$230 >> 2] | 0; //@line 13475
       if (!(HEAP8[6704] | 0)) {
        $i_017_i_i83_i = 0; //@line 13479
        do {
         $509 = $i_017_i_i83_i << 25; //@line 13484
         $reg_1_i_i85_i = ($i_017_i_i83_i & 128 | 0) != 0 ? $509 ^ 517762881 : $509; //@line 13486
         $512 = $reg_1_i_i85_i << 1; //@line 13488
         $reg_1_1_i_i86_i = ($reg_1_i_i85_i | 0) < 0 ? $512 ^ 517762881 : $512; //@line 13490
         $515 = $reg_1_1_i_i86_i << 1; //@line 13492
         $reg_1_2_i_i87_i = ($reg_1_1_i_i86_i | 0) < 0 ? $515 ^ 517762881 : $515; //@line 13494
         $518 = $reg_1_2_i_i87_i << 1; //@line 13496
         $reg_1_3_i_i88_i = ($reg_1_2_i_i87_i | 0) < 0 ? $518 ^ 517762881 : $518; //@line 13498
         $521 = $reg_1_3_i_i88_i << 1; //@line 13500
         $reg_1_4_i_i89_i = ($reg_1_3_i_i88_i | 0) < 0 ? $521 ^ 517762881 : $521; //@line 13502
         $524 = $reg_1_4_i_i89_i << 1; //@line 13504
         $reg_1_5_i_i90_i = ($reg_1_4_i_i89_i | 0) < 0 ? $524 ^ 517762881 : $524; //@line 13506
         $527 = $reg_1_5_i_i90_i << 1; //@line 13508
         $reg_1_6_i_i91_i = ($reg_1_5_i_i90_i | 0) < 0 ? $527 ^ 517762881 : $527; //@line 13510
         $530 = $reg_1_6_i_i91_i << 1; //@line 13512
         HEAP32[61320 + ($i_017_i_i83_i << 2) >> 2] = ($reg_1_6_i_i91_i | 0) < 0 ? $530 ^ 517762881 : $530; //@line 13516
         $i_017_i_i83_i = $i_017_i_i83_i + 1 | 0; //@line 13517
        } while ($i_017_i_i83_i >>> 0 < 256);
        HEAP8[6704] = 1; //@line 13526
       }
       if (($size__i_i | 0) == 0) {
        $_0_lcssa_i_i_i = $321; //@line 13532
       } else {
        $_01011_i_i96_i = $size__i_i;
        $_012_i_i95_i = $321;
        $src_013_i_i94_i = $507;
        while (1) {
         $545 = HEAP32[61320 + ((HEAPU8[$src_013_i_i94_i] ^ $_012_i_i95_i >>> 24) << 2) >> 2] ^ $_012_i_i95_i << 8; //@line 13547
         $546 = $_01011_i_i96_i - 1 | 0; //@line 13548
         if (($546 | 0) == 0) {
          $_0_lcssa_i_i_i = $545; //@line 13552
          break;
         } else {
          $_01011_i_i96_i = $546;
          $_012_i_i95_i = $545;
          $src_013_i_i94_i = $src_013_i_i94_i + 1 | 0;
         }
        }
       }
       if ((_pbit_skip_chunk($fp, $233 - $size__i_i | 0, $_0_lcssa_i_i_i) | 0) != 0) {
        break L14411;
       }
      } else if (($232 | 0) == 1162757152) {
       label = 11579; //@line 13568
       break L14430;
      } else {
       if ((_pbit_skip_chunk($fp, $233, $321) | 0) != 0) {
        break L14411;
       }
      }
     } while (0);
     if ((_pri_read($fp, $4, 8) | 0) != 0) {
      break L14411;
     }
    }
    if ($233 >>> 0 < 20) {
     break L14411;
    }
    if ((_pri_read($fp, $225, 20) | 0) != 0) {
     break L14411;
    }
    if (HEAP8[6704] | 0) {
     $_01011_i_i78_i = 20;
     $_012_i_i77_i = $321;
     $src_013_i_i76_i = $225;
    } else {
     $i_017_i_i65_i = 0; //@line 13602
     do {
      $446 = $i_017_i_i65_i << 25; //@line 13607
      $reg_1_i_i67_i = ($i_017_i_i65_i & 128 | 0) != 0 ? $446 ^ 517762881 : $446; //@line 13609
      $449 = $reg_1_i_i67_i << 1; //@line 13611
      $reg_1_1_i_i68_i = ($reg_1_i_i67_i | 0) < 0 ? $449 ^ 517762881 : $449; //@line 13613
      $452 = $reg_1_1_i_i68_i << 1; //@line 13615
      $reg_1_2_i_i69_i = ($reg_1_1_i_i68_i | 0) < 0 ? $452 ^ 517762881 : $452; //@line 13617
      $455 = $reg_1_2_i_i69_i << 1; //@line 13619
      $reg_1_3_i_i70_i = ($reg_1_2_i_i69_i | 0) < 0 ? $455 ^ 517762881 : $455; //@line 13621
      $458 = $reg_1_3_i_i70_i << 1; //@line 13623
      $reg_1_4_i_i71_i = ($reg_1_3_i_i70_i | 0) < 0 ? $458 ^ 517762881 : $458; //@line 13625
      $461 = $reg_1_4_i_i71_i << 1; //@line 13627
      $reg_1_5_i_i72_i = ($reg_1_4_i_i71_i | 0) < 0 ? $461 ^ 517762881 : $461; //@line 13629
      $464 = $reg_1_5_i_i72_i << 1; //@line 13631
      $reg_1_6_i_i73_i = ($reg_1_5_i_i72_i | 0) < 0 ? $464 ^ 517762881 : $464; //@line 13633
      $467 = $reg_1_6_i_i73_i << 1; //@line 13635
      HEAP32[61320 + ($i_017_i_i65_i << 2) >> 2] = ($reg_1_6_i_i73_i | 0) < 0 ? $467 ^ 517762881 : $467; //@line 13639
      $i_017_i_i65_i = $i_017_i_i65_i + 1 | 0; //@line 13640
     } while ($i_017_i_i65_i >>> 0 < 256);
     HEAP8[6704] = 1; //@line 13649
     $_01011_i_i78_i = 20;
     $_012_i_i77_i = $321;
     $src_013_i_i76_i = $225;
    }
    while (1) {
     $481 = HEAP32[61320 + ((HEAPU8[$src_013_i_i76_i] ^ $_012_i_i77_i >>> 24) << 2) >> 2] ^ $_012_i_i77_i << 8; //@line 13665
     $482 = $_01011_i_i78_i - 1 | 0; //@line 13666
     if (($482 | 0) == 0) {
      break;
     } else {
      $_01011_i_i78_i = $482;
      $_012_i_i77_i = $481;
      $src_013_i_i76_i = $src_013_i_i76_i + 1 | 0;
     }
    }
    $485 = _pri_get_uint32_be($225, 0) | 0; //@line 13676
    $486 = _pri_get_uint32_be($225, 4) | 0; //@line 13677
    $487 = _pri_get_uint32_be($225, 8) | 0; //@line 13678
    $488 = _pri_get_uint32_be($225, 12) | 0; //@line 13679
    $489 = _pri_img_get_track($1, $485, $486, 1) | 0; //@line 13680
    if (($489 | 0) == 0) {
     break L14411;
    }
    if ((_pri_trk_set_size($489, $487) | 0) != 0) {
     break L14411;
    }
    _pri_trk_set_clock($489, $488); //@line 13692
    $trk_0_ph_i = (_pbit_skip_chunk($fp, $233 - 20 | 0, $481) | 0) == 0 ? $489 : 0; //@line 13695
    if (($trk_0_ph_i | 0) == 0) {
     break L14411;
    }
   }
   if ((label | 0) == 11559) {
    $437 = HEAP32[_stderr >> 2] | 0; //@line 13705
    _fwrite(56664, 15, 1, $437 | 0) | 0; //@line 13706
    break;
   } else if ((label | 0) == 11579) {
    if ((_pbit_skip_chunk($fp, $233, $321) | 0) == 0) {
     $_0 = $1; //@line 13715
    } else {
     break;
    }
    STACKTOP = sp; //@line 13720
    return $_0 | 0; //@line 13721
   } else if ((label | 0) == 11547) {
    _fwrite(56664, 15, 1, HEAP32[_stderr >> 2] | 0) | 0; //@line 13725
    break;
   } else if ((label | 0) == 11529) {
    _fwrite(56664, 15, 1, HEAP32[_stderr >> 2] | 0) | 0; //@line 13731
    break;
   } else if ((label | 0) == 11532) {
    _free($334); //@line 13736
    break;
   }
  }
 } while (0);
 _pri_img_del($1); //@line 13742
 $_0 = 0; //@line 13744
 STACKTOP = sp; //@line 13746
 return $_0 | 0; //@line 13747
}
function _pri_save_pbit($fp, $img) {
 $fp = $fp | 0;
 $img = $img | 0;
 var $buf_i54 = 0, $hdr_i = 0, $buf_i = 0, $1 = 0, $i_017_i_i = 0, $3 = 0, $reg_1_i_i = 0, $6 = 0, $reg_1_1_i_i = 0, $9 = 0, $reg_1_2_i_i = 0, $12 = 0, $reg_1_3_i_i = 0, $15 = 0, $reg_1_4_i_i = 0, $18 = 0, $reg_1_5_i_i = 0, $21 = 0, $reg_1_6_i_i = 0, $24 = 0, $src_013_i_i = 0, $_012_i_i = 0, $_01011_i_i = 0, $38 = 0, $39 = 0, $43 = 0, $45 = 0, $49 = 0, $52 = 0, $i_073_i = 0, $55 = 0, $i_0_lcssa_i = 0, $i_0_be_i = 0, $i_169_i = 0, $j_068_i = 0, $60 = 0, $63 = 0, $j_1_i = 0, $i_2_i = 0, $76 = 0, $j_265_i = 0, $78 = 0, $80 = 0, $j_2_lcssa_i = 0, $84 = 0, $i_017_i_i20 = 0, $87 = 0, $reg_1_i_i22 = 0, $90 = 0, $reg_1_1_i_i23 = 0, $93 = 0, $reg_1_2_i_i24 = 0, $96 = 0, $reg_1_3_i_i25 = 0, $99 = 0, $reg_1_4_i_i26 = 0, $102 = 0, $reg_1_5_i_i27 = 0, $105 = 0, $reg_1_6_i_i28 = 0, $108 = 0, $118 = 0, $127 = 0, $136 = 0, $145 = 0, $154 = 0, $163 = 0, $172 = 0, $180 = 0, $i_017_i47_i = 0, $185 = 0, $reg_1_i49_i = 0, $188 = 0, $reg_1_1_i50_i = 0, $191 = 0, $reg_1_2_i51_i = 0, $194 = 0, $reg_1_3_i52_i = 0, $197 = 0, $reg_1_4_i53_i = 0, $200 = 0, $reg_1_5_i54_i = 0, $203 = 0, $reg_1_6_i55_i = 0, $206 = 0, $src_013_i59_i = 0, $_012_i60_i = 0, $_01011_i61_i = 0, $221 = 0, $222 = 0, $_0_lcssa_i_i = 0, $227 = 0, $228 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $c_075 = 0, $241 = 0, $243 = 0, $246 = 0, $h_074 = 0, $249 = 0, $252 = 0, $i_017_i_i35 = 0, $257 = 0, $reg_1_i_i37 = 0, $260 = 0, $reg_1_1_i_i38 = 0, $263 = 0, $reg_1_2_i_i39 = 0, $266 = 0, $reg_1_3_i_i40 = 0, $269 = 0, $reg_1_4_i_i41 = 0, $272 = 0, $reg_1_5_i_i42 = 0, $275 = 0, $reg_1_6_i_i43 = 0, $278 = 0, $src_013_i_i46 = 0, $_012_i_i47 = 0, $_01011_i_i48 = 0, $292 = 0, $293 = 0, $298 = 0, $302 = 0, $i_017_i35_i = 0, $304 = 0, $reg_1_i37_i = 0, $307 = 0, $reg_1_1_i38_i = 0, $310 = 0, $reg_1_2_i39_i = 0, $313 = 0, $reg_1_3_i40_i = 0, $316 = 0, $reg_1_4_i41_i = 0, $319 = 0, $reg_1_5_i42_i = 0, $322 = 0, $reg_1_6_i43_i = 0, $325 = 0, $334 = 0, $342 = 0, $350 = 0, $358 = 0, $366 = 0, $374 = 0, $382 = 0, $390 = 0, $394 = 0, $395 = 0, $i_017_i17_i = 0, $397 = 0, $reg_1_i19_i = 0, $400 = 0, $reg_1_1_i20_i = 0, $403 = 0, $reg_1_2_i21_i = 0, $406 = 0, $reg_1_3_i22_i = 0, $409 = 0, $reg_1_4_i23_i = 0, $412 = 0, $reg_1_5_i24_i = 0, $415 = 0, $reg_1_6_i25_i = 0, $418 = 0, $src_013_i29_i = 0, $_012_i30_i = 0, $_01011_i31_i = 0, $433 = 0, $434 = 0, $_0_lcssa_i_i50 = 0, $443 = 0, $444 = 0, $446 = 0, $i_017_i_i56 = 0, $448 = 0, $reg_1_i_i58 = 0, $451 = 0, $reg_1_1_i_i59 = 0, $454 = 0, $reg_1_2_i_i60 = 0, $457 = 0, $reg_1_3_i_i61 = 0, $460 = 0, $reg_1_4_i_i62 = 0, $463 = 0, $reg_1_5_i_i63 = 0, $466 = 0, $reg_1_6_i_i64 = 0, $469 = 0, $479 = 0, $488 = 0, $497 = 0, $506 = 0, $515 = 0, $524 = 0, $533 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 13835
 STACKTOP = STACKTOP + 56 | 0; //@line 13835
 $buf_i54 = sp | 0; //@line 13836
 $hdr_i = sp + 16 | 0; //@line 13837
 $buf_i = sp + 24 | 0; //@line 13838
 $1 = $buf_i | 0; //@line 13839
 _pri_set_uint32_be($1, 0, 1346521428); //@line 13840
 _pri_set_uint32_be($1, 4, 8); //@line 13841
 _pri_set_uint32_be($1, 8, 0); //@line 13842
 _pri_set_uint32_be($1, 12, 0); //@line 13843
 if (HEAP8[6704] | 0) {
  $_01011_i_i = 16;
  $_012_i_i = 0;
  $src_013_i_i = $1;
 } else {
  $i_017_i_i = 0; //@line 13849
  do {
   $3 = $i_017_i_i << 25; //@line 13854
   $reg_1_i_i = ($i_017_i_i & 128 | 0) != 0 ? $3 ^ 517762881 : $3; //@line 13856
   $6 = $reg_1_i_i << 1; //@line 13858
   $reg_1_1_i_i = ($reg_1_i_i | 0) < 0 ? $6 ^ 517762881 : $6; //@line 13860
   $9 = $reg_1_1_i_i << 1; //@line 13862
   $reg_1_2_i_i = ($reg_1_1_i_i | 0) < 0 ? $9 ^ 517762881 : $9; //@line 13864
   $12 = $reg_1_2_i_i << 1; //@line 13866
   $reg_1_3_i_i = ($reg_1_2_i_i | 0) < 0 ? $12 ^ 517762881 : $12; //@line 13868
   $15 = $reg_1_3_i_i << 1; //@line 13870
   $reg_1_4_i_i = ($reg_1_3_i_i | 0) < 0 ? $15 ^ 517762881 : $15; //@line 13872
   $18 = $reg_1_4_i_i << 1; //@line 13874
   $reg_1_5_i_i = ($reg_1_4_i_i | 0) < 0 ? $18 ^ 517762881 : $18; //@line 13876
   $21 = $reg_1_5_i_i << 1; //@line 13878
   $reg_1_6_i_i = ($reg_1_5_i_i | 0) < 0 ? $21 ^ 517762881 : $21; //@line 13880
   $24 = $reg_1_6_i_i << 1; //@line 13882
   HEAP32[61320 + ($i_017_i_i << 2) >> 2] = ($reg_1_6_i_i | 0) < 0 ? $24 ^ 517762881 : $24; //@line 13886
   $i_017_i_i = $i_017_i_i + 1 | 0; //@line 13887
  } while ($i_017_i_i >>> 0 < 256);
  HEAP8[6704] = 1; //@line 13896
  $_01011_i_i = 16;
  $_012_i_i = 0;
  $src_013_i_i = $1;
 }
 while (1) {
  $38 = HEAP32[61320 + ((HEAPU8[$src_013_i_i] ^ $_012_i_i >>> 24) << 2) >> 2] ^ $_012_i_i << 8; //@line 13912
  $39 = $_01011_i_i - 1 | 0; //@line 13913
  if (($39 | 0) == 0) {
   break;
  } else {
   $_01011_i_i = $39;
   $_012_i_i = $38;
   $src_013_i_i = $src_013_i_i + 1 | 0;
  }
 }
 _pri_set_uint32_be($1, 16, $38); //@line 13922
 if ((_pri_write($fp, $1, 20) | 0) != 0) {
  $_0 = 1; //@line 13927
  STACKTOP = sp; //@line 13929
  return $_0 | 0; //@line 13930
 }
 $43 = $hdr_i | 0; //@line 13932
 $45 = HEAP32[$img + 8 >> 2] | 0; //@line 13934
 L14531 : do {
  if (($45 | 0) != 0) {
   $49 = _malloc($45 + 2 | 0) | 0; //@line 13940
   if (($49 | 0) == 0) {
    $_0 = 1; //@line 13944
    STACKTOP = sp; //@line 13946
    return $_0 | 0; //@line 13947
   }
   $52 = HEAP32[$img + 12 >> 2] | 0; //@line 13950
   HEAP8[$49] = 10; //@line 13951
   $i_073_i = 0; //@line 13953
   while (1) {
    $55 = HEAP8[$52 + $i_073_i | 0] | 0; //@line 13957
    if (!(($55 << 24 >> 24 | 0) == 13 | ($55 << 24 >> 24 | 0) == 10 | ($55 << 24 >> 24 | 0) == 0)) {
     $i_0_lcssa_i = $i_073_i; //@line 13959
     break;
    }
    $i_0_be_i = $i_073_i + 1 | 0; //@line 13962
    if ($i_0_be_i >>> 0 < $45 >>> 0) {
     $i_073_i = $i_0_be_i; //@line 13966
    } else {
     $i_0_lcssa_i = $i_0_be_i; //@line 13968
     break;
    }
   }
   do {
    if ($i_0_lcssa_i >>> 0 < $45 >>> 0) {
     $j_068_i = 1;
     $i_169_i = $i_0_lcssa_i;
     while (1) {
      $60 = HEAP8[$52 + $i_169_i | 0] | 0; //@line 13982
      do {
       if ($60 << 24 >> 24 == 13) {
        $63 = $i_169_i + 1 | 0; //@line 13987
        if ($63 >>> 0 < $45 >>> 0) {
         if ((HEAP8[$52 + $63 | 0] | 0) == 10) {
          $i_2_i = $63;
          $j_1_i = $j_068_i;
          break;
         }
        }
        HEAP8[$49 + $j_068_i | 0] = 10; //@line 14002
        $i_2_i = $i_169_i;
        $j_1_i = $j_068_i + 1 | 0;
       } else {
        HEAP8[$49 + $j_068_i | 0] = $60; //@line 14007
        $i_2_i = $i_169_i;
        $j_1_i = $j_068_i + 1 | 0;
       }
      } while (0);
      $76 = $i_2_i + 1 | 0; //@line 14013
      if ($76 >>> 0 < $45 >>> 0) {
       $j_068_i = $j_1_i;
       $i_169_i = $76;
      } else {
       break;
      }
     }
     L14551 : do {
      if ($j_1_i >>> 0 > 1) {
       $j_265_i = $j_1_i; //@line 14026
       while (1) {
        $78 = $j_265_i - 1 | 0; //@line 14029
        $80 = HEAP8[$49 + $78 | 0] | 0; //@line 14031
        if (!(($80 << 24 >> 24 | 0) == 10 | ($80 << 24 >> 24 | 0) == 0)) {
         $j_2_lcssa_i = $j_265_i; //@line 14033
         break L14551;
        }
        if ($78 >>> 0 > 1) {
         $j_265_i = $78; //@line 14039
        } else {
         $j_2_lcssa_i = $78; //@line 14041
         break;
        }
       }
      } else {
       $j_2_lcssa_i = $j_1_i; //@line 14046
      }
     } while (0);
     if (($j_2_lcssa_i | 0) == 1) {
      break;
     }
     $84 = $j_2_lcssa_i + 1 | 0; //@line 14055
     HEAP8[$49 + $j_2_lcssa_i | 0] = 10; //@line 14057
     _pri_set_uint32_be($43, 0, 1413830740); //@line 14058
     _pri_set_uint32_be($43, 4, $84); //@line 14059
     if (!(HEAP8[6704] | 0)) {
      $i_017_i_i20 = 0; //@line 14063
      do {
       $87 = $i_017_i_i20 << 25; //@line 14068
       $reg_1_i_i22 = ($i_017_i_i20 & 128 | 0) != 0 ? $87 ^ 517762881 : $87; //@line 14070
       $90 = $reg_1_i_i22 << 1; //@line 14072
       $reg_1_1_i_i23 = ($reg_1_i_i22 | 0) < 0 ? $90 ^ 517762881 : $90; //@line 14074
       $93 = $reg_1_1_i_i23 << 1; //@line 14076
       $reg_1_2_i_i24 = ($reg_1_1_i_i23 | 0) < 0 ? $93 ^ 517762881 : $93; //@line 14078
       $96 = $reg_1_2_i_i24 << 1; //@line 14080
       $reg_1_3_i_i25 = ($reg_1_2_i_i24 | 0) < 0 ? $96 ^ 517762881 : $96; //@line 14082
       $99 = $reg_1_3_i_i25 << 1; //@line 14084
       $reg_1_4_i_i26 = ($reg_1_3_i_i25 | 0) < 0 ? $99 ^ 517762881 : $99; //@line 14086
       $102 = $reg_1_4_i_i26 << 1; //@line 14088
       $reg_1_5_i_i27 = ($reg_1_4_i_i26 | 0) < 0 ? $102 ^ 517762881 : $102; //@line 14090
       $105 = $reg_1_5_i_i27 << 1; //@line 14092
       $reg_1_6_i_i28 = ($reg_1_5_i_i27 | 0) < 0 ? $105 ^ 517762881 : $105; //@line 14094
       $108 = $reg_1_6_i_i28 << 1; //@line 14096
       HEAP32[61320 + ($i_017_i_i20 << 2) >> 2] = ($reg_1_6_i_i28 | 0) < 0 ? $108 ^ 517762881 : $108; //@line 14100
       $i_017_i_i20 = $i_017_i_i20 + 1 | 0; //@line 14101
      } while ($i_017_i_i20 >>> 0 < 256);
      HEAP8[6704] = 1; //@line 14110
     }
     $118 = HEAP32[61320 + (HEAPU8[$43] << 2) >> 2] | 0; //@line 14117
     $127 = HEAP32[61320 + ((HEAPU8[$hdr_i + 1 | 0] ^ $118 >>> 24) << 2) >> 2] ^ $118 << 8; //@line 14126
     $136 = HEAP32[61320 + ((HEAPU8[$hdr_i + 2 | 0] ^ $127 >>> 24) << 2) >> 2] ^ $127 << 8; //@line 14135
     $145 = HEAP32[61320 + ((HEAPU8[$hdr_i + 3 | 0] ^ $136 >>> 24) << 2) >> 2] ^ $136 << 8; //@line 14144
     $154 = HEAP32[61320 + ((HEAPU8[$hdr_i + 4 | 0] ^ $145 >>> 24) << 2) >> 2] ^ $145 << 8; //@line 14153
     $163 = HEAP32[61320 + ((HEAPU8[$hdr_i + 5 | 0] ^ $154 >>> 24) << 2) >> 2] ^ $154 << 8; //@line 14162
     $172 = HEAP32[61320 + ((HEAPU8[$hdr_i + 6 | 0] ^ $163 >>> 24) << 2) >> 2] ^ $163 << 8; //@line 14171
     $180 = HEAP32[61320 + ((HEAPU8[$hdr_i + 7 | 0] ^ $172 >>> 24) << 2) >> 2] ^ $172 << 8; //@line 14179
     if ((_pri_write($fp, $43, 8) | 0) != 0) {
      $_0 = 1; //@line 14184
      STACKTOP = sp; //@line 14186
      return $_0 | 0; //@line 14187
     }
     if (!(HEAP8[6704] | 0)) {
      $i_017_i47_i = 0; //@line 14192
      do {
       $185 = $i_017_i47_i << 25; //@line 14197
       $reg_1_i49_i = ($i_017_i47_i & 128 | 0) != 0 ? $185 ^ 517762881 : $185; //@line 14199
       $188 = $reg_1_i49_i << 1; //@line 14201
       $reg_1_1_i50_i = ($reg_1_i49_i | 0) < 0 ? $188 ^ 517762881 : $188; //@line 14203
       $191 = $reg_1_1_i50_i << 1; //@line 14205
       $reg_1_2_i51_i = ($reg_1_1_i50_i | 0) < 0 ? $191 ^ 517762881 : $191; //@line 14207
       $194 = $reg_1_2_i51_i << 1; //@line 14209
       $reg_1_3_i52_i = ($reg_1_2_i51_i | 0) < 0 ? $194 ^ 517762881 : $194; //@line 14211
       $197 = $reg_1_3_i52_i << 1; //@line 14213
       $reg_1_4_i53_i = ($reg_1_3_i52_i | 0) < 0 ? $197 ^ 517762881 : $197; //@line 14215
       $200 = $reg_1_4_i53_i << 1; //@line 14217
       $reg_1_5_i54_i = ($reg_1_4_i53_i | 0) < 0 ? $200 ^ 517762881 : $200; //@line 14219
       $203 = $reg_1_5_i54_i << 1; //@line 14221
       $reg_1_6_i55_i = ($reg_1_5_i54_i | 0) < 0 ? $203 ^ 517762881 : $203; //@line 14223
       $206 = $reg_1_6_i55_i << 1; //@line 14225
       HEAP32[61320 + ($i_017_i47_i << 2) >> 2] = ($reg_1_6_i55_i | 0) < 0 ? $206 ^ 517762881 : $206; //@line 14229
       $i_017_i47_i = $i_017_i47_i + 1 | 0; //@line 14230
      } while ($i_017_i47_i >>> 0 < 256);
      HEAP8[6704] = 1; //@line 14239
     }
     if (($84 | 0) == 0) {
      $_0_lcssa_i_i = $180; //@line 14245
     } else {
      $_01011_i61_i = $84;
      $_012_i60_i = $180;
      $src_013_i59_i = $49;
      while (1) {
       $221 = HEAP32[61320 + ((HEAPU8[$src_013_i59_i] ^ $_012_i60_i >>> 24) << 2) >> 2] ^ $_012_i60_i << 8; //@line 14260
       $222 = $_01011_i61_i - 1 | 0; //@line 14261
       if (($222 | 0) == 0) {
        $_0_lcssa_i_i = $221; //@line 14265
        break;
       } else {
        $_01011_i61_i = $222;
        $_012_i60_i = $221;
        $src_013_i59_i = $src_013_i59_i + 1 | 0;
       }
      }
     }
     if ((_pri_write($fp, $49, $84) | 0) != 0) {
      $_0 = 1; //@line 14277
      STACKTOP = sp; //@line 14279
      return $_0 | 0; //@line 14280
     }
     _pri_set_uint32_be($43, 0, $_0_lcssa_i_i); //@line 14282
     if ((_pri_write($fp, $43, 4) | 0) == 0) {
      break L14531;
     } else {
      $_0 = 1; //@line 14289
     }
     STACKTOP = sp; //@line 14292
     return $_0 | 0; //@line 14293
    }
   } while (0);
   _free($49); //@line 14296
  }
 } while (0);
 $227 = $img | 0; //@line 14300
 $228 = HEAP32[$227 >> 2] | 0; //@line 14301
 L14580 : do {
  if (($228 | 0) != 0) {
   $230 = $img + 4 | 0; //@line 14306
   $231 = $buf_i + 1 | 0; //@line 14307
   $232 = $buf_i + 2 | 0; //@line 14308
   $233 = $buf_i + 3 | 0; //@line 14309
   $234 = $buf_i + 4 | 0; //@line 14310
   $235 = $buf_i + 5 | 0; //@line 14311
   $236 = $buf_i + 6 | 0; //@line 14312
   $237 = $buf_i + 7 | 0; //@line 14313
   $c_075 = 0;
   $238 = $228;
   L14582 : while (1) {
    $241 = HEAP32[(HEAP32[$230 >> 2] | 0) + ($c_075 << 2) >> 2] | 0; //@line 14321
    do {
     if (($241 | 0) == 0) {
      $443 = $238; //@line 14326
     } else {
      $243 = $241 | 0; //@line 14328
      if ((HEAP32[$243 >> 2] | 0) == 0) {
       $443 = $238; //@line 14333
       break;
      }
      $246 = $241 + 4 | 0; //@line 14336
      $h_074 = 0; //@line 14338
      do {
       $249 = HEAP32[(HEAP32[$246 >> 2] | 0) + ($h_074 << 2) >> 2] | 0; //@line 14343
       do {
        if (($249 | 0) != 0) {
         _pri_set_uint32_be($1, 0, 1414676811); //@line 14348
         _pri_set_uint32_be($1, 4, 20); //@line 14349
         _pri_set_uint32_be($1, 8, $c_075); //@line 14350
         _pri_set_uint32_be($1, 12, $h_074); //@line 14351
         $252 = $249 + 4 | 0; //@line 14352
         _pri_set_uint32_be($1, 16, HEAP32[$252 >> 2] | 0); //@line 14354
         _pri_set_uint32_be($1, 20, HEAP32[$249 >> 2] | 0); //@line 14357
         _pri_set_uint32_be($1, 24, 0); //@line 14358
         if (HEAP8[6704] | 0) {
          $_01011_i_i48 = 28;
          $_012_i_i47 = 0;
          $src_013_i_i46 = $1;
         } else {
          $i_017_i_i35 = 0; //@line 14364
          do {
           $257 = $i_017_i_i35 << 25; //@line 14369
           $reg_1_i_i37 = ($i_017_i_i35 & 128 | 0) != 0 ? $257 ^ 517762881 : $257; //@line 14371
           $260 = $reg_1_i_i37 << 1; //@line 14373
           $reg_1_1_i_i38 = ($reg_1_i_i37 | 0) < 0 ? $260 ^ 517762881 : $260; //@line 14375
           $263 = $reg_1_1_i_i38 << 1; //@line 14377
           $reg_1_2_i_i39 = ($reg_1_1_i_i38 | 0) < 0 ? $263 ^ 517762881 : $263; //@line 14379
           $266 = $reg_1_2_i_i39 << 1; //@line 14381
           $reg_1_3_i_i40 = ($reg_1_2_i_i39 | 0) < 0 ? $266 ^ 517762881 : $266; //@line 14383
           $269 = $reg_1_3_i_i40 << 1; //@line 14385
           $reg_1_4_i_i41 = ($reg_1_3_i_i40 | 0) < 0 ? $269 ^ 517762881 : $269; //@line 14387
           $272 = $reg_1_4_i_i41 << 1; //@line 14389
           $reg_1_5_i_i42 = ($reg_1_4_i_i41 | 0) < 0 ? $272 ^ 517762881 : $272; //@line 14391
           $275 = $reg_1_5_i_i42 << 1; //@line 14393
           $reg_1_6_i_i43 = ($reg_1_5_i_i42 | 0) < 0 ? $275 ^ 517762881 : $275; //@line 14395
           $278 = $reg_1_6_i_i43 << 1; //@line 14397
           HEAP32[61320 + ($i_017_i_i35 << 2) >> 2] = ($reg_1_6_i_i43 | 0) < 0 ? $278 ^ 517762881 : $278; //@line 14401
           $i_017_i_i35 = $i_017_i_i35 + 1 | 0; //@line 14402
          } while ($i_017_i_i35 >>> 0 < 256);
          HEAP8[6704] = 1; //@line 14411
          $_01011_i_i48 = 28;
          $_012_i_i47 = 0;
          $src_013_i_i46 = $1;
         }
         while (1) {
          $292 = HEAP32[61320 + ((HEAPU8[$src_013_i_i46] ^ $_012_i_i47 >>> 24) << 2) >> 2] ^ $_012_i_i47 << 8; //@line 14427
          $293 = $_01011_i_i48 - 1 | 0; //@line 14428
          if (($293 | 0) == 0) {
           break;
          } else {
           $_01011_i_i48 = $293;
           $_012_i_i47 = $292;
           $src_013_i_i46 = $src_013_i_i46 + 1 | 0;
          }
         }
         _pri_set_uint32_be($1, 28, $292); //@line 14437
         if ((_pri_write($fp, $1, 32) | 0) != 0) {
          $_0 = 1; //@line 14442
          label = 11655; //@line 14443
          break L14582;
         }
         $298 = HEAP32[$252 >> 2] | 0; //@line 14446
         if (($298 | 0) == 0) {
          break;
         }
         $302 = ($298 + 7 | 0) >>> 3; //@line 14453
         _pri_set_uint32_be($1, 0, 1145132097); //@line 14454
         _pri_set_uint32_be($1, 4, $302); //@line 14455
         if (!(HEAP8[6704] | 0)) {
          $i_017_i35_i = 0; //@line 14459
          do {
           $304 = $i_017_i35_i << 25; //@line 14464
           $reg_1_i37_i = ($i_017_i35_i & 128 | 0) != 0 ? $304 ^ 517762881 : $304; //@line 14466
           $307 = $reg_1_i37_i << 1; //@line 14468
           $reg_1_1_i38_i = ($reg_1_i37_i | 0) < 0 ? $307 ^ 517762881 : $307; //@line 14470
           $310 = $reg_1_1_i38_i << 1; //@line 14472
           $reg_1_2_i39_i = ($reg_1_1_i38_i | 0) < 0 ? $310 ^ 517762881 : $310; //@line 14474
           $313 = $reg_1_2_i39_i << 1; //@line 14476
           $reg_1_3_i40_i = ($reg_1_2_i39_i | 0) < 0 ? $313 ^ 517762881 : $313; //@line 14478
           $316 = $reg_1_3_i40_i << 1; //@line 14480
           $reg_1_4_i41_i = ($reg_1_3_i40_i | 0) < 0 ? $316 ^ 517762881 : $316; //@line 14482
           $319 = $reg_1_4_i41_i << 1; //@line 14484
           $reg_1_5_i42_i = ($reg_1_4_i41_i | 0) < 0 ? $319 ^ 517762881 : $319; //@line 14486
           $322 = $reg_1_5_i42_i << 1; //@line 14488
           $reg_1_6_i43_i = ($reg_1_5_i42_i | 0) < 0 ? $322 ^ 517762881 : $322; //@line 14490
           $325 = $reg_1_6_i43_i << 1; //@line 14492
           HEAP32[61320 + ($i_017_i35_i << 2) >> 2] = ($reg_1_6_i43_i | 0) < 0 ? $325 ^ 517762881 : $325; //@line 14496
           $i_017_i35_i = $i_017_i35_i + 1 | 0; //@line 14497
          } while ($i_017_i35_i >>> 0 < 256);
          HEAP8[6704] = 1; //@line 14506
         }
         $334 = HEAP32[61320 + (HEAPU8[$1] << 2) >> 2] | 0; //@line 14512
         $342 = HEAP32[61320 + ((HEAPU8[$231] ^ $334 >>> 24) << 2) >> 2] ^ $334 << 8; //@line 14520
         $350 = HEAP32[61320 + ((HEAPU8[$232] ^ $342 >>> 24) << 2) >> 2] ^ $342 << 8; //@line 14528
         $358 = HEAP32[61320 + ((HEAPU8[$233] ^ $350 >>> 24) << 2) >> 2] ^ $350 << 8; //@line 14536
         $366 = HEAP32[61320 + ((HEAPU8[$234] ^ $358 >>> 24) << 2) >> 2] ^ $358 << 8; //@line 14544
         $374 = HEAP32[61320 + ((HEAPU8[$235] ^ $366 >>> 24) << 2) >> 2] ^ $366 << 8; //@line 14552
         $382 = HEAP32[61320 + ((HEAPU8[$236] ^ $374 >>> 24) << 2) >> 2] ^ $374 << 8; //@line 14560
         $390 = HEAP32[61320 + ((HEAPU8[$237] ^ $382 >>> 24) << 2) >> 2] ^ $382 << 8; //@line 14568
         if ((_pri_write($fp, $1, 8) | 0) != 0) {
          $_0 = 1; //@line 14573
          label = 11653; //@line 14574
          break L14582;
         }
         $394 = $249 + 8 | 0; //@line 14577
         $395 = HEAP32[$394 >> 2] | 0; //@line 14578
         if (!(HEAP8[6704] | 0)) {
          $i_017_i17_i = 0; //@line 14582
          do {
           $397 = $i_017_i17_i << 25; //@line 14587
           $reg_1_i19_i = ($i_017_i17_i & 128 | 0) != 0 ? $397 ^ 517762881 : $397; //@line 14589
           $400 = $reg_1_i19_i << 1; //@line 14591
           $reg_1_1_i20_i = ($reg_1_i19_i | 0) < 0 ? $400 ^ 517762881 : $400; //@line 14593
           $403 = $reg_1_1_i20_i << 1; //@line 14595
           $reg_1_2_i21_i = ($reg_1_1_i20_i | 0) < 0 ? $403 ^ 517762881 : $403; //@line 14597
           $406 = $reg_1_2_i21_i << 1; //@line 14599
           $reg_1_3_i22_i = ($reg_1_2_i21_i | 0) < 0 ? $406 ^ 517762881 : $406; //@line 14601
           $409 = $reg_1_3_i22_i << 1; //@line 14603
           $reg_1_4_i23_i = ($reg_1_3_i22_i | 0) < 0 ? $409 ^ 517762881 : $409; //@line 14605
           $412 = $reg_1_4_i23_i << 1; //@line 14607
           $reg_1_5_i24_i = ($reg_1_4_i23_i | 0) < 0 ? $412 ^ 517762881 : $412; //@line 14609
           $415 = $reg_1_5_i24_i << 1; //@line 14611
           $reg_1_6_i25_i = ($reg_1_5_i24_i | 0) < 0 ? $415 ^ 517762881 : $415; //@line 14613
           $418 = $reg_1_6_i25_i << 1; //@line 14615
           HEAP32[61320 + ($i_017_i17_i << 2) >> 2] = ($reg_1_6_i25_i | 0) < 0 ? $418 ^ 517762881 : $418; //@line 14619
           $i_017_i17_i = $i_017_i17_i + 1 | 0; //@line 14620
          } while ($i_017_i17_i >>> 0 < 256);
          HEAP8[6704] = 1; //@line 14629
         }
         if (($302 | 0) == 0) {
          $_0_lcssa_i_i50 = $390; //@line 14635
         } else {
          $_01011_i31_i = $302;
          $_012_i30_i = $390;
          $src_013_i29_i = $395;
          while (1) {
           $433 = HEAP32[61320 + ((HEAPU8[$src_013_i29_i] ^ $_012_i30_i >>> 24) << 2) >> 2] ^ $_012_i30_i << 8; //@line 14650
           $434 = $_01011_i31_i - 1 | 0; //@line 14651
           if (($434 | 0) == 0) {
            $_0_lcssa_i_i50 = $433; //@line 14655
            break;
           } else {
            $_01011_i31_i = $434;
            $_012_i30_i = $433;
            $src_013_i29_i = $src_013_i29_i + 1 | 0;
           }
          }
         }
         if ((_pri_write($fp, HEAP32[$394 >> 2] | 0, $302) | 0) != 0) {
          $_0 = 1; //@line 14668
          label = 11657; //@line 14669
          break L14582;
         }
         _pri_set_uint32_be($1, 0, $_0_lcssa_i_i50); //@line 14672
         if ((_pri_write($fp, $1, 4) | 0) != 0) {
          $_0 = 1; //@line 14677
          label = 11658; //@line 14678
          break L14582;
         }
        }
       } while (0);
       $h_074 = $h_074 + 1 | 0; //@line 14683
      } while ($h_074 >>> 0 < (HEAP32[$243 >> 2] | 0) >>> 0);
      $443 = HEAP32[$227 >> 2] | 0; //@line 14695
     }
    } while (0);
    $444 = $c_075 + 1 | 0; //@line 14699
    if ($444 >>> 0 < $443 >>> 0) {
     $c_075 = $444;
     $238 = $443;
    } else {
     break L14580;
    }
   }
   if ((label | 0) == 11653) {
    STACKTOP = sp; //@line 14710
    return $_0 | 0; //@line 14711
   } else if ((label | 0) == 11655) {
    STACKTOP = sp; //@line 14715
    return $_0 | 0; //@line 14716
   } else if ((label | 0) == 11657) {
    STACKTOP = sp; //@line 14720
    return $_0 | 0; //@line 14721
   } else if ((label | 0) == 11658) {
    STACKTOP = sp; //@line 14725
    return $_0 | 0; //@line 14726
   }
  }
 } while (0);
 $446 = $buf_i54 | 0; //@line 14730
 _pri_set_uint32_be($446, 0, 1162757152); //@line 14731
 _pri_set_uint32_be($446, 4, 0); //@line 14732
 if (!(HEAP8[6704] | 0)) {
  $i_017_i_i56 = 0; //@line 14736
  do {
   $448 = $i_017_i_i56 << 25; //@line 14741
   $reg_1_i_i58 = ($i_017_i_i56 & 128 | 0) != 0 ? $448 ^ 517762881 : $448; //@line 14743
   $451 = $reg_1_i_i58 << 1; //@line 14745
   $reg_1_1_i_i59 = ($reg_1_i_i58 | 0) < 0 ? $451 ^ 517762881 : $451; //@line 14747
   $454 = $reg_1_1_i_i59 << 1; //@line 14749
   $reg_1_2_i_i60 = ($reg_1_1_i_i59 | 0) < 0 ? $454 ^ 517762881 : $454; //@line 14751
   $457 = $reg_1_2_i_i60 << 1; //@line 14753
   $reg_1_3_i_i61 = ($reg_1_2_i_i60 | 0) < 0 ? $457 ^ 517762881 : $457; //@line 14755
   $460 = $reg_1_3_i_i61 << 1; //@line 14757
   $reg_1_4_i_i62 = ($reg_1_3_i_i61 | 0) < 0 ? $460 ^ 517762881 : $460; //@line 14759
   $463 = $reg_1_4_i_i62 << 1; //@line 14761
   $reg_1_5_i_i63 = ($reg_1_4_i_i62 | 0) < 0 ? $463 ^ 517762881 : $463; //@line 14763
   $466 = $reg_1_5_i_i63 << 1; //@line 14765
   $reg_1_6_i_i64 = ($reg_1_5_i_i63 | 0) < 0 ? $466 ^ 517762881 : $466; //@line 14767
   $469 = $reg_1_6_i_i64 << 1; //@line 14769
   HEAP32[61320 + ($i_017_i_i56 << 2) >> 2] = ($reg_1_6_i_i64 | 0) < 0 ? $469 ^ 517762881 : $469; //@line 14773
   $i_017_i_i56 = $i_017_i_i56 + 1 | 0; //@line 14774
  } while ($i_017_i_i56 >>> 0 < 256);
  HEAP8[6704] = 1; //@line 14783
 }
 $479 = HEAP32[61320 + (HEAPU8[$446] << 2) >> 2] | 0; //@line 14790
 $488 = HEAP32[61320 + ((HEAPU8[$buf_i54 + 1 | 0] ^ $479 >>> 24) << 2) >> 2] ^ $479 << 8; //@line 14799
 $497 = HEAP32[61320 + ((HEAPU8[$buf_i54 + 2 | 0] ^ $488 >>> 24) << 2) >> 2] ^ $488 << 8; //@line 14808
 $506 = HEAP32[61320 + ((HEAPU8[$buf_i54 + 3 | 0] ^ $497 >>> 24) << 2) >> 2] ^ $497 << 8; //@line 14817
 $515 = HEAP32[61320 + ((HEAPU8[$buf_i54 + 4 | 0] ^ $506 >>> 24) << 2) >> 2] ^ $506 << 8; //@line 14826
 $524 = HEAP32[61320 + ((HEAPU8[$buf_i54 + 5 | 0] ^ $515 >>> 24) << 2) >> 2] ^ $515 << 8; //@line 14835
 $533 = HEAP32[61320 + ((HEAPU8[$buf_i54 + 6 | 0] ^ $524 >>> 24) << 2) >> 2] ^ $524 << 8; //@line 14844
 _pri_set_uint32_be($446, 8, HEAP32[61320 + ((HEAPU8[$buf_i54 + 7 | 0] ^ $533 >>> 24) << 2) >> 2] ^ $533 << 8); //@line 14853
 $_0 = (_pri_write($fp, $446, 12) | 0) != 0 | 0; //@line 14858
 STACKTOP = sp; //@line 14860
 return $_0 | 0; //@line 14861
}
function _pbit_skip_chunk($fp, $size, $crc) {
 $fp = $fp | 0;
 $size = $size | 0;
 $crc = $crc | 0;
 var $_pre = 0, $_01115 = 0, $_01214 = 0, $3 = 0, $i_017_i = 0, $8 = 0, $reg_1_i = 0, $11 = 0, $reg_1_1_i = 0, $14 = 0, $reg_1_2_i = 0, $17 = 0, $reg_1_3_i = 0, $20 = 0, $reg_1_4_i = 0, $23 = 0, $reg_1_5_i = 0, $26 = 0, $reg_1_6_i = 0, $29 = 0, $src_013_i = 0, $_012_i = 0, $_01011_i = 0, $44 = 0, $45 = 0, $_0_lcssa_i = 0, $_011_lcssa = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 14880
 STACKTOP = STACKTOP + 256 | 0; //@line 14880
 $_pre = sp | 0; //@line 14883
 L14632 : do {
  if (($size | 0) == 0) {
   $_011_lcssa = $crc; //@line 14887
  } else {
   $_01214 = $size;
   $_01115 = $crc;
   while (1) {
    $3 = $_01214 >>> 0 < 256 ? $_01214 : 256; //@line 14894
    if ((_pri_read($fp, $_pre, $3) | 0) != 0) {
     $_0 = 1; //@line 14899
     break;
    }
    if (!(HEAP8[6704] | 0)) {
     $i_017_i = 0; //@line 14905
     do {
      $8 = $i_017_i << 25; //@line 14910
      $reg_1_i = ($i_017_i & 128 | 0) != 0 ? $8 ^ 517762881 : $8; //@line 14912
      $11 = $reg_1_i << 1; //@line 14914
      $reg_1_1_i = ($reg_1_i | 0) < 0 ? $11 ^ 517762881 : $11; //@line 14916
      $14 = $reg_1_1_i << 1; //@line 14918
      $reg_1_2_i = ($reg_1_1_i | 0) < 0 ? $14 ^ 517762881 : $14; //@line 14920
      $17 = $reg_1_2_i << 1; //@line 14922
      $reg_1_3_i = ($reg_1_2_i | 0) < 0 ? $17 ^ 517762881 : $17; //@line 14924
      $20 = $reg_1_3_i << 1; //@line 14926
      $reg_1_4_i = ($reg_1_3_i | 0) < 0 ? $20 ^ 517762881 : $20; //@line 14928
      $23 = $reg_1_4_i << 1; //@line 14930
      $reg_1_5_i = ($reg_1_4_i | 0) < 0 ? $23 ^ 517762881 : $23; //@line 14932
      $26 = $reg_1_5_i << 1; //@line 14934
      $reg_1_6_i = ($reg_1_5_i | 0) < 0 ? $26 ^ 517762881 : $26; //@line 14936
      $29 = $reg_1_6_i << 1; //@line 14938
      HEAP32[61320 + ($i_017_i << 2) >> 2] = ($reg_1_6_i | 0) < 0 ? $29 ^ 517762881 : $29; //@line 14942
      $i_017_i = $i_017_i + 1 | 0; //@line 14943
     } while ($i_017_i >>> 0 < 256);
     HEAP8[6704] = 1; //@line 14952
    }
    if (($3 | 0) == 0) {
     $_0_lcssa_i = $_01115; //@line 14958
    } else {
     $_01011_i = $3;
     $_012_i = $_01115;
     $src_013_i = $_pre;
     while (1) {
      $44 = HEAP32[61320 + (((HEAPU8[$src_013_i] | 0) ^ $_012_i >>> 24) << 2) >> 2] ^ $_012_i << 8; //@line 14973
      $45 = $_01011_i - 1 | 0; //@line 14974
      if (($45 | 0) == 0) {
       $_0_lcssa_i = $44; //@line 14978
       break;
      } else {
       $_01011_i = $45;
       $_012_i = $44;
       $src_013_i = $src_013_i + 1 | 0;
      }
     }
    }
    if (($_01214 | 0) == ($3 | 0)) {
     $_011_lcssa = $_0_lcssa_i; //@line 14990
     break L14632;
    } else {
     $_01214 = $_01214 - $3 | 0;
     $_01115 = $_0_lcssa_i;
    }
   }
   STACKTOP = sp; //@line 14997
   return $_0 | 0; //@line 14998
  }
 } while (0);
 if ((_pri_read($fp, $_pre, 4) | 0) != 0) {
  $_0 = 1; //@line 15006
  STACKTOP = sp; //@line 15008
  return $_0 | 0; //@line 15009
 }
 if ((_pri_get_uint32_be($_pre, 0) | 0) == ($_011_lcssa | 0)) {
  $_0 = 0; //@line 15015
  STACKTOP = sp; //@line 15017
  return $_0 | 0; //@line 15018
 }
 _fwrite(56664, 15, 1, HEAP32[_stderr >> 2] | 0) | 0; //@line 15021
 $_0 = 1; //@line 15023
 STACKTOP = sp; //@line 15025
 return $_0 | 0; //@line 15026
}
function _pri_load_pri($fp) {
 $fp = $fp | 0;
 var $buf_i80_i = 0, $buf_i_i_i = 0, $buf_i_i = 0, $buf_i = 0, $1 = 0, $4 = 0, $i_017_i_i = 0, $9 = 0, $reg_1_i_i = 0, $12 = 0, $reg_1_1_i_i = 0, $15 = 0, $reg_1_2_i_i = 0, $18 = 0, $reg_1_3_i_i = 0, $21 = 0, $reg_1_4_i_i = 0, $24 = 0, $reg_1_5_i_i = 0, $27 = 0, $reg_1_6_i_i = 0, $30 = 0, $36 = 0, $40 = 0, $42 = 0, $49 = 0, $51 = 0, $58 = 0, $66 = 0, $70 = 0, $i_017_i23_i = 0, $75 = 0, $reg_1_i25_i = 0, $78 = 0, $reg_1_1_i26_i = 0, $81 = 0, $reg_1_2_i27_i = 0, $84 = 0, $reg_1_3_i28_i = 0, $87 = 0, $reg_1_4_i29_i = 0, $90 = 0, $reg_1_5_i30_i = 0, $93 = 0, $reg_1_6_i31_i = 0, $96 = 0, $103 = 0, $110 = 0, $112 = 0, $119 = 0, $121 = 0, $128 = 0, $136 = 0, $137 = 0, $138 = 0, $i_017_i_i_i = 0, $145 = 0, $reg_1_i_i_i = 0, $148 = 0, $reg_1_1_i_i_i = 0, $151 = 0, $reg_1_2_i_i_i = 0, $154 = 0, $reg_1_3_i_i_i = 0, $157 = 0, $reg_1_4_i_i_i = 0, $160 = 0, $reg_1_5_i_i_i = 0, $163 = 0, $reg_1_6_i_i_i = 0, $166 = 0, $180 = 0, $189 = 0, $198 = 0, $206 = 0, $207 = 0, $210 = 0, $213 = 0, $214 = 0, $_08_i34_i_i = 0, $crc262833_i_i = 0, $217 = 0, $i_017_i5_i_i = 0, $222 = 0, $reg_1_i7_i_i = 0, $225 = 0, $reg_1_1_i8_i_i = 0, $228 = 0, $reg_1_2_i9_i_i = 0, $231 = 0, $reg_1_3_i10_i_i = 0, $234 = 0, $reg_1_4_i11_i_i = 0, $237 = 0, $reg_1_5_i12_i_i = 0, $240 = 0, $reg_1_6_i13_i_i = 0, $243 = 0, $src_013_i17_i_i = 0, $_012_i18_i_i = 0, $_01011_i19_i_i = 0, $258 = 0, $259 = 0, $crc2627_ph_i_i = 0, $crc2628_lcssa_i_i = 0, $267 = 0, $268 = 0, $269 = 0, $i_017_i45_i = 0, $274 = 0, $reg_1_i47_i = 0, $277 = 0, $reg_1_1_i48_i = 0, $280 = 0, $reg_1_2_i49_i = 0, $283 = 0, $reg_1_3_i50_i = 0, $286 = 0, $reg_1_4_i51_i = 0, $289 = 0, $reg_1_5_i52_i = 0, $292 = 0, $reg_1_6_i53_i = 0, $295 = 0, $304 = 0, $312 = 0, $320 = 0, $328 = 0, $336 = 0, $344 = 0, $352 = 0, $360 = 0, $361 = 0, $362 = 0, $_08_i216_i = 0, $365 = 0, $367 = 0, $i_017_i147_i = 0, $372 = 0, $reg_1_i149_i = 0, $375 = 0, $reg_1_1_i150_i = 0, $378 = 0, $reg_1_2_i151_i = 0, $381 = 0, $reg_1_3_i152_i = 0, $384 = 0, $reg_1_4_i153_i = 0, $387 = 0, $reg_1_5_i154_i = 0, $390 = 0, $reg_1_6_i155_i = 0, $393 = 0, $src_013_i159_i = 0, $_012_i160_i = 0, $_01011_i161_i = 0, $408 = 0, $409 = 0, $_ph_i = 0, $_lcssa214_i = 0, $431 = 0, $i_017_i_i67_i = 0, $438 = 0, $reg_1_i_i69_i = 0, $441 = 0, $reg_1_1_i_i70_i = 0, $444 = 0, $reg_1_2_i_i71_i = 0, $447 = 0, $reg_1_3_i_i72_i = 0, $450 = 0, $reg_1_4_i_i73_i = 0, $453 = 0, $reg_1_5_i_i74_i = 0, $456 = 0, $reg_1_6_i_i75_i = 0, $459 = 0, $src_013_i_i_i = 0, $_012_i_i_i = 0, $_01011_i_i_i = 0, $473 = 0, $474 = 0, $478 = 0, $_size_i_i = 0, $482 = 0, $n_1_i_i = 0, $488 = 0, $_0_i23_i_i = 0, $i_017_i_i82_i = 0, $507 = 0, $reg_1_i_i84_i = 0, $510 = 0, $reg_1_1_i_i85_i = 0, $513 = 0, $reg_1_2_i_i86_i = 0, $516 = 0, $reg_1_3_i_i87_i = 0, $519 = 0, $reg_1_4_i_i88_i = 0, $522 = 0, $reg_1_5_i_i89_i = 0, $525 = 0, $reg_1_6_i_i90_i = 0, $528 = 0, $src_013_i_i93_i = 0, $_012_i_i94_i = 0, $_01011_i_i95_i = 0, $542 = 0, $543 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $550 = 0, $556 = 0, $_08_i42_i_i = 0, $crc343641_i_i = 0, $559 = 0, $i_017_i13_i_i = 0, $564 = 0, $reg_1_i15_i_i = 0, $567 = 0, $reg_1_1_i16_i_i = 0, $570 = 0, $reg_1_2_i17_i_i = 0, $573 = 0, $reg_1_3_i18_i_i = 0, $576 = 0, $reg_1_4_i19_i_i = 0, $579 = 0, $reg_1_5_i20_i_i = 0, $582 = 0, $reg_1_6_i21_i_i = 0, $585 = 0, $src_013_i25_i_i = 0, $_012_i26_i_i = 0, $_01011_i27_i_i = 0, $600 = 0, $601 = 0, $crc3435_ph_i_i = 0, $crc3436_lcssa_i_i = 0, $_ph235_i = 0, $612 = 0, $613 = 0, $614 = 0, $621 = 0, $size__i_i = 0, $623 = 0, $i_017_i_i102_i = 0, $628 = 0, $reg_1_i_i104_i = 0, $631 = 0, $reg_1_1_i_i105_i = 0, $634 = 0, $reg_1_2_i_i106_i = 0, $637 = 0, $reg_1_3_i_i107_i = 0, $640 = 0, $reg_1_4_i_i108_i = 0, $643 = 0, $reg_1_5_i_i109_i = 0, $646 = 0, $reg_1_6_i_i110_i = 0, $649 = 0, $src_013_i_i113_i = 0, $_012_i_i114_i = 0, $_01011_i_i115_i = 0, $664 = 0, $665 = 0, $crc27_ph_i_i = 0, $_08_i35_i_i = 0, $crc272934_i_i = 0, $671 = 0, $i_017_i5_i120_i = 0, $676 = 0, $reg_1_i7_i122_i = 0, $679 = 0, $reg_1_1_i8_i123_i = 0, $682 = 0, $reg_1_2_i9_i124_i = 0, $685 = 0, $reg_1_3_i10_i125_i = 0, $688 = 0, $reg_1_4_i11_i126_i = 0, $691 = 0, $reg_1_5_i12_i127_i = 0, $694 = 0, $reg_1_6_i13_i128_i = 0, $697 = 0, $src_013_i17_i132_i = 0, $_012_i18_i133_i = 0, $_01011_i19_i134_i = 0, $712 = 0, $713 = 0, $crc2728_ph_i_i = 0, $crc2729_lcssa_i_i = 0, $_08_i140229_i = 0, $726 = 0, $728 = 0, $i_017_i168_i = 0, $733 = 0, $reg_1_i170_i = 0, $736 = 0, $reg_1_1_i171_i = 0, $739 = 0, $reg_1_2_i172_i = 0, $742 = 0, $reg_1_3_i173_i = 0, $745 = 0, $reg_1_4_i174_i = 0, $748 = 0, $reg_1_5_i175_i = 0, $751 = 0, $reg_1_6_i176_i = 0, $754 = 0, $src_013_i180_i = 0, $_012_i181_i = 0, $_01011_i182_i = 0, $769 = 0, $770 = 0, $_ph211_i = 0, $_lcssa227_i = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 15147
 STACKTOP = STACKTOP + 288 | 0; //@line 15147
 $buf_i80_i = sp | 0; //@line 15148
 $buf_i_i_i = sp + 16 | 0; //@line 15149
 $buf_i_i = sp + 272 | 0; //@line 15150
 $buf_i = sp + 280 | 0; //@line 15151
 $1 = _pri_img_new() | 0; //@line 15152
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 15156
  STACKTOP = sp; //@line 15158
  return $_0 | 0; //@line 15159
 }
 $4 = $buf_i | 0; //@line 15161
 if ((_pri_read($fp, $4, 4) | 0) != 0) {
  $_0 = $1; //@line 15166
  STACKTOP = sp; //@line 15168
  return $_0 | 0; //@line 15169
 }
 if (!(HEAP8[6656] | 0)) {
  $i_017_i_i = 0; //@line 15174
  do {
   $9 = $i_017_i_i << 25; //@line 15179
   $reg_1_i_i = ($i_017_i_i & 128 | 0) != 0 ? $9 ^ 517762881 : $9; //@line 15181
   $12 = $reg_1_i_i << 1; //@line 15183
   $reg_1_1_i_i = ($reg_1_i_i | 0) < 0 ? $12 ^ 517762881 : $12; //@line 15185
   $15 = $reg_1_1_i_i << 1; //@line 15187
   $reg_1_2_i_i = ($reg_1_1_i_i | 0) < 0 ? $15 ^ 517762881 : $15; //@line 15189
   $18 = $reg_1_2_i_i << 1; //@line 15191
   $reg_1_3_i_i = ($reg_1_2_i_i | 0) < 0 ? $18 ^ 517762881 : $18; //@line 15193
   $21 = $reg_1_3_i_i << 1; //@line 15195
   $reg_1_4_i_i = ($reg_1_3_i_i | 0) < 0 ? $21 ^ 517762881 : $21; //@line 15197
   $24 = $reg_1_4_i_i << 1; //@line 15199
   $reg_1_5_i_i = ($reg_1_4_i_i | 0) < 0 ? $24 ^ 517762881 : $24; //@line 15201
   $27 = $reg_1_5_i_i << 1; //@line 15203
   $reg_1_6_i_i = ($reg_1_5_i_i | 0) < 0 ? $27 ^ 517762881 : $27; //@line 15205
   $30 = $reg_1_6_i_i << 1; //@line 15207
   HEAP32[59240 + ($i_017_i_i << 2) >> 2] = ($reg_1_6_i_i | 0) < 0 ? $30 ^ 517762881 : $30; //@line 15211
   $i_017_i_i = $i_017_i_i + 1 | 0; //@line 15212
  } while ($i_017_i_i >>> 0 < 256);
  HEAP8[6656] = 1; //@line 15221
 }
 $36 = $buf_i + 1 | 0; //@line 15224
 $40 = HEAP32[59240 + (HEAPU8[$4] << 2) >> 2] | 0; //@line 15228
 $42 = $buf_i + 2 | 0; //@line 15230
 $49 = HEAP32[59240 + ((HEAPU8[$36] ^ $40 >>> 24) << 2) >> 2] ^ $40 << 8; //@line 15237
 $51 = $buf_i + 3 | 0; //@line 15239
 $58 = HEAP32[59240 + ((HEAPU8[$42] ^ $49 >>> 24) << 2) >> 2] ^ $49 << 8; //@line 15246
 $66 = HEAP32[59240 + ((HEAPU8[$51] ^ $58 >>> 24) << 2) >> 2] ^ $58 << 8; //@line 15254
 L14666 : do {
  if ((_pri_get_uint32_be($4, 0) | 0) == 1347569952) {
   $70 = $buf_i + 4 | 0; //@line 15260
   if ((_pri_read($fp, $70, 4) | 0) != 0) {
    break;
   }
   if (!(HEAP8[6656] | 0)) {
    $i_017_i23_i = 0; //@line 15270
    do {
     $75 = $i_017_i23_i << 25; //@line 15275
     $reg_1_i25_i = ($i_017_i23_i & 128 | 0) != 0 ? $75 ^ 517762881 : $75; //@line 15277
     $78 = $reg_1_i25_i << 1; //@line 15279
     $reg_1_1_i26_i = ($reg_1_i25_i | 0) < 0 ? $78 ^ 517762881 : $78; //@line 15281
     $81 = $reg_1_1_i26_i << 1; //@line 15283
     $reg_1_2_i27_i = ($reg_1_1_i26_i | 0) < 0 ? $81 ^ 517762881 : $81; //@line 15285
     $84 = $reg_1_2_i27_i << 1; //@line 15287
     $reg_1_3_i28_i = ($reg_1_2_i27_i | 0) < 0 ? $84 ^ 517762881 : $84; //@line 15289
     $87 = $reg_1_3_i28_i << 1; //@line 15291
     $reg_1_4_i29_i = ($reg_1_3_i28_i | 0) < 0 ? $87 ^ 517762881 : $87; //@line 15293
     $90 = $reg_1_4_i29_i << 1; //@line 15295
     $reg_1_5_i30_i = ($reg_1_4_i29_i | 0) < 0 ? $90 ^ 517762881 : $90; //@line 15297
     $93 = $reg_1_5_i30_i << 1; //@line 15299
     $reg_1_6_i31_i = ($reg_1_5_i30_i | 0) < 0 ? $93 ^ 517762881 : $93; //@line 15301
     $96 = $reg_1_6_i31_i << 1; //@line 15303
     HEAP32[59240 + ($i_017_i23_i << 2) >> 2] = ($reg_1_6_i31_i | 0) < 0 ? $96 ^ 517762881 : $96; //@line 15307
     $i_017_i23_i = $i_017_i23_i + 1 | 0; //@line 15308
    } while ($i_017_i23_i >>> 0 < 256);
    HEAP8[6656] = 1; //@line 15317
   }
   $103 = $buf_i + 5 | 0; //@line 15321
   $110 = HEAP32[59240 + ((HEAPU8[$70] ^ $66 >>> 24) << 2) >> 2] ^ $66 << 8; //@line 15328
   $112 = $buf_i + 6 | 0; //@line 15330
   $119 = HEAP32[59240 + ((HEAPU8[$103] ^ $110 >>> 24) << 2) >> 2] ^ $110 << 8; //@line 15337
   $121 = $buf_i + 7 | 0; //@line 15339
   $128 = HEAP32[59240 + ((HEAPU8[$112] ^ $119 >>> 24) << 2) >> 2] ^ $119 << 8; //@line 15346
   $136 = HEAP32[59240 + ((HEAPU8[$121] ^ $128 >>> 24) << 2) >> 2] ^ $128 << 8; //@line 15354
   $137 = _pri_get_uint32_be($4, 4) | 0; //@line 15355
   $138 = $buf_i_i | 0; //@line 15356
   if ($137 >>> 0 < 4) {
    break;
   }
   if ((_pri_read($fp, $138, 4) | 0) != 0) {
    break;
   }
   if (!(HEAP8[6656] | 0)) {
    $i_017_i_i_i = 0; //@line 15371
    do {
     $145 = $i_017_i_i_i << 25; //@line 15376
     $reg_1_i_i_i = ($i_017_i_i_i & 128 | 0) != 0 ? $145 ^ 517762881 : $145; //@line 15378
     $148 = $reg_1_i_i_i << 1; //@line 15380
     $reg_1_1_i_i_i = ($reg_1_i_i_i | 0) < 0 ? $148 ^ 517762881 : $148; //@line 15382
     $151 = $reg_1_1_i_i_i << 1; //@line 15384
     $reg_1_2_i_i_i = ($reg_1_1_i_i_i | 0) < 0 ? $151 ^ 517762881 : $151; //@line 15386
     $154 = $reg_1_2_i_i_i << 1; //@line 15388
     $reg_1_3_i_i_i = ($reg_1_2_i_i_i | 0) < 0 ? $154 ^ 517762881 : $154; //@line 15390
     $157 = $reg_1_3_i_i_i << 1; //@line 15392
     $reg_1_4_i_i_i = ($reg_1_3_i_i_i | 0) < 0 ? $157 ^ 517762881 : $157; //@line 15394
     $160 = $reg_1_4_i_i_i << 1; //@line 15396
     $reg_1_5_i_i_i = ($reg_1_4_i_i_i | 0) < 0 ? $160 ^ 517762881 : $160; //@line 15398
     $163 = $reg_1_5_i_i_i << 1; //@line 15400
     $reg_1_6_i_i_i = ($reg_1_5_i_i_i | 0) < 0 ? $163 ^ 517762881 : $163; //@line 15402
     $166 = $reg_1_6_i_i_i << 1; //@line 15404
     HEAP32[59240 + ($i_017_i_i_i << 2) >> 2] = ($reg_1_6_i_i_i | 0) < 0 ? $166 ^ 517762881 : $166; //@line 15408
     $i_017_i_i_i = $i_017_i_i_i + 1 | 0; //@line 15409
    } while ($i_017_i_i_i >>> 0 < 256);
    HEAP8[6656] = 1; //@line 15418
   }
   $180 = HEAP32[59240 + ((HEAPU8[$138] ^ $136 >>> 24) << 2) >> 2] ^ $136 << 8; //@line 15429
   $189 = HEAP32[59240 + ((HEAPU8[$buf_i_i + 1 | 0] ^ $180 >>> 24) << 2) >> 2] ^ $180 << 8; //@line 15438
   $198 = HEAP32[59240 + ((HEAPU8[$buf_i_i + 2 | 0] ^ $189 >>> 24) << 2) >> 2] ^ $189 << 8; //@line 15447
   $206 = HEAP32[59240 + ((HEAPU8[$buf_i_i + 3 | 0] ^ $198 >>> 24) << 2) >> 2] ^ $198 << 8; //@line 15455
   $207 = _pri_get_uint16_be($138, 0) | 0; //@line 15456
   if (($207 | 0) != 0) {
    $210 = HEAP32[_stderr >> 2] | 0; //@line 15460
    _fprintf($210 | 0, 50120, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $207, tempInt) | 0) | 0; //@line 15461
    break;
   }
   $213 = $137 - 4 | 0; //@line 15465
   $214 = $buf_i_i_i | 0; //@line 15466
   if (($213 | 0) == 0) {
    $crc2628_lcssa_i_i = $206; //@line 15470
   } else {
    $crc262833_i_i = $206;
    $_08_i34_i_i = $213;
    while (1) {
     $217 = $_08_i34_i_i >>> 0 < 256 ? $_08_i34_i_i : 256; //@line 15477
     if ((_pri_read($fp, $214, $217) | 0) != 0) {
      break L14666;
     }
     if (!(HEAP8[6656] | 0)) {
      $i_017_i5_i_i = 0; //@line 15487
      do {
       $222 = $i_017_i5_i_i << 25; //@line 15492
       $reg_1_i7_i_i = ($i_017_i5_i_i & 128 | 0) != 0 ? $222 ^ 517762881 : $222; //@line 15494
       $225 = $reg_1_i7_i_i << 1; //@line 15496
       $reg_1_1_i8_i_i = ($reg_1_i7_i_i | 0) < 0 ? $225 ^ 517762881 : $225; //@line 15498
       $228 = $reg_1_1_i8_i_i << 1; //@line 15500
       $reg_1_2_i9_i_i = ($reg_1_1_i8_i_i | 0) < 0 ? $228 ^ 517762881 : $228; //@line 15502
       $231 = $reg_1_2_i9_i_i << 1; //@line 15504
       $reg_1_3_i10_i_i = ($reg_1_2_i9_i_i | 0) < 0 ? $231 ^ 517762881 : $231; //@line 15506
       $234 = $reg_1_3_i10_i_i << 1; //@line 15508
       $reg_1_4_i11_i_i = ($reg_1_3_i10_i_i | 0) < 0 ? $234 ^ 517762881 : $234; //@line 15510
       $237 = $reg_1_4_i11_i_i << 1; //@line 15512
       $reg_1_5_i12_i_i = ($reg_1_4_i11_i_i | 0) < 0 ? $237 ^ 517762881 : $237; //@line 15514
       $240 = $reg_1_5_i12_i_i << 1; //@line 15516
       $reg_1_6_i13_i_i = ($reg_1_5_i12_i_i | 0) < 0 ? $240 ^ 517762881 : $240; //@line 15518
       $243 = $reg_1_6_i13_i_i << 1; //@line 15520
       HEAP32[59240 + ($i_017_i5_i_i << 2) >> 2] = ($reg_1_6_i13_i_i | 0) < 0 ? $243 ^ 517762881 : $243; //@line 15524
       $i_017_i5_i_i = $i_017_i5_i_i + 1 | 0; //@line 15525
      } while ($i_017_i5_i_i >>> 0 < 256);
      HEAP8[6656] = 1; //@line 15534
     }
     if (($217 | 0) == 0) {
      $crc2627_ph_i_i = $crc262833_i_i; //@line 15540
     } else {
      $_01011_i19_i_i = $217;
      $_012_i18_i_i = $crc262833_i_i;
      $src_013_i17_i_i = $214;
      while (1) {
       $258 = HEAP32[59240 + ((HEAPU8[$src_013_i17_i_i] ^ $_012_i18_i_i >>> 24) << 2) >> 2] ^ $_012_i18_i_i << 8; //@line 15555
       $259 = $_01011_i19_i_i - 1 | 0; //@line 15556
       if (($259 | 0) == 0) {
        $crc2627_ph_i_i = $258; //@line 15560
        break;
       } else {
        $_01011_i19_i_i = $259;
        $_012_i18_i_i = $258;
        $src_013_i17_i_i = $src_013_i17_i_i + 1 | 0;
       }
      }
     }
     if (($_08_i34_i_i | 0) == ($217 | 0)) {
      $crc2628_lcssa_i_i = $crc2627_ph_i_i; //@line 15572
      break;
     } else {
      $crc262833_i_i = $crc2627_ph_i_i;
      $_08_i34_i_i = $_08_i34_i_i - $217 | 0;
     }
    }
   }
   if ((_pri_read($fp, $214, 4) | 0) != 0) {
    break;
   }
   $267 = (_pri_get_uint32_be($214, 0) | 0) == ($crc2628_lcssa_i_i | 0); //@line 15587
   $268 = HEAP32[_stderr >> 2] | 0; //@line 15588
   if (!$267) {
    _fwrite(56632, 15, 1, $268 | 0) | 0; //@line 15591
    break;
   }
   $269 = $buf_i80_i | 0; //@line 15595
   $_ph235_i = 0; //@line 15597
   L14702 : while (1) {
    if ((_pri_read($fp, $4, 8) | 0) != 0) {
     break L14666;
    }
    $612 = ($_ph235_i | 0) == 0; //@line 15606
    $613 = $_ph235_i + 4 | 0; //@line 15607
    $614 = $_ph235_i + 8 | 0; //@line 15608
    L14705 : while (1) {
     if (!(HEAP8[6656] | 0)) {
      $i_017_i45_i = 0; //@line 15614
      do {
       $274 = $i_017_i45_i << 25; //@line 15619
       $reg_1_i47_i = ($i_017_i45_i & 128 | 0) != 0 ? $274 ^ 517762881 : $274; //@line 15621
       $277 = $reg_1_i47_i << 1; //@line 15623
       $reg_1_1_i48_i = ($reg_1_i47_i | 0) < 0 ? $277 ^ 517762881 : $277; //@line 15625
       $280 = $reg_1_1_i48_i << 1; //@line 15627
       $reg_1_2_i49_i = ($reg_1_1_i48_i | 0) < 0 ? $280 ^ 517762881 : $280; //@line 15629
       $283 = $reg_1_2_i49_i << 1; //@line 15631
       $reg_1_3_i50_i = ($reg_1_2_i49_i | 0) < 0 ? $283 ^ 517762881 : $283; //@line 15633
       $286 = $reg_1_3_i50_i << 1; //@line 15635
       $reg_1_4_i51_i = ($reg_1_3_i50_i | 0) < 0 ? $286 ^ 517762881 : $286; //@line 15637
       $289 = $reg_1_4_i51_i << 1; //@line 15639
       $reg_1_5_i52_i = ($reg_1_4_i51_i | 0) < 0 ? $289 ^ 517762881 : $289; //@line 15641
       $292 = $reg_1_5_i52_i << 1; //@line 15643
       $reg_1_6_i53_i = ($reg_1_5_i52_i | 0) < 0 ? $292 ^ 517762881 : $292; //@line 15645
       $295 = $reg_1_6_i53_i << 1; //@line 15647
       HEAP32[59240 + ($i_017_i45_i << 2) >> 2] = ($reg_1_6_i53_i | 0) < 0 ? $295 ^ 517762881 : $295; //@line 15651
       $i_017_i45_i = $i_017_i45_i + 1 | 0; //@line 15652
      } while ($i_017_i45_i >>> 0 < 256);
      HEAP8[6656] = 1; //@line 15661
     }
     $304 = HEAP32[59240 + (HEAPU8[$4] << 2) >> 2] | 0; //@line 15667
     $312 = HEAP32[59240 + ((HEAPU8[$36] ^ $304 >>> 24) << 2) >> 2] ^ $304 << 8; //@line 15675
     $320 = HEAP32[59240 + ((HEAPU8[$42] ^ $312 >>> 24) << 2) >> 2] ^ $312 << 8; //@line 15683
     $328 = HEAP32[59240 + ((HEAPU8[$51] ^ $320 >>> 24) << 2) >> 2] ^ $320 << 8; //@line 15691
     $336 = HEAP32[59240 + ((HEAPU8[$70] ^ $328 >>> 24) << 2) >> 2] ^ $328 << 8; //@line 15699
     $344 = HEAP32[59240 + ((HEAPU8[$103] ^ $336 >>> 24) << 2) >> 2] ^ $336 << 8; //@line 15707
     $352 = HEAP32[59240 + ((HEAPU8[$112] ^ $344 >>> 24) << 2) >> 2] ^ $344 << 8; //@line 15715
     $360 = HEAP32[59240 + ((HEAPU8[$121] ^ $352 >>> 24) << 2) >> 2] ^ $352 << 8; //@line 15723
     $361 = _pri_get_uint32_be($4, 0) | 0; //@line 15724
     $362 = _pri_get_uint32_be($4, 4) | 0; //@line 15725
     do {
      if (($361 | 0) == 1145132097) {
       if ($612) {
        break L14666;
       }
       $621 = ((HEAP32[$613 >> 2] | 0) + 7 | 0) >>> 3; //@line 15734
       $size__i_i = $621 >>> 0 > $362 >>> 0 ? $362 : $621; //@line 15736
       $623 = HEAP32[$614 >> 2] | 0; //@line 15737
       if ((_pri_read($fp, $623, $size__i_i) | 0) != 0) {
        break L14666;
       }
       if (!(HEAP8[6656] | 0)) {
        $i_017_i_i102_i = 0; //@line 15747
        do {
         $628 = $i_017_i_i102_i << 25; //@line 15752
         $reg_1_i_i104_i = ($i_017_i_i102_i & 128 | 0) != 0 ? $628 ^ 517762881 : $628; //@line 15754
         $631 = $reg_1_i_i104_i << 1; //@line 15756
         $reg_1_1_i_i105_i = ($reg_1_i_i104_i | 0) < 0 ? $631 ^ 517762881 : $631; //@line 15758
         $634 = $reg_1_1_i_i105_i << 1; //@line 15760
         $reg_1_2_i_i106_i = ($reg_1_1_i_i105_i | 0) < 0 ? $634 ^ 517762881 : $634; //@line 15762
         $637 = $reg_1_2_i_i106_i << 1; //@line 15764
         $reg_1_3_i_i107_i = ($reg_1_2_i_i106_i | 0) < 0 ? $637 ^ 517762881 : $637; //@line 15766
         $640 = $reg_1_3_i_i107_i << 1; //@line 15768
         $reg_1_4_i_i108_i = ($reg_1_3_i_i107_i | 0) < 0 ? $640 ^ 517762881 : $640; //@line 15770
         $643 = $reg_1_4_i_i108_i << 1; //@line 15772
         $reg_1_5_i_i109_i = ($reg_1_4_i_i108_i | 0) < 0 ? $643 ^ 517762881 : $643; //@line 15774
         $646 = $reg_1_5_i_i109_i << 1; //@line 15776
         $reg_1_6_i_i110_i = ($reg_1_5_i_i109_i | 0) < 0 ? $646 ^ 517762881 : $646; //@line 15778
         $649 = $reg_1_6_i_i110_i << 1; //@line 15780
         HEAP32[59240 + ($i_017_i_i102_i << 2) >> 2] = ($reg_1_6_i_i110_i | 0) < 0 ? $649 ^ 517762881 : $649; //@line 15784
         $i_017_i_i102_i = $i_017_i_i102_i + 1 | 0; //@line 15785
        } while ($i_017_i_i102_i >>> 0 < 256);
        HEAP8[6656] = 1; //@line 15794
       }
       if (($size__i_i | 0) == 0) {
        $crc27_ph_i_i = $360; //@line 15800
       } else {
        $_01011_i_i115_i = $size__i_i;
        $_012_i_i114_i = $360;
        $src_013_i_i113_i = $623;
        while (1) {
         $664 = HEAP32[59240 + ((HEAPU8[$src_013_i_i113_i] ^ $_012_i_i114_i >>> 24) << 2) >> 2] ^ $_012_i_i114_i << 8; //@line 15815
         $665 = $_01011_i_i115_i - 1 | 0; //@line 15816
         if (($665 | 0) == 0) {
          $crc27_ph_i_i = $664; //@line 15820
          break;
         } else {
          $_01011_i_i115_i = $665;
          $_012_i_i114_i = $664;
          $src_013_i_i113_i = $src_013_i_i113_i + 1 | 0;
         }
        }
       }
       if (($size__i_i | 0) == ($362 | 0)) {
        $crc2729_lcssa_i_i = $crc27_ph_i_i; //@line 15831
       } else {
        $crc272934_i_i = $crc27_ph_i_i;
        $_08_i35_i_i = $362 - $size__i_i | 0;
        while (1) {
         $671 = $_08_i35_i_i >>> 0 < 256 ? $_08_i35_i_i : 256; //@line 15840
         if ((_pri_read($fp, $214, $671) | 0) != 0) {
          break L14666;
         }
         if (!(HEAP8[6656] | 0)) {
          $i_017_i5_i120_i = 0; //@line 15850
          do {
           $676 = $i_017_i5_i120_i << 25; //@line 15855
           $reg_1_i7_i122_i = ($i_017_i5_i120_i & 128 | 0) != 0 ? $676 ^ 517762881 : $676; //@line 15857
           $679 = $reg_1_i7_i122_i << 1; //@line 15859
           $reg_1_1_i8_i123_i = ($reg_1_i7_i122_i | 0) < 0 ? $679 ^ 517762881 : $679; //@line 15861
           $682 = $reg_1_1_i8_i123_i << 1; //@line 15863
           $reg_1_2_i9_i124_i = ($reg_1_1_i8_i123_i | 0) < 0 ? $682 ^ 517762881 : $682; //@line 15865
           $685 = $reg_1_2_i9_i124_i << 1; //@line 15867
           $reg_1_3_i10_i125_i = ($reg_1_2_i9_i124_i | 0) < 0 ? $685 ^ 517762881 : $685; //@line 15869
           $688 = $reg_1_3_i10_i125_i << 1; //@line 15871
           $reg_1_4_i11_i126_i = ($reg_1_3_i10_i125_i | 0) < 0 ? $688 ^ 517762881 : $688; //@line 15873
           $691 = $reg_1_4_i11_i126_i << 1; //@line 15875
           $reg_1_5_i12_i127_i = ($reg_1_4_i11_i126_i | 0) < 0 ? $691 ^ 517762881 : $691; //@line 15877
           $694 = $reg_1_5_i12_i127_i << 1; //@line 15879
           $reg_1_6_i13_i128_i = ($reg_1_5_i12_i127_i | 0) < 0 ? $694 ^ 517762881 : $694; //@line 15881
           $697 = $reg_1_6_i13_i128_i << 1; //@line 15883
           HEAP32[59240 + ($i_017_i5_i120_i << 2) >> 2] = ($reg_1_6_i13_i128_i | 0) < 0 ? $697 ^ 517762881 : $697; //@line 15887
           $i_017_i5_i120_i = $i_017_i5_i120_i + 1 | 0; //@line 15888
          } while ($i_017_i5_i120_i >>> 0 < 256);
          HEAP8[6656] = 1; //@line 15897
         }
         if (($671 | 0) == 0) {
          $crc2728_ph_i_i = $crc272934_i_i; //@line 15903
         } else {
          $_01011_i19_i134_i = $671;
          $_012_i18_i133_i = $crc272934_i_i;
          $src_013_i17_i132_i = $214;
          while (1) {
           $712 = HEAP32[59240 + ((HEAPU8[$src_013_i17_i132_i] ^ $_012_i18_i133_i >>> 24) << 2) >> 2] ^ $_012_i18_i133_i << 8; //@line 15918
           $713 = $_01011_i19_i134_i - 1 | 0; //@line 15919
           if (($713 | 0) == 0) {
            $crc2728_ph_i_i = $712; //@line 15923
            break;
           } else {
            $_01011_i19_i134_i = $713;
            $_012_i18_i133_i = $712;
            $src_013_i17_i132_i = $src_013_i17_i132_i + 1 | 0;
           }
          }
         }
         if (($_08_i35_i_i | 0) == ($671 | 0)) {
          $crc2729_lcssa_i_i = $crc2728_ph_i_i; //@line 15935
          break;
         } else {
          $crc272934_i_i = $crc2728_ph_i_i;
          $_08_i35_i_i = $_08_i35_i_i - $671 | 0;
         }
        }
       }
       if ((_pri_read($fp, $214, 4) | 0) != 0) {
        break L14666;
       }
       if ((_pri_get_uint32_be($214, 0) | 0) != ($crc2729_lcssa_i_i | 0)) {
        label = 11777; //@line 15953
        break L14702;
       }
      } else if (($361 | 0) == 1162757152) {
       label = 11709; //@line 15957
       break L14702;
      } else if (($361 | 0) == 1413830740) {
       if (($362 | 0) == 0) {
        if ((_pri_read($fp, $214, 4) | 0) != 0) {
         break L14666;
        }
        if ((_pri_get_uint32_be($214, 0) | 0) == ($360 | 0)) {
         break;
        } else {
         label = 11723; //@line 15975
         break L14702;
        }
       }
       $431 = _malloc($362) | 0; //@line 15979
       if (($431 | 0) == 0) {
        break L14666;
       }
       if ((_pri_read($fp, $431, $362) | 0) != 0) {
        label = 11730; //@line 15989
        break L14702;
       }
       if (HEAP8[6656] | 0) {
        $_01011_i_i_i = $362;
        $_012_i_i_i = $360;
        $src_013_i_i_i = $431;
       } else {
        $i_017_i_i67_i = 0; //@line 15997
        do {
         $438 = $i_017_i_i67_i << 25; //@line 16002
         $reg_1_i_i69_i = ($i_017_i_i67_i & 128 | 0) != 0 ? $438 ^ 517762881 : $438; //@line 16004
         $441 = $reg_1_i_i69_i << 1; //@line 16006
         $reg_1_1_i_i70_i = ($reg_1_i_i69_i | 0) < 0 ? $441 ^ 517762881 : $441; //@line 16008
         $444 = $reg_1_1_i_i70_i << 1; //@line 16010
         $reg_1_2_i_i71_i = ($reg_1_1_i_i70_i | 0) < 0 ? $444 ^ 517762881 : $444; //@line 16012
         $447 = $reg_1_2_i_i71_i << 1; //@line 16014
         $reg_1_3_i_i72_i = ($reg_1_2_i_i71_i | 0) < 0 ? $447 ^ 517762881 : $447; //@line 16016
         $450 = $reg_1_3_i_i72_i << 1; //@line 16018
         $reg_1_4_i_i73_i = ($reg_1_3_i_i72_i | 0) < 0 ? $450 ^ 517762881 : $450; //@line 16020
         $453 = $reg_1_4_i_i73_i << 1; //@line 16022
         $reg_1_5_i_i74_i = ($reg_1_4_i_i73_i | 0) < 0 ? $453 ^ 517762881 : $453; //@line 16024
         $456 = $reg_1_5_i_i74_i << 1; //@line 16026
         $reg_1_6_i_i75_i = ($reg_1_5_i_i74_i | 0) < 0 ? $456 ^ 517762881 : $456; //@line 16028
         $459 = $reg_1_6_i_i75_i << 1; //@line 16030
         HEAP32[59240 + ($i_017_i_i67_i << 2) >> 2] = ($reg_1_6_i_i75_i | 0) < 0 ? $459 ^ 517762881 : $459; //@line 16034
         $i_017_i_i67_i = $i_017_i_i67_i + 1 | 0; //@line 16035
        } while ($i_017_i_i67_i >>> 0 < 256);
        HEAP8[6656] = 1; //@line 16044
        $_01011_i_i_i = $362;
        $_012_i_i_i = $360;
        $src_013_i_i_i = $431;
       }
       while (1) {
        $473 = HEAP32[59240 + ((HEAPU8[$src_013_i_i_i] ^ $_012_i_i_i >>> 24) << 2) >> 2] ^ $_012_i_i_i << 8; //@line 16060
        $474 = $_01011_i_i_i - 1 | 0; //@line 16061
        if (($474 | 0) == 0) {
         break;
        } else {
         $_01011_i_i_i = $474;
         $_012_i_i_i = $473;
         $src_013_i_i_i = $src_013_i_i_i + 1 | 0;
        }
       }
       $478 = (HEAP8[$431] | 0) == 10; //@line 16071
       $_size_i_i = ($478 << 31 >> 31) + $362 | 0; //@line 16074
       if (($_size_i_i | 0) == 0) {
        $n_1_i_i = 0; //@line 16078
       } else {
        $482 = $_size_i_i - 1 | 0; //@line 16080
        $n_1_i_i = (HEAP8[$431 + $482 | 0] | 0) == 10 ? $482 : $_size_i_i; //@line 16086
       }
       $488 = _pri_img_add_comment($1, $431 + ($478 & 1) | 0, $n_1_i_i) | 0; //@line 16090
       _free($431); //@line 16091
       do {
        if ((_pri_read($fp, $214, 4) | 0) == 0) {
         if ((_pri_get_uint32_be($214, 0) | 0) == ($473 | 0)) {
          $_0_i23_i_i = 0; //@line 16101
          break;
         }
         _fwrite(56632, 15, 1, $268 | 0) | 0; //@line 16104
         $_0_i23_i_i = 1; //@line 16106
        } else {
         $_0_i23_i_i = 1; //@line 16108
        }
       } while (0);
       if (($_0_i23_i_i | $488 | 0) != 0) {
        break L14666;
       }
      } else if (($361 | 0) == 1414676811) {
       break L14705;
      } else {
       if (($362 | 0) == 0) {
        $_lcssa227_i = $360; //@line 16124
       } else {
        $726 = $360;
        $_08_i140229_i = $362;
        while (1) {
         $728 = $_08_i140229_i >>> 0 < 256 ? $_08_i140229_i : 256; //@line 16131
         if ((_pri_read($fp, $214, $728) | 0) != 0) {
          break L14666;
         }
         if (!(HEAP8[6656] | 0)) {
          $i_017_i168_i = 0; //@line 16141
          do {
           $733 = $i_017_i168_i << 25; //@line 16146
           $reg_1_i170_i = ($i_017_i168_i & 128 | 0) != 0 ? $733 ^ 517762881 : $733; //@line 16148
           $736 = $reg_1_i170_i << 1; //@line 16150
           $reg_1_1_i171_i = ($reg_1_i170_i | 0) < 0 ? $736 ^ 517762881 : $736; //@line 16152
           $739 = $reg_1_1_i171_i << 1; //@line 16154
           $reg_1_2_i172_i = ($reg_1_1_i171_i | 0) < 0 ? $739 ^ 517762881 : $739; //@line 16156
           $742 = $reg_1_2_i172_i << 1; //@line 16158
           $reg_1_3_i173_i = ($reg_1_2_i172_i | 0) < 0 ? $742 ^ 517762881 : $742; //@line 16160
           $745 = $reg_1_3_i173_i << 1; //@line 16162
           $reg_1_4_i174_i = ($reg_1_3_i173_i | 0) < 0 ? $745 ^ 517762881 : $745; //@line 16164
           $748 = $reg_1_4_i174_i << 1; //@line 16166
           $reg_1_5_i175_i = ($reg_1_4_i174_i | 0) < 0 ? $748 ^ 517762881 : $748; //@line 16168
           $751 = $reg_1_5_i175_i << 1; //@line 16170
           $reg_1_6_i176_i = ($reg_1_5_i175_i | 0) < 0 ? $751 ^ 517762881 : $751; //@line 16172
           $754 = $reg_1_6_i176_i << 1; //@line 16174
           HEAP32[59240 + ($i_017_i168_i << 2) >> 2] = ($reg_1_6_i176_i | 0) < 0 ? $754 ^ 517762881 : $754; //@line 16178
           $i_017_i168_i = $i_017_i168_i + 1 | 0; //@line 16179
          } while ($i_017_i168_i >>> 0 < 256);
          HEAP8[6656] = 1; //@line 16188
         }
         if (($728 | 0) == 0) {
          $_ph211_i = $726; //@line 16194
         } else {
          $_01011_i182_i = $728;
          $_012_i181_i = $726;
          $src_013_i180_i = $214;
          while (1) {
           $769 = HEAP32[59240 + ((HEAPU8[$src_013_i180_i] ^ $_012_i181_i >>> 24) << 2) >> 2] ^ $_012_i181_i << 8; //@line 16209
           $770 = $_01011_i182_i - 1 | 0; //@line 16210
           if (($770 | 0) == 0) {
            $_ph211_i = $769; //@line 16214
            break;
           } else {
            $_01011_i182_i = $770;
            $_012_i181_i = $769;
            $src_013_i180_i = $src_013_i180_i + 1 | 0;
           }
          }
         }
         if (($_08_i140229_i | 0) == ($728 | 0)) {
          $_lcssa227_i = $_ph211_i; //@line 16226
          break;
         } else {
          $726 = $_ph211_i;
          $_08_i140229_i = $_08_i140229_i - $728 | 0;
         }
        }
       }
       if ((_pri_read($fp, $214, 4) | 0) != 0) {
        break L14666;
       }
       if ((_pri_get_uint32_be($214, 0) | 0) != ($_lcssa227_i | 0)) {
        label = 11788; //@line 16244
        break L14702;
       }
      }
     } while (0);
     if ((_pri_read($fp, $4, 8) | 0) != 0) {
      break L14666;
     }
    }
    if ($362 >>> 0 < 16) {
     break L14666;
    }
    if ((_pri_read($fp, $269, 16) | 0) != 0) {
     break L14666;
    }
    if (HEAP8[6656] | 0) {
     $_01011_i_i95_i = 16;
     $_012_i_i94_i = $360;
     $src_013_i_i93_i = $269;
    } else {
     $i_017_i_i82_i = 0; //@line 16272
     do {
      $507 = $i_017_i_i82_i << 25; //@line 16277
      $reg_1_i_i84_i = ($i_017_i_i82_i & 128 | 0) != 0 ? $507 ^ 517762881 : $507; //@line 16279
      $510 = $reg_1_i_i84_i << 1; //@line 16281
      $reg_1_1_i_i85_i = ($reg_1_i_i84_i | 0) < 0 ? $510 ^ 517762881 : $510; //@line 16283
      $513 = $reg_1_1_i_i85_i << 1; //@line 16285
      $reg_1_2_i_i86_i = ($reg_1_1_i_i85_i | 0) < 0 ? $513 ^ 517762881 : $513; //@line 16287
      $516 = $reg_1_2_i_i86_i << 1; //@line 16289
      $reg_1_3_i_i87_i = ($reg_1_2_i_i86_i | 0) < 0 ? $516 ^ 517762881 : $516; //@line 16291
      $519 = $reg_1_3_i_i87_i << 1; //@line 16293
      $reg_1_4_i_i88_i = ($reg_1_3_i_i87_i | 0) < 0 ? $519 ^ 517762881 : $519; //@line 16295
      $522 = $reg_1_4_i_i88_i << 1; //@line 16297
      $reg_1_5_i_i89_i = ($reg_1_4_i_i88_i | 0) < 0 ? $522 ^ 517762881 : $522; //@line 16299
      $525 = $reg_1_5_i_i89_i << 1; //@line 16301
      $reg_1_6_i_i90_i = ($reg_1_5_i_i89_i | 0) < 0 ? $525 ^ 517762881 : $525; //@line 16303
      $528 = $reg_1_6_i_i90_i << 1; //@line 16305
      HEAP32[59240 + ($i_017_i_i82_i << 2) >> 2] = ($reg_1_6_i_i90_i | 0) < 0 ? $528 ^ 517762881 : $528; //@line 16309
      $i_017_i_i82_i = $i_017_i_i82_i + 1 | 0; //@line 16310
     } while ($i_017_i_i82_i >>> 0 < 256);
     HEAP8[6656] = 1; //@line 16319
     $_01011_i_i95_i = 16;
     $_012_i_i94_i = $360;
     $src_013_i_i93_i = $269;
    }
    while (1) {
     $542 = HEAP32[59240 + ((HEAPU8[$src_013_i_i93_i] ^ $_012_i_i94_i >>> 24) << 2) >> 2] ^ $_012_i_i94_i << 8; //@line 16335
     $543 = $_01011_i_i95_i - 1 | 0; //@line 16336
     if (($543 | 0) == 0) {
      break;
     } else {
      $_01011_i_i95_i = $543;
      $_012_i_i94_i = $542;
      $src_013_i_i93_i = $src_013_i_i93_i + 1 | 0;
     }
    }
    $546 = _pri_get_uint32_be($269, 0) | 0; //@line 16345
    $547 = _pri_get_uint32_be($269, 4) | 0; //@line 16346
    $548 = _pri_get_uint32_be($269, 8) | 0; //@line 16347
    $549 = _pri_get_uint32_be($269, 12) | 0; //@line 16348
    $550 = _pri_img_get_track($1, $546, $547, 1) | 0; //@line 16349
    if (($550 | 0) == 0) {
     break L14666;
    }
    if ((_pri_trk_set_size($550, $548) | 0) != 0) {
     break L14666;
    }
    _pri_trk_set_clock($550, $549); //@line 16361
    $556 = $362 - 16 | 0; //@line 16362
    if (($556 | 0) == 0) {
     $crc3436_lcssa_i_i = $542; //@line 16366
    } else {
     $crc343641_i_i = $542;
     $_08_i42_i_i = $556;
     while (1) {
      $559 = $_08_i42_i_i >>> 0 < 256 ? $_08_i42_i_i : 256; //@line 16373
      if ((_pri_read($fp, $214, $559) | 0) != 0) {
       break L14666;
      }
      if (!(HEAP8[6656] | 0)) {
       $i_017_i13_i_i = 0; //@line 16383
       do {
        $564 = $i_017_i13_i_i << 25; //@line 16388
        $reg_1_i15_i_i = ($i_017_i13_i_i & 128 | 0) != 0 ? $564 ^ 517762881 : $564; //@line 16390
        $567 = $reg_1_i15_i_i << 1; //@line 16392
        $reg_1_1_i16_i_i = ($reg_1_i15_i_i | 0) < 0 ? $567 ^ 517762881 : $567; //@line 16394
        $570 = $reg_1_1_i16_i_i << 1; //@line 16396
        $reg_1_2_i17_i_i = ($reg_1_1_i16_i_i | 0) < 0 ? $570 ^ 517762881 : $570; //@line 16398
        $573 = $reg_1_2_i17_i_i << 1; //@line 16400
        $reg_1_3_i18_i_i = ($reg_1_2_i17_i_i | 0) < 0 ? $573 ^ 517762881 : $573; //@line 16402
        $576 = $reg_1_3_i18_i_i << 1; //@line 16404
        $reg_1_4_i19_i_i = ($reg_1_3_i18_i_i | 0) < 0 ? $576 ^ 517762881 : $576; //@line 16406
        $579 = $reg_1_4_i19_i_i << 1; //@line 16408
        $reg_1_5_i20_i_i = ($reg_1_4_i19_i_i | 0) < 0 ? $579 ^ 517762881 : $579; //@line 16410
        $582 = $reg_1_5_i20_i_i << 1; //@line 16412
        $reg_1_6_i21_i_i = ($reg_1_5_i20_i_i | 0) < 0 ? $582 ^ 517762881 : $582; //@line 16414
        $585 = $reg_1_6_i21_i_i << 1; //@line 16416
        HEAP32[59240 + ($i_017_i13_i_i << 2) >> 2] = ($reg_1_6_i21_i_i | 0) < 0 ? $585 ^ 517762881 : $585; //@line 16420
        $i_017_i13_i_i = $i_017_i13_i_i + 1 | 0; //@line 16421
       } while ($i_017_i13_i_i >>> 0 < 256);
       HEAP8[6656] = 1; //@line 16430
      }
      if (($559 | 0) == 0) {
       $crc3435_ph_i_i = $crc343641_i_i; //@line 16436
      } else {
       $_01011_i27_i_i = $559;
       $_012_i26_i_i = $crc343641_i_i;
       $src_013_i25_i_i = $214;
       while (1) {
        $600 = HEAP32[59240 + ((HEAPU8[$src_013_i25_i_i] ^ $_012_i26_i_i >>> 24) << 2) >> 2] ^ $_012_i26_i_i << 8; //@line 16451
        $601 = $_01011_i27_i_i - 1 | 0; //@line 16452
        if (($601 | 0) == 0) {
         $crc3435_ph_i_i = $600; //@line 16456
         break;
        } else {
         $_01011_i27_i_i = $601;
         $_012_i26_i_i = $600;
         $src_013_i25_i_i = $src_013_i25_i_i + 1 | 0;
        }
       }
      }
      if (($_08_i42_i_i | 0) == ($559 | 0)) {
       $crc3436_lcssa_i_i = $crc3435_ph_i_i; //@line 16468
       break;
      } else {
       $crc343641_i_i = $crc3435_ph_i_i;
       $_08_i42_i_i = $_08_i42_i_i - $559 | 0;
      }
     }
    }
    if ((_pri_read($fp, $214, 4) | 0) != 0) {
     break L14666;
    }
    if ((_pri_get_uint32_be($214, 0) | 0) == ($crc3436_lcssa_i_i | 0)) {
     $_ph235_i = $550; //@line 16486
    } else {
     label = 11758; //@line 16488
     break;
    }
   }
   if ((label | 0) == 11758) {
    _fwrite(56632, 15, 1, $268 | 0) | 0; //@line 16493
    break;
   } else if ((label | 0) == 11709) {
    if (($362 | 0) == 0) {
     $_lcssa214_i = $360; //@line 16501
    } else {
     $365 = $360;
     $_08_i216_i = $362;
     while (1) {
      $367 = $_08_i216_i >>> 0 < 256 ? $_08_i216_i : 256; //@line 16508
      if ((_pri_read($fp, $214, $367) | 0) != 0) {
       break L14666;
      }
      if (!(HEAP8[6656] | 0)) {
       $i_017_i147_i = 0; //@line 16518
       do {
        $372 = $i_017_i147_i << 25; //@line 16523
        $reg_1_i149_i = ($i_017_i147_i & 128 | 0) != 0 ? $372 ^ 517762881 : $372; //@line 16525
        $375 = $reg_1_i149_i << 1; //@line 16527
        $reg_1_1_i150_i = ($reg_1_i149_i | 0) < 0 ? $375 ^ 517762881 : $375; //@line 16529
        $378 = $reg_1_1_i150_i << 1; //@line 16531
        $reg_1_2_i151_i = ($reg_1_1_i150_i | 0) < 0 ? $378 ^ 517762881 : $378; //@line 16533
        $381 = $reg_1_2_i151_i << 1; //@line 16535
        $reg_1_3_i152_i = ($reg_1_2_i151_i | 0) < 0 ? $381 ^ 517762881 : $381; //@line 16537
        $384 = $reg_1_3_i152_i << 1; //@line 16539
        $reg_1_4_i153_i = ($reg_1_3_i152_i | 0) < 0 ? $384 ^ 517762881 : $384; //@line 16541
        $387 = $reg_1_4_i153_i << 1; //@line 16543
        $reg_1_5_i154_i = ($reg_1_4_i153_i | 0) < 0 ? $387 ^ 517762881 : $387; //@line 16545
        $390 = $reg_1_5_i154_i << 1; //@line 16547
        $reg_1_6_i155_i = ($reg_1_5_i154_i | 0) < 0 ? $390 ^ 517762881 : $390; //@line 16549
        $393 = $reg_1_6_i155_i << 1; //@line 16551
        HEAP32[59240 + ($i_017_i147_i << 2) >> 2] = ($reg_1_6_i155_i | 0) < 0 ? $393 ^ 517762881 : $393; //@line 16555
        $i_017_i147_i = $i_017_i147_i + 1 | 0; //@line 16556
       } while ($i_017_i147_i >>> 0 < 256);
       HEAP8[6656] = 1; //@line 16565
      }
      if (($367 | 0) == 0) {
       $_ph_i = $365; //@line 16571
      } else {
       $_01011_i161_i = $367;
       $_012_i160_i = $365;
       $src_013_i159_i = $214;
       while (1) {
        $408 = HEAP32[59240 + ((HEAPU8[$src_013_i159_i] ^ $_012_i160_i >>> 24) << 2) >> 2] ^ $_012_i160_i << 8; //@line 16586
        $409 = $_01011_i161_i - 1 | 0; //@line 16587
        if (($409 | 0) == 0) {
         $_ph_i = $408; //@line 16591
         break;
        } else {
         $_01011_i161_i = $409;
         $_012_i160_i = $408;
         $src_013_i159_i = $src_013_i159_i + 1 | 0;
        }
       }
      }
      if (($_08_i216_i | 0) == ($367 | 0)) {
       $_lcssa214_i = $_ph_i; //@line 16603
       break;
      } else {
       $365 = $_ph_i;
       $_08_i216_i = $_08_i216_i - $367 | 0;
      }
     }
    }
    if ((_pri_read($fp, $214, 4) | 0) != 0) {
     break;
    }
    if ((_pri_get_uint32_be($214, 0) | 0) == ($_lcssa214_i | 0)) {
     $_0 = $1; //@line 16621
     STACKTOP = sp; //@line 16623
     return $_0 | 0; //@line 16624
    } else {
     _fwrite(56632, 15, 1, $268 | 0) | 0; //@line 16626
     break;
    }
   } else if ((label | 0) == 11788) {
    _fwrite(56632, 15, 1, $268 | 0) | 0; //@line 16632
    break;
   } else if ((label | 0) == 11730) {
    _free($431); //@line 16637
    break;
   } else if ((label | 0) == 11777) {
    _fwrite(56632, 15, 1, $268 | 0) | 0; //@line 16642
    break;
   } else if ((label | 0) == 11723) {
    _fwrite(56632, 15, 1, $268 | 0) | 0; //@line 16647
    break;
   }
  }
 } while (0);
 _pri_img_del($1); //@line 16653
 $_0 = 0; //@line 16655
 STACKTOP = sp; //@line 16657
 return $_0 | 0; //@line 16658
}
function _pri_save_tc($fp, $img) {
 $fp = $fp | 0;
 $img = $img | 0;
 return 1; //@line 16668
}
function _pri_save_pri($fp, $img) {
 $fp = $fp | 0;
 $img = $img | 0;
 var $crc_i18 = 0, $crc_i_i = 0, $buf_i7_i = 0, $crc_i = 0, $buf_i16 = 0, $1 = 0, $5 = 0, $6 = 0, $11 = 0, $12 = 0, $17 = 0, $19 = 0, $24 = 0, $25 = 0, $27 = 0, $29 = 0, $30 = 0, $c_027 = 0, $33 = 0, $35 = 0, $38 = 0, $h_026 = 0, $41 = 0, $44 = 0, $50 = 0, $54 = 0, $67 = 0, $68 = 0, $_pre_phi = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 16687
 STACKTOP = STACKTOP + 56 | 0; //@line 16687
 $crc_i18 = sp | 0; //@line 16688
 $crc_i_i = sp + 8 | 0; //@line 16689
 $buf_i7_i = sp + 16 | 0; //@line 16690
 $crc_i = sp + 24 | 0; //@line 16691
 $buf_i16 = sp + 32 | 0; //@line 16692
 $1 = sp + 48 | 0; //@line 16694
 _pri_set_uint32_be($1, 0, 0); //@line 16695
 if ((_pri_save_chunk($fp, 1347569952, 4, $1) | 0) != 0) {
  $_0 = 1; //@line 16700
  STACKTOP = sp; //@line 16702
  return $_0 | 0; //@line 16703
 }
 $5 = $buf_i16 | 0; //@line 16706
 $6 = $img + 8 | 0; //@line 16707
 do {
  if ((HEAP32[$6 >> 2] | 0) != 0) {
   _pri_set_uint32_be($5, 0, 1413830740); //@line 16713
   _pri_set_uint32_be($5, 4, (HEAP32[$6 >> 2] | 0) + 2 | 0); //@line 16716
   $11 = $buf_i16 + 8 | 0; //@line 16717
   HEAP8[$11] = 10; //@line 16718
   HEAP32[$crc_i >> 2] = 0; //@line 16719
   $12 = _pri_write_crc($fp, $5, 9, $crc_i) | 0; //@line 16720
   $17 = _pri_write_crc($fp, HEAP32[$img + 12 >> 2] | 0, HEAP32[$6 >> 2] | 0, $crc_i) | 0 | $12; //@line 16725
   $19 = $17 | (_pri_write_crc($fp, $11, 1, $crc_i) | 0); //@line 16727
   _pri_set_uint32_be($5, 0, HEAP32[$crc_i >> 2] | 0); //@line 16729
   if (($19 | (_pri_write($fp, $5, 4) | 0) | 0) == 0) {
    break;
   } else {
    $_0 = 1; //@line 16737
   }
   STACKTOP = sp; //@line 16740
   return $_0 | 0; //@line 16741
  }
 } while (0);
 $24 = $img | 0; //@line 16744
 $25 = HEAP32[$24 >> 2] | 0; //@line 16745
 L14842 : do {
  if (($25 | 0) == 0) {
   $_pre_phi = $buf_i7_i | 0; //@line 16752
  } else {
   $27 = $img + 4 | 0; //@line 16754
   $29 = $buf_i7_i | 0; //@line 16756
   $c_027 = 0;
   $30 = $25;
   L14845 : while (1) {
    $33 = HEAP32[(HEAP32[$27 >> 2] | 0) + ($c_027 << 2) >> 2] | 0; //@line 16764
    do {
     if (($33 | 0) == 0) {
      $67 = $30; //@line 16769
     } else {
      $35 = $33 | 0; //@line 16771
      if ((HEAP32[$35 >> 2] | 0) == 0) {
       $67 = $30; //@line 16776
       break;
      }
      $38 = $33 + 4 | 0; //@line 16779
      $h_026 = 0; //@line 16781
      do {
       $41 = HEAP32[(HEAP32[$38 >> 2] | 0) + ($h_026 << 2) >> 2] | 0; //@line 16786
       do {
        if (($41 | 0) != 0) {
         _pri_set_uint32_be($5, 0, $c_027); //@line 16791
         _pri_set_uint32_be($5, 4, $h_026); //@line 16792
         $44 = $41 + 4 | 0; //@line 16793
         _pri_set_uint32_be($5, 8, HEAP32[$44 >> 2] | 0); //@line 16795
         _pri_set_uint32_be($5, 12, HEAP32[$41 >> 2] | 0); //@line 16798
         if ((_pri_save_chunk($fp, 1414676811, 16, $5) | 0) != 0) {
          $_0 = 1; //@line 16803
          label = 11823; //@line 16804
          break L14845;
         }
         $50 = HEAP32[$44 >> 2] | 0; //@line 16807
         if (($50 | 0) == 0) {
          break;
         }
         HEAP32[$crc_i_i >> 2] = 0; //@line 16813
         $54 = ($50 + 7 | 0) >>> 3; //@line 16815
         _pri_set_uint32_be($29, 0, 1145132097); //@line 16816
         _pri_set_uint32_be($29, 4, $54); //@line 16817
         if ((_pri_write_crc($fp, $29, 8, $crc_i_i) | 0) != 0) {
          $_0 = 1; //@line 16822
          label = 11819; //@line 16823
          break L14845;
         }
         if ((_pri_write_crc($fp, HEAP32[$41 + 8 >> 2] | 0, $54, $crc_i_i) | 0) != 0) {
          $_0 = 1; //@line 16832
          label = 11817; //@line 16833
          break L14845;
         }
         _pri_set_uint32_be($29, 0, HEAP32[$crc_i_i >> 2] | 0); //@line 16837
         if ((_pri_write($fp, $29, 4) | 0) != 0) {
          $_0 = 1; //@line 16842
          label = 11822; //@line 16843
          break L14845;
         }
        }
       } while (0);
       $h_026 = $h_026 + 1 | 0; //@line 16848
      } while ($h_026 >>> 0 < (HEAP32[$35 >> 2] | 0) >>> 0);
      $67 = HEAP32[$24 >> 2] | 0; //@line 16860
     }
    } while (0);
    $68 = $c_027 + 1 | 0; //@line 16864
    if ($68 >>> 0 < $67 >>> 0) {
     $c_027 = $68;
     $30 = $67;
    } else {
     $_pre_phi = $29; //@line 16870
     break L14842;
    }
   }
   if ((label | 0) == 11823) {
    STACKTOP = sp; //@line 16876
    return $_0 | 0; //@line 16877
   } else if ((label | 0) == 11817) {
    STACKTOP = sp; //@line 16881
    return $_0 | 0; //@line 16882
   } else if ((label | 0) == 11819) {
    STACKTOP = sp; //@line 16886
    return $_0 | 0; //@line 16887
   } else if ((label | 0) == 11822) {
    STACKTOP = sp; //@line 16891
    return $_0 | 0; //@line 16892
   }
  }
 } while (0);
 _pri_set_uint32_be($_pre_phi, 0, 1162757152); //@line 16898
 _pri_set_uint32_be($_pre_phi, 4, 0); //@line 16899
 HEAP32[$crc_i18 >> 2] = 0; //@line 16900
 if ((_pri_write_crc($fp, $_pre_phi, 8, $crc_i18) | 0) != 0) {
  $_0 = 1; //@line 16905
  STACKTOP = sp; //@line 16907
  return $_0 | 0; //@line 16908
 }
 _pri_set_uint32_be($_pre_phi, 0, HEAP32[$crc_i18 >> 2] | 0); //@line 16911
 $_0 = (_pri_write($fp, $_pre_phi, 4) | 0) != 0 | 0; //@line 16916
 STACKTOP = sp; //@line 16918
 return $_0 | 0; //@line 16919
}
function _pri_save_chunk($fp, $ckid, $size, $data) {
 $fp = $fp | 0;
 $ckid = $ckid | 0;
 $size = $size | 0;
 $data = $data | 0;
 var $crc = 0, $1 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 16931
 STACKTOP = STACKTOP + 16 | 0; //@line 16931
 $crc = sp | 0; //@line 16932
 $1 = sp + 8 | 0; //@line 16934
 _pri_set_uint32_be($1, 0, $ckid); //@line 16935
 _pri_set_uint32_be($1, 4, $size); //@line 16936
 HEAP32[$crc >> 2] = 0; //@line 16937
 if ((_pri_write_crc($fp, $1, 8, $crc) | 0) != 0) {
  $_0 = 1; //@line 16942
  STACKTOP = sp; //@line 16944
  return $_0 | 0; //@line 16945
 }
 do {
  if (($size | 0) != 0) {
   if ((_pri_write_crc($fp, $data, $size, $crc) | 0) == 0) {
    break;
   } else {
    $_0 = 1; //@line 16957
   }
   STACKTOP = sp; //@line 16960
   return $_0 | 0; //@line 16961
  }
 } while (0);
 _pri_set_uint32_be($1, 0, HEAP32[$crc >> 2] | 0); //@line 16965
 $_0 = (_pri_write($fp, $1, 4) | 0) != 0 | 0; //@line 16970
 STACKTOP = sp; //@line 16972
 return $_0 | 0; //@line 16973
}
function _pri_write_crc($fp, $buf, $cnt, $crc) {
 $fp = $fp | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 $crc = $crc | 0;
 var $3 = 0, $i_017_i = 0, $5 = 0, $reg_1_i = 0, $8 = 0, $reg_1_1_i = 0, $11 = 0, $reg_1_2_i = 0, $14 = 0, $reg_1_3_i = 0, $17 = 0, $reg_1_4_i = 0, $20 = 0, $reg_1_5_i = 0, $23 = 0, $reg_1_6_i = 0, $26 = 0, $src_013_i = 0, $_012_i = 0, $_01011_i = 0, $41 = 0, $42 = 0, $_0_lcssa_i = 0, $45 = 0, $not_ = 0, $_ = 0;
 if (($crc | 0) == 0) {
  $45 = _pri_write($fp, $buf, $cnt) | 0; //@line 16995
  $not_ = ($45 | 0) != 0; //@line 16996
  $_ = $not_ & 1; //@line 16997
  return $_ | 0; //@line 16999
 }
 $3 = HEAP32[$crc >> 2] | 0; //@line 17001
 if (!(HEAP8[6656] | 0)) {
  $i_017_i = 0; //@line 17005
  do {
   $5 = $i_017_i << 25; //@line 17010
   $reg_1_i = ($i_017_i & 128 | 0) != 0 ? $5 ^ 517762881 : $5; //@line 17012
   $8 = $reg_1_i << 1; //@line 17014
   $reg_1_1_i = ($reg_1_i | 0) < 0 ? $8 ^ 517762881 : $8; //@line 17016
   $11 = $reg_1_1_i << 1; //@line 17018
   $reg_1_2_i = ($reg_1_1_i | 0) < 0 ? $11 ^ 517762881 : $11; //@line 17020
   $14 = $reg_1_2_i << 1; //@line 17022
   $reg_1_3_i = ($reg_1_2_i | 0) < 0 ? $14 ^ 517762881 : $14; //@line 17024
   $17 = $reg_1_3_i << 1; //@line 17026
   $reg_1_4_i = ($reg_1_3_i | 0) < 0 ? $17 ^ 517762881 : $17; //@line 17028
   $20 = $reg_1_4_i << 1; //@line 17030
   $reg_1_5_i = ($reg_1_4_i | 0) < 0 ? $20 ^ 517762881 : $20; //@line 17032
   $23 = $reg_1_5_i << 1; //@line 17034
   $reg_1_6_i = ($reg_1_5_i | 0) < 0 ? $23 ^ 517762881 : $23; //@line 17036
   $26 = $reg_1_6_i << 1; //@line 17038
   HEAP32[59240 + ($i_017_i << 2) >> 2] = ($reg_1_6_i | 0) < 0 ? $26 ^ 517762881 : $26; //@line 17042
   $i_017_i = $i_017_i + 1 | 0; //@line 17043
  } while ($i_017_i >>> 0 < 256);
  HEAP8[6656] = 1; //@line 17052
 }
 if (($cnt | 0) == 0) {
  $_0_lcssa_i = $3; //@line 17058
 } else {
  $_01011_i = $cnt;
  $_012_i = $3;
  $src_013_i = $buf;
  while (1) {
   $41 = HEAP32[59240 + (((HEAPU8[$src_013_i] | 0) ^ $_012_i >>> 24) << 2) >> 2] ^ $_012_i << 8; //@line 17073
   $42 = $_01011_i - 1 | 0; //@line 17074
   if (($42 | 0) == 0) {
    $_0_lcssa_i = $41; //@line 17078
    break;
   } else {
    $_01011_i = $42;
    $_012_i = $41;
    $src_013_i = $src_013_i + 1 | 0;
   }
  }
 }
 HEAP32[$crc >> 2] = $_0_lcssa_i; //@line 17086
 $45 = _pri_write($fp, $buf, $cnt) | 0; //@line 17088
 $not_ = ($45 | 0) != 0; //@line 17089
 $_ = $not_ & 1; //@line 17090
 return $_ | 0; //@line 17092
}
function _pri_load_tc($fp) {
 $fp = $fp | 0;
 var $buf_i = 0, $ofs = 0, $len = 0, $1 = 0, $4 = 0, $14 = 0, $16 = 0, $17 = 0, $i_0_i = 0, $27 = 0, $28 = 0, $i_124_i = 0, $i_222_i = 0, $54 = 0, $t_030_us = 0, $h_029_us = 0, $60 = 0, $64 = 0, $67 = 0, $84 = 0, $c_031_us = 0, $c_031 = 0, $89 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 17110
 STACKTOP = STACKTOP + 2048 | 0; //@line 17110
 $buf_i = sp | 0; //@line 17111
 $ofs = sp + 512 | 0; //@line 17112
 $len = sp + 1536 | 0; //@line 17113
 $1 = _pri_img_new() | 0; //@line 17114
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 17118
  STACKTOP = sp; //@line 17120
  return $_0 | 0; //@line 17121
 }
 $4 = $buf_i | 0; //@line 17123
 do {
  if ((_pri_read_ofs($fp, 0, $4, 512) | 0) == 0) {
   if ((_pri_get_uint16_be($4, 0) | 0) != 23205) {
    break;
   }
   $14 = (HEAPU8[$buf_i + 258 | 0] | 0) + 1 | 0; //@line 17138
   $16 = HEAP8[$buf_i + 259 | 0] | 0; //@line 17140
   $17 = $16 & 255; //@line 17141
   $i_0_i = 2; //@line 17143
   while (1) {
    if ($i_0_i >>> 0 >= 66) {
     label = 11850; //@line 17149
     break;
    }
    if ((HEAP8[$buf_i + $i_0_i | 0] | 0) == 0) {
     label = 11849; //@line 17158
     break;
    } else {
     $i_0_i = $i_0_i + 1 | 0; //@line 17161
    }
   }
   if ((label | 0) == 11849) {
    if ($i_0_i >>> 0 > 2) {
     label = 11850; //@line 17168
    }
   }
   if ((label | 0) == 11850) {
    $27 = $buf_i + 2 | 0; //@line 17172
    $28 = $i_0_i - 2 | 0; //@line 17173
    _pri_img_set_comment($1, $27, $28) | 0; //@line 17174
   }
   if ((_pri_read_ofs($fp, 773, $4, 512) | 0) == 0) {
    $i_124_i = 0; //@line 17181
   } else {
    break;
   }
   do {
    HEAP32[$ofs + ($i_124_i << 2) >> 2] = (_pri_get_uint16_be($4, $i_124_i << 1) | 0) << 8; //@line 17191
    $i_124_i = $i_124_i + 1 | 0; //@line 17192
   } while ($i_124_i >>> 0 < 256);
   if ((_pri_read_ofs($fp, 1285, $4, 512) | 0) == 0) {
    $i_222_i = 0; //@line 17205
   } else {
    break;
   }
   do {
    HEAP16[$len + ($i_222_i << 1) >> 1] = (_pri_get_uint16_le($4, $i_222_i << 1) | 0) & 65535; //@line 17215
    $i_222_i = $i_222_i + 1 | 0; //@line 17216
   } while ($i_222_i >>> 0 < 256);
   if ($14 >>> 0 > 99 | ($16 & 255) > 2) {
    _pri_img_del($1); //@line 17230
    $_0 = 0; //@line 17232
    STACKTOP = sp; //@line 17234
    return $_0 | 0; //@line 17235
   }
   if ($16 << 24 >> 24 == 0) {
    $c_031 = 0; //@line 17239
    while (1) {
     $89 = $c_031 + 1 | 0; //@line 17242
     if ($89 >>> 0 < $14 >>> 0) {
      $c_031 = $89; //@line 17246
     } else {
      $_0 = $1; //@line 17248
      break;
     }
    }
    STACKTOP = sp; //@line 17253
    return $_0 | 0; //@line 17254
   } else {
    $c_031_us = 0; //@line 17256
   }
   L14923 : while (1) {
    $h_029_us = 0;
    $t_030_us = $c_031_us << 1;
    while (1) {
     if ($t_030_us >>> 0 > 255) {
      label = 11868; //@line 17269
      break L14923;
     }
     $60 = HEAP32[$ofs + ($t_030_us << 2) >> 2] | 0; //@line 17273
     do {
      if (($60 | 0) != 0) {
       $64 = HEAP16[$len + ($t_030_us << 1) >> 1] | 0; //@line 17279
       if ($64 << 16 >> 16 == 0) {
        break;
       }
       $67 = _pri_img_get_track($1, $c_031_us, $h_029_us, 1) | 0; //@line 17285
       if (($67 | 0) == 0) {
        label = 11869; //@line 17289
        break L14923;
       }
       if ((_pri_trk_set_size($67, ($64 & 65535) << 3) | 0) != 0) {
        label = 11869; //@line 17298
        break L14923;
       }
       _pri_trk_set_clock($67, ($64 & 65535) < 8e3 ? 25e4 : 5e5); //@line 17303
       if ((_pri_read_ofs($fp, $60, HEAP32[$67 + 8 >> 2] | 0, ((HEAP32[$67 + 4 >> 2] | 0) + 7 | 0) >>> 3) | 0) != 0) {
        label = 11869; //@line 17314
        break L14923;
       }
      }
     } while (0);
     $84 = $h_029_us + 1 | 0; //@line 17320
     if ($84 >>> 0 < $17 >>> 0) {
      $h_029_us = $84;
      $t_030_us = $t_030_us + 1 | 0;
     } else {
      break;
     }
    }
    $54 = $c_031_us + 1 | 0; //@line 17329
    if ($54 >>> 0 < $14 >>> 0) {
     $c_031_us = $54; //@line 17333
    } else {
     $_0 = $1; //@line 17335
     label = 11872; //@line 17336
     break;
    }
   }
   if ((label | 0) == 11872) {
    STACKTOP = sp; //@line 17342
    return $_0 | 0; //@line 17343
   } else if ((label | 0) == 11868) {
    _pri_img_del($1); //@line 17346
    $_0 = 0; //@line 17348
    STACKTOP = sp; //@line 17350
    return $_0 | 0; //@line 17351
   } else if ((label | 0) == 11869) {
    _pri_img_del($1); //@line 17354
    $_0 = 0; //@line 17356
    STACKTOP = sp; //@line 17358
    return $_0 | 0; //@line 17359
   }
  }
 } while (0);
 _pri_img_del($1); //@line 17363
 $_0 = 0; //@line 17365
 STACKTOP = sp; //@line 17367
 return $_0 | 0; //@line 17368
}
function _psi_guess_type($fname) {
 $fname = $fname | 0;
 var $_0_i = 0, $ext_0_i = 0, $2 = 0, $ext_1_i = 0, $_0 = 0;
 $ext_0_i = 62880;
 $_0_i = $fname;
 while (1) {
  $2 = HEAP8[$_0_i] | 0; //@line 17386
  if (($2 << 24 >> 24 | 0) == 0) {
   break;
  } else if (($2 << 24 >> 24 | 0) == 46) {
   $ext_1_i = $_0_i; //@line 17391
  } else {
   $ext_1_i = $ext_0_i; //@line 17393
  }
  $ext_0_i = $ext_1_i;
  $_0_i = $_0_i + 1 | 0;
 }
 do {
  if ((_strcasecmp($ext_0_i | 0, 53936) | 0) == 0) {
   $_0 = 1; //@line 17405
  } else {
   if ((_strcasecmp($ext_0_i | 0, 56624) | 0) == 0) {
    $_0 = 2; //@line 17411
    break;
   }
   if ((_strcasecmp($ext_0_i | 0, 50112) | 0) == 0) {
    $_0 = 3; //@line 17418
    break;
   }
   if ((_strcasecmp($ext_0_i | 0, 46216) | 0) == 0) {
    $_0 = 12; //@line 17425
    break;
   }
   if ((_strcasecmp($ext_0_i | 0, 42688) | 0) == 0) {
    $_0 = 4; //@line 17432
    break;
   }
   if ((_strcasecmp($ext_0_i | 0, 39584) | 0) == 0) {
    $_0 = 12; //@line 17439
    break;
   }
   if ((_strcasecmp($ext_0_i | 0, 36664) | 0) == 0) {
    $_0 = 5; //@line 17446
    break;
   }
   if ((_strcasecmp($ext_0_i | 0, 33680) | 0) == 0) {
    $_0 = 6; //@line 17453
    break;
   }
   if ((_strcasecmp($ext_0_i | 0, 31824) | 0) == 0) {
    $_0 = 11; //@line 17460
    break;
   }
   if ((_strcasecmp($ext_0_i | 0, 30880) | 0) == 0) {
    $_0 = 12; //@line 17467
    break;
   }
   if ((_strcasecmp($ext_0_i | 0, 58032) | 0) == 0) {
    $_0 = 13; //@line 17474
    break;
   }
   if ((_strcasecmp($ext_0_i | 0, 57240) | 0) == 0) {
    $_0 = 14; //@line 17481
    break;
   }
   if ((_strcasecmp($ext_0_i | 0, 56016) | 0) == 0) {
    $_0 = 15; //@line 17488
    break;
   }
   if ((_strcasecmp($ext_0_i | 0, 55280) | 0) == 0) {
    $_0 = 16; //@line 17495
    break;
   }
   $_0 = (_strcasecmp($ext_0_i | 0, 54616) | 0) == 0 ? 17 : 11; //@line 17502
  }
 } while (0);
 return $_0 | 0; //@line 17507
}
function _psi_load_fp($fp, $type) {
 $fp = $fp | 0;
 $type = $type | 0;
 var $_0 = 0;
 if (($type | 0) == 15) {
  $_0 = _psi_load_tc($fp) | 0; //@line 17521
 } else if (($type | 0) == 6 | ($type | 0) == 7 | ($type | 0) == 8 | ($type | 0) == 9 | ($type | 0) == 10) {
  $_0 = _psi_load_pfdc($fp) | 0; //@line 17525
 } else if (($type | 0) == 17) {
  $_0 = _psi_load_xdf($fp) | 0; //@line 17529
 } else if (($type | 0) == 14) {
  $_0 = _psi_load_stx($fp) | 0; //@line 17533
 } else if (($type | 0) == 13) {
  $_0 = _psi_load_st($fp) | 0; //@line 17537
 } else if (($type | 0) == 5) {
  $_0 = _psi_load_msa($fp) | 0; //@line 17541
 } else if (($type | 0) == 16) {
  $_0 = _psi_load_td0($fp) | 0; //@line 17545
 } else if (($type | 0) == 1) {
  $_0 = _psi_load_anadisk($fp) | 0; //@line 17549
 } else if (($type | 0) == 3) {
  $_0 = _psi_load_dc42($fp) | 0; //@line 17553
 } else if (($type | 0) == 11) {
  $_0 = _psi_load_psi($fp) | 0; //@line 17557
 } else if (($type | 0) == 2) {
  $_0 = _psi_load_cp2($fp) | 0; //@line 17561
 } else if (($type | 0) == 12) {
  $_0 = _psi_load_raw($fp) | 0; //@line 17565
 } else if (($type | 0) == 4) {
  $_0 = _psi_load_imd($fp) | 0; //@line 17569
 } else {
  $_0 = 0; //@line 17571
 }
 return $_0 | 0; //@line 17575
}
function _psi_probe($fname) {
 $fname = $fname | 0;
 var $1 = 0, $4 = 0, $_0_i = 0, $ext_0_i = 0, $7 = 0, $ext_1_i = 0, $_0 = 0;
 $1 = _fopen($fname | 0, 53920) | 0; //@line 17585
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 17589
  return $_0 | 0; //@line 17592
 }
 $4 = _psi_probe_fp($1) | 0; //@line 17594
 _fclose($1 | 0) | 0; //@line 17595
 if (($4 | 0) == 12) {
  $ext_0_i = 62880;
  $_0_i = $fname;
 } else {
  $_0 = $4; //@line 17601
  return $_0 | 0; //@line 17604
 }
 while (1) {
  $7 = HEAP8[$_0_i] | 0; //@line 17609
  if (($7 << 24 >> 24 | 0) == 0) {
   break;
  } else if (($7 << 24 >> 24 | 0) == 46) {
   $ext_1_i = $_0_i; //@line 17614
  } else {
   $ext_1_i = $ext_0_i; //@line 17616
  }
  $ext_0_i = $ext_1_i;
  $_0_i = $_0_i + 1 | 0;
 }
 return ((_strcasecmp($ext_0_i | 0, 58032) | 0) == 0 ? 13 : 12) | 0; //@line 17627
}
function _psi_save_fp($fp, $img, $type) {
 $fp = $fp | 0;
 $img = $img | 0;
 $type = $type | 0;
 var $_0 = 0;
 if (($type | 0) == 7) {
  $_0 = _psi_save_pfdc($fp, $img, 0) | 0; //@line 17643
 } else if (($type | 0) == 16) {
  $_0 = _psi_save_td0($fp, $img) | 0; //@line 17647
 } else if (($type | 0) == 11) {
  $_0 = _psi_save_psi($fp, $img) | 0; //@line 17651
 } else if (($type | 0) == 12) {
  $_0 = _psi_save_raw($fp, $img) | 0; //@line 17655
 } else if (($type | 0) == 6) {
  $_0 = _psi_save_pfdc($fp, $img, -1) | 0; //@line 17659
 } else if (($type | 0) == 14) {
  $_0 = _psi_save_stx($fp, $img) | 0; //@line 17663
 } else if (($type | 0) == 17) {
  $_0 = _psi_save_xdf($fp, $img) | 0; //@line 17667
 } else if (($type | 0) == 10) {
  $_0 = _psi_save_pfdc($fp, $img, 4) | 0; //@line 17671
 } else if (($type | 0) == 4) {
  $_0 = _psi_save_imd($fp, $img) | 0; //@line 17675
 } else if (($type | 0) == 5) {
  $_0 = _psi_save_msa($fp, $img) | 0; //@line 17679
 } else if (($type | 0) == 9) {
  $_0 = _psi_save_pfdc($fp, $img, 2) | 0; //@line 17683
 } else if (($type | 0) == 2) {
  $_0 = _psi_save_cp2($fp, $img) | 0; //@line 17687
 } else if (($type | 0) == 13) {
  $_0 = _psi_save_st($fp, $img) | 0; //@line 17691
 } else if (($type | 0) == 1) {
  $_0 = _psi_save_anadisk($fp, $img) | 0; //@line 17695
 } else if (($type | 0) == 3) {
  $_0 = _psi_save_dc42($fp, $img) | 0; //@line 17699
 } else if (($type | 0) == 8) {
  $_0 = _psi_save_pfdc($fp, $img, 1) | 0; //@line 17703
 } else {
  $_0 = 1; //@line 17705
 }
 return $_0 | 0; //@line 17709
}
function _psi_sct_add_alternate($sct, $alt) {
 $sct = $sct | 0;
 $alt = $alt | 0;
 var $_0 = 0, $2 = 0;
 $_0 = $sct; //@line 17720
 do {
  $2 = $_0 | 0; //@line 17723
  $_0 = HEAP32[$2 >> 2] | 0; //@line 17724
 } while (($_0 | 0) != 0);
 HEAP32[$2 >> 2] = $alt; //@line 17733
 return;
}
function _psi_sct_get_alternate($sct, $idx) {
 $sct = $sct | 0;
 $idx = $idx | 0;
 var $_08 = 0, $_057 = 0, $5 = 0, $6 = 0, $_06 = 0;
 L15018 : do {
  if (($idx | 0) == 0) {
   $_06 = $sct; //@line 17750
  } else {
   $_057 = $sct;
   $_08 = $idx;
   while (1) {
    if (($_057 | 0) == 0) {
     $_06 = 0; //@line 17759
     break L15018;
    }
    $5 = HEAP32[$_057 >> 2] | 0; //@line 17763
    $6 = $_08 - 1 | 0; //@line 17764
    if (($6 | 0) == 0) {
     $_06 = $5; //@line 17768
     break;
    } else {
     $_057 = $5;
     $_08 = $6;
    }
   }
  }
 } while (0);
 return $_06 | 0; //@line 17778
}
function _psi_sct_fill($sct, $val) {
 $sct = $sct | 0;
 $val = $val | 0;
 var $1 = 0, $4 = 0, $5 = 0, $i_05 = 0;
 $1 = $sct + 10 | 0; //@line 17789
 if ((HEAP16[$1 >> 1] | 0) == 0) {
  return;
 }
 $4 = $val & 255; //@line 17797
 $5 = $sct + 24 | 0; //@line 17798
 $i_05 = 0; //@line 17800
 do {
  HEAP8[(HEAP32[$5 >> 2] | 0) + $i_05 | 0] = $4; //@line 17805
  $i_05 = $i_05 + 1 | 0; //@line 17806
 } while ($i_05 >>> 0 < (HEAPU16[$1 >> 1] | 0) >>> 0);
 return;
}
function _psi_sct_uniform($sct) {
 $sct = $sct | 0;
 var $1 = 0, $4 = 0, $i_0 = 0, $8 = 0, $_0 = 0, label = 0;
 $1 = $sct + 24 | 0; //@line 17828
 $4 = HEAPU16[$sct + 10 >> 1] | 0; //@line 17831
 $i_0 = 1; //@line 17833
 while (1) {
  if ($i_0 >>> 0 >= $4 >>> 0) {
   $_0 = 1; //@line 17839
   label = 11958; //@line 17840
   break;
  }
  $8 = HEAP32[$1 >> 2] | 0; //@line 17843
  if ((HEAP8[$8] | 0) == (HEAP8[$8 + $i_0 | 0] | 0)) {
   $i_0 = $i_0 + 1 | 0; //@line 17851
  } else {
   $_0 = 0; //@line 17853
   label = 11959; //@line 17854
   break;
  }
 }
 if ((label | 0) == 11959) {
  return $_0 | 0; //@line 17861
 } else if ((label | 0) == 11958) {
  return $_0 | 0; //@line 17866
 }
 return 0;
}
function _psi_sct_set_flags($sct, $flags, $set) {
 $sct = $sct | 0;
 $flags = $flags | 0;
 $set = $set | 0;
 var $3 = 0, $8 = 0;
 if (($set | 0) == 0) {
  $8 = $sct + 12 | 0; //@line 17882
  HEAP32[$8 >> 2] = HEAP32[$8 >> 2] & ~$flags; //@line 17885
  return;
 } else {
  $3 = $sct + 12 | 0; //@line 17889
  HEAP32[$3 >> 2] = HEAP32[$3 >> 2] | $flags; //@line 17892
  return;
 }
}
function _psi_sct_set_encoding($sct, $enc) {
 $sct = $sct | 0;
 $enc = $enc | 0;
 var $2 = 0, $_04 = 0;
 if (($sct | 0) == 0) {
  return;
 }
 $2 = $enc & 65535; //@line 17912
 $_04 = $sct; //@line 17914
 do {
  HEAP16[$_04 + 16 >> 1] = $2; //@line 17918
  $_04 = HEAP32[$_04 >> 2] | 0; //@line 17920
 } while (($_04 | 0) != 0);
 return;
}
function _psi_sct_set_position($sct, $val) {
 $sct = $sct | 0;
 $val = $val | 0;
 HEAP32[$sct + 48 >> 2] = $val; //@line 17941
 return;
}
function _psi_sct_get_position($sct) {
 $sct = $sct | 0;
 return HEAP32[$sct + 48 >> 2] | 0; //@line 17955
}
function _psi_sct_set_read_time($sct, $val) {
 $sct = $sct | 0;
 $val = $val | 0;
 HEAP32[$sct + 52 >> 2] = $val; //@line 17966
 return;
}
function _psi_sct_get_read_time($sct) {
 $sct = $sct | 0;
 return HEAP32[$sct + 52 >> 2] | 0; //@line 17980
}
function _psi_sct_set_mfm_size($sct, $val) {
 $sct = $sct | 0;
 $val = $val | 0;
 HEAP8[$sct + 56 | 0] = 1; //@line 17991
 HEAP8[$sct + 57 | 0] = $val; //@line 17993
 return;
}
function _psi_sct_get_mfm_size($sct) {
 $sct = $sct | 0;
 var $6 = 0, $n_0 = 0, $_0 = 0;
 if ((HEAP8[$sct + 56 | 0] | 0) != 0) {
  $_0 = HEAPU8[$sct + 57 | 0] | 0; //@line 18014
  return $_0 | 0; //@line 18017
 }
 $6 = HEAPU16[$sct + 10 >> 1] | 0; //@line 18021
 $n_0 = 0; //@line 18023
 while (1) {
  if ((128 << $n_0 | 0) < ($6 | 0)) {
   $n_0 = $n_0 + 1 | 0; //@line 18031
  } else {
   $_0 = $n_0; //@line 18033
   break;
  }
 }
 return $_0 | 0; //@line 18039
}
function _psi_sct_set_gcr_format($sct, $val) {
 $sct = $sct | 0;
 $val = $val | 0;
 HEAP8[$sct + 58 | 0] = 1; //@line 18050
 HEAP8[$sct + 59 | 0] = $val; //@line 18052
 return;
}
function _psi_sct_get_gcr_format($sct) {
 $sct = $sct | 0;
 var $_0 = 0;
 if ((HEAP8[$sct + 58 | 0] | 0) == 0) {
  $_0 = 0; //@line 18068
  return $_0 | 0; //@line 18071
 }
 $_0 = HEAPU8[$sct + 59 | 0] | 0; //@line 18077
 return $_0 | 0; //@line 18080
}
function _psi_sct_set_tags($sct, $buf, $cnt) {
 $sct = $sct | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 var $_cnt = 0, $i_010 = 0;
 $_cnt = $cnt >>> 0 > 16 ? 16 : $cnt; //@line 18093
 HEAP16[$sct + 28 >> 1] = $_cnt & 65535; //@line 18096
 if (($_cnt | 0) == 0) {
  return $_cnt | 0; //@line 18101
 } else {
  $i_010 = 0; //@line 18103
 }
 do {
  HEAP8[$sct + 30 + $i_010 | 0] = HEAP8[$buf + $i_010 | 0] | 0; //@line 18110
  $i_010 = $i_010 + 1 | 0; //@line 18111
 } while ($i_010 >>> 0 < $_cnt >>> 0);
 return $_cnt | 0; //@line 18121
}
function _psi_trk_get_indexed_sector($trk, $idx, $phy) {
 $trk = $trk | 0;
 $idx = $idx | 0;
 $phy = $phy | 0;
 var $2 = 0, $3 = 0, $7 = 0, $14 = 0, $_3_us = 0, $i_145_us = 0, $_144_us = 0, $24 = 0, $_2_us = 0, $33 = 0, $min_cnt_040_us = 0, $min_idx_039_us = 0, $i_038_us = 0, $39 = 0, $48 = 0, $min_idx_1_us = 0, $min_cnt_1_us = 0, $54 = 0, $56 = 0, $_037_us = 0, $min_sct_0_us = 0, $57 = 0, $58 = 0, $60 = 0, $64 = 0, $_0 = 0, label = 0;
 $2 = HEAP16[$trk + 2 >> 1] | 0; //@line 18141
 $3 = $2 & 65535; //@line 18142
 if ($2 << 16 >> 16 == 0) {
  $_0 = 0; //@line 18146
  return $_0 | 0; //@line 18149
 }
 if (($phy | 0) != 0) {
  if ($3 >>> 0 <= $idx >>> 0) {
   $_0 = 0; //@line 18157
   return $_0 | 0; //@line 18160
  }
  $_0 = HEAP32[(HEAP32[$trk + 4 >> 2] | 0) + ($idx << 2) >> 2] | 0; //@line 18167
  return $_0 | 0; //@line 18170
 }
 $7 = $trk + 4 | 0; //@line 18172
 $min_sct_0_us = 0;
 $_037_us = $idx;
 $56 = $2;
 L15086 : while (1) {
  $57 = HEAP32[$7 >> 2] | 0; //@line 18179
  $58 = $56 & 65535; //@line 18180
  $i_038_us = 0;
  $min_idx_039_us = 0;
  $min_cnt_040_us = 0;
  while (1) {
   $39 = HEAP16[(HEAP32[$57 + ($i_038_us << 2) >> 2] | 0) + 8 >> 1] | 0; //@line 18190
   do {
    if (($39 & 65535) >>> 0 < $min_sct_0_us >>> 0) {
     $min_cnt_1_us = $min_cnt_040_us;
     $min_idx_1_us = $min_idx_039_us;
    } else {
     if (($min_cnt_040_us | 0) == 0) {
      $min_cnt_1_us = 1;
      $min_idx_1_us = $i_038_us;
      break;
     }
     $48 = HEAP16[(HEAP32[$57 + ($min_idx_039_us << 2) >> 2] | 0) + 8 >> 1] | 0; //@line 18207
     if (($39 & 65535) < ($48 & 65535)) {
      $min_cnt_1_us = 1;
      $min_idx_1_us = $i_038_us;
      break;
     }
     $min_cnt_1_us = ($39 << 16 >> 16 == $48 << 16 >> 16) + $min_cnt_040_us | 0;
     $min_idx_1_us = $min_idx_039_us;
    }
   } while (0);
   $54 = $i_038_us + 1 | 0; //@line 18223
   if ($54 >>> 0 < $58 >>> 0) {
    $i_038_us = $54;
    $min_idx_039_us = $min_idx_1_us;
    $min_cnt_040_us = $min_cnt_1_us;
   } else {
    break;
   }
  }
  if (($min_cnt_1_us | 0) == 0) {
   $_0 = 0; //@line 18235
   label = 12017; //@line 18236
   break;
  }
  do {
   if ($_037_us >>> 0 < $min_cnt_1_us >>> 0) {
    if ($56 << 16 >> 16 == 0) {
     $_3_us = $_037_us;
     $14 = 0;
     break;
    }
    $60 = HEAP32[$7 >> 2] | 0; //@line 18249
    $64 = HEAP16[(HEAP32[$60 + ($min_idx_1_us << 2) >> 2] | 0) + 8 >> 1] | 0; //@line 18253
    $_144_us = $_037_us;
    $i_145_us = 0;
    while (1) {
     $24 = HEAP32[$60 + ($i_145_us << 2) >> 2] | 0; //@line 18260
     if ((HEAP16[$24 + 8 >> 1] | 0) == $64 << 16 >> 16) {
      if (($_144_us | 0) == 0) {
       $_0 = $24; //@line 18269
       label = 12020; //@line 18270
       break L15086;
      }
      $_2_us = $_144_us - 1 | 0; //@line 18275
     } else {
      $_2_us = $_144_us; //@line 18277
     }
     $33 = $i_145_us + 1 | 0; //@line 18280
     if ($33 >>> 0 < $3 >>> 0) {
      $_144_us = $_2_us;
      $i_145_us = $33;
     } else {
      $_3_us = $_2_us;
      $14 = $2;
      break;
     }
    }
   } else {
    $_3_us = $_037_us - $min_cnt_1_us | 0;
    $14 = $56;
   }
  } while (0);
  $min_sct_0_us = (HEAPU16[(HEAP32[(HEAP32[$7 >> 2] | 0) + ($min_idx_1_us << 2) >> 2] | 0) + 8 >> 1] | 0) + 1 | 0;
  $_037_us = $_3_us;
  $56 = $14;
 }
 if ((label | 0) == 12017) {
  return $_0 | 0; //@line 18310
 } else if ((label | 0) == 12020) {
  return $_0 | 0; //@line 18315
 }
 return 0;
}
function _psi_save($fname, $img, $type) {
 $fname = $fname | 0;
 $img = $img | 0;
 $type = $type | 0;
 var $_08 = 0, $5 = 0, $8 = 0, $_0 = 0;
 if (($type | 0) == 0) {
  $_08 = _psi_guess_type($fname) | 0; //@line 18332
 } else {
  $_08 = $type; //@line 18334
 }
 $5 = _fopen($fname | 0, 53312 | 0) | 0; //@line 18337
 if (($5 | 0) == 0) {
  $_0 = 1; //@line 18341
  return $_0 | 0; //@line 18344
 }
 $8 = _psi_save_fp($5, $img, $_08) | 0; //@line 18346
 _fclose($5 | 0) | 0; //@line 18347
 $_0 = $8; //@line 18349
 return $_0 | 0; //@line 18352
}
function _psi_probe_fp($fp) {
 $fp = $fp | 0;
 var $_0 = 0;
 do {
  if ((_psi_probe_psi_fp($fp) | 0) == 0) {
   if ((_psi_probe_pfdc_fp($fp) | 0) != 0) {
    $_0 = 6; //@line 18372
    break;
   }
   if ((_psi_probe_td0_fp($fp) | 0) != 0) {
    $_0 = 16; //@line 18379
    break;
   }
   if ((_psi_probe_imd_fp($fp) | 0) != 0) {
    $_0 = 4; //@line 18386
    break;
   }
   if ((_psi_probe_dc42_fp($fp) | 0) != 0) {
    $_0 = 3; //@line 18393
    break;
   }
   if ((_psi_probe_msa_fp($fp) | 0) != 0) {
    $_0 = 5; //@line 18400
    break;
   }
   if ((_psi_probe_stx_fp($fp) | 0) != 0) {
    $_0 = 14; //@line 18407
    break;
   }
   $_0 = (_psi_probe_raw_fp($fp) | 0) == 0 ? 0 : 12; //@line 18414
  } else {
   $_0 = 11; //@line 18416
  }
 } while (0);
 return $_0 | 0; //@line 18421
}
function _psi_sct_new($c, $h, $s, $n) {
 $c = $c | 0;
 $h = $h | 0;
 $s = $s | 0;
 $n = $n | 0;
 var $1 = 0, $2 = 0, $26 = 0, $_0 = 0;
 $1 = _malloc(60) | 0; //@line 18437
 $2 = $1; //@line 18438
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 18442
  return $_0 | 0; //@line 18445
 }
 HEAP32[$1 >> 2] = 0; //@line 18448
 HEAP16[$1 + 4 >> 1] = $c & 65535; //@line 18452
 HEAP16[$1 + 6 >> 1] = $h & 65535; //@line 18456
 HEAP16[$1 + 8 >> 1] = $s & 65535; //@line 18460
 HEAP16[$1 + 10 >> 1] = $n & 65535; //@line 18464
 HEAP32[$1 + 12 >> 2] = 0; //@line 18467
 HEAP16[$1 + 16 >> 1] = 2; //@line 18470
 HEAP32[$1 + 20 >> 2] = 0; //@line 18473
 do {
  if (($n | 0) == 0) {
   HEAP32[$1 + 24 >> 2] = 0; //@line 18480
  } else {
   $26 = _malloc($n) | 0; //@line 18482
   HEAP32[$1 + 24 >> 2] = $26; //@line 18485
   if (($26 | 0) != 0) {
    break;
   }
   _free($1); //@line 18491
   $_0 = 0; //@line 18493
   return $_0 | 0; //@line 18496
  }
 } while (0);
 HEAP16[$1 + 28 >> 1] = 0; //@line 18501
 HEAP32[$1 + 48 >> 2] = -1; //@line 18504
 HEAP32[$1 + 52 >> 2] = 0; //@line 18507
 HEAP8[$1 + 56 | 0] = 0; //@line 18509
 HEAP8[$1 + 58 | 0] = 0; //@line 18511
 $_0 = $2; //@line 18513
 return $_0 | 0; //@line 18516
}
function _psi_sct_del($sct) {
 $sct = $sct | 0;
 var $_04 = 0, $3 = 0;
 if (($sct | 0) == 0) {
  return;
 } else {
  $_04 = $sct; //@line 18531
 }
 while (1) {
  $3 = HEAP32[$_04 >> 2] | 0; //@line 18536
  _free(HEAP32[$_04 + 24 >> 2] | 0); //@line 18539
  _free($_04); //@line 18541
  if (($3 | 0) == 0) {
   break;
  } else {
   $_04 = $3; //@line 18547
  }
 }
 return;
}
function _psi_sct_clone($sct, $deep) {
 $sct = $sct | 0;
 $deep = $deep | 0;
 var $2 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $14 = 0, $24 = 0, $26 = 0, $28 = 0, $31 = 0, $40 = 0, $42 = 0, $44 = 0, $46 = 0, $47 = 0, $48 = 0, $54 = 0, $56 = 0, $59 = 0, $60 = 0, $61 = 0, $sct_pn = 0, $_042 = 0, $91 = 0, $_04_i = 0, $94 = 0, $_0 = 0, label = 0;
 $2 = HEAP16[$sct + 4 >> 1] | 0; //@line 18572
 $4 = HEAP16[$sct + 6 >> 1] | 0; //@line 18574
 $6 = HEAP16[$sct + 8 >> 1] | 0; //@line 18576
 $8 = HEAP16[$sct + 10 >> 1] | 0; //@line 18578
 $9 = $8 & 65535; //@line 18579
 $10 = _malloc(60) | 0; //@line 18580
 $11 = $10; //@line 18581
 if (($10 | 0) == 0) {
  $_0 = 0; //@line 18585
  return $_0 | 0; //@line 18588
 }
 $14 = $10; //@line 18590
 HEAP32[$14 >> 2] = 0; //@line 18591
 HEAP16[$10 + 4 >> 1] = $2; //@line 18594
 HEAP16[$10 + 6 >> 1] = $4; //@line 18597
 HEAP16[$10 + 8 >> 1] = $6; //@line 18600
 HEAP16[$10 + 10 >> 1] = $8; //@line 18603
 $24 = $10 + 12 | 0; //@line 18605
 HEAP32[$24 >> 2] = 0; //@line 18606
 $26 = $10 + 16 | 0; //@line 18608
 HEAP16[$26 >> 1] = 2; //@line 18609
 $28 = $10 + 20 | 0; //@line 18611
 HEAP32[$28 >> 2] = 0; //@line 18612
 do {
  if ($8 << 16 >> 16 == 0) {
   HEAP32[$10 + 24 >> 2] = 0; //@line 18619
   $40 = 0; //@line 18620
  } else {
   $31 = _malloc($9) | 0; //@line 18622
   HEAP32[$10 + 24 >> 2] = $31; //@line 18625
   if (($31 | 0) != 0) {
    $40 = $31; //@line 18629
    break;
   }
   _free($10); //@line 18632
   $_0 = 0; //@line 18634
   return $_0 | 0; //@line 18637
  }
 } while (0);
 $42 = $10 + 28 | 0; //@line 18642
 HEAP16[$42 >> 1] = 0; //@line 18643
 $44 = $10 + 48 | 0; //@line 18645
 HEAP32[$44 >> 2] = -1; //@line 18646
 $46 = $10 + 52 | 0; //@line 18648
 HEAP32[$46 >> 2] = 0; //@line 18649
 $47 = $10 + 56 | 0; //@line 18650
 HEAP8[$47] = 0; //@line 18651
 $48 = $10 + 58 | 0; //@line 18652
 HEAP8[$48] = 0; //@line 18653
 HEAP32[$24 >> 2] = HEAP32[$sct + 12 >> 2]; //@line 18656
 HEAP16[$26 >> 1] = HEAP16[$sct + 16 >> 1] | 0; //@line 18659
 $54 = HEAP32[$sct + 24 >> 2] | 0; //@line 18661
 _memcpy($40 | 0, $54 | 0, $9) | 0; //@line 18662
 $56 = HEAP16[$sct + 28 >> 1] | 0; //@line 18664
 HEAP16[$42 >> 1] = $56; //@line 18665
 if ($56 << 16 >> 16 != 0) {
  $59 = $56 & 65535; //@line 18669
  $60 = $10 + 30 | 0; //@line 18670
  $61 = $sct + 30 | 0; //@line 18671
  _memcpy($60 | 0, $61 | 0, $59) | 0; //@line 18672
 }
 HEAP32[$44 >> 2] = HEAP32[$sct + 48 >> 2]; //@line 18677
 HEAP32[$46 >> 2] = HEAP32[$sct + 52 >> 2]; //@line 18680
 if ((HEAP8[$sct + 56 | 0] | 0) != 0) {
  HEAP8[$47] = 1; //@line 18686
  HEAP8[$10 + 57 | 0] = HEAP8[$sct + 57 | 0] | 0; //@line 18690
 }
 if ((HEAP8[$sct + 58 | 0] | 0) != 0) {
  HEAP8[$48] = 1; //@line 18698
  HEAP8[$10 + 59 | 0] = HEAP8[$sct + 59 | 0] | 0; //@line 18702
 }
 if (($deep | 0) == 0) {
  HEAP32[$28 >> 2] = 0; //@line 18708
  $_0 = $11; //@line 18710
  return $_0 | 0; //@line 18713
 }
 HEAP32[$28 >> 2] = HEAP32[$sct + 20 >> 2]; //@line 18717
 $sct_pn = $sct; //@line 18719
 while (1) {
  $_042 = HEAP32[$sct_pn >> 2] | 0; //@line 18723
  if (($_042 | 0) == 0) {
   $_0 = $11; //@line 18727
   label = 12074; //@line 18728
   break;
  }
  $91 = _psi_sct_clone($_042, 0) | 0; //@line 18731
  HEAP32[$14 >> 2] = $91; //@line 18732
  if (($91 | 0) == 0) {
   $_04_i = $11; //@line 18736
   break;
  } else {
   $sct_pn = $_042; //@line 18739
  }
 }
 if ((label | 0) == 12074) {
  return $_0 | 0; //@line 18745
 }
 while (1) {
  $94 = HEAP32[$_04_i >> 2] | 0; //@line 18750
  _free(HEAP32[$_04_i + 24 >> 2] | 0); //@line 18753
  _free($_04_i); //@line 18755
  if (($94 | 0) == 0) {
   $_0 = 0; //@line 18759
   break;
  } else {
   $_04_i = $94; //@line 18762
  }
 }
 return $_0 | 0; //@line 18767
}
function _psi_sct_set_size($sct, $size, $filler) {
 $sct = $sct | 0;
 $size = $size | 0;
 $filler = $filler | 0;
 var $1 = 0, $8 = 0, $10 = 0, $14 = 0, $_0 = 0;
 $1 = $sct + 10 | 0; //@line 18780
 if ((HEAPU16[$1 >> 1] | 0) >>> 0 >= $size >>> 0) {
  HEAP16[$1 >> 1] = $size & 65535; //@line 18787
  $_0 = 0; //@line 18789
  return $_0 | 0; //@line 18792
 }
 $8 = $sct + 24 | 0; //@line 18794
 $10 = _realloc(HEAP32[$8 >> 2] | 0, $size) | 0; //@line 18796
 if (($10 | 0) == 0) {
  $_0 = 1; //@line 18800
  return $_0 | 0; //@line 18803
 }
 $14 = HEAPU16[$1 >> 1] | 0; //@line 18806
 if ($14 >>> 0 < $size >>> 0) {
  _memset($10 + $14 | 0, $filler & 255 | 0, $size - $14 | 0); //@line 18813
 }
 HEAP16[$1 >> 1] = $size & 65535; //@line 18817
 HEAP32[$8 >> 2] = $10; //@line 18818
 $_0 = 0; //@line 18820
 return $_0 | 0; //@line 18823
}
function _psi_sct_get_tags($sct, $buf, $cnt) {
 $sct = $sct | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 var $3 = 0, $cnt_ = 0, $7 = 0, $8 = 0, $umax = 0, $i_017 = 0;
 $3 = HEAPU16[$sct + 28 >> 1] | 0; //@line 18838
 $cnt_ = $3 >>> 0 > $cnt >>> 0 ? $cnt : $3; //@line 18840
 if (($cnt_ | 0) != 0) {
  $i_017 = 0; //@line 18844
  do {
   HEAP8[$buf + $i_017 | 0] = HEAP8[$sct + 30 + $i_017 | 0] | 0; //@line 18850
   $i_017 = $i_017 + 1 | 0; //@line 18851
  } while ($i_017 >>> 0 < $cnt_ >>> 0);
 }
 if ($cnt_ >>> 0 >= $cnt >>> 0) {
  return $cnt_ | 0; //@line 18865
 }
 $7 = ~$cnt; //@line 18867
 $8 = ~$3; //@line 18868
 $umax = $7 >>> 0 > $8 >>> 0 ? $7 : $8; //@line 18870
 _memset($buf + ~$umax | 0, 0, $umax + $cnt + 1 | 0); //@line 18875
 return $cnt_ | 0; //@line 18878
}
function _psi_trk_new($h) {
 $h = $h | 0;
 var $1 = 0, $_0 = 0;
 $1 = _malloc(8) | 0; //@line 18888
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 18892
  return $_0 | 0; //@line 18895
 }
 HEAP16[$1 >> 1] = $h & 65535; //@line 18900
 HEAP16[$1 + 2 >> 1] = 0; //@line 18903
 HEAP32[$1 + 4 >> 2] = 0; //@line 18906
 $_0 = $1; //@line 18908
 return $_0 | 0; //@line 18911
}
function _psi_trk_del($trk) {
 $trk = $trk | 0;
 var $3 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i_09_i = 0, $11 = 0, $_04_i_i = 0, $14 = 0, $19 = 0, $20 = 0, $21 = 0, $_lcssa8_i = 0;
 if (($trk | 0) == 0) {
  return;
 }
 $3 = $trk + 2 | 0; //@line 18929
 $4 = HEAP16[$3 >> 1] | 0; //@line 18930
 $6 = $trk + 4 | 0; //@line 18932
 $7 = HEAP32[$6 >> 2] | 0; //@line 18933
 if ($4 << 16 >> 16 == 0) {
  $_lcssa8_i = $7; //@line 18936
 } else {
  $i_09_i = 0;
  $9 = $7;
  $8 = $4;
  while (1) {
   $11 = HEAP32[$9 + ($i_09_i << 2) >> 2] | 0; //@line 18944
   if (($11 | 0) == 0) {
    $20 = $8;
    $19 = $9;
   } else {
    $_04_i_i = $11; //@line 18950
    while (1) {
     $14 = HEAP32[$_04_i_i >> 2] | 0; //@line 18954
     _free(HEAP32[$_04_i_i + 24 >> 2] | 0); //@line 18957
     _free($_04_i_i); //@line 18959
     if (($14 | 0) == 0) {
      break;
     } else {
      $_04_i_i = $14; //@line 18965
     }
    }
    $20 = HEAP16[$3 >> 1] | 0;
    $19 = HEAP32[$6 >> 2] | 0;
   }
   $21 = $i_09_i + 1 | 0; //@line 18974
   if ($21 >>> 0 < ($20 & 65535) >>> 0) {
    $i_09_i = $21;
    $9 = $19;
    $8 = $20;
   } else {
    $_lcssa8_i = $19; //@line 18981
    break;
   }
  }
 }
 _free($_lcssa8_i); //@line 18988
 _free($trk); //@line 18990
 return;
}
function _psi_trk_add_sector($trk, $sct) {
 $trk = $trk | 0;
 $sct = $sct | 0;
 var $1 = 0, $4 = 0, $9 = 0, $10 = 0, $13 = 0, $_0 = 0;
 $1 = $trk + 4 | 0; //@line 19004
 $4 = $trk + 2 | 0; //@line 19007
 $9 = _realloc(HEAP32[$1 >> 2] | 0, ((HEAPU16[$4 >> 1] | 0) << 2) + 4 | 0) | 0; //@line 19012
 $10 = $9; //@line 19013
 if (($9 | 0) == 0) {
  $_0 = 1; //@line 19017
  return $_0 | 0; //@line 19020
 }
 HEAP32[$1 >> 2] = $10; //@line 19022
 $13 = HEAP16[$4 >> 1] | 0; //@line 19023
 HEAP32[$10 + (($13 & 65535) << 2) >> 2] = $sct; //@line 19026
 HEAP16[$4 >> 1] = $13 + 1 & 65535; //@line 19028
 $_0 = 0; //@line 19030
 return $_0 | 0; //@line 19033
}
function _psi_img_remove_sector($img, $sct) {
 $img = $img | 0;
 $sct = $sct | 0;
 var $1 = 0, $2 = 0, $4 = 0, $5 = 0, $c_023 = 0, $8 = 0, $9 = 0, $12 = 0, $h_019 = 0, $16 = 0, $17 = 0, $18 = 0, $20 = 0, $21 = 0, $d_017 = 0, $s_016 = 0, $22 = 0, $24 = 0, $30 = 0, $d_1 = 0, $31 = 0, $d_0_lcssa_off0 = 0, $40 = 0, $41 = 0;
 $1 = $img | 0; //@line 19048
 $2 = HEAP16[$1 >> 1] | 0; //@line 19049
 if ($2 << 16 >> 16 == 0) {
  return;
 }
 $4 = $img + 4 | 0; //@line 19056
 $c_023 = 0;
 $5 = $2;
 while (1) {
  $8 = HEAP32[(HEAP32[$4 >> 2] | 0) + ($c_023 << 2) >> 2] | 0; //@line 19064
  $9 = $8 + 2 | 0; //@line 19065
  if ((HEAP16[$9 >> 1] | 0) == 0) {
   $40 = $5; //@line 19070
  } else {
   $12 = $8 + 4 | 0; //@line 19072
   $h_019 = 0; //@line 19074
   do {
    $16 = HEAP32[(HEAP32[$12 >> 2] | 0) + ($h_019 << 2) >> 2] | 0; //@line 19079
    $17 = $16 + 2 | 0; //@line 19080
    $18 = HEAP16[$17 >> 1] | 0; //@line 19081
    if ($18 << 16 >> 16 == 0) {
     $d_0_lcssa_off0 = 0; //@line 19085
    } else {
     $20 = $16 + 4 | 0; //@line 19087
     $s_016 = 0;
     $d_017 = 0;
     $21 = $18;
     while (1) {
      $22 = HEAP32[$20 >> 2] | 0; //@line 19094
      $24 = HEAP32[$22 + ($s_016 << 2) >> 2] | 0; //@line 19096
      if (($24 | 0) == ($sct | 0)) {
       $d_1 = $d_017;
       $30 = $21;
      } else {
       HEAP32[$22 + ($d_017 << 2) >> 2] = $24; //@line 19104
       $d_1 = $d_017 + 1 | 0;
       $30 = HEAP16[$17 >> 1] | 0;
      }
      $31 = $s_016 + 1 | 0; //@line 19111
      if ($31 >>> 0 < ($30 & 65535) >>> 0) {
       $s_016 = $31;
       $d_017 = $d_1;
       $21 = $30;
      } else {
       break;
      }
     }
     $d_0_lcssa_off0 = $d_1 & 65535; //@line 19123
    }
    HEAP16[$17 >> 1] = $d_0_lcssa_off0; //@line 19126
    $h_019 = $h_019 + 1 | 0; //@line 19127
   } while ($h_019 >>> 0 < (HEAPU16[$9 >> 1] | 0) >>> 0);
   $40 = HEAP16[$1 >> 1] | 0; //@line 19140
  }
  $41 = $c_023 + 1 | 0; //@line 19143
  if ($41 >>> 0 < ($40 & 65535) >>> 0) {
   $c_023 = $41;
   $5 = $40;
  } else {
   break;
  }
 }
 return;
}
function _psi_img_get_sector($img, $c, $h, $s, $phy) {
 $img = $img | 0;
 $c = $c | 0;
 $h = $h | 0;
 $s = $s | 0;
 $phy = $phy | 0;
 var $_0_i_i = 0, $17 = 0, $21 = 0, $24 = 0, $i_0 = 0, $40 = 0, $_0 = 0, label = 0;
 if ((HEAPU16[$img >> 1] | 0) >>> 0 <= $c >>> 0) {
  $_0 = 0; //@line 19178
  return $_0 | 0; //@line 19181
 }
 $_0_i_i = HEAP32[(HEAP32[$img + 4 >> 2] | 0) + ($c << 2) >> 2] | 0; //@line 19186
 if (($_0_i_i | 0) == 0) {
  $_0 = 0; //@line 19190
  return $_0 | 0; //@line 19193
 }
 if ((HEAPU16[$_0_i_i + 2 >> 1] | 0) >>> 0 <= $h >>> 0) {
  $_0 = 0; //@line 19201
  return $_0 | 0; //@line 19204
 }
 $17 = HEAP32[(HEAP32[$_0_i_i + 4 >> 2] | 0) + ($h << 2) >> 2] | 0; //@line 19209
 if (($17 | 0) == 0) {
  $_0 = 0; //@line 19213
  return $_0 | 0; //@line 19216
 }
 if (($phy | 0) != 0) {
  if ((HEAPU16[$17 + 2 >> 1] | 0) >>> 0 <= $s >>> 0) {
   $_0 = 0; //@line 19227
   return $_0 | 0; //@line 19230
  }
  $_0 = HEAP32[(HEAP32[$17 + 4 >> 2] | 0) + ($s << 2) >> 2] | 0; //@line 19237
  return $_0 | 0; //@line 19240
 }
 $21 = $17 + 4 | 0; //@line 19242
 $24 = HEAPU16[$17 + 2 >> 1] | 0; //@line 19245
 $i_0 = 0; //@line 19247
 while (1) {
  if ($i_0 >>> 0 >= $24 >>> 0) {
   $_0 = 0; //@line 19253
   label = 12143; //@line 19254
   break;
  }
  $40 = HEAP32[(HEAP32[$21 >> 2] | 0) + ($i_0 << 2) >> 2] | 0; //@line 19259
  if ((HEAPU16[$40 + 8 >> 1] | 0 | 0) == ($s | 0)) {
   $_0 = $40; //@line 19267
   label = 12145; //@line 19268
   break;
  } else {
   $i_0 = $i_0 + 1 | 0; //@line 19271
  }
 }
 if ((label | 0) == 12143) {
  return $_0 | 0; //@line 19277
 } else if ((label | 0) == 12145) {
  return $_0 | 0; //@line 19282
 }
 return 0;
}
function _psi_trk_interleave($trk, $il) {
 $trk = $trk | 0;
 $il = $il | 0;
 var $2 = 0, $3 = 0, $7 = 0, $8 = 0, $10 = 0, $11 = 0, $i_046 = 0, $14 = 0, $15 = 0, $18 = 0, $j_041 = 0, $20 = 0, $22 = 0, $j_0_lcssa = 0, $i_139 = 0, $j_138 = 0, $32 = 0, $33 = 0, $j_235 = 0, $37 = 0, $38 = 0, $_lcssa = 0, $j_2_lcssa = 0, $45 = 0, $_0 = 0;
 $2 = HEAP16[$trk + 2 >> 1] | 0; //@line 19300
 $3 = $2 & 65535; //@line 19301
 if (($2 & 65535) < 2) {
  $_0 = 0; //@line 19305
  return $_0 | 0; //@line 19308
 }
 $7 = _malloc($3 << 2) | 0; //@line 19311
 $8 = $7; //@line 19312
 if (($7 | 0) == 0) {
  $_0 = 1; //@line 19316
  return $_0 | 0; //@line 19319
 }
 $10 = $trk + 4 | 0; //@line 19321
 $i_046 = 0; //@line 19323
 do {
  $14 = (HEAP32[$10 >> 2] | 0) + ($i_046 << 2) | 0; //@line 19327
  $15 = HEAP32[$14 >> 2] | 0; //@line 19328
  HEAP32[$14 >> 2] = 0; //@line 19329
  L15279 : do {
   if (($i_046 | 0) == 0) {
    $j_0_lcssa = 0; //@line 19334
   } else {
    $18 = HEAP16[$15 + 8 >> 1] | 0; //@line 19337
    $j_041 = $i_046; //@line 19339
    while (1) {
     $20 = $j_041 - 1 | 0; //@line 19342
     $22 = HEAP32[$8 + ($20 << 2) >> 2] | 0; //@line 19344
     if (($18 & 65535) >= (HEAPU16[$22 + 8 >> 1] | 0)) {
      $j_0_lcssa = $j_041; //@line 19349
      break L15279;
     }
     HEAP32[$8 + ($j_041 << 2) >> 2] = $22; //@line 19353
     if (($20 | 0) == 0) {
      $j_0_lcssa = 0; //@line 19357
      break;
     } else {
      $j_041 = $20; //@line 19360
     }
    }
   }
  } while (0);
  HEAP32[$8 + ($j_0_lcssa << 2) >> 2] = $15; //@line 19367
  $i_046 = $i_046 + 1 | 0; //@line 19368
 } while ($i_046 >>> 0 < $3 >>> 0);
 $11 = $trk + 4 | 0; //@line 19377
 $j_138 = 0;
 $i_139 = 0;
 while (1) {
  $32 = HEAP32[$11 >> 2] | 0; //@line 19383
  $33 = $32 + ($j_138 << 2) | 0; //@line 19384
  if ((HEAP32[$33 >> 2] | 0) == 0) {
   $j_2_lcssa = $j_138;
   $_lcssa = $33;
  } else {
   $j_235 = $j_138; //@line 19391
   while (1) {
    $37 = (($j_235 + 1 | 0) >>> 0) % ($3 >>> 0) | 0; //@line 19395
    $38 = $32 + ($37 << 2) | 0; //@line 19396
    if ((HEAP32[$38 >> 2] | 0) == 0) {
     $j_2_lcssa = $37;
     $_lcssa = $38;
     break;
    } else {
     $j_235 = $37; //@line 19404
    }
   }
  }
  HEAP32[$_lcssa >> 2] = HEAP32[$8 + ($i_139 << 2) >> 2]; //@line 19412
  $45 = $i_139 + 1 | 0; //@line 19415
  if ($45 >>> 0 < $3 >>> 0) {
   $j_138 = (($j_2_lcssa + $il | 0) >>> 0) % ($3 >>> 0) | 0;
   $i_139 = $45;
  } else {
   break;
  }
 }
 _free($7); //@line 19424
 $_0 = 0; //@line 19426
 return $_0 | 0; //@line 19429
}
function _psi_cyl_free($cyl) {
 $cyl = $cyl | 0;
 var $1 = 0, $2 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $i_010 = 0, $9 = 0, $12 = 0, $13 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $i_09_i_i = 0, $20 = 0, $_04_i_i_i = 0, $23 = 0, $28 = 0, $29 = 0, $30 = 0, $_lcssa8_i_i = 0, $35 = 0, $36 = 0, $37 = 0, $_lcssa9 = 0, $40 = 0;
 $1 = $cyl + 2 | 0; //@line 19443
 $2 = HEAP16[$1 >> 1] | 0; //@line 19444
 $4 = $cyl + 4 | 0; //@line 19446
 $5 = HEAP32[$4 >> 2] | 0; //@line 19447
 if ($2 << 16 >> 16 == 0) {
  $_lcssa9 = $5; //@line 19450
  $40 = $_lcssa9; //@line 19452
  _free($40); //@line 19453
  HEAP16[$1 >> 1] = 0; //@line 19454
  HEAP32[$4 >> 2] = 0; //@line 19455
  return;
 } else {
  $i_010 = 0;
  $7 = $5;
  $6 = $2;
 }
 while (1) {
  $9 = HEAP32[$7 + ($i_010 << 2) >> 2] | 0; //@line 19466
  if (($9 | 0) == 0) {
   $36 = $6;
   $35 = $7;
  } else {
   $12 = $9 + 2 | 0; //@line 19472
   $13 = HEAP16[$12 >> 1] | 0; //@line 19473
   $15 = $9 + 4 | 0; //@line 19475
   $16 = HEAP32[$15 >> 2] | 0; //@line 19476
   if ($13 << 16 >> 16 == 0) {
    $_lcssa8_i_i = $16; //@line 19479
   } else {
    $i_09_i_i = 0;
    $18 = $16;
    $17 = $13;
    while (1) {
     $20 = HEAP32[$18 + ($i_09_i_i << 2) >> 2] | 0; //@line 19487
     if (($20 | 0) == 0) {
      $29 = $17;
      $28 = $18;
     } else {
      $_04_i_i_i = $20; //@line 19493
      while (1) {
       $23 = HEAP32[$_04_i_i_i >> 2] | 0; //@line 19497
       _free(HEAP32[$_04_i_i_i + 24 >> 2] | 0); //@line 19500
       _free($_04_i_i_i); //@line 19502
       if (($23 | 0) == 0) {
        break;
       } else {
        $_04_i_i_i = $23; //@line 19508
       }
      }
      $29 = HEAP16[$12 >> 1] | 0;
      $28 = HEAP32[$15 >> 2] | 0;
     }
     $30 = $i_09_i_i + 1 | 0; //@line 19517
     if ($30 >>> 0 < ($29 & 65535) >>> 0) {
      $i_09_i_i = $30;
      $18 = $28;
      $17 = $29;
     } else {
      $_lcssa8_i_i = $28; //@line 19524
      break;
     }
    }
   }
   _free($_lcssa8_i_i); //@line 19531
   _free($9); //@line 19533
   $36 = HEAP16[$1 >> 1] | 0;
   $35 = HEAP32[$4 >> 2] | 0;
  }
  $37 = $i_010 + 1 | 0; //@line 19541
  if ($37 >>> 0 < ($36 & 65535) >>> 0) {
   $i_010 = $37;
   $7 = $35;
   $6 = $36;
  } else {
   $_lcssa9 = $35; //@line 19548
   break;
  }
 }
 $40 = $_lcssa9; //@line 19553
 _free($40); //@line 19554
 HEAP16[$1 >> 1] = 0; //@line 19555
 HEAP32[$4 >> 2] = 0; //@line 19556
 return;
}
function _psi_img_new() {
 var $1 = 0, $_0 = 0;
 $1 = _malloc(16) | 0; //@line 19567
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 19571
  return $_0 | 0; //@line 19574
 }
 HEAP16[$1 >> 1] = 0; //@line 19578
 HEAP32[$1 + 4 >> 2] = 0; //@line 19581
 HEAP32[$1 + 8 >> 2] = 0; //@line 19584
 HEAP32[$1 + 12 >> 2] = 0; //@line 19587
 $_0 = $1; //@line 19589
 return $_0 | 0; //@line 19592
}
function _psi_img_del($img) {
 $img = $img | 0;
 var $3 = 0, $4 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $i_010_i = 0, $11 = 0, $15 = 0, $16 = 0, $17 = 0, $_lcssa9_i = 0;
 if (($img | 0) == 0) {
  return;
 }
 $3 = $img | 0; //@line 19610
 $4 = HEAP16[$3 >> 1] | 0; //@line 19611
 $6 = $img + 4 | 0; //@line 19613
 $7 = HEAP32[$6 >> 2] | 0; //@line 19614
 if ($4 << 16 >> 16 == 0) {
  $_lcssa9_i = $7; //@line 19617
 } else {
  $i_010_i = 0;
  $9 = $7;
  $8 = $4;
  while (1) {
   $11 = HEAP32[$9 + ($i_010_i << 2) >> 2] | 0; //@line 19625
   if (($11 | 0) == 0) {
    $16 = $8;
    $15 = $9;
   } else {
    _psi_cyl_free($11); //@line 19631
    _free($11); //@line 19633
    $16 = HEAP16[$3 >> 1] | 0;
    $15 = HEAP32[$6 >> 2] | 0;
   }
   $17 = $i_010_i + 1 | 0; //@line 19641
   if ($17 >>> 0 < ($16 & 65535) >>> 0) {
    $i_010_i = $17;
    $9 = $15;
    $8 = $16;
   } else {
    $_lcssa9_i = $15; //@line 19648
    break;
   }
  }
 }
 _free($_lcssa9_i); //@line 19655
 HEAP16[$3 >> 1] = 0; //@line 19656
 HEAP32[$6 >> 2] = 0; //@line 19657
 _free(HEAP32[$img + 12 >> 2] | 0); //@line 19660
 _free($img); //@line 19662
 return;
}
function _psi_img_erase($img) {
 $img = $img | 0;
 var $1 = 0, $2 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $i_012 = 0, $9 = 0, $13 = 0, $14 = 0, $15 = 0, $_lcssa11 = 0, $19 = 0;
 $1 = $img | 0; //@line 19676
 $2 = HEAP16[$1 >> 1] | 0; //@line 19677
 $4 = $img + 4 | 0; //@line 19679
 $5 = HEAP32[$4 >> 2] | 0; //@line 19680
 if ($2 << 16 >> 16 == 0) {
  $_lcssa11 = $5; //@line 19683
 } else {
  $i_012 = 0;
  $7 = $5;
  $6 = $2;
  while (1) {
   $9 = HEAP32[$7 + ($i_012 << 2) >> 2] | 0; //@line 19691
   if (($9 | 0) == 0) {
    $14 = $6;
    $13 = $7;
   } else {
    _psi_cyl_free($9); //@line 19697
    _free($9); //@line 19699
    $14 = HEAP16[$1 >> 1] | 0;
    $13 = HEAP32[$4 >> 2] | 0;
   }
   $15 = $i_012 + 1 | 0; //@line 19707
   if ($15 >>> 0 < ($14 & 65535) >>> 0) {
    $i_012 = $15;
    $7 = $13;
    $6 = $14;
   } else {
    $_lcssa11 = $13; //@line 19714
    break;
   }
  }
 }
 _free($_lcssa11); //@line 19721
 HEAP16[$1 >> 1] = 0; //@line 19722
 HEAP32[$4 >> 2] = 0; //@line 19723
 $19 = $img + 12 | 0; //@line 19724
 _free(HEAP32[$19 >> 2] | 0); //@line 19726
 HEAP32[$img + 8 >> 2] = 0; //@line 19728
 HEAP32[$19 >> 2] = 0; //@line 19729
 return;
}
function _psi_img_add_track($img, $trk, $c) {
 $img = $img | 0;
 $trk = $trk | 0;
 $c = $c | 0;
 var $1 = 0, $3 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $12 = 0, $15 = 0, $16 = 0, $17 = 0, $27 = 0, $28 = 0, $_pn = 0, $_0_i = 0, $32 = 0, $35 = 0, $40 = 0, $43 = 0, $45 = 0, $47 = 0, $_012_i = 0, $_0 = 0, label = 0;
 $1 = $img | 0; //@line 19749
 $3 = HEAPU16[$1 >> 1] | 0; //@line 19751
 $5 = $img + 4 | 0; //@line 19753
 $6 = HEAP32[$5 >> 2] | 0; //@line 19754
 L15338 : do {
  if ($3 >>> 0 > $c >>> 0) {
   $_pn = $6; //@line 19758
  } else {
   $8 = $3;
   $7 = $6;
   while (1) {
    $12 = _realloc($7, ($8 << 2) + 4 | 0) | 0; //@line 19767
    if (($12 | 0) == 0) {
     $_0 = 1; //@line 19771
     label = 12207; //@line 19772
     break;
    }
    $15 = $12; //@line 19775
    HEAP32[$5 >> 2] = $15; //@line 19776
    $16 = HEAP16[$1 >> 1] | 0; //@line 19777
    $17 = _malloc(8) | 0; //@line 19778
    if (($17 | 0) == 0) {
     $_0 = 1; //@line 19782
     label = 12208; //@line 19783
     break;
    }
    HEAP16[$17 >> 1] = $16; //@line 19788
    HEAP16[$17 + 2 >> 1] = 0; //@line 19791
    HEAP32[$17 + 4 >> 2] = 0; //@line 19794
    HEAP32[$15 + (($16 & 65535) << 2) >> 2] = $17; //@line 19797
    $27 = $16 + 1 & 65535; //@line 19798
    HEAP16[$1 >> 1] = $27; //@line 19799
    $28 = $27 & 65535; //@line 19800
    if ($28 >>> 0 > $c >>> 0) {
     $_pn = $15; //@line 19804
     break L15338;
    } else {
     $8 = $28;
     $7 = $15;
    }
   }
   if ((label | 0) == 12207) {
    return $_0 | 0; //@line 19813
   } else if ((label | 0) == 12208) {
    return $_0 | 0; //@line 19818
   }
  }
 } while (0);
 $_0_i = HEAP32[$_pn + ($c << 2) >> 2] | 0; //@line 19824
 if (($_0_i | 0) == 0) {
  $_0 = 1; //@line 19828
  return $_0 | 0; //@line 19831
 }
 $32 = $_0_i + 4 | 0; //@line 19833
 $35 = $_0_i + 2 | 0; //@line 19836
 $40 = _realloc(HEAP32[$32 >> 2] | 0, ((HEAPU16[$35 >> 1] | 0) << 2) + 4 | 0) | 0; //@line 19841
 if (($40 | 0) == 0) {
  $_0 = 1; //@line 19845
  return $_0 | 0; //@line 19848
 }
 $43 = $40; //@line 19850
 HEAP32[$32 >> 2] = $43; //@line 19851
 $45 = HEAP16[$35 >> 1] | 0; //@line 19853
 do {
  if (($trk | 0) == 0) {
   $47 = _malloc(8) | 0; //@line 19857
   if (($47 | 0) == 0) {
    $_0 = 1; //@line 19861
    return $_0 | 0; //@line 19864
   } else {
    HEAP16[$47 >> 1] = $45; //@line 19868
    HEAP16[$47 + 2 >> 1] = 0; //@line 19871
    HEAP32[$47 + 4 >> 2] = 0; //@line 19874
    $_012_i = $47; //@line 19876
    break;
   }
  } else {
   $_012_i = $trk; //@line 19880
  }
 } while (0);
 HEAP32[$43 + (($45 & 65535) << 2) >> 2] = $_012_i; //@line 19886
 HEAP16[$35 >> 1] = $45 + 1 & 65535; //@line 19888
 $_0 = 0; //@line 19890
 return $_0 | 0; //@line 19893
}
function _psi_img_get_cylinder($img, $c, $alloc) {
 $img = $img | 0;
 $c = $c | 0;
 $alloc = $alloc | 0;
 var $1 = 0, $3 = 0, $12 = 0, $15 = 0, $16 = 0, $20 = 0, $23 = 0, $24 = 0, $25 = 0, $35 = 0, $36 = 0, $_0 = 0, label = 0;
 $1 = $img | 0; //@line 19908
 $3 = HEAPU16[$1 >> 1] | 0; //@line 19910
 if ($3 >>> 0 > $c >>> 0) {
  $_0 = HEAP32[(HEAP32[$img + 4 >> 2] | 0) + ($c << 2) >> 2] | 0; //@line 19919
  return $_0 | 0; //@line 19922
 }
 if (($alloc | 0) == 0) {
  $_0 = 0; //@line 19927
  return $_0 | 0; //@line 19930
 }
 $12 = $img + 4 | 0; //@line 19932
 $16 = $3;
 $15 = HEAP32[$12 >> 2] | 0;
 while (1) {
  $20 = _realloc($15, ($16 << 2) + 4 | 0) | 0; //@line 19942
  if (($20 | 0) == 0) {
   $_0 = 0; //@line 19946
   label = 12225; //@line 19947
   break;
  }
  $23 = $20; //@line 19950
  HEAP32[$12 >> 2] = $23; //@line 19951
  $24 = HEAP16[$1 >> 1] | 0; //@line 19952
  $25 = _malloc(8) | 0; //@line 19953
  if (($25 | 0) == 0) {
   $_0 = 0; //@line 19957
   label = 12222; //@line 19958
   break;
  }
  HEAP16[$25 >> 1] = $24; //@line 19963
  HEAP16[$25 + 2 >> 1] = 0; //@line 19966
  HEAP32[$25 + 4 >> 2] = 0; //@line 19969
  HEAP32[$23 + (($24 & 65535) << 2) >> 2] = $25; //@line 19972
  $35 = $24 + 1 & 65535; //@line 19973
  HEAP16[$1 >> 1] = $35; //@line 19974
  $36 = $35 & 65535; //@line 19975
  if ($36 >>> 0 > $c >>> 0) {
   label = 12220; //@line 19979
   break;
  } else {
   $16 = $36;
   $15 = $23;
  }
 }
 if ((label | 0) == 12225) {
  return $_0 | 0; //@line 19988
 } else if ((label | 0) == 12222) {
  return $_0 | 0; //@line 19993
 } else if ((label | 0) == 12220) {
  $_0 = HEAP32[$23 + ($c << 2) >> 2] | 0; //@line 19999
  return $_0 | 0; //@line 20002
 }
 return 0;
}
function _psi_img_add_sector($img, $sct, $c, $h) {
 $img = $img | 0;
 $sct = $sct | 0;
 $c = $c | 0;
 $h = $h | 0;
 var $1 = 0, $4 = 0, $7 = 0, $12 = 0, $13 = 0, $16 = 0, $_0 = 0;
 $1 = _psi_img_get_track($img, $c, $h, 1) | 0; //@line 20017
 if (($1 | 0) == 0) {
  $_0 = 1; //@line 20021
  return $_0 | 0; //@line 20024
 }
 $4 = $1 + 4 | 0; //@line 20026
 $7 = $1 + 2 | 0; //@line 20029
 $12 = _realloc(HEAP32[$4 >> 2] | 0, ((HEAPU16[$7 >> 1] | 0) << 2) + 4 | 0) | 0; //@line 20034
 $13 = $12; //@line 20035
 if (($12 | 0) == 0) {
  $_0 = 1; //@line 20039
  return $_0 | 0; //@line 20042
 }
 HEAP32[$4 >> 2] = $13; //@line 20044
 $16 = HEAP16[$7 >> 1] | 0; //@line 20045
 HEAP32[$13 + (($16 & 65535) << 2) >> 2] = $sct; //@line 20048
 HEAP16[$7 >> 1] = $16 + 1 & 65535; //@line 20050
 $_0 = 0; //@line 20052
 return $_0 | 0; //@line 20055
}
function _psi_img_get_track($img, $c, $h, $alloc) {
 $img = $img | 0;
 $c = $c | 0;
 $h = $h | 0;
 $alloc = $alloc | 0;
 var $1 = 0, $3 = 0, $10 = 0, $13 = 0, $14 = 0, $18 = 0, $21 = 0, $22 = 0, $23 = 0, $33 = 0, $34 = 0, $_pn = 0, $_0_i = 0, $38 = 0, $40 = 0, $49 = 0, $52 = 0, $53 = 0, $57 = 0, $60 = 0, $61 = 0, $62 = 0, $72 = 0, $73 = 0, $_0 = 0, label = 0;
 $1 = $img | 0; //@line 20075
 $3 = HEAPU16[$1 >> 1] | 0; //@line 20077
 L15386 : do {
  if ($3 >>> 0 > $c >>> 0) {
   $_pn = HEAP32[$img + 4 >> 2] | 0; //@line 20085
  } else {
   if (($alloc | 0) == 0) {
    $_0 = 0; //@line 20090
    return $_0 | 0; //@line 20093
   }
   $10 = $img + 4 | 0; //@line 20095
   $14 = $3;
   $13 = HEAP32[$10 >> 2] | 0;
   while (1) {
    $18 = _realloc($13, ($14 << 2) + 4 | 0) | 0; //@line 20105
    if (($18 | 0) == 0) {
     $_0 = 0; //@line 20109
     label = 12255; //@line 20110
     break;
    }
    $21 = $18; //@line 20113
    HEAP32[$10 >> 2] = $21; //@line 20114
    $22 = HEAP16[$1 >> 1] | 0; //@line 20115
    $23 = _malloc(8) | 0; //@line 20116
    if (($23 | 0) == 0) {
     $_0 = 0; //@line 20120
     label = 12256; //@line 20121
     break;
    }
    HEAP16[$23 >> 1] = $22; //@line 20126
    HEAP16[$23 + 2 >> 1] = 0; //@line 20129
    HEAP32[$23 + 4 >> 2] = 0; //@line 20132
    HEAP32[$21 + (($22 & 65535) << 2) >> 2] = $23; //@line 20135
    $33 = $22 + 1 & 65535; //@line 20136
    HEAP16[$1 >> 1] = $33; //@line 20137
    $34 = $33 & 65535; //@line 20138
    if ($34 >>> 0 > $c >>> 0) {
     $_pn = $21; //@line 20142
     break L15386;
    } else {
     $14 = $34;
     $13 = $21;
    }
   }
   if ((label | 0) == 12255) {
    return $_0 | 0; //@line 20151
   } else if ((label | 0) == 12256) {
    return $_0 | 0; //@line 20156
   }
  }
 } while (0);
 $_0_i = HEAP32[$_pn + ($c << 2) >> 2] | 0; //@line 20162
 if (($_0_i | 0) == 0) {
  $_0 = 0; //@line 20166
  return $_0 | 0; //@line 20169
 }
 $38 = $_0_i + 2 | 0; //@line 20171
 $40 = HEAPU16[$38 >> 1] | 0; //@line 20173
 if ($40 >>> 0 > $h >>> 0) {
  $_0 = HEAP32[(HEAP32[$_0_i + 4 >> 2] | 0) + ($h << 2) >> 2] | 0; //@line 20182
  return $_0 | 0; //@line 20185
 }
 if (($alloc | 0) == 0) {
  $_0 = 0; //@line 20190
  return $_0 | 0; //@line 20193
 }
 $49 = $_0_i + 4 | 0; //@line 20195
 $53 = $40;
 $52 = HEAP32[$49 >> 2] | 0;
 while (1) {
  $57 = _realloc($52, ($53 << 2) + 4 | 0) | 0; //@line 20205
  if (($57 | 0) == 0) {
   $_0 = 0; //@line 20209
   label = 12259; //@line 20210
   break;
  }
  $60 = $57; //@line 20213
  HEAP32[$49 >> 2] = $60; //@line 20214
  $61 = HEAP16[$38 >> 1] | 0; //@line 20215
  $62 = _malloc(8) | 0; //@line 20216
  if (($62 | 0) == 0) {
   $_0 = 0; //@line 20220
   label = 12257; //@line 20221
   break;
  }
  HEAP16[$62 >> 1] = $61; //@line 20226
  HEAP16[$62 + 2 >> 1] = 0; //@line 20229
  HEAP32[$62 + 4 >> 2] = 0; //@line 20232
  HEAP32[$60 + (($61 & 65535) << 2) >> 2] = $62; //@line 20235
  $72 = $61 + 1 & 65535; //@line 20236
  HEAP16[$38 >> 1] = $72; //@line 20237
  $73 = $72 & 65535; //@line 20238
  if ($73 >>> 0 > $h >>> 0) {
   label = 12249; //@line 20242
   break;
  } else {
   $53 = $73;
   $52 = $60;
  }
 }
 if ((label | 0) == 12257) {
  return $_0 | 0; //@line 20251
 } else if ((label | 0) == 12259) {
  return $_0 | 0; //@line 20256
 } else if ((label | 0) == 12249) {
  $_0 = HEAP32[$60 + ($h << 2) >> 2] | 0; //@line 20262
  return $_0 | 0; //@line 20265
 }
 return 0;
}
function _psi_img_get_sector_count($img) {
 $img = $img | 0;
 var $2 = 0, $5 = 0, $6 = 0, $cnt_028 = 0, $c_027 = 0, $9 = 0, $11 = 0, $14 = 0, $15 = 0, $cnt_122 = 0, $h_021 = 0, $18 = 0, $20 = 0, $23 = 0, $24 = 0, $cnt_216 = 0, $s_015 = 0, $sct_012 = 0, $sct_014 = 0, $cnt_313 = 0, $29 = 0, $sct_0 = 0, $cnt_3_lcssa = 0, $31 = 0, $cnt_2_lcssa = 0, $33 = 0, $cnt_1_lcssa = 0, $35 = 0, $cnt_0_lcssa = 0;
 $2 = HEAP16[$img >> 1] | 0; //@line 20281
 if ($2 << 16 >> 16 == 0) {
  $cnt_0_lcssa = 0; //@line 20285
  return $cnt_0_lcssa | 0; //@line 20288
 }
 $5 = HEAP32[$img + 4 >> 2] | 0; //@line 20291
 $6 = $2 & 65535; //@line 20292
 $c_027 = 0;
 $cnt_028 = 0;
 while (1) {
  $9 = HEAP32[$5 + ($c_027 << 2) >> 2] | 0; //@line 20299
  $11 = HEAP16[$9 + 2 >> 1] | 0; //@line 20301
  if ($11 << 16 >> 16 == 0) {
   $cnt_1_lcssa = $cnt_028; //@line 20305
  } else {
   $14 = HEAP32[$9 + 4 >> 2] | 0; //@line 20308
   $15 = $11 & 65535; //@line 20309
   $h_021 = 0;
   $cnt_122 = $cnt_028;
   while (1) {
    $18 = HEAP32[$14 + ($h_021 << 2) >> 2] | 0; //@line 20316
    $20 = HEAP16[$18 + 2 >> 1] | 0; //@line 20318
    if ($20 << 16 >> 16 == 0) {
     $cnt_2_lcssa = $cnt_122; //@line 20322
    } else {
     $23 = HEAP32[$18 + 4 >> 2] | 0; //@line 20325
     $24 = $20 & 65535; //@line 20326
     $s_015 = 0;
     $cnt_216 = $cnt_122;
     while (1) {
      $sct_012 = HEAP32[$23 + ($s_015 << 2) >> 2] | 0; //@line 20333
      if (($sct_012 | 0) == 0) {
       $cnt_3_lcssa = $cnt_216; //@line 20337
      } else {
       $cnt_313 = $cnt_216;
       $sct_014 = $sct_012;
       while (1) {
        $29 = $cnt_313 + 1 | 0; //@line 20344
        $sct_0 = HEAP32[$sct_014 >> 2] | 0; //@line 20345
        if (($sct_0 | 0) == 0) {
         $cnt_3_lcssa = $29; //@line 20349
         break;
        } else {
         $cnt_313 = $29;
         $sct_014 = $sct_0;
        }
       }
      }
      $31 = $s_015 + 1 | 0; //@line 20357
      if ($31 >>> 0 < $24 >>> 0) {
       $s_015 = $31;
       $cnt_216 = $cnt_3_lcssa;
      } else {
       $cnt_2_lcssa = $cnt_3_lcssa; //@line 20363
       break;
      }
     }
    }
    $33 = $h_021 + 1 | 0; //@line 20369
    if ($33 >>> 0 < $15 >>> 0) {
     $h_021 = $33;
     $cnt_122 = $cnt_2_lcssa;
    } else {
     $cnt_1_lcssa = $cnt_2_lcssa; //@line 20375
     break;
    }
   }
  }
  $35 = $c_027 + 1 | 0; //@line 20381
  if ($35 >>> 0 < $6 >>> 0) {
   $c_027 = $35;
   $cnt_028 = $cnt_1_lcssa;
  } else {
   $cnt_0_lcssa = $cnt_1_lcssa; //@line 20387
   break;
  }
 }
 return $cnt_0_lcssa | 0; //@line 20393
}
function _psi_img_map_sector($img, $idx, $pc, $ph, $ps) {
 $img = $img | 0;
 $idx = $idx | 0;
 $pc = $pc | 0;
 $ph = $ph | 0;
 $ps = $ps | 0;
 var $2 = 0, $5 = 0, $_02336 = 0, $i_034 = 0, $8 = 0, $10 = 0, $13 = 0, $_129 = 0, $j_028 = 0, $16 = 0, $17 = 0, $19 = 0, $22 = 0, $25 = 0, $28 = 0, $k_024 = 0, $34 = 0, $35 = 0, $40 = 0, $41 = 0, $_1_lcssa = 0, $44 = 0, $_0 = 0, label = 0;
 $2 = HEAP16[$img >> 1] | 0; //@line 20412
 if ($2 << 16 >> 16 == 0) {
  $_0 = 1; //@line 20416
  return $_0 | 0; //@line 20419
 }
 $5 = HEAP32[$img + 4 >> 2] | 0; //@line 20422
 $i_034 = 0;
 $_02336 = $idx;
 L15444 : while (1) {
  $8 = HEAP32[$5 + ($i_034 << 2) >> 2] | 0; //@line 20429
  $10 = HEAP16[$8 + 2 >> 1] | 0; //@line 20431
  if ($10 << 16 >> 16 == 0) {
   $_1_lcssa = $_02336; //@line 20435
  } else {
   $13 = HEAP32[$8 + 4 >> 2] | 0; //@line 20438
   $j_028 = 0;
   $_129 = $_02336;
   while (1) {
    $16 = HEAP32[$13 + ($j_028 << 2) >> 2] | 0; //@line 20445
    $17 = $16 + 2 | 0; //@line 20446
    $19 = HEAPU16[$17 >> 1] | 0; //@line 20448
    if ($_129 >>> 0 < $19 >>> 0) {
     break L15444;
    }
    $40 = $_129 - $19 | 0; //@line 20454
    $41 = $j_028 + 1 | 0; //@line 20455
    if ($41 >>> 0 < ($10 & 65535) >>> 0) {
     $j_028 = $41;
     $_129 = $40;
    } else {
     $_1_lcssa = $40; //@line 20462
     break;
    }
   }
  }
  $44 = $i_034 + 1 | 0; //@line 20468
  if ($44 >>> 0 < ($2 & 65535) >>> 0) {
   $i_034 = $44;
   $_02336 = $_1_lcssa;
  } else {
   $_0 = 1; //@line 20475
   label = 12289; //@line 20476
   break;
  }
 }
 if ((label | 0) == 12289) {
  return $_0 | 0; //@line 20483
 }
 $22 = _psi_trk_get_indexed_sector($16, $_129, 0) | 0; //@line 20485
 if (($22 | 0) == 0) {
  $_0 = 1; //@line 20489
  return $_0 | 0; //@line 20492
 }
 HEAP32[$pc >> 2] = $i_034; //@line 20494
 HEAP32[$ph >> 2] = $j_028; //@line 20495
 HEAP32[$ps >> 2] = 0; //@line 20496
 $25 = $16 + 4 | 0; //@line 20497
 if ((HEAP16[$17 >> 1] | 0) == 0) {
  $_0 = 1; //@line 20502
  return $_0 | 0; //@line 20505
 } else {
  $k_024 = 0;
  $28 = 0;
 }
 while (1) {
  if ((HEAP32[(HEAP32[$25 >> 2] | 0) + ($k_024 << 2) >> 2] | 0) == ($22 | 0)) {
   $_0 = 0; //@line 20518
   label = 12287; //@line 20519
   break;
  }
  $34 = $28 + 1 | 0; //@line 20522
  HEAP32[$ps >> 2] = $34; //@line 20523
  $35 = $k_024 + 1 | 0; //@line 20524
  if ($35 >>> 0 < (HEAPU16[$17 >> 1] | 0) >>> 0) {
   $k_024 = $35;
   $28 = $34;
  } else {
   $_0 = 1; //@line 20532
   label = 12288; //@line 20533
   break;
  }
 }
 if ((label | 0) == 12288) {
  return $_0 | 0; //@line 20540
 } else if ((label | 0) == 12287) {
  return $_0 | 0; //@line 20545
 }
 return 0;
}
function _psi_img_add_comment($img, $buf, $cnt) {
 $img = $img | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 var $1 = 0, $3 = 0, $6 = 0, $9 = 0, $10 = 0, $_0 = 0;
 $1 = $img + 12 | 0; //@line 20558
 $3 = $img + 8 | 0; //@line 20560
 $6 = _realloc(HEAP32[$1 >> 2] | 0, (HEAP32[$3 >> 2] | 0) + $cnt | 0) | 0; //@line 20563
 if (($6 | 0) == 0) {
  $_0 = 1; //@line 20567
  return $_0 | 0; //@line 20570
 }
 $9 = HEAP32[$3 >> 2] | 0; //@line 20572
 $10 = $6 + $9 | 0; //@line 20573
 _memcpy($10 | 0, $buf | 0, $cnt) | 0; //@line 20574
 HEAP32[$3 >> 2] = $9 + $cnt; //@line 20576
 HEAP32[$1 >> 2] = $6; //@line 20577
 $_0 = 0; //@line 20579
 return $_0 | 0; //@line 20582
}
function _psi_img_set_comment($img, $buf, $cnt) {
 $img = $img | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 var $1 = 0, $3 = 0, $7 = 0, $10 = 0, $11 = 0, $_0 = 0;
 $1 = $img + 12 | 0; //@line 20594
 _free(HEAP32[$1 >> 2] | 0); //@line 20596
 $3 = $img + 8 | 0; //@line 20597
 HEAP32[$3 >> 2] = 0; //@line 20598
 HEAP32[$1 >> 2] = 0; //@line 20599
 if (($buf | 0) == 0 | ($cnt | 0) == 0) {
  $_0 = 0; //@line 20605
  return $_0 | 0; //@line 20608
 }
 $7 = _realloc(0, $cnt) | 0; //@line 20610
 if (($7 | 0) == 0) {
  $_0 = 1; //@line 20614
  return $_0 | 0; //@line 20617
 }
 $10 = HEAP32[$3 >> 2] | 0; //@line 20619
 $11 = $7 + $10 | 0; //@line 20620
 _memcpy($11 | 0, $buf | 0, $cnt) | 0; //@line 20621
 HEAP32[$3 >> 2] = $10 + $cnt; //@line 20623
 HEAP32[$1 >> 2] = $7; //@line 20624
 $_0 = 0; //@line 20626
 return $_0 | 0; //@line 20629
}
function _psi_img_clean_comment($img) {
 $img = $img | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $i_0 = 0, $i_135 = 0, $j_034 = 0, $13 = 0, $15 = 0, $17 = 0, $j_1 = 0, $i_2 = 0, $29 = 0, $j_2 = 0, $33 = 0, label = 0;
 $1 = $img + 8 | 0; //@line 20642
 $2 = HEAP32[$1 >> 2] | 0; //@line 20643
 $3 = $img + 12 | 0; //@line 20644
 $4 = HEAP32[$3 >> 2] | 0; //@line 20645
 $i_0 = 0; //@line 20647
 while (1) {
  if ($i_0 >>> 0 >= $2 >>> 0) {
   $j_2 = 0; //@line 20653
   break;
  }
  if ((HEAP8[$4 + $i_0 | 0] | 0) == 10) {
   $i_0 = $i_0 + 1 | 0; //@line 20661
  } else {
   $j_034 = 0;
   $i_135 = $i_0;
   label = 12307; //@line 20664
   break;
  }
 }
 if ((label | 0) == 12307) {
  while (1) {
   label = 0; //@line 20670
   $13 = HEAP8[$4 + $i_135 | 0] | 0; //@line 20674
   do {
    if (($13 << 24 >> 24 | 0) == 13) {
     $15 = $j_034 + 1 | 0; //@line 20677
     HEAP8[$4 + $j_034 | 0] = 10; //@line 20679
     $17 = $i_135 + 1 | 0; //@line 20680
     if ($17 >>> 0 >= $2 >>> 0) {
      $i_2 = $i_135;
      $j_1 = $15;
      break;
     }
     $i_2 = (HEAP8[$4 + $17 | 0] | 0) == 10 ? $17 : $i_135;
     $j_1 = $15;
    } else if (($13 << 24 >> 24 | 0) == 0) {
     HEAP8[$4 + $j_034 | 0] = 10; //@line 20696
     $i_2 = $i_135;
     $j_1 = $j_034 + 1 | 0;
    } else {
     HEAP8[$4 + $j_034 | 0] = $13; //@line 20702
     $i_2 = $i_135;
     $j_1 = $j_034 + 1 | 0;
    }
   } while (0);
   $29 = $i_2 + 1 | 0; //@line 20708
   if ($29 >>> 0 < $2 >>> 0) {
    $j_034 = $j_1;
    $i_135 = $29;
    label = 12307; //@line 20713
   } else {
    $j_2 = $j_1; //@line 20715
    break;
   }
  }
 }
 while (1) {
  if (($j_2 | 0) == 0) {
   label = 12316; //@line 20725
   break;
  }
  $33 = $j_2 - 1 | 0; //@line 20728
  if ((HEAP8[$4 + $33 | 0] | 0) == 10) {
   $j_2 = $33; //@line 20733
  } else {
   label = 12315; //@line 20735
   break;
  }
 }
 if ((label | 0) == 12315) {
  HEAP32[$1 >> 2] = $j_2; //@line 20740
  return;
 } else if ((label | 0) == 12316) {
  HEAP32[$1 >> 2] = 0; //@line 20746
  _free(HEAP32[$3 >> 2] | 0); //@line 20748
  HEAP32[$3 >> 2] = 0; //@line 20749
  return;
 }
}
function _psi_load_anadisk($fp) {
 $fp = $fp | 0;
 var $buf_i = 0, $1 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $13 = 0, $15 = 0, $16 = 0, $22 = 0, $29 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 20765
 STACKTOP = STACKTOP + 8 | 0; //@line 20765
 $buf_i = sp | 0; //@line 20766
 $1 = _psi_img_new() | 0; //@line 20767
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 20771
  STACKTOP = sp; //@line 20773
  return $_0 | 0; //@line 20774
 }
 $4 = $buf_i | 0; //@line 20776
 $5 = $buf_i + 1 | 0; //@line 20777
 $6 = $buf_i + 7 | 0; //@line 20778
 $7 = $buf_i + 6 | 0; //@line 20779
 $8 = $buf_i + 2 | 0; //@line 20780
 $9 = $buf_i + 3 | 0; //@line 20781
 $10 = $buf_i + 4 | 0; //@line 20782
 $11 = $buf_i + 5 | 0; //@line 20783
 do {
  $13 = _fread($4 | 0, 1, 8, $fp | 0) | 0; //@line 20786
  if (($13 | 0) == 0) {
   $_0 = $1; //@line 20788
   label = 12331; //@line 20789
   break;
  } else if (($13 | 0) != 8) {
   break;
  }
  $15 = HEAP8[$4] | 0; //@line 20794
  $16 = HEAP8[$5] | 0; //@line 20795
  $22 = (HEAPU8[$6] | 0) << 8 | (HEAPU8[$7] | 0); //@line 20801
  $29 = _psi_sct_new(HEAPU8[$8] | 0, HEAPU8[$9] | 0, HEAPU8[$10] | 0, $22) | 0; //@line 20808
  if (($29 | 0) == 0) {
   break;
  }
  _psi_sct_set_mfm_size($29, HEAP8[$11] | 0); //@line 20817
  if ((_psi_img_add_sector($1, $29, $15 & 255, $16 & 255) | 0) != 0) {
   label = 12325; //@line 20822
   break;
  }
 } while ((_fread(HEAP32[$29 + 24 >> 2] | 0, 1, $22 | 0, $fp | 0) | 0) == ($22 | 0));
 if ((label | 0) == 12325) {
  _psi_sct_del($29); //@line 20835
 } else if ((label | 0) == 12331) {
  STACKTOP = sp; //@line 20840
  return $_0 | 0; //@line 20841
 }
 _psi_img_del($1); //@line 20843
 $_0 = 0; //@line 20845
 STACKTOP = sp; //@line 20847
 return $_0 | 0; //@line 20848
}
function _psi_save_anadisk($fp, $img) {
 $fp = $fp | 0;
 $img = $img | 0;
 var $buf_i = 0, $1 = 0, $2 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $c_016 = 0, $16 = 0, $17 = 0, $20 = 0, $21 = 0, $h_015 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $s_0 = 0, $35 = 0, $36 = 0, $47 = 0, $48 = 0, $58 = 0, $68 = 0, $69 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 20866
 STACKTOP = STACKTOP + 8 | 0; //@line 20866
 $buf_i = sp | 0; //@line 20867
 $1 = $img | 0; //@line 20868
 $2 = HEAP16[$1 >> 1] | 0; //@line 20869
 L15515 : do {
  if ($2 << 16 >> 16 != 0) {
   $4 = $img + 4 | 0; //@line 20874
   $5 = $buf_i | 0; //@line 20875
   $6 = $buf_i + 1 | 0; //@line 20876
   $7 = $buf_i + 2 | 0; //@line 20877
   $8 = $buf_i + 3 | 0; //@line 20878
   $9 = $buf_i + 4 | 0; //@line 20879
   $10 = $buf_i + 5 | 0; //@line 20880
   $11 = $buf_i + 6 | 0; //@line 20881
   $12 = $buf_i + 7 | 0; //@line 20882
   $c_016 = 0;
   $13 = $2;
   L15517 : while (1) {
    $16 = HEAP32[(HEAP32[$4 >> 2] | 0) + ($c_016 << 2) >> 2] | 0; //@line 20890
    $17 = $16 + 2 | 0; //@line 20891
    if ((HEAP16[$17 >> 1] | 0) == 0) {
     $68 = $13; //@line 20896
    } else {
     $20 = $16 + 4 | 0; //@line 20898
     $21 = $c_016 & 255; //@line 20899
     $h_015 = 0; //@line 20901
     do {
      $24 = HEAP32[(HEAP32[$20 >> 2] | 0) + ($h_015 << 2) >> 2] | 0; //@line 20906
      $25 = $24 + 2 | 0; //@line 20907
      $26 = $24 + 4 | 0; //@line 20908
      $27 = $h_015 & 255; //@line 20909
      $s_0 = 0; //@line 20911
      while (1) {
       if ($s_0 >>> 0 >= (HEAPU16[$25 >> 1] | 0) >>> 0) {
        break;
       }
       $35 = HEAP32[(HEAP32[$26 >> 2] | 0) + ($s_0 << 2) >> 2] | 0; //@line 20923
       $36 = _psi_sct_get_mfm_size($35) | 0; //@line 20924
       HEAP8[$5] = $21; //@line 20925
       HEAP8[$6] = $27; //@line 20926
       HEAP8[$7] = HEAP16[$35 + 4 >> 1] & 255; //@line 20930
       HEAP8[$8] = HEAP16[$35 + 6 >> 1] & 255; //@line 20934
       HEAP8[$9] = HEAP16[$35 + 8 >> 1] & 255; //@line 20938
       HEAP8[$10] = $36 & 255; //@line 20940
       $47 = $35 + 10 | 0; //@line 20941
       $48 = HEAP16[$47 >> 1] | 0; //@line 20942
       HEAP8[$11] = $48 & 255; //@line 20944
       HEAP8[$12] = ($48 & 65535) >>> 8 & 255; //@line 20947
       if ((_fwrite($5 | 0, 1, 8, $fp | 0) | 0) != 8) {
        $_0 = 1; //@line 20952
        label = 12346; //@line 20953
        break L15517;
       }
       $58 = _fwrite(HEAP32[$35 + 24 >> 2] | 0, 1, HEAPU16[$47 >> 1] | 0, $fp | 0) | 0; //@line 20960
       if (($58 | 0) == (HEAPU16[$47 >> 1] | 0)) {
        $s_0 = $s_0 + 1 | 0; //@line 20967
       } else {
        $_0 = 1; //@line 20969
        label = 12347; //@line 20970
        break L15517;
       }
      }
      $h_015 = $h_015 + 1 | 0; //@line 20974
     } while ($h_015 >>> 0 < (HEAPU16[$17 >> 1] | 0) >>> 0);
     $68 = HEAP16[$1 >> 1] | 0; //@line 20987
    }
    $69 = $c_016 + 1 | 0; //@line 20990
    if ($69 >>> 0 < ($68 & 65535) >>> 0) {
     $c_016 = $69;
     $13 = $68;
    } else {
     break L15515;
    }
   }
   if ((label | 0) == 12347) {
    STACKTOP = sp; //@line 21002
    return $_0 | 0; //@line 21003
   } else if ((label | 0) == 12346) {
    STACKTOP = sp; //@line 21007
    return $_0 | 0; //@line 21008
   }
  }
 } while (0);
 _fflush($fp | 0) | 0; //@line 21012
 $_0 = 0; //@line 21014
 STACKTOP = sp; //@line 21016
 return $_0 | 0; //@line 21017
}
function _psi_save_cp2($fp, $img) {
 $fp = $fp | 0;
 $img = $img | 0;
 return 1; //@line 21027
}
function _psi_load_cp2($fp) {
 $fp = $fp | 0;
 var $buf_i_i_i = 0, $buf_i4_i = 0, $buf_i_i = 0, $1 = 0, $4 = 0, $10 = 0, $12 = 0, $i_0_i_i = 0, $22 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $40 = 0, $43 = 0, $52 = 0, $_pre_i_i = 0, $54 = 0, $55 = 0, $ofs1_033_i_i = 0, $60 = 0, $61 = 0, $63 = 0, $72 = 0, $i_03_i_i_i = 0, $sh_01_i_i_i = 0, $74 = 0, $75 = 0, $79 = 0, $82 = 0, $83 = 0, $106 = 0, $109 = 0, $111 = 0, $i_030_i_i_i_i = 0, $130 = 0, $ssize_0_i_i_i = 0, $146 = 0, $159 = 0, $166 = 0, $178 = 0, $183 = 0, $185 = 0, $_pre7_i_pre_phi_i_i = 0, $203 = 0, $208 = 0, $215 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 21059
 STACKTOP = STACKTOP + 432 | 0; //@line 21059
 $buf_i_i_i = sp | 0; //@line 21060
 $buf_i4_i = sp + 8 | 0; //@line 21061
 $buf_i_i = sp + 400 | 0; //@line 21062
 $1 = _psi_img_new() | 0; //@line 21063
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 21067
  STACKTOP = sp; //@line 21069
  return $_0 | 0; //@line 21070
 }
 $4 = $buf_i_i | 0; //@line 21072
 L15540 : do {
  if ((_psi_read_ofs($fp, 0, $4, 30) | 0) == 0) {
   if ((_memcmp($4 | 0, 6736, 16) | 0) != 0) {
    $12 = HEAP32[_stderr >> 2] | 0; //@line 21082
    _fwrite(36640, 20, 1, $12 | 0) | 0; //@line 21083
    break;
   }
   $10 = $buf_i_i + 16 | 0; //@line 21087
   $i_0_i_i = 0; //@line 21089
   while (1) {
    if (($i_0_i_i | 0) == 5) {
     label = 12356; //@line 21095
     break;
    }
    if ((_memcmp($10 | 0, HEAP32[6712 + ($i_0_i_i << 2) >> 2] | 0, 14) | 0) == 0) {
     label = 12357; //@line 21105
     break;
    } else {
     $i_0_i_i = $i_0_i_i + 1 | 0; //@line 21108
    }
   }
   if ((label | 0) == 12356) {
    $22 = HEAP32[_stderr >> 2] | 0; //@line 21112
    _fwrite(33640, 34, 1, $22 | 0) | 0; //@line 21113
    $24 = $22; //@line 21115
   } else if ((label | 0) == 12357) {
    $24 = HEAP32[_stderr >> 2] | 0; //@line 21119
   }
   $25 = $buf_i4_i | 0; //@line 21122
   $26 = $buf_i_i_i | 0; //@line 21123
   $27 = $buf_i_i_i + 1 | 0; //@line 21124
   $28 = $buf_i4_i + 3 | 0; //@line 21125
   $29 = $buf_i4_i + 2 | 0; //@line 21126
   $30 = $buf_i4_i + 1 | 0; //@line 21127
   $31 = 30; //@line 21129
   L15552 : while (1) {
    if ((_psi_read_ofs($fp, $31, $26, 2) | 0) != 0) {
     $_0 = $1; //@line 21136
     label = 12410; //@line 21137
     break;
    }
    $40 = HEAPU8[$27] << 8 | HEAPU8[$26]; //@line 21145
    if (($40 | 0) == 0) {
     $_0 = $1; //@line 21149
     label = 12414; //@line 21150
     break;
    }
    $43 = $31 + 2 | 0; //@line 21153
    if ((_psi_read_ofs($fp, $40 + $43 | 0, $26, 2) | 0) != 0) {
     break L15540;
    }
    $52 = HEAPU8[$27] << 8 | HEAPU8[$26]; //@line 21166
    $_pre_i_i = $40 + 4 | 0; //@line 21168
    if ($40 >>> 0 >= 387) {
     $54 = $_pre_i_i + $31 | 0; //@line 21171
     $ofs1_033_i_i = 0;
     $55 = 387;
     while (1) {
      if ((_psi_read_ofs($fp, $ofs1_033_i_i + $43 | 0, $25, 387) | 0) != 0) {
       break L15540;
      }
      $60 = HEAP8[$29] | 0; //@line 21184
      $61 = $60 & 255; //@line 21185
      if ($60 << 24 >> 24 != 0) {
       if (($60 & 255) > 24) {
        break L15540;
       }
       $72 = _psi_img_get_track($1, HEAPU8[$25] | 0, HEAPU8[$30] | 0, 1) | 0; //@line 21198
       if (($72 | 0) == 0) {
        break L15540;
       } else {
        $sh_01_i_i_i = $28;
        $i_03_i_i_i = 0;
       }
       while (1) {
        $74 = $i_03_i_i_i + 1 | 0; //@line 21209
        $75 = $sh_01_i_i_i + 9 | 0; //@line 21210
        $79 = $sh_01_i_i_i + 8 | 0; //@line 21214
        $82 = HEAPU8[$75] << 8 | HEAPU8[$79]; //@line 21217
        $83 = $sh_01_i_i_i + 2 | 0; //@line 21218
        do {
         if ((HEAP8[$83] & -106) << 24 >> 24 == 0) {
          if ((HEAP8[$sh_01_i_i_i + 10 | 0] | 0) != 0) {
           label = 12375; //@line 21230
           break;
          }
          if ((HEAP8[$sh_01_i_i_i + 11 | 0] | 0) != 0) {
           label = 12375; //@line 21238
           break;
          }
          if ((HEAP8[$sh_01_i_i_i + 14 | 0] & 127) != 0) {
           label = 12375; //@line 21247
           break;
          }
          if ((HEAP8[$sh_01_i_i_i + 15 | 0] | 0) != 0) {
           label = 12375; //@line 21255
           break;
          }
          $106 = HEAP8[$sh_01_i_i_i + 7 | 0] | 0; //@line 21259
          if (($106 & 255) < 7 & $82 >>> 0 > 5804) {
           $130 = $106; //@line 21265
          } else {
           label = 12375; //@line 21267
          }
         } else {
          label = 12375; //@line 21270
         }
        } while (0);
        if ((label | 0) == 12375) {
         label = 0; //@line 21274
         $109 = HEAPU8[$25] | 0; //@line 21276
         $111 = HEAPU8[$30] | 0; //@line 21278
         _fprintf($24 | 0, 56592, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = $109, HEAP32[tempInt + 8 >> 2] = $111, HEAP32[tempInt + 16 >> 2] = $74, tempInt) | 0) | 0; //@line 21279
         $i_030_i_i_i_i = 0; //@line 21281
         do {
          do {
           if (($i_030_i_i_i_i | 0) == 8) {
            _fwrite(50080, 2, 1, $24 | 0) | 0; //@line 21288
           } else {
            if (($i_030_i_i_i_i & 3 | 0) != 0) {
             break;
            }
            _fputc(32, $24 | 0) | 0; //@line 21297
           }
          } while (0);
          _fprintf($24 | 0, 42680, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAPU8[$sh_01_i_i_i + $i_030_i_i_i_i | 0] | 0, tempInt) | 0) | 0; //@line 21304
          $i_030_i_i_i_i = $i_030_i_i_i_i + 1 | 0; //@line 21305
         } while ($i_030_i_i_i_i >>> 0 < 16);
         _fputc(10, $24 | 0) | 0; //@line 21314
         _fflush($24 | 0) | 0; //@line 21315
         $130 = HEAP8[$sh_01_i_i_i + 7 | 0] | 0; //@line 21319
        }
        if (($130 & 255) < 7) {
         $ssize_0_i_i_i = 128 << ($130 & 255); //@line 21329
        } else {
         $ssize_0_i_i_i = 0; //@line 21331
        }
        $146 = _psi_sct_new(HEAPU8[$sh_01_i_i_i + 4 | 0] | 0, HEAPU8[$sh_01_i_i_i + 5 | 0] | 0, HEAPU8[$sh_01_i_i_i + 6 | 0] | 0, $ssize_0_i_i_i) | 0; //@line 21343
        if (($146 | 0) == 0) {
         break L15540;
        }
        _psi_sct_set_mfm_size($146, HEAP8[$sh_01_i_i_i + 7 | 0] | 0); //@line 21350
        if ((_psi_trk_add_sector($72, $146) | 0) != 0) {
         label = 12386; //@line 21355
         break L15552;
        }
        $159 = HEAPU8[$75] << 8 | HEAPU8[$79]; //@line 21363
        do {
         if ((HEAP8[$sh_01_i_i_i + 14 | 0] & 50) == 0) {
          $166 = $sh_01_i_i_i + 3 | 0; //@line 21371
          if ((HEAP8[$166] & 1) != 0) {
           _psi_sct_fill($146, 0); //@line 21377
           $_pre7_i_pre_phi_i_i = $166; //@line 21379
           break;
          }
          if (($ssize_0_i_i_i - 256 | 0) >>> 0 > 3840) {
           _psi_sct_fill($146, 0); //@line 21386
           $_pre7_i_pre_phi_i_i = $166; //@line 21388
           break;
          }
          if ($159 >>> 0 < 5805) {
           _psi_sct_fill($146, 0); //@line 21394
           $_pre7_i_pre_phi_i_i = $166; //@line 21396
           break;
          }
          $178 = $159 - 5805 | 0; //@line 21399
          if (($178 + $ssize_0_i_i_i | 0) >>> 0 > $52 >>> 0) {
           $183 = HEAPU8[$25] | 0; //@line 21405
           $185 = HEAPU8[$30] | 0; //@line 21407
           _fprintf($24 | 0, 53448, (tempInt = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempInt >> 2] = $183, HEAP32[tempInt + 8 >> 2] = $185, HEAP32[tempInt + 16 >> 2] = $74, HEAP32[tempInt + 24 >> 2] = $ssize_0_i_i_i, tempInt) | 0) | 0; //@line 21408
           _psi_sct_fill($146, 0); //@line 21409
           $_pre7_i_pre_phi_i_i = $166; //@line 21411
           break;
          } else {
           if ((_psi_read_ofs($fp, $54 + $178 | 0, HEAP32[$146 + 24 >> 2] | 0, $ssize_0_i_i_i) | 0) == 0) {
            $_pre7_i_pre_phi_i_i = $166; //@line 21421
            break;
           } else {
            break L15540;
           }
          }
         } else {
          _psi_sct_fill($146, 0); //@line 21428
          $_pre7_i_pre_phi_i_i = $sh_01_i_i_i + 3 | 0; //@line 21431
         }
        } while (0);
        do {
         if ((HEAP8[$83] & 32) != 0) {
          if ((HEAP8[$_pre7_i_pre_phi_i_i] & 32) == 0) {
           _psi_sct_set_flags($146, 1, 1); //@line 21446
           break;
          } else {
           _psi_sct_set_flags($146, 2, 1); //@line 21449
           break;
          }
         }
        } while (0);
        $203 = HEAP8[$_pre7_i_pre_phi_i_i] | 0; //@line 21455
        if (($203 & 1) == 0) {
         $208 = $203; //@line 21460
        } else {
         _psi_sct_set_flags($146, 8, 1); //@line 21462
         $208 = HEAP8[$_pre7_i_pre_phi_i_i] | 0; //@line 21465
        }
        if (($208 & 64) != 0) {
         _psi_sct_set_flags($146, 4, 1); //@line 21472
        }
        if ($74 >>> 0 < $61 >>> 0) {
         $sh_01_i_i_i = $sh_01_i_i_i + 16 | 0;
         $i_03_i_i_i = $74;
        } else {
         break;
        }
       }
      }
      $63 = $55 + 387 | 0; //@line 21485
      if ($63 >>> 0 > $40 >>> 0) {
       break;
      } else {
       $ofs1_033_i_i = $55;
       $55 = $63;
      }
     }
    }
    $215 = $52 + $_pre_i_i | 0; //@line 21495
    if (($215 | 0) == 0) {
     $_0 = $1; //@line 21500
     label = 12411; //@line 21501
     break;
    } else {
     $31 = $215 + $31 | 0; //@line 21504
    }
   }
   if ((label | 0) == 12386) {
    _psi_sct_del($146); //@line 21508
    break;
   } else if ((label | 0) == 12410) {
    STACKTOP = sp; //@line 21514
    return $_0 | 0; //@line 21515
   } else if ((label | 0) == 12411) {
    STACKTOP = sp; //@line 21519
    return $_0 | 0; //@line 21520
   } else if ((label | 0) == 12414) {
    STACKTOP = sp; //@line 21524
    return $_0 | 0; //@line 21525
   }
  }
 } while (0);
 _psi_img_del($1); //@line 21529
 $_0 = 0; //@line 21531
 STACKTOP = sp; //@line 21533
 return $_0 | 0; //@line 21534
}
function _psi_load_dc42($fp) {
 $fp = $fp | 0;
 var $buf_i_i = 0, $check_i = 0, $buf_i = 0, $1 = 0, $5 = 0, $10 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $r_0_i = 0, $36 = 0, $41 = 0, $42 = 0, $43 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $_02440_i_i = 0, $c_038_i_i = 0, $61 = 0, $62 = 0, $63 = 0, $65 = 0, $66 = 0, $67 = 0, $_132_i_i = 0, $h_031_i_i = 0, $71 = 0, $74 = 0, $76 = 0, $_229_i_i = 0, $s_028_i_i = 0, $77 = 0, $93 = 0, $103 = 0, $113 = 0, $123 = 0, $133 = 0, $143 = 0, $146 = 0, $148 = 0, $149 = 0, $150 = 0, $155 = 0, $156 = 0, $_2_lcssa_i_i = 0, $157 = 0, $161 = 0, $162 = 0, $_1_lcssa_i_i = 0, $163 = 0, $166 = 0, $_024_lcssa_i_i = 0, $170 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 21563
 STACKTOP = STACKTOP + 152 | 0; //@line 21563
 $buf_i_i = sp | 0; //@line 21564
 $check_i = sp + 16 | 0; //@line 21565
 $buf_i = sp + 24 | 0; //@line 21566
 $1 = _psi_img_new() | 0; //@line 21567
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 21571
  STACKTOP = sp; //@line 21573
  return $_0 | 0; //@line 21574
 }
 $5 = $buf_i | 0; //@line 21577
 L15630 : do {
  if ((_psi_read($fp, $5, 84) | 0) == 0) {
   $10 = (_psi_get_uint16_be($5, 82) | 0) != 256; //@line 21584
   if ($10 | (HEAPU8[$5] | 0) > 63) {
    break;
   }
   $14 = _psi_get_uint32_be($5, 64) | 0; //@line 21592
   $15 = _psi_get_uint32_be($5, 68) | 0; //@line 21593
   $16 = _psi_get_uint32_be($5, 72) | 0; //@line 21594
   $17 = _psi_get_uint32_be($5, 76) | 0; //@line 21595
   $19 = HEAP8[$buf_i + 81 | 0] | 0; //@line 21597
   if (($14 | 0) == 737280) {
    $r_0_i = _dc42_load_mfm($fp, $1, 9, $check_i) | 0; //@line 21601
   } else if (($14 | 0) == 819200) {
    $r_0_i = _dc42_load_gcr($fp, $1, 2, $check_i, $19 & 255) | 0; //@line 21606
   } else if (($14 | 0) == 409600) {
    $r_0_i = _dc42_load_gcr($fp, $1, 1, $check_i, $19 & 255) | 0; //@line 21611
   } else if (($14 | 0) == 1474560) {
    $r_0_i = _dc42_load_mfm($fp, $1, 18, $check_i) | 0; //@line 21615
   } else {
    break;
   }
   if (($r_0_i | 0) != 0) {
    break;
   }
   if (($16 | 0) != (HEAP32[$check_i >> 2] | 0)) {
    $36 = HEAP32[_stderr >> 2] | 0; //@line 21629
    _fwrite(50024, 26, 1, $36 | 0) | 0; //@line 21630
    break;
   }
   if (($15 | 0) == 0) {
    $_0 = $1; //@line 21637
    STACKTOP = sp; //@line 21639
    return $_0 | 0; //@line 21640
   }
   $41 = $buf_i_i | 0; //@line 21642
   HEAP32[$check_i >> 2] = 0; //@line 21643
   $42 = $1 | 0; //@line 21644
   $43 = HEAP16[$42 >> 1] | 0; //@line 21645
   if ($43 << 16 >> 16 == 0) {
    $_024_lcssa_i_i = $15;
    $166 = 0;
   } else {
    $45 = $1 + 4 | 0; //@line 21651
    $46 = $buf_i_i + 1 | 0; //@line 21652
    $47 = $buf_i_i + 2 | 0; //@line 21653
    $48 = $buf_i_i + 3 | 0; //@line 21654
    $49 = $buf_i_i + 4 | 0; //@line 21655
    $50 = $buf_i_i + 5 | 0; //@line 21656
    $51 = $buf_i_i + 6 | 0; //@line 21657
    $52 = $buf_i_i + 7 | 0; //@line 21658
    $53 = $buf_i_i + 8 | 0; //@line 21659
    $54 = $buf_i_i + 9 | 0; //@line 21660
    $55 = $buf_i_i + 10 | 0; //@line 21661
    $56 = $buf_i_i + 11 | 0; //@line 21662
    $c_038_i_i = 0;
    $_02440_i_i = $15;
    $58 = $43;
    $57 = 0;
    while (1) {
     $61 = HEAP32[(HEAP32[$45 >> 2] | 0) + ($c_038_i_i << 2) >> 2] | 0; //@line 21672
     $62 = $61 + 2 | 0; //@line 21673
     $63 = HEAP16[$62 >> 1] | 0; //@line 21674
     if ($63 << 16 >> 16 == 0) {
      $_1_lcssa_i_i = $_02440_i_i;
      $162 = $58;
      $161 = $57;
     } else {
      $65 = $61 + 4 | 0; //@line 21680
      $h_031_i_i = 0;
      $_132_i_i = $_02440_i_i;
      $67 = $63;
      $66 = $57;
      while (1) {
       $71 = (HEAP32[(HEAP32[$65 >> 2] | 0) + ($h_031_i_i << 2) >> 2] | 0) + 2 | 0; //@line 21691
       if ((HEAP16[$71 >> 1] | 0) == 0) {
        $_2_lcssa_i_i = $_132_i_i;
        $156 = $67;
        $155 = $66;
       } else {
        $74 = $h_031_i_i | $c_038_i_i; //@line 21698
        $s_028_i_i = 0;
        $_229_i_i = $_132_i_i;
        $76 = $66;
        while (1) {
         $77 = _psi_img_get_sector($1, $c_038_i_i, $h_031_i_i, $s_028_i_i, 0) | 0; //@line 21705
         if (($77 | 0) == 0 | $_229_i_i >>> 0 < 12) {
          break L15630;
         }
         if ((_psi_read($fp, $41, 12) | 0) != 0) {
          break L15630;
         }
         _psi_sct_set_tags($77, $41, 12) | 0; //@line 21719
         if (($74 | $s_028_i_i | 0) == 0) {
          $148 = $76; //@line 21724
         } else {
          $93 = (HEAPU8[$41] << 8 | HEAPU8[$46]) + $76 | 0; //@line 21732
          $103 = ($93 >>> 1 | $93 << 31) + (HEAPU8[$47] << 8 | HEAPU8[$48]) | 0; //@line 21742
          $113 = ($103 >>> 1 | $103 << 31) + (HEAPU8[$49] << 8 | HEAPU8[$50]) | 0; //@line 21752
          $123 = ($113 >>> 1 | $113 << 31) + (HEAPU8[$51] << 8 | HEAPU8[$52]) | 0; //@line 21762
          $133 = ($123 >>> 1 | $123 << 31) + (HEAPU8[$53] << 8 | HEAPU8[$54]) | 0; //@line 21772
          $143 = ($133 >>> 1 | $133 << 31) + (HEAPU8[$55] << 8 | HEAPU8[$56]) | 0; //@line 21782
          $146 = $143 >>> 1 | $143 << 31; //@line 21785
          HEAP32[$check_i >> 2] = $146; //@line 21786
          $148 = $146; //@line 21788
         }
         $149 = $_229_i_i - 12 | 0; //@line 21791
         $150 = $s_028_i_i + 1 | 0; //@line 21792
         if ($150 >>> 0 < (HEAPU16[$71 >> 1] | 0) >>> 0) {
          $s_028_i_i = $150;
          $_229_i_i = $149;
          $76 = $148;
         } else {
          break;
         }
        }
        $_2_lcssa_i_i = $149;
        $156 = HEAP16[$62 >> 1] | 0;
        $155 = $148;
       }
       $157 = $h_031_i_i + 1 | 0; //@line 21810
       if ($157 >>> 0 < ($156 & 65535) >>> 0) {
        $h_031_i_i = $157;
        $_132_i_i = $_2_lcssa_i_i;
        $67 = $156;
        $66 = $155;
       } else {
        break;
       }
      }
      $_1_lcssa_i_i = $_2_lcssa_i_i;
      $162 = HEAP16[$42 >> 1] | 0;
      $161 = $155;
     }
     $163 = $c_038_i_i + 1 | 0; //@line 21827
     if ($163 >>> 0 < ($162 & 65535) >>> 0) {
      $c_038_i_i = $163;
      $_02440_i_i = $_1_lcssa_i_i;
      $58 = $162;
      $57 = $161;
     } else {
      $_024_lcssa_i_i = $_1_lcssa_i_i;
      $166 = $161;
      break;
     }
    }
   }
   if (($_024_lcssa_i_i | 0) != 0) {
    break;
   }
   if (($17 | 0) == ($166 | 0)) {
    $_0 = $1; //@line 21849
    STACKTOP = sp; //@line 21851
    return $_0 | 0; //@line 21852
   } else {
    $170 = HEAP32[_stderr >> 2] | 0; //@line 21854
    _fwrite(46168, 25, 1, $170 | 0) | 0; //@line 21855
    break;
   }
  }
 } while (0);
 _psi_img_del($1); //@line 21861
 $_0 = 0; //@line 21863
 STACKTOP = sp; //@line 21865
 return $_0 | 0; //@line 21866
}
function _psi_save_dc42($fp, $img) {
 $fp = $fp | 0;
 $img = $img | 0;
 var $buf_i = 0, $buf = 0, $5 = 0, $c_022_i = 0, $8 = 0, $14 = 0, $17 = 0, $22 = 0, $s_0_i = 0, $28 = 0, $38 = 0, $c_013_i = 0, $41 = 0, $43 = 0, $46 = 0, $47 = 0, $h_011_i = 0, $50 = 0, $53 = 0, $54 = 0, $s_0_i30 = 0, $68 = 0, $c_022_i34 = 0, $71 = 0, $77 = 0, $79 = 0, $80 = 0, $85 = 0, $s_0_i38 = 0, $91 = 0, $103 = 0, $c_013_i43 = 0, $109 = 0, $111 = 0, $114 = 0, $115 = 0, $h_011_i45 = 0, $118 = 0, $121 = 0, $122 = 0, $s_0_i46 = 0, $136 = 0, $c_07_i = 0, $139 = 0, $144 = 0, $145 = 0, $149 = 0, $s_0_i58 = 0, $155 = 0, $161 = 0, $167 = 0, $171 = 0, $s_0_1_i = 0, $175 = 0, $180 = 0, $186 = 0, $c_07_i61 = 0, $191 = 0, $196 = 0, $197 = 0, $201 = 0, $s_0_i64 = 0, $207 = 0, $213 = 0, $219 = 0, $223 = 0, $s_0_1_i68 = 0, $227 = 0, $232 = 0, $238 = 0, $hn_0 = 0, $sn_0 = 0, $enc_0 = 0, $data_size_0 = 0, $tags_size_0 = 0, $242 = 0, $243 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $data_check_0_load8091 = 0, $tags_check_0_load7986 = 0, $c_013_i72 = 0, $263 = 0, $264 = 0, $data_check_0_load8090 = 0, $tags_check_0_load7985 = 0, $h_010_i = 0, $265 = 0, $data_check_0_load8089 = 0, $tags_check_0_load7984 = 0, $s_09_i = 0, $267 = 0, $273 = 0, $tmp_014_i_i = 0, $_013_i_i = 0, $_01112_i_i = 0, $284 = 0, $287 = 0, $288 = 0, $_011_lcssa_i_i = 0, $300 = 0, $310 = 0, $320 = 0, $330 = 0, $340 = 0, $350 = 0, $tags_check_0_load7983 = 0, $355 = 0, $data_check_0_load8088 = 0, $tags_check_0_load7982 = 0, $357 = 0, $359 = 0, $362 = 0, $364 = 0, $368 = 0, $369 = 0, $src_0_i = 0, $380 = 0, $_1_i = 0, $i_02_i = 0, $c_03_us_i = 0, $394 = 0, $s_0_us_i = 0, $403 = 0, $h_01_us_i = 0, $c_03_i50 = 0, $h_01_i51 = 0, $s_0_i53 = 0, $417 = 0, $c_03_i = 0, $438 = 0, $h_01_i = 0, $s_0_i27 = 0, $442 = 0, $_0 = 0, $455 = 0, $s_0_i38_1 = 0, $458 = 0, $463 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 21933
 STACKTOP = STACKTOP + 144 | 0; //@line 21933
 $buf_i = sp | 0; //@line 21934
 $buf = sp + 16 | 0; //@line 21935
 if ((HEAP16[$img >> 1] | 0) != 80) {
  $_0 = 1; //@line 21941
  STACKTOP = sp; //@line 21943
  return $_0 | 0; //@line 21944
 }
 $5 = HEAP32[$img + 4 >> 2] | 0; //@line 21947
 $c_022_i = 0; //@line 21949
 L15678 : while (1) {
  $8 = HEAP32[$5 + ($c_022_i << 2) >> 2] | 0; //@line 21953
  if ((HEAP16[$8 + 2 >> 1] | 0) != 1) {
   $c_022_i34 = 0; //@line 21959
   label = 12467; //@line 21960
   break;
  }
  $14 = 12 - ($c_022_i >>> 4) | 0; //@line 21964
  $17 = HEAP32[HEAP32[$8 + 4 >> 2] >> 2] | 0; //@line 21967
  if ((HEAPU16[$17 + 2 >> 1] | 0) != ($14 | 0)) {
   $c_022_i34 = 0; //@line 21974
   label = 12467; //@line 21975
   break;
  }
  $22 = $17 + 4 | 0; //@line 21978
  $s_0_i = 0; //@line 21980
  while (1) {
   if ($s_0_i >>> 0 >= $14 >>> 0) {
    break;
   }
   $28 = HEAP32[(HEAP32[$22 >> 2] | 0) + ($s_0_i << 2) >> 2] | 0; //@line 21990
   if ((HEAP16[$28 + 10 >> 1] | 0) != 512) {
    $c_022_i34 = 0; //@line 21996
    label = 12467; //@line 21997
    break L15678;
   }
   if ((HEAPU16[$28 + 8 >> 1] | 0) >>> 0 < $14 >>> 0) {
    $s_0_i = $s_0_i + 1 | 0; //@line 22007
   } else {
    $c_022_i34 = 0; //@line 22009
    label = 12467; //@line 22010
    break L15678;
   }
  }
  $38 = $c_022_i + 1 | 0; //@line 22014
  if ($38 >>> 0 < 80) {
   $c_022_i = $38; //@line 22018
  } else {
   $c_013_i = 0; //@line 22020
   label = 12460; //@line 22021
   break;
  }
 }
 L15687 : do {
  if ((label | 0) == 12467) {
   L15688 : while (1) {
    label = 0; //@line 22028
    $71 = HEAP32[$5 + ($c_022_i34 << 2) >> 2] | 0; //@line 22031
    if ((HEAP16[$71 + 2 >> 1] | 0) != 2) {
     $c_07_i = 0; //@line 22037
     break;
    }
    $77 = 12 - ($c_022_i34 >>> 4) | 0; //@line 22041
    $79 = HEAP32[$71 + 4 >> 2] | 0; //@line 22043
    $80 = HEAP32[$79 >> 2] | 0; //@line 22044
    if ((HEAPU16[$80 + 2 >> 1] | 0) != ($77 | 0)) {
     $c_07_i = 0; //@line 22051
     break;
    }
    $85 = $80 + 4 | 0; //@line 22054
    $s_0_i38 = 0; //@line 22056
    while (1) {
     if ($s_0_i38 >>> 0 >= $77 >>> 0) {
      break;
     }
     $91 = HEAP32[(HEAP32[$85 >> 2] | 0) + ($s_0_i38 << 2) >> 2] | 0; //@line 22066
     if ((HEAP16[$91 + 10 >> 1] | 0) != 512) {
      $c_07_i = 0; //@line 22072
      break L15688;
     }
     if ((HEAPU16[$91 + 8 >> 1] | 0) >>> 0 < $77 >>> 0) {
      $s_0_i38 = $s_0_i38 + 1 | 0; //@line 22082
     } else {
      $c_07_i = 0; //@line 22084
      break L15688;
     }
    }
    $103 = HEAP32[$79 + 4 >> 2] | 0; //@line 22089
    if ((HEAPU16[$103 + 2 >> 1] | 0) != ($77 | 0)) {
     $c_07_i = 0; //@line 22096
     break;
    }
    $455 = $103 + 4 | 0; //@line 22099
    $s_0_i38_1 = 0; //@line 22101
    while (1) {
     if ($s_0_i38_1 >>> 0 >= $77 >>> 0) {
      break;
     }
     $463 = HEAP32[(HEAP32[$455 >> 2] | 0) + ($s_0_i38_1 << 2) >> 2] | 0; //@line 22111
     if ((HEAP16[$463 + 10 >> 1] | 0) != 512) {
      $c_07_i = 0; //@line 22117
      break L15688;
     }
     if ((HEAPU16[$463 + 8 >> 1] | 0) >>> 0 < $77 >>> 0) {
      $s_0_i38_1 = $s_0_i38_1 + 1 | 0; //@line 22127
     } else {
      $c_07_i = 0; //@line 22129
      break L15688;
     }
    }
    $458 = $c_022_i34 + 1 | 0; //@line 22133
    if ($458 >>> 0 < 80) {
     $c_022_i34 = $458; //@line 22137
     label = 12467; //@line 22138
    } else {
     $c_013_i43 = 0; //@line 22140
     label = 12474; //@line 22141
     break;
    }
   }
   if ((label | 0) == 12474) {
    while (1) {
     label = 0; //@line 22147
     $109 = HEAP32[$5 + ($c_013_i43 << 2) >> 2] | 0; //@line 22150
     $111 = HEAP16[$109 + 2 >> 1] | 0; //@line 22152
     if ($111 << 16 >> 16 != 0) {
      $114 = HEAP32[$109 + 4 >> 2] | 0; //@line 22157
      $115 = $111 & 65535; //@line 22158
      $h_011_i45 = 0; //@line 22160
      do {
       $118 = HEAP32[$114 + ($h_011_i45 << 2) >> 2] | 0; //@line 22164
       $121 = HEAPU16[$118 + 2 >> 1] | 0; //@line 22167
       $122 = $118 + 4 | 0; //@line 22168
       $s_0_i46 = 0; //@line 22170
       while (1) {
        if ($s_0_i46 >>> 0 >= $121 >>> 0) {
         break;
        }
        if ((HEAP16[(HEAP32[(HEAP32[$122 >> 2] | 0) + ($s_0_i46 << 2) >> 2] | 0) + 28 >> 1] | 0) == 0) {
         $s_0_i46 = $s_0_i46 + 1 | 0; //@line 22187
        } else {
         $tags_size_0 = 19200;
         $data_size_0 = 819200;
         $enc_0 = 290;
         $sn_0 = 0;
         $hn_0 = 2;
         break L15687;
        }
       }
       $h_011_i45 = $h_011_i45 + 1 | 0; //@line 22193
      } while ($h_011_i45 >>> 0 < $115 >>> 0);
     }
     $136 = $c_013_i43 + 1 | 0; //@line 22203
     if ($136 >>> 0 < 80) {
      $c_013_i43 = $136; //@line 22207
      label = 12474; //@line 22208
     } else {
      $tags_size_0 = 0;
      $data_size_0 = 819200;
      $enc_0 = 290;
      $sn_0 = 0;
      $hn_0 = 2;
      break L15687;
     }
    }
   }
   L15715 : while (1) {
    $139 = HEAP32[$5 + ($c_07_i << 2) >> 2] | 0; //@line 22218
    if ((HEAP16[$139 + 2 >> 1] | 0) != 2) {
     $c_07_i61 = 0; //@line 22224
     break;
    }
    $144 = HEAP32[$139 + 4 >> 2] | 0; //@line 22228
    $145 = HEAP32[$144 >> 2] | 0; //@line 22229
    if ((HEAP16[$145 + 2 >> 1] | 0) != 9) {
     $c_07_i61 = 0; //@line 22235
     break;
    }
    $149 = $145 + 4 | 0; //@line 22238
    $s_0_i58 = 0; //@line 22240
    while (1) {
     if ($s_0_i58 >>> 0 >= 9) {
      break;
     }
     $155 = HEAP32[(HEAP32[$149 >> 2] | 0) + ($s_0_i58 << 2) >> 2] | 0; //@line 22250
     if ((HEAP16[$155 + 10 >> 1] | 0) != 512) {
      $c_07_i61 = 0; //@line 22256
      break L15715;
     }
     $161 = HEAP16[$155 + 8 >> 1] | 0; //@line 22260
     if ($161 << 16 >> 16 == 0 | ($161 & 65535) > 9) {
      $c_07_i61 = 0; //@line 22267
      break L15715;
     } else {
      $s_0_i58 = $s_0_i58 + 1 | 0; //@line 22270
     }
    }
    $167 = HEAP32[$144 + 4 >> 2] | 0; //@line 22274
    if ((HEAP16[$167 + 2 >> 1] | 0) != 9) {
     $c_07_i61 = 0; //@line 22280
     break;
    }
    $171 = $167 + 4 | 0; //@line 22283
    $s_0_1_i = 0; //@line 22285
    while (1) {
     if ($s_0_1_i >>> 0 >= 9) {
      break;
     }
     $180 = HEAP32[(HEAP32[$171 >> 2] | 0) + ($s_0_1_i << 2) >> 2] | 0; //@line 22295
     if ((HEAP16[$180 + 10 >> 1] | 0) != 512) {
      $c_07_i61 = 0; //@line 22301
      break L15715;
     }
     $186 = HEAP16[$180 + 8 >> 1] | 0; //@line 22305
     if ($186 << 16 >> 16 == 0 | ($186 & 65535) > 9) {
      $c_07_i61 = 0; //@line 22312
      break L15715;
     } else {
      $s_0_1_i = $s_0_1_i + 1 | 0; //@line 22315
     }
    }
    $175 = $c_07_i + 1 | 0; //@line 22318
    if ($175 >>> 0 < 80) {
     $c_07_i = $175; //@line 22322
    } else {
     $tags_size_0 = 0;
     $data_size_0 = 737280;
     $enc_0 = 546;
     $sn_0 = 9;
     $hn_0 = 2;
     break L15687;
    }
   }
   L15730 : while (1) {
    $191 = HEAP32[$5 + ($c_07_i61 << 2) >> 2] | 0; //@line 22331
    if ((HEAP16[$191 + 2 >> 1] | 0) != 2) {
     $_0 = 1; //@line 22337
     label = 12561; //@line 22338
     break;
    }
    $196 = HEAP32[$191 + 4 >> 2] | 0; //@line 22342
    $197 = HEAP32[$196 >> 2] | 0; //@line 22343
    if ((HEAP16[$197 + 2 >> 1] | 0) != 18) {
     $_0 = 1; //@line 22349
     label = 12562; //@line 22350
     break;
    }
    $201 = $197 + 4 | 0; //@line 22353
    $s_0_i64 = 0; //@line 22355
    while (1) {
     if ($s_0_i64 >>> 0 >= 18) {
      break;
     }
     $207 = HEAP32[(HEAP32[$201 >> 2] | 0) + ($s_0_i64 << 2) >> 2] | 0; //@line 22365
     if ((HEAP16[$207 + 10 >> 1] | 0) != 512) {
      $_0 = 1; //@line 22371
      label = 12569; //@line 22372
      break L15730;
     }
     $213 = HEAP16[$207 + 8 >> 1] | 0; //@line 22376
     if ($213 << 16 >> 16 == 0 | ($213 & 65535) > 18) {
      $_0 = 1; //@line 22383
      label = 12570; //@line 22384
      break L15730;
     } else {
      $s_0_i64 = $s_0_i64 + 1 | 0; //@line 22387
     }
    }
    $219 = HEAP32[$196 + 4 >> 2] | 0; //@line 22391
    if ((HEAP16[$219 + 2 >> 1] | 0) != 18) {
     $_0 = 1; //@line 22397
     label = 12560; //@line 22398
     break;
    }
    $223 = $219 + 4 | 0; //@line 22401
    $s_0_1_i68 = 0; //@line 22403
    while (1) {
     if ($s_0_1_i68 >>> 0 >= 18) {
      break;
     }
     $232 = HEAP32[(HEAP32[$223 >> 2] | 0) + ($s_0_1_i68 << 2) >> 2] | 0; //@line 22413
     if ((HEAP16[$232 + 10 >> 1] | 0) != 512) {
      $_0 = 1; //@line 22419
      label = 12573; //@line 22420
      break L15730;
     }
     $238 = HEAP16[$232 + 8 >> 1] | 0; //@line 22424
     if ($238 << 16 >> 16 == 0 | ($238 & 65535) > 18) {
      $_0 = 1; //@line 22431
      label = 12559; //@line 22432
      break L15730;
     } else {
      $s_0_1_i68 = $s_0_1_i68 + 1 | 0; //@line 22435
     }
    }
    $227 = $c_07_i61 + 1 | 0; //@line 22438
    if ($227 >>> 0 < 80) {
     $c_07_i61 = $227; //@line 22442
    } else {
     $tags_size_0 = 0;
     $data_size_0 = 1474560;
     $enc_0 = 802;
     $sn_0 = 18;
     $hn_0 = 2;
     break L15687;
    }
   }
   if ((label | 0) == 12569) {
    STACKTOP = sp; //@line 22450
    return $_0 | 0; //@line 22451
   } else if ((label | 0) == 12570) {
    STACKTOP = sp; //@line 22455
    return $_0 | 0; //@line 22456
   } else if ((label | 0) == 12573) {
    STACKTOP = sp; //@line 22460
    return $_0 | 0; //@line 22461
   } else if ((label | 0) == 12559) {
    STACKTOP = sp; //@line 22465
    return $_0 | 0; //@line 22466
   } else if ((label | 0) == 12560) {
    STACKTOP = sp; //@line 22470
    return $_0 | 0; //@line 22471
   } else if ((label | 0) == 12561) {
    STACKTOP = sp; //@line 22475
    return $_0 | 0; //@line 22476
   } else if ((label | 0) == 12562) {
    STACKTOP = sp; //@line 22480
    return $_0 | 0; //@line 22481
   }
  } else if ((label | 0) == 12460) {
   while (1) {
    label = 0; //@line 22486
    $41 = HEAP32[$5 + ($c_013_i << 2) >> 2] | 0; //@line 22489
    $43 = HEAP16[$41 + 2 >> 1] | 0; //@line 22491
    if ($43 << 16 >> 16 != 0) {
     $46 = HEAP32[$41 + 4 >> 2] | 0; //@line 22496
     $47 = $43 & 65535; //@line 22497
     $h_011_i = 0; //@line 22499
     do {
      $50 = HEAP32[$46 + ($h_011_i << 2) >> 2] | 0; //@line 22503
      $53 = HEAPU16[$50 + 2 >> 1] | 0; //@line 22506
      $54 = $50 + 4 | 0; //@line 22507
      $s_0_i30 = 0; //@line 22509
      while (1) {
       if ($s_0_i30 >>> 0 >= $53 >>> 0) {
        break;
       }
       if ((HEAP16[(HEAP32[(HEAP32[$54 >> 2] | 0) + ($s_0_i30 << 2) >> 2] | 0) + 28 >> 1] | 0) == 0) {
        $s_0_i30 = $s_0_i30 + 1 | 0; //@line 22526
       } else {
        $tags_size_0 = 9600;
        $data_size_0 = 409600;
        $enc_0 = 2;
        $sn_0 = 0;
        $hn_0 = 1;
        break L15687;
       }
      }
      $h_011_i = $h_011_i + 1 | 0; //@line 22532
     } while ($h_011_i >>> 0 < $47 >>> 0);
    }
    $68 = $c_013_i + 1 | 0; //@line 22542
    if ($68 >>> 0 < 80) {
     $c_013_i = $68; //@line 22546
     label = 12460; //@line 22547
    } else {
     $tags_size_0 = 0;
     $data_size_0 = 409600;
     $enc_0 = 2;
     $sn_0 = 0;
     $hn_0 = 1;
     break;
    }
   }
  }
 } while (0);
 $242 = $buf_i | 0; //@line 22560
 $243 = ($sn_0 | 0) == 0; //@line 22561
 $245 = $243 & 1 ^ 1; //@line 22563
 $246 = $sn_0 + 1 | 0; //@line 22564
 $247 = $buf_i + 1 | 0; //@line 22565
 $248 = $buf_i + 2 | 0; //@line 22566
 $249 = $buf_i + 3 | 0; //@line 22567
 $250 = $buf_i + 4 | 0; //@line 22568
 $251 = $buf_i + 5 | 0; //@line 22569
 $252 = $buf_i + 6 | 0; //@line 22570
 $253 = $buf_i + 7 | 0; //@line 22571
 $254 = $buf_i + 8 | 0; //@line 22572
 $255 = $buf_i + 9 | 0; //@line 22573
 $256 = $buf_i + 10 | 0; //@line 22574
 $257 = $buf_i + 11 | 0; //@line 22575
 $c_013_i72 = 0;
 $tags_check_0_load7986 = 0;
 $data_check_0_load8091 = 0;
 L15765 : while (1) {
  if ($243) {
   $263 = 12 - ($c_013_i72 >>> 4) | 0; //@line 22587
  } else {
   $263 = $246; //@line 22589
  }
  $264 = $245 >>> 0 < $263 >>> 0; //@line 22592
  $h_010_i = 0;
  $tags_check_0_load7985 = $tags_check_0_load7986;
  $data_check_0_load8090 = $data_check_0_load8091;
  while (1) {
   if ($264) {
    $265 = $h_010_i | $c_013_i72; //@line 22601
    $s_09_i = $245;
    $tags_check_0_load7984 = $tags_check_0_load7985;
    $data_check_0_load8089 = $data_check_0_load8090;
    while (1) {
     $267 = _psi_img_get_sector($img, $c_013_i72, $h_010_i, $s_09_i, 0) | 0; //@line 22608
     if (($267 | 0) == 0) {
      $_0 = 1; //@line 22612
      label = 12575; //@line 22613
      break L15765;
     }
     $273 = (HEAPU16[$267 + 10 >> 1] | 0) >>> 1; //@line 22619
     if (($273 | 0) == 0) {
      $_011_lcssa_i_i = $data_check_0_load8089; //@line 22623
     } else {
      $_01112_i_i = $data_check_0_load8089;
      $_013_i_i = $273;
      $tmp_014_i_i = HEAP32[$267 + 24 >> 2] | 0;
      while (1) {
       $284 = (HEAPU8[$tmp_014_i_i] << 8 | HEAPU8[$tmp_014_i_i + 1 | 0]) + $_01112_i_i | 0; //@line 22640
       $287 = $284 >>> 1 | $284 << 31; //@line 22643
       $288 = $_013_i_i - 1 | 0; //@line 22644
       if (($288 | 0) == 0) {
        $_011_lcssa_i_i = $287; //@line 22649
        break;
       } else {
        $_01112_i_i = $287;
        $_013_i_i = $288;
        $tmp_014_i_i = $tmp_014_i_i + 2 | 0;
       }
      }
     }
     if (($265 | $s_09_i | 0) == 0) {
      $tags_check_0_load7983 = $tags_check_0_load7984; //@line 22661
     } else {
      _psi_sct_get_tags($267, $242, 12) | 0; //@line 22663
      $300 = (HEAPU8[$242] << 8 | HEAPU8[$247]) + $tags_check_0_load7984 | 0; //@line 22670
      $310 = ($300 >>> 1 | $300 << 31) + (HEAPU8[$248] << 8 | HEAPU8[$249]) | 0; //@line 22680
      $320 = ($310 >>> 1 | $310 << 31) + (HEAPU8[$250] << 8 | HEAPU8[$251]) | 0; //@line 22690
      $330 = ($320 >>> 1 | $320 << 31) + (HEAPU8[$252] << 8 | HEAPU8[$253]) | 0; //@line 22700
      $340 = ($330 >>> 1 | $330 << 31) + (HEAPU8[$254] << 8 | HEAPU8[$255]) | 0; //@line 22710
      $350 = ($340 >>> 1 | $340 << 31) + (HEAPU8[$256] << 8 | HEAPU8[$257]) | 0; //@line 22720
      $tags_check_0_load7983 = $350 >>> 1 | $350 << 31; //@line 22725
     }
     $355 = $s_09_i + 1 | 0; //@line 22728
     if ($355 >>> 0 < $263 >>> 0) {
      $s_09_i = $355;
      $tags_check_0_load7984 = $tags_check_0_load7983;
      $data_check_0_load8089 = $_011_lcssa_i_i;
     } else {
      $tags_check_0_load7982 = $tags_check_0_load7983;
      $data_check_0_load8088 = $_011_lcssa_i_i;
      break;
     }
    }
   } else {
    $tags_check_0_load7982 = $tags_check_0_load7985;
    $data_check_0_load8088 = $data_check_0_load8090;
   }
   $357 = $h_010_i + 1 | 0; //@line 22743
   if ($357 >>> 0 < $hn_0 >>> 0) {
    $h_010_i = $357;
    $tags_check_0_load7985 = $tags_check_0_load7982;
    $data_check_0_load8090 = $data_check_0_load8088;
   } else {
    break;
   }
  }
  $359 = $c_013_i72 + 1 | 0; //@line 22752
  if ($359 >>> 0 < 80) {
   $c_013_i72 = $359;
   $tags_check_0_load7986 = $tags_check_0_load7982;
   $data_check_0_load8091 = $data_check_0_load8088;
  } else {
   break;
  }
 }
 if ((label | 0) == 12575) {
  STACKTOP = sp; //@line 22763
  return $_0 | 0; //@line 22764
 }
 $362 = $buf | 0; //@line 22766
 _memset($362 | 0, 0, 128); //@line 22767
 $364 = _psi_img_get_sector($img, 0, 0, $243 ? 2 : 3, 0) | 0; //@line 22769
 do {
  if (($364 | 0) == 0) {
   $src_0_i = 56568; //@line 22774
  } else {
   $368 = HEAP32[$364 + 24 >> 2] | 0; //@line 22777
   $369 = HEAP8[$368] | 0; //@line 22778
   if (($369 << 24 >> 24 | 0) == 66) {
    $src_0_i = (HEAP8[$368 + 1 | 0] | 0) == 68 ? $368 + 36 | 0 : 56568; //@line 22786
    break;
   } else if (($369 << 24 >> 24 | 0) == (-46 | 0)) {
    $src_0_i = (HEAP8[$368 + 1 | 0] | 0) == -41 ? $368 + 36 | 0 : 56568; //@line 22795
    break;
   } else {
    $src_0_i = 56568; //@line 22798
    break;
   }
  }
 } while (0);
 $380 = HEAP8[$src_0_i] | 0; //@line 22804
 $_1_i = ($380 & 255) > 63 ? 63 : $380 & 255; //@line 22807
 if (($_1_i | 0) != 0) {
  $i_02_i = 0; //@line 22811
  do {
   $i_02_i = $i_02_i + 1 | 0; //@line 22814
   HEAP8[$buf + $i_02_i | 0] = HEAP8[$src_0_i + $i_02_i | 0] | 0; //@line 22818
  } while ($i_02_i >>> 0 < $_1_i >>> 0);
 }
 HEAP8[$362] = $_1_i & 255; //@line 22829
 _psi_set_uint32_be($362, 64, $data_size_0); //@line 22830
 _psi_set_uint32_be($362, 68, $tags_size_0); //@line 22831
 _psi_set_uint32_be($362, 72, $data_check_0_load8088); //@line 22832
 _psi_set_uint32_be($362, 76, $tags_check_0_load7982); //@line 22833
 _psi_set_uint16_be($362, 80, $enc_0); //@line 22834
 _psi_set_uint16_be($362, 82, 256); //@line 22835
 if ((_psi_write($fp, $362, 84) | 0) != 0) {
  $_0 = 1; //@line 22840
  STACKTOP = sp; //@line 22842
  return $_0 | 0; //@line 22843
 }
 L15803 : do {
  if ($243) {
   $c_03_us_i = 0; //@line 22847
   L15804 : while (1) {
    $394 = 12 - ($c_03_us_i >>> 4) | 0; //@line 22851
    $h_01_us_i = 0; //@line 22852
    do {
     $s_0_us_i = $245; //@line 22856
     while (1) {
      if ($s_0_us_i >>> 0 >= $394 >>> 0) {
       break;
      }
      $403 = _psi_img_get_sector($img, $c_03_us_i, $h_01_us_i, $s_0_us_i, 0) | 0; //@line 22864
      if (($403 | 0) == 0) {
       $_0 = 1; //@line 22868
       label = 12567; //@line 22869
       break L15804;
      }
      if ((_psi_write($fp, HEAP32[$403 + 24 >> 2] | 0, HEAPU16[$403 + 10 >> 1] | 0) | 0) == 0) {
       $s_0_us_i = $s_0_us_i + 1 | 0; //@line 22882
      } else {
       $_0 = 1; //@line 22884
       label = 12568; //@line 22885
       break L15804;
      }
     }
     $h_01_us_i = $h_01_us_i + 1 | 0; //@line 22889
    } while ($h_01_us_i >>> 0 < $hn_0 >>> 0);
    $c_03_us_i = $c_03_us_i + 1 | 0; //@line 22898
    if ($c_03_us_i >>> 0 >= 80) {
     break L15803;
    }
   }
   if ((label | 0) == 12567) {
    STACKTOP = sp; //@line 22909
    return $_0 | 0; //@line 22910
   } else if ((label | 0) == 12568) {
    STACKTOP = sp; //@line 22914
    return $_0 | 0; //@line 22915
   }
  } else {
   $c_03_i50 = 0; //@line 22918
   L15817 : while (1) {
    $h_01_i51 = 0; //@line 22921
    do {
     $s_0_i53 = $245; //@line 22925
     while (1) {
      if ($s_0_i53 >>> 0 >= $246 >>> 0) {
       break;
      }
      $417 = _psi_img_get_sector($img, $c_03_i50, $h_01_i51, $s_0_i53, 0) | 0; //@line 22933
      if (($417 | 0) == 0) {
       $_0 = 1; //@line 22937
       label = 12571; //@line 22938
       break L15817;
      }
      if ((_psi_write($fp, HEAP32[$417 + 24 >> 2] | 0, HEAPU16[$417 + 10 >> 1] | 0) | 0) == 0) {
       $s_0_i53 = $s_0_i53 + 1 | 0; //@line 22951
      } else {
       $_0 = 1; //@line 22953
       label = 12572; //@line 22954
       break L15817;
      }
     }
     $h_01_i51 = $h_01_i51 + 1 | 0; //@line 22958
    } while ($h_01_i51 >>> 0 < $hn_0 >>> 0);
    $c_03_i50 = $c_03_i50 + 1 | 0; //@line 22967
    if ($c_03_i50 >>> 0 >= 80) {
     break L15803;
    }
   }
   if ((label | 0) == 12571) {
    STACKTOP = sp; //@line 22978
    return $_0 | 0; //@line 22979
   } else if ((label | 0) == 12572) {
    STACKTOP = sp; //@line 22983
    return $_0 | 0; //@line 22984
   }
  }
 } while (0);
 L15831 : do {
  if (($tags_size_0 | 0) != 0) {
   $c_03_i = 0; //@line 22992
   L15832 : while (1) {
    if ($243) {
     $438 = 12 - ($c_03_i >>> 4) | 0; //@line 23000
    } else {
     $438 = $246; //@line 23002
    }
    $h_01_i = 0; //@line 23005
    do {
     $s_0_i27 = $245; //@line 23009
     while (1) {
      if ($s_0_i27 >>> 0 >= $438 >>> 0) {
       break;
      }
      $442 = _psi_img_get_sector($img, $c_03_i, $h_01_i, $s_0_i27, 0) | 0; //@line 23017
      if (($442 | 0) == 0) {
       $_0 = 1; //@line 23021
       label = 12566; //@line 23022
       break L15832;
      }
      _psi_sct_get_tags($442, $242, 12) | 0; //@line 23025
      if ((_psi_write($fp, $242, 12) | 0) == 0) {
       $s_0_i27 = $s_0_i27 + 1 | 0; //@line 23031
      } else {
       $_0 = 1; //@line 23033
       label = 12564; //@line 23034
       break L15832;
      }
     }
     $h_01_i = $h_01_i + 1 | 0; //@line 23038
    } while ($h_01_i >>> 0 < $hn_0 >>> 0);
    $c_03_i = $c_03_i + 1 | 0; //@line 23047
    if ($c_03_i >>> 0 >= 80) {
     break L15831;
    }
   }
   if ((label | 0) == 12564) {
    STACKTOP = sp; //@line 23058
    return $_0 | 0; //@line 23059
   } else if ((label | 0) == 12566) {
    STACKTOP = sp; //@line 23063
    return $_0 | 0; //@line 23064
   }
  }
 } while (0);
 _fflush($fp | 0) | 0; //@line 23068
 $_0 = 0; //@line 23070
 STACKTOP = sp; //@line 23072
 return $_0 | 0; //@line 23073
}
function _psi_probe_dc42_fp($fp) {
 $fp = $fp | 0;
 var $4 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 23082
 STACKTOP = STACKTOP + 128 | 0; //@line 23082
 do {
  if ((_fseek($fp | 0, 0, 0) | 0) == 0) {
   $4 = sp | 0; //@line 23089
   if ((_psi_read($fp, $4, 84) | 0) != 0) {
    $_0 = 0; //@line 23094
    break;
   }
   if ((_psi_get_uint16_be($4, 82) | 0) != 256) {
    $_0 = 0; //@line 23101
    break;
   }
   $_0 = (HEAPU8[$4] | 0) < 64 | 0; //@line 23108
  } else {
   $_0 = 0; //@line 23110
  }
 } while (0);
 STACKTOP = sp; //@line 23114
 return $_0 | 0; //@line 23115
}
function _dc42_load_gcr($fp, $img, $hcnt, $check, $fmt) {
 $fp = $fp | 0;
 $img = $img | 0;
 $hcnt = $hcnt | 0;
 $check = $check | 0;
 $fmt = $fmt | 0;
 var $1 = 0, $2 = 0, $c_033 = 0, $4 = 0, $5 = 0, $8 = 0, $s_029_us = 0, $16 = 0, $22 = 0, $tmp_014_i_us = 0, $_013_i_us = 0, $_01112_i_us = 0, $36 = 0, $39 = 0, $40 = 0, $h_030_us = 0, $h_030 = 0, $46 = 0, $53 = 0, $_0 = 0, label = 0;
 HEAP32[$check >> 2] = 0; //@line 23134
 $1 = ($hcnt | 0) == 0; //@line 23135
 $2 = $fmt & 255; //@line 23136
 $c_033 = 0; //@line 23138
 L15857 : while (1) {
  $4 = $c_033 >>> 4; //@line 23141
  $5 = 12 - $4 | 0; //@line 23142
  L15859 : do {
   if (!$1) {
    if (($4 | 0) == 12) {
     $h_030 = 0; //@line 23148
     while (1) {
      $46 = _psi_img_get_track($img, $c_033, $h_030, 0) | 0; //@line 23151
      if (($46 | 0) != 0) {
       _psi_trk_interleave($46, 2) | 0; //@line 23155
      }
      $h_030 = $h_030 + 1 | 0; //@line 23158
      if ($h_030 >>> 0 >= $hcnt >>> 0) {
       break L15859;
      }
     }
    } else {
     $h_030_us = 0; //@line 23168
    }
    do {
     $s_029_us = 0; //@line 23173
     do {
      $16 = _psi_sct_new($c_033, $h_030_us, $s_029_us, 512) | 0; //@line 23176
      if (($16 | 0) == 0) {
       $_0 = 1; //@line 23180
       label = 12603; //@line 23181
       break L15857;
      }
      _psi_sct_set_gcr_format($16, $2); //@line 23184
      _psi_sct_set_encoding($16, 3); //@line 23185
      if ((_psi_img_add_sector($img, $16, $c_033, $h_030_us) | 0) != 0) {
       label = 12594; //@line 23190
       break L15857;
      }
      $22 = $16 + 24 | 0; //@line 23193
      if ((_psi_read($fp, HEAP32[$22 >> 2] | 0, 512) | 0) != 0) {
       $_0 = 1; //@line 23199
       label = 12602; //@line 23200
       break L15857;
      }
      $_01112_i_us = HEAP32[$check >> 2] | 0;
      $_013_i_us = 256;
      $tmp_014_i_us = HEAP32[$22 >> 2] | 0;
      while (1) {
       $36 = ((HEAPU8[$tmp_014_i_us] | 0) << 8 | (HEAPU8[$tmp_014_i_us + 1 | 0] | 0)) + $_01112_i_us | 0; //@line 23217
       $39 = $36 >>> 1 | $36 << 31; //@line 23220
       $40 = $_013_i_us - 1 | 0; //@line 23221
       if (($40 | 0) == 0) {
        break;
       } else {
        $_01112_i_us = $39;
        $_013_i_us = $40;
        $tmp_014_i_us = $tmp_014_i_us + 2 | 0;
       }
      }
      HEAP32[$check >> 2] = $39; //@line 23231
      $s_029_us = $s_029_us + 1 | 0; //@line 23232
     } while ($s_029_us >>> 0 < $5 >>> 0);
     $8 = _psi_img_get_track($img, $c_033, $h_030_us, 0) | 0; //@line 23241
     if (($8 | 0) != 0) {
      _psi_trk_interleave($8, 2) | 0; //@line 23245
     }
     $h_030_us = $h_030_us + 1 | 0; //@line 23248
    } while ($h_030_us >>> 0 < $hcnt >>> 0);
   }
  } while (0);
  $53 = $c_033 + 1 | 0; //@line 23259
  if ($53 >>> 0 < 80) {
   $c_033 = $53; //@line 23263
  } else {
   $_0 = 0; //@line 23265
   label = 12601; //@line 23266
   break;
  }
 }
 if ((label | 0) == 12601) {
  return $_0 | 0; //@line 23273
 } else if ((label | 0) == 12602) {
  return $_0 | 0; //@line 23278
 } else if ((label | 0) == 12594) {
  _psi_sct_del($16); //@line 23281
  $_0 = 1; //@line 23283
  return $_0 | 0; //@line 23286
 } else if ((label | 0) == 12603) {
  return $_0 | 0; //@line 23291
 }
 return 0;
}
function _dc42_load_mfm($fp, $img, $scnt, $check) {
 $fp = $fp | 0;
 $img = $img | 0;
 $scnt = $scnt | 0;
 $check = $check | 0;
 var $2 = 0, $3 = 0, $c_027 = 0, $s_023 = 0, $5 = 0, $_lcssa29 = 0, $12 = 0, $tmp_014_i = 0, $_013_i = 0, $_01112_i = 0, $26 = 0, $29 = 0, $30 = 0, $_0 = 0, $s_023_1 = 0, $35 = 0, $41 = 0, $tmp_014_i_1 = 0, $_013_i_1 = 0, $_01112_i_1 = 0, $55 = 0, $58 = 0, $59 = 0, $63 = 0, label = 0;
 HEAP32[$check >> 2] = 0; //@line 23312
 $2 = $scnt >>> 0 < 14 ? 2 : 32770; //@line 23314
 $3 = ($scnt | 0) == 0; //@line 23315
 $c_027 = 0; //@line 23317
 L15889 : while (1) {
  do {
   if (!$3) {
    $s_023 = 0; //@line 23323
    do {
     $s_023 = $s_023 + 1 | 0; //@line 23326
     $5 = _psi_sct_new($c_027, 0, $s_023, 512) | 0; //@line 23327
     if (($5 | 0) == 0) {
      $_0 = 1; //@line 23331
      label = 12622; //@line 23332
      break L15889;
     }
     _psi_sct_set_encoding($5, $2); //@line 23335
     if ((_psi_img_add_sector($img, $5, $c_027, 0) | 0) != 0) {
      $_lcssa29 = $5; //@line 23340
      label = 12608; //@line 23341
      break L15889;
     }
     $12 = $5 + 24 | 0; //@line 23344
     if ((_psi_read($fp, HEAP32[$12 >> 2] | 0, 512) | 0) != 0) {
      $_0 = 1; //@line 23350
      label = 12625; //@line 23351
      break L15889;
     }
     $_01112_i = HEAP32[$check >> 2] | 0;
     $_013_i = 256;
     $tmp_014_i = HEAP32[$12 >> 2] | 0;
     while (1) {
      $26 = ((HEAPU8[$tmp_014_i] | 0) << 8 | (HEAPU8[$tmp_014_i + 1 | 0] | 0)) + $_01112_i | 0; //@line 23368
      $29 = $26 >>> 1 | $26 << 31; //@line 23371
      $30 = $_013_i - 1 | 0; //@line 23372
      if (($30 | 0) == 0) {
       break;
      } else {
       $_01112_i = $29;
       $_013_i = $30;
       $tmp_014_i = $tmp_014_i + 2 | 0;
      }
     }
     HEAP32[$check >> 2] = $29; //@line 23382
    } while ($s_023 >>> 0 < $scnt >>> 0);
    if ($3) {
     break;
    } else {
     $s_023_1 = 0; //@line 23395
    }
    do {
     $s_023_1 = $s_023_1 + 1 | 0; //@line 23399
     $35 = _psi_sct_new($c_027, 1, $s_023_1, 512) | 0; //@line 23400
     if (($35 | 0) == 0) {
      $_0 = 1; //@line 23404
      label = 12627; //@line 23405
      break L15889;
     }
     _psi_sct_set_encoding($35, $2); //@line 23408
     if ((_psi_img_add_sector($img, $35, $c_027, 1) | 0) != 0) {
      $_lcssa29 = $35; //@line 23413
      label = 12608; //@line 23414
      break L15889;
     }
     $41 = $35 + 24 | 0; //@line 23417
     if ((_psi_read($fp, HEAP32[$41 >> 2] | 0, 512) | 0) != 0) {
      $_0 = 1; //@line 23423
      label = 12626; //@line 23424
      break L15889;
     }
     $_01112_i_1 = HEAP32[$check >> 2] | 0;
     $_013_i_1 = 256;
     $tmp_014_i_1 = HEAP32[$41 >> 2] | 0;
     while (1) {
      $55 = ((HEAPU8[$tmp_014_i_1] | 0) << 8 | (HEAPU8[$tmp_014_i_1 + 1 | 0] | 0)) + $_01112_i_1 | 0; //@line 23441
      $58 = $55 >>> 1 | $55 << 31; //@line 23444
      $59 = $_013_i_1 - 1 | 0; //@line 23445
      if (($59 | 0) == 0) {
       break;
      } else {
       $_01112_i_1 = $58;
       $_013_i_1 = $59;
       $tmp_014_i_1 = $tmp_014_i_1 + 2 | 0;
      }
     }
     HEAP32[$check >> 2] = $58; //@line 23455
    } while ($s_023_1 >>> 0 < $scnt >>> 0);
   }
  } while (0);
  $63 = $c_027 + 1 | 0; //@line 23466
  if ($63 >>> 0 < 80) {
   $c_027 = $63; //@line 23470
  } else {
   $_0 = 0; //@line 23472
   label = 12624; //@line 23473
   break;
  }
 }
 if ((label | 0) == 12626) {
  return $_0 | 0; //@line 23480
 } else if ((label | 0) == 12627) {
  return $_0 | 0; //@line 23485
 } else if ((label | 0) == 12624) {
  return $_0 | 0; //@line 23490
 } else if ((label | 0) == 12608) {
  _psi_sct_del($_lcssa29); //@line 23494
  $_0 = 1; //@line 23496
  return $_0 | 0; //@line 23499
 } else if ((label | 0) == 12625) {
  return $_0 | 0; //@line 23504
 } else if ((label | 0) == 12622) {
  return $_0 | 0; //@line 23509
 }
 return 0;
}
function _psi_load_imd($fp) {
 $fp = $fp | 0;
 var $dat_i_i = 0, $smap_i_i = 0, $cmap_i_i = 0, $hmap_i_i = 0, $buf_i = 0, $1 = 0, $4 = 0, $13 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $28 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $40 = 0, $44 = 0, $50 = 0, $i_044_i_i = 0, $56 = 0, $63 = 0, $71 = 0, $73 = 0, $78 = 0, $85 = 0, $enc_0_i_i_i = 0, $92 = 0, $106 = 0, $109 = 0, $114 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 23529
 STACKTOP = STACKTOP + 784 | 0; //@line 23529
 $dat_i_i = sp | 0; //@line 23530
 $smap_i_i = sp + 8 | 0; //@line 23531
 $cmap_i_i = sp + 264 | 0; //@line 23532
 $hmap_i_i = sp + 520 | 0; //@line 23533
 $buf_i = sp + 776 | 0; //@line 23534
 $1 = _psi_img_new() | 0; //@line 23535
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 23539
  STACKTOP = sp; //@line 23541
  return $_0 | 0; //@line 23542
 }
 $4 = $buf_i | 0; //@line 23544
 L15922 : do {
  if ((_fread($4 | 0, 1, 4, $fp | 0) | 0) == 4) {
   if ((_psi_get_uint32_be($4, 0) | 0) != 1229800480) {
    break;
   }
   _psi_img_add_comment($1, $4, 4) | 0; //@line 23556
   while (1) {
    $13 = _fgetc($fp | 0) | 0; //@line 23559
    if (($13 | 0) == (-1 | 0)) {
     break L15922;
    } else if (($13 | 0) == 26) {
     break;
    }
    HEAP8[$4] = $13 & 255; //@line 23566
    _psi_img_add_comment($1, $4, 1) | 0; //@line 23567
   }
   _psi_img_clean_comment($1); //@line 23570
   $18 = $smap_i_i | 0; //@line 23571
   $19 = $cmap_i_i | 0; //@line 23572
   $20 = $hmap_i_i | 0; //@line 23573
   $21 = $buf_i + 1 | 0; //@line 23574
   $22 = $buf_i + 2 | 0; //@line 23575
   $23 = $buf_i + 3 | 0; //@line 23576
   $24 = $buf_i + 4 | 0; //@line 23577
   L15929 : while (1) {
    $25 = _fread($4 | 0, 1, 5, $fp | 0) | 0; //@line 23580
    if (($25 | 0) == 0) {
     $_0 = $1; //@line 23582
     label = 12671; //@line 23583
     break;
    } else if (($25 | 0) != 5) {
     break L15922;
    }
    $28 = HEAPU8[$21] | 0; //@line 23589
    $31 = HEAP8[$22] & 1; //@line 23592
    $32 = HEAP8[$23] | 0; //@line 23593
    $33 = $32 & 255; //@line 23594
    $34 = HEAP8[$24] | 0; //@line 23595
    if ($32 << 24 >> 24 == 0) {
     continue;
    }
    if (($34 & 255) > 6) {
     break L15922;
    }
    $40 = 128 << ($34 & 255); //@line 23607
    if ((_fread($18 | 0, 1, $33 | 0, $fp | 0) | 0) != ($33 | 0)) {
     break L15922;
    }
    $44 = HEAP8[$22] | 0; //@line 23614
    if ($44 << 24 >> 24 < 0) {
     if ((_fread($19 | 0, 1, $33 | 0, $fp | 0) | 0) != ($33 | 0)) {
      break L15922;
     }
     $50 = HEAP8[$22] | 0; //@line 23626
    } else {
     $50 = $44; //@line 23628
    }
    if (($50 & 64) == 0) {
     $i_044_i_i = 0; //@line 23635
    } else {
     if ((_fread($20 | 0, 1, $33 | 0, $fp | 0) | 0) == ($33 | 0)) {
      $i_044_i_i = 0; //@line 23641
     } else {
      break L15922;
     }
    }
    while (1) {
     $56 = HEAP8[$22] | 0; //@line 23648
     if ($56 << 24 >> 24 < 0) {
      $63 = HEAPU8[$cmap_i_i + $i_044_i_i | 0] | 0; //@line 23656
     } else {
      $63 = $28; //@line 23658
     }
     if (($56 & 64) == 0) {
      $71 = $31; //@line 23665
     } else {
      $71 = HEAPU8[$hmap_i_i + $i_044_i_i | 0] | 0; //@line 23671
     }
     $73 = HEAP8[$smap_i_i + $i_044_i_i | 0] | 0; //@line 23675
     if ((_fread($dat_i_i | 0, 1, 1, $fp | 0) | 0) != 1) {
      break L15922;
     }
     $78 = _psi_sct_new($63, $71, $73 & 255, $40) | 0; //@line 23683
     if (($78 | 0) == 0) {
      break L15922;
     }
     _psi_sct_set_mfm_size($78, $34); //@line 23689
     if ((_psi_img_add_sector($1, $78, $28, $31) | 0) != 0) {
      label = 12651; //@line 23694
      break L15929;
     }
     $85 = HEAPU8[$4] | 0; //@line 23698
     if (($85 | 0) == 4) {
      $enc_0_i_i_i = 2; //@line 23701
     } else if (($85 | 0) == 5) {
      $enc_0_i_i_i = 2; //@line 23704
     } else if (($85 | 0) == 2) {
      $enc_0_i_i_i = 1; //@line 23707
     } else if (($85 | 0) == 3) {
      $enc_0_i_i_i = 32770; //@line 23710
     } else if (($85 | 0) == 1) {
      $enc_0_i_i_i = 1; //@line 23713
     } else if (($85 | 0) == 0) {
      $enc_0_i_i_i = 32769; //@line 23715
     } else {
      break L15922;
     }
     _psi_sct_set_encoding($78, $enc_0_i_i_i); //@line 23720
     $92 = HEAP8[$dat_i_i] | 0; //@line 23721
     if (($92 - 5 & 255) < 4) {
      _psi_sct_set_flags($78, 2, 1); //@line 23726
     }
     if (($92 << 24 >> 24 | 0) == 1 | ($92 << 24 >> 24 | 0) == 5) {
      label = 12665; //@line 23730
     } else if (($92 << 24 >> 24 | 0) == 3 | ($92 << 24 >> 24 | 0) == 4 | ($92 << 24 >> 24 | 0) == 7 | ($92 << 24 >> 24 | 0) == 8) {
      _psi_sct_set_flags($78, 4, 1); //@line 23732
      if (($92 << 24 >> 24 | 0) == 3 | ($92 << 24 >> 24 | 0) == 5 | ($92 << 24 >> 24 | 0) == 7) {
       label = 12665; //@line 23734
      } else if (($92 << 24 >> 24 | 0) == 4 | ($92 << 24 >> 24 | 0) == 6 | ($92 << 24 >> 24 | 0) == 8) {
       label = 12663; //@line 23736
      } else {
       break L15922;
      }
     } else if (($92 << 24 >> 24 | 0) == 0) {
      _psi_sct_set_flags($78, 2, 1); //@line 23741
      _psi_sct_fill($78, 0); //@line 23742
     } else if (($92 << 24 >> 24 | 0) == 2 | ($92 << 24 >> 24 | 0) == 6) {
      label = 12663; //@line 23745
     } else {
      break L15922;
     }
     if ((label | 0) == 12665) {
      label = 0; //@line 23750
      $106 = $78 + 10 | 0; //@line 23753
      $109 = _fread(HEAP32[$78 + 24 >> 2] | 0, 1, HEAPU16[$106 >> 1] | 0 | 0, $fp | 0) | 0; //@line 23756
      if (($109 | 0) != (HEAPU16[$106 >> 1] | 0 | 0)) {
       break L15922;
      }
     } else if ((label | 0) == 12663) {
      label = 0; //@line 23766
      if ((_fread($dat_i_i | 0, 1, 1, $fp | 0) | 0) != 1) {
       break L15922;
      }
      _psi_sct_fill($78, HEAPU8[$dat_i_i] | 0); //@line 23775
     }
     $114 = $i_044_i_i + 1 | 0; //@line 23778
     if ($114 >>> 0 < $33 >>> 0) {
      $i_044_i_i = $114; //@line 23782
     } else {
      continue L15929;
     }
    }
   }
   if ((label | 0) == 12671) {
    STACKTOP = sp; //@line 23790
    return $_0 | 0; //@line 23791
   } else if ((label | 0) == 12651) {
    _psi_sct_del($78); //@line 23794
    break;
   }
  }
 } while (0);
 _psi_img_del($1); //@line 23799
 $_0 = 0; //@line 23801
 STACKTOP = sp; //@line 23803
 return $_0 | 0; //@line 23804
}
function _psi_save_imd($fp, $img) {
 $fp = $fp | 0;
 $img = $img | 0;
 var $buf_i = 0, $t_i = 0, $2 = 0, $3 = 0, $4 = 0, $39 = 0, $41 = 0, $44 = 0, $47 = 0, $49 = 0, $51 = 0, $53 = 0, $i_0_i = 0, $i_11_i = 0, $62 = 0, $68 = 0, $75 = 0, $76 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $c_030 = 0, $87 = 0, $88 = 0, $91 = 0, $92 = 0, $h_028 = 0, $96 = 0, $98 = 0, $99 = 0, $101 = 0, $102 = 0, $i_0_i14 = 0, $need_cmap_0_i = 0, $need_hmap_0_i = 0, $107 = 0, $110 = 0, $130 = 0, $131 = 0, $137 = 0, $_idx49_val_i = 0, $139 = 0, $146 = 0, $size_01_i_i = 0, $147 = 0, $151 = 0, $156 = 0, $158 = 0, $bcnt_0_i = 0, $cmap_0_i = 0, $bcnt_1_i = 0, $hmap_0_i = 0, $165 = 0, $i_154_us_us_i = 0, $i_154_us_i = 0, $175 = 0, $i_154_us56_i = 0, $187 = 0, $i_154_i = 0, $199 = 0, $i_253_i = 0, $218 = 0, $226 = 0, $228 = 0, $or_cond_not_i_i = 0, $mode_0_i_i = 0, $239 = 0, $242 = 0, $245 = 0, $248 = 0, $260 = 0, $261 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 23846
 STACKTOP = STACKTOP + 784 | 0; //@line 23846
 $buf_i = sp | 0; //@line 23847
 $t_i = sp + 776 | 0; //@line 23848
 $2 = $img + 12 | 0; //@line 23850
 $3 = HEAP32[$2 >> 2] | 0; //@line 23851
 $4 = $img + 8 | 0; //@line 23852
 do {
  if ((HEAP32[$4 >> 2] | 0) >>> 0 < 29) {
   label = 12681; //@line 23858
  } else {
   if ((HEAP8[$3] | 0) != 73) {
    label = 12681; //@line 23864
    break;
   }
   if ((HEAP8[$3 + 1 | 0] | 0) != 77) {
    label = 12681; //@line 23872
    break;
   }
   if ((HEAP8[$3 + 2 | 0] | 0) != 68) {
    label = 12681; //@line 23880
    break;
   }
   if ((HEAP8[$3 + 12 | 0] | 0) != 47) {
    label = 12681; //@line 23888
    break;
   }
   if ((HEAP8[$3 + 15 | 0] | 0) != 47) {
    label = 12681; //@line 23896
    break;
   }
   if ((HEAP8[$3 + 20 | 0] | 0) != 32) {
    label = 12681; //@line 23904
    break;
   }
   _psi_write($fp, $3, 29) | 0; //@line 23907
   if ((HEAP32[$4 >> 2] | 0) >>> 0 <= 29) {
    $i_0_i = 29; //@line 23912
    break;
   }
   $i_0_i = (HEAP8[(HEAP32[$2 >> 2] | 0) + 29 | 0] | 0) == 10 ? 30 : 29; //@line 23921
  }
 } while (0);
 if ((label | 0) == 12681) {
  HEAP32[$t_i >> 2] = _time(0) | 0; //@line 23926
  $39 = _localtime($t_i | 0) | 0; //@line 23927
  $41 = HEAP32[$39 + 12 >> 2] | 0; //@line 23929
  $44 = (HEAP32[$39 + 16 >> 2] | 0) + 1 | 0; //@line 23932
  $47 = (HEAP32[$39 + 20 >> 2] | 0) + 1900 | 0; //@line 23935
  $49 = HEAP32[$39 + 8 >> 2] | 0; //@line 23937
  $51 = HEAP32[$39 + 4 >> 2] | 0; //@line 23939
  $53 = HEAP32[$39 >> 2] | 0; //@line 23941
  _fprintf($fp | 0, 56528, (tempInt = STACKTOP, STACKTOP = STACKTOP + 48 | 0, HEAP32[tempInt >> 2] = $41, HEAP32[tempInt + 8 >> 2] = $44, HEAP32[tempInt + 16 >> 2] = $47, HEAP32[tempInt + 24 >> 2] = $49, HEAP32[tempInt + 32 >> 2] = $51, HEAP32[tempInt + 40 >> 2] = $53, tempInt) | 0) | 0; //@line 23942
  $i_0_i = 0; //@line 23943
 }
 _fputc(13, $fp | 0) | 0; //@line 23946
 _fputc(10, $fp | 0) | 0; //@line 23947
 if ($i_0_i >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0) {
  $i_11_i = $i_0_i; //@line 23952
  do {
   $62 = HEAP8[(HEAP32[$2 >> 2] | 0) + $i_11_i | 0] | 0; //@line 23957
   if ($62 << 24 >> 24 == 10) {
    _fputc(13, $fp | 0) | 0; //@line 23961
    _fputc(10, $fp | 0) | 0; //@line 23962
   } else {
    $68 = $62 & 255; //@line 23965
    _fputc($68 | 0, $fp | 0) | 0; //@line 23966
   }
   $i_11_i = $i_11_i + 1 | 0; //@line 23968
  } while ($i_11_i >>> 0 < (HEAP32[$4 >> 2] | 0) >>> 0);
 }
 _fputc(26, $fp | 0) | 0; //@line 23979
 $75 = $img | 0; //@line 23980
 $76 = HEAP16[$75 >> 1] | 0; //@line 23981
 L15996 : do {
  if ($76 << 16 >> 16 != 0) {
   $78 = $img + 4 | 0; //@line 23986
   $79 = $buf_i | 0; //@line 23987
   $80 = $buf_i + 1 | 0; //@line 23988
   $81 = $buf_i + 2 | 0; //@line 23989
   $82 = $buf_i + 3 | 0; //@line 23990
   $83 = $buf_i + 4 | 0; //@line 23991
   $c_030 = 0;
   $84 = $76;
   L15998 : while (1) {
    $87 = HEAP32[(HEAP32[$78 >> 2] | 0) + ($c_030 << 2) >> 2] | 0; //@line 23999
    $88 = $87 + 2 | 0; //@line 24000
    if ((HEAP16[$88 >> 1] | 0) == 0) {
     $260 = $84; //@line 24005
    } else {
     $91 = $87 + 4 | 0; //@line 24007
     $92 = $c_030 & 255; //@line 24008
     $h_028 = 0; //@line 24010
     do {
      $96 = HEAP32[(HEAP32[$91 >> 2] | 0) + ($h_028 << 2) >> 2] | 0; //@line 24015
      $98 = HEAP16[$96 + 2 >> 1] | 0; //@line 24017
      $99 = $98 & 65535; //@line 24018
      if ($98 << 16 >> 16 != 0) {
       $101 = $96 + 4 | 0; //@line 24022
       $102 = HEAP32[$101 >> 2] | 0; //@line 24023
       $need_hmap_0_i = 0;
       $need_cmap_0_i = 0;
       $i_0_i14 = 1;
       while (1) {
        if ($i_0_i14 >>> 0 >= $99 >>> 0) {
         break;
        }
        $107 = HEAP32[$102 + ($i_0_i14 << 2) >> 2] | 0; //@line 24036
        $110 = HEAP32[$102 >> 2] | 0; //@line 24039
        if ((HEAP16[$107 + 10 >> 1] | 0) != (HEAP16[$110 + 10 >> 1] | 0)) {
         $_0 = 1; //@line 24045
         label = 12731; //@line 24046
         break L15998;
        }
        if ((HEAP16[$107 + 16 >> 1] | 0) == (HEAP16[$110 + 16 >> 1] | 0)) {
         $need_hmap_0_i = (HEAPU16[$107 + 6 >> 1] | 0) == ($h_028 | 0) ? $need_hmap_0_i : 1;
         $need_cmap_0_i = (HEAPU16[$107 + 4 >> 1] | 0) == ($c_030 | 0) ? $need_cmap_0_i : 1;
         $i_0_i14 = $i_0_i14 + 1 | 0;
        } else {
         $_0 = 1; //@line 24069
         label = 12732; //@line 24070
         break L15998;
        }
       }
       $130 = HEAP32[$102 >> 2] | 0; //@line 24074
       $131 = HEAPU16[$130 + 16 >> 1] | 0; //@line 24077
       if (($131 | 0) == 32769) {
        HEAP8[$79] = 0; //@line 24079
       } else if (($131 | 0) == 1) {
        HEAP8[$79] = 2; //@line 24082
       } else if (($131 | 0) == 32770) {
        HEAP8[$79] = 3; //@line 24085
       } else if (($131 | 0) == 2) {
        HEAP8[$79] = 5; //@line 24088
       } else {
        HEAP8[$79] = 5; //@line 24091
       }
       HEAP8[$80] = $92; //@line 24094
       $137 = $h_028 & 255; //@line 24095
       HEAP8[$81] = $137; //@line 24096
       HEAP8[$82] = $98 & 255; //@line 24098
       $_idx49_val_i = HEAP16[$130 + 10 >> 1] | 0; //@line 24100
       $139 = $_idx49_val_i & 65535; //@line 24101
       if (($139 + 65535 & $139 | 0) != 0 | ($_idx49_val_i & 65535) > 8192) {
        $_0 = 1; //@line 24109
        label = 12736; //@line 24110
        break L15998;
       }
       HEAP8[$83] = 0; //@line 24113
       if (($_idx49_val_i & 65535) > 255) {
        $size_01_i_i = $139;
        $146 = 0;
        while (1) {
         $147 = $146 + 1 & 255; //@line 24121
         if ($size_01_i_i >>> 0 > 511) {
          $size_01_i_i = $size_01_i_i >>> 1;
          $146 = $147;
         } else {
          break;
         }
        }
        HEAP8[$83] = $147; //@line 24131
       }
       $151 = $99 + 5 | 0; //@line 24134
       if (($need_cmap_0_i | 0) == 0) {
        $cmap_0_i = 0;
        $bcnt_0_i = $151;
        $158 = $137;
       } else {
        $156 = $137 | -128; //@line 24142
        HEAP8[$81] = $156; //@line 24143
        $cmap_0_i = $buf_i + $151 | 0;
        $bcnt_0_i = $151 + $99 | 0;
        $158 = $156;
       }
       if (($need_hmap_0_i | 0) == 0) {
        $hmap_0_i = 0;
        $bcnt_1_i = $bcnt_0_i;
       } else {
        HEAP8[$81] = $158 | 64; //@line 24158
        $hmap_0_i = $buf_i + $bcnt_0_i | 0;
        $bcnt_1_i = $bcnt_0_i + $99 | 0;
       }
       $165 = ($hmap_0_i | 0) == 0; //@line 24165
       if (($cmap_0_i | 0) == 0) {
        if ($165) {
         $i_154_us_us_i = 0; //@line 24168
         do {
          HEAP8[$buf_i + ($i_154_us_us_i + 5) | 0] = HEAP16[(HEAP32[$102 + ($i_154_us_us_i << 2) >> 2] | 0) + 8 >> 1] & 255; //@line 24178
          $i_154_us_us_i = $i_154_us_us_i + 1 | 0; //@line 24179
         } while ($i_154_us_us_i >>> 0 < $99 >>> 0);
        } else {
         $i_154_us_i = 0; //@line 24189
         do {
          $175 = HEAP32[$102 + ($i_154_us_i << 2) >> 2] | 0; //@line 24193
          HEAP8[$buf_i + ($i_154_us_i + 5) | 0] = HEAP16[$175 + 8 >> 1] & 255; //@line 24199
          HEAP8[$hmap_0_i + $i_154_us_i | 0] = HEAP16[$175 + 6 >> 1] & 255; //@line 24204
          $i_154_us_i = $i_154_us_i + 1 | 0; //@line 24205
         } while ($i_154_us_i >>> 0 < $99 >>> 0);
        }
       } else {
        if ($165) {
         $i_154_us56_i = 0; //@line 24217
         do {
          $187 = HEAP32[$102 + ($i_154_us56_i << 2) >> 2] | 0; //@line 24221
          HEAP8[$buf_i + ($i_154_us56_i + 5) | 0] = HEAP16[$187 + 8 >> 1] & 255; //@line 24227
          HEAP8[$cmap_0_i + $i_154_us56_i | 0] = HEAP16[$187 + 4 >> 1] & 255; //@line 24232
          $i_154_us56_i = $i_154_us56_i + 1 | 0; //@line 24233
         } while ($i_154_us56_i >>> 0 < $99 >>> 0);
        } else {
         $i_154_i = 0; //@line 24243
         do {
          $199 = HEAP32[$102 + ($i_154_i << 2) >> 2] | 0; //@line 24247
          HEAP8[$buf_i + ($i_154_i + 5) | 0] = HEAP16[$199 + 8 >> 1] & 255; //@line 24253
          HEAP8[$cmap_0_i + $i_154_i | 0] = HEAP16[$199 + 4 >> 1] & 255; //@line 24258
          HEAP8[$hmap_0_i + $i_154_i | 0] = HEAP16[$199 + 6 >> 1] & 255; //@line 24263
          $i_154_i = $i_154_i + 1 | 0; //@line 24264
         } while ($i_154_i >>> 0 < $99 >>> 0);
        }
       }
       if ((_fwrite($79 | 0, 1, $bcnt_1_i | 0, $fp | 0) | 0) == ($bcnt_1_i | 0)) {
        $i_253_i = 0; //@line 24279
       } else {
        $_0 = 1; //@line 24281
        label = 12733; //@line 24282
        break L15998;
       }
       do {
        $218 = HEAP32[(HEAP32[$101 >> 2] | 0) + ($i_253_i << 2) >> 2] | 0; //@line 24289
        if ((_psi_sct_uniform($218) | 0) == 0) {
         $226 = 0; //@line 24294
        } else {
         $226 = (HEAP16[$218 + 10 >> 1] | 0) != 0; //@line 24299
        }
        $228 = HEAP32[$218 + 12 >> 2] | 0; //@line 24303
        $or_cond_not_i_i = ($228 & 6 | 0) == 6; //@line 24306
        if ($or_cond_not_i_i | ($228 & 2 | 0) != 0) {
         $mode_0_i_i = $or_cond_not_i_i ? 7 : 5; //@line 24312
        } else {
         $mode_0_i_i = $228 >>> 1 & 2 | 1; //@line 24317
        }
        _fputc($mode_0_i_i + ($226 & 1) | 0, $fp | 0) | 0; //@line 24322
        $239 = HEAP32[$218 + 24 >> 2] | 0; //@line 24324
        if ($226) {
         $242 = HEAPU8[$239] | 0; //@line 24328
         _fputc($242 | 0, $fp | 0) | 0; //@line 24329
        } else {
         $245 = $218 + 10 | 0; //@line 24332
         $248 = _fwrite($239 | 0, 1, HEAPU16[$245 >> 1] | 0, $fp | 0) | 0; //@line 24335
         if (($248 | 0) != (HEAPU16[$245 >> 1] | 0)) {
          $_0 = 1; //@line 24341
          label = 12735; //@line 24342
          break L15998;
         }
        }
        $i_253_i = $i_253_i + 1 | 0; //@line 24346
       } while ($i_253_i >>> 0 < $99 >>> 0);
      }
      $h_028 = $h_028 + 1 | 0; //@line 24356
     } while ($h_028 >>> 0 < (HEAPU16[$88 >> 1] | 0) >>> 0);
     $260 = HEAP16[$75 >> 1] | 0; //@line 24369
    }
    $261 = $c_030 + 1 | 0; //@line 24372
    if ($261 >>> 0 < ($260 & 65535) >>> 0) {
     $c_030 = $261;
     $84 = $260;
    } else {
     break L15996;
    }
   }
   if ((label | 0) == 12731) {
    STACKTOP = sp; //@line 24384
    return $_0 | 0; //@line 24385
   } else if ((label | 0) == 12732) {
    STACKTOP = sp; //@line 24389
    return $_0 | 0; //@line 24390
   } else if ((label | 0) == 12733) {
    STACKTOP = sp; //@line 24394
    return $_0 | 0; //@line 24395
   } else if ((label | 0) == 12735) {
    STACKTOP = sp; //@line 24399
    return $_0 | 0; //@line 24400
   } else if ((label | 0) == 12736) {
    STACKTOP = sp; //@line 24404
    return $_0 | 0; //@line 24405
   }
  }
 } while (0);
 _fflush($fp | 0) | 0; //@line 24409
 $_0 = 0; //@line 24411
 STACKTOP = sp; //@line 24413
 return $_0 | 0; //@line 24414
}
function _psi_probe_imd_fp($fp) {
 $fp = $fp | 0;
 var $4 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 24423
 STACKTOP = STACKTOP + 16 | 0; //@line 24423
 if ((_fseek($fp | 0, 0, 0) | 0) != 0) {
  $_0 = 0; //@line 24429
  STACKTOP = sp; //@line 24431
  return $_0 | 0; //@line 24432
 }
 $4 = sp | 0; //@line 24434
 if ((_fread($4 | 0, 1, 4, $fp | 0) | 0) != 4) {
  $_0 = 0; //@line 24439
  STACKTOP = sp; //@line 24441
  return $_0 | 0; //@line 24442
 }
 $_0 = (_psi_get_uint32_be($4, 0) | 0) == 1229800480 | 0; //@line 24448
 STACKTOP = sp; //@line 24450
 return $_0 | 0; //@line 24451
}
function _psi_load_msa($fp) {
 $fp = $fp | 0;
 var $1 = 0, $4 = 0, $11 = 0, $13 = 0, $14 = 0, $15 = 0, $22 = 0, $23 = 0, $25 = 0, $26 = 0, $c_039_i = 0, $h_036_i = 0, $27 = 0, $34 = 0, $fcnt_040_i_i = 0, $_02839_i_i = 0, $_02938_i_i = 0, $38 = 0, $41 = 0, $46 = 0, $47 = 0, $48 = 0, $56 = 0, $60 = 0, $61 = 0, $umax_i_i = 0, $63 = 0, $_1_lcssa_i_i = 0, $_130_lcssa_i_i = 0, $_029_be_i_i = 0, $_028_be_i_i = 0, $fcnt_0_be_i_i = 0, $s_034_i = 0, $72 = 0, $73 = 0, $81 = 0, $83 = 0, $87 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 24470
 STACKTOP = STACKTOP + 16 | 0; //@line 24470
 $1 = _psi_img_new() | 0; //@line 24472
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 24476
  STACKTOP = sp; //@line 24478
  return $_0 | 0; //@line 24479
 }
 $4 = sp | 0; //@line 24481
 if ((_psi_read_ofs($fp, 0, $4, 10) | 0) != 0) {
  $_0 = $1; //@line 24486
  STACKTOP = sp; //@line 24488
  return $_0 | 0; //@line 24489
 }
 if ((_psi_get_uint16_be($4, 0) | 0) != 3599) {
  $_0 = $1; //@line 24495
  STACKTOP = sp; //@line 24497
  return $_0 | 0; //@line 24498
 }
 $11 = _psi_get_uint16_be($4, 2) | 0; //@line 24500
 $13 = (_psi_get_uint16_be($4, 4) | 0) + 1 | 0; //@line 24502
 $14 = _psi_get_uint16_be($4, 6) | 0; //@line 24503
 $15 = _psi_get_uint16_be($4, 8) | 0; //@line 24504
 do {
  if (!(($11 | 0) == 0 | $11 >>> 0 > 127)) {
   if ($13 >>> 0 > 16 | $15 >>> 0 < $14 >>> 0) {
    break;
   }
   $22 = $11 << 9; //@line 24518
   $23 = _malloc($22) | 0; //@line 24519
   if (($23 | 0) == 0) {
    break;
   }
   $25 = ($13 | 0) == 0; //@line 24525
   $26 = ($22 | 0) == 0; //@line 24526
   $c_039_i = $14; //@line 24528
   L16089 : while (1) {
    if (!$25) {
     $h_036_i = 0; //@line 24533
     do {
      $27 = _psi_img_get_track($1, $c_039_i, $h_036_i, 1) | 0; //@line 24536
      if (($27 | 0) == 0) {
       label = 12753; //@line 24540
       break L16089;
      }
      if ((_psi_read($fp, $23, 2) | 0) != 0) {
       label = 12768; //@line 24547
       break L16089;
      }
      $34 = _psi_get_uint16_be($23, 0) | 0; //@line 24550
      do {
       if (($34 | 0) == ($22 | 0)) {
        if ((_psi_read($fp, $23, $22) | 0) == 0) {
         $s_034_i = 0; //@line 24559
        } else {
         label = 12768; //@line 24561
         break L16089;
        }
       } else {
        if ($26) {
         $s_034_i = 0; //@line 24567
         break;
        } else {
         $_02938_i_i = $22;
         $_02839_i_i = $23;
         $fcnt_040_i_i = $34;
        }
        while (1) {
         if (($fcnt_040_i_i | 0) == 0) {
          label = 12768; //@line 24579
          break L16089;
         }
         $38 = _fgetc($fp | 0) | 0; //@line 24582
         if (($38 | 0) == -1) {
          label = 12768; //@line 24586
          break L16089;
         }
         $41 = $fcnt_040_i_i - 1 | 0; //@line 24589
         if (($38 | 0) == 229) {
          if ($41 >>> 0 < 3) {
           label = 12768; //@line 24596
           break L16089;
          }
          $46 = _fgetc($fp | 0) | 0; //@line 24599
          $47 = _fgetc($fp | 0) | 0; //@line 24600
          $48 = _fgetc($fp | 0) | 0; //@line 24601
          if (($46 | 0) == -1 | ($47 | 0) == -1 | ($48 | 0) == -1) {
           label = 12768; //@line 24609
           break L16089;
          }
          $56 = $47 << 8 & 65280 | $48 & 255; //@line 24615
          if (($_02938_i_i | 0) == 0 | ($56 | 0) == 0) {
           $_130_lcssa_i_i = $_02938_i_i;
           $_1_lcssa_i_i = $_02839_i_i;
          } else {
           $60 = -$_02938_i_i | 0; //@line 24624
           $61 = -$56 | 0; //@line 24625
           $umax_i_i = $60 >>> 0 > $61 >>> 0 ? $60 : $61; //@line 24627
           $63 = -$umax_i_i | 0; //@line 24628
           _memset($_02839_i_i | 0, $46 & 255 | 0, $63 | 0); //@line 24629
           $_130_lcssa_i_i = $umax_i_i + $_02938_i_i | 0;
           $_1_lcssa_i_i = $_02839_i_i + $63 | 0;
          }
          $fcnt_0_be_i_i = $fcnt_040_i_i - 4 | 0;
          $_028_be_i_i = $_1_lcssa_i_i;
          $_029_be_i_i = $_130_lcssa_i_i;
         } else {
          HEAP8[$_02839_i_i] = $38 & 255; //@line 24643
          $fcnt_0_be_i_i = $41;
          $_028_be_i_i = $_02839_i_i + 1 | 0;
          $_029_be_i_i = $_02938_i_i - 1 | 0;
         }
         if (($_029_be_i_i | 0) == 0) {
          $s_034_i = 0; //@line 24653
          break;
         } else {
          $_02938_i_i = $_029_be_i_i;
          $_02839_i_i = $_028_be_i_i;
          $fcnt_040_i_i = $fcnt_0_be_i_i;
         }
        }
       }
      } while (0);
      while (1) {
       $72 = $s_034_i + 1 | 0; //@line 24663
       $73 = _psi_sct_new($c_039_i, $h_036_i, $72, 512) | 0; //@line 24664
       if (($73 | 0) == 0) {
        label = 12770; //@line 24668
        break L16089;
       }
       _psi_sct_set_encoding($73, 2); //@line 24671
       if ((_psi_trk_add_sector($27, $73) | 0) != 0) {
        label = 12772; //@line 24676
        break L16089;
       }
       $81 = HEAP32[$73 + 24 >> 2] | 0; //@line 24680
       $83 = $23 + ($s_034_i << 9) | 0; //@line 24682
       _memcpy($81 | 0, $83 | 0, 512) | 0; //@line 24683
       if ($72 >>> 0 < $11 >>> 0) {
        $s_034_i = $72; //@line 24687
       } else {
        break;
       }
      }
      $h_036_i = $h_036_i + 1 | 0; //@line 24692
     } while ($h_036_i >>> 0 < $13 >>> 0);
    }
    $87 = $c_039_i + 1 | 0; //@line 24702
    if ($87 >>> 0 > $15 >>> 0) {
     label = 12776; //@line 24706
     break;
    } else {
     $c_039_i = $87; //@line 24709
    }
   }
   if ((label | 0) == 12768) {
    _free($23); //@line 24713
    break;
   } else if ((label | 0) == 12770) {
    _free($23); //@line 24718
    break;
   } else if ((label | 0) == 12753) {
    _free($23); //@line 24723
    break;
   } else if ((label | 0) == 12772) {
    _psi_sct_del($73); //@line 24728
    break;
   } else if ((label | 0) == 12776) {
    _free($23); //@line 24733
    $_0 = $1; //@line 24735
    STACKTOP = sp; //@line 24737
    return $_0 | 0; //@line 24738
   }
  }
 } while (0);
 _psi_img_del($1); //@line 24742
 $_0 = 0; //@line 24744
 STACKTOP = sp; //@line 24746
 return $_0 | 0; //@line 24747
}
function _psi_save_msa($fp, $img) {
 $fp = $fp | 0;
 $img = $img | 0;
 var $1 = 0, $4 = 0, $7 = 0, $8 = 0, $11 = 0, $15 = 0, $25 = 0, $27 = 0, $28 = 0, $c_024 = 0, $h_023 = 0, $s_0 = 0, $36 = 0, $37 = 0, $50 = 0, $54 = 0, $55 = 0, $56 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 24763
 STACKTOP = STACKTOP + 16 | 0; //@line 24763
 $1 = _psi_img_get_cylinder($img, 0, 0) | 0; //@line 24765
 if (($1 | 0) == 0) {
  $_0 = 1; //@line 24769
  STACKTOP = sp; //@line 24771
  return $_0 | 0; //@line 24772
 }
 $4 = _psi_img_get_track($img, 0, 0, 0) | 0; //@line 24774
 if (($4 | 0) == 0) {
  $_0 = 1; //@line 24778
  STACKTOP = sp; //@line 24780
  return $_0 | 0; //@line 24781
 }
 $7 = sp | 0; //@line 24783
 _psi_set_uint16_be($7, 0, 3599); //@line 24784
 $8 = $4 + 2 | 0; //@line 24785
 _psi_set_uint16_be($7, 2, HEAPU16[$8 >> 1] | 0); //@line 24788
 $11 = $1 + 2 | 0; //@line 24789
 _psi_set_uint16_be($7, 4, (HEAPU16[$11 >> 1] | 0) - 1 | 0); //@line 24793
 _psi_set_uint16_be($7, 6, 0); //@line 24794
 $15 = $img | 0; //@line 24795
 _psi_set_uint16_be($7, 8, (HEAPU16[$15 >> 1] | 0) - 1 | 0); //@line 24799
 if ((_psi_write($fp, $7, 10) | 0) != 0) {
  $_0 = 1; //@line 24804
  STACKTOP = sp; //@line 24806
  return $_0 | 0; //@line 24807
 }
 _psi_set_uint16_be($7, 0, HEAPU16[$8 >> 1] << 9); //@line 24812
 $25 = HEAP16[$15 >> 1] | 0; //@line 24813
 L16137 : do {
  if ($25 << 16 >> 16 != 0) {
   $c_024 = 0;
   $28 = HEAP16[$11 >> 1] | 0;
   $27 = $25;
   L16139 : while (1) {
    if ($28 << 16 >> 16 == 0) {
     $55 = 0;
     $54 = $27;
    } else {
     $h_023 = 0; //@line 24830
     do {
      if ((_psi_write($fp, $7, 2) | 0) == 0) {
       $s_0 = 0; //@line 24837
      } else {
       $_0 = 1; //@line 24839
       label = 12805; //@line 24840
       break L16139;
      }
      while (1) {
       if ($s_0 >>> 0 >= (HEAPU16[$8 >> 1] | 0) >>> 0) {
        break;
       }
       $36 = $s_0 + 1 | 0; //@line 24852
       $37 = _psi_img_get_sector($img, $c_024, $h_023, $36, 0) | 0; //@line 24853
       if (($37 | 0) == 0) {
        $_0 = 1; //@line 24857
        label = 12801; //@line 24858
        break L16139;
       }
       if ((HEAP16[$37 + 10 >> 1] | 0) != 512) {
        $_0 = 1; //@line 24866
        label = 12800; //@line 24867
        break L16139;
       }
       if ((_psi_write($fp, HEAP32[$37 + 24 >> 2] | 0, 512) | 0) == 0) {
        $s_0 = $36; //@line 24876
       } else {
        $_0 = 1; //@line 24878
        label = 12803; //@line 24879
        break L16139;
       }
      }
      $h_023 = $h_023 + 1 | 0; //@line 24883
      $50 = HEAP16[$11 >> 1] | 0; //@line 24884
     } while ($h_023 >>> 0 < ($50 & 65535) >>> 0);
     $55 = $50;
     $54 = HEAP16[$15 >> 1] | 0;
    }
    $56 = $c_024 + 1 | 0; //@line 24900
    if ($56 >>> 0 < ($54 & 65535) >>> 0) {
     $c_024 = $56;
     $28 = $55;
     $27 = $54;
    } else {
     break L16137;
    }
   }
   if ((label | 0) == 12803) {
    STACKTOP = sp; //@line 24912
    return $_0 | 0; //@line 24913
   } else if ((label | 0) == 12801) {
    STACKTOP = sp; //@line 24917
    return $_0 | 0; //@line 24918
   } else if ((label | 0) == 12805) {
    STACKTOP = sp; //@line 24922
    return $_0 | 0; //@line 24923
   } else if ((label | 0) == 12800) {
    STACKTOP = sp; //@line 24927
    return $_0 | 0; //@line 24928
   }
  }
 } while (0);
 _fflush($fp | 0) | 0; //@line 24932
 $_0 = 0; //@line 24934
 STACKTOP = sp; //@line 24936
 return $_0 | 0; //@line 24937
}
function _psi_probe_msa_fp($fp) {
 $fp = $fp | 0;
 var $1 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 24945
 STACKTOP = STACKTOP + 16 | 0; //@line 24945
 $1 = sp | 0; //@line 24947
 if ((_psi_read_ofs($fp, 0, $1, 10) | 0) != 0) {
  $_0 = 0; //@line 24952
  STACKTOP = sp; //@line 24954
  return $_0 | 0; //@line 24955
 }
 $_0 = (_psi_get_uint16_be($1, 0) | 0) == 3599 | 0; //@line 24961
 STACKTOP = sp; //@line 24963
 return $_0 | 0; //@line 24964
}
function _psi_load_pfdc($fp) {
 $fp = $fp | 0;
 var $1 = 0, $4 = 0, $8 = 0, $9 = 0, $_0_i = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 24973
 STACKTOP = STACKTOP + 8 | 0; //@line 24973
 $1 = _psi_img_new() | 0; //@line 24975
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 24979
  STACKTOP = sp; //@line 24981
  return $_0 | 0; //@line 24982
 }
 $4 = sp | 0; //@line 24984
 do {
  if ((_psi_read($fp, $4, 8) | 0) == 0) {
   $8 = _psi_get_uint32_be($4, 0) | 0; //@line 24990
   $9 = _psi_get_uint32_be($4, 4) | 0; //@line 24991
   if (($8 | 0) != 1346782275) {
    break;
   }
   if (($9 | 0) == 0) {
    $_0_i = _pfdc0_load_fp($fp, $1, 1346782275, 0) | 0; //@line 25000
   } else if (($9 | 0) == 65536) {
    $_0_i = _pfdc1_load_fp($fp, $1, 1346782275, 65536) | 0; //@line 25004
   } else if (($9 | 0) == 131072) {
    $_0_i = _pfdc2_load_fp($fp, $1, 1346782275, 131072) | 0; //@line 25008
   } else {
    $_0_i = _pfdc4_load_fp($fp, $1, 1346782275, $9) | 0; //@line 25012
   }
   if (($_0_i | 0) == 0) {
    $_0 = $1; //@line 25018
   } else {
    break;
   }
   STACKTOP = sp; //@line 25023
   return $_0 | 0; //@line 25024
  }
 } while (0);
 _psi_img_del($1); //@line 25027
 $_0 = 0; //@line 25029
 STACKTOP = sp; //@line 25031
 return $_0 | 0; //@line 25032
}
function _psi_save_pfdc($fp, $img, $vers) {
 $fp = $fp | 0;
 $img = $img | 0;
 $vers = $vers | 0;
 var $_0 = 0;
 if (($vers | 0) == 1) {
  $_0 = _pfdc1_save_fp($fp, $img) | 0; //@line 25046
 } else if (($vers | 0) == 0) {
  $_0 = _pfdc0_save_fp($fp, $img) | 0; //@line 25050
 } else if (($vers | 0) == 2) {
  $_0 = _pfdc2_save_fp($fp, $img) | 0; //@line 25054
 } else {
  $_0 = _pfdc4_save_fp($fp, $img) | 0; //@line 25058
 }
 return $_0 | 0; //@line 25062
}
function _psi_probe_pfdc_fp($fp) {
 $fp = $fp | 0;
 var $1 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 25070
 STACKTOP = STACKTOP + 8 | 0; //@line 25070
 $1 = sp | 0; //@line 25072
 if ((_psi_read_ofs($fp, 0, $1, 4) | 0) != 0) {
  $_0 = 0; //@line 25077
  STACKTOP = sp; //@line 25079
  return $_0 | 0; //@line 25080
 }
 $_0 = (_psi_get_uint32_be($1, 0) | 0) == 1346782275 | 0; //@line 25086
 STACKTOP = sp; //@line 25088
 return $_0 | 0; //@line 25089
}
function _pfdc0_load_fp($fp, $img, $id, $sz) {
 $fp = $fp | 0;
 $img = $img | 0;
 $id = $id | 0;
 $sz = $sz | 0;
 var $buf_i = 0, $3 = 0, $7 = 0, $8 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $i_07 = 0, $26 = 0, $27 = 0, $29 = 0, $30 = 0, $37 = 0, $53 = 0, $60 = 0, $67 = 0, $84 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 25109
 STACKTOP = STACKTOP + 24 | 0; //@line 25109
 $buf_i = sp | 0; //@line 25110
 _fwrite(52976, 49, 1, HEAP32[_stderr >> 2] | 0) | 0; //@line 25113
 $3 = sp + 16 | 0; //@line 25114
 if ((_psi_read($fp, $3, 8) | 0) != 0) {
  $_0 = 1; //@line 25119
  STACKTOP = sp; //@line 25121
  return $_0 | 0; //@line 25122
 }
 $7 = _psi_get_uint32_be($3, 0) | 0; //@line 25124
 $8 = _psi_get_uint32_be($3, 4) | 0; //@line 25125
 if ($8 >>> 0 < 16) {
  $_0 = 1; //@line 25129
  STACKTOP = sp; //@line 25131
  return $_0 | 0; //@line 25132
 }
 if ((_psi_skip($fp, $8 - 16 | 0) | 0) != 0) {
  $_0 = 1; //@line 25139
  STACKTOP = sp; //@line 25141
  return $_0 | 0; //@line 25142
 }
 if (($7 | 0) == 0) {
  $_0 = 0; //@line 25147
  STACKTOP = sp; //@line 25149
  return $_0 | 0; //@line 25150
 }
 $15 = $buf_i | 0; //@line 25152
 $16 = $buf_i + 1 | 0; //@line 25153
 $17 = $buf_i + 5 | 0; //@line 25154
 $18 = $buf_i + 2 | 0; //@line 25155
 $19 = $buf_i + 3 | 0; //@line 25156
 $20 = $buf_i + 4 | 0; //@line 25157
 $21 = $buf_i + 12 | 0; //@line 25158
 $i_07 = 0; //@line 25160
 while (1) {
  if ((_psi_read($fp, $15, 12) | 0) != 0) {
   $_0 = 1; //@line 25167
   label = 12859; //@line 25168
   break;
  }
  $26 = HEAP8[$15] | 0; //@line 25171
  $27 = HEAP8[$16] | 0; //@line 25172
  $29 = HEAPU8[$17] | 0; //@line 25174
  $30 = _psi_get_uint16_be($15, 6) | 0; //@line 25175
  $37 = _psi_sct_new(HEAPU8[$18] | 0, HEAPU8[$19] | 0, HEAPU8[$20] | 0, $30) | 0; //@line 25182
  if (($37 | 0) == 0) {
   $_0 = 1; //@line 25186
   label = 12866; //@line 25187
   break;
  }
  if ((_psi_img_add_sector($img, $37, $26 & 255, $27 & 255) | 0) != 0) {
   label = 12846; //@line 25196
   break;
  }
  _psi_get_uint32_be($15, 8) | 0; //@line 25199
  _psi_sct_set_encoding($37, ($29 & 1 | 0) == 0 ? $29 & 2 : 1); //@line 25204
  if (($29 & 4 | 0) != 0) {
   $53 = $37 + 12 | 0; //@line 25209
   HEAP32[$53 >> 2] = HEAP32[$53 >> 2] | 1; //@line 25212
  }
  if (($29 & 8 | 0) != 0) {
   $60 = $37 + 12 | 0; //@line 25219
   HEAP32[$60 >> 2] = HEAP32[$60 >> 2] | 2; //@line 25222
  }
  if (($29 & 16 | 0) != 0) {
   $67 = $37 + 12 | 0; //@line 25229
   HEAP32[$67 >> 2] = HEAP32[$67 >> 2] | 4; //@line 25232
  }
  if (($29 & 128 | 0) == 0) {
   if ((_psi_read($fp, HEAP32[$37 + 24 >> 2] | 0, $30) | 0) != 0) {
    $_0 = 1; //@line 25245
    label = 12860; //@line 25246
    break;
   }
  } else {
   if ((_psi_read($fp, $21, 1) | 0) != 0) {
    $_0 = 1; //@line 25254
    label = 12864; //@line 25255
    break;
   }
   _psi_sct_fill($37, HEAPU8[$21] | 0); //@line 25260
  }
  $84 = $i_07 + 1 | 0; //@line 25263
  if ($84 >>> 0 < $7 >>> 0) {
   $i_07 = $84; //@line 25267
  } else {
   $_0 = 0; //@line 25269
   label = 12861; //@line 25270
   break;
  }
 }
 if ((label | 0) == 12861) {
  STACKTOP = sp; //@line 25276
  return $_0 | 0; //@line 25277
 } else if ((label | 0) == 12859) {
  STACKTOP = sp; //@line 25281
  return $_0 | 0; //@line 25282
 } else if ((label | 0) == 12866) {
  STACKTOP = sp; //@line 25286
  return $_0 | 0; //@line 25287
 } else if ((label | 0) == 12846) {
  _psi_sct_del($37); //@line 25290
  $_0 = 1; //@line 25292
  STACKTOP = sp; //@line 25294
  return $_0 | 0; //@line 25295
 } else if ((label | 0) == 12864) {
  STACKTOP = sp; //@line 25299
  return $_0 | 0; //@line 25300
 } else if ((label | 0) == 12860) {
  STACKTOP = sp; //@line 25304
  return $_0 | 0; //@line 25305
 }
 return 0;
}
function _pfdc0_save_fp($fp, $img) {
 $fp = $fp | 0;
 $img = $img | 0;
 var $buf_i = 0, $1 = 0, $2 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $c_022 = 0, $21 = 0, $22 = 0, $23 = 0, $25 = 0, $26 = 0, $27 = 0, $h_018 = 0, $30 = 0, $31 = 0, $34 = 0, $35 = 0, $s_017 = 0, $39 = 0, $42 = 0, $flg_0_load1924_i = 0, $dr_0_load20_i = 0, $49 = 0, $flg_0_load1923_i = 0, $flg_0_load1922_i = 0, $69 = 0, $70 = 0, $102 = 0, $103 = 0, $107 = 0, $108 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 25328
 STACKTOP = STACKTOP + 32 | 0; //@line 25328
 $buf_i = sp | 0; //@line 25329
 $1 = _psi_img_get_sector_count($img) | 0; //@line 25331
 $2 = sp + 16 | 0; //@line 25332
 _psi_set_uint32_be($2, 0, 1346782275); //@line 25333
 _psi_set_uint32_be($2, 4, 0); //@line 25334
 _psi_set_uint32_be($2, 8, $1); //@line 25335
 _psi_set_uint32_be($2, 12, 16); //@line 25336
 if ((_psi_write($fp, $2, 16) | 0) != 0) {
  $_0 = 1; //@line 25341
  STACKTOP = sp; //@line 25343
  return $_0 | 0; //@line 25344
 }
 $5 = $img | 0; //@line 25346
 $6 = HEAP16[$5 >> 1] | 0; //@line 25347
 L16236 : do {
  if ($6 << 16 >> 16 != 0) {
   $8 = $img + 4 | 0; //@line 25352
   $9 = $buf_i | 0; //@line 25353
   $10 = $buf_i + 1 | 0; //@line 25354
   $11 = $buf_i + 2 | 0; //@line 25355
   $12 = $buf_i + 3 | 0; //@line 25356
   $13 = $buf_i + 4 | 0; //@line 25357
   $14 = $buf_i + 5 | 0; //@line 25358
   $15 = $buf_i + 6 | 0; //@line 25359
   $16 = $buf_i + 7 | 0; //@line 25360
   $17 = $buf_i + 12 | 0; //@line 25361
   $c_022 = 0;
   $18 = $6;
   L16238 : while (1) {
    $21 = HEAP32[(HEAP32[$8 >> 2] | 0) + ($c_022 << 2) >> 2] | 0; //@line 25369
    $22 = $21 + 2 | 0; //@line 25370
    $23 = HEAP16[$22 >> 1] | 0; //@line 25371
    if ($23 << 16 >> 16 == 0) {
     $107 = $18; //@line 25375
    } else {
     $25 = $21 + 4 | 0; //@line 25377
     $26 = $c_022 & 255; //@line 25378
     $h_018 = 0;
     $27 = $23;
     while (1) {
      $30 = HEAP32[(HEAP32[$25 >> 2] | 0) + ($h_018 << 2) >> 2] | 0; //@line 25386
      $31 = $30 + 2 | 0; //@line 25387
      if ((HEAP16[$31 >> 1] | 0) == 0) {
       $102 = $27; //@line 25392
      } else {
       $34 = $30 + 4 | 0; //@line 25394
       $35 = $h_018 & 255; //@line 25395
       $s_017 = 0; //@line 25397
       do {
        $39 = HEAP32[(HEAP32[$34 >> 2] | 0) + ($s_017 << 2) >> 2] | 0; //@line 25402
        $42 = HEAPU16[$39 + 16 >> 1] | 0; //@line 25405
        if (($42 | 0) == 16386) {
         $dr_0_load20_i = 1e6;
         $flg_0_load1924_i = 2;
        } else if (($42 | 0) == 32769) {
         $dr_0_load20_i = 25e4;
         $flg_0_load1924_i = 1;
        } else if (($42 | 0) == 1) {
         $dr_0_load20_i = 125e3;
         $flg_0_load1924_i = 1;
        } else if (($42 | 0) == 2) {
         $dr_0_load20_i = 25e4;
         $flg_0_load1924_i = 2;
        } else if (($42 | 0) == 32770) {
         $dr_0_load20_i = 5e5;
         $flg_0_load1924_i = 2;
        } else {
         $dr_0_load20_i = 0;
         $flg_0_load1924_i = 0;
        }
        $49 = HEAP32[$39 + 12 >> 2] | 0; //@line 25427
        $flg_0_load1923_i = ($49 & 1 | 0) == 0 ? $flg_0_load1924_i : $flg_0_load1924_i | 4; //@line 25431
        $flg_0_load1922_i = ($49 & 2 | 0) == 0 ? $flg_0_load1923_i : $flg_0_load1923_i | 8; //@line 25435
        HEAP8[$9] = $26; //@line 25440
        HEAP8[$10] = $35; //@line 25441
        HEAP8[$11] = HEAP16[$39 + 4 >> 1] & 255; //@line 25445
        HEAP8[$12] = HEAP16[$39 + 6 >> 1] & 255; //@line 25449
        HEAP8[$13] = HEAP16[$39 + 8 >> 1] & 255; //@line 25453
        HEAP8[$14] = (($49 & 4 | 0) == 0 ? $flg_0_load1922_i : $flg_0_load1922_i | 16) & 255; //@line 25455
        $69 = $39 + 10 | 0; //@line 25456
        $70 = HEAP16[$69 >> 1] | 0; //@line 25457
        HEAP8[$15] = ($70 & 65535) >>> 8 & 255; //@line 25460
        HEAP8[$16] = $70 & 255; //@line 25462
        _psi_set_uint32_be($9, 8, $dr_0_load20_i); //@line 25463
        do {
         if ((_psi_sct_uniform($39) | 0) == 0) {
          label = 12885; //@line 25469
         } else {
          if ((HEAP16[$69 >> 1] | 0) == 0) {
           label = 12885; //@line 25475
           break;
          }
          HEAP8[$14] = HEAP8[$14] | -128; //@line 25480
          HEAP8[$17] = HEAP8[HEAP32[$39 + 24 >> 2] | 0] | 0; //@line 25484
          if ((_psi_write($fp, $9, 13) | 0) != 0) {
           $_0 = 1; //@line 25489
           label = 12895; //@line 25490
           break L16238;
          }
         }
        } while (0);
        if ((label | 0) == 12885) {
         label = 0; //@line 25496
         if ((_psi_write($fp, $9, 12) | 0) != 0) {
          $_0 = 1; //@line 25501
          label = 12896; //@line 25502
          break L16238;
         }
         if ((_psi_write($fp, HEAP32[$39 + 24 >> 2] | 0, HEAPU16[$69 >> 1] | 0) | 0) != 0) {
          $_0 = 1; //@line 25513
          label = 12897; //@line 25514
          break L16238;
         }
        }
        $s_017 = $s_017 + 1 | 0; //@line 25518
       } while ($s_017 >>> 0 < (HEAPU16[$31 >> 1] | 0) >>> 0);
       $102 = HEAP16[$22 >> 1] | 0; //@line 25531
      }
      $103 = $h_018 + 1 | 0; //@line 25534
      if ($103 >>> 0 < ($102 & 65535) >>> 0) {
       $h_018 = $103;
       $27 = $102;
      } else {
       break;
      }
     }
     $107 = HEAP16[$5 >> 1] | 0; //@line 25546
    }
    $108 = $c_022 + 1 | 0; //@line 25549
    if ($108 >>> 0 < ($107 & 65535) >>> 0) {
     $c_022 = $108;
     $18 = $107;
    } else {
     break L16236;
    }
   }
   if ((label | 0) == 12895) {
    STACKTOP = sp; //@line 25561
    return $_0 | 0; //@line 25562
   } else if ((label | 0) == 12896) {
    STACKTOP = sp; //@line 25566
    return $_0 | 0; //@line 25567
   } else if ((label | 0) == 12897) {
    STACKTOP = sp; //@line 25571
    return $_0 | 0; //@line 25572
   }
  }
 } while (0);
 _fflush($fp | 0) | 0; //@line 25576
 $_0 = 0; //@line 25578
 STACKTOP = sp; //@line 25580
 return $_0 | 0; //@line 25581
}
function _pfdc1_load_fp($fp, $img, $id, $sz) {
 $fp = $fp | 0;
 $img = $img | 0;
 $id = $id | 0;
 $sz = $sz | 0;
 var $buf_i = 0, $3 = 0, $7 = 0, $8 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $i_08 = 0, $24 = 0, $26 = 0, $31 = 0, $33 = 0, $34 = 0, $41 = 0, $44 = 0, $46 = 0, $50 = 0, $57 = 0, $64 = 0, $68 = 0, $_0_i_i = 0, $100 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 25602
 STACKTOP = STACKTOP + 40 | 0; //@line 25602
 $buf_i = sp | 0; //@line 25603
 _fwrite(52872, 49, 1, HEAP32[_stderr >> 2] | 0) | 0; //@line 25606
 $3 = sp + 32 | 0; //@line 25607
 if ((_psi_read($fp, $3, 8) | 0) != 0) {
  $_0 = 1; //@line 25612
  STACKTOP = sp; //@line 25614
  return $_0 | 0; //@line 25615
 }
 $7 = _psi_get_uint32_be($3, 0) | 0; //@line 25617
 $8 = _psi_get_uint32_be($3, 4) | 0; //@line 25618
 if ($8 >>> 0 < 16) {
  $_0 = 1; //@line 25622
  STACKTOP = sp; //@line 25624
  return $_0 | 0; //@line 25625
 }
 if ((_psi_skip($fp, $8 - 16 | 0) | 0) != 0) {
  $_0 = 1; //@line 25632
  STACKTOP = sp; //@line 25634
  return $_0 | 0; //@line 25635
 }
 if (($7 | 0) == 0) {
  $_0 = 0; //@line 25640
  STACKTOP = sp; //@line 25642
  return $_0 | 0; //@line 25643
 }
 $15 = $buf_i | 0; //@line 25645
 $16 = $buf_i + 1 | 0; //@line 25646
 $17 = $buf_i + 2 | 0; //@line 25647
 $18 = $buf_i + 3 | 0; //@line 25648
 $19 = $buf_i + 4 | 0; //@line 25649
 $20 = $buf_i + 5 | 0; //@line 25650
 $21 = $buf_i + 8 | 0; //@line 25651
 $22 = $buf_i + 16 | 0; //@line 25652
 $24 = 0;
 $i_08 = 0;
 while (1) {
  $26 = (_psi_read($fp, $15, 16) | 0) == 0; //@line 25659
  if (!($26 & (HEAP8[$15] | 0) == 83)) {
   $_0 = 1; //@line 25665
   label = 12927; //@line 25666
   break;
  }
  $31 = HEAPU8[$16] | 0; //@line 25670
  $33 = HEAPU8[$17] | 0; //@line 25672
  $34 = _psi_get_uint16_be($15, 6) | 0; //@line 25673
  $41 = _psi_sct_new(HEAPU8[$18] | 0, HEAPU8[$19] | 0, HEAPU8[$20] | 0, $34) | 0; //@line 25680
  if (($41 | 0) == 0) {
   $_0 = 1; //@line 25684
   label = 12933; //@line 25685
   break;
  }
  $44 = _psi_get_uint32_be($15, 12) | 0; //@line 25688
  $46 = (_psi_get_uint32_be($15, 8) | 0) & 16777215; //@line 25690
  if (($44 & 4 | 0) != 0) {
   $50 = $41 + 12 | 0; //@line 25695
   HEAP32[$50 >> 2] = HEAP32[$50 >> 2] | 1; //@line 25698
  }
  if (($44 & 8 | 0) != 0) {
   $57 = $41 + 12 | 0; //@line 25705
   HEAP32[$57 >> 2] = HEAP32[$57 >> 2] | 2; //@line 25708
  }
  if (($44 & 16 | 0) != 0) {
   $64 = $41 + 12 | 0; //@line 25715
   HEAP32[$64 >> 2] = HEAP32[$64 >> 2] | 4; //@line 25718
  }
  $68 = HEAPU8[$21] | 0; //@line 25722
  if (($68 | 0) == 1) {
   $_0_i_i = $46 >>> 0 < 375e3 ? 1 : 32769; //@line 25727
  } else if (($68 | 0) == 2) {
   $_0_i_i = $46 >>> 0 < 375e3 ? 2 : 32770; //@line 25732
  } else {
   $_0_i_i = 0; //@line 25734
  }
  _psi_sct_set_encoding($41, $_0_i_i); //@line 25737
  if (($44 & 1 | 0) == 0) {
   if ((_psi_img_add_sector($img, $41, $31, $33) | 0) != 0) {
    label = 12920; //@line 25746
    break;
   }
  } else {
   if (($24 | 0) == 0) {
    label = 12917; //@line 25753
    break;
   }
   _psi_sct_add_alternate($24, $41); //@line 25756
  }
  if (($44 & 128 | 0) == 0) {
   if ((_psi_read($fp, HEAP32[$41 + 24 >> 2] | 0, $34) | 0) != 0) {
    $_0 = 1; //@line 25769
    label = 12928; //@line 25770
    break;
   }
  } else {
   if ((_psi_read($fp, $22, 1) | 0) != 0) {
    $_0 = 1; //@line 25778
    label = 12930; //@line 25779
    break;
   }
   _psi_sct_fill($41, HEAPU8[$22] | 0); //@line 25784
  }
  $100 = $i_08 + 1 | 0; //@line 25787
  if ($100 >>> 0 < $7 >>> 0) {
   $24 = $41;
   $i_08 = $100;
  } else {
   $_0 = 0; //@line 25793
   label = 12937; //@line 25794
   break;
  }
 }
 if ((label | 0) == 12933) {
  STACKTOP = sp; //@line 25800
  return $_0 | 0; //@line 25801
 } else if ((label | 0) == 12930) {
  STACKTOP = sp; //@line 25805
  return $_0 | 0; //@line 25806
 } else if ((label | 0) == 12928) {
  STACKTOP = sp; //@line 25810
  return $_0 | 0; //@line 25811
 } else if ((label | 0) == 12937) {
  STACKTOP = sp; //@line 25815
  return $_0 | 0; //@line 25816
 } else if ((label | 0) == 12927) {
  STACKTOP = sp; //@line 25820
  return $_0 | 0; //@line 25821
 } else if ((label | 0) == 12917) {
  _psi_sct_del($41); //@line 25824
  $_0 = 1; //@line 25826
  STACKTOP = sp; //@line 25828
  return $_0 | 0; //@line 25829
 } else if ((label | 0) == 12920) {
  _psi_sct_del($41); //@line 25832
  $_0 = 1; //@line 25834
  STACKTOP = sp; //@line 25836
  return $_0 | 0; //@line 25837
 }
 return 0;
}
function _pfdc1_save_fp($fp, $img) {
 $fp = $fp | 0;
 $img = $img | 0;
 var $1 = 0, $2 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, $c_025 = 0, $12 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $h_020 = 0, $20 = 0, $21 = 0, $24 = 0, $s_019 = 0, $28 = 0, $sct_pn_i = 0, $_012_i = 0, $41 = 0, $42 = 0, $46 = 0, $47 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 25853
 STACKTOP = STACKTOP + 16 | 0; //@line 25853
 $1 = _psi_img_get_sector_count($img) | 0; //@line 25855
 $2 = sp | 0; //@line 25856
 _psi_set_uint32_be($2, 0, 1346782275); //@line 25857
 _psi_set_uint16_be($2, 4, 1); //@line 25858
 _psi_set_uint16_be($2, 6, 0); //@line 25859
 _psi_set_uint32_be($2, 8, $1); //@line 25860
 _psi_set_uint32_be($2, 12, 16); //@line 25861
 if ((_psi_write($fp, $2, 16) | 0) != 0) {
  $_0 = 1; //@line 25866
  STACKTOP = sp; //@line 25868
  return $_0 | 0; //@line 25869
 }
 $5 = $img | 0; //@line 25871
 $6 = HEAP16[$5 >> 1] | 0; //@line 25872
 L16326 : do {
  if ($6 << 16 >> 16 != 0) {
   $8 = $img + 4 | 0; //@line 25877
   $c_025 = 0;
   $9 = $6;
   L16328 : while (1) {
    $12 = HEAP32[(HEAP32[$8 >> 2] | 0) + ($c_025 << 2) >> 2] | 0; //@line 25885
    $13 = $12 + 2 | 0; //@line 25886
    $14 = HEAP16[$13 >> 1] | 0; //@line 25887
    if ($14 << 16 >> 16 == 0) {
     $46 = $9; //@line 25891
    } else {
     $16 = $12 + 4 | 0; //@line 25893
     $h_020 = 0;
     $17 = $14;
     while (1) {
      $20 = HEAP32[(HEAP32[$16 >> 2] | 0) + ($h_020 << 2) >> 2] | 0; //@line 25901
      $21 = $20 + 2 | 0; //@line 25902
      if ((HEAP16[$21 >> 1] | 0) == 0) {
       $41 = $17; //@line 25907
      } else {
       $24 = $20 + 4 | 0; //@line 25909
       $s_019 = 0; //@line 25911
       do {
        $28 = HEAP32[(HEAP32[$24 >> 2] | 0) + ($s_019 << 2) >> 2] | 0; //@line 25916
        if ((_pfdc1_save_sector($fp, $28, $c_025, $h_020, 0) | 0) == 0) {
         $sct_pn_i = $28; //@line 25921
        } else {
         $_0 = 1; //@line 25923
         label = 12955; //@line 25924
         break L16328;
        }
        while (1) {
         $_012_i = HEAP32[$sct_pn_i >> 2] | 0; //@line 25930
         if (($_012_i | 0) == 0) {
          break;
         }
         if ((_pfdc1_save_sector($fp, $_012_i, $c_025, $h_020, 1) | 0) == 0) {
          $sct_pn_i = $_012_i; //@line 25940
         } else {
          $_0 = 1; //@line 25942
          label = 12957; //@line 25943
          break L16328;
         }
        }
        $s_019 = $s_019 + 1 | 0; //@line 25947
       } while ($s_019 >>> 0 < (HEAPU16[$21 >> 1] | 0) >>> 0);
       $41 = HEAP16[$13 >> 1] | 0; //@line 25960
      }
      $42 = $h_020 + 1 | 0; //@line 25963
      if ($42 >>> 0 < ($41 & 65535) >>> 0) {
       $h_020 = $42;
       $17 = $41;
      } else {
       break;
      }
     }
     $46 = HEAP16[$5 >> 1] | 0; //@line 25975
    }
    $47 = $c_025 + 1 | 0; //@line 25978
    if ($47 >>> 0 < ($46 & 65535) >>> 0) {
     $c_025 = $47;
     $9 = $46;
    } else {
     break L16326;
    }
   }
   if ((label | 0) == 12955) {
    STACKTOP = sp; //@line 25990
    return $_0 | 0; //@line 25991
   } else if ((label | 0) == 12957) {
    STACKTOP = sp; //@line 25995
    return $_0 | 0; //@line 25996
   }
  }
 } while (0);
 _fflush($fp | 0) | 0; //@line 26000
 $_0 = 0; //@line 26002
 STACKTOP = sp; //@line 26004
 return $_0 | 0; //@line 26005
}
function _pfdc1_save_sector($fp, $sct, $c, $h, $alt) {
 $fp = $fp | 0;
 $sct = $sct | 0;
 $c = $c | 0;
 $h = $h | 0;
 $alt = $alt | 0;
 var $buf = 0, $sct_idx_val = 0, $2 = 0, $f_1_i = 0, $f_1__i = 0, $flg_0 = 0, $flg_1 = 0, $18 = 0, $enc_0_load24_off0 = 0, $dr_0_load23 = 0, $24 = 0, $41 = 0, $42 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 26025
 STACKTOP = STACKTOP + 32 | 0; //@line 26025
 $buf = sp | 0; //@line 26026
 $sct_idx_val = HEAP32[$sct + 12 >> 2] | 0; //@line 26028
 $2 = $sct_idx_val << 2 & 4; //@line 26030
 $f_1_i = ($sct_idx_val & 2 | 0) == 0 ? $2 : $2 | 8; //@line 26034
 $f_1__i = ($sct_idx_val & 4 | 0) == 0 ? $f_1_i : $f_1_i | 16; //@line 26038
 if ((_psi_sct_uniform($sct) | 0) == 0) {
  $flg_0 = $f_1__i; //@line 26043
 } else {
  $flg_0 = (HEAP16[$sct + 10 >> 1] | 0) == 0 ? $f_1__i : $f_1__i | 128; //@line 26051
 }
 $flg_1 = $flg_0 | ($alt | 0) != 0; //@line 26056
 $18 = HEAPU16[$sct + 16 >> 1] | 0; //@line 26059
 if (($18 | 0) == 32770) {
  $dr_0_load23 = 5e5;
  $enc_0_load24_off0 = 2;
 } else if (($18 | 0) == 2) {
  $dr_0_load23 = 25e4;
  $enc_0_load24_off0 = 2;
 } else if (($18 | 0) == 1) {
  $dr_0_load23 = 125e3;
  $enc_0_load24_off0 = 1;
 } else if (($18 | 0) == 32769) {
  $dr_0_load23 = 25e4;
  $enc_0_load24_off0 = 1;
 } else if (($18 | 0) == 16386) {
  $dr_0_load23 = 1e6;
  $enc_0_load24_off0 = 2;
 } else {
  $dr_0_load23 = 0;
  $enc_0_load24_off0 = 0;
 }
 $24 = $buf | 0; //@line 26080
 _psi_set_uint32_be($24, 8, $dr_0_load23); //@line 26081
 HEAP8[$24] = 83; //@line 26082
 HEAP8[$buf + 1 | 0] = $c & 255; //@line 26085
 HEAP8[$buf + 2 | 0] = $h & 255; //@line 26088
 HEAP8[$buf + 3 | 0] = HEAP16[$sct + 4 >> 1] & 255; //@line 26093
 HEAP8[$buf + 4 | 0] = HEAP16[$sct + 6 >> 1] & 255; //@line 26098
 HEAP8[$buf + 5 | 0] = HEAP16[$sct + 8 >> 1] & 255; //@line 26103
 $41 = $sct + 10 | 0; //@line 26104
 $42 = HEAP16[$41 >> 1] | 0; //@line 26105
 HEAP8[$buf + 6 | 0] = ($42 & 65535) >>> 8 & 255; //@line 26109
 HEAP8[$buf + 7 | 0] = $42 & 255; //@line 26112
 HEAP8[$buf + 8 | 0] = $enc_0_load24_off0; //@line 26114
 _psi_set_uint32_be($24, 12, $flg_1); //@line 26115
 do {
  if (($flg_0 & 128 | 0) == 0) {
   if ((_psi_write($fp, $24, 16) | 0) != 0) {
    $_0 = 1; //@line 26125
    STACKTOP = sp; //@line 26127
    return $_0 | 0; //@line 26128
   }
   if ((_psi_write($fp, HEAP32[$sct + 24 >> 2] | 0, HEAPU16[$41 >> 1] | 0) | 0) == 0) {
    break;
   } else {
    $_0 = 1; //@line 26140
   }
   STACKTOP = sp; //@line 26143
   return $_0 | 0; //@line 26144
  } else {
   HEAP8[$buf + 16 | 0] = HEAP8[HEAP32[$sct + 24 >> 2] | 0] | 0; //@line 26150
   if ((_psi_write($fp, $24, 17) | 0) == 0) {
    break;
   } else {
    $_0 = 1; //@line 26157
   }
   STACKTOP = sp; //@line 26160
   return $_0 | 0; //@line 26161
  }
 } while (0);
 $_0 = 0; //@line 26165
 STACKTOP = sp; //@line 26167
 return $_0 | 0; //@line 26168
}
function _pfdc2_load_fp($fp, $img, $id, $sz) {
 $fp = $fp | 0;
 $img = $img | 0;
 $id = $id | 0;
 $sz = $sz | 0;
 var $buf_i34_i = 0, $buf_i_i = 0, $buf_i26 = 0, $buf_i = 0, $buf = 0, $3 = 0, $tmp_014_i = 0, $_013_i = 0, $_0912_i = 0, $7 = 0, $9 = 0, $_2_i = 0, $12 = 0, $_2_1_i = 0, $15 = 0, $_2_2_i = 0, $18 = 0, $_2_3_i = 0, $21 = 0, $_2_4_i = 0, $24 = 0, $_2_5_i = 0, $27 = 0, $_2_6_i = 0, $30 = 0, $_2_7_i = 0, $33 = 0, $35 = 0, $tmp_014_i_i9 = 0, $_013_i_i10 = 0, $_0912_i_i11 = 0, $43 = 0, $45 = 0, $_2_i_i12 = 0, $48 = 0, $_2_1_i_i13 = 0, $51 = 0, $_2_2_i_i14 = 0, $54 = 0, $_2_3_i_i15 = 0, $57 = 0, $_2_4_i_i16 = 0, $60 = 0, $_2_5_i_i17 = 0, $63 = 0, $_2_6_i_i18 = 0, $66 = 0, $_2_7_i_i19 = 0, $69 = 0, $72 = 0, $75 = 0, $76 = 0, $_079_i = 0, $79 = 0, $83 = 0, $tmp_014_i_i_i = 0, $_013_i_i_i = 0, $_0912_i_i_i = 0, $88 = 0, $90 = 0, $_2_i_i_i = 0, $93 = 0, $_2_1_i_i_i = 0, $96 = 0, $_2_2_i_i_i = 0, $99 = 0, $_2_3_i_i_i = 0, $102 = 0, $_2_4_i_i_i = 0, $105 = 0, $_2_5_i_i_i = 0, $108 = 0, $_2_6_i_i_i = 0, $111 = 0, $_2_7_i_i_i = 0, $114 = 0, $_09_lcssa_i_i_i = 0, $118 = 0, $119 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $_ph_i = 0, $129 = 0, $tmp_014_i_i_i28 = 0, $_013_i_i_i29 = 0, $_0912_i_i_i30 = 0, $135 = 0, $137 = 0, $_2_i_i_i31 = 0, $140 = 0, $_2_1_i_i_i32 = 0, $143 = 0, $_2_2_i_i_i33 = 0, $146 = 0, $_2_3_i_i_i34 = 0, $149 = 0, $_2_4_i_i_i35 = 0, $152 = 0, $_2_5_i_i_i36 = 0, $155 = 0, $_2_6_i_i_i37 = 0, $158 = 0, $_2_7_i_i_i38 = 0, $161 = 0, $164 = 0, $165 = 0, $tmp_014_i_i40 = 0, $_013_i_i41 = 0, $_0912_i_i42 = 0, $169 = 0, $171 = 0, $_2_i_i43 = 0, $174 = 0, $_2_1_i_i44 = 0, $177 = 0, $_2_2_i_i45 = 0, $180 = 0, $_2_3_i_i46 = 0, $183 = 0, $_2_4_i_i47 = 0, $186 = 0, $_2_5_i_i48 = 0, $189 = 0, $_2_6_i_i49 = 0, $192 = 0, $_2_7_i_i50 = 0, $195 = 0, $_01115_i_i_i = 0, $_01214_i_i_i = 0, $200 = 0, $204 = 0, $tmp_014_i_i_i_i = 0, $_013_i_i_i_i = 0, $_0912_i_i_i_i = 0, $209 = 0, $211 = 0, $_2_i_i_i_i = 0, $214 = 0, $_2_1_i_i_i_i = 0, $217 = 0, $_2_2_i_i_i_i = 0, $220 = 0, $_2_3_i_i_i_i = 0, $223 = 0, $_2_4_i_i_i_i = 0, $226 = 0, $_2_5_i_i_i_i = 0, $229 = 0, $_2_6_i_i_i_i = 0, $232 = 0, $_2_7_i_i_i_i = 0, $235 = 0, $tmp_014_i_i21_i = 0, $_013_i_i22_i = 0, $_0912_i_i23_i = 0, $240 = 0, $242 = 0, $_2_i_i24_i = 0, $245 = 0, $_2_1_i_i25_i = 0, $248 = 0, $_2_2_i_i26_i = 0, $251 = 0, $_2_3_i_i27_i = 0, $254 = 0, $_2_4_i_i28_i = 0, $257 = 0, $_2_5_i_i29_i = 0, $260 = 0, $_2_6_i_i30_i = 0, $263 = 0, $_2_7_i_i31_i = 0, $266 = 0, $_09_lcssa_i_i_i53 = 0, $_011_lcssa_i_i_i = 0, $tmp_014_i_i8_i_i = 0, $_013_i_i9_i_i = 0, $_0912_i_i10_i_i = 0, $277 = 0, $279 = 0, $_2_i_i11_i_i = 0, $282 = 0, $_2_1_i_i12_i_i = 0, $285 = 0, $_2_2_i_i13_i_i = 0, $288 = 0, $_2_3_i_i14_i_i = 0, $291 = 0, $_2_4_i_i15_i_i = 0, $294 = 0, $_2_5_i_i16_i_i = 0, $297 = 0, $_2_6_i_i17_i_i = 0, $300 = 0, $_2_7_i_i18_i_i = 0, $303 = 0, $tmp_014_i_i_i35_i = 0, $_013_i_i_i36_i = 0, $_0912_i_i_i37_i = 0, $316 = 0, $318 = 0, $_2_i_i_i38_i = 0, $321 = 0, $_2_1_i_i_i39_i = 0, $324 = 0, $_2_2_i_i_i40_i = 0, $327 = 0, $_2_3_i_i_i41_i = 0, $330 = 0, $_2_4_i_i_i42_i = 0, $333 = 0, $_2_5_i_i_i43_i = 0, $336 = 0, $_2_6_i_i_i44_i = 0, $339 = 0, $_2_7_i_i_i45_i = 0, $342 = 0, $346 = 0, $348 = 0, $350 = 0, $351 = 0, $358 = 0, $362 = 0, $366 = 0, $373 = 0, $380 = 0, $387 = 0, $391 = 0, $_0_i38_i_i = 0, $tmp_014_i_i47_i = 0, $_013_i_i48_i = 0, $_0912_i_i49_i = 0, $411 = 0, $413 = 0, $_2_i_i50_i = 0, $416 = 0, $_2_1_i_i51_i = 0, $419 = 0, $_2_2_i_i52_i = 0, $422 = 0, $_2_3_i_i53_i = 0, $425 = 0, $_2_4_i_i54_i = 0, $428 = 0, $_2_5_i_i55_i = 0, $431 = 0, $_2_6_i_i56_i = 0, $434 = 0, $_2_7_i_i57_i = 0, $437 = 0, $439 = 0, $449 = 0, $450 = 0, $451 = 0, $453 = 0, $_2_i_i59_i_i = 0, $456 = 0, $_2_1_i_i60_i_i = 0, $459 = 0, $_2_2_i_i61_i_i = 0, $462 = 0, $_2_3_i_i62_i_i = 0, $465 = 0, $_2_4_i_i63_i_i = 0, $468 = 0, $_2_5_i_i64_i_i = 0, $471 = 0, $_2_6_i_i65_i_i = 0, $474 = 0, $476 = 0, $478 = 0, $_2_i74_i_i = 0, $481 = 0, $_2_1_i75_i_i = 0, $484 = 0, $_2_2_i76_i_i = 0, $487 = 0, $_2_3_i77_i_i = 0, $490 = 0, $_2_4_i78_i_i = 0, $493 = 0, $_2_5_i79_i_i = 0, $496 = 0, $_2_6_i80_i_i = 0, $499 = 0, $503 = 0, $508 = 0, $509 = 0, $513 = 0, $tmp_014_i_i114_i_i = 0, $_013_i_i115_i_i = 0, $_0912_i_i116_i_i = 0, $518 = 0, $520 = 0, $_2_i_i117_i_i = 0, $523 = 0, $_2_1_i_i118_i_i = 0, $526 = 0, $_2_2_i_i119_i_i = 0, $529 = 0, $_2_3_i_i120_i_i = 0, $532 = 0, $_2_4_i_i121_i_i = 0, $535 = 0, $_2_5_i_i122_i_i = 0, $538 = 0, $_2_6_i_i123_i_i = 0, $541 = 0, $_2_7_i_i124_i_i = 0, $544 = 0, $tmp_014_i130_i_i = 0, $_013_i131_i_i = 0, $_0912_i132_i_i = 0, $550 = 0, $552 = 0, $_2_i133_i_i = 0, $555 = 0, $_2_1_i134_i_i = 0, $558 = 0, $_2_2_i135_i_i = 0, $561 = 0, $_2_3_i136_i_i = 0, $564 = 0, $_2_4_i137_i_i = 0, $567 = 0, $_2_5_i138_i_i = 0, $570 = 0, $_2_6_i139_i_i = 0, $573 = 0, $_2_7_i140_i_i = 0, $576 = 0, $_09_lcssa_i142_i_i = 0, $_036_i_i = 0, $_035_i_i = 0, $_01115_i_i60_i = 0, $_01214_i_i61_i = 0, $584 = 0, $588 = 0, $tmp_014_i_i99_i_i = 0, $_013_i_i100_i_i = 0, $_0912_i_i101_i_i = 0, $593 = 0, $595 = 0, $_2_i_i102_i_i = 0, $598 = 0, $_2_1_i_i103_i_i = 0, $601 = 0, $_2_2_i_i104_i_i = 0, $604 = 0, $_2_3_i_i105_i_i = 0, $607 = 0, $_2_4_i_i106_i_i = 0, $610 = 0, $_2_5_i_i107_i_i = 0, $613 = 0, $_2_6_i_i108_i_i = 0, $616 = 0, $_2_7_i_i109_i_i = 0, $619 = 0, $tmp_014_i85_i_i = 0, $_013_i86_i_i = 0, $_0912_i87_i_i = 0, $624 = 0, $626 = 0, $_2_i88_i_i = 0, $629 = 0, $_2_1_i89_i_i = 0, $632 = 0, $_2_2_i90_i_i = 0, $635 = 0, $_2_3_i91_i_i = 0, $638 = 0, $_2_4_i92_i_i = 0, $641 = 0, $_2_5_i93_i_i = 0, $644 = 0, $_2_6_i94_i_i = 0, $647 = 0, $_2_7_i95_i_i = 0, $650 = 0, $_09_lcssa_i_i63_i = 0, $_011_lcssa_i_i64_i = 0, $tmp_014_i_i41_i_i = 0, $_013_i_i42_i_i = 0, $_0912_i_i43_i_i = 0, $661 = 0, $663 = 0, $_2_i_i44_i_i = 0, $666 = 0, $_2_1_i_i45_i_i = 0, $669 = 0, $_2_2_i_i46_i_i = 0, $672 = 0, $_2_3_i_i47_i_i = 0, $675 = 0, $_2_4_i_i48_i_i = 0, $678 = 0, $_2_5_i_i49_i_i = 0, $681 = 0, $_2_6_i_i50_i_i = 0, $684 = 0, $_2_7_i_i51_i_i = 0, $687 = 0, $693 = 0, $697 = 0, $tmp_014_i_i_i69_i = 0, $_013_i_i_i70_i = 0, $_0912_i_i_i71_i = 0, $702 = 0, $704 = 0, $_2_i_i_i72_i = 0, $707 = 0, $_2_1_i_i_i73_i = 0, $710 = 0, $_2_2_i_i_i74_i = 0, $713 = 0, $_2_3_i_i_i75_i = 0, $716 = 0, $_2_4_i_i_i76_i = 0, $719 = 0, $_2_5_i_i_i77_i = 0, $722 = 0, $_2_6_i_i_i78_i = 0, $725 = 0, $_2_7_i_i_i79_i = 0, $728 = 0, $tmp_014_i_i81_i = 0, $_013_i_i82_i = 0, $_0912_i_i83_i = 0, $733 = 0, $735 = 0, $_2_i_i84_i = 0, $738 = 0, $_2_1_i_i85_i = 0, $741 = 0, $_2_2_i_i86_i = 0, $744 = 0, $_2_3_i_i87_i = 0, $747 = 0, $_2_4_i_i88_i = 0, $750 = 0, $_2_5_i_i89_i = 0, $753 = 0, $_2_6_i_i90_i = 0, $756 = 0, $_2_7_i_i91_i = 0, $759 = 0, $_09_lcssa_i_i93_i = 0, $_01115_i_i95_i = 0, $_01214_i_i96_i = 0, $765 = 0, $769 = 0, $tmp_014_i_i15_i_i = 0, $_013_i_i16_i_i = 0, $_0912_i_i17_i_i = 0, $774 = 0, $776 = 0, $_2_i_i18_i_i = 0, $779 = 0, $_2_1_i_i19_i_i = 0, $782 = 0, $_2_2_i_i20_i_i = 0, $785 = 0, $_2_3_i_i21_i_i = 0, $788 = 0, $_2_4_i_i22_i_i = 0, $791 = 0, $_2_5_i_i23_i_i = 0, $794 = 0, $_2_6_i_i24_i_i = 0, $797 = 0, $_2_7_i_i25_i_i = 0, $800 = 0, $tmp_014_i31_i_i = 0, $_013_i32_i_i = 0, $_0912_i33_i_i = 0, $805 = 0, $807 = 0, $_2_i34_i_i = 0, $810 = 0, $_2_1_i35_i_i = 0, $813 = 0, $_2_2_i36_i_i = 0, $816 = 0, $_2_3_i37_i_i = 0, $819 = 0, $_2_4_i38_i_i = 0, $822 = 0, $_2_5_i39_i_i = 0, $825 = 0, $_2_6_i40_i_i = 0, $828 = 0, $_2_7_i41_i_i = 0, $831 = 0, $_09_lcssa_i43_i_i = 0, $_011_lcssa_i_i97_i = 0, $tmp_014_i_i46_i_i = 0, $_013_i_i47_i_i = 0, $_0912_i_i48_i_i = 0, $842 = 0, $844 = 0, $_2_i_i49_i_i = 0, $847 = 0, $_2_1_i_i50_i_i = 0, $850 = 0, $_2_2_i_i51_i_i = 0, $853 = 0, $_2_3_i_i52_i_i = 0, $856 = 0, $_2_4_i_i53_i_i = 0, $859 = 0, $_2_5_i_i54_i_i = 0, $862 = 0, $_2_6_i_i55_i_i = 0, $865 = 0, $_2_7_i_i56_i_i = 0, $868 = 0, $tmp_014_i_i30_i_i = 0, $_013_i_i31_i_i = 0, $_0912_i_i32_i_i = 0, $880 = 0, $882 = 0, $_2_i_i33_i_i = 0, $885 = 0, $_2_1_i_i34_i_i = 0, $888 = 0, $_2_2_i_i35_i_i = 0, $891 = 0, $_2_3_i_i36_i_i = 0, $894 = 0, $_2_4_i_i37_i_i = 0, $897 = 0, $_2_5_i_i38_i_i = 0, $900 = 0, $_2_6_i_i39_i_i = 0, $903 = 0, $_2_7_i_i40_i_i = 0, $906 = 0, $911 = 0, $tmp_014_i_i_i104_i = 0, $_013_i_i_i105_i = 0, $_0912_i_i_i106_i = 0, $920 = 0, $922 = 0, $_2_i_i_i107_i = 0, $925 = 0, $_2_1_i_i_i108_i = 0, $928 = 0, $_2_2_i_i_i109_i = 0, $931 = 0, $_2_3_i_i_i110_i = 0, $934 = 0, $_2_4_i_i_i111_i = 0, $937 = 0, $_2_5_i_i_i112_i = 0, $940 = 0, $_2_6_i_i_i113_i = 0, $943 = 0, $_2_7_i_i_i114_i = 0, $946 = 0, $tmp_014_i_i116_i = 0, $_013_i_i117_i = 0, $_0912_i_i118_i = 0, $952 = 0, $954 = 0, $_2_i_i119_i = 0, $957 = 0, $_2_1_i_i120_i = 0, $960 = 0, $_2_2_i_i121_i = 0, $963 = 0, $_2_3_i_i122_i = 0, $966 = 0, $_2_4_i_i123_i = 0, $969 = 0, $_2_5_i_i124_i = 0, $972 = 0, $_2_6_i_i125_i = 0, $975 = 0, $_2_7_i_i126_i = 0, $978 = 0, $981 = 0, $_size_i_i = 0, $985 = 0, $n_1_i_i = 0, $991 = 0, $tmp_014_i_i85_i_i = 0, $_013_i_i86_i_i = 0, $_0912_i_i87_i_i = 0, $999 = 0, $1001 = 0, $_2_i_i88_i_i = 0, $1004 = 0, $_2_1_i_i89_i_i = 0, $1007 = 0, $_2_2_i_i90_i_i = 0, $1010 = 0, $_2_3_i_i91_i_i = 0, $1013 = 0, $_2_4_i_i92_i_i = 0, $1016 = 0, $_2_5_i_i93_i_i = 0, $1019 = 0, $_2_6_i_i94_i_i = 0, $1022 = 0, $_2_7_i_i95_i_i = 0, $1025 = 0, $_0_i52_i_i = 0, $_0_i129_i = 0, $_01115_i_i = 0, $_01214_i_i = 0, $1036 = 0, $1040 = 0, $tmp_014_i_i131_i = 0, $_013_i_i132_i = 0, $_0912_i_i133_i = 0, $1045 = 0, $1047 = 0, $_2_i_i134_i = 0, $1050 = 0, $_2_1_i_i135_i = 0, $1053 = 0, $_2_2_i_i136_i = 0, $1056 = 0, $_2_3_i_i137_i = 0, $1059 = 0, $_2_4_i_i138_i = 0, $1062 = 0, $_2_5_i_i139_i = 0, $1065 = 0, $_2_6_i_i140_i = 0, $1068 = 0, $_2_7_i_i141_i = 0, $1071 = 0, $tmp_014_i147_i = 0, $_013_i148_i = 0, $_0912_i149_i = 0, $1076 = 0, $1078 = 0, $_2_i150_i = 0, $1081 = 0, $_2_1_i151_i = 0, $1084 = 0, $_2_2_i152_i = 0, $1087 = 0, $_2_3_i153_i = 0, $1090 = 0, $_2_4_i154_i = 0, $1093 = 0, $_2_5_i155_i = 0, $1096 = 0, $_2_6_i156_i = 0, $1099 = 0, $_2_7_i157_i = 0, $1102 = 0, $_09_lcssa_i_i = 0, $_011_lcssa_i_i = 0, $tmp_014_i_i161_i = 0, $_013_i_i162_i = 0, $_0912_i_i163_i = 0, $1113 = 0, $1115 = 0, $_2_i_i164_i = 0, $1118 = 0, $_2_1_i_i165_i = 0, $1121 = 0, $_2_2_i_i166_i = 0, $1124 = 0, $_2_3_i_i167_i = 0, $1127 = 0, $_2_4_i_i168_i = 0, $1130 = 0, $_2_5_i_i169_i = 0, $1133 = 0, $_2_6_i_i170_i = 0, $1136 = 0, $_2_7_i_i171_i = 0, $1139 = 0, $1143 = 0, $tmp_014_i_i = 0, $_013_i_i = 0, $_0912_i_i = 0, $1151 = 0, $1153 = 0, $_2_i_i = 0, $1156 = 0, $_2_1_i_i = 0, $1159 = 0, $_2_2_i_i = 0, $1162 = 0, $_2_3_i_i = 0, $1165 = 0, $_2_4_i_i = 0, $1168 = 0, $_2_5_i_i = 0, $1171 = 0, $_2_6_i_i = 0, $1174 = 0, $_2_7_i_i = 0, $1177 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 26365
 STACKTOP = STACKTOP + 568 | 0; //@line 26365
 $buf_i34_i = sp | 0; //@line 26366
 $buf_i_i = sp + 32 | 0; //@line 26367
 $buf_i26 = sp + 288 | 0; //@line 26368
 $buf_i = sp + 296 | 0; //@line 26369
 $buf = sp + 552 | 0; //@line 26370
 _fwrite(52800, 49, 1, HEAP32[_stderr >> 2] | 0) | 0; //@line 26372
 $3 = $buf | 0; //@line 26373
 _psi_set_uint32_be($3, 0, $id); //@line 26374
 _psi_set_uint32_be($3, 4, $sz); //@line 26375
 $_0912_i = -1;
 $_013_i = 8;
 $tmp_014_i = $3;
 while (1) {
  $7 = HEAPU8[$tmp_014_i] << 24 ^ $_0912_i; //@line 26384
  $9 = $7 << 1; //@line 26386
  $_2_i = ($7 | 0) < 0 ? $9 ^ 79764919 : $9; //@line 26388
  $12 = $_2_i << 1; //@line 26390
  $_2_1_i = ($_2_i | 0) < 0 ? $12 ^ 79764919 : $12; //@line 26392
  $15 = $_2_1_i << 1; //@line 26394
  $_2_2_i = ($_2_1_i | 0) < 0 ? $15 ^ 79764919 : $15; //@line 26396
  $18 = $_2_2_i << 1; //@line 26398
  $_2_3_i = ($_2_2_i | 0) < 0 ? $18 ^ 79764919 : $18; //@line 26400
  $21 = $_2_3_i << 1; //@line 26402
  $_2_4_i = ($_2_3_i | 0) < 0 ? $21 ^ 79764919 : $21; //@line 26404
  $24 = $_2_4_i << 1; //@line 26406
  $_2_5_i = ($_2_4_i | 0) < 0 ? $24 ^ 79764919 : $24; //@line 26408
  $27 = $_2_5_i << 1; //@line 26410
  $_2_6_i = ($_2_5_i | 0) < 0 ? $27 ^ 79764919 : $27; //@line 26412
  $30 = $_2_6_i << 1; //@line 26414
  $_2_7_i = ($_2_6_i | 0) < 0 ? $30 ^ 79764919 : $30; //@line 26416
  $33 = $_013_i - 1 | 0; //@line 26418
  if (($33 | 0) == 0) {
   break;
  } else {
   $_0912_i = $_2_7_i;
   $_013_i = $33;
   $tmp_014_i = $tmp_014_i + 1 | 0;
  }
 }
 HEAP32[15666] = $_2_7_i; //@line 26427
 $35 = $buf + 8 | 0; //@line 26428
 if ((_psi_read($fp, $35, 8) | 0) != 0) {
  $_0 = 1; //@line 26433
  STACKTOP = sp; //@line 26435
  return $_0 | 0; //@line 26436
 }
 $_0912_i_i11 = HEAP32[15666] | 0;
 $_013_i_i10 = 8;
 $tmp_014_i_i9 = $35;
 while (1) {
  $43 = HEAPU8[$tmp_014_i_i9] << 24 ^ $_0912_i_i11; //@line 26447
  $45 = $43 << 1; //@line 26449
  $_2_i_i12 = ($43 | 0) < 0 ? $45 ^ 79764919 : $45; //@line 26451
  $48 = $_2_i_i12 << 1; //@line 26453
  $_2_1_i_i13 = ($_2_i_i12 | 0) < 0 ? $48 ^ 79764919 : $48; //@line 26455
  $51 = $_2_1_i_i13 << 1; //@line 26457
  $_2_2_i_i14 = ($_2_1_i_i13 | 0) < 0 ? $51 ^ 79764919 : $51; //@line 26459
  $54 = $_2_2_i_i14 << 1; //@line 26461
  $_2_3_i_i15 = ($_2_2_i_i14 | 0) < 0 ? $54 ^ 79764919 : $54; //@line 26463
  $57 = $_2_3_i_i15 << 1; //@line 26465
  $_2_4_i_i16 = ($_2_3_i_i15 | 0) < 0 ? $57 ^ 79764919 : $57; //@line 26467
  $60 = $_2_4_i_i16 << 1; //@line 26469
  $_2_5_i_i17 = ($_2_4_i_i16 | 0) < 0 ? $60 ^ 79764919 : $60; //@line 26471
  $63 = $_2_5_i_i17 << 1; //@line 26473
  $_2_6_i_i18 = ($_2_5_i_i17 | 0) < 0 ? $63 ^ 79764919 : $63; //@line 26475
  $66 = $_2_6_i_i18 << 1; //@line 26477
  $_2_7_i_i19 = ($_2_6_i_i18 | 0) < 0 ? $66 ^ 79764919 : $66; //@line 26479
  $69 = $_013_i_i10 - 1 | 0; //@line 26481
  if (($69 | 0) == 0) {
   break;
  } else {
   $_0912_i_i11 = $_2_7_i_i19;
   $_013_i_i10 = $69;
   $tmp_014_i_i9 = $tmp_014_i_i9 + 1 | 0;
  }
 }
 HEAP32[15666] = $_2_7_i_i19; //@line 26490
 $72 = _psi_get_uint32_be($3, 12) | 0; //@line 26491
 if ($72 >>> 0 < 16) {
  $_0 = 1; //@line 26495
  STACKTOP = sp; //@line 26497
  return $_0 | 0; //@line 26498
 }
 $75 = $72 - 16 | 0; //@line 26500
 $76 = $buf_i | 0; //@line 26501
 L16385 : do {
  if (($75 | 0) != 0) {
   $_079_i = $75; //@line 26506
   while (1) {
    $79 = $_079_i >>> 0 < 256 ? $_079_i : 256; //@line 26510
    if ((_psi_read($fp, $76, $79) | 0) != 0) {
     $_0 = 1; //@line 26515
     break;
    }
    $83 = HEAP32[15666] | 0; //@line 26518
    if (($79 | 0) == 0) {
     $_09_lcssa_i_i_i = $83; //@line 26522
    } else {
     $_0912_i_i_i = $83;
     $_013_i_i_i = $79;
     $tmp_014_i_i_i = $76;
     while (1) {
      $88 = HEAPU8[$tmp_014_i_i_i] << 24 ^ $_0912_i_i_i; //@line 26532
      $90 = $88 << 1; //@line 26534
      $_2_i_i_i = ($88 | 0) < 0 ? $90 ^ 79764919 : $90; //@line 26536
      $93 = $_2_i_i_i << 1; //@line 26538
      $_2_1_i_i_i = ($_2_i_i_i | 0) < 0 ? $93 ^ 79764919 : $93; //@line 26540
      $96 = $_2_1_i_i_i << 1; //@line 26542
      $_2_2_i_i_i = ($_2_1_i_i_i | 0) < 0 ? $96 ^ 79764919 : $96; //@line 26544
      $99 = $_2_2_i_i_i << 1; //@line 26546
      $_2_3_i_i_i = ($_2_2_i_i_i | 0) < 0 ? $99 ^ 79764919 : $99; //@line 26548
      $102 = $_2_3_i_i_i << 1; //@line 26550
      $_2_4_i_i_i = ($_2_3_i_i_i | 0) < 0 ? $102 ^ 79764919 : $102; //@line 26552
      $105 = $_2_4_i_i_i << 1; //@line 26554
      $_2_5_i_i_i = ($_2_4_i_i_i | 0) < 0 ? $105 ^ 79764919 : $105; //@line 26556
      $108 = $_2_5_i_i_i << 1; //@line 26558
      $_2_6_i_i_i = ($_2_5_i_i_i | 0) < 0 ? $108 ^ 79764919 : $108; //@line 26560
      $111 = $_2_6_i_i_i << 1; //@line 26562
      $_2_7_i_i_i = ($_2_6_i_i_i | 0) < 0 ? $111 ^ 79764919 : $111; //@line 26564
      $114 = $_013_i_i_i - 1 | 0; //@line 26566
      if (($114 | 0) == 0) {
       $_09_lcssa_i_i_i = $_2_7_i_i_i; //@line 26570
       break;
      } else {
       $_0912_i_i_i = $_2_7_i_i_i;
       $_013_i_i_i = $114;
       $tmp_014_i_i_i = $tmp_014_i_i_i + 1 | 0;
      }
     }
    }
    HEAP32[15666] = $_09_lcssa_i_i_i; //@line 26578
    if (($_079_i | 0) == ($79 | 0)) {
     break L16385;
    } else {
     $_079_i = $_079_i - $79 | 0; //@line 26585
    }
   }
   STACKTOP = sp; //@line 26589
   return $_0 | 0; //@line 26590
  }
 } while (0);
 $118 = $buf_i26 | 0; //@line 26593
 $119 = $buf_i_i | 0; //@line 26594
 $120 = $buf_i34_i | 0; //@line 26595
 $121 = $buf_i34_i + 1 | 0; //@line 26596
 $122 = $buf_i34_i + 2 | 0; //@line 26597
 $123 = $buf_i34_i + 3 | 0; //@line 26598
 $124 = $buf_i34_i + 4 | 0; //@line 26599
 $125 = $buf_i34_i + 5 | 0; //@line 26600
 $126 = $buf_i34_i + 8 | 0; //@line 26601
 $_ph_i = 0; //@line 26603
 L16395 : while (1) {
  if ((_psi_read($fp, $118, 4) | 0) != 0) {
   $_0 = 1; //@line 26610
   label = 13141; //@line 26611
   break;
  }
  $129 = ($_ph_i | 0) == 0; //@line 26614
  while (1) {
   $_0912_i_i_i30 = HEAP32[15666] | 0;
   $_013_i_i_i29 = 4;
   $tmp_014_i_i_i28 = $118;
   while (1) {
    $135 = HEAPU8[$tmp_014_i_i_i28] << 24 ^ $_0912_i_i_i30; //@line 26626
    $137 = $135 << 1; //@line 26628
    $_2_i_i_i31 = ($135 | 0) < 0 ? $137 ^ 79764919 : $137; //@line 26630
    $140 = $_2_i_i_i31 << 1; //@line 26632
    $_2_1_i_i_i32 = ($_2_i_i_i31 | 0) < 0 ? $140 ^ 79764919 : $140; //@line 26634
    $143 = $_2_1_i_i_i32 << 1; //@line 26636
    $_2_2_i_i_i33 = ($_2_1_i_i_i32 | 0) < 0 ? $143 ^ 79764919 : $143; //@line 26638
    $146 = $_2_2_i_i_i33 << 1; //@line 26640
    $_2_3_i_i_i34 = ($_2_2_i_i_i33 | 0) < 0 ? $146 ^ 79764919 : $146; //@line 26642
    $149 = $_2_3_i_i_i34 << 1; //@line 26644
    $_2_4_i_i_i35 = ($_2_3_i_i_i34 | 0) < 0 ? $149 ^ 79764919 : $149; //@line 26646
    $152 = $_2_4_i_i_i35 << 1; //@line 26648
    $_2_5_i_i_i36 = ($_2_4_i_i_i35 | 0) < 0 ? $152 ^ 79764919 : $152; //@line 26650
    $155 = $_2_5_i_i_i36 << 1; //@line 26652
    $_2_6_i_i_i37 = ($_2_5_i_i_i36 | 0) < 0 ? $155 ^ 79764919 : $155; //@line 26654
    $158 = $_2_6_i_i_i37 << 1; //@line 26656
    $_2_7_i_i_i38 = ($_2_6_i_i_i37 | 0) < 0 ? $158 ^ 79764919 : $158; //@line 26658
    $161 = $_013_i_i_i29 - 1 | 0; //@line 26660
    if (($161 | 0) == 0) {
     break;
    } else {
     $_0912_i_i_i30 = $_2_7_i_i_i38;
     $_013_i_i_i29 = $161;
     $tmp_014_i_i_i28 = $tmp_014_i_i_i28 + 1 | 0;
    }
   }
   HEAP32[15666] = $_2_7_i_i_i38; //@line 26669
   $164 = _psi_get_uint16_be($118, 0) | 0; //@line 26670
   $165 = _psi_get_uint16_be($118, 2) | 0; //@line 26671
   $_0912_i_i42 = 0;
   $_013_i_i41 = 4;
   $tmp_014_i_i40 = $118;
   while (1) {
    $169 = HEAPU8[$tmp_014_i_i40] << 24 ^ $_0912_i_i42; //@line 26680
    $171 = $169 << 1; //@line 26682
    $_2_i_i43 = ($169 | 0) < 0 ? $171 ^ 79764919 : $171; //@line 26684
    $174 = $_2_i_i43 << 1; //@line 26686
    $_2_1_i_i44 = ($_2_i_i43 | 0) < 0 ? $174 ^ 79764919 : $174; //@line 26688
    $177 = $_2_1_i_i44 << 1; //@line 26690
    $_2_2_i_i45 = ($_2_1_i_i44 | 0) < 0 ? $177 ^ 79764919 : $177; //@line 26692
    $180 = $_2_2_i_i45 << 1; //@line 26694
    $_2_3_i_i46 = ($_2_2_i_i45 | 0) < 0 ? $180 ^ 79764919 : $180; //@line 26696
    $183 = $_2_3_i_i46 << 1; //@line 26698
    $_2_4_i_i47 = ($_2_3_i_i46 | 0) < 0 ? $183 ^ 79764919 : $183; //@line 26700
    $186 = $_2_4_i_i47 << 1; //@line 26702
    $_2_5_i_i48 = ($_2_4_i_i47 | 0) < 0 ? $186 ^ 79764919 : $186; //@line 26704
    $189 = $_2_5_i_i48 << 1; //@line 26706
    $_2_6_i_i49 = ($_2_5_i_i48 | 0) < 0 ? $189 ^ 79764919 : $189; //@line 26708
    $192 = $_2_6_i_i49 << 1; //@line 26710
    $_2_7_i_i50 = ($_2_6_i_i49 | 0) < 0 ? $192 ^ 79764919 : $192; //@line 26712
    $195 = $_013_i_i41 - 1 | 0; //@line 26714
    if (($195 | 0) == 0) {
     break;
    } else {
     $_0912_i_i42 = $_2_7_i_i50;
     $_013_i_i41 = $195;
     $tmp_014_i_i40 = $tmp_014_i_i40 + 1 | 0;
    }
   }
   if (($164 | 0) == 17742) {
    label = 12996; //@line 26724
    break L16395;
   } else if (($164 | 0) == 17229) {
    if (($165 | 0) == 0) {
     if ((_psi_read($fp, $119, 4) | 0) != 0) {
      $_0 = 1; //@line 26734
      label = 13136; //@line 26735
      break L16395;
     }
     $_0912_i_i32_i_i = HEAP32[15666] | 0;
     $_013_i_i31_i_i = 4;
     $tmp_014_i_i30_i_i = $119;
     while (1) {
      $880 = HEAPU8[$tmp_014_i_i30_i_i] << 24 ^ $_0912_i_i32_i_i; //@line 26747
      $882 = $880 << 1; //@line 26749
      $_2_i_i33_i_i = ($880 | 0) < 0 ? $882 ^ 79764919 : $882; //@line 26751
      $885 = $_2_i_i33_i_i << 1; //@line 26753
      $_2_1_i_i34_i_i = ($_2_i_i33_i_i | 0) < 0 ? $885 ^ 79764919 : $885; //@line 26755
      $888 = $_2_1_i_i34_i_i << 1; //@line 26757
      $_2_2_i_i35_i_i = ($_2_1_i_i34_i_i | 0) < 0 ? $888 ^ 79764919 : $888; //@line 26759
      $891 = $_2_2_i_i35_i_i << 1; //@line 26761
      $_2_3_i_i36_i_i = ($_2_2_i_i35_i_i | 0) < 0 ? $891 ^ 79764919 : $891; //@line 26763
      $894 = $_2_3_i_i36_i_i << 1; //@line 26765
      $_2_4_i_i37_i_i = ($_2_3_i_i36_i_i | 0) < 0 ? $894 ^ 79764919 : $894; //@line 26767
      $897 = $_2_4_i_i37_i_i << 1; //@line 26769
      $_2_5_i_i38_i_i = ($_2_4_i_i37_i_i | 0) < 0 ? $897 ^ 79764919 : $897; //@line 26771
      $900 = $_2_5_i_i38_i_i << 1; //@line 26773
      $_2_6_i_i39_i_i = ($_2_5_i_i38_i_i | 0) < 0 ? $900 ^ 79764919 : $900; //@line 26775
      $903 = $_2_6_i_i39_i_i << 1; //@line 26777
      $_2_7_i_i40_i_i = ($_2_6_i_i39_i_i | 0) < 0 ? $903 ^ 79764919 : $903; //@line 26779
      $906 = $_013_i_i31_i_i - 1 | 0; //@line 26781
      if (($906 | 0) == 0) {
       break;
      } else {
       $_0912_i_i32_i_i = $_2_7_i_i40_i_i;
       $_013_i_i31_i_i = $906;
       $tmp_014_i_i30_i_i = $tmp_014_i_i30_i_i + 1 | 0;
      }
     }
     HEAP32[15666] = $_2_7_i_i40_i_i; //@line 26790
     $_0_i129_i = (_psi_get_uint32_be($119, 0) | 0) != ($_2_7_i_i50 | 0) | 0; //@line 26795
    } else {
     $911 = _malloc($165) | 0; //@line 26797
     if (($911 | 0) == 0) {
      $_0 = 1; //@line 26801
      label = 13140; //@line 26802
      break L16395;
     }
     if ((_psi_read($fp, $911, $165) | 0) != 0) {
      label = 13085; //@line 26809
      break L16395;
     }
     $_0912_i_i_i106_i = HEAP32[15666] | 0;
     $_013_i_i_i105_i = $165;
     $tmp_014_i_i_i104_i = $911;
     while (1) {
      $920 = HEAPU8[$tmp_014_i_i_i104_i] << 24 ^ $_0912_i_i_i106_i; //@line 26822
      $922 = $920 << 1; //@line 26824
      $_2_i_i_i107_i = ($920 | 0) < 0 ? $922 ^ 79764919 : $922; //@line 26826
      $925 = $_2_i_i_i107_i << 1; //@line 26828
      $_2_1_i_i_i108_i = ($_2_i_i_i107_i | 0) < 0 ? $925 ^ 79764919 : $925; //@line 26830
      $928 = $_2_1_i_i_i108_i << 1; //@line 26832
      $_2_2_i_i_i109_i = ($_2_1_i_i_i108_i | 0) < 0 ? $928 ^ 79764919 : $928; //@line 26834
      $931 = $_2_2_i_i_i109_i << 1; //@line 26836
      $_2_3_i_i_i110_i = ($_2_2_i_i_i109_i | 0) < 0 ? $931 ^ 79764919 : $931; //@line 26838
      $934 = $_2_3_i_i_i110_i << 1; //@line 26840
      $_2_4_i_i_i111_i = ($_2_3_i_i_i110_i | 0) < 0 ? $934 ^ 79764919 : $934; //@line 26842
      $937 = $_2_4_i_i_i111_i << 1; //@line 26844
      $_2_5_i_i_i112_i = ($_2_4_i_i_i111_i | 0) < 0 ? $937 ^ 79764919 : $937; //@line 26846
      $940 = $_2_5_i_i_i112_i << 1; //@line 26848
      $_2_6_i_i_i113_i = ($_2_5_i_i_i112_i | 0) < 0 ? $940 ^ 79764919 : $940; //@line 26850
      $943 = $_2_6_i_i_i113_i << 1; //@line 26852
      $_2_7_i_i_i114_i = ($_2_6_i_i_i113_i | 0) < 0 ? $943 ^ 79764919 : $943; //@line 26854
      $946 = $_013_i_i_i105_i - 1 | 0; //@line 26856
      if (($946 | 0) == 0) {
       break;
      } else {
       $_0912_i_i_i106_i = $_2_7_i_i_i114_i;
       $_013_i_i_i105_i = $946;
       $tmp_014_i_i_i104_i = $tmp_014_i_i_i104_i + 1 | 0;
      }
     }
     HEAP32[15666] = $_2_7_i_i_i114_i; //@line 26865
     $_0912_i_i118_i = $_2_7_i_i50;
     $_013_i_i117_i = $165;
     $tmp_014_i_i116_i = $911;
     while (1) {
      $952 = HEAPU8[$tmp_014_i_i116_i] << 24 ^ $_0912_i_i118_i; //@line 26875
      $954 = $952 << 1; //@line 26877
      $_2_i_i119_i = ($952 | 0) < 0 ? $954 ^ 79764919 : $954; //@line 26879
      $957 = $_2_i_i119_i << 1; //@line 26881
      $_2_1_i_i120_i = ($_2_i_i119_i | 0) < 0 ? $957 ^ 79764919 : $957; //@line 26883
      $960 = $_2_1_i_i120_i << 1; //@line 26885
      $_2_2_i_i121_i = ($_2_1_i_i120_i | 0) < 0 ? $960 ^ 79764919 : $960; //@line 26887
      $963 = $_2_2_i_i121_i << 1; //@line 26889
      $_2_3_i_i122_i = ($_2_2_i_i121_i | 0) < 0 ? $963 ^ 79764919 : $963; //@line 26891
      $966 = $_2_3_i_i122_i << 1; //@line 26893
      $_2_4_i_i123_i = ($_2_3_i_i122_i | 0) < 0 ? $966 ^ 79764919 : $966; //@line 26895
      $969 = $_2_4_i_i123_i << 1; //@line 26897
      $_2_5_i_i124_i = ($_2_4_i_i123_i | 0) < 0 ? $969 ^ 79764919 : $969; //@line 26899
      $972 = $_2_5_i_i124_i << 1; //@line 26901
      $_2_6_i_i125_i = ($_2_5_i_i124_i | 0) < 0 ? $972 ^ 79764919 : $972; //@line 26903
      $975 = $_2_6_i_i125_i << 1; //@line 26905
      $_2_7_i_i126_i = ($_2_6_i_i125_i | 0) < 0 ? $975 ^ 79764919 : $975; //@line 26907
      $978 = $_013_i_i117_i - 1 | 0; //@line 26909
      if (($978 | 0) == 0) {
       break;
      } else {
       $_0912_i_i118_i = $_2_7_i_i126_i;
       $_013_i_i117_i = $978;
       $tmp_014_i_i116_i = $tmp_014_i_i116_i + 1 | 0;
      }
     }
     $981 = (HEAP8[$911] | 0) == 10; //@line 26919
     $_size_i_i = ($981 << 31 >> 31) + $165 | 0; //@line 26922
     if (($_size_i_i | 0) == 0) {
      $n_1_i_i = 0; //@line 26926
     } else {
      $985 = $_size_i_i - 1 | 0; //@line 26928
      $n_1_i_i = (HEAP8[$911 + $985 | 0] | 0) == 10 ? $985 : $_size_i_i; //@line 26934
     }
     $991 = _psi_img_add_comment($img, $911 + ($981 & 1) | 0, $n_1_i_i) | 0; //@line 26938
     _free($911); //@line 26939
     if ((_psi_read($fp, $119, 4) | 0) == 0) {
      $_0912_i_i87_i_i = HEAP32[15666] | 0;
      $_013_i_i86_i_i = 4;
      $tmp_014_i_i85_i_i = $119;
      while (1) {
       $999 = HEAPU8[$tmp_014_i_i85_i_i] << 24 ^ $_0912_i_i87_i_i; //@line 26953
       $1001 = $999 << 1; //@line 26955
       $_2_i_i88_i_i = ($999 | 0) < 0 ? $1001 ^ 79764919 : $1001; //@line 26957
       $1004 = $_2_i_i88_i_i << 1; //@line 26959
       $_2_1_i_i89_i_i = ($_2_i_i88_i_i | 0) < 0 ? $1004 ^ 79764919 : $1004; //@line 26961
       $1007 = $_2_1_i_i89_i_i << 1; //@line 26963
       $_2_2_i_i90_i_i = ($_2_1_i_i89_i_i | 0) < 0 ? $1007 ^ 79764919 : $1007; //@line 26965
       $1010 = $_2_2_i_i90_i_i << 1; //@line 26967
       $_2_3_i_i91_i_i = ($_2_2_i_i90_i_i | 0) < 0 ? $1010 ^ 79764919 : $1010; //@line 26969
       $1013 = $_2_3_i_i91_i_i << 1; //@line 26971
       $_2_4_i_i92_i_i = ($_2_3_i_i91_i_i | 0) < 0 ? $1013 ^ 79764919 : $1013; //@line 26973
       $1016 = $_2_4_i_i92_i_i << 1; //@line 26975
       $_2_5_i_i93_i_i = ($_2_4_i_i92_i_i | 0) < 0 ? $1016 ^ 79764919 : $1016; //@line 26977
       $1019 = $_2_5_i_i93_i_i << 1; //@line 26979
       $_2_6_i_i94_i_i = ($_2_5_i_i93_i_i | 0) < 0 ? $1019 ^ 79764919 : $1019; //@line 26981
       $1022 = $_2_6_i_i94_i_i << 1; //@line 26983
       $_2_7_i_i95_i_i = ($_2_6_i_i94_i_i | 0) < 0 ? $1022 ^ 79764919 : $1022; //@line 26985
       $1025 = $_013_i_i86_i_i - 1 | 0; //@line 26987
       if (($1025 | 0) == 0) {
        break;
       } else {
        $_0912_i_i87_i_i = $_2_7_i_i95_i_i;
        $_013_i_i86_i_i = $1025;
        $tmp_014_i_i85_i_i = $tmp_014_i_i85_i_i + 1 | 0;
       }
      }
      HEAP32[15666] = $_2_7_i_i95_i_i; //@line 26996
      $_0_i52_i_i = (_psi_get_uint32_be($119, 0) | 0) != ($_2_7_i_i126_i | 0) | 0; //@line 27001
     } else {
      $_0_i52_i_i = 1; //@line 27003
     }
     $_0_i129_i = $_0_i52_i_i | $991; //@line 27008
    }
    if (($_0_i129_i | 0) != 0) {
     $_0 = 1; //@line 27014
     label = 13120; //@line 27015
     break L16395;
    }
   } else if (($164 | 0) == 21575) {
    if ($129) {
     $_0 = 1; //@line 27021
     label = 13138; //@line 27022
     break L16395;
    }
    $693 = $165 >>> 0 < 256 ? $165 : 256; //@line 27026
    if ((_psi_read($fp, $76, $693) | 0) != 0) {
     $_0 = 1; //@line 27031
     label = 13116; //@line 27032
     break L16395;
    }
    $697 = HEAP32[15666] | 0; //@line 27035
    if (($693 | 0) == 0) {
     HEAP32[15666] = $697; //@line 27039
     $_09_lcssa_i_i93_i = $_2_7_i_i50; //@line 27041
    } else {
     $_0912_i_i_i71_i = $697;
     $_013_i_i_i70_i = $693;
     $tmp_014_i_i_i69_i = $76;
     while (1) {
      $702 = HEAPU8[$tmp_014_i_i_i69_i] << 24 ^ $_0912_i_i_i71_i; //@line 27051
      $704 = $702 << 1; //@line 27053
      $_2_i_i_i72_i = ($702 | 0) < 0 ? $704 ^ 79764919 : $704; //@line 27055
      $707 = $_2_i_i_i72_i << 1; //@line 27057
      $_2_1_i_i_i73_i = ($_2_i_i_i72_i | 0) < 0 ? $707 ^ 79764919 : $707; //@line 27059
      $710 = $_2_1_i_i_i73_i << 1; //@line 27061
      $_2_2_i_i_i74_i = ($_2_1_i_i_i73_i | 0) < 0 ? $710 ^ 79764919 : $710; //@line 27063
      $713 = $_2_2_i_i_i74_i << 1; //@line 27065
      $_2_3_i_i_i75_i = ($_2_2_i_i_i74_i | 0) < 0 ? $713 ^ 79764919 : $713; //@line 27067
      $716 = $_2_3_i_i_i75_i << 1; //@line 27069
      $_2_4_i_i_i76_i = ($_2_3_i_i_i75_i | 0) < 0 ? $716 ^ 79764919 : $716; //@line 27071
      $719 = $_2_4_i_i_i76_i << 1; //@line 27073
      $_2_5_i_i_i77_i = ($_2_4_i_i_i76_i | 0) < 0 ? $719 ^ 79764919 : $719; //@line 27075
      $722 = $_2_5_i_i_i77_i << 1; //@line 27077
      $_2_6_i_i_i78_i = ($_2_5_i_i_i77_i | 0) < 0 ? $722 ^ 79764919 : $722; //@line 27079
      $725 = $_2_6_i_i_i78_i << 1; //@line 27081
      $_2_7_i_i_i79_i = ($_2_6_i_i_i78_i | 0) < 0 ? $725 ^ 79764919 : $725; //@line 27083
      $728 = $_013_i_i_i70_i - 1 | 0; //@line 27085
      if (($728 | 0) == 0) {
       break;
      } else {
       $_0912_i_i_i71_i = $_2_7_i_i_i79_i;
       $_013_i_i_i70_i = $728;
       $tmp_014_i_i_i69_i = $tmp_014_i_i_i69_i + 1 | 0;
      }
     }
     HEAP32[15666] = $_2_7_i_i_i79_i; //@line 27094
     $_0912_i_i83_i = $_2_7_i_i50;
     $_013_i_i82_i = $693;
     $tmp_014_i_i81_i = $76;
     while (1) {
      $733 = HEAPU8[$tmp_014_i_i81_i] << 24 ^ $_0912_i_i83_i; //@line 27104
      $735 = $733 << 1; //@line 27106
      $_2_i_i84_i = ($733 | 0) < 0 ? $735 ^ 79764919 : $735; //@line 27108
      $738 = $_2_i_i84_i << 1; //@line 27110
      $_2_1_i_i85_i = ($_2_i_i84_i | 0) < 0 ? $738 ^ 79764919 : $738; //@line 27112
      $741 = $_2_1_i_i85_i << 1; //@line 27114
      $_2_2_i_i86_i = ($_2_1_i_i85_i | 0) < 0 ? $741 ^ 79764919 : $741; //@line 27116
      $744 = $_2_2_i_i86_i << 1; //@line 27118
      $_2_3_i_i87_i = ($_2_2_i_i86_i | 0) < 0 ? $744 ^ 79764919 : $744; //@line 27120
      $747 = $_2_3_i_i87_i << 1; //@line 27122
      $_2_4_i_i88_i = ($_2_3_i_i87_i | 0) < 0 ? $747 ^ 79764919 : $747; //@line 27124
      $750 = $_2_4_i_i88_i << 1; //@line 27126
      $_2_5_i_i89_i = ($_2_4_i_i88_i | 0) < 0 ? $750 ^ 79764919 : $750; //@line 27128
      $753 = $_2_5_i_i89_i << 1; //@line 27130
      $_2_6_i_i90_i = ($_2_5_i_i89_i | 0) < 0 ? $753 ^ 79764919 : $753; //@line 27132
      $756 = $_2_6_i_i90_i << 1; //@line 27134
      $_2_7_i_i91_i = ($_2_6_i_i90_i | 0) < 0 ? $756 ^ 79764919 : $756; //@line 27136
      $759 = $_013_i_i82_i - 1 | 0; //@line 27138
      if (($759 | 0) == 0) {
       $_09_lcssa_i_i93_i = $_2_7_i_i91_i; //@line 27142
       break;
      } else {
       $_0912_i_i83_i = $_2_7_i_i91_i;
       $_013_i_i82_i = $759;
       $tmp_014_i_i81_i = $tmp_014_i_i81_i + 1 | 0;
      }
     }
    }
    _psi_sct_set_tags($_ph_i, $76, $693) | 0; //@line 27150
    if (($693 | 0) == ($165 | 0)) {
     $_011_lcssa_i_i97_i = $_09_lcssa_i_i93_i; //@line 27154
    } else {
     $_01214_i_i96_i = $165 - $693 | 0;
     $_01115_i_i95_i = $_09_lcssa_i_i93_i;
     while (1) {
      $765 = $_01214_i_i96_i >>> 0 < 256 ? $_01214_i_i96_i : 256; //@line 27163
      if ((_psi_read($fp, $119, $765) | 0) != 0) {
       $_0 = 1; //@line 27168
       label = 13121; //@line 27169
       break L16395;
      }
      $769 = HEAP32[15666] | 0; //@line 27172
      if (($765 | 0) == 0) {
       HEAP32[15666] = $769; //@line 27176
       $_09_lcssa_i43_i_i = $_01115_i_i95_i; //@line 27178
      } else {
       $_0912_i_i17_i_i = $769;
       $_013_i_i16_i_i = $765;
       $tmp_014_i_i15_i_i = $119;
       while (1) {
        $774 = HEAPU8[$tmp_014_i_i15_i_i] << 24 ^ $_0912_i_i17_i_i; //@line 27188
        $776 = $774 << 1; //@line 27190
        $_2_i_i18_i_i = ($774 | 0) < 0 ? $776 ^ 79764919 : $776; //@line 27192
        $779 = $_2_i_i18_i_i << 1; //@line 27194
        $_2_1_i_i19_i_i = ($_2_i_i18_i_i | 0) < 0 ? $779 ^ 79764919 : $779; //@line 27196
        $782 = $_2_1_i_i19_i_i << 1; //@line 27198
        $_2_2_i_i20_i_i = ($_2_1_i_i19_i_i | 0) < 0 ? $782 ^ 79764919 : $782; //@line 27200
        $785 = $_2_2_i_i20_i_i << 1; //@line 27202
        $_2_3_i_i21_i_i = ($_2_2_i_i20_i_i | 0) < 0 ? $785 ^ 79764919 : $785; //@line 27204
        $788 = $_2_3_i_i21_i_i << 1; //@line 27206
        $_2_4_i_i22_i_i = ($_2_3_i_i21_i_i | 0) < 0 ? $788 ^ 79764919 : $788; //@line 27208
        $791 = $_2_4_i_i22_i_i << 1; //@line 27210
        $_2_5_i_i23_i_i = ($_2_4_i_i22_i_i | 0) < 0 ? $791 ^ 79764919 : $791; //@line 27212
        $794 = $_2_5_i_i23_i_i << 1; //@line 27214
        $_2_6_i_i24_i_i = ($_2_5_i_i23_i_i | 0) < 0 ? $794 ^ 79764919 : $794; //@line 27216
        $797 = $_2_6_i_i24_i_i << 1; //@line 27218
        $_2_7_i_i25_i_i = ($_2_6_i_i24_i_i | 0) < 0 ? $797 ^ 79764919 : $797; //@line 27220
        $800 = $_013_i_i16_i_i - 1 | 0; //@line 27222
        if (($800 | 0) == 0) {
         break;
        } else {
         $_0912_i_i17_i_i = $_2_7_i_i25_i_i;
         $_013_i_i16_i_i = $800;
         $tmp_014_i_i15_i_i = $tmp_014_i_i15_i_i + 1 | 0;
        }
       }
       HEAP32[15666] = $_2_7_i_i25_i_i; //@line 27231
       $_0912_i33_i_i = $_01115_i_i95_i;
       $_013_i32_i_i = $765;
       $tmp_014_i31_i_i = $119;
       while (1) {
        $805 = HEAPU8[$tmp_014_i31_i_i] << 24 ^ $_0912_i33_i_i; //@line 27241
        $807 = $805 << 1; //@line 27243
        $_2_i34_i_i = ($805 | 0) < 0 ? $807 ^ 79764919 : $807; //@line 27245
        $810 = $_2_i34_i_i << 1; //@line 27247
        $_2_1_i35_i_i = ($_2_i34_i_i | 0) < 0 ? $810 ^ 79764919 : $810; //@line 27249
        $813 = $_2_1_i35_i_i << 1; //@line 27251
        $_2_2_i36_i_i = ($_2_1_i35_i_i | 0) < 0 ? $813 ^ 79764919 : $813; //@line 27253
        $816 = $_2_2_i36_i_i << 1; //@line 27255
        $_2_3_i37_i_i = ($_2_2_i36_i_i | 0) < 0 ? $816 ^ 79764919 : $816; //@line 27257
        $819 = $_2_3_i37_i_i << 1; //@line 27259
        $_2_4_i38_i_i = ($_2_3_i37_i_i | 0) < 0 ? $819 ^ 79764919 : $819; //@line 27261
        $822 = $_2_4_i38_i_i << 1; //@line 27263
        $_2_5_i39_i_i = ($_2_4_i38_i_i | 0) < 0 ? $822 ^ 79764919 : $822; //@line 27265
        $825 = $_2_5_i39_i_i << 1; //@line 27267
        $_2_6_i40_i_i = ($_2_5_i39_i_i | 0) < 0 ? $825 ^ 79764919 : $825; //@line 27269
        $828 = $_2_6_i40_i_i << 1; //@line 27271
        $_2_7_i41_i_i = ($_2_6_i40_i_i | 0) < 0 ? $828 ^ 79764919 : $828; //@line 27273
        $831 = $_013_i32_i_i - 1 | 0; //@line 27275
        if (($831 | 0) == 0) {
         $_09_lcssa_i43_i_i = $_2_7_i41_i_i; //@line 27279
         break;
        } else {
         $_0912_i33_i_i = $_2_7_i41_i_i;
         $_013_i32_i_i = $831;
         $tmp_014_i31_i_i = $tmp_014_i31_i_i + 1 | 0;
        }
       }
      }
      if (($_01214_i_i96_i | 0) == ($765 | 0)) {
       $_011_lcssa_i_i97_i = $_09_lcssa_i43_i_i; //@line 27291
       break;
      } else {
       $_01214_i_i96_i = $_01214_i_i96_i - $765 | 0;
       $_01115_i_i95_i = $_09_lcssa_i43_i_i;
      }
     }
    }
    if ((_psi_read($fp, $119, 4) | 0) != 0) {
     $_0 = 1; //@line 27303
     label = 13125; //@line 27304
     break L16395;
    }
    $_0912_i_i48_i_i = HEAP32[15666] | 0;
    $_013_i_i47_i_i = 4;
    $tmp_014_i_i46_i_i = $119;
    while (1) {
     $842 = HEAPU8[$tmp_014_i_i46_i_i] << 24 ^ $_0912_i_i48_i_i; //@line 27316
     $844 = $842 << 1; //@line 27318
     $_2_i_i49_i_i = ($842 | 0) < 0 ? $844 ^ 79764919 : $844; //@line 27320
     $847 = $_2_i_i49_i_i << 1; //@line 27322
     $_2_1_i_i50_i_i = ($_2_i_i49_i_i | 0) < 0 ? $847 ^ 79764919 : $847; //@line 27324
     $850 = $_2_1_i_i50_i_i << 1; //@line 27326
     $_2_2_i_i51_i_i = ($_2_1_i_i50_i_i | 0) < 0 ? $850 ^ 79764919 : $850; //@line 27328
     $853 = $_2_2_i_i51_i_i << 1; //@line 27330
     $_2_3_i_i52_i_i = ($_2_2_i_i51_i_i | 0) < 0 ? $853 ^ 79764919 : $853; //@line 27332
     $856 = $_2_3_i_i52_i_i << 1; //@line 27334
     $_2_4_i_i53_i_i = ($_2_3_i_i52_i_i | 0) < 0 ? $856 ^ 79764919 : $856; //@line 27336
     $859 = $_2_4_i_i53_i_i << 1; //@line 27338
     $_2_5_i_i54_i_i = ($_2_4_i_i53_i_i | 0) < 0 ? $859 ^ 79764919 : $859; //@line 27340
     $862 = $_2_5_i_i54_i_i << 1; //@line 27342
     $_2_6_i_i55_i_i = ($_2_5_i_i54_i_i | 0) < 0 ? $862 ^ 79764919 : $862; //@line 27344
     $865 = $_2_6_i_i55_i_i << 1; //@line 27346
     $_2_7_i_i56_i_i = ($_2_6_i_i55_i_i | 0) < 0 ? $865 ^ 79764919 : $865; //@line 27348
     $868 = $_013_i_i47_i_i - 1 | 0; //@line 27350
     if (($868 | 0) == 0) {
      break;
     } else {
      $_0912_i_i48_i_i = $_2_7_i_i56_i_i;
      $_013_i_i47_i_i = $868;
      $tmp_014_i_i46_i_i = $tmp_014_i_i46_i_i + 1 | 0;
     }
    }
    HEAP32[15666] = $_2_7_i_i56_i_i; //@line 27359
    if ((_psi_get_uint32_be($119, 0) | 0) != ($_011_lcssa_i_i97_i | 0)) {
     $_0 = 1; //@line 27364
     label = 13126; //@line 27365
     break L16395;
    }
   } else if (($164 | 0) == 21315) {
    break;
   } else {
    if (($165 | 0) == 0) {
     $_011_lcssa_i_i = $_2_7_i_i50; //@line 27374
    } else {
     $_01214_i_i = $165;
     $_01115_i_i = $_2_7_i_i50;
     while (1) {
      $1036 = $_01214_i_i >>> 0 < 256 ? $_01214_i_i : 256; //@line 27381
      if ((_psi_read($fp, $119, $1036) | 0) != 0) {
       $_0 = 1; //@line 27386
       label = 13123; //@line 27387
       break L16395;
      }
      $1040 = HEAP32[15666] | 0; //@line 27390
      if (($1036 | 0) == 0) {
       HEAP32[15666] = $1040; //@line 27394
       $_09_lcssa_i_i = $_01115_i_i; //@line 27396
      } else {
       $_0912_i_i133_i = $1040;
       $_013_i_i132_i = $1036;
       $tmp_014_i_i131_i = $119;
       while (1) {
        $1045 = HEAPU8[$tmp_014_i_i131_i] << 24 ^ $_0912_i_i133_i; //@line 27406
        $1047 = $1045 << 1; //@line 27408
        $_2_i_i134_i = ($1045 | 0) < 0 ? $1047 ^ 79764919 : $1047; //@line 27410
        $1050 = $_2_i_i134_i << 1; //@line 27412
        $_2_1_i_i135_i = ($_2_i_i134_i | 0) < 0 ? $1050 ^ 79764919 : $1050; //@line 27414
        $1053 = $_2_1_i_i135_i << 1; //@line 27416
        $_2_2_i_i136_i = ($_2_1_i_i135_i | 0) < 0 ? $1053 ^ 79764919 : $1053; //@line 27418
        $1056 = $_2_2_i_i136_i << 1; //@line 27420
        $_2_3_i_i137_i = ($_2_2_i_i136_i | 0) < 0 ? $1056 ^ 79764919 : $1056; //@line 27422
        $1059 = $_2_3_i_i137_i << 1; //@line 27424
        $_2_4_i_i138_i = ($_2_3_i_i137_i | 0) < 0 ? $1059 ^ 79764919 : $1059; //@line 27426
        $1062 = $_2_4_i_i138_i << 1; //@line 27428
        $_2_5_i_i139_i = ($_2_4_i_i138_i | 0) < 0 ? $1062 ^ 79764919 : $1062; //@line 27430
        $1065 = $_2_5_i_i139_i << 1; //@line 27432
        $_2_6_i_i140_i = ($_2_5_i_i139_i | 0) < 0 ? $1065 ^ 79764919 : $1065; //@line 27434
        $1068 = $_2_6_i_i140_i << 1; //@line 27436
        $_2_7_i_i141_i = ($_2_6_i_i140_i | 0) < 0 ? $1068 ^ 79764919 : $1068; //@line 27438
        $1071 = $_013_i_i132_i - 1 | 0; //@line 27440
        if (($1071 | 0) == 0) {
         break;
        } else {
         $_0912_i_i133_i = $_2_7_i_i141_i;
         $_013_i_i132_i = $1071;
         $tmp_014_i_i131_i = $tmp_014_i_i131_i + 1 | 0;
        }
       }
       HEAP32[15666] = $_2_7_i_i141_i; //@line 27449
       $_0912_i149_i = $_01115_i_i;
       $_013_i148_i = $1036;
       $tmp_014_i147_i = $119;
       while (1) {
        $1076 = HEAPU8[$tmp_014_i147_i] << 24 ^ $_0912_i149_i; //@line 27459
        $1078 = $1076 << 1; //@line 27461
        $_2_i150_i = ($1076 | 0) < 0 ? $1078 ^ 79764919 : $1078; //@line 27463
        $1081 = $_2_i150_i << 1; //@line 27465
        $_2_1_i151_i = ($_2_i150_i | 0) < 0 ? $1081 ^ 79764919 : $1081; //@line 27467
        $1084 = $_2_1_i151_i << 1; //@line 27469
        $_2_2_i152_i = ($_2_1_i151_i | 0) < 0 ? $1084 ^ 79764919 : $1084; //@line 27471
        $1087 = $_2_2_i152_i << 1; //@line 27473
        $_2_3_i153_i = ($_2_2_i152_i | 0) < 0 ? $1087 ^ 79764919 : $1087; //@line 27475
        $1090 = $_2_3_i153_i << 1; //@line 27477
        $_2_4_i154_i = ($_2_3_i153_i | 0) < 0 ? $1090 ^ 79764919 : $1090; //@line 27479
        $1093 = $_2_4_i154_i << 1; //@line 27481
        $_2_5_i155_i = ($_2_4_i154_i | 0) < 0 ? $1093 ^ 79764919 : $1093; //@line 27483
        $1096 = $_2_5_i155_i << 1; //@line 27485
        $_2_6_i156_i = ($_2_5_i155_i | 0) < 0 ? $1096 ^ 79764919 : $1096; //@line 27487
        $1099 = $_2_6_i156_i << 1; //@line 27489
        $_2_7_i157_i = ($_2_6_i156_i | 0) < 0 ? $1099 ^ 79764919 : $1099; //@line 27491
        $1102 = $_013_i148_i - 1 | 0; //@line 27493
        if (($1102 | 0) == 0) {
         $_09_lcssa_i_i = $_2_7_i157_i; //@line 27497
         break;
        } else {
         $_0912_i149_i = $_2_7_i157_i;
         $_013_i148_i = $1102;
         $tmp_014_i147_i = $tmp_014_i147_i + 1 | 0;
        }
       }
      }
      if (($_01214_i_i | 0) == ($1036 | 0)) {
       $_011_lcssa_i_i = $_09_lcssa_i_i; //@line 27509
       break;
      } else {
       $_01214_i_i = $_01214_i_i - $1036 | 0;
       $_01115_i_i = $_09_lcssa_i_i;
      }
     }
    }
    if ((_psi_read($fp, $119, 4) | 0) != 0) {
     $_0 = 1; //@line 27521
     label = 13128; //@line 27522
     break L16395;
    }
    $_0912_i_i163_i = HEAP32[15666] | 0;
    $_013_i_i162_i = 4;
    $tmp_014_i_i161_i = $119;
    while (1) {
     $1113 = HEAPU8[$tmp_014_i_i161_i] << 24 ^ $_0912_i_i163_i; //@line 27534
     $1115 = $1113 << 1; //@line 27536
     $_2_i_i164_i = ($1113 | 0) < 0 ? $1115 ^ 79764919 : $1115; //@line 27538
     $1118 = $_2_i_i164_i << 1; //@line 27540
     $_2_1_i_i165_i = ($_2_i_i164_i | 0) < 0 ? $1118 ^ 79764919 : $1118; //@line 27542
     $1121 = $_2_1_i_i165_i << 1; //@line 27544
     $_2_2_i_i166_i = ($_2_1_i_i165_i | 0) < 0 ? $1121 ^ 79764919 : $1121; //@line 27546
     $1124 = $_2_2_i_i166_i << 1; //@line 27548
     $_2_3_i_i167_i = ($_2_2_i_i166_i | 0) < 0 ? $1124 ^ 79764919 : $1124; //@line 27550
     $1127 = $_2_3_i_i167_i << 1; //@line 27552
     $_2_4_i_i168_i = ($_2_3_i_i167_i | 0) < 0 ? $1127 ^ 79764919 : $1127; //@line 27554
     $1130 = $_2_4_i_i168_i << 1; //@line 27556
     $_2_5_i_i169_i = ($_2_4_i_i168_i | 0) < 0 ? $1130 ^ 79764919 : $1130; //@line 27558
     $1133 = $_2_5_i_i169_i << 1; //@line 27560
     $_2_6_i_i170_i = ($_2_5_i_i169_i | 0) < 0 ? $1133 ^ 79764919 : $1133; //@line 27562
     $1136 = $_2_6_i_i170_i << 1; //@line 27564
     $_2_7_i_i171_i = ($_2_6_i_i170_i | 0) < 0 ? $1136 ^ 79764919 : $1136; //@line 27566
     $1139 = $_013_i_i162_i - 1 | 0; //@line 27568
     if (($1139 | 0) == 0) {
      break;
     } else {
      $_0912_i_i163_i = $_2_7_i_i171_i;
      $_013_i_i162_i = $1139;
      $tmp_014_i_i161_i = $tmp_014_i_i161_i + 1 | 0;
     }
    }
    HEAP32[15666] = $_2_7_i_i171_i; //@line 27577
    if ((_psi_get_uint32_be($119, 0) | 0) != ($_011_lcssa_i_i | 0)) {
     $_0 = 1; //@line 27582
     label = 13129; //@line 27583
     break L16395;
    }
   }
   if ((_psi_read($fp, $118, 4) | 0) != 0) {
    $_0 = 1; //@line 27591
    label = 13122; //@line 27592
    break L16395;
   }
  }
  if ($165 >>> 0 < 12) {
   $_0 = 1; //@line 27599
   label = 13146; //@line 27600
   break;
  }
  if ((_psi_read($fp, $120, 12) | 0) != 0) {
   $_0 = 1; //@line 27607
   label = 13143; //@line 27608
   break;
  }
  $_0912_i_i_i37_i = HEAP32[15666] | 0;
  $_013_i_i_i36_i = 12;
  $tmp_014_i_i_i35_i = $120;
  while (1) {
   $316 = HEAPU8[$tmp_014_i_i_i35_i] << 24 ^ $_0912_i_i_i37_i; //@line 27620
   $318 = $316 << 1; //@line 27622
   $_2_i_i_i38_i = ($316 | 0) < 0 ? $318 ^ 79764919 : $318; //@line 27624
   $321 = $_2_i_i_i38_i << 1; //@line 27626
   $_2_1_i_i_i39_i = ($_2_i_i_i38_i | 0) < 0 ? $321 ^ 79764919 : $321; //@line 27628
   $324 = $_2_1_i_i_i39_i << 1; //@line 27630
   $_2_2_i_i_i40_i = ($_2_1_i_i_i39_i | 0) < 0 ? $324 ^ 79764919 : $324; //@line 27632
   $327 = $_2_2_i_i_i40_i << 1; //@line 27634
   $_2_3_i_i_i41_i = ($_2_2_i_i_i40_i | 0) < 0 ? $327 ^ 79764919 : $327; //@line 27636
   $330 = $_2_3_i_i_i41_i << 1; //@line 27638
   $_2_4_i_i_i42_i = ($_2_3_i_i_i41_i | 0) < 0 ? $330 ^ 79764919 : $330; //@line 27640
   $333 = $_2_4_i_i_i42_i << 1; //@line 27642
   $_2_5_i_i_i43_i = ($_2_4_i_i_i42_i | 0) < 0 ? $333 ^ 79764919 : $333; //@line 27644
   $336 = $_2_5_i_i_i43_i << 1; //@line 27646
   $_2_6_i_i_i44_i = ($_2_5_i_i_i43_i | 0) < 0 ? $336 ^ 79764919 : $336; //@line 27648
   $339 = $_2_6_i_i_i44_i << 1; //@line 27650
   $_2_7_i_i_i45_i = ($_2_6_i_i_i44_i | 0) < 0 ? $339 ^ 79764919 : $339; //@line 27652
   $342 = $_013_i_i_i36_i - 1 | 0; //@line 27654
   if (($342 | 0) == 0) {
    break;
   } else {
    $_0912_i_i_i37_i = $_2_7_i_i_i45_i;
    $_013_i_i_i36_i = $342;
    $tmp_014_i_i_i35_i = $tmp_014_i_i_i35_i + 1 | 0;
   }
  }
  HEAP32[15666] = $_2_7_i_i_i45_i; //@line 27663
  $346 = HEAPU8[$120] | 0; //@line 27665
  $348 = HEAPU8[$121] | 0; //@line 27667
  $350 = HEAPU8[$122] | 0; //@line 27669
  $351 = _psi_get_uint16_be($120, 6) | 0; //@line 27670
  $358 = _psi_sct_new(HEAPU8[$123] | 0, HEAPU8[$124] | 0, HEAPU8[$125] | 0, $351) | 0; //@line 27677
  if (($358 | 0) == 0) {
   $_0 = 1; //@line 27681
   label = 13145; //@line 27682
   break;
  }
  $362 = (_psi_get_uint32_be($120, 8) | 0) & 16777215; //@line 27686
  if (($346 & 1 | 0) != 0) {
   $366 = $358 + 12 | 0; //@line 27691
   HEAP32[$366 >> 2] = HEAP32[$366 >> 2] | 1; //@line 27694
  }
  if (($346 & 2 | 0) != 0) {
   $373 = $358 + 12 | 0; //@line 27701
   HEAP32[$373 >> 2] = HEAP32[$373 >> 2] | 2; //@line 27704
  }
  if (($346 & 4 | 0) != 0) {
   $380 = $358 + 12 | 0; //@line 27711
   HEAP32[$380 >> 2] = HEAP32[$380 >> 2] | 4; //@line 27714
  }
  if (($346 & 8 | 0) != 0) {
   $387 = $358 + 12 | 0; //@line 27721
   HEAP32[$387 >> 2] = HEAP32[$387 >> 2] | 8; //@line 27724
  }
  $391 = HEAPU8[$126] | 0; //@line 27728
  if (($391 | 0) == 1) {
   $_0_i38_i_i = $362 >>> 0 < 375e3 ? 1 : 32769; //@line 27733
  } else if (($391 | 0) == 2) {
   $_0_i38_i_i = $362 >>> 0 < 375e3 ? 2 : 32770; //@line 27738
  } else if (($391 | 0) == 3) {
   $_0_i38_i_i = 3; //@line 27740
  } else {
   $_0_i38_i_i = 0; //@line 27743
  }
  _psi_sct_set_encoding($358, $_0_i38_i_i); //@line 27746
  if (($346 & 64 | 0) == 0) {
   if ((_psi_img_add_sector($img, $358, $348, $350) | 0) == 0) {
    $_0912_i_i49_i = $_2_7_i_i50;
    $_013_i_i48_i = 12;
    $tmp_014_i_i47_i = $120;
   } else {
    label = 13030; //@line 27757
    break;
   }
  } else {
   if ($129) {
    label = 13027; //@line 27763
    break;
   }
   _psi_sct_add_alternate($_ph_i, $358); //@line 27766
   $_0912_i_i49_i = $_2_7_i_i50;
   $_013_i_i48_i = 12;
   $tmp_014_i_i47_i = $120;
  }
  while (1) {
   $411 = HEAPU8[$tmp_014_i_i47_i] << 24 ^ $_0912_i_i49_i; //@line 27777
   $413 = $411 << 1; //@line 27779
   $_2_i_i50_i = ($411 | 0) < 0 ? $413 ^ 79764919 : $413; //@line 27781
   $416 = $_2_i_i50_i << 1; //@line 27783
   $_2_1_i_i51_i = ($_2_i_i50_i | 0) < 0 ? $416 ^ 79764919 : $416; //@line 27785
   $419 = $_2_1_i_i51_i << 1; //@line 27787
   $_2_2_i_i52_i = ($_2_1_i_i51_i | 0) < 0 ? $419 ^ 79764919 : $419; //@line 27789
   $422 = $_2_2_i_i52_i << 1; //@line 27791
   $_2_3_i_i53_i = ($_2_2_i_i52_i | 0) < 0 ? $422 ^ 79764919 : $422; //@line 27793
   $425 = $_2_3_i_i53_i << 1; //@line 27795
   $_2_4_i_i54_i = ($_2_3_i_i53_i | 0) < 0 ? $425 ^ 79764919 : $425; //@line 27797
   $428 = $_2_4_i_i54_i << 1; //@line 27799
   $_2_5_i_i55_i = ($_2_4_i_i54_i | 0) < 0 ? $428 ^ 79764919 : $428; //@line 27801
   $431 = $_2_5_i_i55_i << 1; //@line 27803
   $_2_6_i_i56_i = ($_2_5_i_i55_i | 0) < 0 ? $431 ^ 79764919 : $431; //@line 27805
   $434 = $_2_6_i_i56_i << 1; //@line 27807
   $_2_7_i_i57_i = ($_2_6_i_i56_i | 0) < 0 ? $434 ^ 79764919 : $434; //@line 27809
   $437 = $_013_i_i48_i - 1 | 0; //@line 27811
   if (($437 | 0) == 0) {
    break;
   } else {
    $_0912_i_i49_i = $_2_7_i_i57_i;
    $_013_i_i48_i = $437;
    $tmp_014_i_i47_i = $tmp_014_i_i47_i + 1 | 0;
   }
  }
  $439 = $165 - 12 | 0; //@line 27820
  if (($346 & 128 | 0) == 0) {
   $503 = $358 + 10 | 0; //@line 27825
   if ($439 >>> 0 < (HEAPU16[$503 >> 1] | 0) >>> 0) {
    $_0 = 1; //@line 27831
    label = 13134; //@line 27832
    break;
   }
   $508 = $358 + 24 | 0; //@line 27835
   $509 = HEAP32[$508 >> 2] | 0; //@line 27836
   if ((_psi_read($fp, $509, $351) | 0) != 0) {
    $_0 = 1; //@line 27841
    label = 13135; //@line 27842
    break;
   }
   $513 = HEAP32[15666] | 0; //@line 27845
   if (($351 | 0) == 0) {
    HEAP32[15666] = $513; //@line 27849
    $_09_lcssa_i142_i_i = $_2_7_i_i57_i; //@line 27851
   } else {
    $_0912_i_i116_i_i = $513;
    $_013_i_i115_i_i = $351;
    $tmp_014_i_i114_i_i = $509;
    while (1) {
     $518 = HEAPU8[$tmp_014_i_i114_i_i] << 24 ^ $_0912_i_i116_i_i; //@line 27861
     $520 = $518 << 1; //@line 27863
     $_2_i_i117_i_i = ($518 | 0) < 0 ? $520 ^ 79764919 : $520; //@line 27865
     $523 = $_2_i_i117_i_i << 1; //@line 27867
     $_2_1_i_i118_i_i = ($_2_i_i117_i_i | 0) < 0 ? $523 ^ 79764919 : $523; //@line 27869
     $526 = $_2_1_i_i118_i_i << 1; //@line 27871
     $_2_2_i_i119_i_i = ($_2_1_i_i118_i_i | 0) < 0 ? $526 ^ 79764919 : $526; //@line 27873
     $529 = $_2_2_i_i119_i_i << 1; //@line 27875
     $_2_3_i_i120_i_i = ($_2_2_i_i119_i_i | 0) < 0 ? $529 ^ 79764919 : $529; //@line 27877
     $532 = $_2_3_i_i120_i_i << 1; //@line 27879
     $_2_4_i_i121_i_i = ($_2_3_i_i120_i_i | 0) < 0 ? $532 ^ 79764919 : $532; //@line 27881
     $535 = $_2_4_i_i121_i_i << 1; //@line 27883
     $_2_5_i_i122_i_i = ($_2_4_i_i121_i_i | 0) < 0 ? $535 ^ 79764919 : $535; //@line 27885
     $538 = $_2_5_i_i122_i_i << 1; //@line 27887
     $_2_6_i_i123_i_i = ($_2_5_i_i122_i_i | 0) < 0 ? $538 ^ 79764919 : $538; //@line 27889
     $541 = $_2_6_i_i123_i_i << 1; //@line 27891
     $_2_7_i_i124_i_i = ($_2_6_i_i123_i_i | 0) < 0 ? $541 ^ 79764919 : $541; //@line 27893
     $544 = $_013_i_i115_i_i - 1 | 0; //@line 27895
     if (($544 | 0) == 0) {
      break;
     } else {
      $_0912_i_i116_i_i = $_2_7_i_i124_i_i;
      $_013_i_i115_i_i = $544;
      $tmp_014_i_i114_i_i = $tmp_014_i_i114_i_i + 1 | 0;
     }
    }
    HEAP32[15666] = $_2_7_i_i124_i_i; //@line 27904
    $_0912_i132_i_i = $_2_7_i_i57_i;
    $_013_i131_i_i = $351;
    $tmp_014_i130_i_i = HEAP32[$508 >> 2] | 0;
    while (1) {
     $550 = HEAPU8[$tmp_014_i130_i_i] << 24 ^ $_0912_i132_i_i; //@line 27915
     $552 = $550 << 1; //@line 27917
     $_2_i133_i_i = ($550 | 0) < 0 ? $552 ^ 79764919 : $552; //@line 27919
     $555 = $_2_i133_i_i << 1; //@line 27921
     $_2_1_i134_i_i = ($_2_i133_i_i | 0) < 0 ? $555 ^ 79764919 : $555; //@line 27923
     $558 = $_2_1_i134_i_i << 1; //@line 27925
     $_2_2_i135_i_i = ($_2_1_i134_i_i | 0) < 0 ? $558 ^ 79764919 : $558; //@line 27927
     $561 = $_2_2_i135_i_i << 1; //@line 27929
     $_2_3_i136_i_i = ($_2_2_i135_i_i | 0) < 0 ? $561 ^ 79764919 : $561; //@line 27931
     $564 = $_2_3_i136_i_i << 1; //@line 27933
     $_2_4_i137_i_i = ($_2_3_i136_i_i | 0) < 0 ? $564 ^ 79764919 : $564; //@line 27935
     $567 = $_2_4_i137_i_i << 1; //@line 27937
     $_2_5_i138_i_i = ($_2_4_i137_i_i | 0) < 0 ? $567 ^ 79764919 : $567; //@line 27939
     $570 = $_2_5_i138_i_i << 1; //@line 27941
     $_2_6_i139_i_i = ($_2_5_i138_i_i | 0) < 0 ? $570 ^ 79764919 : $570; //@line 27943
     $573 = $_2_6_i139_i_i << 1; //@line 27945
     $_2_7_i140_i_i = ($_2_6_i139_i_i | 0) < 0 ? $573 ^ 79764919 : $573; //@line 27947
     $576 = $_013_i131_i_i - 1 | 0; //@line 27949
     if (($576 | 0) == 0) {
      $_09_lcssa_i142_i_i = $_2_7_i140_i_i; //@line 27953
      break;
     } else {
      $_0912_i132_i_i = $_2_7_i140_i_i;
      $_013_i131_i_i = $576;
      $tmp_014_i130_i_i = $tmp_014_i130_i_i + 1 | 0;
     }
    }
   }
   $_035_i_i = $439 - (HEAPU16[$503 >> 1] | 0) | 0;
   $_036_i_i = $_09_lcssa_i142_i_i;
  } else {
   if (($439 | 0) == 0) {
    $_0 = 1; //@line 27969
    label = 13115; //@line 27970
    break;
   }
   if ((_psi_read($fp, $120, 1) | 0) != 0) {
    $_0 = 1; //@line 27977
    label = 13132; //@line 27978
    break;
   }
   $449 = HEAPU8[$120] | 0; //@line 27983
   $450 = $449 << 24; //@line 27984
   $451 = $450 ^ HEAP32[15666]; //@line 27985
   $453 = $451 << 1; //@line 27987
   $_2_i_i59_i_i = ($451 | 0) < 0 ? $453 ^ 79764919 : $453; //@line 27989
   $456 = $_2_i_i59_i_i << 1; //@line 27991
   $_2_1_i_i60_i_i = ($_2_i_i59_i_i | 0) < 0 ? $456 ^ 79764919 : $456; //@line 27993
   $459 = $_2_1_i_i60_i_i << 1; //@line 27995
   $_2_2_i_i61_i_i = ($_2_1_i_i60_i_i | 0) < 0 ? $459 ^ 79764919 : $459; //@line 27997
   $462 = $_2_2_i_i61_i_i << 1; //@line 27999
   $_2_3_i_i62_i_i = ($_2_2_i_i61_i_i | 0) < 0 ? $462 ^ 79764919 : $462; //@line 28001
   $465 = $_2_3_i_i62_i_i << 1; //@line 28003
   $_2_4_i_i63_i_i = ($_2_3_i_i62_i_i | 0) < 0 ? $465 ^ 79764919 : $465; //@line 28005
   $468 = $_2_4_i_i63_i_i << 1; //@line 28007
   $_2_5_i_i64_i_i = ($_2_4_i_i63_i_i | 0) < 0 ? $468 ^ 79764919 : $468; //@line 28009
   $471 = $_2_5_i_i64_i_i << 1; //@line 28011
   $_2_6_i_i65_i_i = ($_2_5_i_i64_i_i | 0) < 0 ? $471 ^ 79764919 : $471; //@line 28013
   $474 = $_2_6_i_i65_i_i << 1; //@line 28015
   HEAP32[15666] = ($_2_6_i_i65_i_i | 0) < 0 ? $474 ^ 79764919 : $474; //@line 28018
   $476 = $450 ^ $_2_7_i_i57_i; //@line 28019
   $478 = $476 << 1; //@line 28021
   $_2_i74_i_i = ($476 | 0) < 0 ? $478 ^ 79764919 : $478; //@line 28023
   $481 = $_2_i74_i_i << 1; //@line 28025
   $_2_1_i75_i_i = ($_2_i74_i_i | 0) < 0 ? $481 ^ 79764919 : $481; //@line 28027
   $484 = $_2_1_i75_i_i << 1; //@line 28029
   $_2_2_i76_i_i = ($_2_1_i75_i_i | 0) < 0 ? $484 ^ 79764919 : $484; //@line 28031
   $487 = $_2_2_i76_i_i << 1; //@line 28033
   $_2_3_i77_i_i = ($_2_2_i76_i_i | 0) < 0 ? $487 ^ 79764919 : $487; //@line 28035
   $490 = $_2_3_i77_i_i << 1; //@line 28037
   $_2_4_i78_i_i = ($_2_3_i77_i_i | 0) < 0 ? $490 ^ 79764919 : $490; //@line 28039
   $493 = $_2_4_i78_i_i << 1; //@line 28041
   $_2_5_i79_i_i = ($_2_4_i78_i_i | 0) < 0 ? $493 ^ 79764919 : $493; //@line 28043
   $496 = $_2_5_i79_i_i << 1; //@line 28045
   $_2_6_i80_i_i = ($_2_5_i79_i_i | 0) < 0 ? $496 ^ 79764919 : $496; //@line 28047
   $499 = $_2_6_i80_i_i << 1; //@line 28049
   _psi_sct_fill($358, $449); //@line 28052
   $_035_i_i = $165 - 13 | 0;
   $_036_i_i = ($_2_6_i80_i_i | 0) < 0 ? $499 ^ 79764919 : $499;
  }
  if (($_035_i_i | 0) == 0) {
   $_011_lcssa_i_i64_i = $_036_i_i; //@line 28062
  } else {
   $_01214_i_i61_i = $_035_i_i;
   $_01115_i_i60_i = $_036_i_i;
   while (1) {
    $584 = $_01214_i_i61_i >>> 0 < 256 ? $_01214_i_i61_i : 256; //@line 28069
    if ((_psi_read($fp, $119, $584) | 0) != 0) {
     $_0 = 1; //@line 28074
     label = 13124; //@line 28075
     break L16395;
    }
    $588 = HEAP32[15666] | 0; //@line 28078
    if (($584 | 0) == 0) {
     HEAP32[15666] = $588; //@line 28082
     $_09_lcssa_i_i63_i = $_01115_i_i60_i; //@line 28084
    } else {
     $_0912_i_i101_i_i = $588;
     $_013_i_i100_i_i = $584;
     $tmp_014_i_i99_i_i = $119;
     while (1) {
      $593 = HEAPU8[$tmp_014_i_i99_i_i] << 24 ^ $_0912_i_i101_i_i; //@line 28094
      $595 = $593 << 1; //@line 28096
      $_2_i_i102_i_i = ($593 | 0) < 0 ? $595 ^ 79764919 : $595; //@line 28098
      $598 = $_2_i_i102_i_i << 1; //@line 28100
      $_2_1_i_i103_i_i = ($_2_i_i102_i_i | 0) < 0 ? $598 ^ 79764919 : $598; //@line 28102
      $601 = $_2_1_i_i103_i_i << 1; //@line 28104
      $_2_2_i_i104_i_i = ($_2_1_i_i103_i_i | 0) < 0 ? $601 ^ 79764919 : $601; //@line 28106
      $604 = $_2_2_i_i104_i_i << 1; //@line 28108
      $_2_3_i_i105_i_i = ($_2_2_i_i104_i_i | 0) < 0 ? $604 ^ 79764919 : $604; //@line 28110
      $607 = $_2_3_i_i105_i_i << 1; //@line 28112
      $_2_4_i_i106_i_i = ($_2_3_i_i105_i_i | 0) < 0 ? $607 ^ 79764919 : $607; //@line 28114
      $610 = $_2_4_i_i106_i_i << 1; //@line 28116
      $_2_5_i_i107_i_i = ($_2_4_i_i106_i_i | 0) < 0 ? $610 ^ 79764919 : $610; //@line 28118
      $613 = $_2_5_i_i107_i_i << 1; //@line 28120
      $_2_6_i_i108_i_i = ($_2_5_i_i107_i_i | 0) < 0 ? $613 ^ 79764919 : $613; //@line 28122
      $616 = $_2_6_i_i108_i_i << 1; //@line 28124
      $_2_7_i_i109_i_i = ($_2_6_i_i108_i_i | 0) < 0 ? $616 ^ 79764919 : $616; //@line 28126
      $619 = $_013_i_i100_i_i - 1 | 0; //@line 28128
      if (($619 | 0) == 0) {
       break;
      } else {
       $_0912_i_i101_i_i = $_2_7_i_i109_i_i;
       $_013_i_i100_i_i = $619;
       $tmp_014_i_i99_i_i = $tmp_014_i_i99_i_i + 1 | 0;
      }
     }
     HEAP32[15666] = $_2_7_i_i109_i_i; //@line 28137
     $_0912_i87_i_i = $_01115_i_i60_i;
     $_013_i86_i_i = $584;
     $tmp_014_i85_i_i = $119;
     while (1) {
      $624 = HEAPU8[$tmp_014_i85_i_i] << 24 ^ $_0912_i87_i_i; //@line 28147
      $626 = $624 << 1; //@line 28149
      $_2_i88_i_i = ($624 | 0) < 0 ? $626 ^ 79764919 : $626; //@line 28151
      $629 = $_2_i88_i_i << 1; //@line 28153
      $_2_1_i89_i_i = ($_2_i88_i_i | 0) < 0 ? $629 ^ 79764919 : $629; //@line 28155
      $632 = $_2_1_i89_i_i << 1; //@line 28157
      $_2_2_i90_i_i = ($_2_1_i89_i_i | 0) < 0 ? $632 ^ 79764919 : $632; //@line 28159
      $635 = $_2_2_i90_i_i << 1; //@line 28161
      $_2_3_i91_i_i = ($_2_2_i90_i_i | 0) < 0 ? $635 ^ 79764919 : $635; //@line 28163
      $638 = $_2_3_i91_i_i << 1; //@line 28165
      $_2_4_i92_i_i = ($_2_3_i91_i_i | 0) < 0 ? $638 ^ 79764919 : $638; //@line 28167
      $641 = $_2_4_i92_i_i << 1; //@line 28169
      $_2_5_i93_i_i = ($_2_4_i92_i_i | 0) < 0 ? $641 ^ 79764919 : $641; //@line 28171
      $644 = $_2_5_i93_i_i << 1; //@line 28173
      $_2_6_i94_i_i = ($_2_5_i93_i_i | 0) < 0 ? $644 ^ 79764919 : $644; //@line 28175
      $647 = $_2_6_i94_i_i << 1; //@line 28177
      $_2_7_i95_i_i = ($_2_6_i94_i_i | 0) < 0 ? $647 ^ 79764919 : $647; //@line 28179
      $650 = $_013_i86_i_i - 1 | 0; //@line 28181
      if (($650 | 0) == 0) {
       $_09_lcssa_i_i63_i = $_2_7_i95_i_i; //@line 28185
       break;
      } else {
       $_0912_i87_i_i = $_2_7_i95_i_i;
       $_013_i86_i_i = $650;
       $tmp_014_i85_i_i = $tmp_014_i85_i_i + 1 | 0;
      }
     }
    }
    if (($_01214_i_i61_i | 0) == ($584 | 0)) {
     $_011_lcssa_i_i64_i = $_09_lcssa_i_i63_i; //@line 28197
     break;
    } else {
     $_01214_i_i61_i = $_01214_i_i61_i - $584 | 0;
     $_01115_i_i60_i = $_09_lcssa_i_i63_i;
    }
   }
  }
  if ((_psi_read($fp, $119, 4) | 0) != 0) {
   $_0 = 1; //@line 28209
   label = 13117; //@line 28210
   break;
  }
  $_0912_i_i43_i_i = HEAP32[15666] | 0;
  $_013_i_i42_i_i = 4;
  $tmp_014_i_i41_i_i = $119;
  while (1) {
   $661 = HEAPU8[$tmp_014_i_i41_i_i] << 24 ^ $_0912_i_i43_i_i; //@line 28222
   $663 = $661 << 1; //@line 28224
   $_2_i_i44_i_i = ($661 | 0) < 0 ? $663 ^ 79764919 : $663; //@line 28226
   $666 = $_2_i_i44_i_i << 1; //@line 28228
   $_2_1_i_i45_i_i = ($_2_i_i44_i_i | 0) < 0 ? $666 ^ 79764919 : $666; //@line 28230
   $669 = $_2_1_i_i45_i_i << 1; //@line 28232
   $_2_2_i_i46_i_i = ($_2_1_i_i45_i_i | 0) < 0 ? $669 ^ 79764919 : $669; //@line 28234
   $672 = $_2_2_i_i46_i_i << 1; //@line 28236
   $_2_3_i_i47_i_i = ($_2_2_i_i46_i_i | 0) < 0 ? $672 ^ 79764919 : $672; //@line 28238
   $675 = $_2_3_i_i47_i_i << 1; //@line 28240
   $_2_4_i_i48_i_i = ($_2_3_i_i47_i_i | 0) < 0 ? $675 ^ 79764919 : $675; //@line 28242
   $678 = $_2_4_i_i48_i_i << 1; //@line 28244
   $_2_5_i_i49_i_i = ($_2_4_i_i48_i_i | 0) < 0 ? $678 ^ 79764919 : $678; //@line 28246
   $681 = $_2_5_i_i49_i_i << 1; //@line 28248
   $_2_6_i_i50_i_i = ($_2_5_i_i49_i_i | 0) < 0 ? $681 ^ 79764919 : $681; //@line 28250
   $684 = $_2_6_i_i50_i_i << 1; //@line 28252
   $_2_7_i_i51_i_i = ($_2_6_i_i50_i_i | 0) < 0 ? $684 ^ 79764919 : $684; //@line 28254
   $687 = $_013_i_i42_i_i - 1 | 0; //@line 28256
   if (($687 | 0) == 0) {
    break;
   } else {
    $_0912_i_i43_i_i = $_2_7_i_i51_i_i;
    $_013_i_i42_i_i = $687;
    $tmp_014_i_i41_i_i = $tmp_014_i_i41_i_i + 1 | 0;
   }
  }
  HEAP32[15666] = $_2_7_i_i51_i_i; //@line 28265
  if ((_psi_get_uint32_be($119, 0) | 0) == ($_011_lcssa_i_i64_i | 0)) {
   $_ph_i = $358; //@line 28270
  } else {
   $_0 = 1; //@line 28272
   label = 13137; //@line 28273
   break;
  }
 }
 if ((label | 0) == 13030) {
  _psi_sct_del($358); //@line 28278
  $_0 = 1; //@line 28280
  STACKTOP = sp; //@line 28282
  return $_0 | 0; //@line 28283
 } else if ((label | 0) == 12996) {
  L16549 : do {
   if (($165 | 0) == 0) {
    $_011_lcssa_i_i_i = $_2_7_i_i50; //@line 28290
   } else {
    $_01214_i_i_i = $165;
    $_01115_i_i_i = $_2_7_i_i50;
    while (1) {
     $200 = $_01214_i_i_i >>> 0 < 256 ? $_01214_i_i_i : 256; //@line 28297
     if ((_psi_read($fp, $119, $200) | 0) != 0) {
      $_0 = 1; //@line 28302
      break;
     }
     $204 = HEAP32[15666] | 0; //@line 28305
     if (($200 | 0) == 0) {
      HEAP32[15666] = $204; //@line 28309
      $_09_lcssa_i_i_i53 = $_01115_i_i_i; //@line 28311
     } else {
      $_0912_i_i_i_i = $204;
      $_013_i_i_i_i = $200;
      $tmp_014_i_i_i_i = $119;
      while (1) {
       $209 = HEAPU8[$tmp_014_i_i_i_i] << 24 ^ $_0912_i_i_i_i; //@line 28321
       $211 = $209 << 1; //@line 28323
       $_2_i_i_i_i = ($209 | 0) < 0 ? $211 ^ 79764919 : $211; //@line 28325
       $214 = $_2_i_i_i_i << 1; //@line 28327
       $_2_1_i_i_i_i = ($_2_i_i_i_i | 0) < 0 ? $214 ^ 79764919 : $214; //@line 28329
       $217 = $_2_1_i_i_i_i << 1; //@line 28331
       $_2_2_i_i_i_i = ($_2_1_i_i_i_i | 0) < 0 ? $217 ^ 79764919 : $217; //@line 28333
       $220 = $_2_2_i_i_i_i << 1; //@line 28335
       $_2_3_i_i_i_i = ($_2_2_i_i_i_i | 0) < 0 ? $220 ^ 79764919 : $220; //@line 28337
       $223 = $_2_3_i_i_i_i << 1; //@line 28339
       $_2_4_i_i_i_i = ($_2_3_i_i_i_i | 0) < 0 ? $223 ^ 79764919 : $223; //@line 28341
       $226 = $_2_4_i_i_i_i << 1; //@line 28343
       $_2_5_i_i_i_i = ($_2_4_i_i_i_i | 0) < 0 ? $226 ^ 79764919 : $226; //@line 28345
       $229 = $_2_5_i_i_i_i << 1; //@line 28347
       $_2_6_i_i_i_i = ($_2_5_i_i_i_i | 0) < 0 ? $229 ^ 79764919 : $229; //@line 28349
       $232 = $_2_6_i_i_i_i << 1; //@line 28351
       $_2_7_i_i_i_i = ($_2_6_i_i_i_i | 0) < 0 ? $232 ^ 79764919 : $232; //@line 28353
       $235 = $_013_i_i_i_i - 1 | 0; //@line 28355
       if (($235 | 0) == 0) {
        break;
       } else {
        $_0912_i_i_i_i = $_2_7_i_i_i_i;
        $_013_i_i_i_i = $235;
        $tmp_014_i_i_i_i = $tmp_014_i_i_i_i + 1 | 0;
       }
      }
      HEAP32[15666] = $_2_7_i_i_i_i; //@line 28364
      $_0912_i_i23_i = $_01115_i_i_i;
      $_013_i_i22_i = $200;
      $tmp_014_i_i21_i = $119;
      while (1) {
       $240 = HEAPU8[$tmp_014_i_i21_i] << 24 ^ $_0912_i_i23_i; //@line 28374
       $242 = $240 << 1; //@line 28376
       $_2_i_i24_i = ($240 | 0) < 0 ? $242 ^ 79764919 : $242; //@line 28378
       $245 = $_2_i_i24_i << 1; //@line 28380
       $_2_1_i_i25_i = ($_2_i_i24_i | 0) < 0 ? $245 ^ 79764919 : $245; //@line 28382
       $248 = $_2_1_i_i25_i << 1; //@line 28384
       $_2_2_i_i26_i = ($_2_1_i_i25_i | 0) < 0 ? $248 ^ 79764919 : $248; //@line 28386
       $251 = $_2_2_i_i26_i << 1; //@line 28388
       $_2_3_i_i27_i = ($_2_2_i_i26_i | 0) < 0 ? $251 ^ 79764919 : $251; //@line 28390
       $254 = $_2_3_i_i27_i << 1; //@line 28392
       $_2_4_i_i28_i = ($_2_3_i_i27_i | 0) < 0 ? $254 ^ 79764919 : $254; //@line 28394
       $257 = $_2_4_i_i28_i << 1; //@line 28396
       $_2_5_i_i29_i = ($_2_4_i_i28_i | 0) < 0 ? $257 ^ 79764919 : $257; //@line 28398
       $260 = $_2_5_i_i29_i << 1; //@line 28400
       $_2_6_i_i30_i = ($_2_5_i_i29_i | 0) < 0 ? $260 ^ 79764919 : $260; //@line 28402
       $263 = $_2_6_i_i30_i << 1; //@line 28404
       $_2_7_i_i31_i = ($_2_6_i_i30_i | 0) < 0 ? $263 ^ 79764919 : $263; //@line 28406
       $266 = $_013_i_i22_i - 1 | 0; //@line 28408
       if (($266 | 0) == 0) {
        $_09_lcssa_i_i_i53 = $_2_7_i_i31_i; //@line 28412
        break;
       } else {
        $_0912_i_i23_i = $_2_7_i_i31_i;
        $_013_i_i22_i = $266;
        $tmp_014_i_i21_i = $tmp_014_i_i21_i + 1 | 0;
       }
      }
     }
     if (($_01214_i_i_i | 0) == ($200 | 0)) {
      $_011_lcssa_i_i_i = $_09_lcssa_i_i_i53; //@line 28424
      break L16549;
     } else {
      $_01214_i_i_i = $_01214_i_i_i - $200 | 0;
      $_01115_i_i_i = $_09_lcssa_i_i_i53;
     }
    }
    STACKTOP = sp; //@line 28431
    return $_0 | 0; //@line 28432
   }
  } while (0);
  if ((_psi_read($fp, $119, 4) | 0) != 0) {
   $_0 = 1; //@line 28440
   STACKTOP = sp; //@line 28442
   return $_0 | 0; //@line 28443
  }
  $_0912_i_i10_i_i = HEAP32[15666] | 0;
  $_013_i_i9_i_i = 4;
  $tmp_014_i_i8_i_i = $119;
  while (1) {
   $277 = HEAPU8[$tmp_014_i_i8_i_i] << 24 ^ $_0912_i_i10_i_i; //@line 28454
   $279 = $277 << 1; //@line 28456
   $_2_i_i11_i_i = ($277 | 0) < 0 ? $279 ^ 79764919 : $279; //@line 28458
   $282 = $_2_i_i11_i_i << 1; //@line 28460
   $_2_1_i_i12_i_i = ($_2_i_i11_i_i | 0) < 0 ? $282 ^ 79764919 : $282; //@line 28462
   $285 = $_2_1_i_i12_i_i << 1; //@line 28464
   $_2_2_i_i13_i_i = ($_2_1_i_i12_i_i | 0) < 0 ? $285 ^ 79764919 : $285; //@line 28466
   $288 = $_2_2_i_i13_i_i << 1; //@line 28468
   $_2_3_i_i14_i_i = ($_2_2_i_i13_i_i | 0) < 0 ? $288 ^ 79764919 : $288; //@line 28470
   $291 = $_2_3_i_i14_i_i << 1; //@line 28472
   $_2_4_i_i15_i_i = ($_2_3_i_i14_i_i | 0) < 0 ? $291 ^ 79764919 : $291; //@line 28474
   $294 = $_2_4_i_i15_i_i << 1; //@line 28476
   $_2_5_i_i16_i_i = ($_2_4_i_i15_i_i | 0) < 0 ? $294 ^ 79764919 : $294; //@line 28478
   $297 = $_2_5_i_i16_i_i << 1; //@line 28480
   $_2_6_i_i17_i_i = ($_2_5_i_i16_i_i | 0) < 0 ? $297 ^ 79764919 : $297; //@line 28482
   $300 = $_2_6_i_i17_i_i << 1; //@line 28484
   $_2_7_i_i18_i_i = ($_2_6_i_i17_i_i | 0) < 0 ? $300 ^ 79764919 : $300; //@line 28486
   $303 = $_013_i_i9_i_i - 1 | 0; //@line 28488
   if (($303 | 0) == 0) {
    break;
   } else {
    $_0912_i_i10_i_i = $_2_7_i_i18_i_i;
    $_013_i_i9_i_i = $303;
    $tmp_014_i_i8_i_i = $tmp_014_i_i8_i_i + 1 | 0;
   }
  }
  HEAP32[15666] = $_2_7_i_i18_i_i; //@line 28497
  if ((_psi_get_uint32_be($119, 0) | 0) != ($_011_lcssa_i_i_i | 0)) {
   $_0 = 1; //@line 28502
   STACKTOP = sp; //@line 28504
   return $_0 | 0; //@line 28505
  }
  _psi_img_clean_comment($img); //@line 28507
  $1143 = HEAP32[15666] | 0; //@line 28508
  if ((_psi_read($fp, $3, 4) | 0) != 0) {
   $_0 = 1; //@line 28513
   STACKTOP = sp; //@line 28515
   return $_0 | 0; //@line 28516
  }
  $_0912_i_i = HEAP32[15666] | 0;
  $_013_i_i = 4;
  $tmp_014_i_i = $3;
  while (1) {
   $1151 = HEAPU8[$tmp_014_i_i] << 24 ^ $_0912_i_i; //@line 28527
   $1153 = $1151 << 1; //@line 28529
   $_2_i_i = ($1151 | 0) < 0 ? $1153 ^ 79764919 : $1153; //@line 28531
   $1156 = $_2_i_i << 1; //@line 28533
   $_2_1_i_i = ($_2_i_i | 0) < 0 ? $1156 ^ 79764919 : $1156; //@line 28535
   $1159 = $_2_1_i_i << 1; //@line 28537
   $_2_2_i_i = ($_2_1_i_i | 0) < 0 ? $1159 ^ 79764919 : $1159; //@line 28539
   $1162 = $_2_2_i_i << 1; //@line 28541
   $_2_3_i_i = ($_2_2_i_i | 0) < 0 ? $1162 ^ 79764919 : $1162; //@line 28543
   $1165 = $_2_3_i_i << 1; //@line 28545
   $_2_4_i_i = ($_2_3_i_i | 0) < 0 ? $1165 ^ 79764919 : $1165; //@line 28547
   $1168 = $_2_4_i_i << 1; //@line 28549
   $_2_5_i_i = ($_2_4_i_i | 0) < 0 ? $1168 ^ 79764919 : $1168; //@line 28551
   $1171 = $_2_5_i_i << 1; //@line 28553
   $_2_6_i_i = ($_2_5_i_i | 0) < 0 ? $1171 ^ 79764919 : $1171; //@line 28555
   $1174 = $_2_6_i_i << 1; //@line 28557
   $_2_7_i_i = ($_2_6_i_i | 0) < 0 ? $1174 ^ 79764919 : $1174; //@line 28559
   $1177 = $_013_i_i - 1 | 0; //@line 28561
   if (($1177 | 0) == 0) {
    break;
   } else {
    $_0912_i_i = $_2_7_i_i;
    $_013_i_i = $1177;
    $tmp_014_i_i = $tmp_014_i_i + 1 | 0;
   }
  }
  HEAP32[15666] = $_2_7_i_i; //@line 28570
  $_0 = (_psi_get_uint32_be($3, 0) | 0) != ($1143 | 0) | 0; //@line 28575
  STACKTOP = sp; //@line 28577
  return $_0 | 0; //@line 28578
 } else if ((label | 0) == 13085) {
  _free($911); //@line 28581
  $_0 = 1; //@line 28583
  STACKTOP = sp; //@line 28585
  return $_0 | 0; //@line 28586
 } else if ((label | 0) == 13027) {
  _psi_sct_del($358); //@line 28589
  $_0 = 1; //@line 28591
  STACKTOP = sp; //@line 28593
  return $_0 | 0; //@line 28594
 } else if ((label | 0) == 13115) {
  STACKTOP = sp; //@line 28598
  return $_0 | 0; //@line 28599
 } else if ((label | 0) == 13116) {
  STACKTOP = sp; //@line 28603
  return $_0 | 0; //@line 28604
 } else if ((label | 0) == 13117) {
  STACKTOP = sp; //@line 28608
  return $_0 | 0; //@line 28609
 } else if ((label | 0) == 13120) {
  STACKTOP = sp; //@line 28613
  return $_0 | 0; //@line 28614
 } else if ((label | 0) == 13121) {
  STACKTOP = sp; //@line 28618
  return $_0 | 0; //@line 28619
 } else if ((label | 0) == 13122) {
  STACKTOP = sp; //@line 28623
  return $_0 | 0; //@line 28624
 } else if ((label | 0) == 13123) {
  STACKTOP = sp; //@line 28628
  return $_0 | 0; //@line 28629
 } else if ((label | 0) == 13124) {
  STACKTOP = sp; //@line 28633
  return $_0 | 0; //@line 28634
 } else if ((label | 0) == 13125) {
  STACKTOP = sp; //@line 28638
  return $_0 | 0; //@line 28639
 } else if ((label | 0) == 13126) {
  STACKTOP = sp; //@line 28643
  return $_0 | 0; //@line 28644
 } else if ((label | 0) == 13128) {
  STACKTOP = sp; //@line 28648
  return $_0 | 0; //@line 28649
 } else if ((label | 0) == 13129) {
  STACKTOP = sp; //@line 28653
  return $_0 | 0; //@line 28654
 } else if ((label | 0) == 13132) {
  STACKTOP = sp; //@line 28658
  return $_0 | 0; //@line 28659
 } else if ((label | 0) == 13134) {
  STACKTOP = sp; //@line 28663
  return $_0 | 0; //@line 28664
 } else if ((label | 0) == 13135) {
  STACKTOP = sp; //@line 28668
  return $_0 | 0; //@line 28669
 } else if ((label | 0) == 13136) {
  STACKTOP = sp; //@line 28673
  return $_0 | 0; //@line 28674
 } else if ((label | 0) == 13137) {
  STACKTOP = sp; //@line 28678
  return $_0 | 0; //@line 28679
 } else if ((label | 0) == 13138) {
  STACKTOP = sp; //@line 28683
  return $_0 | 0; //@line 28684
 } else if ((label | 0) == 13140) {
  STACKTOP = sp; //@line 28688
  return $_0 | 0; //@line 28689
 } else if ((label | 0) == 13141) {
  STACKTOP = sp; //@line 28693
  return $_0 | 0; //@line 28694
 } else if ((label | 0) == 13143) {
  STACKTOP = sp; //@line 28698
  return $_0 | 0; //@line 28699
 } else if ((label | 0) == 13145) {
  STACKTOP = sp; //@line 28703
  return $_0 | 0; //@line 28704
 } else if ((label | 0) == 13146) {
  STACKTOP = sp; //@line 28708
  return $_0 | 0; //@line 28709
 }
 return 0;
}
function _pfdc2_save_fp($fp, $img) {
 $fp = $fp | 0;
 $img = $img | 0;
 var $buf_i = 0, $1 = 0, $tmp_014_i_i = 0, $_013_i_i = 0, $_0912_i_i = 0, $9 = 0, $11 = 0, $_2_i_i = 0, $14 = 0, $_2_1_i_i = 0, $17 = 0, $_2_2_i_i = 0, $20 = 0, $_2_3_i_i = 0, $23 = 0, $_2_4_i_i = 0, $26 = 0, $_2_5_i_i = 0, $29 = 0, $_2_6_i_i = 0, $32 = 0, $_2_7_i_i = 0, $35 = 0, $38 = 0, $39 = 0, $45 = 0, $tmp_014_i_i20 = 0, $_013_i_i21 = 0, $_0912_i_i22 = 0, $49 = 0, $51 = 0, $_2_i_i23 = 0, $54 = 0, $_2_1_i_i24 = 0, $57 = 0, $_2_2_i_i25 = 0, $60 = 0, $_2_3_i_i26 = 0, $63 = 0, $_2_4_i_i27 = 0, $66 = 0, $_2_5_i_i28 = 0, $69 = 0, $_2_6_i_i29 = 0, $72 = 0, $_2_7_i_i30 = 0, $75 = 0, $77 = 0, $78 = 0, $tmp_014_i16_i = 0, $_013_i17_i = 0, $_0912_i18_i = 0, $84 = 0, $86 = 0, $_2_i19_i = 0, $89 = 0, $_2_1_i20_i = 0, $92 = 0, $_2_2_i21_i = 0, $95 = 0, $_2_3_i22_i = 0, $98 = 0, $_2_4_i23_i = 0, $101 = 0, $_2_5_i24_i = 0, $104 = 0, $_2_6_i25_i = 0, $107 = 0, $_2_7_i26_i = 0, $110 = 0, $_0912_i46_ph_i = 0, $_2_i47_i = 0, $117 = 0, $_2_1_i48_i = 0, $120 = 0, $_2_2_i49_i = 0, $123 = 0, $_2_3_i50_i = 0, $126 = 0, $_2_4_i51_i = 0, $129 = 0, $_2_5_i52_i = 0, $132 = 0, $_2_6_i53_i = 0, $135 = 0, $_2_7_i54_i = 0, $tmp_014_i_i73_i = 0, $_013_i_i74_i = 0, $_0912_i_i75_i = 0, $144 = 0, $146 = 0, $_2_i_i76_i = 0, $149 = 0, $_2_1_i_i77_i = 0, $152 = 0, $_2_2_i_i78_i = 0, $155 = 0, $_2_3_i_i79_i = 0, $158 = 0, $_2_4_i_i80_i = 0, $161 = 0, $_2_5_i_i81_i = 0, $164 = 0, $_2_6_i_i82_i = 0, $167 = 0, $_2_7_i_i83_i = 0, $170 = 0, $_0_i87_i = 0, $172 = 0, $173 = 0, $177 = 0, $tmp_014_i_i58_i = 0, $_013_i_i59_i = 0, $_0912_i_i60_i = 0, $182 = 0, $184 = 0, $_2_i_i61_i = 0, $187 = 0, $_2_1_i_i62_i = 0, $190 = 0, $_2_2_i_i63_i = 0, $193 = 0, $_2_3_i_i64_i = 0, $196 = 0, $_2_4_i_i65_i = 0, $199 = 0, $_2_5_i_i66_i = 0, $202 = 0, $_2_6_i_i67_i = 0, $205 = 0, $_2_7_i_i68_i = 0, $208 = 0, $_09_lcssa_i_i_i = 0, $_0_i71_i = 0, $217 = 0, $219 = 0, $_2_i_i32_i = 0, $222 = 0, $_2_1_i_i33_i = 0, $225 = 0, $_2_2_i_i34_i = 0, $228 = 0, $_2_3_i_i35_i = 0, $231 = 0, $_2_4_i_i36_i = 0, $234 = 0, $_2_5_i_i37_i = 0, $237 = 0, $_2_6_i_i38_i = 0, $240 = 0, $_0_i42_i = 0, $242 = 0, $tmp_014_i_i_i = 0, $_013_i_i_i = 0, $_0912_i_i_i = 0, $250 = 0, $252 = 0, $_2_i_i_i = 0, $255 = 0, $_2_1_i_i_i = 0, $258 = 0, $_2_2_i_i_i = 0, $261 = 0, $_2_3_i_i_i = 0, $264 = 0, $_2_4_i_i_i = 0, $267 = 0, $_2_5_i_i_i = 0, $270 = 0, $_2_6_i_i_i = 0, $273 = 0, $_2_7_i_i_i = 0, $276 = 0, $_0_i_i = 0, $280 = 0, $281 = 0, $283 = 0, $284 = 0, $c_060 = 0, $287 = 0, $288 = 0, $289 = 0, $291 = 0, $292 = 0, $h_055 = 0, $295 = 0, $296 = 0, $299 = 0, $s_054 = 0, $303 = 0, $sct_pn_i = 0, $_012_i = 0, $316 = 0, $317 = 0, $320 = 0, $321 = 0, $tmp_014_i_i35 = 0, $_013_i_i36 = 0, $_0912_i_i37 = 0, $335 = 0, $337 = 0, $_2_i_i38 = 0, $340 = 0, $_2_1_i_i39 = 0, $343 = 0, $_2_2_i_i40 = 0, $346 = 0, $_2_3_i_i41 = 0, $349 = 0, $_2_4_i_i42 = 0, $352 = 0, $_2_5_i_i43 = 0, $355 = 0, $_2_6_i_i44 = 0, $358 = 0, $_2_7_i_i45 = 0, $361 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 28776
 STACKTOP = STACKTOP + 32 | 0; //@line 28776
 $buf_i = sp | 0; //@line 28777
 HEAP32[15666] = -1; //@line 28779
 $1 = sp + 16 | 0; //@line 28780
 _psi_set_uint32_be($1, 0, 1346782275); //@line 28781
 _psi_set_uint16_be($1, 4, 2); //@line 28782
 _psi_set_uint16_be($1, 6, 0); //@line 28783
 _psi_set_uint32_be($1, 8, 0); //@line 28784
 _psi_set_uint32_be($1, 12, 16); //@line 28785
 if ((_psi_write($fp, $1, 16) | 0) != 0) {
  $_0 = 1; //@line 28790
  STACKTOP = sp; //@line 28792
  return $_0 | 0; //@line 28793
 }
 $_0912_i_i = HEAP32[15666] | 0;
 $_013_i_i = 16;
 $tmp_014_i_i = $1;
 while (1) {
  $9 = HEAPU8[$tmp_014_i_i] << 24 ^ $_0912_i_i; //@line 28804
  $11 = $9 << 1; //@line 28806
  $_2_i_i = ($9 | 0) < 0 ? $11 ^ 79764919 : $11; //@line 28808
  $14 = $_2_i_i << 1; //@line 28810
  $_2_1_i_i = ($_2_i_i | 0) < 0 ? $14 ^ 79764919 : $14; //@line 28812
  $17 = $_2_1_i_i << 1; //@line 28814
  $_2_2_i_i = ($_2_1_i_i | 0) < 0 ? $17 ^ 79764919 : $17; //@line 28816
  $20 = $_2_2_i_i << 1; //@line 28818
  $_2_3_i_i = ($_2_2_i_i | 0) < 0 ? $20 ^ 79764919 : $20; //@line 28820
  $23 = $_2_3_i_i << 1; //@line 28822
  $_2_4_i_i = ($_2_3_i_i | 0) < 0 ? $23 ^ 79764919 : $23; //@line 28824
  $26 = $_2_4_i_i << 1; //@line 28826
  $_2_5_i_i = ($_2_4_i_i | 0) < 0 ? $26 ^ 79764919 : $26; //@line 28828
  $29 = $_2_5_i_i << 1; //@line 28830
  $_2_6_i_i = ($_2_5_i_i | 0) < 0 ? $29 ^ 79764919 : $29; //@line 28832
  $32 = $_2_6_i_i << 1; //@line 28834
  $_2_7_i_i = ($_2_6_i_i | 0) < 0 ? $32 ^ 79764919 : $32; //@line 28836
  $35 = $_013_i_i - 1 | 0; //@line 28838
  if (($35 | 0) == 0) {
   break;
  } else {
   $_0912_i_i = $_2_7_i_i;
   $_013_i_i = $35;
   $tmp_014_i_i = $tmp_014_i_i + 1 | 0;
  }
 }
 HEAP32[15666] = $_2_7_i_i; //@line 28847
 $38 = $buf_i | 0; //@line 28848
 $39 = $img + 8 | 0; //@line 28849
 do {
  if ((HEAP32[$39 >> 2] | 0) != 0) {
   _psi_set_uint16_be($38, 0, 17229); //@line 28855
   _psi_set_uint16_be($38, 2, (HEAP32[$39 >> 2] | 0) + 2 | 0); //@line 28858
   $45 = $buf_i + 4 | 0; //@line 28859
   HEAP8[$45] = 10; //@line 28860
   $_0912_i_i22 = 0;
   $_013_i_i21 = 5;
   $tmp_014_i_i20 = $38;
   while (1) {
    $49 = HEAPU8[$tmp_014_i_i20] << 24 ^ $_0912_i_i22; //@line 28869
    $51 = $49 << 1; //@line 28871
    $_2_i_i23 = ($49 | 0) < 0 ? $51 ^ 79764919 : $51; //@line 28873
    $54 = $_2_i_i23 << 1; //@line 28875
    $_2_1_i_i24 = ($_2_i_i23 | 0) < 0 ? $54 ^ 79764919 : $54; //@line 28877
    $57 = $_2_1_i_i24 << 1; //@line 28879
    $_2_2_i_i25 = ($_2_1_i_i24 | 0) < 0 ? $57 ^ 79764919 : $57; //@line 28881
    $60 = $_2_2_i_i25 << 1; //@line 28883
    $_2_3_i_i26 = ($_2_2_i_i25 | 0) < 0 ? $60 ^ 79764919 : $60; //@line 28885
    $63 = $_2_3_i_i26 << 1; //@line 28887
    $_2_4_i_i27 = ($_2_3_i_i26 | 0) < 0 ? $63 ^ 79764919 : $63; //@line 28889
    $66 = $_2_4_i_i27 << 1; //@line 28891
    $_2_5_i_i28 = ($_2_4_i_i27 | 0) < 0 ? $66 ^ 79764919 : $66; //@line 28893
    $69 = $_2_5_i_i28 << 1; //@line 28895
    $_2_6_i_i29 = ($_2_5_i_i28 | 0) < 0 ? $69 ^ 79764919 : $69; //@line 28897
    $72 = $_2_6_i_i29 << 1; //@line 28899
    $_2_7_i_i30 = ($_2_6_i_i29 | 0) < 0 ? $72 ^ 79764919 : $72; //@line 28901
    $75 = $_013_i_i21 - 1 | 0; //@line 28903
    if (($75 | 0) == 0) {
     break;
    } else {
     $_0912_i_i22 = $_2_7_i_i30;
     $_013_i_i21 = $75;
     $tmp_014_i_i20 = $tmp_014_i_i20 + 1 | 0;
    }
   }
   $77 = $img + 12 | 0; //@line 28912
   $78 = HEAP32[$39 >> 2] | 0; //@line 28913
   if (($78 | 0) == 0) {
    $_0912_i46_ph_i = $_2_7_i_i30; //@line 28917
   } else {
    $_0912_i18_i = $_2_7_i_i30;
    $_013_i17_i = $78;
    $tmp_014_i16_i = HEAP32[$77 >> 2] | 0;
    while (1) {
     $84 = HEAPU8[$tmp_014_i16_i] << 24 ^ $_0912_i18_i; //@line 28929
     $86 = $84 << 1; //@line 28931
     $_2_i19_i = ($84 | 0) < 0 ? $86 ^ 79764919 : $86; //@line 28933
     $89 = $_2_i19_i << 1; //@line 28935
     $_2_1_i20_i = ($_2_i19_i | 0) < 0 ? $89 ^ 79764919 : $89; //@line 28937
     $92 = $_2_1_i20_i << 1; //@line 28939
     $_2_2_i21_i = ($_2_1_i20_i | 0) < 0 ? $92 ^ 79764919 : $92; //@line 28941
     $95 = $_2_2_i21_i << 1; //@line 28943
     $_2_3_i22_i = ($_2_2_i21_i | 0) < 0 ? $95 ^ 79764919 : $95; //@line 28945
     $98 = $_2_3_i22_i << 1; //@line 28947
     $_2_4_i23_i = ($_2_3_i22_i | 0) < 0 ? $98 ^ 79764919 : $98; //@line 28949
     $101 = $_2_4_i23_i << 1; //@line 28951
     $_2_5_i24_i = ($_2_4_i23_i | 0) < 0 ? $101 ^ 79764919 : $101; //@line 28953
     $104 = $_2_5_i24_i << 1; //@line 28955
     $_2_6_i25_i = ($_2_5_i24_i | 0) < 0 ? $104 ^ 79764919 : $104; //@line 28957
     $107 = $_2_6_i25_i << 1; //@line 28959
     $_2_7_i26_i = ($_2_6_i25_i | 0) < 0 ? $107 ^ 79764919 : $107; //@line 28961
     $110 = $_013_i17_i - 1 | 0; //@line 28963
     if (($110 | 0) == 0) {
      $_0912_i46_ph_i = $_2_7_i26_i; //@line 28967
      break;
     } else {
      $_0912_i18_i = $_2_7_i26_i;
      $_013_i17_i = $110;
      $tmp_014_i16_i = $tmp_014_i16_i + 1 | 0;
     }
    }
   }
   $_2_i47_i = ($_0912_i46_ph_i >> 31) + 335544320 & -54452809 ^ $_0912_i46_ph_i << 1; //@line 28979
   $117 = $_2_i47_i << 1; //@line 28981
   $_2_1_i48_i = ($_2_i47_i | 0) < 0 ? $117 ^ 79764919 : $117; //@line 28983
   $120 = $_2_1_i48_i << 1; //@line 28985
   $_2_2_i49_i = ($_2_1_i48_i | 0) < 0 ? $120 ^ 79764919 : $120; //@line 28987
   $123 = $_2_2_i49_i << 1; //@line 28989
   $_2_3_i50_i = ($_2_2_i49_i | 0) < 0 ? $123 ^ 79764919 : $123; //@line 28991
   $126 = $_2_3_i50_i << 1; //@line 28993
   $_2_4_i51_i = ($_2_3_i50_i | 0) < 0 ? $126 ^ 79764919 : $126; //@line 28995
   $129 = $_2_4_i51_i << 1; //@line 28997
   $_2_5_i52_i = ($_2_4_i51_i | 0) < 0 ? $129 ^ 79764919 : $129; //@line 28999
   $132 = $_2_5_i52_i << 1; //@line 29001
   $_2_6_i53_i = ($_2_5_i52_i | 0) < 0 ? $132 ^ 79764919 : $132; //@line 29003
   $135 = $_2_6_i53_i << 1; //@line 29005
   $_2_7_i54_i = ($_2_6_i53_i | 0) < 0 ? $135 ^ 79764919 : $135; //@line 29007
   if ((_psi_write($fp, $38, 5) | 0) == 0) {
    $_0912_i_i75_i = HEAP32[15666] | 0;
    $_013_i_i74_i = 5;
    $tmp_014_i_i73_i = $38;
    while (1) {
     $144 = HEAPU8[$tmp_014_i_i73_i] << 24 ^ $_0912_i_i75_i; //@line 29021
     $146 = $144 << 1; //@line 29023
     $_2_i_i76_i = ($144 | 0) < 0 ? $146 ^ 79764919 : $146; //@line 29025
     $149 = $_2_i_i76_i << 1; //@line 29027
     $_2_1_i_i77_i = ($_2_i_i76_i | 0) < 0 ? $149 ^ 79764919 : $149; //@line 29029
     $152 = $_2_1_i_i77_i << 1; //@line 29031
     $_2_2_i_i78_i = ($_2_1_i_i77_i | 0) < 0 ? $152 ^ 79764919 : $152; //@line 29033
     $155 = $_2_2_i_i78_i << 1; //@line 29035
     $_2_3_i_i79_i = ($_2_2_i_i78_i | 0) < 0 ? $155 ^ 79764919 : $155; //@line 29037
     $158 = $_2_3_i_i79_i << 1; //@line 29039
     $_2_4_i_i80_i = ($_2_3_i_i79_i | 0) < 0 ? $158 ^ 79764919 : $158; //@line 29041
     $161 = $_2_4_i_i80_i << 1; //@line 29043
     $_2_5_i_i81_i = ($_2_4_i_i80_i | 0) < 0 ? $161 ^ 79764919 : $161; //@line 29045
     $164 = $_2_5_i_i81_i << 1; //@line 29047
     $_2_6_i_i82_i = ($_2_5_i_i81_i | 0) < 0 ? $164 ^ 79764919 : $164; //@line 29049
     $167 = $_2_6_i_i82_i << 1; //@line 29051
     $_2_7_i_i83_i = ($_2_6_i_i82_i | 0) < 0 ? $167 ^ 79764919 : $167; //@line 29053
     $170 = $_013_i_i74_i - 1 | 0; //@line 29055
     if (($170 | 0) == 0) {
      break;
     } else {
      $_0912_i_i75_i = $_2_7_i_i83_i;
      $_013_i_i74_i = $170;
      $tmp_014_i_i73_i = $tmp_014_i_i73_i + 1 | 0;
     }
    }
    HEAP32[15666] = $_2_7_i_i83_i; //@line 29064
    $_0_i87_i = 0; //@line 29066
   } else {
    $_0_i87_i = 1; //@line 29068
   }
   $172 = HEAP32[$77 >> 2] | 0; //@line 29071
   $173 = HEAP32[$39 >> 2] | 0; //@line 29072
   if ((_psi_write($fp, $172, $173) | 0) == 0) {
    $177 = HEAP32[15666] | 0; //@line 29077
    if (($173 | 0) == 0) {
     $_09_lcssa_i_i_i = $177; //@line 29081
    } else {
     $_0912_i_i60_i = $177;
     $_013_i_i59_i = $173;
     $tmp_014_i_i58_i = $172;
     while (1) {
      $182 = HEAPU8[$tmp_014_i_i58_i] << 24 ^ $_0912_i_i60_i; //@line 29091
      $184 = $182 << 1; //@line 29093
      $_2_i_i61_i = ($182 | 0) < 0 ? $184 ^ 79764919 : $184; //@line 29095
      $187 = $_2_i_i61_i << 1; //@line 29097
      $_2_1_i_i62_i = ($_2_i_i61_i | 0) < 0 ? $187 ^ 79764919 : $187; //@line 29099
      $190 = $_2_1_i_i62_i << 1; //@line 29101
      $_2_2_i_i63_i = ($_2_1_i_i62_i | 0) < 0 ? $190 ^ 79764919 : $190; //@line 29103
      $193 = $_2_2_i_i63_i << 1; //@line 29105
      $_2_3_i_i64_i = ($_2_2_i_i63_i | 0) < 0 ? $193 ^ 79764919 : $193; //@line 29107
      $196 = $_2_3_i_i64_i << 1; //@line 29109
      $_2_4_i_i65_i = ($_2_3_i_i64_i | 0) < 0 ? $196 ^ 79764919 : $196; //@line 29111
      $199 = $_2_4_i_i65_i << 1; //@line 29113
      $_2_5_i_i66_i = ($_2_4_i_i65_i | 0) < 0 ? $199 ^ 79764919 : $199; //@line 29115
      $202 = $_2_5_i_i66_i << 1; //@line 29117
      $_2_6_i_i67_i = ($_2_5_i_i66_i | 0) < 0 ? $202 ^ 79764919 : $202; //@line 29119
      $205 = $_2_6_i_i67_i << 1; //@line 29121
      $_2_7_i_i68_i = ($_2_6_i_i67_i | 0) < 0 ? $205 ^ 79764919 : $205; //@line 29123
      $208 = $_013_i_i59_i - 1 | 0; //@line 29125
      if (($208 | 0) == 0) {
       $_09_lcssa_i_i_i = $_2_7_i_i68_i; //@line 29129
       break;
      } else {
       $_0912_i_i60_i = $_2_7_i_i68_i;
       $_013_i_i59_i = $208;
       $tmp_014_i_i58_i = $tmp_014_i_i58_i + 1 | 0;
      }
     }
    }
    HEAP32[15666] = $_09_lcssa_i_i_i; //@line 29137
    $_0_i71_i = 0; //@line 29139
   } else {
    $_0_i71_i = 1; //@line 29141
   }
   if ((_psi_write($fp, $45, 1) | 0) == 0) {
    $217 = HEAPU8[$45] << 24 ^ HEAP32[15666]; //@line 29153
    $219 = $217 << 1; //@line 29155
    $_2_i_i32_i = ($217 | 0) < 0 ? $219 ^ 79764919 : $219; //@line 29157
    $222 = $_2_i_i32_i << 1; //@line 29159
    $_2_1_i_i33_i = ($_2_i_i32_i | 0) < 0 ? $222 ^ 79764919 : $222; //@line 29161
    $225 = $_2_1_i_i33_i << 1; //@line 29163
    $_2_2_i_i34_i = ($_2_1_i_i33_i | 0) < 0 ? $225 ^ 79764919 : $225; //@line 29165
    $228 = $_2_2_i_i34_i << 1; //@line 29167
    $_2_3_i_i35_i = ($_2_2_i_i34_i | 0) < 0 ? $228 ^ 79764919 : $228; //@line 29169
    $231 = $_2_3_i_i35_i << 1; //@line 29171
    $_2_4_i_i36_i = ($_2_3_i_i35_i | 0) < 0 ? $231 ^ 79764919 : $231; //@line 29173
    $234 = $_2_4_i_i36_i << 1; //@line 29175
    $_2_5_i_i37_i = ($_2_4_i_i36_i | 0) < 0 ? $234 ^ 79764919 : $234; //@line 29177
    $237 = $_2_5_i_i37_i << 1; //@line 29179
    $_2_6_i_i38_i = ($_2_5_i_i37_i | 0) < 0 ? $237 ^ 79764919 : $237; //@line 29181
    $240 = $_2_6_i_i38_i << 1; //@line 29183
    HEAP32[15666] = ($_2_6_i_i38_i | 0) < 0 ? $240 ^ 79764919 : $240; //@line 29186
    $_0_i42_i = 0; //@line 29188
   } else {
    $_0_i42_i = 1; //@line 29190
   }
   $242 = $_0_i71_i | $_0_i87_i | $_0_i42_i; //@line 29193
   _psi_set_uint32_be($38, 0, $_2_7_i54_i); //@line 29194
   if ((_psi_write($fp, $38, 4) | 0) == 0) {
    $_0912_i_i_i = HEAP32[15666] | 0;
    $_013_i_i_i = 4;
    $tmp_014_i_i_i = $38;
    while (1) {
     $250 = HEAPU8[$tmp_014_i_i_i] << 24 ^ $_0912_i_i_i; //@line 29208
     $252 = $250 << 1; //@line 29210
     $_2_i_i_i = ($250 | 0) < 0 ? $252 ^ 79764919 : $252; //@line 29212
     $255 = $_2_i_i_i << 1; //@line 29214
     $_2_1_i_i_i = ($_2_i_i_i | 0) < 0 ? $255 ^ 79764919 : $255; //@line 29216
     $258 = $_2_1_i_i_i << 1; //@line 29218
     $_2_2_i_i_i = ($_2_1_i_i_i | 0) < 0 ? $258 ^ 79764919 : $258; //@line 29220
     $261 = $_2_2_i_i_i << 1; //@line 29222
     $_2_3_i_i_i = ($_2_2_i_i_i | 0) < 0 ? $261 ^ 79764919 : $261; //@line 29224
     $264 = $_2_3_i_i_i << 1; //@line 29226
     $_2_4_i_i_i = ($_2_3_i_i_i | 0) < 0 ? $264 ^ 79764919 : $264; //@line 29228
     $267 = $_2_4_i_i_i << 1; //@line 29230
     $_2_5_i_i_i = ($_2_4_i_i_i | 0) < 0 ? $267 ^ 79764919 : $267; //@line 29232
     $270 = $_2_5_i_i_i << 1; //@line 29234
     $_2_6_i_i_i = ($_2_5_i_i_i | 0) < 0 ? $270 ^ 79764919 : $270; //@line 29236
     $273 = $_2_6_i_i_i << 1; //@line 29238
     $_2_7_i_i_i = ($_2_6_i_i_i | 0) < 0 ? $273 ^ 79764919 : $273; //@line 29240
     $276 = $_013_i_i_i - 1 | 0; //@line 29242
     if (($276 | 0) == 0) {
      break;
     } else {
      $_0912_i_i_i = $_2_7_i_i_i;
      $_013_i_i_i = $276;
      $tmp_014_i_i_i = $tmp_014_i_i_i + 1 | 0;
     }
    }
    HEAP32[15666] = $_2_7_i_i_i; //@line 29251
    $_0_i_i = 0; //@line 29253
   } else {
    $_0_i_i = 1; //@line 29255
   }
   if (($242 | $_0_i_i | 0) == 0) {
    break;
   } else {
    $_0 = 1; //@line 29264
   }
   STACKTOP = sp; //@line 29267
   return $_0 | 0; //@line 29268
  }
 } while (0);
 $280 = $img | 0; //@line 29271
 $281 = HEAP16[$280 >> 1] | 0; //@line 29272
 L16647 : do {
  if ($281 << 16 >> 16 != 0) {
   $283 = $img + 4 | 0; //@line 29277
   $c_060 = 0;
   $284 = $281;
   L16649 : while (1) {
    $287 = HEAP32[(HEAP32[$283 >> 2] | 0) + ($c_060 << 2) >> 2] | 0; //@line 29285
    $288 = $287 + 2 | 0; //@line 29286
    $289 = HEAP16[$288 >> 1] | 0; //@line 29287
    if ($289 << 16 >> 16 == 0) {
     $320 = $284; //@line 29291
    } else {
     $291 = $287 + 4 | 0; //@line 29293
     $h_055 = 0;
     $292 = $289;
     while (1) {
      $295 = HEAP32[(HEAP32[$291 >> 2] | 0) + ($h_055 << 2) >> 2] | 0; //@line 29301
      $296 = $295 + 2 | 0; //@line 29302
      if ((HEAP16[$296 >> 1] | 0) == 0) {
       $316 = $292; //@line 29307
      } else {
       $299 = $295 + 4 | 0; //@line 29309
       $s_054 = 0; //@line 29311
       do {
        $303 = HEAP32[(HEAP32[$299 >> 2] | 0) + ($s_054 << 2) >> 2] | 0; //@line 29316
        if ((_pfdc2_save_sector($fp, $303, $c_060, $h_055, 0) | 0) == 0) {
         $sct_pn_i = $303; //@line 29321
        } else {
         $_0 = 1; //@line 29323
         label = 13192; //@line 29324
         break L16649;
        }
        while (1) {
         $_012_i = HEAP32[$sct_pn_i >> 2] | 0; //@line 29330
         if (($_012_i | 0) == 0) {
          break;
         }
         if ((_pfdc2_save_sector($fp, $_012_i, $c_060, $h_055, 1) | 0) == 0) {
          $sct_pn_i = $_012_i; //@line 29340
         } else {
          $_0 = 1; //@line 29342
          label = 13195; //@line 29343
          break L16649;
         }
        }
        $s_054 = $s_054 + 1 | 0; //@line 29347
       } while ($s_054 >>> 0 < (HEAPU16[$296 >> 1] | 0) >>> 0);
       $316 = HEAP16[$288 >> 1] | 0; //@line 29360
      }
      $317 = $h_055 + 1 | 0; //@line 29363
      if ($317 >>> 0 < ($316 & 65535) >>> 0) {
       $h_055 = $317;
       $292 = $316;
      } else {
       break;
      }
     }
     $320 = HEAP16[$280 >> 1] | 0; //@line 29375
    }
    $321 = $c_060 + 1 | 0; //@line 29378
    if ($321 >>> 0 < ($320 & 65535) >>> 0) {
     $c_060 = $321;
     $284 = $320;
    } else {
     break L16647;
    }
   }
   if ((label | 0) == 13192) {
    STACKTOP = sp; //@line 29390
    return $_0 | 0; //@line 29391
   } else if ((label | 0) == 13195) {
    STACKTOP = sp; //@line 29395
    return $_0 | 0; //@line 29396
   }
  }
 } while (0);
 if ((_pfdc2_save_chunk($fp, 17742, 0, 0) | 0) != 0) {
  $_0 = 1; //@line 29404
  STACKTOP = sp; //@line 29406
  return $_0 | 0; //@line 29407
 }
 _psi_set_uint32_be($1, 0, HEAP32[15666] | 0); //@line 29410
 if ((_psi_write($fp, $1, 4) | 0) != 0) {
  $_0 = 1; //@line 29415
  STACKTOP = sp; //@line 29417
  return $_0 | 0; //@line 29418
 }
 $_0912_i_i37 = HEAP32[15666] | 0;
 $_013_i_i36 = 4;
 $tmp_014_i_i35 = $1;
 while (1) {
  $335 = HEAPU8[$tmp_014_i_i35] << 24 ^ $_0912_i_i37; //@line 29429
  $337 = $335 << 1; //@line 29431
  $_2_i_i38 = ($335 | 0) < 0 ? $337 ^ 79764919 : $337; //@line 29433
  $340 = $_2_i_i38 << 1; //@line 29435
  $_2_1_i_i39 = ($_2_i_i38 | 0) < 0 ? $340 ^ 79764919 : $340; //@line 29437
  $343 = $_2_1_i_i39 << 1; //@line 29439
  $_2_2_i_i40 = ($_2_1_i_i39 | 0) < 0 ? $343 ^ 79764919 : $343; //@line 29441
  $346 = $_2_2_i_i40 << 1; //@line 29443
  $_2_3_i_i41 = ($_2_2_i_i40 | 0) < 0 ? $346 ^ 79764919 : $346; //@line 29445
  $349 = $_2_3_i_i41 << 1; //@line 29447
  $_2_4_i_i42 = ($_2_3_i_i41 | 0) < 0 ? $349 ^ 79764919 : $349; //@line 29449
  $352 = $_2_4_i_i42 << 1; //@line 29451
  $_2_5_i_i43 = ($_2_4_i_i42 | 0) < 0 ? $352 ^ 79764919 : $352; //@line 29453
  $355 = $_2_5_i_i43 << 1; //@line 29455
  $_2_6_i_i44 = ($_2_5_i_i43 | 0) < 0 ? $355 ^ 79764919 : $355; //@line 29457
  $358 = $_2_6_i_i44 << 1; //@line 29459
  $_2_7_i_i45 = ($_2_6_i_i44 | 0) < 0 ? $358 ^ 79764919 : $358; //@line 29461
  $361 = $_013_i_i36 - 1 | 0; //@line 29463
  if (($361 | 0) == 0) {
   break;
  } else {
   $_0912_i_i37 = $_2_7_i_i45;
   $_013_i_i36 = $361;
   $tmp_014_i_i35 = $tmp_014_i_i35 + 1 | 0;
  }
 }
 HEAP32[15666] = $_2_7_i_i45; //@line 29472
 _fflush($fp | 0) | 0; //@line 29473
 $_0 = 0; //@line 29475
 STACKTOP = sp; //@line 29477
 return $_0 | 0; //@line 29478
}
function _pfdc2_save_chunk($fp, $ckid, $size, $data) {
 $fp = $fp | 0;
 $ckid = $ckid | 0;
 $size = $size | 0;
 $data = $data | 0;
 var $1 = 0, $tmp_014_i = 0, $_013_i = 0, $_0912_i = 0, $5 = 0, $7 = 0, $_2_i = 0, $10 = 0, $_2_1_i = 0, $13 = 0, $_2_2_i = 0, $16 = 0, $_2_3_i = 0, $19 = 0, $_2_4_i = 0, $22 = 0, $_2_5_i = 0, $25 = 0, $_2_6_i = 0, $28 = 0, $_2_7_i = 0, $31 = 0, $tmp_014_i_i12 = 0, $_013_i_i13 = 0, $_0912_i_i14 = 0, $40 = 0, $42 = 0, $_2_i_i15 = 0, $45 = 0, $_2_1_i_i16 = 0, $48 = 0, $_2_2_i_i17 = 0, $51 = 0, $_2_3_i_i18 = 0, $54 = 0, $_2_4_i_i19 = 0, $57 = 0, $_2_5_i_i20 = 0, $60 = 0, $_2_6_i_i21 = 0, $63 = 0, $_2_7_i_i22 = 0, $66 = 0, $tmp_014_i27 = 0, $_013_i28 = 0, $_0912_i29 = 0, $73 = 0, $75 = 0, $_2_i30 = 0, $78 = 0, $_2_1_i31 = 0, $81 = 0, $_2_2_i32 = 0, $84 = 0, $_2_3_i33 = 0, $87 = 0, $_2_4_i34 = 0, $90 = 0, $_2_5_i35 = 0, $93 = 0, $_2_6_i36 = 0, $96 = 0, $_2_7_i37 = 0, $99 = 0, $tmp_014_i_i40 = 0, $_013_i_i41 = 0, $_0912_i_i42 = 0, $107 = 0, $109 = 0, $_2_i_i43 = 0, $112 = 0, $_2_1_i_i44 = 0, $115 = 0, $_2_2_i_i45 = 0, $118 = 0, $_2_3_i_i46 = 0, $121 = 0, $_2_4_i_i47 = 0, $124 = 0, $_2_5_i_i48 = 0, $127 = 0, $_2_6_i_i49 = 0, $130 = 0, $_2_7_i_i50 = 0, $133 = 0, $crc_0 = 0, $tmp_014_i_i = 0, $_013_i_i = 0, $_0912_i_i = 0, $143 = 0, $145 = 0, $_2_i_i = 0, $148 = 0, $_2_1_i_i = 0, $151 = 0, $_2_2_i_i = 0, $154 = 0, $_2_3_i_i = 0, $157 = 0, $_2_4_i_i = 0, $160 = 0, $_2_5_i_i = 0, $163 = 0, $_2_6_i_i = 0, $166 = 0, $_2_7_i_i = 0, $169 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 29516
 STACKTOP = STACKTOP + 8 | 0; //@line 29516
 $1 = sp | 0; //@line 29518
 _psi_set_uint16_be($1, 0, $ckid); //@line 29519
 _psi_set_uint16_be($1, 2, $size); //@line 29520
 $_0912_i = 0;
 $_013_i = 4;
 $tmp_014_i = $1;
 while (1) {
  $5 = (HEAPU8[$tmp_014_i] | 0) << 24 ^ $_0912_i; //@line 29529
  $7 = $5 << 1; //@line 29531
  $_2_i = ($5 | 0) < 0 ? $7 ^ 79764919 : $7; //@line 29533
  $10 = $_2_i << 1; //@line 29535
  $_2_1_i = ($_2_i | 0) < 0 ? $10 ^ 79764919 : $10; //@line 29537
  $13 = $_2_1_i << 1; //@line 29539
  $_2_2_i = ($_2_1_i | 0) < 0 ? $13 ^ 79764919 : $13; //@line 29541
  $16 = $_2_2_i << 1; //@line 29543
  $_2_3_i = ($_2_2_i | 0) < 0 ? $16 ^ 79764919 : $16; //@line 29545
  $19 = $_2_3_i << 1; //@line 29547
  $_2_4_i = ($_2_3_i | 0) < 0 ? $19 ^ 79764919 : $19; //@line 29549
  $22 = $_2_4_i << 1; //@line 29551
  $_2_5_i = ($_2_4_i | 0) < 0 ? $22 ^ 79764919 : $22; //@line 29553
  $25 = $_2_5_i << 1; //@line 29555
  $_2_6_i = ($_2_5_i | 0) < 0 ? $25 ^ 79764919 : $25; //@line 29557
  $28 = $_2_6_i << 1; //@line 29559
  $_2_7_i = ($_2_6_i | 0) < 0 ? $28 ^ 79764919 : $28; //@line 29561
  $31 = $_013_i - 1 | 0; //@line 29563
  if (($31 | 0) == 0) {
   break;
  } else {
   $_0912_i = $_2_7_i;
   $_013_i = $31;
   $tmp_014_i = $tmp_014_i + 1 | 0;
  }
 }
 if ((_psi_write($fp, $1, 4) | 0) != 0) {
  $_0 = 1; //@line 29576
  STACKTOP = sp; //@line 29578
  return $_0 | 0; //@line 29579
 }
 $_0912_i_i14 = HEAP32[15666] | 0;
 $_013_i_i13 = 4;
 $tmp_014_i_i12 = $1;
 while (1) {
  $40 = (HEAPU8[$tmp_014_i_i12] | 0) << 24 ^ $_0912_i_i14; //@line 29590
  $42 = $40 << 1; //@line 29592
  $_2_i_i15 = ($40 | 0) < 0 ? $42 ^ 79764919 : $42; //@line 29594
  $45 = $_2_i_i15 << 1; //@line 29596
  $_2_1_i_i16 = ($_2_i_i15 | 0) < 0 ? $45 ^ 79764919 : $45; //@line 29598
  $48 = $_2_1_i_i16 << 1; //@line 29600
  $_2_2_i_i17 = ($_2_1_i_i16 | 0) < 0 ? $48 ^ 79764919 : $48; //@line 29602
  $51 = $_2_2_i_i17 << 1; //@line 29604
  $_2_3_i_i18 = ($_2_2_i_i17 | 0) < 0 ? $51 ^ 79764919 : $51; //@line 29606
  $54 = $_2_3_i_i18 << 1; //@line 29608
  $_2_4_i_i19 = ($_2_3_i_i18 | 0) < 0 ? $54 ^ 79764919 : $54; //@line 29610
  $57 = $_2_4_i_i19 << 1; //@line 29612
  $_2_5_i_i20 = ($_2_4_i_i19 | 0) < 0 ? $57 ^ 79764919 : $57; //@line 29614
  $60 = $_2_5_i_i20 << 1; //@line 29616
  $_2_6_i_i21 = ($_2_5_i_i20 | 0) < 0 ? $60 ^ 79764919 : $60; //@line 29618
  $63 = $_2_6_i_i21 << 1; //@line 29620
  $_2_7_i_i22 = ($_2_6_i_i21 | 0) < 0 ? $63 ^ 79764919 : $63; //@line 29622
  $66 = $_013_i_i13 - 1 | 0; //@line 29624
  if (($66 | 0) == 0) {
   break;
  } else {
   $_0912_i_i14 = $_2_7_i_i22;
   $_013_i_i13 = $66;
   $tmp_014_i_i12 = $tmp_014_i_i12 + 1 | 0;
  }
 }
 HEAP32[15666] = $_2_7_i_i22; //@line 29633
 if (($size | 0) == 0) {
  $crc_0 = $_2_7_i; //@line 29637
 } else {
  $_0912_i29 = $_2_7_i;
  $_013_i28 = $size;
  $tmp_014_i27 = $data;
  while (1) {
   $73 = (HEAPU8[$tmp_014_i27] | 0) << 24 ^ $_0912_i29; //@line 29647
   $75 = $73 << 1; //@line 29649
   $_2_i30 = ($73 | 0) < 0 ? $75 ^ 79764919 : $75; //@line 29651
   $78 = $_2_i30 << 1; //@line 29653
   $_2_1_i31 = ($_2_i30 | 0) < 0 ? $78 ^ 79764919 : $78; //@line 29655
   $81 = $_2_1_i31 << 1; //@line 29657
   $_2_2_i32 = ($_2_1_i31 | 0) < 0 ? $81 ^ 79764919 : $81; //@line 29659
   $84 = $_2_2_i32 << 1; //@line 29661
   $_2_3_i33 = ($_2_2_i32 | 0) < 0 ? $84 ^ 79764919 : $84; //@line 29663
   $87 = $_2_3_i33 << 1; //@line 29665
   $_2_4_i34 = ($_2_3_i33 | 0) < 0 ? $87 ^ 79764919 : $87; //@line 29667
   $90 = $_2_4_i34 << 1; //@line 29669
   $_2_5_i35 = ($_2_4_i34 | 0) < 0 ? $90 ^ 79764919 : $90; //@line 29671
   $93 = $_2_5_i35 << 1; //@line 29673
   $_2_6_i36 = ($_2_5_i35 | 0) < 0 ? $93 ^ 79764919 : $93; //@line 29675
   $96 = $_2_6_i36 << 1; //@line 29677
   $_2_7_i37 = ($_2_6_i36 | 0) < 0 ? $96 ^ 79764919 : $96; //@line 29679
   $99 = $_013_i28 - 1 | 0; //@line 29681
   if (($99 | 0) == 0) {
    break;
   } else {
    $_0912_i29 = $_2_7_i37;
    $_013_i28 = $99;
    $tmp_014_i27 = $tmp_014_i27 + 1 | 0;
   }
  }
  if ((_psi_write($fp, $data, $size) | 0) != 0) {
   $_0 = 1; //@line 29694
   STACKTOP = sp; //@line 29696
   return $_0 | 0; //@line 29697
  }
  $_0912_i_i42 = HEAP32[15666] | 0;
  $_013_i_i41 = $size;
  $tmp_014_i_i40 = $data;
  while (1) {
   $107 = (HEAPU8[$tmp_014_i_i40] | 0) << 24 ^ $_0912_i_i42; //@line 29709
   $109 = $107 << 1; //@line 29711
   $_2_i_i43 = ($107 | 0) < 0 ? $109 ^ 79764919 : $109; //@line 29713
   $112 = $_2_i_i43 << 1; //@line 29715
   $_2_1_i_i44 = ($_2_i_i43 | 0) < 0 ? $112 ^ 79764919 : $112; //@line 29717
   $115 = $_2_1_i_i44 << 1; //@line 29719
   $_2_2_i_i45 = ($_2_1_i_i44 | 0) < 0 ? $115 ^ 79764919 : $115; //@line 29721
   $118 = $_2_2_i_i45 << 1; //@line 29723
   $_2_3_i_i46 = ($_2_2_i_i45 | 0) < 0 ? $118 ^ 79764919 : $118; //@line 29725
   $121 = $_2_3_i_i46 << 1; //@line 29727
   $_2_4_i_i47 = ($_2_3_i_i46 | 0) < 0 ? $121 ^ 79764919 : $121; //@line 29729
   $124 = $_2_4_i_i47 << 1; //@line 29731
   $_2_5_i_i48 = ($_2_4_i_i47 | 0) < 0 ? $124 ^ 79764919 : $124; //@line 29733
   $127 = $_2_5_i_i48 << 1; //@line 29735
   $_2_6_i_i49 = ($_2_5_i_i48 | 0) < 0 ? $127 ^ 79764919 : $127; //@line 29737
   $130 = $_2_6_i_i49 << 1; //@line 29739
   $_2_7_i_i50 = ($_2_6_i_i49 | 0) < 0 ? $130 ^ 79764919 : $130; //@line 29741
   $133 = $_013_i_i41 - 1 | 0; //@line 29743
   if (($133 | 0) == 0) {
    break;
   } else {
    $_0912_i_i42 = $_2_7_i_i50;
    $_013_i_i41 = $133;
    $tmp_014_i_i40 = $tmp_014_i_i40 + 1 | 0;
   }
  }
  HEAP32[15666] = $_2_7_i_i50; //@line 29752
  $crc_0 = $_2_7_i37; //@line 29754
 }
 _psi_set_uint32_be($1, 0, $crc_0); //@line 29757
 if ((_psi_write($fp, $1, 4) | 0) != 0) {
  $_0 = 1; //@line 29762
  STACKTOP = sp; //@line 29764
  return $_0 | 0; //@line 29765
 }
 $_0912_i_i = HEAP32[15666] | 0;
 $_013_i_i = 4;
 $tmp_014_i_i = $1;
 while (1) {
  $143 = (HEAPU8[$tmp_014_i_i] | 0) << 24 ^ $_0912_i_i; //@line 29776
  $145 = $143 << 1; //@line 29778
  $_2_i_i = ($143 | 0) < 0 ? $145 ^ 79764919 : $145; //@line 29780
  $148 = $_2_i_i << 1; //@line 29782
  $_2_1_i_i = ($_2_i_i | 0) < 0 ? $148 ^ 79764919 : $148; //@line 29784
  $151 = $_2_1_i_i << 1; //@line 29786
  $_2_2_i_i = ($_2_1_i_i | 0) < 0 ? $151 ^ 79764919 : $151; //@line 29788
  $154 = $_2_2_i_i << 1; //@line 29790
  $_2_3_i_i = ($_2_2_i_i | 0) < 0 ? $154 ^ 79764919 : $154; //@line 29792
  $157 = $_2_3_i_i << 1; //@line 29794
  $_2_4_i_i = ($_2_3_i_i | 0) < 0 ? $157 ^ 79764919 : $157; //@line 29796
  $160 = $_2_4_i_i << 1; //@line 29798
  $_2_5_i_i = ($_2_4_i_i | 0) < 0 ? $160 ^ 79764919 : $160; //@line 29800
  $163 = $_2_5_i_i << 1; //@line 29802
  $_2_6_i_i = ($_2_5_i_i | 0) < 0 ? $163 ^ 79764919 : $163; //@line 29804
  $166 = $_2_6_i_i << 1; //@line 29806
  $_2_7_i_i = ($_2_6_i_i | 0) < 0 ? $166 ^ 79764919 : $166; //@line 29808
  $169 = $_013_i_i - 1 | 0; //@line 29810
  if (($169 | 0) == 0) {
   break;
  } else {
   $_0912_i_i = $_2_7_i_i;
   $_013_i_i = $169;
   $tmp_014_i_i = $tmp_014_i_i + 1 | 0;
  }
 }
 HEAP32[15666] = $_2_7_i_i; //@line 29819
 $_0 = 0; //@line 29821
 STACKTOP = sp; //@line 29823
 return $_0 | 0; //@line 29824
}
function _pfdc2_save_sector($fp, $sct, $c, $h, $alt) {
 $fp = $fp | 0;
 $sct = $sct | 0;
 $c = $c | 0;
 $h = $h | 0;
 $alt = $alt | 0;
 var $buf = 0, $sct_idx_val = 0, $1 = 0, $f_1_i = 0, $f_1__i = 0, $f_3_i = 0, $11 = 0, $13 = 0, $_pre = 0, $cnt_0 = 0, $flg_0 = 0, $flg_1 = 0, $22 = 0, $sct_idx34_val = 0, $23 = 0, $enc_0_load109_off0 = 0, $dr_0_load108 = 0, $47 = 0, $48 = 0, $tmp_014_i = 0, $_013_i = 0, $_0912_i = 0, $58 = 0, $60 = 0, $_2_i = 0, $63 = 0, $_2_1_i = 0, $66 = 0, $_2_2_i = 0, $69 = 0, $_2_3_i = 0, $72 = 0, $_2_4_i = 0, $75 = 0, $_2_5_i = 0, $78 = 0, $_2_6_i = 0, $81 = 0, $_2_7_i = 0, $84 = 0, $tmp_014_i_i50 = 0, $_013_i_i51 = 0, $_0912_i_i52 = 0, $93 = 0, $95 = 0, $_2_i_i53 = 0, $98 = 0, $_2_1_i_i54 = 0, $101 = 0, $_2_2_i_i55 = 0, $104 = 0, $_2_3_i_i56 = 0, $107 = 0, $_2_4_i_i57 = 0, $110 = 0, $_2_5_i_i58 = 0, $113 = 0, $_2_6_i_i59 = 0, $116 = 0, $_2_7_i_i60 = 0, $119 = 0, $124 = 0, $125 = 0, $128 = 0, $130 = 0, $_2_i69 = 0, $133 = 0, $_2_1_i70 = 0, $136 = 0, $_2_2_i71 = 0, $139 = 0, $_2_3_i72 = 0, $142 = 0, $_2_4_i73 = 0, $145 = 0, $_2_5_i74 = 0, $148 = 0, $_2_6_i75 = 0, $150 = 0, $159 = 0, $161 = 0, $_2_i_i95 = 0, $164 = 0, $_2_1_i_i96 = 0, $167 = 0, $_2_2_i_i97 = 0, $170 = 0, $_2_3_i_i98 = 0, $173 = 0, $_2_4_i_i99 = 0, $176 = 0, $_2_5_i_i100 = 0, $179 = 0, $_2_6_i_i101 = 0, $182 = 0, $185 = 0, $186 = 0, $187 = 0, $tmp_014_i79 = 0, $_013_i80 = 0, $_0912_i81 = 0, $191 = 0, $193 = 0, $_2_i82 = 0, $196 = 0, $_2_1_i83 = 0, $199 = 0, $_2_2_i84 = 0, $202 = 0, $_2_3_i85 = 0, $205 = 0, $_2_4_i86 = 0, $208 = 0, $_2_5_i87 = 0, $211 = 0, $_2_6_i88 = 0, $214 = 0, $_2_7_i89 = 0, $217 = 0, $_pre_phi = 0, $_09_lcssa_i = 0, $222 = 0, $tmp_014_i_i35 = 0, $_013_i_i36 = 0, $_0912_i_i37 = 0, $226 = 0, $228 = 0, $_2_i_i38 = 0, $231 = 0, $_2_1_i_i39 = 0, $234 = 0, $_2_2_i_i40 = 0, $237 = 0, $_2_3_i_i41 = 0, $240 = 0, $_2_4_i_i42 = 0, $243 = 0, $_2_5_i_i43 = 0, $246 = 0, $_2_6_i_i44 = 0, $249 = 0, $_2_7_i_i45 = 0, $252 = 0, $storemerge = 0, $crc_0 = 0, $tmp_014_i_i = 0, $_013_i_i = 0, $_0912_i_i = 0, $261 = 0, $263 = 0, $_2_i_i = 0, $266 = 0, $_2_1_i_i = 0, $269 = 0, $_2_2_i_i = 0, $272 = 0, $_2_3_i_i = 0, $275 = 0, $_2_4_i_i = 0, $278 = 0, $_2_5_i_i = 0, $281 = 0, $_2_6_i_i = 0, $284 = 0, $_2_7_i_i = 0, $287 = 0, $290 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 29882
 STACKTOP = STACKTOP + 256 | 0; //@line 29882
 $buf = sp | 0; //@line 29883
 $sct_idx_val = HEAP32[$sct + 12 >> 2] | 0; //@line 29885
 $1 = $sct_idx_val & 1; //@line 29886
 $f_1_i = ($sct_idx_val & 2 | 0) == 0 ? $1 : $1 | 2; //@line 29890
 $f_1__i = ($sct_idx_val & 4 | 0) == 0 ? $f_1_i : $f_1_i | 4; //@line 29894
 $f_3_i = ($sct_idx_val & 8 | 0) == 0 ? $f_1__i : $f_1__i | 8; //@line 29898
 $11 = $f_3_i & 255; //@line 29899
 $13 = (_psi_sct_uniform($sct) | 0) == 0; //@line 29901
 $_pre = HEAP16[$sct + 10 >> 1] | 0; //@line 29903
 do {
  if ($13) {
   $flg_0 = $11;
   $cnt_0 = ($_pre & 65535) + 12 | 0;
  } else {
   if ($_pre << 16 >> 16 == 0) {
    $flg_0 = $11;
    $cnt_0 = 12;
    break;
   }
   $flg_0 = ($f_3_i | 128) & 255;
   $cnt_0 = 13;
  }
 } while (0);
 $flg_1 = ($alt | 0) == 0 ? $flg_0 : $flg_0 | 64; //@line 29928
 $22 = $buf | 0; //@line 29929
 _psi_set_uint16_be($22, 0, 21315); //@line 29930
 _psi_set_uint16_be($22, 2, $cnt_0); //@line 29931
 $sct_idx34_val = HEAP16[$sct + 16 >> 1] | 0; //@line 29933
 $23 = $sct_idx34_val & 65535; //@line 29934
 if (($23 | 0) == 2) {
  $dr_0_load108 = 25e4;
  $enc_0_load109_off0 = $sct_idx34_val & 255;
 } else if (($23 | 0) == 3) {
  $dr_0_load108 = 5e5;
  $enc_0_load109_off0 = $sct_idx34_val & 255;
 } else if (($23 | 0) == 32769) {
  $dr_0_load108 = 25e4;
  $enc_0_load109_off0 = 1;
 } else if (($23 | 0) == 1) {
  $dr_0_load108 = 125e3;
  $enc_0_load109_off0 = 1;
 } else if (($23 | 0) == 32770) {
  $dr_0_load108 = 5e5;
  $enc_0_load109_off0 = 2;
 } else if (($23 | 0) == 16386) {
  $dr_0_load108 = 1e6;
  $enc_0_load109_off0 = 2;
 } else {
  $dr_0_load108 = 0;
  $enc_0_load109_off0 = 0;
 }
 _psi_set_uint32_be($22, 12, $dr_0_load108); //@line 29960
 HEAP8[$buf + 4 | 0] = $flg_1; //@line 29962
 HEAP8[$buf + 5 | 0] = $c & 255; //@line 29965
 HEAP8[$buf + 6 | 0] = $h & 255; //@line 29968
 HEAP8[$buf + 7 | 0] = HEAP16[$sct + 4 >> 1] & 255; //@line 29973
 HEAP8[$buf + 8 | 0] = HEAP16[$sct + 6 >> 1] & 255; //@line 29978
 HEAP8[$buf + 9 | 0] = HEAP16[$sct + 8 >> 1] & 255; //@line 29983
 $47 = $sct + 10 | 0; //@line 29984
 $48 = HEAP16[$47 >> 1] | 0; //@line 29985
 HEAP8[$buf + 10 | 0] = ($48 & 65535) >>> 8 & 255; //@line 29989
 HEAP8[$buf + 11 | 0] = $48 & 255; //@line 29992
 HEAP8[$buf + 12 | 0] = $enc_0_load109_off0; //@line 29994
 $_0912_i = 0;
 $_013_i = 16;
 $tmp_014_i = $22;
 while (1) {
  $58 = (HEAPU8[$tmp_014_i] | 0) << 24 ^ $_0912_i; //@line 30003
  $60 = $58 << 1; //@line 30005
  $_2_i = ($58 | 0) < 0 ? $60 ^ 79764919 : $60; //@line 30007
  $63 = $_2_i << 1; //@line 30009
  $_2_1_i = ($_2_i | 0) < 0 ? $63 ^ 79764919 : $63; //@line 30011
  $66 = $_2_1_i << 1; //@line 30013
  $_2_2_i = ($_2_1_i | 0) < 0 ? $66 ^ 79764919 : $66; //@line 30015
  $69 = $_2_2_i << 1; //@line 30017
  $_2_3_i = ($_2_2_i | 0) < 0 ? $69 ^ 79764919 : $69; //@line 30019
  $72 = $_2_3_i << 1; //@line 30021
  $_2_4_i = ($_2_3_i | 0) < 0 ? $72 ^ 79764919 : $72; //@line 30023
  $75 = $_2_4_i << 1; //@line 30025
  $_2_5_i = ($_2_4_i | 0) < 0 ? $75 ^ 79764919 : $75; //@line 30027
  $78 = $_2_5_i << 1; //@line 30029
  $_2_6_i = ($_2_5_i | 0) < 0 ? $78 ^ 79764919 : $78; //@line 30031
  $81 = $_2_6_i << 1; //@line 30033
  $_2_7_i = ($_2_6_i | 0) < 0 ? $81 ^ 79764919 : $81; //@line 30035
  $84 = $_013_i - 1 | 0; //@line 30037
  if (($84 | 0) == 0) {
   break;
  } else {
   $_0912_i = $_2_7_i;
   $_013_i = $84;
   $tmp_014_i = $tmp_014_i + 1 | 0;
  }
 }
 if ((_psi_write($fp, $22, 16) | 0) != 0) {
  $_0 = 1; //@line 30050
  STACKTOP = sp; //@line 30052
  return $_0 | 0; //@line 30053
 }
 $_0912_i_i52 = HEAP32[15666] | 0;
 $_013_i_i51 = 16;
 $tmp_014_i_i50 = $22;
 while (1) {
  $93 = (HEAPU8[$tmp_014_i_i50] | 0) << 24 ^ $_0912_i_i52; //@line 30064
  $95 = $93 << 1; //@line 30066
  $_2_i_i53 = ($93 | 0) < 0 ? $95 ^ 79764919 : $95; //@line 30068
  $98 = $_2_i_i53 << 1; //@line 30070
  $_2_1_i_i54 = ($_2_i_i53 | 0) < 0 ? $98 ^ 79764919 : $98; //@line 30072
  $101 = $_2_1_i_i54 << 1; //@line 30074
  $_2_2_i_i55 = ($_2_1_i_i54 | 0) < 0 ? $101 ^ 79764919 : $101; //@line 30076
  $104 = $_2_2_i_i55 << 1; //@line 30078
  $_2_3_i_i56 = ($_2_2_i_i55 | 0) < 0 ? $104 ^ 79764919 : $104; //@line 30080
  $107 = $_2_3_i_i56 << 1; //@line 30082
  $_2_4_i_i57 = ($_2_3_i_i56 | 0) < 0 ? $107 ^ 79764919 : $107; //@line 30084
  $110 = $_2_4_i_i57 << 1; //@line 30086
  $_2_5_i_i58 = ($_2_4_i_i57 | 0) < 0 ? $110 ^ 79764919 : $110; //@line 30088
  $113 = $_2_5_i_i58 << 1; //@line 30090
  $_2_6_i_i59 = ($_2_5_i_i58 | 0) < 0 ? $113 ^ 79764919 : $113; //@line 30092
  $116 = $_2_6_i_i59 << 1; //@line 30094
  $_2_7_i_i60 = ($_2_6_i_i59 | 0) < 0 ? $116 ^ 79764919 : $116; //@line 30096
  $119 = $_013_i_i51 - 1 | 0; //@line 30098
  if (($119 | 0) == 0) {
   break;
  } else {
   $_0912_i_i52 = $_2_7_i_i60;
   $_013_i_i51 = $119;
   $tmp_014_i_i50 = $tmp_014_i_i50 + 1 | 0;
  }
 }
 HEAP32[15666] = $_2_7_i_i60; //@line 30107
 $124 = HEAP32[$sct + 24 >> 2] | 0; //@line 30110
 do {
  if ($flg_1 << 24 >> 24 < 0) {
   $125 = HEAP8[$124] | 0; //@line 30114
   HEAP8[$22] = $125; //@line 30115
   $128 = ($125 & 255) << 24 ^ $_2_7_i; //@line 30118
   $130 = $128 << 1; //@line 30120
   $_2_i69 = ($128 | 0) < 0 ? $130 ^ 79764919 : $130; //@line 30122
   $133 = $_2_i69 << 1; //@line 30124
   $_2_1_i70 = ($_2_i69 | 0) < 0 ? $133 ^ 79764919 : $133; //@line 30126
   $136 = $_2_1_i70 << 1; //@line 30128
   $_2_2_i71 = ($_2_1_i70 | 0) < 0 ? $136 ^ 79764919 : $136; //@line 30130
   $139 = $_2_2_i71 << 1; //@line 30132
   $_2_3_i72 = ($_2_2_i71 | 0) < 0 ? $139 ^ 79764919 : $139; //@line 30134
   $142 = $_2_3_i72 << 1; //@line 30136
   $_2_4_i73 = ($_2_3_i72 | 0) < 0 ? $142 ^ 79764919 : $142; //@line 30138
   $145 = $_2_4_i73 << 1; //@line 30140
   $_2_5_i74 = ($_2_4_i73 | 0) < 0 ? $145 ^ 79764919 : $145; //@line 30142
   $148 = $_2_5_i74 << 1; //@line 30144
   $_2_6_i75 = ($_2_5_i74 | 0) < 0 ? $148 ^ 79764919 : $148; //@line 30146
   $150 = $_2_6_i75 << 1; //@line 30147
   if ((_psi_write($fp, $22, 1) | 0) == 0) {
    $159 = (HEAPU8[$22] | 0) << 24 ^ HEAP32[15666]; //@line 30159
    $161 = $159 << 1; //@line 30161
    $_2_i_i95 = ($159 | 0) < 0 ? $161 ^ 79764919 : $161; //@line 30163
    $164 = $_2_i_i95 << 1; //@line 30165
    $_2_1_i_i96 = ($_2_i_i95 | 0) < 0 ? $164 ^ 79764919 : $164; //@line 30167
    $167 = $_2_1_i_i96 << 1; //@line 30169
    $_2_2_i_i97 = ($_2_1_i_i96 | 0) < 0 ? $167 ^ 79764919 : $167; //@line 30171
    $170 = $_2_2_i_i97 << 1; //@line 30173
    $_2_3_i_i98 = ($_2_2_i_i97 | 0) < 0 ? $170 ^ 79764919 : $170; //@line 30175
    $173 = $_2_3_i_i98 << 1; //@line 30177
    $_2_4_i_i99 = ($_2_3_i_i98 | 0) < 0 ? $173 ^ 79764919 : $173; //@line 30179
    $176 = $_2_4_i_i99 << 1; //@line 30181
    $_2_5_i_i100 = ($_2_4_i_i99 | 0) < 0 ? $176 ^ 79764919 : $176; //@line 30183
    $179 = $_2_5_i_i100 << 1; //@line 30185
    $_2_6_i_i101 = ($_2_5_i_i100 | 0) < 0 ? $179 ^ 79764919 : $179; //@line 30187
    $182 = $_2_6_i_i101 << 1; //@line 30189
    $crc_0 = ($_2_6_i75 | 0) < 0 ? $150 ^ 79764919 : $150;
    $storemerge = ($_2_6_i_i101 | 0) < 0 ? $182 ^ 79764919 : $182;
    break;
   } else {
    $_0 = 1; //@line 30195
    STACKTOP = sp; //@line 30197
    return $_0 | 0; //@line 30198
   }
  } else {
   $185 = HEAP16[$47 >> 1] | 0; //@line 30201
   $186 = $185 << 16 >> 16 == 0; //@line 30202
   if ($186) {
    $_09_lcssa_i = $_2_7_i;
    $_pre_phi = 0;
   } else {
    $187 = $185 & 65535; //@line 30207
    $_0912_i81 = $_2_7_i;
    $_013_i80 = $187;
    $tmp_014_i79 = $124;
    while (1) {
     $191 = (HEAPU8[$tmp_014_i79] | 0) << 24 ^ $_0912_i81; //@line 30217
     $193 = $191 << 1; //@line 30219
     $_2_i82 = ($191 | 0) < 0 ? $193 ^ 79764919 : $193; //@line 30221
     $196 = $_2_i82 << 1; //@line 30223
     $_2_1_i83 = ($_2_i82 | 0) < 0 ? $196 ^ 79764919 : $196; //@line 30225
     $199 = $_2_1_i83 << 1; //@line 30227
     $_2_2_i84 = ($_2_1_i83 | 0) < 0 ? $199 ^ 79764919 : $199; //@line 30229
     $202 = $_2_2_i84 << 1; //@line 30231
     $_2_3_i85 = ($_2_2_i84 | 0) < 0 ? $202 ^ 79764919 : $202; //@line 30233
     $205 = $_2_3_i85 << 1; //@line 30235
     $_2_4_i86 = ($_2_3_i85 | 0) < 0 ? $205 ^ 79764919 : $205; //@line 30237
     $208 = $_2_4_i86 << 1; //@line 30239
     $_2_5_i87 = ($_2_4_i86 | 0) < 0 ? $208 ^ 79764919 : $208; //@line 30241
     $211 = $_2_5_i87 << 1; //@line 30243
     $_2_6_i88 = ($_2_5_i87 | 0) < 0 ? $211 ^ 79764919 : $211; //@line 30245
     $214 = $_2_6_i88 << 1; //@line 30247
     $_2_7_i89 = ($_2_6_i88 | 0) < 0 ? $214 ^ 79764919 : $214; //@line 30249
     $217 = $_013_i80 - 1 | 0; //@line 30251
     if (($217 | 0) == 0) {
      $_09_lcssa_i = $_2_7_i89;
      $_pre_phi = $187;
      break;
     } else {
      $_0912_i81 = $_2_7_i89;
      $_013_i80 = $217;
      $tmp_014_i79 = $tmp_014_i79 + 1 | 0;
     }
    }
   }
   if ((_psi_write($fp, $124, $_pre_phi) | 0) != 0) {
    $_0 = 1; //@line 30268
    STACKTOP = sp; //@line 30270
    return $_0 | 0; //@line 30271
   }
   $222 = HEAP32[15666] | 0; //@line 30273
   if ($186) {
    $crc_0 = $_09_lcssa_i;
    $storemerge = $222;
    break;
   } else {
    $_0912_i_i37 = $222;
    $_013_i_i36 = $_pre_phi;
    $tmp_014_i_i35 = $124;
   }
   while (1) {
    $226 = (HEAPU8[$tmp_014_i_i35] | 0) << 24 ^ $_0912_i_i37; //@line 30288
    $228 = $226 << 1; //@line 30290
    $_2_i_i38 = ($226 | 0) < 0 ? $228 ^ 79764919 : $228; //@line 30292
    $231 = $_2_i_i38 << 1; //@line 30294
    $_2_1_i_i39 = ($_2_i_i38 | 0) < 0 ? $231 ^ 79764919 : $231; //@line 30296
    $234 = $_2_1_i_i39 << 1; //@line 30298
    $_2_2_i_i40 = ($_2_1_i_i39 | 0) < 0 ? $234 ^ 79764919 : $234; //@line 30300
    $237 = $_2_2_i_i40 << 1; //@line 30302
    $_2_3_i_i41 = ($_2_2_i_i40 | 0) < 0 ? $237 ^ 79764919 : $237; //@line 30304
    $240 = $_2_3_i_i41 << 1; //@line 30306
    $_2_4_i_i42 = ($_2_3_i_i41 | 0) < 0 ? $240 ^ 79764919 : $240; //@line 30308
    $243 = $_2_4_i_i42 << 1; //@line 30310
    $_2_5_i_i43 = ($_2_4_i_i42 | 0) < 0 ? $243 ^ 79764919 : $243; //@line 30312
    $246 = $_2_5_i_i43 << 1; //@line 30314
    $_2_6_i_i44 = ($_2_5_i_i43 | 0) < 0 ? $246 ^ 79764919 : $246; //@line 30316
    $249 = $_2_6_i_i44 << 1; //@line 30318
    $_2_7_i_i45 = ($_2_6_i_i44 | 0) < 0 ? $249 ^ 79764919 : $249; //@line 30320
    $252 = $_013_i_i36 - 1 | 0; //@line 30322
    if (($252 | 0) == 0) {
     $crc_0 = $_09_lcssa_i;
     $storemerge = $_2_7_i_i45;
     break;
    } else {
     $_0912_i_i37 = $_2_7_i_i45;
     $_013_i_i36 = $252;
     $tmp_014_i_i35 = $tmp_014_i_i35 + 1 | 0;
    }
   }
  }
 } while (0);
 HEAP32[15666] = $storemerge; //@line 30336
 _psi_set_uint32_be($22, 0, $crc_0); //@line 30337
 if ((_psi_write($fp, $22, 4) | 0) != 0) {
  $_0 = 1; //@line 30342
  STACKTOP = sp; //@line 30344
  return $_0 | 0; //@line 30345
 }
 $_0912_i_i = HEAP32[15666] | 0;
 $_013_i_i = 4;
 $tmp_014_i_i = $22;
 while (1) {
  $261 = (HEAPU8[$tmp_014_i_i] | 0) << 24 ^ $_0912_i_i; //@line 30356
  $263 = $261 << 1; //@line 30358
  $_2_i_i = ($261 | 0) < 0 ? $263 ^ 79764919 : $263; //@line 30360
  $266 = $_2_i_i << 1; //@line 30362
  $_2_1_i_i = ($_2_i_i | 0) < 0 ? $266 ^ 79764919 : $266; //@line 30364
  $269 = $_2_1_i_i << 1; //@line 30366
  $_2_2_i_i = ($_2_1_i_i | 0) < 0 ? $269 ^ 79764919 : $269; //@line 30368
  $272 = $_2_2_i_i << 1; //@line 30370
  $_2_3_i_i = ($_2_2_i_i | 0) < 0 ? $272 ^ 79764919 : $272; //@line 30372
  $275 = $_2_3_i_i << 1; //@line 30374
  $_2_4_i_i = ($_2_3_i_i | 0) < 0 ? $275 ^ 79764919 : $275; //@line 30376
  $278 = $_2_4_i_i << 1; //@line 30378
  $_2_5_i_i = ($_2_4_i_i | 0) < 0 ? $278 ^ 79764919 : $278; //@line 30380
  $281 = $_2_5_i_i << 1; //@line 30382
  $_2_6_i_i = ($_2_5_i_i | 0) < 0 ? $281 ^ 79764919 : $281; //@line 30384
  $284 = $_2_6_i_i << 1; //@line 30386
  $_2_7_i_i = ($_2_6_i_i | 0) < 0 ? $284 ^ 79764919 : $284; //@line 30388
  $287 = $_013_i_i - 1 | 0; //@line 30390
  if (($287 | 0) == 0) {
   break;
  } else {
   $_0912_i_i = $_2_7_i_i;
   $_013_i_i = $287;
   $tmp_014_i_i = $tmp_014_i_i + 1 | 0;
  }
 }
 HEAP32[15666] = $_2_7_i_i; //@line 30399
 $290 = _psi_sct_get_tags($sct, $22, 256) | 0; //@line 30400
 do {
  if (($290 | 0) != 0) {
   if ((_pfdc2_save_chunk($fp, 21575, $290, $22) | 0) == 0) {
    break;
   } else {
    $_0 = 1; //@line 30411
   }
   STACKTOP = sp; //@line 30414
   return $_0 | 0; //@line 30415
  }
 } while (0);
 $_0 = 0; //@line 30419
 STACKTOP = sp; //@line 30421
 return $_0 | 0; //@line 30422
}
function _pfdc4_load_fp($fp, $img, $id, $sz) {
 $fp = $fp | 0;
 $img = $img | 0;
 $id = $id | 0;
 $sz = $sz | 0;
 var $buf_i99 = 0, $buf_i59 = 0, $buf_i21 = 0, $buf_i = 0, $buf = 0, $1 = 0, $i_017_i = 0, $3 = 0, $reg_1_i = 0, $6 = 0, $reg_1_1_i = 0, $9 = 0, $reg_1_2_i = 0, $12 = 0, $reg_1_3_i = 0, $15 = 0, $reg_1_4_i = 0, $18 = 0, $reg_1_5_i = 0, $21 = 0, $reg_1_6_i = 0, $24 = 0, $30 = 0, $34 = 0, $36 = 0, $43 = 0, $45 = 0, $52 = 0, $54 = 0, $61 = 0, $63 = 0, $70 = 0, $72 = 0, $79 = 0, $81 = 0, $88 = 0, $96 = 0, $97 = 0, $i_017_i_i = 0, $104 = 0, $reg_1_i_i = 0, $107 = 0, $reg_1_1_i_i = 0, $110 = 0, $reg_1_2_i_i = 0, $113 = 0, $reg_1_3_i_i = 0, $116 = 0, $reg_1_4_i_i = 0, $119 = 0, $reg_1_5_i_i = 0, $122 = 0, $reg_1_6_i_i = 0, $125 = 0, $139 = 0, $148 = 0, $157 = 0, $165 = 0, $166 = 0, $169 = 0, $172 = 0, $173 = 0, $_08_i42_i = 0, $crc333541_i = 0, $176 = 0, $i_017_i10_i = 0, $181 = 0, $reg_1_i12_i = 0, $184 = 0, $reg_1_1_i13_i = 0, $187 = 0, $reg_1_2_i14_i = 0, $190 = 0, $reg_1_3_i15_i = 0, $193 = 0, $reg_1_4_i16_i = 0, $196 = 0, $reg_1_5_i17_i = 0, $199 = 0, $reg_1_6_i18_i = 0, $202 = 0, $src_013_i22_i = 0, $_012_i23_i = 0, $_01011_i24_i = 0, $217 = 0, $218 = 0, $crc3334_ph_i = 0, $crc3335_lcssa_i = 0, $227 = 0, $228 = 0, $229 = 0, $230 = 0, $231 = 0, $233 = 0, $i_017_i26 = 0, $237 = 0, $reg_1_i28 = 0, $240 = 0, $reg_1_1_i29 = 0, $243 = 0, $reg_1_2_i30 = 0, $246 = 0, $reg_1_3_i31 = 0, $249 = 0, $reg_1_4_i32 = 0, $252 = 0, $reg_1_5_i33 = 0, $255 = 0, $reg_1_6_i34 = 0, $258 = 0, $267 = 0, $275 = 0, $283 = 0, $291 = 0, $299 = 0, $307 = 0, $315 = 0, $323 = 0, $324 = 0, $325 = 0, $_08_i17_i = 0, $crc1116_i = 0, $329 = 0, $i_017_i_i46 = 0, $334 = 0, $reg_1_i_i48 = 0, $337 = 0, $reg_1_1_i_i49 = 0, $340 = 0, $reg_1_2_i_i50 = 0, $343 = 0, $reg_1_3_i_i51 = 0, $346 = 0, $reg_1_4_i_i52 = 0, $349 = 0, $reg_1_5_i_i53 = 0, $352 = 0, $reg_1_6_i_i54 = 0, $355 = 0, $src_013_i_i = 0, $_012_i_i = 0, $_01011_i_i = 0, $370 = 0, $371 = 0, $crc10_ph_i = 0, $crc11_lcssa_i = 0, $i_017_i_i61 = 0, $390 = 0, $reg_1_i_i63 = 0, $393 = 0, $reg_1_1_i_i64 = 0, $396 = 0, $reg_1_2_i_i65 = 0, $399 = 0, $reg_1_3_i_i66 = 0, $402 = 0, $reg_1_4_i_i67 = 0, $405 = 0, $reg_1_5_i_i68 = 0, $408 = 0, $reg_1_6_i_i69 = 0, $411 = 0, $src_013_i_i72 = 0, $_012_i_i73 = 0, $_01011_i_i74 = 0, $425 = 0, $426 = 0, $429 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $444 = 0, $451 = 0, $458 = 0, $465 = 0, $468 = 0, $483 = 0, $_08_i60_i = 0, $crc515359_i = 0, $492 = 0, $i_017_i28_i = 0, $497 = 0, $reg_1_i30_i = 0, $500 = 0, $reg_1_1_i31_i = 0, $503 = 0, $reg_1_2_i32_i = 0, $506 = 0, $reg_1_3_i33_i = 0, $509 = 0, $reg_1_4_i34_i = 0, $512 = 0, $reg_1_5_i35_i = 0, $515 = 0, $reg_1_6_i36_i = 0, $518 = 0, $src_013_i40_i = 0, $_012_i41_i = 0, $_01011_i42_i = 0, $533 = 0, $534 = 0, $crc5152_ph_i = 0, $crc5153_lcssa_i = 0, $_ph = 0, $545 = 0, $546 = 0, $547 = 0, $553 = 0, $_size_i = 0, $557 = 0, $i_017_i_i80 = 0, $562 = 0, $reg_1_i_i82 = 0, $565 = 0, $reg_1_1_i_i83 = 0, $568 = 0, $reg_1_2_i_i84 = 0, $571 = 0, $reg_1_3_i_i85 = 0, $574 = 0, $reg_1_4_i_i86 = 0, $577 = 0, $reg_1_5_i_i87 = 0, $580 = 0, $reg_1_6_i_i88 = 0, $583 = 0, $src_013_i_i91 = 0, $_012_i_i92 = 0, $_01011_i_i93 = 0, $597 = 0, $598 = 0, $crc30_i = 0, $_08_i38_i = 0, $crc303237_i = 0, $604 = 0, $i_017_i5_i = 0, $609 = 0, $reg_1_i7_i = 0, $612 = 0, $reg_1_1_i8_i = 0, $615 = 0, $reg_1_2_i9_i = 0, $618 = 0, $reg_1_3_i10_i = 0, $621 = 0, $reg_1_4_i11_i = 0, $624 = 0, $reg_1_5_i12_i = 0, $627 = 0, $reg_1_6_i13_i = 0, $630 = 0, $src_013_i17_i = 0, $_012_i18_i = 0, $_01011_i19_i = 0, $645 = 0, $646 = 0, $crc3031_ph_i = 0, $crc3032_lcssa_i = 0, $660 = 0, $i_017_i_i101 = 0, $665 = 0, $reg_1_i_i103 = 0, $668 = 0, $reg_1_1_i_i104 = 0, $671 = 0, $reg_1_2_i_i105 = 0, $674 = 0, $reg_1_3_i_i106 = 0, $677 = 0, $reg_1_4_i_i107 = 0, $680 = 0, $reg_1_5_i_i108 = 0, $683 = 0, $reg_1_6_i_i109 = 0, $686 = 0, $src_013_i_i113 = 0, $_012_i_i114 = 0, $_01011_i_i115 = 0, $701 = 0, $702 = 0, $crc38_ph_i = 0, $_08_i47_i = 0, $crc384046_i = 0, $709 = 0, $i_017_i14_i = 0, $714 = 0, $reg_1_i16_i = 0, $717 = 0, $reg_1_1_i17_i = 0, $720 = 0, $reg_1_2_i18_i = 0, $723 = 0, $reg_1_3_i19_i = 0, $726 = 0, $reg_1_4_i20_i = 0, $729 = 0, $reg_1_5_i21_i = 0, $732 = 0, $reg_1_6_i22_i = 0, $735 = 0, $src_013_i26_i = 0, $_012_i27_i = 0, $_01011_i28_i = 0, $750 = 0, $751 = 0, $crc3839_ph_i = 0, $crc3840_lcssa_i = 0, $773 = 0, $i_017_i_i121 = 0, $780 = 0, $reg_1_i_i123 = 0, $783 = 0, $reg_1_1_i_i124 = 0, $786 = 0, $reg_1_2_i_i125 = 0, $789 = 0, $reg_1_3_i_i126 = 0, $792 = 0, $reg_1_4_i_i127 = 0, $795 = 0, $reg_1_5_i_i128 = 0, $798 = 0, $reg_1_6_i_i129 = 0, $801 = 0, $src_013_i_i132 = 0, $_012_i_i133 = 0, $_01011_i_i134 = 0, $815 = 0, $816 = 0, $820 = 0, $_size_i136 = 0, $824 = 0, $n_1_i = 0, $830 = 0, $_0_i24_i = 0, $_08_i197 = 0, $844 = 0, $846 = 0, $i_017_i142 = 0, $851 = 0, $reg_1_i144 = 0, $854 = 0, $reg_1_1_i145 = 0, $857 = 0, $reg_1_2_i146 = 0, $860 = 0, $reg_1_3_i147 = 0, $863 = 0, $reg_1_4_i148 = 0, $866 = 0, $reg_1_5_i149 = 0, $869 = 0, $reg_1_6_i150 = 0, $872 = 0, $src_013_i154 = 0, $_012_i155 = 0, $_01011_i156 = 0, $887 = 0, $888 = 0, $_ph178 = 0, $_lcssa195 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 30561
 STACKTOP = STACKTOP + 560 | 0; //@line 30561
 $buf_i99 = sp | 0; //@line 30562
 $buf_i59 = sp + 256 | 0; //@line 30563
 $buf_i21 = sp + 288 | 0; //@line 30564
 $buf_i = sp + 296 | 0; //@line 30565
 $buf = sp + 552 | 0; //@line 30566
 $1 = $buf | 0; //@line 30567
 _psi_set_uint32_be($1, 0, $id); //@line 30568
 _psi_set_uint32_be($1, 4, $sz); //@line 30569
 if (!(HEAP8[6664] | 0)) {
  $i_017_i = 0; //@line 30573
  do {
   $3 = $i_017_i << 25; //@line 30578
   $reg_1_i = ($i_017_i & 128 | 0) != 0 ? $3 ^ 517762881 : $3; //@line 30580
   $6 = $reg_1_i << 1; //@line 30582
   $reg_1_1_i = ($reg_1_i | 0) < 0 ? $6 ^ 517762881 : $6; //@line 30584
   $9 = $reg_1_1_i << 1; //@line 30586
   $reg_1_2_i = ($reg_1_1_i | 0) < 0 ? $9 ^ 517762881 : $9; //@line 30588
   $12 = $reg_1_2_i << 1; //@line 30590
   $reg_1_3_i = ($reg_1_2_i | 0) < 0 ? $12 ^ 517762881 : $12; //@line 30592
   $15 = $reg_1_3_i << 1; //@line 30594
   $reg_1_4_i = ($reg_1_3_i | 0) < 0 ? $15 ^ 517762881 : $15; //@line 30596
   $18 = $reg_1_4_i << 1; //@line 30598
   $reg_1_5_i = ($reg_1_4_i | 0) < 0 ? $18 ^ 517762881 : $18; //@line 30600
   $21 = $reg_1_5_i << 1; //@line 30602
   $reg_1_6_i = ($reg_1_5_i | 0) < 0 ? $21 ^ 517762881 : $21; //@line 30604
   $24 = $reg_1_6_i << 1; //@line 30606
   HEAP32[60264 + ($i_017_i << 2) >> 2] = ($reg_1_6_i | 0) < 0 ? $24 ^ 517762881 : $24; //@line 30610
   $i_017_i = $i_017_i + 1 | 0; //@line 30611
  } while ($i_017_i >>> 0 < 256);
  HEAP8[6664] = 1; //@line 30620
 }
 $30 = $buf + 1 | 0; //@line 30623
 $34 = HEAP32[60264 + (HEAPU8[$1] << 2) >> 2] | 0; //@line 30627
 $36 = $buf + 2 | 0; //@line 30629
 $43 = HEAP32[60264 + ((HEAPU8[$30] ^ $34 >>> 24) << 2) >> 2] ^ $34 << 8; //@line 30636
 $45 = $buf + 3 | 0; //@line 30638
 $52 = HEAP32[60264 + ((HEAPU8[$36] ^ $43 >>> 24) << 2) >> 2] ^ $43 << 8; //@line 30645
 $54 = $buf + 4 | 0; //@line 30647
 $61 = HEAP32[60264 + ((HEAPU8[$45] ^ $52 >>> 24) << 2) >> 2] ^ $52 << 8; //@line 30654
 $63 = $buf + 5 | 0; //@line 30656
 $70 = HEAP32[60264 + ((HEAPU8[$54] ^ $61 >>> 24) << 2) >> 2] ^ $61 << 8; //@line 30663
 $72 = $buf + 6 | 0; //@line 30665
 $79 = HEAP32[60264 + ((HEAPU8[$63] ^ $70 >>> 24) << 2) >> 2] ^ $70 << 8; //@line 30672
 $81 = $buf + 7 | 0; //@line 30674
 $88 = HEAP32[60264 + ((HEAPU8[$72] ^ $79 >>> 24) << 2) >> 2] ^ $79 << 8; //@line 30681
 $96 = HEAP32[60264 + ((HEAPU8[$81] ^ $88 >>> 24) << 2) >> 2] ^ $88 << 8; //@line 30689
 $97 = $buf_i21 | 0; //@line 30690
 if ($sz >>> 0 < 4) {
  $_0 = 1; //@line 30694
  STACKTOP = sp; //@line 30696
  return $_0 | 0; //@line 30697
 }
 if ((_fread($97 | 0, 1, 4, $fp | 0) | 0) != 4) {
  $_0 = 1; //@line 30703
  STACKTOP = sp; //@line 30705
  return $_0 | 0; //@line 30706
 }
 if (!(HEAP8[6664] | 0)) {
  $i_017_i_i = 0; //@line 30711
  do {
   $104 = $i_017_i_i << 25; //@line 30716
   $reg_1_i_i = ($i_017_i_i & 128 | 0) != 0 ? $104 ^ 517762881 : $104; //@line 30718
   $107 = $reg_1_i_i << 1; //@line 30720
   $reg_1_1_i_i = ($reg_1_i_i | 0) < 0 ? $107 ^ 517762881 : $107; //@line 30722
   $110 = $reg_1_1_i_i << 1; //@line 30724
   $reg_1_2_i_i = ($reg_1_1_i_i | 0) < 0 ? $110 ^ 517762881 : $110; //@line 30726
   $113 = $reg_1_2_i_i << 1; //@line 30728
   $reg_1_3_i_i = ($reg_1_2_i_i | 0) < 0 ? $113 ^ 517762881 : $113; //@line 30730
   $116 = $reg_1_3_i_i << 1; //@line 30732
   $reg_1_4_i_i = ($reg_1_3_i_i | 0) < 0 ? $116 ^ 517762881 : $116; //@line 30734
   $119 = $reg_1_4_i_i << 1; //@line 30736
   $reg_1_5_i_i = ($reg_1_4_i_i | 0) < 0 ? $119 ^ 517762881 : $119; //@line 30738
   $122 = $reg_1_5_i_i << 1; //@line 30740
   $reg_1_6_i_i = ($reg_1_5_i_i | 0) < 0 ? $122 ^ 517762881 : $122; //@line 30742
   $125 = $reg_1_6_i_i << 1; //@line 30744
   HEAP32[60264 + ($i_017_i_i << 2) >> 2] = ($reg_1_6_i_i | 0) < 0 ? $125 ^ 517762881 : $125; //@line 30748
   $i_017_i_i = $i_017_i_i + 1 | 0; //@line 30749
  } while ($i_017_i_i >>> 0 < 256);
  HEAP8[6664] = 1; //@line 30758
 }
 $139 = HEAP32[60264 + ((HEAPU8[$97] ^ $96 >>> 24) << 2) >> 2] ^ $96 << 8; //@line 30769
 $148 = HEAP32[60264 + ((HEAPU8[$buf_i21 + 1 | 0] ^ $139 >>> 24) << 2) >> 2] ^ $139 << 8; //@line 30778
 $157 = HEAP32[60264 + ((HEAPU8[$buf_i21 + 2 | 0] ^ $148 >>> 24) << 2) >> 2] ^ $148 << 8; //@line 30787
 $165 = HEAP32[60264 + ((HEAPU8[$buf_i21 + 3 | 0] ^ $157 >>> 24) << 2) >> 2] ^ $157 << 8; //@line 30795
 $166 = _psi_get_uint32_be($97, 0) | 0; //@line 30796
 if (($166 | 0) != 262144) {
  $169 = HEAP32[_stderr >> 2] | 0; //@line 30800
  _fprintf($169 | 0, 49992, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $166, tempInt) | 0) | 0; //@line 30801
  $_0 = 1; //@line 30803
  STACKTOP = sp; //@line 30805
  return $_0 | 0; //@line 30806
 }
 $172 = $sz - 4 | 0; //@line 30808
 $173 = $buf_i | 0; //@line 30809
 L16781 : do {
  if (($172 | 0) == 0) {
   $crc3335_lcssa_i = $165; //@line 30814
  } else {
   $crc333541_i = $165;
   $_08_i42_i = $172;
   while (1) {
    $176 = $_08_i42_i >>> 0 < 256 ? $_08_i42_i : 256; //@line 30821
    if ((_fread($173 | 0, 1, $176 | 0, $fp | 0) | 0) != ($176 | 0)) {
     $_0 = 1; //@line 30826
     break;
    }
    if (!(HEAP8[6664] | 0)) {
     $i_017_i10_i = 0; //@line 30832
     do {
      $181 = $i_017_i10_i << 25; //@line 30837
      $reg_1_i12_i = ($i_017_i10_i & 128 | 0) != 0 ? $181 ^ 517762881 : $181; //@line 30839
      $184 = $reg_1_i12_i << 1; //@line 30841
      $reg_1_1_i13_i = ($reg_1_i12_i | 0) < 0 ? $184 ^ 517762881 : $184; //@line 30843
      $187 = $reg_1_1_i13_i << 1; //@line 30845
      $reg_1_2_i14_i = ($reg_1_1_i13_i | 0) < 0 ? $187 ^ 517762881 : $187; //@line 30847
      $190 = $reg_1_2_i14_i << 1; //@line 30849
      $reg_1_3_i15_i = ($reg_1_2_i14_i | 0) < 0 ? $190 ^ 517762881 : $190; //@line 30851
      $193 = $reg_1_3_i15_i << 1; //@line 30853
      $reg_1_4_i16_i = ($reg_1_3_i15_i | 0) < 0 ? $193 ^ 517762881 : $193; //@line 30855
      $196 = $reg_1_4_i16_i << 1; //@line 30857
      $reg_1_5_i17_i = ($reg_1_4_i16_i | 0) < 0 ? $196 ^ 517762881 : $196; //@line 30859
      $199 = $reg_1_5_i17_i << 1; //@line 30861
      $reg_1_6_i18_i = ($reg_1_5_i17_i | 0) < 0 ? $199 ^ 517762881 : $199; //@line 30863
      $202 = $reg_1_6_i18_i << 1; //@line 30865
      HEAP32[60264 + ($i_017_i10_i << 2) >> 2] = ($reg_1_6_i18_i | 0) < 0 ? $202 ^ 517762881 : $202; //@line 30869
      $i_017_i10_i = $i_017_i10_i + 1 | 0; //@line 30870
     } while ($i_017_i10_i >>> 0 < 256);
     HEAP8[6664] = 1; //@line 30879
    }
    if (($176 | 0) == 0) {
     $crc3334_ph_i = $crc333541_i; //@line 30885
    } else {
     $_01011_i24_i = $176;
     $_012_i23_i = $crc333541_i;
     $src_013_i22_i = $173;
     while (1) {
      $217 = HEAP32[60264 + ((HEAPU8[$src_013_i22_i] ^ $_012_i23_i >>> 24) << 2) >> 2] ^ $_012_i23_i << 8; //@line 30900
      $218 = $_01011_i24_i - 1 | 0; //@line 30901
      if (($218 | 0) == 0) {
       $crc3334_ph_i = $217; //@line 30905
       break;
      } else {
       $_01011_i24_i = $218;
       $_012_i23_i = $217;
       $src_013_i22_i = $src_013_i22_i + 1 | 0;
      }
     }
    }
    if (($_08_i42_i | 0) == ($176 | 0)) {
     $crc3335_lcssa_i = $crc3334_ph_i; //@line 30917
     break L16781;
    } else {
     $crc333541_i = $crc3334_ph_i;
     $_08_i42_i = $_08_i42_i - $176 | 0;
    }
   }
   STACKTOP = sp; //@line 30924
   return $_0 | 0; //@line 30925
  }
 } while (0);
 if ((_fread($173 | 0, 1, 4, $fp | 0) | 0) != 4) {
  $_0 = 1; //@line 30933
  STACKTOP = sp; //@line 30935
  return $_0 | 0; //@line 30936
 }
 if ((_psi_get_uint32_be($173, 0) | 0) != ($crc3335_lcssa_i | 0)) {
  $233 = HEAP32[_stderr >> 2] | 0; //@line 30942
  _fwrite(52760, 16, 1, $233 | 0) | 0; //@line 30943
  $_0 = 1; //@line 30945
  STACKTOP = sp; //@line 30947
  return $_0 | 0; //@line 30948
 }
 $227 = $buf_i99 | 0; //@line 30950
 $228 = HEAP32[_stderr >> 2] | 0; //@line 30951
 $229 = $buf_i59 | 0; //@line 30952
 $230 = $buf_i59 + 12 | 0; //@line 30953
 $231 = $buf_i59 + 13 | 0; //@line 30954
 $_ph = 0; //@line 30956
 L16803 : while (1) {
  if ((_fread($1 | 0, 1, 8, $fp | 0) | 0) != 8) {
   $_0 = 1; //@line 30963
   label = 13418; //@line 30964
   break;
  }
  $545 = ($_ph | 0) == 0; //@line 30967
  $546 = $_ph + 10 | 0; //@line 30968
  $547 = $_ph + 24 | 0; //@line 30969
  L16806 : while (1) {
   if (!(HEAP8[6664] | 0)) {
    $i_017_i26 = 0; //@line 30975
    do {
     $237 = $i_017_i26 << 25; //@line 30980
     $reg_1_i28 = ($i_017_i26 & 128 | 0) != 0 ? $237 ^ 517762881 : $237; //@line 30982
     $240 = $reg_1_i28 << 1; //@line 30984
     $reg_1_1_i29 = ($reg_1_i28 | 0) < 0 ? $240 ^ 517762881 : $240; //@line 30986
     $243 = $reg_1_1_i29 << 1; //@line 30988
     $reg_1_2_i30 = ($reg_1_1_i29 | 0) < 0 ? $243 ^ 517762881 : $243; //@line 30990
     $246 = $reg_1_2_i30 << 1; //@line 30992
     $reg_1_3_i31 = ($reg_1_2_i30 | 0) < 0 ? $246 ^ 517762881 : $246; //@line 30994
     $249 = $reg_1_3_i31 << 1; //@line 30996
     $reg_1_4_i32 = ($reg_1_3_i31 | 0) < 0 ? $249 ^ 517762881 : $249; //@line 30998
     $252 = $reg_1_4_i32 << 1; //@line 31000
     $reg_1_5_i33 = ($reg_1_4_i32 | 0) < 0 ? $252 ^ 517762881 : $252; //@line 31002
     $255 = $reg_1_5_i33 << 1; //@line 31004
     $reg_1_6_i34 = ($reg_1_5_i33 | 0) < 0 ? $255 ^ 517762881 : $255; //@line 31006
     $258 = $reg_1_6_i34 << 1; //@line 31008
     HEAP32[60264 + ($i_017_i26 << 2) >> 2] = ($reg_1_6_i34 | 0) < 0 ? $258 ^ 517762881 : $258; //@line 31012
     $i_017_i26 = $i_017_i26 + 1 | 0; //@line 31013
    } while ($i_017_i26 >>> 0 < 256);
    HEAP8[6664] = 1; //@line 31022
   }
   $267 = HEAP32[60264 + (HEAPU8[$1] << 2) >> 2] | 0; //@line 31028
   $275 = HEAP32[60264 + ((HEAPU8[$30] ^ $267 >>> 24) << 2) >> 2] ^ $267 << 8; //@line 31036
   $283 = HEAP32[60264 + ((HEAPU8[$36] ^ $275 >>> 24) << 2) >> 2] ^ $275 << 8; //@line 31044
   $291 = HEAP32[60264 + ((HEAPU8[$45] ^ $283 >>> 24) << 2) >> 2] ^ $283 << 8; //@line 31052
   $299 = HEAP32[60264 + ((HEAPU8[$54] ^ $291 >>> 24) << 2) >> 2] ^ $291 << 8; //@line 31060
   $307 = HEAP32[60264 + ((HEAPU8[$63] ^ $299 >>> 24) << 2) >> 2] ^ $299 << 8; //@line 31068
   $315 = HEAP32[60264 + ((HEAPU8[$72] ^ $307 >>> 24) << 2) >> 2] ^ $307 << 8; //@line 31076
   $323 = HEAP32[60264 + ((HEAPU8[$81] ^ $315 >>> 24) << 2) >> 2] ^ $315 << 8; //@line 31084
   $324 = _psi_get_uint32_be($1, 0) | 0; //@line 31085
   $325 = _psi_get_uint32_be($1, 4) | 0; //@line 31086
   do {
    if (($324 | 0) == 1413564243) {
     if ($545) {
      $_0 = 1; //@line 31091
      label = 13409; //@line 31092
      break L16803;
     }
     $660 = $325 >>> 0 < 256 ? $325 : 256; //@line 31096
     if ((_fread($227 | 0, 1, $660 | 0, $fp | 0) | 0) != ($660 | 0)) {
      $_0 = 1; //@line 31101
      label = 13437; //@line 31102
      break L16803;
     }
     if (!(HEAP8[6664] | 0)) {
      $i_017_i_i101 = 0; //@line 31108
      do {
       $665 = $i_017_i_i101 << 25; //@line 31113
       $reg_1_i_i103 = ($i_017_i_i101 & 128 | 0) != 0 ? $665 ^ 517762881 : $665; //@line 31115
       $668 = $reg_1_i_i103 << 1; //@line 31117
       $reg_1_1_i_i104 = ($reg_1_i_i103 | 0) < 0 ? $668 ^ 517762881 : $668; //@line 31119
       $671 = $reg_1_1_i_i104 << 1; //@line 31121
       $reg_1_2_i_i105 = ($reg_1_1_i_i104 | 0) < 0 ? $671 ^ 517762881 : $671; //@line 31123
       $674 = $reg_1_2_i_i105 << 1; //@line 31125
       $reg_1_3_i_i106 = ($reg_1_2_i_i105 | 0) < 0 ? $674 ^ 517762881 : $674; //@line 31127
       $677 = $reg_1_3_i_i106 << 1; //@line 31129
       $reg_1_4_i_i107 = ($reg_1_3_i_i106 | 0) < 0 ? $677 ^ 517762881 : $677; //@line 31131
       $680 = $reg_1_4_i_i107 << 1; //@line 31133
       $reg_1_5_i_i108 = ($reg_1_4_i_i107 | 0) < 0 ? $680 ^ 517762881 : $680; //@line 31135
       $683 = $reg_1_5_i_i108 << 1; //@line 31137
       $reg_1_6_i_i109 = ($reg_1_5_i_i108 | 0) < 0 ? $683 ^ 517762881 : $683; //@line 31139
       $686 = $reg_1_6_i_i109 << 1; //@line 31141
       HEAP32[60264 + ($i_017_i_i101 << 2) >> 2] = ($reg_1_6_i_i109 | 0) < 0 ? $686 ^ 517762881 : $686; //@line 31145
       $i_017_i_i101 = $i_017_i_i101 + 1 | 0; //@line 31146
      } while ($i_017_i_i101 >>> 0 < 256);
      HEAP8[6664] = 1; //@line 31155
     }
     if (($660 | 0) == 0) {
      $crc38_ph_i = $323; //@line 31161
     } else {
      $_01011_i_i115 = $660;
      $_012_i_i114 = $323;
      $src_013_i_i113 = $227;
      while (1) {
       $701 = HEAP32[60264 + ((HEAPU8[$src_013_i_i113] ^ $_012_i_i114 >>> 24) << 2) >> 2] ^ $_012_i_i114 << 8; //@line 31176
       $702 = $_01011_i_i115 - 1 | 0; //@line 31177
       if (($702 | 0) == 0) {
        $crc38_ph_i = $701; //@line 31181
        break;
       } else {
        $_01011_i_i115 = $702;
        $_012_i_i114 = $701;
        $src_013_i_i113 = $src_013_i_i113 + 1 | 0;
       }
      }
     }
     _psi_sct_set_tags($_ph, $227, $660) | 0; //@line 31189
     if (($660 | 0) == ($325 | 0)) {
      $crc3840_lcssa_i = $crc38_ph_i; //@line 31193
     } else {
      $crc384046_i = $crc38_ph_i;
      $_08_i47_i = $325 - $660 | 0;
      while (1) {
       $709 = $_08_i47_i >>> 0 < 256 ? $_08_i47_i : 256; //@line 31202
       if ((_fread($173 | 0, 1, $709 | 0, $fp | 0) | 0) != ($709 | 0)) {
        $_0 = 1; //@line 31207
        label = 13424; //@line 31208
        break L16803;
       }
       if (!(HEAP8[6664] | 0)) {
        $i_017_i14_i = 0; //@line 31214
        do {
         $714 = $i_017_i14_i << 25; //@line 31219
         $reg_1_i16_i = ($i_017_i14_i & 128 | 0) != 0 ? $714 ^ 517762881 : $714; //@line 31221
         $717 = $reg_1_i16_i << 1; //@line 31223
         $reg_1_1_i17_i = ($reg_1_i16_i | 0) < 0 ? $717 ^ 517762881 : $717; //@line 31225
         $720 = $reg_1_1_i17_i << 1; //@line 31227
         $reg_1_2_i18_i = ($reg_1_1_i17_i | 0) < 0 ? $720 ^ 517762881 : $720; //@line 31229
         $723 = $reg_1_2_i18_i << 1; //@line 31231
         $reg_1_3_i19_i = ($reg_1_2_i18_i | 0) < 0 ? $723 ^ 517762881 : $723; //@line 31233
         $726 = $reg_1_3_i19_i << 1; //@line 31235
         $reg_1_4_i20_i = ($reg_1_3_i19_i | 0) < 0 ? $726 ^ 517762881 : $726; //@line 31237
         $729 = $reg_1_4_i20_i << 1; //@line 31239
         $reg_1_5_i21_i = ($reg_1_4_i20_i | 0) < 0 ? $729 ^ 517762881 : $729; //@line 31241
         $732 = $reg_1_5_i21_i << 1; //@line 31243
         $reg_1_6_i22_i = ($reg_1_5_i21_i | 0) < 0 ? $732 ^ 517762881 : $732; //@line 31245
         $735 = $reg_1_6_i22_i << 1; //@line 31247
         HEAP32[60264 + ($i_017_i14_i << 2) >> 2] = ($reg_1_6_i22_i | 0) < 0 ? $735 ^ 517762881 : $735; //@line 31251
         $i_017_i14_i = $i_017_i14_i + 1 | 0; //@line 31252
        } while ($i_017_i14_i >>> 0 < 256);
        HEAP8[6664] = 1; //@line 31261
       }
       if (($709 | 0) == 0) {
        $crc3839_ph_i = $crc384046_i; //@line 31267
       } else {
        $_01011_i28_i = $709;
        $_012_i27_i = $crc384046_i;
        $src_013_i26_i = $173;
        while (1) {
         $750 = HEAP32[60264 + ((HEAPU8[$src_013_i26_i] ^ $_012_i27_i >>> 24) << 2) >> 2] ^ $_012_i27_i << 8; //@line 31282
         $751 = $_01011_i28_i - 1 | 0; //@line 31283
         if (($751 | 0) == 0) {
          $crc3839_ph_i = $750; //@line 31287
          break;
         } else {
          $_01011_i28_i = $751;
          $_012_i27_i = $750;
          $src_013_i26_i = $src_013_i26_i + 1 | 0;
         }
        }
       }
       if (($_08_i47_i | 0) == ($709 | 0)) {
        $crc3840_lcssa_i = $crc3839_ph_i; //@line 31299
        break;
       } else {
        $crc384046_i = $crc3839_ph_i;
        $_08_i47_i = $_08_i47_i - $709 | 0;
       }
      }
     }
     if ((_fread($173 | 0, 1, 4, $fp | 0) | 0) != 4) {
      $_0 = 1; //@line 31311
      label = 13415; //@line 31312
      break L16803;
     }
     if ((_psi_get_uint32_be($173, 0) | 0) != ($crc3840_lcssa_i | 0)) {
      label = 13371; //@line 31319
      break L16803;
     }
    } else if (($324 | 0) == 1397048148) {
     break L16806;
    } else if (($324 | 0) == 1413830740) {
     if (($325 | 0) == 0) {
      if ((_fread($173 | 0, 1, 4, $fp | 0) | 0) != 4) {
       $_0 = 1; //@line 31332
       label = 13413; //@line 31333
       break L16803;
      }
      if ((_psi_get_uint32_be($173, 0) | 0) == ($323 | 0)) {
       break;
      } else {
       label = 13375; //@line 31342
       break L16803;
      }
     }
     $773 = _malloc($325) | 0; //@line 31346
     if (($773 | 0) == 0) {
      $_0 = 1; //@line 31350
      label = 13417; //@line 31351
      break L16803;
     }
     if ((_fread($773 | 0, 1, $325 | 0, $fp | 0) | 0) != ($325 | 0)) {
      label = 13382; //@line 31358
      break L16803;
     }
     if (HEAP8[6664] | 0) {
      $_01011_i_i134 = $325;
      $_012_i_i133 = $323;
      $src_013_i_i132 = $773;
     } else {
      $i_017_i_i121 = 0; //@line 31366
      do {
       $780 = $i_017_i_i121 << 25; //@line 31371
       $reg_1_i_i123 = ($i_017_i_i121 & 128 | 0) != 0 ? $780 ^ 517762881 : $780; //@line 31373
       $783 = $reg_1_i_i123 << 1; //@line 31375
       $reg_1_1_i_i124 = ($reg_1_i_i123 | 0) < 0 ? $783 ^ 517762881 : $783; //@line 31377
       $786 = $reg_1_1_i_i124 << 1; //@line 31379
       $reg_1_2_i_i125 = ($reg_1_1_i_i124 | 0) < 0 ? $786 ^ 517762881 : $786; //@line 31381
       $789 = $reg_1_2_i_i125 << 1; //@line 31383
       $reg_1_3_i_i126 = ($reg_1_2_i_i125 | 0) < 0 ? $789 ^ 517762881 : $789; //@line 31385
       $792 = $reg_1_3_i_i126 << 1; //@line 31387
       $reg_1_4_i_i127 = ($reg_1_3_i_i126 | 0) < 0 ? $792 ^ 517762881 : $792; //@line 31389
       $795 = $reg_1_4_i_i127 << 1; //@line 31391
       $reg_1_5_i_i128 = ($reg_1_4_i_i127 | 0) < 0 ? $795 ^ 517762881 : $795; //@line 31393
       $798 = $reg_1_5_i_i128 << 1; //@line 31395
       $reg_1_6_i_i129 = ($reg_1_5_i_i128 | 0) < 0 ? $798 ^ 517762881 : $798; //@line 31397
       $801 = $reg_1_6_i_i129 << 1; //@line 31399
       HEAP32[60264 + ($i_017_i_i121 << 2) >> 2] = ($reg_1_6_i_i129 | 0) < 0 ? $801 ^ 517762881 : $801; //@line 31403
       $i_017_i_i121 = $i_017_i_i121 + 1 | 0; //@line 31404
      } while ($i_017_i_i121 >>> 0 < 256);
      HEAP8[6664] = 1; //@line 31413
      $_01011_i_i134 = $325;
      $_012_i_i133 = $323;
      $src_013_i_i132 = $773;
     }
     while (1) {
      $815 = HEAP32[60264 + ((HEAPU8[$src_013_i_i132] ^ $_012_i_i133 >>> 24) << 2) >> 2] ^ $_012_i_i133 << 8; //@line 31429
      $816 = $_01011_i_i134 - 1 | 0; //@line 31430
      if (($816 | 0) == 0) {
       break;
      } else {
       $_01011_i_i134 = $816;
       $_012_i_i133 = $815;
       $src_013_i_i132 = $src_013_i_i132 + 1 | 0;
      }
     }
     $820 = (HEAP8[$773] | 0) == 10; //@line 31440
     $_size_i136 = ($820 << 31 >> 31) + $325 | 0; //@line 31443
     if (($_size_i136 | 0) == 0) {
      $n_1_i = 0; //@line 31447
     } else {
      $824 = $_size_i136 - 1 | 0; //@line 31449
      $n_1_i = (HEAP8[$773 + $824 | 0] | 0) == 10 ? $824 : $_size_i136; //@line 31455
     }
     $830 = _psi_img_add_comment($img, $773 + ($820 & 1) | 0, $n_1_i) | 0; //@line 31459
     _free($773); //@line 31460
     do {
      if ((_fread($173 | 0, 1, 4, $fp | 0) | 0) == 4) {
       if ((_psi_get_uint32_be($173, 0) | 0) == ($815 | 0)) {
        $_0_i24_i = 0; //@line 31470
        break;
       }
       _fwrite(52760, 16, 1, $228 | 0) | 0; //@line 31473
       $_0_i24_i = 1; //@line 31475
      } else {
       $_0_i24_i = 1; //@line 31477
      }
     } while (0);
     if (($_0_i24_i | $830 | 0) != 0) {
      $_0 = 1; //@line 31485
      label = 13427; //@line 31486
      break L16803;
     }
    } else if (($324 | 0) == 1162757152) {
     label = 13283; //@line 31490
     break L16803;
    } else if (($324 | 0) == 1145132097) {
     if ($545) {
      $_0 = 1; //@line 31495
      label = 13429; //@line 31496
      break L16803;
     }
     $553 = HEAPU16[$546 >> 1] | 0; //@line 31500
     $_size_i = $553 >>> 0 < $325 >>> 0 ? $553 : $325; //@line 31502
     if (($_size_i | 0) == 0) {
      $crc30_i = $323; //@line 31506
     } else {
      $557 = HEAP32[$547 >> 2] | 0; //@line 31508
      if ((_fread($557 | 0, 1, $_size_i | 0, $fp | 0) | 0) != ($_size_i | 0)) {
       $_0 = 1; //@line 31513
       label = 13438; //@line 31514
       break L16803;
      }
      if (HEAP8[6664] | 0) {
       $_01011_i_i93 = $_size_i;
       $_012_i_i92 = $323;
       $src_013_i_i91 = $557;
      } else {
       $i_017_i_i80 = 0; //@line 31522
       do {
        $562 = $i_017_i_i80 << 25; //@line 31527
        $reg_1_i_i82 = ($i_017_i_i80 & 128 | 0) != 0 ? $562 ^ 517762881 : $562; //@line 31529
        $565 = $reg_1_i_i82 << 1; //@line 31531
        $reg_1_1_i_i83 = ($reg_1_i_i82 | 0) < 0 ? $565 ^ 517762881 : $565; //@line 31533
        $568 = $reg_1_1_i_i83 << 1; //@line 31535
        $reg_1_2_i_i84 = ($reg_1_1_i_i83 | 0) < 0 ? $568 ^ 517762881 : $568; //@line 31537
        $571 = $reg_1_2_i_i84 << 1; //@line 31539
        $reg_1_3_i_i85 = ($reg_1_2_i_i84 | 0) < 0 ? $571 ^ 517762881 : $571; //@line 31541
        $574 = $reg_1_3_i_i85 << 1; //@line 31543
        $reg_1_4_i_i86 = ($reg_1_3_i_i85 | 0) < 0 ? $574 ^ 517762881 : $574; //@line 31545
        $577 = $reg_1_4_i_i86 << 1; //@line 31547
        $reg_1_5_i_i87 = ($reg_1_4_i_i86 | 0) < 0 ? $577 ^ 517762881 : $577; //@line 31549
        $580 = $reg_1_5_i_i87 << 1; //@line 31551
        $reg_1_6_i_i88 = ($reg_1_5_i_i87 | 0) < 0 ? $580 ^ 517762881 : $580; //@line 31553
        $583 = $reg_1_6_i_i88 << 1; //@line 31555
        HEAP32[60264 + ($i_017_i_i80 << 2) >> 2] = ($reg_1_6_i_i88 | 0) < 0 ? $583 ^ 517762881 : $583; //@line 31559
        $i_017_i_i80 = $i_017_i_i80 + 1 | 0; //@line 31560
       } while ($i_017_i_i80 >>> 0 < 256);
       HEAP8[6664] = 1; //@line 31569
       $_01011_i_i93 = $_size_i;
       $_012_i_i92 = $323;
       $src_013_i_i91 = $557;
      }
      while (1) {
       $597 = HEAP32[60264 + ((HEAPU8[$src_013_i_i91] ^ $_012_i_i92 >>> 24) << 2) >> 2] ^ $_012_i_i92 << 8; //@line 31585
       $598 = $_01011_i_i93 - 1 | 0; //@line 31586
       if (($598 | 0) == 0) {
        $crc30_i = $597; //@line 31590
        break;
       } else {
        $_01011_i_i93 = $598;
        $_012_i_i92 = $597;
        $src_013_i_i91 = $src_013_i_i91 + 1 | 0;
       }
      }
     }
     if (($_size_i | 0) == ($325 | 0)) {
      $crc3032_lcssa_i = $crc30_i; //@line 31601
     } else {
      $crc303237_i = $crc30_i;
      $_08_i38_i = $325 - $_size_i | 0;
      while (1) {
       $604 = $_08_i38_i >>> 0 < 256 ? $_08_i38_i : 256; //@line 31610
       if ((_fread($173 | 0, 1, $604 | 0, $fp | 0) | 0) != ($604 | 0)) {
        $_0 = 1; //@line 31615
        label = 13422; //@line 31616
        break L16803;
       }
       if (!(HEAP8[6664] | 0)) {
        $i_017_i5_i = 0; //@line 31622
        do {
         $609 = $i_017_i5_i << 25; //@line 31627
         $reg_1_i7_i = ($i_017_i5_i & 128 | 0) != 0 ? $609 ^ 517762881 : $609; //@line 31629
         $612 = $reg_1_i7_i << 1; //@line 31631
         $reg_1_1_i8_i = ($reg_1_i7_i | 0) < 0 ? $612 ^ 517762881 : $612; //@line 31633
         $615 = $reg_1_1_i8_i << 1; //@line 31635
         $reg_1_2_i9_i = ($reg_1_1_i8_i | 0) < 0 ? $615 ^ 517762881 : $615; //@line 31637
         $618 = $reg_1_2_i9_i << 1; //@line 31639
         $reg_1_3_i10_i = ($reg_1_2_i9_i | 0) < 0 ? $618 ^ 517762881 : $618; //@line 31641
         $621 = $reg_1_3_i10_i << 1; //@line 31643
         $reg_1_4_i11_i = ($reg_1_3_i10_i | 0) < 0 ? $621 ^ 517762881 : $621; //@line 31645
         $624 = $reg_1_4_i11_i << 1; //@line 31647
         $reg_1_5_i12_i = ($reg_1_4_i11_i | 0) < 0 ? $624 ^ 517762881 : $624; //@line 31649
         $627 = $reg_1_5_i12_i << 1; //@line 31651
         $reg_1_6_i13_i = ($reg_1_5_i12_i | 0) < 0 ? $627 ^ 517762881 : $627; //@line 31653
         $630 = $reg_1_6_i13_i << 1; //@line 31655
         HEAP32[60264 + ($i_017_i5_i << 2) >> 2] = ($reg_1_6_i13_i | 0) < 0 ? $630 ^ 517762881 : $630; //@line 31659
         $i_017_i5_i = $i_017_i5_i + 1 | 0; //@line 31660
        } while ($i_017_i5_i >>> 0 < 256);
        HEAP8[6664] = 1; //@line 31669
       }
       if (($604 | 0) == 0) {
        $crc3031_ph_i = $crc303237_i; //@line 31675
       } else {
        $_01011_i19_i = $604;
        $_012_i18_i = $crc303237_i;
        $src_013_i17_i = $173;
        while (1) {
         $645 = HEAP32[60264 + ((HEAPU8[$src_013_i17_i] ^ $_012_i18_i >>> 24) << 2) >> 2] ^ $_012_i18_i << 8; //@line 31690
         $646 = $_01011_i19_i - 1 | 0; //@line 31691
         if (($646 | 0) == 0) {
          $crc3031_ph_i = $645; //@line 31695
          break;
         } else {
          $_01011_i19_i = $646;
          $_012_i18_i = $645;
          $src_013_i17_i = $src_013_i17_i + 1 | 0;
         }
        }
       }
       if (($_08_i38_i | 0) == ($604 | 0)) {
        $crc3032_lcssa_i = $crc3031_ph_i; //@line 31707
        break;
       } else {
        $crc303237_i = $crc3031_ph_i;
        $_08_i38_i = $_08_i38_i - $604 | 0;
       }
      }
     }
     if ((_fread($173 | 0, 1, 4, $fp | 0) | 0) != 4) {
      $_0 = 1; //@line 31719
      label = 13425; //@line 31720
      break L16803;
     }
     if ((_psi_get_uint32_be($173, 0) | 0) != ($crc3032_lcssa_i | 0)) {
      label = 13352; //@line 31727
      break L16803;
     }
    } else {
     if (($325 | 0) == 0) {
      $_lcssa195 = $323; //@line 31734
     } else {
      $844 = $323;
      $_08_i197 = $325;
      while (1) {
       $846 = $_08_i197 >>> 0 < 256 ? $_08_i197 : 256; //@line 31741
       if ((_fread($173 | 0, 1, $846 | 0, $fp | 0) | 0) != ($846 | 0)) {
        $_0 = 1; //@line 31746
        label = 13433; //@line 31747
        break L16803;
       }
       if (!(HEAP8[6664] | 0)) {
        $i_017_i142 = 0; //@line 31753
        do {
         $851 = $i_017_i142 << 25; //@line 31758
         $reg_1_i144 = ($i_017_i142 & 128 | 0) != 0 ? $851 ^ 517762881 : $851; //@line 31760
         $854 = $reg_1_i144 << 1; //@line 31762
         $reg_1_1_i145 = ($reg_1_i144 | 0) < 0 ? $854 ^ 517762881 : $854; //@line 31764
         $857 = $reg_1_1_i145 << 1; //@line 31766
         $reg_1_2_i146 = ($reg_1_1_i145 | 0) < 0 ? $857 ^ 517762881 : $857; //@line 31768
         $860 = $reg_1_2_i146 << 1; //@line 31770
         $reg_1_3_i147 = ($reg_1_2_i146 | 0) < 0 ? $860 ^ 517762881 : $860; //@line 31772
         $863 = $reg_1_3_i147 << 1; //@line 31774
         $reg_1_4_i148 = ($reg_1_3_i147 | 0) < 0 ? $863 ^ 517762881 : $863; //@line 31776
         $866 = $reg_1_4_i148 << 1; //@line 31778
         $reg_1_5_i149 = ($reg_1_4_i148 | 0) < 0 ? $866 ^ 517762881 : $866; //@line 31780
         $869 = $reg_1_5_i149 << 1; //@line 31782
         $reg_1_6_i150 = ($reg_1_5_i149 | 0) < 0 ? $869 ^ 517762881 : $869; //@line 31784
         $872 = $reg_1_6_i150 << 1; //@line 31786
         HEAP32[60264 + ($i_017_i142 << 2) >> 2] = ($reg_1_6_i150 | 0) < 0 ? $872 ^ 517762881 : $872; //@line 31790
         $i_017_i142 = $i_017_i142 + 1 | 0; //@line 31791
        } while ($i_017_i142 >>> 0 < 256);
        HEAP8[6664] = 1; //@line 31800
       }
       if (($846 | 0) == 0) {
        $_ph178 = $844; //@line 31806
       } else {
        $_01011_i156 = $846;
        $_012_i155 = $844;
        $src_013_i154 = $173;
        while (1) {
         $887 = HEAP32[60264 + ((HEAPU8[$src_013_i154] ^ $_012_i155 >>> 24) << 2) >> 2] ^ $_012_i155 << 8; //@line 31821
         $888 = $_01011_i156 - 1 | 0; //@line 31822
         if (($888 | 0) == 0) {
          $_ph178 = $887; //@line 31826
          break;
         } else {
          $_01011_i156 = $888;
          $_012_i155 = $887;
          $src_013_i154 = $src_013_i154 + 1 | 0;
         }
        }
       }
       if (($_08_i197 | 0) == ($846 | 0)) {
        $_lcssa195 = $_ph178; //@line 31838
        break;
       } else {
        $844 = $_ph178;
        $_08_i197 = $_08_i197 - $846 | 0;
       }
      }
     }
     if ((_fread($173 | 0, 1, 4, $fp | 0) | 0) != 4) {
      $_0 = 1; //@line 31850
      label = 13406; //@line 31851
      break L16803;
     }
     if ((_psi_get_uint32_be($173, 0) | 0) != ($_lcssa195 | 0)) {
      label = 13400; //@line 31858
      break L16803;
     }
    }
   } while (0);
   if ((_fread($1 | 0, 1, 8, $fp | 0) | 0) != 8) {
    $_0 = 1; //@line 31867
    label = 13404; //@line 31868
    break L16803;
   }
  }
  if ($325 >>> 0 < 18) {
   $_0 = 1; //@line 31875
   label = 13412; //@line 31876
   break;
  }
  if ((_fread($229 | 0, 1, 18, $fp | 0) | 0) != 18) {
   $_0 = 1; //@line 31883
   label = 13426; //@line 31884
   break;
  }
  if (HEAP8[6664] | 0) {
   $_01011_i_i74 = 18;
   $_012_i_i73 = $323;
   $src_013_i_i72 = $229;
  } else {
   $i_017_i_i61 = 0; //@line 31892
   do {
    $390 = $i_017_i_i61 << 25; //@line 31897
    $reg_1_i_i63 = ($i_017_i_i61 & 128 | 0) != 0 ? $390 ^ 517762881 : $390; //@line 31899
    $393 = $reg_1_i_i63 << 1; //@line 31901
    $reg_1_1_i_i64 = ($reg_1_i_i63 | 0) < 0 ? $393 ^ 517762881 : $393; //@line 31903
    $396 = $reg_1_1_i_i64 << 1; //@line 31905
    $reg_1_2_i_i65 = ($reg_1_1_i_i64 | 0) < 0 ? $396 ^ 517762881 : $396; //@line 31907
    $399 = $reg_1_2_i_i65 << 1; //@line 31909
    $reg_1_3_i_i66 = ($reg_1_2_i_i65 | 0) < 0 ? $399 ^ 517762881 : $399; //@line 31911
    $402 = $reg_1_3_i_i66 << 1; //@line 31913
    $reg_1_4_i_i67 = ($reg_1_3_i_i66 | 0) < 0 ? $402 ^ 517762881 : $402; //@line 31915
    $405 = $reg_1_4_i_i67 << 1; //@line 31917
    $reg_1_5_i_i68 = ($reg_1_4_i_i67 | 0) < 0 ? $405 ^ 517762881 : $405; //@line 31919
    $408 = $reg_1_5_i_i68 << 1; //@line 31921
    $reg_1_6_i_i69 = ($reg_1_5_i_i68 | 0) < 0 ? $408 ^ 517762881 : $408; //@line 31923
    $411 = $reg_1_6_i_i69 << 1; //@line 31925
    HEAP32[60264 + ($i_017_i_i61 << 2) >> 2] = ($reg_1_6_i_i69 | 0) < 0 ? $411 ^ 517762881 : $411; //@line 31929
    $i_017_i_i61 = $i_017_i_i61 + 1 | 0; //@line 31930
   } while ($i_017_i_i61 >>> 0 < 256);
   HEAP8[6664] = 1; //@line 31939
   $_01011_i_i74 = 18;
   $_012_i_i73 = $323;
   $src_013_i_i72 = $229;
  }
  while (1) {
   $425 = HEAP32[60264 + ((HEAPU8[$src_013_i_i72] ^ $_012_i_i73 >>> 24) << 2) >> 2] ^ $_012_i_i73 << 8; //@line 31955
   $426 = $_01011_i_i74 - 1 | 0; //@line 31956
   if (($426 | 0) == 0) {
    break;
   } else {
    $_01011_i_i74 = $426;
    $_012_i_i73 = $425;
    $src_013_i_i72 = $src_013_i_i72 + 1 | 0;
   }
  }
  $429 = _psi_get_uint16_be($229, 0) | 0; //@line 31965
  $430 = _psi_get_uint16_be($229, 2) | 0; //@line 31966
  $431 = _psi_get_uint16_be($229, 4) | 0; //@line 31967
  $432 = _psi_get_uint16_be($229, 6) | 0; //@line 31968
  $433 = _psi_get_uint16_be($229, 8) | 0; //@line 31969
  $434 = _psi_get_uint16_be($229, 10) | 0; //@line 31970
  $435 = HEAP8[$230] | 0; //@line 31971
  $436 = _psi_get_uint16_be($229, 14) | 0; //@line 31972
  $437 = _psi_get_uint16_be($229, 16) | 0; //@line 31973
  $438 = _psi_sct_new($431, $432, $433, $434) | 0; //@line 31974
  if (($438 | 0) == 0) {
   $_0 = 1; //@line 31978
   label = 13435; //@line 31979
   break;
  }
  if (($436 & 1 | 0) != 0) {
   $444 = $438 + 12 | 0; //@line 31986
   HEAP32[$444 >> 2] = HEAP32[$444 >> 2] | 1; //@line 31989
  }
  if (($436 & 2 | 0) != 0) {
   $451 = $438 + 12 | 0; //@line 31996
   HEAP32[$451 >> 2] = HEAP32[$451 >> 2] | 2; //@line 31999
  }
  if (($436 & 4 | 0) != 0) {
   $458 = $438 + 12 | 0; //@line 32006
   HEAP32[$458 >> 2] = HEAP32[$458 >> 2] | 4; //@line 32009
  }
  if (($436 & 8 | 0) != 0) {
   $465 = $438 + 12 | 0; //@line 32016
   HEAP32[$465 >> 2] = HEAP32[$465 >> 2] | 8; //@line 32019
  }
  _psi_sct_set_encoding($438, $437); //@line 32022
  $468 = $437 & 4095; //@line 32023
  if (($468 | 0) == 3) {
   _psi_sct_set_gcr_format($438, $435); //@line 32025
  } else if (($468 | 0) == 1 | ($468 | 0) == 2) {
   _psi_sct_set_mfm_size($438, $435); //@line 32028
  }
  if (($436 & 16384 | 0) == 0) {
   if ((_psi_img_add_sector($img, $438, $429, $430) | 0) != 0) {
    label = 13318; //@line 32039
    break;
   }
  } else {
   if ($545) {
    label = 13315; //@line 32045
    break;
   }
   _psi_sct_add_alternate($_ph, $438); //@line 32048
  }
  $483 = $325 - 18 | 0; //@line 32051
  if (($436 & 32768 | 0) != 0) {
   _psi_sct_fill($438, HEAPU8[$231] | 0); //@line 32058
  }
  if (($483 | 0) == 0) {
   $crc5153_lcssa_i = $425; //@line 32064
  } else {
   $crc515359_i = $425;
   $_08_i60_i = $483;
   while (1) {
    $492 = $_08_i60_i >>> 0 < 256 ? $_08_i60_i : 256; //@line 32071
    if ((_fread($173 | 0, 1, $492 | 0, $fp | 0) | 0) != ($492 | 0)) {
     $_0 = 1; //@line 32076
     label = 13414; //@line 32077
     break L16803;
    }
    if (!(HEAP8[6664] | 0)) {
     $i_017_i28_i = 0; //@line 32083
     do {
      $497 = $i_017_i28_i << 25; //@line 32088
      $reg_1_i30_i = ($i_017_i28_i & 128 | 0) != 0 ? $497 ^ 517762881 : $497; //@line 32090
      $500 = $reg_1_i30_i << 1; //@line 32092
      $reg_1_1_i31_i = ($reg_1_i30_i | 0) < 0 ? $500 ^ 517762881 : $500; //@line 32094
      $503 = $reg_1_1_i31_i << 1; //@line 32096
      $reg_1_2_i32_i = ($reg_1_1_i31_i | 0) < 0 ? $503 ^ 517762881 : $503; //@line 32098
      $506 = $reg_1_2_i32_i << 1; //@line 32100
      $reg_1_3_i33_i = ($reg_1_2_i32_i | 0) < 0 ? $506 ^ 517762881 : $506; //@line 32102
      $509 = $reg_1_3_i33_i << 1; //@line 32104
      $reg_1_4_i34_i = ($reg_1_3_i33_i | 0) < 0 ? $509 ^ 517762881 : $509; //@line 32106
      $512 = $reg_1_4_i34_i << 1; //@line 32108
      $reg_1_5_i35_i = ($reg_1_4_i34_i | 0) < 0 ? $512 ^ 517762881 : $512; //@line 32110
      $515 = $reg_1_5_i35_i << 1; //@line 32112
      $reg_1_6_i36_i = ($reg_1_5_i35_i | 0) < 0 ? $515 ^ 517762881 : $515; //@line 32114
      $518 = $reg_1_6_i36_i << 1; //@line 32116
      HEAP32[60264 + ($i_017_i28_i << 2) >> 2] = ($reg_1_6_i36_i | 0) < 0 ? $518 ^ 517762881 : $518; //@line 32120
      $i_017_i28_i = $i_017_i28_i + 1 | 0; //@line 32121
     } while ($i_017_i28_i >>> 0 < 256);
     HEAP8[6664] = 1; //@line 32130
    }
    if (($492 | 0) == 0) {
     $crc5152_ph_i = $crc515359_i; //@line 32136
    } else {
     $_01011_i42_i = $492;
     $_012_i41_i = $crc515359_i;
     $src_013_i40_i = $173;
     while (1) {
      $533 = HEAP32[60264 + ((HEAPU8[$src_013_i40_i] ^ $_012_i41_i >>> 24) << 2) >> 2] ^ $_012_i41_i << 8; //@line 32151
      $534 = $_01011_i42_i - 1 | 0; //@line 32152
      if (($534 | 0) == 0) {
       $crc5152_ph_i = $533; //@line 32156
       break;
      } else {
       $_01011_i42_i = $534;
       $_012_i41_i = $533;
       $src_013_i40_i = $src_013_i40_i + 1 | 0;
      }
     }
    }
    if (($_08_i60_i | 0) == ($492 | 0)) {
     $crc5153_lcssa_i = $crc5152_ph_i; //@line 32168
     break;
    } else {
     $crc515359_i = $crc5152_ph_i;
     $_08_i60_i = $_08_i60_i - $492 | 0;
    }
   }
  }
  if ((_fread($173 | 0, 1, 4, $fp | 0) | 0) != 4) {
   $_0 = 1; //@line 32180
   label = 13432; //@line 32181
   break;
  }
  if ((_psi_get_uint32_be($173, 0) | 0) == ($crc5153_lcssa_i | 0)) {
   $_ph = $438; //@line 32188
  } else {
   label = 13333; //@line 32190
   break;
  }
 }
 if ((label | 0) == 13318) {
  _psi_sct_del($438); //@line 32195
  $_0 = 1; //@line 32197
  STACKTOP = sp; //@line 32199
  return $_0 | 0; //@line 32200
 } else if ((label | 0) == 13371) {
  _fwrite(52760, 16, 1, $228 | 0) | 0; //@line 32203
  $_0 = 1; //@line 32205
  STACKTOP = sp; //@line 32207
  return $_0 | 0; //@line 32208
 } else if ((label | 0) == 13352) {
  _fwrite(52760, 16, 1, $228 | 0) | 0; //@line 32211
  $_0 = 1; //@line 32213
  STACKTOP = sp; //@line 32215
  return $_0 | 0; //@line 32216
 } else if ((label | 0) == 13375) {
  _fwrite(52760, 16, 1, $228 | 0) | 0; //@line 32219
  $_0 = 1; //@line 32221
  STACKTOP = sp; //@line 32223
  return $_0 | 0; //@line 32224
 } else if ((label | 0) == 13382) {
  _free($773); //@line 32227
  $_0 = 1; //@line 32229
  STACKTOP = sp; //@line 32231
  return $_0 | 0; //@line 32232
 } else if ((label | 0) == 13400) {
  _fwrite(52760, 16, 1, $228 | 0) | 0; //@line 32235
  $_0 = 1; //@line 32237
  STACKTOP = sp; //@line 32239
  return $_0 | 0; //@line 32240
 } else if ((label | 0) == 13283) {
  L16972 : do {
   if (($325 | 0) == 0) {
    $crc11_lcssa_i = $323; //@line 32247
   } else {
    $crc1116_i = $323;
    $_08_i17_i = $325;
    while (1) {
     $329 = $_08_i17_i >>> 0 < 256 ? $_08_i17_i : 256; //@line 32254
     if ((_fread($173 | 0, 1, $329 | 0, $fp | 0) | 0) != ($329 | 0)) {
      $_0 = 1; //@line 32259
      break;
     }
     if (!(HEAP8[6664] | 0)) {
      $i_017_i_i46 = 0; //@line 32265
      do {
       $334 = $i_017_i_i46 << 25; //@line 32270
       $reg_1_i_i48 = ($i_017_i_i46 & 128 | 0) != 0 ? $334 ^ 517762881 : $334; //@line 32272
       $337 = $reg_1_i_i48 << 1; //@line 32274
       $reg_1_1_i_i49 = ($reg_1_i_i48 | 0) < 0 ? $337 ^ 517762881 : $337; //@line 32276
       $340 = $reg_1_1_i_i49 << 1; //@line 32278
       $reg_1_2_i_i50 = ($reg_1_1_i_i49 | 0) < 0 ? $340 ^ 517762881 : $340; //@line 32280
       $343 = $reg_1_2_i_i50 << 1; //@line 32282
       $reg_1_3_i_i51 = ($reg_1_2_i_i50 | 0) < 0 ? $343 ^ 517762881 : $343; //@line 32284
       $346 = $reg_1_3_i_i51 << 1; //@line 32286
       $reg_1_4_i_i52 = ($reg_1_3_i_i51 | 0) < 0 ? $346 ^ 517762881 : $346; //@line 32288
       $349 = $reg_1_4_i_i52 << 1; //@line 32290
       $reg_1_5_i_i53 = ($reg_1_4_i_i52 | 0) < 0 ? $349 ^ 517762881 : $349; //@line 32292
       $352 = $reg_1_5_i_i53 << 1; //@line 32294
       $reg_1_6_i_i54 = ($reg_1_5_i_i53 | 0) < 0 ? $352 ^ 517762881 : $352; //@line 32296
       $355 = $reg_1_6_i_i54 << 1; //@line 32298
       HEAP32[60264 + ($i_017_i_i46 << 2) >> 2] = ($reg_1_6_i_i54 | 0) < 0 ? $355 ^ 517762881 : $355; //@line 32302
       $i_017_i_i46 = $i_017_i_i46 + 1 | 0; //@line 32303
      } while ($i_017_i_i46 >>> 0 < 256);
      HEAP8[6664] = 1; //@line 32312
     }
     if (($329 | 0) == 0) {
      $crc10_ph_i = $crc1116_i; //@line 32318
     } else {
      $_01011_i_i = $329;
      $_012_i_i = $crc1116_i;
      $src_013_i_i = $173;
      while (1) {
       $370 = HEAP32[60264 + ((HEAPU8[$src_013_i_i] ^ $_012_i_i >>> 24) << 2) >> 2] ^ $_012_i_i << 8; //@line 32333
       $371 = $_01011_i_i - 1 | 0; //@line 32334
       if (($371 | 0) == 0) {
        $crc10_ph_i = $370; //@line 32338
        break;
       } else {
        $_01011_i_i = $371;
        $_012_i_i = $370;
        $src_013_i_i = $src_013_i_i + 1 | 0;
       }
      }
     }
     if (($_08_i17_i | 0) == ($329 | 0)) {
      $crc11_lcssa_i = $crc10_ph_i; //@line 32350
      break L16972;
     } else {
      $crc1116_i = $crc10_ph_i;
      $_08_i17_i = $_08_i17_i - $329 | 0;
     }
    }
    STACKTOP = sp; //@line 32357
    return $_0 | 0; //@line 32358
   }
  } while (0);
  if ((_fread($173 | 0, 1, 4, $fp | 0) | 0) != 4) {
   $_0 = 1; //@line 32366
   STACKTOP = sp; //@line 32368
   return $_0 | 0; //@line 32369
  }
  if ((_psi_get_uint32_be($173, 0) | 0) == ($crc11_lcssa_i | 0)) {
   _psi_img_clean_comment($img); //@line 32375
   $_0 = 0; //@line 32377
   STACKTOP = sp; //@line 32379
   return $_0 | 0; //@line 32380
  } else {
   _fwrite(52760, 16, 1, $228 | 0) | 0; //@line 32382
   $_0 = 1; //@line 32384
   STACKTOP = sp; //@line 32386
   return $_0 | 0; //@line 32387
  }
 } else if ((label | 0) == 13333) {
  _fwrite(52760, 16, 1, $228 | 0) | 0; //@line 32391
  $_0 = 1; //@line 32393
  STACKTOP = sp; //@line 32395
  return $_0 | 0; //@line 32396
 } else if ((label | 0) == 13315) {
  _fwrite(56480, 32, 1, $228 | 0) | 0; //@line 32399
  _psi_sct_del($438); //@line 32400
  $_0 = 1; //@line 32402
  STACKTOP = sp; //@line 32404
  return $_0 | 0; //@line 32405
 } else if ((label | 0) == 13404) {
  STACKTOP = sp; //@line 32409
  return $_0 | 0; //@line 32410
 } else if ((label | 0) == 13406) {
  STACKTOP = sp; //@line 32414
  return $_0 | 0; //@line 32415
 } else if ((label | 0) == 13409) {
  STACKTOP = sp; //@line 32419
  return $_0 | 0; //@line 32420
 } else if ((label | 0) == 13412) {
  STACKTOP = sp; //@line 32424
  return $_0 | 0; //@line 32425
 } else if ((label | 0) == 13413) {
  STACKTOP = sp; //@line 32429
  return $_0 | 0; //@line 32430
 } else if ((label | 0) == 13414) {
  STACKTOP = sp; //@line 32434
  return $_0 | 0; //@line 32435
 } else if ((label | 0) == 13415) {
  STACKTOP = sp; //@line 32439
  return $_0 | 0; //@line 32440
 } else if ((label | 0) == 13417) {
  STACKTOP = sp; //@line 32444
  return $_0 | 0; //@line 32445
 } else if ((label | 0) == 13418) {
  STACKTOP = sp; //@line 32449
  return $_0 | 0; //@line 32450
 } else if ((label | 0) == 13422) {
  STACKTOP = sp; //@line 32454
  return $_0 | 0; //@line 32455
 } else if ((label | 0) == 13424) {
  STACKTOP = sp; //@line 32459
  return $_0 | 0; //@line 32460
 } else if ((label | 0) == 13425) {
  STACKTOP = sp; //@line 32464
  return $_0 | 0; //@line 32465
 } else if ((label | 0) == 13426) {
  STACKTOP = sp; //@line 32469
  return $_0 | 0; //@line 32470
 } else if ((label | 0) == 13427) {
  STACKTOP = sp; //@line 32474
  return $_0 | 0; //@line 32475
 } else if ((label | 0) == 13429) {
  STACKTOP = sp; //@line 32479
  return $_0 | 0; //@line 32480
 } else if ((label | 0) == 13432) {
  STACKTOP = sp; //@line 32484
  return $_0 | 0; //@line 32485
 } else if ((label | 0) == 13433) {
  STACKTOP = sp; //@line 32489
  return $_0 | 0; //@line 32490
 } else if ((label | 0) == 13435) {
  STACKTOP = sp; //@line 32494
  return $_0 | 0; //@line 32495
 } else if ((label | 0) == 13437) {
  STACKTOP = sp; //@line 32499
  return $_0 | 0; //@line 32500
 } else if ((label | 0) == 13438) {
  STACKTOP = sp; //@line 32504
  return $_0 | 0; //@line 32505
 }
 return 0;
}
function _pfdc4_save_fp($fp, $img) {
 $fp = $fp | 0;
 $img = $img | 0;
 var $crc_i21 = 0, $buf_i22 = 0, $crc_i = 0, $buf_i19 = 0, $1 = 0, $5 = 0, $6 = 0, $11 = 0, $12 = 0, $17 = 0, $19 = 0, $24 = 0, $25 = 0, $27 = 0, $28 = 0, $c_034 = 0, $31 = 0, $32 = 0, $33 = 0, $35 = 0, $36 = 0, $h_029 = 0, $39 = 0, $40 = 0, $43 = 0, $s_028 = 0, $47 = 0, $sct_pn_i = 0, $_012_i = 0, $60 = 0, $61 = 0, $64 = 0, $65 = 0, $69 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 32525
 STACKTOP = STACKTOP + 48 | 0; //@line 32525
 $crc_i21 = sp | 0; //@line 32526
 $buf_i22 = sp + 8 | 0; //@line 32527
 $crc_i = sp + 16 | 0; //@line 32528
 $buf_i19 = sp + 24 | 0; //@line 32529
 $1 = sp + 40 | 0; //@line 32531
 _psi_set_uint16_be($1, 0, 4); //@line 32532
 _psi_set_uint16_be($1, 2, 0); //@line 32533
 if ((_pfdc4_save_chunk($fp, 1346782275, 4, $1) | 0) != 0) {
  $_0 = 1; //@line 32538
  STACKTOP = sp; //@line 32540
  return $_0 | 0; //@line 32541
 }
 $5 = $buf_i19 | 0; //@line 32544
 $6 = $img + 8 | 0; //@line 32545
 do {
  if ((HEAP32[$6 >> 2] | 0) != 0) {
   _psi_set_uint32_be($5, 0, 1413830740); //@line 32551
   _psi_set_uint32_be($5, 4, (HEAP32[$6 >> 2] | 0) + 2 | 0); //@line 32554
   $11 = $buf_i19 + 8 | 0; //@line 32555
   HEAP8[$11] = 10; //@line 32556
   HEAP32[$crc_i >> 2] = 0; //@line 32557
   $12 = _pfdc4_write($fp, $5, 9, $crc_i) | 0; //@line 32558
   $17 = _pfdc4_write($fp, HEAP32[$img + 12 >> 2] | 0, HEAP32[$6 >> 2] | 0, $crc_i) | 0 | $12; //@line 32563
   $19 = $17 | (_pfdc4_write($fp, $11, 1, $crc_i) | 0); //@line 32565
   _psi_set_uint32_be($5, 0, HEAP32[$crc_i >> 2] | 0); //@line 32567
   if (($19 | (_fwrite($5 | 0, 1, 4, $fp | 0) | 0) != 4 | 0) == 0) {
    break;
   } else {
    $_0 = 1; //@line 32577
   }
   STACKTOP = sp; //@line 32580
   return $_0 | 0; //@line 32581
  }
 } while (0);
 $24 = $img | 0; //@line 32584
 $25 = HEAP16[$24 >> 1] | 0; //@line 32585
 L17027 : do {
  if ($25 << 16 >> 16 != 0) {
   $27 = $img + 4 | 0; //@line 32590
   $c_034 = 0;
   $28 = $25;
   L17029 : while (1) {
    $31 = HEAP32[(HEAP32[$27 >> 2] | 0) + ($c_034 << 2) >> 2] | 0; //@line 32598
    $32 = $31 + 2 | 0; //@line 32599
    $33 = HEAP16[$32 >> 1] | 0; //@line 32600
    if ($33 << 16 >> 16 == 0) {
     $64 = $28; //@line 32604
    } else {
     $35 = $31 + 4 | 0; //@line 32606
     $h_029 = 0;
     $36 = $33;
     while (1) {
      $39 = HEAP32[(HEAP32[$35 >> 2] | 0) + ($h_029 << 2) >> 2] | 0; //@line 32614
      $40 = $39 + 2 | 0; //@line 32615
      if ((HEAP16[$40 >> 1] | 0) == 0) {
       $60 = $36; //@line 32620
      } else {
       $43 = $39 + 4 | 0; //@line 32622
       $s_028 = 0; //@line 32624
       do {
        $47 = HEAP32[(HEAP32[$43 >> 2] | 0) + ($s_028 << 2) >> 2] | 0; //@line 32629
        if ((_pfdc4_save_sector($fp, $47, $c_034, $h_029, 0) | 0) == 0) {
         $sct_pn_i = $47; //@line 32634
        } else {
         $_0 = 1; //@line 32636
         label = 13467; //@line 32637
         break L17029;
        }
        while (1) {
         $_012_i = HEAP32[$sct_pn_i >> 2] | 0; //@line 32643
         if (($_012_i | 0) == 0) {
          break;
         }
         if ((_pfdc4_save_sector($fp, $_012_i, $c_034, $h_029, 1) | 0) == 0) {
          $sct_pn_i = $_012_i; //@line 32653
         } else {
          $_0 = 1; //@line 32655
          label = 13465; //@line 32656
          break L17029;
         }
        }
        $s_028 = $s_028 + 1 | 0; //@line 32660
       } while ($s_028 >>> 0 < (HEAPU16[$40 >> 1] | 0) >>> 0);
       $60 = HEAP16[$32 >> 1] | 0; //@line 32673
      }
      $61 = $h_029 + 1 | 0; //@line 32676
      if ($61 >>> 0 < ($60 & 65535) >>> 0) {
       $h_029 = $61;
       $36 = $60;
      } else {
       break;
      }
     }
     $64 = HEAP16[$24 >> 1] | 0; //@line 32688
    }
    $65 = $c_034 + 1 | 0; //@line 32691
    if ($65 >>> 0 < ($64 & 65535) >>> 0) {
     $c_034 = $65;
     $28 = $64;
    } else {
     break L17027;
    }
   }
   if ((label | 0) == 13465) {
    STACKTOP = sp; //@line 32703
    return $_0 | 0; //@line 32704
   } else if ((label | 0) == 13467) {
    STACKTOP = sp; //@line 32708
    return $_0 | 0; //@line 32709
   }
  }
 } while (0);
 $69 = $buf_i22 | 0; //@line 32714
 _psi_set_uint32_be($69, 0, 1162757152); //@line 32715
 _psi_set_uint32_be($69, 4, 0); //@line 32716
 HEAP32[$crc_i21 >> 2] = 0; //@line 32717
 if ((_pfdc4_write($fp, $69, 8, $crc_i21) | 0) != 0) {
  $_0 = 1; //@line 32722
  STACKTOP = sp; //@line 32724
  return $_0 | 0; //@line 32725
 }
 _psi_set_uint32_be($69, 0, HEAP32[$crc_i21 >> 2] | 0); //@line 32728
 if ((_fwrite($69 | 0, 1, 4, $fp | 0) | 0) != 4) {
  $_0 = 1; //@line 32733
  STACKTOP = sp; //@line 32735
  return $_0 | 0; //@line 32736
 }
 _fflush($fp | 0) | 0; //@line 32738
 $_0 = 0; //@line 32740
 STACKTOP = sp; //@line 32742
 return $_0 | 0; //@line 32743
}
function _pfdc4_save_chunk($fp, $ckid, $size, $data) {
 $fp = $fp | 0;
 $ckid = $ckid | 0;
 $size = $size | 0;
 $data = $data | 0;
 var $crc = 0, $1 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 32755
 STACKTOP = STACKTOP + 16 | 0; //@line 32755
 $crc = sp | 0; //@line 32756
 $1 = sp + 8 | 0; //@line 32758
 _psi_set_uint32_be($1, 0, $ckid); //@line 32759
 _psi_set_uint32_be($1, 4, $size); //@line 32760
 HEAP32[$crc >> 2] = 0; //@line 32761
 if ((_pfdc4_write($fp, $1, 8, $crc) | 0) != 0) {
  $_0 = 1; //@line 32766
  STACKTOP = sp; //@line 32768
  return $_0 | 0; //@line 32769
 }
 do {
  if (($size | 0) != 0) {
   if ((_pfdc4_write($fp, $data, $size, $crc) | 0) == 0) {
    break;
   } else {
    $_0 = 1; //@line 32781
   }
   STACKTOP = sp; //@line 32784
   return $_0 | 0; //@line 32785
  }
 } while (0);
 _psi_set_uint32_be($1, 0, HEAP32[$crc >> 2] | 0); //@line 32789
 $_0 = (_fwrite($1 | 0, 1, 4, $fp | 0) | 0) != 4 | 0; //@line 32794
 STACKTOP = sp; //@line 32796
 return $_0 | 0; //@line 32797
}
function _pfdc4_write($fp, $buf, $cnt, $crc) {
 $fp = $fp | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 $crc = $crc | 0;
 var $3 = 0, $i_017_i = 0, $5 = 0, $reg_1_i = 0, $8 = 0, $reg_1_1_i = 0, $11 = 0, $reg_1_2_i = 0, $14 = 0, $reg_1_3_i = 0, $17 = 0, $reg_1_4_i = 0, $20 = 0, $reg_1_5_i = 0, $23 = 0, $reg_1_6_i = 0, $26 = 0, $src_013_i = 0, $_012_i = 0, $_01011_i = 0, $41 = 0, $42 = 0, $_0_lcssa_i = 0, $45 = 0, $not_ = 0, $_ = 0;
 if (($crc | 0) == 0) {
  $45 = _fwrite($buf | 0, 1, $cnt | 0, $fp | 0) | 0; //@line 32819
  $not_ = ($45 | 0) != ($cnt | 0); //@line 32820
  $_ = $not_ & 1; //@line 32821
  return $_ | 0; //@line 32823
 }
 $3 = HEAP32[$crc >> 2] | 0; //@line 32825
 if (!(HEAP8[6664] | 0)) {
  $i_017_i = 0; //@line 32829
  do {
   $5 = $i_017_i << 25; //@line 32834
   $reg_1_i = ($i_017_i & 128 | 0) != 0 ? $5 ^ 517762881 : $5; //@line 32836
   $8 = $reg_1_i << 1; //@line 32838
   $reg_1_1_i = ($reg_1_i | 0) < 0 ? $8 ^ 517762881 : $8; //@line 32840
   $11 = $reg_1_1_i << 1; //@line 32842
   $reg_1_2_i = ($reg_1_1_i | 0) < 0 ? $11 ^ 517762881 : $11; //@line 32844
   $14 = $reg_1_2_i << 1; //@line 32846
   $reg_1_3_i = ($reg_1_2_i | 0) < 0 ? $14 ^ 517762881 : $14; //@line 32848
   $17 = $reg_1_3_i << 1; //@line 32850
   $reg_1_4_i = ($reg_1_3_i | 0) < 0 ? $17 ^ 517762881 : $17; //@line 32852
   $20 = $reg_1_4_i << 1; //@line 32854
   $reg_1_5_i = ($reg_1_4_i | 0) < 0 ? $20 ^ 517762881 : $20; //@line 32856
   $23 = $reg_1_5_i << 1; //@line 32858
   $reg_1_6_i = ($reg_1_5_i | 0) < 0 ? $23 ^ 517762881 : $23; //@line 32860
   $26 = $reg_1_6_i << 1; //@line 32862
   HEAP32[60264 + ($i_017_i << 2) >> 2] = ($reg_1_6_i | 0) < 0 ? $26 ^ 517762881 : $26; //@line 32866
   $i_017_i = $i_017_i + 1 | 0; //@line 32867
  } while ($i_017_i >>> 0 < 256);
  HEAP8[6664] = 1; //@line 32876
 }
 if (($cnt | 0) == 0) {
  $_0_lcssa_i = $3; //@line 32882
 } else {
  $_01011_i = $cnt;
  $_012_i = $3;
  $src_013_i = $buf;
  while (1) {
   $41 = HEAP32[60264 + (((HEAPU8[$src_013_i] | 0) ^ $_012_i >>> 24) << 2) >> 2] ^ $_012_i << 8; //@line 32897
   $42 = $_01011_i - 1 | 0; //@line 32898
   if (($42 | 0) == 0) {
    $_0_lcssa_i = $41; //@line 32902
    break;
   } else {
    $_01011_i = $42;
    $_012_i = $41;
    $src_013_i = $src_013_i + 1 | 0;
   }
  }
 }
 HEAP32[$crc >> 2] = $_0_lcssa_i; //@line 32910
 $45 = _fwrite($buf | 0, 1, $cnt | 0, $fp | 0) | 0; //@line 32912
 $not_ = ($45 | 0) != ($cnt | 0); //@line 32913
 $_ = $not_ & 1; //@line 32914
 return $_ | 0; //@line 32916
}
function _pfdc4_save_sector($fp, $sct, $c, $h, $alt) {
 $fp = $fp | 0;
 $sct = $sct | 0;
 $c = $c | 0;
 $h = $h | 0;
 $alt = $alt | 0;
 var $buf = 0, $sct_idx_val = 0, $1 = 0, $f_1_i = 0, $f_1__i = 0, $f_3_i = 0, $_pre = 0, $flg_0 = 0, $flg_1 = 0, $19 = 0, $31 = 0, $44 = 0, $57 = 0, $i_0 = 0, $71 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 32937
 STACKTOP = STACKTOP + 256 | 0; //@line 32937
 $buf = sp | 0; //@line 32938
 $sct_idx_val = HEAP32[$sct + 12 >> 2] | 0; //@line 32940
 $1 = $sct_idx_val & 1; //@line 32941
 $f_1_i = ($sct_idx_val & 2 | 0) == 0 ? $1 : $1 | 2; //@line 32945
 $f_1__i = ($sct_idx_val & 4 | 0) == 0 ? $f_1_i : $f_1_i | 4; //@line 32949
 $f_3_i = ($sct_idx_val & 8 | 0) == 0 ? $f_1__i : $f_1__i | 8; //@line 32953
 $_pre = $sct + 10 | 0; //@line 32956
 if ((_psi_sct_uniform($sct) | 0) == 0) {
  $flg_0 = $f_3_i; //@line 32959
 } else {
  $flg_0 = (HEAP16[$_pre >> 1] | 0) == 0 ? $f_3_i : $f_3_i | 32768; //@line 32966
 }
 $flg_1 = ($alt | 0) == 0 ? $flg_0 : $flg_0 | 16384; //@line 32971
 $19 = $buf | 0; //@line 32972
 _psi_set_uint16_be($19, 0, $c); //@line 32973
 _psi_set_uint16_be($19, 2, $h); //@line 32974
 _psi_set_uint16_be($19, 4, HEAPU16[$sct + 4 >> 1] | 0); //@line 32978
 _psi_set_uint16_be($19, 6, HEAPU16[$sct + 6 >> 1] | 0); //@line 32982
 _psi_set_uint16_be($19, 8, HEAPU16[$sct + 8 >> 1] | 0); //@line 32986
 _psi_set_uint16_be($19, 10, HEAPU16[$_pre >> 1] | 0); //@line 32989
 _psi_set_uint16_be($19, 12, 0); //@line 32990
 _psi_set_uint16_be($19, 14, $flg_1); //@line 32991
 $31 = $sct + 16 | 0; //@line 32992
 _psi_set_uint16_be($19, 16, HEAPU16[$31 >> 1] | 0); //@line 32995
 if (($flg_1 & 32768 | 0) != 0) {
  HEAP8[$buf + 13 | 0] = HEAP8[HEAP32[$sct + 24 >> 2] | 0] | 0; //@line 33004
 }
 $44 = HEAP16[$31 >> 1] & 4095; //@line 33009
 if (($44 | 0) == 1 | ($44 | 0) == 2) {
  HEAP8[$buf + 12 | 0] = (_psi_sct_get_mfm_size($sct) | 0) & 255; //@line 33014
 } else if (($44 | 0) == 3) {
  HEAP8[$buf + 12 | 0] = (_psi_sct_get_gcr_format($sct) | 0) & 255; //@line 33020
 }
 if ((_pfdc4_save_chunk($fp, 1397048148, 18, $19) | 0) != 0) {
  $_0 = 1; //@line 33027
  STACKTOP = sp; //@line 33029
  return $_0 | 0; //@line 33030
 }
 $57 = _psi_sct_get_tags($sct, $19, 256) | 0; //@line 33032
 L17095 : do {
  if (($57 | 0) != 0) {
   $i_0 = 0; //@line 33037
   while (1) {
    if ($i_0 >>> 0 >= $57 >>> 0) {
     break L17095;
    }
    if ((HEAP8[$buf + $i_0 | 0] | 0) == 0) {
     $i_0 = $i_0 + 1 | 0; //@line 33051
    } else {
     break;
    }
   }
   if ((_pfdc4_save_chunk($fp, 1413564243, $57, $19) | 0) == 0) {
    break;
   } else {
    $_0 = 1; //@line 33062
   }
   STACKTOP = sp; //@line 33065
   return $_0 | 0; //@line 33066
  }
 } while (0);
 do {
  if (($flg_1 & 32776 | 0) == 0) {
   $71 = HEAP16[$_pre >> 1] | 0; //@line 33074
   if ($71 << 16 >> 16 == 0) {
    break;
   }
   if ((_pfdc4_save_chunk($fp, 1145132097, $71 & 65535, HEAP32[$sct + 24 >> 2] | 0) | 0) == 0) {
    break;
   } else {
    $_0 = 1; //@line 33089
   }
   STACKTOP = sp; //@line 33092
   return $_0 | 0; //@line 33093
  }
 } while (0);
 $_0 = 0; //@line 33097
 STACKTOP = sp; //@line 33099
 return $_0 | 0; //@line 33100
}
function _psi_load_psi($fp) {
 $fp = $fp | 0;
 var $buf_i195_i = 0, $buf_i151_i = 0, $buf_i_i_i = 0, $buf_i_i = 0, $buf_i = 0, $1 = 0, $4 = 0, $i_017_i_i = 0, $9 = 0, $reg_1_i_i = 0, $12 = 0, $reg_1_1_i_i = 0, $15 = 0, $reg_1_2_i_i = 0, $18 = 0, $reg_1_3_i_i = 0, $21 = 0, $reg_1_4_i_i = 0, $24 = 0, $reg_1_5_i_i = 0, $27 = 0, $reg_1_6_i_i = 0, $30 = 0, $36 = 0, $40 = 0, $42 = 0, $49 = 0, $51 = 0, $58 = 0, $60 = 0, $67 = 0, $69 = 0, $76 = 0, $78 = 0, $85 = 0, $87 = 0, $94 = 0, $102 = 0, $103 = 0, $104 = 0, $107 = 0, $i_017_i_i_i = 0, $114 = 0, $reg_1_i_i_i = 0, $117 = 0, $reg_1_1_i_i_i = 0, $120 = 0, $reg_1_2_i_i_i = 0, $123 = 0, $reg_1_3_i_i_i = 0, $126 = 0, $reg_1_4_i_i_i = 0, $129 = 0, $reg_1_5_i_i_i = 0, $132 = 0, $reg_1_6_i_i_i = 0, $135 = 0, $142 = 0, $149 = 0, $151 = 0, $158 = 0, $160 = 0, $167 = 0, $175 = 0, $176 = 0, $179 = 0, $182 = 0, $enc_0_load359_i = 0, $190 = 0, $191 = 0, $_08_i49_i_i = 0, $crc404248_i_i = 0, $194 = 0, $i_017_i17_i_i = 0, $199 = 0, $reg_1_i19_i_i = 0, $202 = 0, $reg_1_1_i20_i_i = 0, $205 = 0, $reg_1_2_i21_i_i = 0, $208 = 0, $reg_1_3_i22_i_i = 0, $211 = 0, $reg_1_4_i23_i_i = 0, $214 = 0, $reg_1_5_i24_i_i = 0, $217 = 0, $reg_1_6_i25_i_i = 0, $220 = 0, $src_013_i29_i_i = 0, $_012_i30_i_i = 0, $_01011_i31_i_i = 0, $235 = 0, $236 = 0, $crc4041_ph_i_i = 0, $crc4042_lcssa_i_i = 0, $247 = 0, $248 = 0, $249 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $260 = 0, $261 = 0, $263 = 0, $266 = 0, $i_017_i39_i = 0, $268 = 0, $reg_1_i41_i = 0, $271 = 0, $reg_1_1_i42_i = 0, $274 = 0, $reg_1_2_i43_i = 0, $277 = 0, $reg_1_3_i44_i = 0, $280 = 0, $reg_1_4_i45_i = 0, $283 = 0, $reg_1_5_i46_i = 0, $286 = 0, $reg_1_6_i47_i = 0, $289 = 0, $298 = 0, $306 = 0, $314 = 0, $322 = 0, $330 = 0, $338 = 0, $346 = 0, $354 = 0, $355 = 0, $356 = 0, $_08_i17_i_i = 0, $crc1116_i_i = 0, $360 = 0, $i_017_i_i60_i = 0, $365 = 0, $reg_1_i_i62_i = 0, $368 = 0, $reg_1_1_i_i63_i = 0, $371 = 0, $reg_1_2_i_i64_i = 0, $374 = 0, $reg_1_3_i_i65_i = 0, $377 = 0, $reg_1_4_i_i66_i = 0, $380 = 0, $reg_1_5_i_i67_i = 0, $383 = 0, $reg_1_6_i_i68_i = 0, $386 = 0, $src_013_i_i_i = 0, $_012_i_i_i = 0, $_01011_i_i_i = 0, $401 = 0, $402 = 0, $crc10_ph_i_i = 0, $crc11_lcssa_i_i = 0, $i_017_i_i76_i = 0, $420 = 0, $reg_1_i_i78_i = 0, $423 = 0, $reg_1_1_i_i79_i = 0, $426 = 0, $reg_1_2_i_i80_i = 0, $429 = 0, $reg_1_3_i_i81_i = 0, $432 = 0, $reg_1_4_i_i82_i = 0, $435 = 0, $reg_1_5_i_i83_i = 0, $438 = 0, $reg_1_6_i_i84_i = 0, $441 = 0, $454 = 0, $462 = 0, $470 = 0, $478 = 0, $486 = 0, $494 = 0, $502 = 0, $510 = 0, $511 = 0, $513 = 0, $515 = 0, $516 = 0, $518 = 0, $519 = 0, $537 = 0, $541 = 0, $_08_i58_i_i = 0, $crc495157_i_i = 0, $550 = 0, $i_017_i26_i_i = 0, $555 = 0, $reg_1_i28_i_i = 0, $558 = 0, $reg_1_1_i29_i_i = 0, $561 = 0, $reg_1_2_i30_i_i = 0, $564 = 0, $reg_1_3_i31_i_i = 0, $567 = 0, $reg_1_4_i32_i_i = 0, $570 = 0, $reg_1_5_i33_i_i = 0, $573 = 0, $reg_1_6_i34_i_i = 0, $576 = 0, $src_013_i38_i_i = 0, $_012_i39_i_i = 0, $_01011_i40_i_i = 0, $591 = 0, $592 = 0, $crc4950_ph_i_i = 0, $crc4951_lcssa_i_i = 0, $i_017_i_i94_i = 0, $611 = 0, $reg_1_i_i96_i = 0, $614 = 0, $reg_1_1_i_i97_i = 0, $617 = 0, $reg_1_2_i_i98_i = 0, $620 = 0, $reg_1_3_i_i99_i = 0, $623 = 0, $reg_1_4_i_i100_i = 0, $626 = 0, $reg_1_5_i_i101_i = 0, $629 = 0, $reg_1_6_i_i102_i = 0, $632 = 0, $639 = 0, $645 = 0, $647 = 0, $653 = 0, $655 = 0, $661 = 0, $663 = 0, $669 = 0, $671 = 0, $677 = 0, $679 = 0, $685 = 0, $695 = 0, $702 = 0, $709 = 0, $716 = 0, $723 = 0, $_08_i37_i_i = 0, $crc283036_i_i = 0, $726 = 0, $i_017_i5_i_i = 0, $731 = 0, $reg_1_i7_i_i = 0, $734 = 0, $reg_1_1_i8_i_i = 0, $737 = 0, $reg_1_2_i9_i_i = 0, $740 = 0, $reg_1_3_i10_i_i = 0, $743 = 0, $reg_1_4_i11_i_i = 0, $746 = 0, $reg_1_5_i12_i_i = 0, $749 = 0, $reg_1_6_i13_i_i = 0, $752 = 0, $src_013_i17_i_i = 0, $_012_i18_i_i = 0, $_01011_i19_i_i = 0, $767 = 0, $768 = 0, $crc2829_ph_i_i = 0, $crc2830_lcssa_i_i = 0, $i_017_i_i113_i = 0, $787 = 0, $reg_1_i_i115_i = 0, $790 = 0, $reg_1_1_i_i116_i = 0, $793 = 0, $reg_1_2_i_i117_i = 0, $796 = 0, $reg_1_3_i_i118_i = 0, $799 = 0, $reg_1_4_i_i119_i = 0, $802 = 0, $reg_1_5_i_i120_i = 0, $805 = 0, $reg_1_6_i_i121_i = 0, $808 = 0, $815 = 0, $821 = 0, $823 = 0, $829 = 0, $831 = 0, $837 = 0, $839 = 0, $845 = 0, $847 = 0, $853 = 0, $856 = 0, $861 = 0, $871 = 0, $878 = 0, $885 = 0, $892 = 0, $900 = 0, $_08_i37_i125_i = 0, $crc283036_i126_i = 0, $903 = 0, $i_017_i5_i129_i = 0, $908 = 0, $reg_1_i7_i131_i = 0, $911 = 0, $reg_1_1_i8_i132_i = 0, $914 = 0, $reg_1_2_i9_i133_i = 0, $917 = 0, $reg_1_3_i10_i134_i = 0, $920 = 0, $reg_1_4_i11_i135_i = 0, $923 = 0, $reg_1_5_i12_i136_i = 0, $926 = 0, $reg_1_6_i13_i137_i = 0, $929 = 0, $src_013_i17_i141_i = 0, $_012_i18_i142_i = 0, $_01011_i19_i143_i = 0, $944 = 0, $945 = 0, $crc2829_ph_i145_i = 0, $crc2830_lcssa_i147_i = 0, $i_017_i_i154_i = 0, $964 = 0, $reg_1_i_i156_i = 0, $967 = 0, $reg_1_1_i_i157_i = 0, $970 = 0, $reg_1_2_i_i158_i = 0, $973 = 0, $reg_1_3_i_i159_i = 0, $976 = 0, $reg_1_4_i_i160_i = 0, $979 = 0, $reg_1_5_i_i161_i = 0, $982 = 0, $reg_1_6_i_i162_i = 0, $985 = 0, $src_013_i_i165_i = 0, $_012_i_i166_i = 0, $_01011_i_i167_i = 0, $999 = 0, $1000 = 0, $1013 = 0, $1017 = 0, $1024 = 0, $1031 = 0, $1036 = 0, $_08_i37_i169_i = 0, $crc283036_i170_i = 0, $1039 = 0, $i_017_i5_i173_i = 0, $1044 = 0, $reg_1_i7_i175_i = 0, $1047 = 0, $reg_1_1_i8_i176_i = 0, $1050 = 0, $reg_1_2_i9_i177_i = 0, $1053 = 0, $reg_1_3_i10_i178_i = 0, $1056 = 0, $reg_1_4_i11_i179_i = 0, $1059 = 0, $reg_1_5_i12_i180_i = 0, $1062 = 0, $reg_1_6_i13_i181_i = 0, $1065 = 0, $src_013_i17_i185_i = 0, $_012_i18_i186_i = 0, $_01011_i19_i187_i = 0, $1080 = 0, $1081 = 0, $crc2829_ph_i189_i = 0, $crc2830_lcssa_i191_i = 0, $i_017_i_i198_i = 0, $1100 = 0, $reg_1_i_i200_i = 0, $1103 = 0, $reg_1_1_i_i201_i = 0, $1106 = 0, $reg_1_2_i_i202_i = 0, $1109 = 0, $reg_1_3_i_i203_i = 0, $1112 = 0, $reg_1_4_i_i204_i = 0, $1115 = 0, $reg_1_5_i_i205_i = 0, $1118 = 0, $reg_1_6_i_i206_i = 0, $1121 = 0, $1134 = 0, $1142 = 0, $1150 = 0, $1158 = 0, $1160 = 0, $_08_i37_i210_i = 0, $crc283036_i211_i = 0, $1163 = 0, $i_017_i5_i214_i = 0, $1168 = 0, $reg_1_i7_i216_i = 0, $1171 = 0, $reg_1_1_i8_i217_i = 0, $1174 = 0, $reg_1_2_i9_i218_i = 0, $1177 = 0, $reg_1_3_i10_i219_i = 0, $1180 = 0, $reg_1_4_i11_i220_i = 0, $1183 = 0, $reg_1_5_i12_i221_i = 0, $1186 = 0, $reg_1_6_i13_i222_i = 0, $1189 = 0, $src_013_i17_i226_i = 0, $_012_i18_i227_i = 0, $_01011_i19_i228_i = 0, $1204 = 0, $1205 = 0, $crc2829_ph_i230_i = 0, $crc2830_lcssa_i232_i = 0, $i_017_i_i239_i = 0, $1224 = 0, $reg_1_i_i241_i = 0, $1227 = 0, $reg_1_1_i_i242_i = 0, $1230 = 0, $reg_1_2_i_i243_i = 0, $1233 = 0, $reg_1_3_i_i244_i = 0, $1236 = 0, $reg_1_4_i_i245_i = 0, $1239 = 0, $reg_1_5_i_i246_i = 0, $1242 = 0, $reg_1_6_i_i247_i = 0, $1245 = 0, $1258 = 0, $1266 = 0, $1274 = 0, $1282 = 0, $1284 = 0, $_08_i37_i251_i = 0, $crc283036_i252_i = 0, $1287 = 0, $i_017_i5_i255_i = 0, $1292 = 0, $reg_1_i7_i257_i = 0, $1295 = 0, $reg_1_1_i8_i258_i = 0, $1298 = 0, $reg_1_2_i9_i259_i = 0, $1301 = 0, $reg_1_3_i10_i260_i = 0, $1304 = 0, $reg_1_4_i11_i261_i = 0, $1307 = 0, $reg_1_5_i12_i262_i = 0, $1310 = 0, $reg_1_6_i13_i263_i = 0, $1313 = 0, $src_013_i17_i267_i = 0, $_012_i18_i268_i = 0, $_01011_i19_i269_i = 0, $1328 = 0, $1329 = 0, $crc2829_ph_i271_i = 0, $crc2830_lcssa_i273_i = 0, $1349 = 0, $i_017_i_i278_i = 0, $1354 = 0, $reg_1_i_i280_i = 0, $1357 = 0, $reg_1_1_i_i281_i = 0, $1360 = 0, $reg_1_2_i_i282_i = 0, $1363 = 0, $reg_1_3_i_i283_i = 0, $1366 = 0, $reg_1_4_i_i284_i = 0, $1369 = 0, $reg_1_5_i_i285_i = 0, $1372 = 0, $reg_1_6_i_i286_i = 0, $1375 = 0, $src_013_i_i289_i = 0, $_012_i_i290_i = 0, $_01011_i_i291_i = 0, $1389 = 0, $1390 = 0, $crc30_i_i = 0, $1410 = 0, $i_017_i_i296_i = 0, $1417 = 0, $reg_1_i_i298_i = 0, $1420 = 0, $reg_1_1_i_i299_i = 0, $1423 = 0, $reg_1_2_i_i300_i = 0, $1426 = 0, $reg_1_3_i_i301_i = 0, $1429 = 0, $reg_1_4_i_i302_i = 0, $1432 = 0, $reg_1_5_i_i303_i = 0, $1435 = 0, $reg_1_6_i_i304_i = 0, $1438 = 0, $src_013_i_i307_i = 0, $_012_i_i308_i = 0, $_01011_i_i309_i = 0, $1452 = 0, $1453 = 0, $1457 = 0, $_size_i_i = 0, $1461 = 0, $n_1_i_i = 0, $1467 = 0, $_0_i23_i_i = 0, $_be_i = 0, $_08_i396_i = 0, $1481 = 0, $1483 = 0, $i_017_i318_i = 0, $1488 = 0, $reg_1_i320_i = 0, $1491 = 0, $reg_1_1_i321_i = 0, $1494 = 0, $reg_1_2_i322_i = 0, $1497 = 0, $reg_1_3_i323_i = 0, $1500 = 0, $reg_1_4_i324_i = 0, $1503 = 0, $reg_1_5_i325_i = 0, $1506 = 0, $reg_1_6_i326_i = 0, $1509 = 0, $src_013_i330_i = 0, $_012_i331_i = 0, $_01011_i332_i = 0, $1524 = 0, $1525 = 0, $_ph372_i = 0, $_lcssa394_i = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 33320
 STACKTOP = STACKTOP + 304 | 0; //@line 33320
 $buf_i195_i = sp | 0; //@line 33321
 $buf_i151_i = sp + 8 | 0; //@line 33322
 $buf_i_i_i = sp + 32 | 0; //@line 33323
 $buf_i_i = sp + 288 | 0; //@line 33324
 $buf_i = sp + 296 | 0; //@line 33325
 $1 = _psi_img_new() | 0; //@line 33326
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 33330
  STACKTOP = sp; //@line 33332
  return $_0 | 0; //@line 33333
 }
 $4 = $buf_i | 0; //@line 33335
 L17112 : do {
  if ((_fread($4 | 0, 1, 8, $fp | 0) | 0) == 8) {
   if (!(HEAP8[6648] | 0)) {
    $i_017_i_i = 0; //@line 33344
    do {
     $9 = $i_017_i_i << 25; //@line 33349
     $reg_1_i_i = ($i_017_i_i & 128 | 0) != 0 ? $9 ^ 517762881 : $9; //@line 33351
     $12 = $reg_1_i_i << 1; //@line 33353
     $reg_1_1_i_i = ($reg_1_i_i | 0) < 0 ? $12 ^ 517762881 : $12; //@line 33355
     $15 = $reg_1_1_i_i << 1; //@line 33357
     $reg_1_2_i_i = ($reg_1_1_i_i | 0) < 0 ? $15 ^ 517762881 : $15; //@line 33359
     $18 = $reg_1_2_i_i << 1; //@line 33361
     $reg_1_3_i_i = ($reg_1_2_i_i | 0) < 0 ? $18 ^ 517762881 : $18; //@line 33363
     $21 = $reg_1_3_i_i << 1; //@line 33365
     $reg_1_4_i_i = ($reg_1_3_i_i | 0) < 0 ? $21 ^ 517762881 : $21; //@line 33367
     $24 = $reg_1_4_i_i << 1; //@line 33369
     $reg_1_5_i_i = ($reg_1_4_i_i | 0) < 0 ? $24 ^ 517762881 : $24; //@line 33371
     $27 = $reg_1_5_i_i << 1; //@line 33373
     $reg_1_6_i_i = ($reg_1_5_i_i | 0) < 0 ? $27 ^ 517762881 : $27; //@line 33375
     $30 = $reg_1_6_i_i << 1; //@line 33377
     HEAP32[58216 + ($i_017_i_i << 2) >> 2] = ($reg_1_6_i_i | 0) < 0 ? $30 ^ 517762881 : $30; //@line 33381
     $i_017_i_i = $i_017_i_i + 1 | 0; //@line 33382
    } while ($i_017_i_i >>> 0 < 256);
    HEAP8[6648] = 1; //@line 33391
   }
   $36 = $buf_i + 1 | 0; //@line 33394
   $40 = HEAP32[58216 + (HEAPU8[$4] << 2) >> 2] | 0; //@line 33398
   $42 = $buf_i + 2 | 0; //@line 33400
   $49 = HEAP32[58216 + ((HEAPU8[$36] ^ $40 >>> 24) << 2) >> 2] ^ $40 << 8; //@line 33407
   $51 = $buf_i + 3 | 0; //@line 33409
   $58 = HEAP32[58216 + ((HEAPU8[$42] ^ $49 >>> 24) << 2) >> 2] ^ $49 << 8; //@line 33416
   $60 = $buf_i + 4 | 0; //@line 33418
   $67 = HEAP32[58216 + ((HEAPU8[$51] ^ $58 >>> 24) << 2) >> 2] ^ $58 << 8; //@line 33425
   $69 = $buf_i + 5 | 0; //@line 33427
   $76 = HEAP32[58216 + ((HEAPU8[$60] ^ $67 >>> 24) << 2) >> 2] ^ $67 << 8; //@line 33434
   $78 = $buf_i + 6 | 0; //@line 33436
   $85 = HEAP32[58216 + ((HEAPU8[$69] ^ $76 >>> 24) << 2) >> 2] ^ $76 << 8; //@line 33443
   $87 = $buf_i + 7 | 0; //@line 33445
   $94 = HEAP32[58216 + ((HEAPU8[$78] ^ $85 >>> 24) << 2) >> 2] ^ $85 << 8; //@line 33452
   $102 = HEAP32[58216 + ((HEAPU8[$87] ^ $94 >>> 24) << 2) >> 2] ^ $94 << 8; //@line 33460
   $103 = _psi_get_uint32_be($4, 0) | 0; //@line 33461
   $104 = _psi_get_uint32_be($4, 4) | 0; //@line 33462
   if (($103 | 0) != 1347635488) {
    break;
   }
   $107 = $buf_i_i | 0; //@line 33468
   if ($104 >>> 0 < 4) {
    break;
   }
   if ((_fread($107 | 0, 1, 4, $fp | 0) | 0) != 4) {
    break;
   }
   if (!(HEAP8[6648] | 0)) {
    $i_017_i_i_i = 0; //@line 33483
    do {
     $114 = $i_017_i_i_i << 25; //@line 33488
     $reg_1_i_i_i = ($i_017_i_i_i & 128 | 0) != 0 ? $114 ^ 517762881 : $114; //@line 33490
     $117 = $reg_1_i_i_i << 1; //@line 33492
     $reg_1_1_i_i_i = ($reg_1_i_i_i | 0) < 0 ? $117 ^ 517762881 : $117; //@line 33494
     $120 = $reg_1_1_i_i_i << 1; //@line 33496
     $reg_1_2_i_i_i = ($reg_1_1_i_i_i | 0) < 0 ? $120 ^ 517762881 : $120; //@line 33498
     $123 = $reg_1_2_i_i_i << 1; //@line 33500
     $reg_1_3_i_i_i = ($reg_1_2_i_i_i | 0) < 0 ? $123 ^ 517762881 : $123; //@line 33502
     $126 = $reg_1_3_i_i_i << 1; //@line 33504
     $reg_1_4_i_i_i = ($reg_1_3_i_i_i | 0) < 0 ? $126 ^ 517762881 : $126; //@line 33506
     $129 = $reg_1_4_i_i_i << 1; //@line 33508
     $reg_1_5_i_i_i = ($reg_1_4_i_i_i | 0) < 0 ? $129 ^ 517762881 : $129; //@line 33510
     $132 = $reg_1_5_i_i_i << 1; //@line 33512
     $reg_1_6_i_i_i = ($reg_1_5_i_i_i | 0) < 0 ? $132 ^ 517762881 : $132; //@line 33514
     $135 = $reg_1_6_i_i_i << 1; //@line 33516
     HEAP32[58216 + ($i_017_i_i_i << 2) >> 2] = ($reg_1_6_i_i_i | 0) < 0 ? $135 ^ 517762881 : $135; //@line 33520
     $i_017_i_i_i = $i_017_i_i_i + 1 | 0; //@line 33521
    } while ($i_017_i_i_i >>> 0 < 256);
    HEAP8[6648] = 1; //@line 33530
   }
   $142 = $buf_i_i + 1 | 0; //@line 33534
   $149 = HEAP32[58216 + ((HEAPU8[$107] ^ $102 >>> 24) << 2) >> 2] ^ $102 << 8; //@line 33541
   $151 = $buf_i_i + 2 | 0; //@line 33543
   $158 = HEAP32[58216 + ((HEAPU8[$142] ^ $149 >>> 24) << 2) >> 2] ^ $149 << 8; //@line 33550
   $160 = $buf_i_i + 3 | 0; //@line 33552
   $167 = HEAP32[58216 + ((HEAPU8[$151] ^ $158 >>> 24) << 2) >> 2] ^ $158 << 8; //@line 33559
   $175 = HEAP32[58216 + ((HEAPU8[$160] ^ $167 >>> 24) << 2) >> 2] ^ $167 << 8; //@line 33567
   $176 = _psi_get_uint16_be($107, 0) | 0; //@line 33568
   if (($176 | 0) != 0) {
    $179 = HEAP32[_stderr >> 2] | 0; //@line 33572
    _fprintf($179 | 0, 46136, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $176, tempInt) | 0) | 0; //@line 33573
    break;
   }
   $182 = _psi_get_uint16_be($107, 2) | 0; //@line 33577
   if (($182 | 0) == 256) {
    $enc_0_load359_i = 1; //@line 33579
   } else if (($182 | 0) == 514) {
    $enc_0_load359_i = 16386; //@line 33582
   } else if (($182 | 0) == 257) {
    $enc_0_load359_i = 32769; //@line 33585
   } else if (($182 | 0) == 513) {
    $enc_0_load359_i = 32770; //@line 33588
   } else if (($182 | 0) == 512) {
    $enc_0_load359_i = 2; //@line 33591
   } else if (($182 | 0) == 768) {
    $enc_0_load359_i = 3; //@line 33594
   } else {
    $enc_0_load359_i = 0; //@line 33597
   }
   $190 = $104 - 4 | 0; //@line 33600
   $191 = $buf_i_i_i | 0; //@line 33601
   if (($190 | 0) == 0) {
    $crc4042_lcssa_i_i = $175; //@line 33605
   } else {
    $crc404248_i_i = $175;
    $_08_i49_i_i = $190;
    while (1) {
     $194 = $_08_i49_i_i >>> 0 < 256 ? $_08_i49_i_i : 256; //@line 33612
     if ((_fread($191 | 0, 1, $194 | 0, $fp | 0) | 0) != ($194 | 0)) {
      break L17112;
     }
     if (!(HEAP8[6648] | 0)) {
      $i_017_i17_i_i = 0; //@line 33622
      do {
       $199 = $i_017_i17_i_i << 25; //@line 33627
       $reg_1_i19_i_i = ($i_017_i17_i_i & 128 | 0) != 0 ? $199 ^ 517762881 : $199; //@line 33629
       $202 = $reg_1_i19_i_i << 1; //@line 33631
       $reg_1_1_i20_i_i = ($reg_1_i19_i_i | 0) < 0 ? $202 ^ 517762881 : $202; //@line 33633
       $205 = $reg_1_1_i20_i_i << 1; //@line 33635
       $reg_1_2_i21_i_i = ($reg_1_1_i20_i_i | 0) < 0 ? $205 ^ 517762881 : $205; //@line 33637
       $208 = $reg_1_2_i21_i_i << 1; //@line 33639
       $reg_1_3_i22_i_i = ($reg_1_2_i21_i_i | 0) < 0 ? $208 ^ 517762881 : $208; //@line 33641
       $211 = $reg_1_3_i22_i_i << 1; //@line 33643
       $reg_1_4_i23_i_i = ($reg_1_3_i22_i_i | 0) < 0 ? $211 ^ 517762881 : $211; //@line 33645
       $214 = $reg_1_4_i23_i_i << 1; //@line 33647
       $reg_1_5_i24_i_i = ($reg_1_4_i23_i_i | 0) < 0 ? $214 ^ 517762881 : $214; //@line 33649
       $217 = $reg_1_5_i24_i_i << 1; //@line 33651
       $reg_1_6_i25_i_i = ($reg_1_5_i24_i_i | 0) < 0 ? $217 ^ 517762881 : $217; //@line 33653
       $220 = $reg_1_6_i25_i_i << 1; //@line 33655
       HEAP32[58216 + ($i_017_i17_i_i << 2) >> 2] = ($reg_1_6_i25_i_i | 0) < 0 ? $220 ^ 517762881 : $220; //@line 33659
       $i_017_i17_i_i = $i_017_i17_i_i + 1 | 0; //@line 33660
      } while ($i_017_i17_i_i >>> 0 < 256);
      HEAP8[6648] = 1; //@line 33669
     }
     if (($194 | 0) == 0) {
      $crc4041_ph_i_i = $crc404248_i_i; //@line 33675
     } else {
      $_01011_i31_i_i = $194;
      $_012_i30_i_i = $crc404248_i_i;
      $src_013_i29_i_i = $191;
      while (1) {
       $235 = HEAP32[58216 + ((HEAPU8[$src_013_i29_i_i] ^ $_012_i30_i_i >>> 24) << 2) >> 2] ^ $_012_i30_i_i << 8; //@line 33690
       $236 = $_01011_i31_i_i - 1 | 0; //@line 33691
       if (($236 | 0) == 0) {
        $crc4041_ph_i_i = $235; //@line 33695
        break;
       } else {
        $_01011_i31_i_i = $236;
        $_012_i30_i_i = $235;
        $src_013_i29_i_i = $src_013_i29_i_i + 1 | 0;
       }
      }
     }
     if (($_08_i49_i_i | 0) == ($194 | 0)) {
      $crc4042_lcssa_i_i = $crc4041_ph_i_i; //@line 33707
      break;
     } else {
      $crc404248_i_i = $crc4041_ph_i_i;
      $_08_i49_i_i = $_08_i49_i_i - $194 | 0;
     }
    }
   }
   if ((_fread($191 | 0, 1, 4, $fp | 0) | 0) != 4) {
    break;
   }
   if ((_psi_get_uint32_be($191, 0) | 0) != ($crc4042_lcssa_i_i | 0)) {
    $263 = HEAP32[_stderr >> 2] | 0; //@line 33725
    _fwrite(56464, 15, 1, $263 | 0) | 0; //@line 33726
    break;
   }
   if ((_fread($4 | 0, 1, 8, $fp | 0) | 0) != 8) {
    break;
   }
   $247 = $buf_i_i + 4 | 0; //@line 33736
   $248 = $buf_i_i + 5 | 0; //@line 33737
   $249 = $buf_i_i + 6 | 0; //@line 33738
   $250 = $buf_i_i + 7 | 0; //@line 33739
   $251 = $buf_i151_i | 0; //@line 33740
   $252 = $buf_i151_i + 2 | 0; //@line 33741
   $253 = $buf_i151_i + 3 | 0; //@line 33742
   $254 = $buf_i151_i + 4 | 0; //@line 33743
   $255 = $buf_i151_i + 5 | 0; //@line 33744
   $256 = $buf_i151_i + 6 | 0; //@line 33745
   $257 = $buf_i195_i | 0; //@line 33746
   $258 = $buf_i195_i + 1 | 0; //@line 33747
   $259 = $buf_i195_i + 2 | 0; //@line 33748
   $260 = $buf_i195_i + 3 | 0; //@line 33749
   $261 = HEAP32[_stderr >> 2] | 0; //@line 33750
   $266 = 0; //@line 33752
   L17157 : while (1) {
    if (!(HEAP8[6648] | 0)) {
     $i_017_i39_i = 0; //@line 33758
     do {
      $268 = $i_017_i39_i << 25; //@line 33763
      $reg_1_i41_i = ($i_017_i39_i & 128 | 0) != 0 ? $268 ^ 517762881 : $268; //@line 33765
      $271 = $reg_1_i41_i << 1; //@line 33767
      $reg_1_1_i42_i = ($reg_1_i41_i | 0) < 0 ? $271 ^ 517762881 : $271; //@line 33769
      $274 = $reg_1_1_i42_i << 1; //@line 33771
      $reg_1_2_i43_i = ($reg_1_1_i42_i | 0) < 0 ? $274 ^ 517762881 : $274; //@line 33773
      $277 = $reg_1_2_i43_i << 1; //@line 33775
      $reg_1_3_i44_i = ($reg_1_2_i43_i | 0) < 0 ? $277 ^ 517762881 : $277; //@line 33777
      $280 = $reg_1_3_i44_i << 1; //@line 33779
      $reg_1_4_i45_i = ($reg_1_3_i44_i | 0) < 0 ? $280 ^ 517762881 : $280; //@line 33781
      $283 = $reg_1_4_i45_i << 1; //@line 33783
      $reg_1_5_i46_i = ($reg_1_4_i45_i | 0) < 0 ? $283 ^ 517762881 : $283; //@line 33785
      $286 = $reg_1_5_i46_i << 1; //@line 33787
      $reg_1_6_i47_i = ($reg_1_5_i46_i | 0) < 0 ? $286 ^ 517762881 : $286; //@line 33789
      $289 = $reg_1_6_i47_i << 1; //@line 33791
      HEAP32[58216 + ($i_017_i39_i << 2) >> 2] = ($reg_1_6_i47_i | 0) < 0 ? $289 ^ 517762881 : $289; //@line 33795
      $i_017_i39_i = $i_017_i39_i + 1 | 0; //@line 33796
     } while ($i_017_i39_i >>> 0 < 256);
     HEAP8[6648] = 1; //@line 33805
    }
    $298 = HEAP32[58216 + (HEAPU8[$4] << 2) >> 2] | 0; //@line 33811
    $306 = HEAP32[58216 + ((HEAPU8[$36] ^ $298 >>> 24) << 2) >> 2] ^ $298 << 8; //@line 33819
    $314 = HEAP32[58216 + ((HEAPU8[$42] ^ $306 >>> 24) << 2) >> 2] ^ $306 << 8; //@line 33827
    $322 = HEAP32[58216 + ((HEAPU8[$51] ^ $314 >>> 24) << 2) >> 2] ^ $314 << 8; //@line 33835
    $330 = HEAP32[58216 + ((HEAPU8[$60] ^ $322 >>> 24) << 2) >> 2] ^ $322 << 8; //@line 33843
    $338 = HEAP32[58216 + ((HEAPU8[$69] ^ $330 >>> 24) << 2) >> 2] ^ $330 << 8; //@line 33851
    $346 = HEAP32[58216 + ((HEAPU8[$78] ^ $338 >>> 24) << 2) >> 2] ^ $338 << 8; //@line 33859
    $354 = HEAP32[58216 + ((HEAPU8[$87] ^ $346 >>> 24) << 2) >> 2] ^ $346 << 8; //@line 33867
    $355 = _psi_get_uint32_be($4, 0) | 0; //@line 33868
    $356 = _psi_get_uint32_be($4, 4) | 0; //@line 33869
    do {
     if (($355 | 0) == 1145132097) {
      if (($266 | 0) == 0) {
       break L17112;
      }
      if ((_psi_sct_set_size($266, $356, 0) | 0) != 0) {
       break L17112;
      }
      if (($356 | 0) == 0) {
       $crc30_i_i = $354; //@line 33886
      } else {
       $1349 = HEAP32[$266 + 24 >> 2] | 0; //@line 33889
       if ((_fread($1349 | 0, 1, $356 | 0, $fp | 0) | 0) != ($356 | 0)) {
        break L17112;
       }
       if (HEAP8[6648] | 0) {
        $_01011_i_i291_i = $356;
        $_012_i_i290_i = $354;
        $src_013_i_i289_i = $1349;
       } else {
        $i_017_i_i278_i = 0; //@line 33901
        do {
         $1354 = $i_017_i_i278_i << 25; //@line 33906
         $reg_1_i_i280_i = ($i_017_i_i278_i & 128 | 0) != 0 ? $1354 ^ 517762881 : $1354; //@line 33908
         $1357 = $reg_1_i_i280_i << 1; //@line 33910
         $reg_1_1_i_i281_i = ($reg_1_i_i280_i | 0) < 0 ? $1357 ^ 517762881 : $1357; //@line 33912
         $1360 = $reg_1_1_i_i281_i << 1; //@line 33914
         $reg_1_2_i_i282_i = ($reg_1_1_i_i281_i | 0) < 0 ? $1360 ^ 517762881 : $1360; //@line 33916
         $1363 = $reg_1_2_i_i282_i << 1; //@line 33918
         $reg_1_3_i_i283_i = ($reg_1_2_i_i282_i | 0) < 0 ? $1363 ^ 517762881 : $1363; //@line 33920
         $1366 = $reg_1_3_i_i283_i << 1; //@line 33922
         $reg_1_4_i_i284_i = ($reg_1_3_i_i283_i | 0) < 0 ? $1366 ^ 517762881 : $1366; //@line 33924
         $1369 = $reg_1_4_i_i284_i << 1; //@line 33926
         $reg_1_5_i_i285_i = ($reg_1_4_i_i284_i | 0) < 0 ? $1369 ^ 517762881 : $1369; //@line 33928
         $1372 = $reg_1_5_i_i285_i << 1; //@line 33930
         $reg_1_6_i_i286_i = ($reg_1_5_i_i285_i | 0) < 0 ? $1372 ^ 517762881 : $1372; //@line 33932
         $1375 = $reg_1_6_i_i286_i << 1; //@line 33934
         HEAP32[58216 + ($i_017_i_i278_i << 2) >> 2] = ($reg_1_6_i_i286_i | 0) < 0 ? $1375 ^ 517762881 : $1375; //@line 33938
         $i_017_i_i278_i = $i_017_i_i278_i + 1 | 0; //@line 33939
        } while ($i_017_i_i278_i >>> 0 < 256);
        HEAP8[6648] = 1; //@line 33948
        $_01011_i_i291_i = $356;
        $_012_i_i290_i = $354;
        $src_013_i_i289_i = $1349;
       }
       while (1) {
        $1389 = HEAP32[58216 + ((HEAPU8[$src_013_i_i289_i] ^ $_012_i_i290_i >>> 24) << 2) >> 2] ^ $_012_i_i290_i << 8; //@line 33964
        $1390 = $_01011_i_i291_i - 1 | 0; //@line 33965
        if (($1390 | 0) == 0) {
         $crc30_i_i = $1389; //@line 33969
         break;
        } else {
         $_01011_i_i291_i = $1390;
         $_012_i_i290_i = $1389;
         $src_013_i_i289_i = $src_013_i_i289_i + 1 | 0;
        }
       }
      }
      if ((_fread($191 | 0, 1, 4, $fp | 0) | 0) != 4) {
       break L17112;
      }
      if ((_psi_get_uint32_be($191, 0) | 0) == ($crc30_i_i | 0)) {
       $_be_i = $266; //@line 33987
      } else {
       label = 13702; //@line 33989
       break L17157;
      }
     } else if (($355 | 0) == 1296122695) {
      if (($266 | 0) == 0 | $356 >>> 0 < 18) {
       break L17112;
      }
      if ((_fread($251 | 0, 1, 18, $fp | 0) | 0) != 18) {
       break L17112;
      }
      if (HEAP8[6648] | 0) {
       $_01011_i_i167_i = 18;
       $_012_i_i166_i = $354;
       $src_013_i_i165_i = $251;
      } else {
       $i_017_i_i154_i = 0; //@line 34011
       do {
        $964 = $i_017_i_i154_i << 25; //@line 34016
        $reg_1_i_i156_i = ($i_017_i_i154_i & 128 | 0) != 0 ? $964 ^ 517762881 : $964; //@line 34018
        $967 = $reg_1_i_i156_i << 1; //@line 34020
        $reg_1_1_i_i157_i = ($reg_1_i_i156_i | 0) < 0 ? $967 ^ 517762881 : $967; //@line 34022
        $970 = $reg_1_1_i_i157_i << 1; //@line 34024
        $reg_1_2_i_i158_i = ($reg_1_1_i_i157_i | 0) < 0 ? $970 ^ 517762881 : $970; //@line 34026
        $973 = $reg_1_2_i_i158_i << 1; //@line 34028
        $reg_1_3_i_i159_i = ($reg_1_2_i_i158_i | 0) < 0 ? $973 ^ 517762881 : $973; //@line 34030
        $976 = $reg_1_3_i_i159_i << 1; //@line 34032
        $reg_1_4_i_i160_i = ($reg_1_3_i_i159_i | 0) < 0 ? $976 ^ 517762881 : $976; //@line 34034
        $979 = $reg_1_4_i_i160_i << 1; //@line 34036
        $reg_1_5_i_i161_i = ($reg_1_4_i_i160_i | 0) < 0 ? $979 ^ 517762881 : $979; //@line 34038
        $982 = $reg_1_5_i_i161_i << 1; //@line 34040
        $reg_1_6_i_i162_i = ($reg_1_5_i_i161_i | 0) < 0 ? $982 ^ 517762881 : $982; //@line 34042
        $985 = $reg_1_6_i_i162_i << 1; //@line 34044
        HEAP32[58216 + ($i_017_i_i154_i << 2) >> 2] = ($reg_1_6_i_i162_i | 0) < 0 ? $985 ^ 517762881 : $985; //@line 34048
        $i_017_i_i154_i = $i_017_i_i154_i + 1 | 0; //@line 34049
       } while ($i_017_i_i154_i >>> 0 < 256);
       HEAP8[6648] = 1; //@line 34058
       $_01011_i_i167_i = 18;
       $_012_i_i166_i = $354;
       $src_013_i_i165_i = $251;
      }
      while (1) {
       $999 = HEAP32[58216 + ((HEAPU8[$src_013_i_i165_i] ^ $_012_i_i166_i >>> 24) << 2) >> 2] ^ $_012_i_i166_i << 8; //@line 34074
       $1000 = $_01011_i_i167_i - 1 | 0; //@line 34075
       if (($1000 | 0) == 0) {
        break;
       } else {
        $_01011_i_i167_i = $1000;
        $_012_i_i166_i = $999;
        $src_013_i_i165_i = $src_013_i_i165_i + 1 | 0;
       }
      }
      HEAP16[$266 + 4 >> 1] = (_psi_get_uint16_be($251, 0) | 0) & 65535; //@line 34087
      HEAP16[$266 + 6 >> 1] = HEAPU8[$252] | 0; //@line 34091
      HEAP16[$266 + 8 >> 1] = HEAPU8[$253] | 0; //@line 34095
      _psi_sct_set_gcr_format($266, HEAP8[$254] | 0); //@line 34097
      $1013 = HEAP8[$255] | 0; //@line 34098
      if (($1013 & 1) != 0) {
       $1017 = $266 + 12 | 0; //@line 34103
       HEAP32[$1017 >> 2] = HEAP32[$1017 >> 2] | 1; //@line 34106
      }
      if (($1013 & 2) != 0) {
       $1024 = $266 + 12 | 0; //@line 34113
       HEAP32[$1024 >> 2] = HEAP32[$1024 >> 2] | 2; //@line 34116
      }
      if (($1013 & 4) != 0) {
       $1031 = $266 + 12 | 0; //@line 34123
       HEAP32[$1031 >> 2] = HEAP32[$1031 >> 2] | 8; //@line 34126
      }
      _psi_sct_set_encoding($266, 3); //@line 34129
      _psi_sct_set_tags($266, $256, 12) | 0; //@line 34130
      $1036 = $356 - 18 | 0; //@line 34131
      if (($1036 | 0) == 0) {
       $crc2830_lcssa_i191_i = $999; //@line 34135
      } else {
       $crc283036_i170_i = $999;
       $_08_i37_i169_i = $1036;
       while (1) {
        $1039 = $_08_i37_i169_i >>> 0 < 256 ? $_08_i37_i169_i : 256; //@line 34142
        if ((_fread($191 | 0, 1, $1039 | 0, $fp | 0) | 0) != ($1039 | 0)) {
         break L17112;
        }
        if (!(HEAP8[6648] | 0)) {
         $i_017_i5_i173_i = 0; //@line 34152
         do {
          $1044 = $i_017_i5_i173_i << 25; //@line 34157
          $reg_1_i7_i175_i = ($i_017_i5_i173_i & 128 | 0) != 0 ? $1044 ^ 517762881 : $1044; //@line 34159
          $1047 = $reg_1_i7_i175_i << 1; //@line 34161
          $reg_1_1_i8_i176_i = ($reg_1_i7_i175_i | 0) < 0 ? $1047 ^ 517762881 : $1047; //@line 34163
          $1050 = $reg_1_1_i8_i176_i << 1; //@line 34165
          $reg_1_2_i9_i177_i = ($reg_1_1_i8_i176_i | 0) < 0 ? $1050 ^ 517762881 : $1050; //@line 34167
          $1053 = $reg_1_2_i9_i177_i << 1; //@line 34169
          $reg_1_3_i10_i178_i = ($reg_1_2_i9_i177_i | 0) < 0 ? $1053 ^ 517762881 : $1053; //@line 34171
          $1056 = $reg_1_3_i10_i178_i << 1; //@line 34173
          $reg_1_4_i11_i179_i = ($reg_1_3_i10_i178_i | 0) < 0 ? $1056 ^ 517762881 : $1056; //@line 34175
          $1059 = $reg_1_4_i11_i179_i << 1; //@line 34177
          $reg_1_5_i12_i180_i = ($reg_1_4_i11_i179_i | 0) < 0 ? $1059 ^ 517762881 : $1059; //@line 34179
          $1062 = $reg_1_5_i12_i180_i << 1; //@line 34181
          $reg_1_6_i13_i181_i = ($reg_1_5_i12_i180_i | 0) < 0 ? $1062 ^ 517762881 : $1062; //@line 34183
          $1065 = $reg_1_6_i13_i181_i << 1; //@line 34185
          HEAP32[58216 + ($i_017_i5_i173_i << 2) >> 2] = ($reg_1_6_i13_i181_i | 0) < 0 ? $1065 ^ 517762881 : $1065; //@line 34189
          $i_017_i5_i173_i = $i_017_i5_i173_i + 1 | 0; //@line 34190
         } while ($i_017_i5_i173_i >>> 0 < 256);
         HEAP8[6648] = 1; //@line 34199
        }
        if (($1039 | 0) == 0) {
         $crc2829_ph_i189_i = $crc283036_i170_i; //@line 34205
        } else {
         $_01011_i19_i187_i = $1039;
         $_012_i18_i186_i = $crc283036_i170_i;
         $src_013_i17_i185_i = $191;
         while (1) {
          $1080 = HEAP32[58216 + ((HEAPU8[$src_013_i17_i185_i] ^ $_012_i18_i186_i >>> 24) << 2) >> 2] ^ $_012_i18_i186_i << 8; //@line 34220
          $1081 = $_01011_i19_i187_i - 1 | 0; //@line 34221
          if (($1081 | 0) == 0) {
           $crc2829_ph_i189_i = $1080; //@line 34225
           break;
          } else {
           $_01011_i19_i187_i = $1081;
           $_012_i18_i186_i = $1080;
           $src_013_i17_i185_i = $src_013_i17_i185_i + 1 | 0;
          }
         }
        }
        if (($_08_i37_i169_i | 0) == ($1039 | 0)) {
         $crc2830_lcssa_i191_i = $crc2829_ph_i189_i; //@line 34237
         break;
        } else {
         $crc283036_i170_i = $crc2829_ph_i189_i;
         $_08_i37_i169_i = $_08_i37_i169_i - $1039 | 0;
        }
       }
      }
      if ((_fread($191 | 0, 1, 4, $fp | 0) | 0) != 4) {
       break L17112;
      }
      if ((_psi_get_uint32_be($191, 0) | 0) == ($crc2830_lcssa_i191_i | 0)) {
       $_be_i = $266; //@line 34255
      } else {
       label = 13659; //@line 34257
       break L17157;
      }
     } else if (($355 | 0) == 1162757152) {
      label = 13544; //@line 34261
      break L17157;
     } else if (($355 | 0) == 1229081926) {
      if (($266 | 0) == 0 | $356 >>> 0 < 6) {
       break L17112;
      }
      if ((_fread($107 | 0, 1, 6, $fp | 0) | 0) != 6) {
       break L17112;
      }
      if (!(HEAP8[6648] | 0)) {
       $i_017_i_i94_i = 0; //@line 34280
       do {
        $611 = $i_017_i_i94_i << 25; //@line 34285
        $reg_1_i_i96_i = ($i_017_i_i94_i & 128 | 0) != 0 ? $611 ^ 517762881 : $611; //@line 34287
        $614 = $reg_1_i_i96_i << 1; //@line 34289
        $reg_1_1_i_i97_i = ($reg_1_i_i96_i | 0) < 0 ? $614 ^ 517762881 : $614; //@line 34291
        $617 = $reg_1_1_i_i97_i << 1; //@line 34293
        $reg_1_2_i_i98_i = ($reg_1_1_i_i97_i | 0) < 0 ? $617 ^ 517762881 : $617; //@line 34295
        $620 = $reg_1_2_i_i98_i << 1; //@line 34297
        $reg_1_3_i_i99_i = ($reg_1_2_i_i98_i | 0) < 0 ? $620 ^ 517762881 : $620; //@line 34299
        $623 = $reg_1_3_i_i99_i << 1; //@line 34301
        $reg_1_4_i_i100_i = ($reg_1_3_i_i99_i | 0) < 0 ? $623 ^ 517762881 : $623; //@line 34303
        $626 = $reg_1_4_i_i100_i << 1; //@line 34305
        $reg_1_5_i_i101_i = ($reg_1_4_i_i100_i | 0) < 0 ? $626 ^ 517762881 : $626; //@line 34307
        $629 = $reg_1_5_i_i101_i << 1; //@line 34309
        $reg_1_6_i_i102_i = ($reg_1_5_i_i101_i | 0) < 0 ? $629 ^ 517762881 : $629; //@line 34311
        $632 = $reg_1_6_i_i102_i << 1; //@line 34313
        HEAP32[58216 + ($i_017_i_i94_i << 2) >> 2] = ($reg_1_6_i_i102_i | 0) < 0 ? $632 ^ 517762881 : $632; //@line 34317
        $i_017_i_i94_i = $i_017_i_i94_i + 1 | 0; //@line 34318
       } while ($i_017_i_i94_i >>> 0 < 256);
       HEAP8[6648] = 1; //@line 34327
      }
      $639 = HEAP8[$107] | 0; //@line 34331
      $645 = HEAP32[58216 + (($639 & 255 ^ $354 >>> 24) << 2) >> 2] ^ $354 << 8; //@line 34337
      $647 = HEAP8[$142] | 0; //@line 34339
      $653 = HEAP32[58216 + (($647 & 255 ^ $645 >>> 24) << 2) >> 2] ^ $645 << 8; //@line 34345
      $655 = HEAP8[$151] | 0; //@line 34347
      $661 = HEAP32[58216 + (($655 & 255 ^ $653 >>> 24) << 2) >> 2] ^ $653 << 8; //@line 34353
      $663 = HEAP8[$160] | 0; //@line 34355
      $669 = HEAP32[58216 + (($663 & 255 ^ $661 >>> 24) << 2) >> 2] ^ $661 << 8; //@line 34361
      $671 = HEAP8[$247] | 0; //@line 34363
      $677 = HEAP32[58216 + (($671 & 255 ^ $669 >>> 24) << 2) >> 2] ^ $669 << 8; //@line 34369
      $679 = HEAP8[$248] | 0; //@line 34371
      $685 = HEAP32[58216 + (($679 & 255 ^ $677 >>> 24) << 2) >> 2] ^ $677 << 8; //@line 34377
      HEAP16[$266 + 4 >> 1] = $639 & 255; //@line 34380
      HEAP16[$266 + 6 >> 1] = $647 & 255; //@line 34383
      HEAP16[$266 + 8 >> 1] = $655 & 255; //@line 34386
      _psi_sct_set_mfm_size($266, $663); //@line 34387
      if (($671 & 1) != 0) {
       $695 = $266 + 12 | 0; //@line 34392
       HEAP32[$695 >> 2] = HEAP32[$695 >> 2] | 1; //@line 34395
      }
      if (($671 & 2) != 0) {
       $702 = $266 + 12 | 0; //@line 34402
       HEAP32[$702 >> 2] = HEAP32[$702 >> 2] | 2; //@line 34405
      }
      if (($671 & 4) != 0) {
       $709 = $266 + 12 | 0; //@line 34412
       HEAP32[$709 >> 2] = HEAP32[$709 >> 2] | 4; //@line 34415
      }
      if (($671 & 8) != 0) {
       $716 = $266 + 12 | 0; //@line 34422
       HEAP32[$716 >> 2] = HEAP32[$716 >> 2] | 8; //@line 34425
      }
      if ($679 << 24 >> 24 == 1) {
       _psi_sct_set_encoding($266, 32769); //@line 34431
      } else {
       _psi_sct_set_encoding($266, 1); //@line 34434
      }
      $723 = $356 - 6 | 0; //@line 34437
      if (($723 | 0) == 0) {
       $crc2830_lcssa_i_i = $685; //@line 34441
      } else {
       $crc283036_i_i = $685;
       $_08_i37_i_i = $723;
       while (1) {
        $726 = $_08_i37_i_i >>> 0 < 256 ? $_08_i37_i_i : 256; //@line 34448
        if ((_fread($191 | 0, 1, $726 | 0, $fp | 0) | 0) != ($726 | 0)) {
         break L17112;
        }
        if (!(HEAP8[6648] | 0)) {
         $i_017_i5_i_i = 0; //@line 34458
         do {
          $731 = $i_017_i5_i_i << 25; //@line 34463
          $reg_1_i7_i_i = ($i_017_i5_i_i & 128 | 0) != 0 ? $731 ^ 517762881 : $731; //@line 34465
          $734 = $reg_1_i7_i_i << 1; //@line 34467
          $reg_1_1_i8_i_i = ($reg_1_i7_i_i | 0) < 0 ? $734 ^ 517762881 : $734; //@line 34469
          $737 = $reg_1_1_i8_i_i << 1; //@line 34471
          $reg_1_2_i9_i_i = ($reg_1_1_i8_i_i | 0) < 0 ? $737 ^ 517762881 : $737; //@line 34473
          $740 = $reg_1_2_i9_i_i << 1; //@line 34475
          $reg_1_3_i10_i_i = ($reg_1_2_i9_i_i | 0) < 0 ? $740 ^ 517762881 : $740; //@line 34477
          $743 = $reg_1_3_i10_i_i << 1; //@line 34479
          $reg_1_4_i11_i_i = ($reg_1_3_i10_i_i | 0) < 0 ? $743 ^ 517762881 : $743; //@line 34481
          $746 = $reg_1_4_i11_i_i << 1; //@line 34483
          $reg_1_5_i12_i_i = ($reg_1_4_i11_i_i | 0) < 0 ? $746 ^ 517762881 : $746; //@line 34485
          $749 = $reg_1_5_i12_i_i << 1; //@line 34487
          $reg_1_6_i13_i_i = ($reg_1_5_i12_i_i | 0) < 0 ? $749 ^ 517762881 : $749; //@line 34489
          $752 = $reg_1_6_i13_i_i << 1; //@line 34491
          HEAP32[58216 + ($i_017_i5_i_i << 2) >> 2] = ($reg_1_6_i13_i_i | 0) < 0 ? $752 ^ 517762881 : $752; //@line 34495
          $i_017_i5_i_i = $i_017_i5_i_i + 1 | 0; //@line 34496
         } while ($i_017_i5_i_i >>> 0 < 256);
         HEAP8[6648] = 1; //@line 34505
        }
        if (($726 | 0) == 0) {
         $crc2829_ph_i_i = $crc283036_i_i; //@line 34511
        } else {
         $_01011_i19_i_i = $726;
         $_012_i18_i_i = $crc283036_i_i;
         $src_013_i17_i_i = $191;
         while (1) {
          $767 = HEAP32[58216 + ((HEAPU8[$src_013_i17_i_i] ^ $_012_i18_i_i >>> 24) << 2) >> 2] ^ $_012_i18_i_i << 8; //@line 34526
          $768 = $_01011_i19_i_i - 1 | 0; //@line 34527
          if (($768 | 0) == 0) {
           $crc2829_ph_i_i = $767; //@line 34531
           break;
          } else {
           $_01011_i19_i_i = $768;
           $_012_i18_i_i = $767;
           $src_013_i17_i_i = $src_013_i17_i_i + 1 | 0;
          }
         }
        }
        if (($_08_i37_i_i | 0) == ($726 | 0)) {
         $crc2830_lcssa_i_i = $crc2829_ph_i_i; //@line 34543
         break;
        } else {
         $crc283036_i_i = $crc2829_ph_i_i;
         $_08_i37_i_i = $_08_i37_i_i - $726 | 0;
        }
       }
      }
      if ((_fread($191 | 0, 1, 4, $fp | 0) | 0) != 4) {
       break L17112;
      }
      if ((_psi_get_uint32_be($191, 0) | 0) == ($crc2830_lcssa_i_i | 0)) {
       $_be_i = $266; //@line 34561
      } else {
       label = 13608; //@line 34563
       break L17157;
      }
     } else if (($355 | 0) == 1229081933) {
      if (($266 | 0) == 0 | $356 >>> 0 < 6) {
       break L17112;
      }
      if ((_fread($107 | 0, 1, 6, $fp | 0) | 0) != 6) {
       break L17112;
      }
      if (!(HEAP8[6648] | 0)) {
       $i_017_i_i113_i = 0; //@line 34583
       do {
        $787 = $i_017_i_i113_i << 25; //@line 34588
        $reg_1_i_i115_i = ($i_017_i_i113_i & 128 | 0) != 0 ? $787 ^ 517762881 : $787; //@line 34590
        $790 = $reg_1_i_i115_i << 1; //@line 34592
        $reg_1_1_i_i116_i = ($reg_1_i_i115_i | 0) < 0 ? $790 ^ 517762881 : $790; //@line 34594
        $793 = $reg_1_1_i_i116_i << 1; //@line 34596
        $reg_1_2_i_i117_i = ($reg_1_1_i_i116_i | 0) < 0 ? $793 ^ 517762881 : $793; //@line 34598
        $796 = $reg_1_2_i_i117_i << 1; //@line 34600
        $reg_1_3_i_i118_i = ($reg_1_2_i_i117_i | 0) < 0 ? $796 ^ 517762881 : $796; //@line 34602
        $799 = $reg_1_3_i_i118_i << 1; //@line 34604
        $reg_1_4_i_i119_i = ($reg_1_3_i_i118_i | 0) < 0 ? $799 ^ 517762881 : $799; //@line 34606
        $802 = $reg_1_4_i_i119_i << 1; //@line 34608
        $reg_1_5_i_i120_i = ($reg_1_4_i_i119_i | 0) < 0 ? $802 ^ 517762881 : $802; //@line 34610
        $805 = $reg_1_5_i_i120_i << 1; //@line 34612
        $reg_1_6_i_i121_i = ($reg_1_5_i_i120_i | 0) < 0 ? $805 ^ 517762881 : $805; //@line 34614
        $808 = $reg_1_6_i_i121_i << 1; //@line 34616
        HEAP32[58216 + ($i_017_i_i113_i << 2) >> 2] = ($reg_1_6_i_i121_i | 0) < 0 ? $808 ^ 517762881 : $808; //@line 34620
        $i_017_i_i113_i = $i_017_i_i113_i + 1 | 0; //@line 34621
       } while ($i_017_i_i113_i >>> 0 < 256);
       HEAP8[6648] = 1; //@line 34630
      }
      $815 = HEAP8[$107] | 0; //@line 34634
      $821 = HEAP32[58216 + (($815 & 255 ^ $354 >>> 24) << 2) >> 2] ^ $354 << 8; //@line 34640
      $823 = HEAP8[$142] | 0; //@line 34642
      $829 = HEAP32[58216 + (($823 & 255 ^ $821 >>> 24) << 2) >> 2] ^ $821 << 8; //@line 34648
      $831 = HEAP8[$151] | 0; //@line 34650
      $837 = HEAP32[58216 + (($831 & 255 ^ $829 >>> 24) << 2) >> 2] ^ $829 << 8; //@line 34656
      $839 = HEAP8[$160] | 0; //@line 34658
      $845 = HEAP32[58216 + (($839 & 255 ^ $837 >>> 24) << 2) >> 2] ^ $837 << 8; //@line 34664
      $847 = HEAP8[$247] | 0; //@line 34666
      $853 = HEAP32[58216 + (($847 & 255 ^ $845 >>> 24) << 2) >> 2] ^ $845 << 8; //@line 34672
      $856 = HEAPU8[$248] | 0; //@line 34675
      $861 = HEAP32[58216 + (($856 ^ $853 >>> 24) << 2) >> 2] ^ $853 << 8; //@line 34680
      HEAP16[$266 + 4 >> 1] = $815 & 255; //@line 34683
      HEAP16[$266 + 6 >> 1] = $823 & 255; //@line 34686
      HEAP16[$266 + 8 >> 1] = $831 & 255; //@line 34689
      _psi_sct_set_mfm_size($266, $839); //@line 34690
      if (($847 & 1) != 0) {
       $871 = $266 + 12 | 0; //@line 34695
       HEAP32[$871 >> 2] = HEAP32[$871 >> 2] | 1; //@line 34698
      }
      if (($847 & 2) != 0) {
       $878 = $266 + 12 | 0; //@line 34705
       HEAP32[$878 >> 2] = HEAP32[$878 >> 2] | 2; //@line 34708
      }
      if (($847 & 4) != 0) {
       $885 = $266 + 12 | 0; //@line 34715
       HEAP32[$885 >> 2] = HEAP32[$885 >> 2] | 4; //@line 34718
      }
      if (($847 & 8) != 0) {
       $892 = $266 + 12 | 0; //@line 34725
       HEAP32[$892 >> 2] = HEAP32[$892 >> 2] | 8; //@line 34728
      }
      if (($856 | 0) == 2) {
       _psi_sct_set_encoding($266, 16386); //@line 34732
      } else if (($856 | 0) == 1) {
       _psi_sct_set_encoding($266, 32770); //@line 34735
      } else {
       _psi_sct_set_encoding($266, 2); //@line 34738
      }
      $900 = $356 - 6 | 0; //@line 34741
      if (($900 | 0) == 0) {
       $crc2830_lcssa_i147_i = $861; //@line 34745
      } else {
       $crc283036_i126_i = $861;
       $_08_i37_i125_i = $900;
       while (1) {
        $903 = $_08_i37_i125_i >>> 0 < 256 ? $_08_i37_i125_i : 256; //@line 34752
        if ((_fread($191 | 0, 1, $903 | 0, $fp | 0) | 0) != ($903 | 0)) {
         break L17112;
        }
        if (!(HEAP8[6648] | 0)) {
         $i_017_i5_i129_i = 0; //@line 34762
         do {
          $908 = $i_017_i5_i129_i << 25; //@line 34767
          $reg_1_i7_i131_i = ($i_017_i5_i129_i & 128 | 0) != 0 ? $908 ^ 517762881 : $908; //@line 34769
          $911 = $reg_1_i7_i131_i << 1; //@line 34771
          $reg_1_1_i8_i132_i = ($reg_1_i7_i131_i | 0) < 0 ? $911 ^ 517762881 : $911; //@line 34773
          $914 = $reg_1_1_i8_i132_i << 1; //@line 34775
          $reg_1_2_i9_i133_i = ($reg_1_1_i8_i132_i | 0) < 0 ? $914 ^ 517762881 : $914; //@line 34777
          $917 = $reg_1_2_i9_i133_i << 1; //@line 34779
          $reg_1_3_i10_i134_i = ($reg_1_2_i9_i133_i | 0) < 0 ? $917 ^ 517762881 : $917; //@line 34781
          $920 = $reg_1_3_i10_i134_i << 1; //@line 34783
          $reg_1_4_i11_i135_i = ($reg_1_3_i10_i134_i | 0) < 0 ? $920 ^ 517762881 : $920; //@line 34785
          $923 = $reg_1_4_i11_i135_i << 1; //@line 34787
          $reg_1_5_i12_i136_i = ($reg_1_4_i11_i135_i | 0) < 0 ? $923 ^ 517762881 : $923; //@line 34789
          $926 = $reg_1_5_i12_i136_i << 1; //@line 34791
          $reg_1_6_i13_i137_i = ($reg_1_5_i12_i136_i | 0) < 0 ? $926 ^ 517762881 : $926; //@line 34793
          $929 = $reg_1_6_i13_i137_i << 1; //@line 34795
          HEAP32[58216 + ($i_017_i5_i129_i << 2) >> 2] = ($reg_1_6_i13_i137_i | 0) < 0 ? $929 ^ 517762881 : $929; //@line 34799
          $i_017_i5_i129_i = $i_017_i5_i129_i + 1 | 0; //@line 34800
         } while ($i_017_i5_i129_i >>> 0 < 256);
         HEAP8[6648] = 1; //@line 34809
        }
        if (($903 | 0) == 0) {
         $crc2829_ph_i145_i = $crc283036_i126_i; //@line 34815
        } else {
         $_01011_i19_i143_i = $903;
         $_012_i18_i142_i = $crc283036_i126_i;
         $src_013_i17_i141_i = $191;
         while (1) {
          $944 = HEAP32[58216 + ((HEAPU8[$src_013_i17_i141_i] ^ $_012_i18_i142_i >>> 24) << 2) >> 2] ^ $_012_i18_i142_i << 8; //@line 34830
          $945 = $_01011_i19_i143_i - 1 | 0; //@line 34831
          if (($945 | 0) == 0) {
           $crc2829_ph_i145_i = $944; //@line 34835
           break;
          } else {
           $_01011_i19_i143_i = $945;
           $_012_i18_i142_i = $944;
           $src_013_i17_i141_i = $src_013_i17_i141_i + 1 | 0;
          }
         }
        }
        if (($_08_i37_i125_i | 0) == ($903 | 0)) {
         $crc2830_lcssa_i147_i = $crc2829_ph_i145_i; //@line 34847
         break;
        } else {
         $crc283036_i126_i = $crc2829_ph_i145_i;
         $_08_i37_i125_i = $_08_i37_i125_i - $903 | 0;
        }
       }
      }
      if ((_fread($191 | 0, 1, 4, $fp | 0) | 0) != 4) {
       break L17112;
      }
      if ((_psi_get_uint32_be($191, 0) | 0) == ($crc2830_lcssa_i147_i | 0)) {
       $_be_i = $266; //@line 34865
      } else {
       label = 13636; //@line 34867
       break L17157;
      }
     } else if (($355 | 0) == 1397048148) {
      if ($356 >>> 0 < 8) {
       break L17112;
      }
      if ((_fread($107 | 0, 1, 8, $fp | 0) | 0) != 8) {
       break L17112;
      }
      if (!(HEAP8[6648] | 0)) {
       $i_017_i_i76_i = 0; //@line 34885
       do {
        $420 = $i_017_i_i76_i << 25; //@line 34890
        $reg_1_i_i78_i = ($i_017_i_i76_i & 128 | 0) != 0 ? $420 ^ 517762881 : $420; //@line 34892
        $423 = $reg_1_i_i78_i << 1; //@line 34894
        $reg_1_1_i_i79_i = ($reg_1_i_i78_i | 0) < 0 ? $423 ^ 517762881 : $423; //@line 34896
        $426 = $reg_1_1_i_i79_i << 1; //@line 34898
        $reg_1_2_i_i80_i = ($reg_1_1_i_i79_i | 0) < 0 ? $426 ^ 517762881 : $426; //@line 34900
        $429 = $reg_1_2_i_i80_i << 1; //@line 34902
        $reg_1_3_i_i81_i = ($reg_1_2_i_i80_i | 0) < 0 ? $429 ^ 517762881 : $429; //@line 34904
        $432 = $reg_1_3_i_i81_i << 1; //@line 34906
        $reg_1_4_i_i82_i = ($reg_1_3_i_i81_i | 0) < 0 ? $432 ^ 517762881 : $432; //@line 34908
        $435 = $reg_1_4_i_i82_i << 1; //@line 34910
        $reg_1_5_i_i83_i = ($reg_1_4_i_i82_i | 0) < 0 ? $435 ^ 517762881 : $435; //@line 34912
        $438 = $reg_1_5_i_i83_i << 1; //@line 34914
        $reg_1_6_i_i84_i = ($reg_1_5_i_i83_i | 0) < 0 ? $438 ^ 517762881 : $438; //@line 34916
        $441 = $reg_1_6_i_i84_i << 1; //@line 34918
        HEAP32[58216 + ($i_017_i_i76_i << 2) >> 2] = ($reg_1_6_i_i84_i | 0) < 0 ? $441 ^ 517762881 : $441; //@line 34922
        $i_017_i_i76_i = $i_017_i_i76_i + 1 | 0; //@line 34923
       } while ($i_017_i_i76_i >>> 0 < 256);
       HEAP8[6648] = 1; //@line 34932
      }
      $454 = HEAP32[58216 + ((HEAPU8[$107] ^ $354 >>> 24) << 2) >> 2] ^ $354 << 8; //@line 34942
      $462 = HEAP32[58216 + ((HEAPU8[$142] ^ $454 >>> 24) << 2) >> 2] ^ $454 << 8; //@line 34950
      $470 = HEAP32[58216 + ((HEAPU8[$151] ^ $462 >>> 24) << 2) >> 2] ^ $462 << 8; //@line 34958
      $478 = HEAP32[58216 + ((HEAPU8[$160] ^ $470 >>> 24) << 2) >> 2] ^ $470 << 8; //@line 34966
      $486 = HEAP32[58216 + ((HEAPU8[$247] ^ $478 >>> 24) << 2) >> 2] ^ $478 << 8; //@line 34974
      $494 = HEAP32[58216 + ((HEAPU8[$248] ^ $486 >>> 24) << 2) >> 2] ^ $486 << 8; //@line 34982
      $502 = HEAP32[58216 + ((HEAPU8[$249] ^ $494 >>> 24) << 2) >> 2] ^ $494 << 8; //@line 34990
      $510 = HEAP32[58216 + ((HEAPU8[$250] ^ $502 >>> 24) << 2) >> 2] ^ $502 << 8; //@line 34998
      $511 = _psi_get_uint16_be($107, 0) | 0; //@line 34999
      $513 = HEAPU8[$151] | 0; //@line 35001
      $515 = HEAPU8[$160] | 0; //@line 35003
      $516 = _psi_get_uint16_be($107, 4) | 0; //@line 35004
      $518 = HEAPU8[$249] | 0; //@line 35006
      $519 = _psi_sct_new($511, $513, $515, $516) | 0; //@line 35007
      if (($519 | 0) == 0) {
       break L17112;
      }
      if (($518 & 2 | 0) == 0) {
       if ((_psi_img_add_sector($1, $519, $511, $513) | 0) != 0) {
        label = 13566; //@line 35021
        break L17157;
       }
      } else {
       if (($266 | 0) == 0) {
        label = 13563; //@line 35028
        break L17157;
       }
       _psi_sct_add_alternate($266, $519); //@line 35031
      }
      if (($518 & 4 | 0) != 0) {
       $537 = $519 + 12 | 0; //@line 35038
       HEAP32[$537 >> 2] = HEAP32[$537 >> 2] | 2; //@line 35041
      }
      _psi_sct_set_encoding($519, $enc_0_load359_i); //@line 35044
      $541 = $356 - 8 | 0; //@line 35045
      if (($518 & 1 | 0) != 0) {
       _psi_sct_fill($519, HEAPU8[$250] | 0); //@line 35052
      }
      if (($541 | 0) == 0) {
       $crc4951_lcssa_i_i = $510; //@line 35058
      } else {
       $crc495157_i_i = $510;
       $_08_i58_i_i = $541;
       while (1) {
        $550 = $_08_i58_i_i >>> 0 < 256 ? $_08_i58_i_i : 256; //@line 35065
        if ((_fread($191 | 0, 1, $550 | 0, $fp | 0) | 0) != ($550 | 0)) {
         break L17112;
        }
        if (!(HEAP8[6648] | 0)) {
         $i_017_i26_i_i = 0; //@line 35075
         do {
          $555 = $i_017_i26_i_i << 25; //@line 35080
          $reg_1_i28_i_i = ($i_017_i26_i_i & 128 | 0) != 0 ? $555 ^ 517762881 : $555; //@line 35082
          $558 = $reg_1_i28_i_i << 1; //@line 35084
          $reg_1_1_i29_i_i = ($reg_1_i28_i_i | 0) < 0 ? $558 ^ 517762881 : $558; //@line 35086
          $561 = $reg_1_1_i29_i_i << 1; //@line 35088
          $reg_1_2_i30_i_i = ($reg_1_1_i29_i_i | 0) < 0 ? $561 ^ 517762881 : $561; //@line 35090
          $564 = $reg_1_2_i30_i_i << 1; //@line 35092
          $reg_1_3_i31_i_i = ($reg_1_2_i30_i_i | 0) < 0 ? $564 ^ 517762881 : $564; //@line 35094
          $567 = $reg_1_3_i31_i_i << 1; //@line 35096
          $reg_1_4_i32_i_i = ($reg_1_3_i31_i_i | 0) < 0 ? $567 ^ 517762881 : $567; //@line 35098
          $570 = $reg_1_4_i32_i_i << 1; //@line 35100
          $reg_1_5_i33_i_i = ($reg_1_4_i32_i_i | 0) < 0 ? $570 ^ 517762881 : $570; //@line 35102
          $573 = $reg_1_5_i33_i_i << 1; //@line 35104
          $reg_1_6_i34_i_i = ($reg_1_5_i33_i_i | 0) < 0 ? $573 ^ 517762881 : $573; //@line 35106
          $576 = $reg_1_6_i34_i_i << 1; //@line 35108
          HEAP32[58216 + ($i_017_i26_i_i << 2) >> 2] = ($reg_1_6_i34_i_i | 0) < 0 ? $576 ^ 517762881 : $576; //@line 35112
          $i_017_i26_i_i = $i_017_i26_i_i + 1 | 0; //@line 35113
         } while ($i_017_i26_i_i >>> 0 < 256);
         HEAP8[6648] = 1; //@line 35122
        }
        if (($550 | 0) == 0) {
         $crc4950_ph_i_i = $crc495157_i_i; //@line 35128
        } else {
         $_01011_i40_i_i = $550;
         $_012_i39_i_i = $crc495157_i_i;
         $src_013_i38_i_i = $191;
         while (1) {
          $591 = HEAP32[58216 + ((HEAPU8[$src_013_i38_i_i] ^ $_012_i39_i_i >>> 24) << 2) >> 2] ^ $_012_i39_i_i << 8; //@line 35143
          $592 = $_01011_i40_i_i - 1 | 0; //@line 35144
          if (($592 | 0) == 0) {
           $crc4950_ph_i_i = $591; //@line 35148
           break;
          } else {
           $_01011_i40_i_i = $592;
           $_012_i39_i_i = $591;
           $src_013_i38_i_i = $src_013_i38_i_i + 1 | 0;
          }
         }
        }
        if (($_08_i58_i_i | 0) == ($550 | 0)) {
         $crc4951_lcssa_i_i = $crc4950_ph_i_i; //@line 35160
         break;
        } else {
         $crc495157_i_i = $crc4950_ph_i_i;
         $_08_i58_i_i = $_08_i58_i_i - $550 | 0;
        }
       }
      }
      if ((_fread($191 | 0, 1, 4, $fp | 0) | 0) != 4) {
       break L17112;
      }
      if ((_psi_get_uint32_be($191, 0) | 0) == ($crc4951_lcssa_i_i | 0)) {
       $_be_i = $519; //@line 35178
      } else {
       label = 13581; //@line 35180
       break L17157;
      }
     } else if (($355 | 0) == 1413830740) {
      if (($356 | 0) == 0) {
       if ((_fread($191 | 0, 1, 4, $fp | 0) | 0) != 4) {
        break L17112;
       }
       if ((_psi_get_uint32_be($191, 0) | 0) == ($354 | 0)) {
        $_be_i = $266; //@line 35197
        break;
       } else {
        label = 13706; //@line 35200
        break L17157;
       }
      }
      $1410 = _malloc($356) | 0; //@line 35204
      if (($1410 | 0) == 0) {
       break L17112;
      }
      if ((_fread($1410 | 0, 1, $356 | 0, $fp | 0) | 0) != ($356 | 0)) {
       label = 13713; //@line 35214
       break L17157;
      }
      if (HEAP8[6648] | 0) {
       $_01011_i_i309_i = $356;
       $_012_i_i308_i = $354;
       $src_013_i_i307_i = $1410;
      } else {
       $i_017_i_i296_i = 0; //@line 35222
       do {
        $1417 = $i_017_i_i296_i << 25; //@line 35227
        $reg_1_i_i298_i = ($i_017_i_i296_i & 128 | 0) != 0 ? $1417 ^ 517762881 : $1417; //@line 35229
        $1420 = $reg_1_i_i298_i << 1; //@line 35231
        $reg_1_1_i_i299_i = ($reg_1_i_i298_i | 0) < 0 ? $1420 ^ 517762881 : $1420; //@line 35233
        $1423 = $reg_1_1_i_i299_i << 1; //@line 35235
        $reg_1_2_i_i300_i = ($reg_1_1_i_i299_i | 0) < 0 ? $1423 ^ 517762881 : $1423; //@line 35237
        $1426 = $reg_1_2_i_i300_i << 1; //@line 35239
        $reg_1_3_i_i301_i = ($reg_1_2_i_i300_i | 0) < 0 ? $1426 ^ 517762881 : $1426; //@line 35241
        $1429 = $reg_1_3_i_i301_i << 1; //@line 35243
        $reg_1_4_i_i302_i = ($reg_1_3_i_i301_i | 0) < 0 ? $1429 ^ 517762881 : $1429; //@line 35245
        $1432 = $reg_1_4_i_i302_i << 1; //@line 35247
        $reg_1_5_i_i303_i = ($reg_1_4_i_i302_i | 0) < 0 ? $1432 ^ 517762881 : $1432; //@line 35249
        $1435 = $reg_1_5_i_i303_i << 1; //@line 35251
        $reg_1_6_i_i304_i = ($reg_1_5_i_i303_i | 0) < 0 ? $1435 ^ 517762881 : $1435; //@line 35253
        $1438 = $reg_1_6_i_i304_i << 1; //@line 35255
        HEAP32[58216 + ($i_017_i_i296_i << 2) >> 2] = ($reg_1_6_i_i304_i | 0) < 0 ? $1438 ^ 517762881 : $1438; //@line 35259
        $i_017_i_i296_i = $i_017_i_i296_i + 1 | 0; //@line 35260
       } while ($i_017_i_i296_i >>> 0 < 256);
       HEAP8[6648] = 1; //@line 35269
       $_01011_i_i309_i = $356;
       $_012_i_i308_i = $354;
       $src_013_i_i307_i = $1410;
      }
      while (1) {
       $1452 = HEAP32[58216 + ((HEAPU8[$src_013_i_i307_i] ^ $_012_i_i308_i >>> 24) << 2) >> 2] ^ $_012_i_i308_i << 8; //@line 35285
       $1453 = $_01011_i_i309_i - 1 | 0; //@line 35286
       if (($1453 | 0) == 0) {
        break;
       } else {
        $_01011_i_i309_i = $1453;
        $_012_i_i308_i = $1452;
        $src_013_i_i307_i = $src_013_i_i307_i + 1 | 0;
       }
      }
      $1457 = (HEAP8[$1410] | 0) == 10; //@line 35296
      $_size_i_i = ($1457 << 31 >> 31) + $356 | 0; //@line 35299
      if (($_size_i_i | 0) == 0) {
       $n_1_i_i = 0; //@line 35303
      } else {
       $1461 = $_size_i_i - 1 | 0; //@line 35305
       $n_1_i_i = (HEAP8[$1410 + $1461 | 0] | 0) == 10 ? $1461 : $_size_i_i; //@line 35311
      }
      $1467 = _psi_img_add_comment($1, $1410 + ($1457 & 1) | 0, $n_1_i_i) | 0; //@line 35315
      _free($1410); //@line 35316
      do {
       if ((_fread($191 | 0, 1, 4, $fp | 0) | 0) == 4) {
        if ((_psi_get_uint32_be($191, 0) | 0) == ($1452 | 0)) {
         $_0_i23_i_i = 0; //@line 35326
         break;
        }
        _fwrite(56464, 15, 1, $261 | 0) | 0; //@line 35329
        $_0_i23_i_i = 1; //@line 35331
       } else {
        $_0_i23_i_i = 1; //@line 35333
       }
      } while (0);
      if (($_0_i23_i_i | $1467 | 0) == 0) {
       $_be_i = $266; //@line 35341
      } else {
       break L17112;
      }
     } else if (($355 | 0) == 1414090053) {
      if (($266 | 0) == 0 | $356 >>> 0 < 4) {
       break L17112;
      }
      if ((_fread($257 | 0, 1, 4, $fp | 0) | 0) != 4) {
       break L17112;
      }
      if (!(HEAP8[6648] | 0)) {
       $i_017_i_i239_i = 0; //@line 35362
       do {
        $1224 = $i_017_i_i239_i << 25; //@line 35367
        $reg_1_i_i241_i = ($i_017_i_i239_i & 128 | 0) != 0 ? $1224 ^ 517762881 : $1224; //@line 35369
        $1227 = $reg_1_i_i241_i << 1; //@line 35371
        $reg_1_1_i_i242_i = ($reg_1_i_i241_i | 0) < 0 ? $1227 ^ 517762881 : $1227; //@line 35373
        $1230 = $reg_1_1_i_i242_i << 1; //@line 35375
        $reg_1_2_i_i243_i = ($reg_1_1_i_i242_i | 0) < 0 ? $1230 ^ 517762881 : $1230; //@line 35377
        $1233 = $reg_1_2_i_i243_i << 1; //@line 35379
        $reg_1_3_i_i244_i = ($reg_1_2_i_i243_i | 0) < 0 ? $1233 ^ 517762881 : $1233; //@line 35381
        $1236 = $reg_1_3_i_i244_i << 1; //@line 35383
        $reg_1_4_i_i245_i = ($reg_1_3_i_i244_i | 0) < 0 ? $1236 ^ 517762881 : $1236; //@line 35385
        $1239 = $reg_1_4_i_i245_i << 1; //@line 35387
        $reg_1_5_i_i246_i = ($reg_1_4_i_i245_i | 0) < 0 ? $1239 ^ 517762881 : $1239; //@line 35389
        $1242 = $reg_1_5_i_i246_i << 1; //@line 35391
        $reg_1_6_i_i247_i = ($reg_1_5_i_i246_i | 0) < 0 ? $1242 ^ 517762881 : $1242; //@line 35393
        $1245 = $reg_1_6_i_i247_i << 1; //@line 35395
        HEAP32[58216 + ($i_017_i_i239_i << 2) >> 2] = ($reg_1_6_i_i247_i | 0) < 0 ? $1245 ^ 517762881 : $1245; //@line 35399
        $i_017_i_i239_i = $i_017_i_i239_i + 1 | 0; //@line 35400
       } while ($i_017_i_i239_i >>> 0 < 256);
       HEAP8[6648] = 1; //@line 35409
      }
      $1258 = HEAP32[58216 + ((HEAPU8[$257] ^ $354 >>> 24) << 2) >> 2] ^ $354 << 8; //@line 35419
      $1266 = HEAP32[58216 + ((HEAPU8[$258] ^ $1258 >>> 24) << 2) >> 2] ^ $1258 << 8; //@line 35427
      $1274 = HEAP32[58216 + ((HEAPU8[$259] ^ $1266 >>> 24) << 2) >> 2] ^ $1266 << 8; //@line 35435
      $1282 = HEAP32[58216 + ((HEAPU8[$260] ^ $1274 >>> 24) << 2) >> 2] ^ $1274 << 8; //@line 35443
      _psi_sct_set_read_time($266, _psi_get_uint32_be($257, 0) | 0); //@line 35445
      $1284 = $356 - 4 | 0; //@line 35446
      if (($1284 | 0) == 0) {
       $crc2830_lcssa_i273_i = $1282; //@line 35450
      } else {
       $crc283036_i252_i = $1282;
       $_08_i37_i251_i = $1284;
       while (1) {
        $1287 = $_08_i37_i251_i >>> 0 < 256 ? $_08_i37_i251_i : 256; //@line 35457
        if ((_fread($191 | 0, 1, $1287 | 0, $fp | 0) | 0) != ($1287 | 0)) {
         break L17112;
        }
        if (!(HEAP8[6648] | 0)) {
         $i_017_i5_i255_i = 0; //@line 35467
         do {
          $1292 = $i_017_i5_i255_i << 25; //@line 35472
          $reg_1_i7_i257_i = ($i_017_i5_i255_i & 128 | 0) != 0 ? $1292 ^ 517762881 : $1292; //@line 35474
          $1295 = $reg_1_i7_i257_i << 1; //@line 35476
          $reg_1_1_i8_i258_i = ($reg_1_i7_i257_i | 0) < 0 ? $1295 ^ 517762881 : $1295; //@line 35478
          $1298 = $reg_1_1_i8_i258_i << 1; //@line 35480
          $reg_1_2_i9_i259_i = ($reg_1_1_i8_i258_i | 0) < 0 ? $1298 ^ 517762881 : $1298; //@line 35482
          $1301 = $reg_1_2_i9_i259_i << 1; //@line 35484
          $reg_1_3_i10_i260_i = ($reg_1_2_i9_i259_i | 0) < 0 ? $1301 ^ 517762881 : $1301; //@line 35486
          $1304 = $reg_1_3_i10_i260_i << 1; //@line 35488
          $reg_1_4_i11_i261_i = ($reg_1_3_i10_i260_i | 0) < 0 ? $1304 ^ 517762881 : $1304; //@line 35490
          $1307 = $reg_1_4_i11_i261_i << 1; //@line 35492
          $reg_1_5_i12_i262_i = ($reg_1_4_i11_i261_i | 0) < 0 ? $1307 ^ 517762881 : $1307; //@line 35494
          $1310 = $reg_1_5_i12_i262_i << 1; //@line 35496
          $reg_1_6_i13_i263_i = ($reg_1_5_i12_i262_i | 0) < 0 ? $1310 ^ 517762881 : $1310; //@line 35498
          $1313 = $reg_1_6_i13_i263_i << 1; //@line 35500
          HEAP32[58216 + ($i_017_i5_i255_i << 2) >> 2] = ($reg_1_6_i13_i263_i | 0) < 0 ? $1313 ^ 517762881 : $1313; //@line 35504
          $i_017_i5_i255_i = $i_017_i5_i255_i + 1 | 0; //@line 35505
         } while ($i_017_i5_i255_i >>> 0 < 256);
         HEAP8[6648] = 1; //@line 35514
        }
        if (($1287 | 0) == 0) {
         $crc2829_ph_i271_i = $crc283036_i252_i; //@line 35520
        } else {
         $_01011_i19_i269_i = $1287;
         $_012_i18_i268_i = $crc283036_i252_i;
         $src_013_i17_i267_i = $191;
         while (1) {
          $1328 = HEAP32[58216 + ((HEAPU8[$src_013_i17_i267_i] ^ $_012_i18_i268_i >>> 24) << 2) >> 2] ^ $_012_i18_i268_i << 8; //@line 35535
          $1329 = $_01011_i19_i269_i - 1 | 0; //@line 35536
          if (($1329 | 0) == 0) {
           $crc2829_ph_i271_i = $1328; //@line 35540
           break;
          } else {
           $_01011_i19_i269_i = $1329;
           $_012_i18_i268_i = $1328;
           $src_013_i17_i267_i = $src_013_i17_i267_i + 1 | 0;
          }
         }
        }
        if (($_08_i37_i251_i | 0) == ($1287 | 0)) {
         $crc2830_lcssa_i273_i = $crc2829_ph_i271_i; //@line 35552
         break;
        } else {
         $crc283036_i252_i = $crc2829_ph_i271_i;
         $_08_i37_i251_i = $_08_i37_i251_i - $1287 | 0;
        }
       }
      }
      if ((_fread($191 | 0, 1, 4, $fp | 0) | 0) != 4) {
       break L17112;
      }
      if ((_psi_get_uint32_be($191, 0) | 0) == ($crc2830_lcssa_i273_i | 0)) {
       $_be_i = $266; //@line 35570
      } else {
       label = 13691; //@line 35572
       break L17157;
      }
     } else if (($355 | 0) == 1330005587) {
      if (($266 | 0) == 0 | $356 >>> 0 < 4) {
       break L17112;
      }
      if ((_fread($257 | 0, 1, 4, $fp | 0) | 0) != 4) {
       break L17112;
      }
      if (!(HEAP8[6648] | 0)) {
       $i_017_i_i198_i = 0; //@line 35592
       do {
        $1100 = $i_017_i_i198_i << 25; //@line 35597
        $reg_1_i_i200_i = ($i_017_i_i198_i & 128 | 0) != 0 ? $1100 ^ 517762881 : $1100; //@line 35599
        $1103 = $reg_1_i_i200_i << 1; //@line 35601
        $reg_1_1_i_i201_i = ($reg_1_i_i200_i | 0) < 0 ? $1103 ^ 517762881 : $1103; //@line 35603
        $1106 = $reg_1_1_i_i201_i << 1; //@line 35605
        $reg_1_2_i_i202_i = ($reg_1_1_i_i201_i | 0) < 0 ? $1106 ^ 517762881 : $1106; //@line 35607
        $1109 = $reg_1_2_i_i202_i << 1; //@line 35609
        $reg_1_3_i_i203_i = ($reg_1_2_i_i202_i | 0) < 0 ? $1109 ^ 517762881 : $1109; //@line 35611
        $1112 = $reg_1_3_i_i203_i << 1; //@line 35613
        $reg_1_4_i_i204_i = ($reg_1_3_i_i203_i | 0) < 0 ? $1112 ^ 517762881 : $1112; //@line 35615
        $1115 = $reg_1_4_i_i204_i << 1; //@line 35617
        $reg_1_5_i_i205_i = ($reg_1_4_i_i204_i | 0) < 0 ? $1115 ^ 517762881 : $1115; //@line 35619
        $1118 = $reg_1_5_i_i205_i << 1; //@line 35621
        $reg_1_6_i_i206_i = ($reg_1_5_i_i205_i | 0) < 0 ? $1118 ^ 517762881 : $1118; //@line 35623
        $1121 = $reg_1_6_i_i206_i << 1; //@line 35625
        HEAP32[58216 + ($i_017_i_i198_i << 2) >> 2] = ($reg_1_6_i_i206_i | 0) < 0 ? $1121 ^ 517762881 : $1121; //@line 35629
        $i_017_i_i198_i = $i_017_i_i198_i + 1 | 0; //@line 35630
       } while ($i_017_i_i198_i >>> 0 < 256);
       HEAP8[6648] = 1; //@line 35639
      }
      $1134 = HEAP32[58216 + ((HEAPU8[$257] ^ $354 >>> 24) << 2) >> 2] ^ $354 << 8; //@line 35649
      $1142 = HEAP32[58216 + ((HEAPU8[$258] ^ $1134 >>> 24) << 2) >> 2] ^ $1134 << 8; //@line 35657
      $1150 = HEAP32[58216 + ((HEAPU8[$259] ^ $1142 >>> 24) << 2) >> 2] ^ $1142 << 8; //@line 35665
      $1158 = HEAP32[58216 + ((HEAPU8[$260] ^ $1150 >>> 24) << 2) >> 2] ^ $1150 << 8; //@line 35673
      _psi_sct_set_position($266, _psi_get_uint32_be($257, 0) | 0); //@line 35675
      $1160 = $356 - 4 | 0; //@line 35676
      if (($1160 | 0) == 0) {
       $crc2830_lcssa_i232_i = $1158; //@line 35680
      } else {
       $crc283036_i211_i = $1158;
       $_08_i37_i210_i = $1160;
       while (1) {
        $1163 = $_08_i37_i210_i >>> 0 < 256 ? $_08_i37_i210_i : 256; //@line 35687
        if ((_fread($191 | 0, 1, $1163 | 0, $fp | 0) | 0) != ($1163 | 0)) {
         break L17112;
        }
        if (!(HEAP8[6648] | 0)) {
         $i_017_i5_i214_i = 0; //@line 35697
         do {
          $1168 = $i_017_i5_i214_i << 25; //@line 35702
          $reg_1_i7_i216_i = ($i_017_i5_i214_i & 128 | 0) != 0 ? $1168 ^ 517762881 : $1168; //@line 35704
          $1171 = $reg_1_i7_i216_i << 1; //@line 35706
          $reg_1_1_i8_i217_i = ($reg_1_i7_i216_i | 0) < 0 ? $1171 ^ 517762881 : $1171; //@line 35708
          $1174 = $reg_1_1_i8_i217_i << 1; //@line 35710
          $reg_1_2_i9_i218_i = ($reg_1_1_i8_i217_i | 0) < 0 ? $1174 ^ 517762881 : $1174; //@line 35712
          $1177 = $reg_1_2_i9_i218_i << 1; //@line 35714
          $reg_1_3_i10_i219_i = ($reg_1_2_i9_i218_i | 0) < 0 ? $1177 ^ 517762881 : $1177; //@line 35716
          $1180 = $reg_1_3_i10_i219_i << 1; //@line 35718
          $reg_1_4_i11_i220_i = ($reg_1_3_i10_i219_i | 0) < 0 ? $1180 ^ 517762881 : $1180; //@line 35720
          $1183 = $reg_1_4_i11_i220_i << 1; //@line 35722
          $reg_1_5_i12_i221_i = ($reg_1_4_i11_i220_i | 0) < 0 ? $1183 ^ 517762881 : $1183; //@line 35724
          $1186 = $reg_1_5_i12_i221_i << 1; //@line 35726
          $reg_1_6_i13_i222_i = ($reg_1_5_i12_i221_i | 0) < 0 ? $1186 ^ 517762881 : $1186; //@line 35728
          $1189 = $reg_1_6_i13_i222_i << 1; //@line 35730
          HEAP32[58216 + ($i_017_i5_i214_i << 2) >> 2] = ($reg_1_6_i13_i222_i | 0) < 0 ? $1189 ^ 517762881 : $1189; //@line 35734
          $i_017_i5_i214_i = $i_017_i5_i214_i + 1 | 0; //@line 35735
         } while ($i_017_i5_i214_i >>> 0 < 256);
         HEAP8[6648] = 1; //@line 35744
        }
        if (($1163 | 0) == 0) {
         $crc2829_ph_i230_i = $crc283036_i211_i; //@line 35750
        } else {
         $_01011_i19_i228_i = $1163;
         $_012_i18_i227_i = $crc283036_i211_i;
         $src_013_i17_i226_i = $191;
         while (1) {
          $1204 = HEAP32[58216 + ((HEAPU8[$src_013_i17_i226_i] ^ $_012_i18_i227_i >>> 24) << 2) >> 2] ^ $_012_i18_i227_i << 8; //@line 35765
          $1205 = $_01011_i19_i228_i - 1 | 0; //@line 35766
          if (($1205 | 0) == 0) {
           $crc2829_ph_i230_i = $1204; //@line 35770
           break;
          } else {
           $_01011_i19_i228_i = $1205;
           $_012_i18_i227_i = $1204;
           $src_013_i17_i226_i = $src_013_i17_i226_i + 1 | 0;
          }
         }
        }
        if (($_08_i37_i210_i | 0) == ($1163 | 0)) {
         $crc2830_lcssa_i232_i = $crc2829_ph_i230_i; //@line 35782
         break;
        } else {
         $crc283036_i211_i = $crc2829_ph_i230_i;
         $_08_i37_i210_i = $_08_i37_i210_i - $1163 | 0;
        }
       }
      }
      if ((_fread($191 | 0, 1, 4, $fp | 0) | 0) != 4) {
       break L17112;
      }
      if ((_psi_get_uint32_be($191, 0) | 0) == ($crc2830_lcssa_i232_i | 0)) {
       $_be_i = $266; //@line 35800
      } else {
       label = 13675; //@line 35802
       break L17157;
      }
     } else {
      if (($356 | 0) == 0) {
       $_lcssa394_i = $354; //@line 35809
      } else {
       $1481 = $354;
       $_08_i396_i = $356;
       while (1) {
        $1483 = $_08_i396_i >>> 0 < 256 ? $_08_i396_i : 256; //@line 35816
        if ((_fread($191 | 0, 1, $1483 | 0, $fp | 0) | 0) != ($1483 | 0)) {
         break L17112;
        }
        if (!(HEAP8[6648] | 0)) {
         $i_017_i318_i = 0; //@line 35826
         do {
          $1488 = $i_017_i318_i << 25; //@line 35831
          $reg_1_i320_i = ($i_017_i318_i & 128 | 0) != 0 ? $1488 ^ 517762881 : $1488; //@line 35833
          $1491 = $reg_1_i320_i << 1; //@line 35835
          $reg_1_1_i321_i = ($reg_1_i320_i | 0) < 0 ? $1491 ^ 517762881 : $1491; //@line 35837
          $1494 = $reg_1_1_i321_i << 1; //@line 35839
          $reg_1_2_i322_i = ($reg_1_1_i321_i | 0) < 0 ? $1494 ^ 517762881 : $1494; //@line 35841
          $1497 = $reg_1_2_i322_i << 1; //@line 35843
          $reg_1_3_i323_i = ($reg_1_2_i322_i | 0) < 0 ? $1497 ^ 517762881 : $1497; //@line 35845
          $1500 = $reg_1_3_i323_i << 1; //@line 35847
          $reg_1_4_i324_i = ($reg_1_3_i323_i | 0) < 0 ? $1500 ^ 517762881 : $1500; //@line 35849
          $1503 = $reg_1_4_i324_i << 1; //@line 35851
          $reg_1_5_i325_i = ($reg_1_4_i324_i | 0) < 0 ? $1503 ^ 517762881 : $1503; //@line 35853
          $1506 = $reg_1_5_i325_i << 1; //@line 35855
          $reg_1_6_i326_i = ($reg_1_5_i325_i | 0) < 0 ? $1506 ^ 517762881 : $1506; //@line 35857
          $1509 = $reg_1_6_i326_i << 1; //@line 35859
          HEAP32[58216 + ($i_017_i318_i << 2) >> 2] = ($reg_1_6_i326_i | 0) < 0 ? $1509 ^ 517762881 : $1509; //@line 35863
          $i_017_i318_i = $i_017_i318_i + 1 | 0; //@line 35864
         } while ($i_017_i318_i >>> 0 < 256);
         HEAP8[6648] = 1; //@line 35873
        }
        if (($1483 | 0) == 0) {
         $_ph372_i = $1481; //@line 35879
        } else {
         $_01011_i332_i = $1483;
         $_012_i331_i = $1481;
         $src_013_i330_i = $191;
         while (1) {
          $1524 = HEAP32[58216 + ((HEAPU8[$src_013_i330_i] ^ $_012_i331_i >>> 24) << 2) >> 2] ^ $_012_i331_i << 8; //@line 35894
          $1525 = $_01011_i332_i - 1 | 0; //@line 35895
          if (($1525 | 0) == 0) {
           $_ph372_i = $1524; //@line 35899
           break;
          } else {
           $_01011_i332_i = $1525;
           $_012_i331_i = $1524;
           $src_013_i330_i = $src_013_i330_i + 1 | 0;
          }
         }
        }
        if (($_08_i396_i | 0) == ($1483 | 0)) {
         $_lcssa394_i = $_ph372_i; //@line 35911
         break;
        } else {
         $1481 = $_ph372_i;
         $_08_i396_i = $_08_i396_i - $1483 | 0;
        }
       }
      }
      if ((_fread($191 | 0, 1, 4, $fp | 0) | 0) != 4) {
       break L17112;
      }
      if ((_psi_get_uint32_be($191, 0) | 0) == ($_lcssa394_i | 0)) {
       $_be_i = $266; //@line 35929
      } else {
       label = 13731; //@line 35931
       break L17157;
      }
     }
    } while (0);
    if ((_fread($4 | 0, 1, 8, $fp | 0) | 0) == 8) {
     $266 = $_be_i; //@line 35941
    } else {
     break L17112;
    }
   }
   if ((label | 0) == 13636) {
    _fwrite(56464, 15, 1, $261 | 0) | 0; //@line 35947
    break;
   } else if ((label | 0) == 13544) {
    if (($356 | 0) == 0) {
     $crc11_lcssa_i_i = $354; //@line 35955
    } else {
     $crc1116_i_i = $354;
     $_08_i17_i_i = $356;
     while (1) {
      $360 = $_08_i17_i_i >>> 0 < 256 ? $_08_i17_i_i : 256; //@line 35962
      if ((_fread($191 | 0, 1, $360 | 0, $fp | 0) | 0) != ($360 | 0)) {
       break L17112;
      }
      if (!(HEAP8[6648] | 0)) {
       $i_017_i_i60_i = 0; //@line 35972
       do {
        $365 = $i_017_i_i60_i << 25; //@line 35977
        $reg_1_i_i62_i = ($i_017_i_i60_i & 128 | 0) != 0 ? $365 ^ 517762881 : $365; //@line 35979
        $368 = $reg_1_i_i62_i << 1; //@line 35981
        $reg_1_1_i_i63_i = ($reg_1_i_i62_i | 0) < 0 ? $368 ^ 517762881 : $368; //@line 35983
        $371 = $reg_1_1_i_i63_i << 1; //@line 35985
        $reg_1_2_i_i64_i = ($reg_1_1_i_i63_i | 0) < 0 ? $371 ^ 517762881 : $371; //@line 35987
        $374 = $reg_1_2_i_i64_i << 1; //@line 35989
        $reg_1_3_i_i65_i = ($reg_1_2_i_i64_i | 0) < 0 ? $374 ^ 517762881 : $374; //@line 35991
        $377 = $reg_1_3_i_i65_i << 1; //@line 35993
        $reg_1_4_i_i66_i = ($reg_1_3_i_i65_i | 0) < 0 ? $377 ^ 517762881 : $377; //@line 35995
        $380 = $reg_1_4_i_i66_i << 1; //@line 35997
        $reg_1_5_i_i67_i = ($reg_1_4_i_i66_i | 0) < 0 ? $380 ^ 517762881 : $380; //@line 35999
        $383 = $reg_1_5_i_i67_i << 1; //@line 36001
        $reg_1_6_i_i68_i = ($reg_1_5_i_i67_i | 0) < 0 ? $383 ^ 517762881 : $383; //@line 36003
        $386 = $reg_1_6_i_i68_i << 1; //@line 36005
        HEAP32[58216 + ($i_017_i_i60_i << 2) >> 2] = ($reg_1_6_i_i68_i | 0) < 0 ? $386 ^ 517762881 : $386; //@line 36009
        $i_017_i_i60_i = $i_017_i_i60_i + 1 | 0; //@line 36010
       } while ($i_017_i_i60_i >>> 0 < 256);
       HEAP8[6648] = 1; //@line 36019
      }
      if (($360 | 0) == 0) {
       $crc10_ph_i_i = $crc1116_i_i; //@line 36025
      } else {
       $_01011_i_i_i = $360;
       $_012_i_i_i = $crc1116_i_i;
       $src_013_i_i_i = $191;
       while (1) {
        $401 = HEAP32[58216 + ((HEAPU8[$src_013_i_i_i] ^ $_012_i_i_i >>> 24) << 2) >> 2] ^ $_012_i_i_i << 8; //@line 36040
        $402 = $_01011_i_i_i - 1 | 0; //@line 36041
        if (($402 | 0) == 0) {
         $crc10_ph_i_i = $401; //@line 36045
         break;
        } else {
         $_01011_i_i_i = $402;
         $_012_i_i_i = $401;
         $src_013_i_i_i = $src_013_i_i_i + 1 | 0;
        }
       }
      }
      if (($_08_i17_i_i | 0) == ($360 | 0)) {
       $crc11_lcssa_i_i = $crc10_ph_i_i; //@line 36057
       break;
      } else {
       $crc1116_i_i = $crc10_ph_i_i;
       $_08_i17_i_i = $_08_i17_i_i - $360 | 0;
      }
     }
    }
    if ((_fread($191 | 0, 1, 4, $fp | 0) | 0) != 4) {
     break;
    }
    if ((_psi_get_uint32_be($191, 0) | 0) != ($crc11_lcssa_i_i | 0)) {
     _fwrite(56464, 15, 1, $261 | 0) | 0; //@line 36075
     break;
    }
    _psi_img_clean_comment($1); //@line 36079
    $_0 = $1; //@line 36081
    STACKTOP = sp; //@line 36083
    return $_0 | 0; //@line 36084
   } else if ((label | 0) == 13581) {
    _fwrite(56464, 15, 1, $261 | 0) | 0; //@line 36087
    break;
   } else if ((label | 0) == 13608) {
    _fwrite(56464, 15, 1, $261 | 0) | 0; //@line 36092
    break;
   } else if ((label | 0) == 13702) {
    _fwrite(56464, 15, 1, $261 | 0) | 0; //@line 36097
    break;
   } else if ((label | 0) == 13706) {
    _fwrite(56464, 15, 1, $261 | 0) | 0; //@line 36102
    break;
   } else if ((label | 0) == 13713) {
    _free($1410); //@line 36107
    break;
   } else if ((label | 0) == 13675) {
    _fwrite(56464, 15, 1, $261 | 0) | 0; //@line 36112
    break;
   } else if ((label | 0) == 13691) {
    _fwrite(56464, 15, 1, $261 | 0) | 0; //@line 36117
    break;
   } else if ((label | 0) == 13566) {
    _psi_sct_del($519); //@line 36122
    break;
   } else if ((label | 0) == 13563) {
    _fwrite(49960, 31, 1, $261 | 0) | 0; //@line 36127
    _psi_sct_del($519); //@line 36128
    break;
   } else if ((label | 0) == 13659) {
    _fwrite(56464, 15, 1, $261 | 0) | 0; //@line 36133
    break;
   } else if ((label | 0) == 13731) {
    _fwrite(56464, 15, 1, $261 | 0) | 0; //@line 36138
    break;
   }
  }
 } while (0);
 _psi_img_del($1); //@line 36144
 $_0 = 0; //@line 36146
 STACKTOP = sp; //@line 36148
 return $_0 | 0; //@line 36149
}
function _psi_save_psi($fp, $img) {
 $fp = $fp | 0;
 $img = $img | 0;
 var $crc_i22 = 0, $buf_i23 = 0, $crc_i = 0, $buf_i20 = 0, $1 = 0, $2 = 0, $3 = 0, $6 = 0, $7 = 0, $c_010_i_i = 0, $10 = 0, $13 = 0, $14 = 0, $h_0_i_i = 0, $20 = 0, $26 = 0, $33 = 0, $enc_0_load28 = 0, $enc_0_load27 = 0, $val_0_i = 0, $42 = 0, $43 = 0, $48 = 0, $49 = 0, $54 = 0, $56 = 0, $61 = 0, $63 = 0, $64 = 0, $c_037 = 0, $67 = 0, $68 = 0, $69 = 0, $71 = 0, $72 = 0, $h_032 = 0, $75 = 0, $76 = 0, $79 = 0, $s_031 = 0, $83 = 0, $sct_pn_i = 0, $_014_i = 0, $96 = 0, $97 = 0, $100 = 0, $101 = 0, $105 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 36172
 STACKTOP = STACKTOP + 48 | 0; //@line 36172
 $crc_i22 = sp | 0; //@line 36173
 $buf_i23 = sp + 8 | 0; //@line 36174
 $crc_i = sp + 16 | 0; //@line 36175
 $buf_i20 = sp + 24 | 0; //@line 36176
 $1 = sp + 40 | 0; //@line 36178
 _psi_set_uint16_be($1, 0, 0); //@line 36179
 $2 = $img | 0; //@line 36180
 $3 = HEAP16[$2 >> 1] | 0; //@line 36181
 L17447 : do {
  if ($3 << 16 >> 16 == 0) {
   $enc_0_load28 = 0; //@line 36186
   label = 13750; //@line 36187
  } else {
   $6 = HEAP32[$img + 4 >> 2] | 0; //@line 36190
   $7 = $3 & 65535; //@line 36191
   $c_010_i_i = 0; //@line 36193
   L17449 : while (1) {
    $10 = HEAP32[$6 + ($c_010_i_i << 2) >> 2] | 0; //@line 36197
    $13 = HEAPU16[$10 + 2 >> 1] | 0; //@line 36200
    $14 = $10 + 4 | 0; //@line 36201
    $h_0_i_i = 0; //@line 36203
    while (1) {
     if ($h_0_i_i >>> 0 >= $13 >>> 0) {
      break;
     }
     $20 = HEAP32[(HEAP32[$14 >> 2] | 0) + ($h_0_i_i << 2) >> 2] | 0; //@line 36213
     if ((HEAP16[$20 + 2 >> 1] | 0) == 0) {
      $h_0_i_i = $h_0_i_i + 1 | 0; //@line 36220
     } else {
      break L17449;
     }
    }
    $26 = $c_010_i_i + 1 | 0; //@line 36225
    if ($26 >>> 0 < $7 >>> 0) {
     $c_010_i_i = $26; //@line 36229
    } else {
     $enc_0_load28 = 0; //@line 36231
     label = 13750; //@line 36232
     break L17447;
    }
   }
   $33 = HEAPU16[(HEAP32[HEAP32[$20 + 4 >> 2] >> 2] | 0) + 16 >> 1] | 0; //@line 36241
   if (($33 | 0) == 3) {
    $val_0_i = 768;
    $enc_0_load27 = $33;
    break;
   } else if (($33 | 0) == 32770) {
    $val_0_i = 513;
    $enc_0_load27 = $33;
    break;
   } else if (($33 | 0) == 1) {
    $val_0_i = 256;
    $enc_0_load27 = 1;
    break;
   } else if (($33 | 0) == 32769) {
    $val_0_i = 257;
    $enc_0_load27 = $33;
    break;
   } else if (($33 | 0) == 16386) {
    $val_0_i = 514;
    $enc_0_load27 = $33;
    break;
   } else if (($33 | 0) == 2) {
    $val_0_i = 512;
    $enc_0_load27 = $33;
    break;
   } else {
    $enc_0_load28 = $33; //@line 36266
    label = 13750; //@line 36267
    break;
   }
  }
 } while (0);
 if ((label | 0) == 13750) {
  $val_0_i = 0;
  $enc_0_load27 = $enc_0_load28;
 }
 _psi_set_uint16_be($1, 2, $val_0_i); //@line 36279
 if ((_psi_save_chunk($fp, 1347635488, 4, $1) | 0) != 0) {
  $_0 = 1; //@line 36284
  STACKTOP = sp; //@line 36286
  return $_0 | 0; //@line 36287
 }
 $42 = $buf_i20 | 0; //@line 36290
 $43 = $img + 8 | 0; //@line 36291
 do {
  if ((HEAP32[$43 >> 2] | 0) != 0) {
   _psi_set_uint32_be($42, 0, 1413830740); //@line 36297
   _psi_set_uint32_be($42, 4, (HEAP32[$43 >> 2] | 0) + 2 | 0); //@line 36300
   $48 = $buf_i20 + 8 | 0; //@line 36301
   HEAP8[$48] = 10; //@line 36302
   HEAP32[$crc_i >> 2] = 0; //@line 36303
   $49 = _psi_write_crc($fp, $42, 9, $crc_i) | 0; //@line 36304
   $54 = _psi_write_crc($fp, HEAP32[$img + 12 >> 2] | 0, HEAP32[$43 >> 2] | 0, $crc_i) | 0 | $49; //@line 36309
   $56 = $54 | (_psi_write_crc($fp, $48, 1, $crc_i) | 0); //@line 36311
   _psi_set_uint32_be($42, 0, HEAP32[$crc_i >> 2] | 0); //@line 36313
   if (($56 | (_fwrite($42 | 0, 1, 4, $fp | 0) | 0) != 4 | 0) == 0) {
    break;
   } else {
    $_0 = 1; //@line 36323
   }
   STACKTOP = sp; //@line 36326
   return $_0 | 0; //@line 36327
  }
 } while (0);
 $61 = HEAP16[$2 >> 1] | 0; //@line 36330
 L17472 : do {
  if ($61 << 16 >> 16 != 0) {
   $63 = $img + 4 | 0; //@line 36335
   $c_037 = 0;
   $64 = $61;
   L17474 : while (1) {
    $67 = HEAP32[(HEAP32[$63 >> 2] | 0) + ($c_037 << 2) >> 2] | 0; //@line 36343
    $68 = $67 + 2 | 0; //@line 36344
    $69 = HEAP16[$68 >> 1] | 0; //@line 36345
    if ($69 << 16 >> 16 == 0) {
     $100 = $64; //@line 36349
    } else {
     $71 = $67 + 4 | 0; //@line 36351
     $h_032 = 0;
     $72 = $69;
     while (1) {
      $75 = HEAP32[(HEAP32[$71 >> 2] | 0) + ($h_032 << 2) >> 2] | 0; //@line 36359
      $76 = $75 + 2 | 0; //@line 36360
      if ((HEAP16[$76 >> 1] | 0) == 0) {
       $96 = $72; //@line 36365
      } else {
       $79 = $75 + 4 | 0; //@line 36367
       $s_031 = 0; //@line 36369
       do {
        $83 = HEAP32[(HEAP32[$79 >> 2] | 0) + ($s_031 << 2) >> 2] | 0; //@line 36374
        if ((_psi_save_sector($fp, $83, $c_037, $h_032, 0, $enc_0_load27) | 0) == 0) {
         $sct_pn_i = $83; //@line 36379
        } else {
         $_0 = 1; //@line 36381
         label = 13773; //@line 36382
         break L17474;
        }
        while (1) {
         $_014_i = HEAP32[$sct_pn_i >> 2] | 0; //@line 36388
         if (($_014_i | 0) == 0) {
          break;
         }
         if ((_psi_save_sector($fp, $_014_i, $c_037, $h_032, 1, $enc_0_load27) | 0) == 0) {
          $sct_pn_i = $_014_i; //@line 36398
         } else {
          $_0 = 1; //@line 36400
          label = 13778; //@line 36401
          break L17474;
         }
        }
        $s_031 = $s_031 + 1 | 0; //@line 36405
       } while ($s_031 >>> 0 < (HEAPU16[$76 >> 1] | 0) >>> 0);
       $96 = HEAP16[$68 >> 1] | 0; //@line 36418
      }
      $97 = $h_032 + 1 | 0; //@line 36421
      if ($97 >>> 0 < ($96 & 65535) >>> 0) {
       $h_032 = $97;
       $72 = $96;
      } else {
       break;
      }
     }
     $100 = HEAP16[$2 >> 1] | 0; //@line 36433
    }
    $101 = $c_037 + 1 | 0; //@line 36436
    if ($101 >>> 0 < ($100 & 65535) >>> 0) {
     $c_037 = $101;
     $64 = $100;
    } else {
     break L17472;
    }
   }
   if ((label | 0) == 13773) {
    STACKTOP = sp; //@line 36448
    return $_0 | 0; //@line 36449
   } else if ((label | 0) == 13778) {
    STACKTOP = sp; //@line 36453
    return $_0 | 0; //@line 36454
   }
  }
 } while (0);
 $105 = $buf_i23 | 0; //@line 36459
 _psi_set_uint32_be($105, 0, 1162757152); //@line 36460
 _psi_set_uint32_be($105, 4, 0); //@line 36461
 HEAP32[$crc_i22 >> 2] = 0; //@line 36462
 if ((_psi_write_crc($fp, $105, 8, $crc_i22) | 0) != 0) {
  $_0 = 1; //@line 36467
  STACKTOP = sp; //@line 36469
  return $_0 | 0; //@line 36470
 }
 _psi_set_uint32_be($105, 0, HEAP32[$crc_i22 >> 2] | 0); //@line 36473
 if ((_fwrite($105 | 0, 1, 4, $fp | 0) | 0) != 4) {
  $_0 = 1; //@line 36478
  STACKTOP = sp; //@line 36480
  return $_0 | 0; //@line 36481
 }
 _fflush($fp | 0) | 0; //@line 36483
 $_0 = 0; //@line 36485
 STACKTOP = sp; //@line 36487
 return $_0 | 0; //@line 36488
}
function _psi_save_chunk($fp, $ckid, $size, $data) {
 $fp = $fp | 0;
 $ckid = $ckid | 0;
 $size = $size | 0;
 $data = $data | 0;
 var $crc = 0, $1 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 36500
 STACKTOP = STACKTOP + 16 | 0; //@line 36500
 $crc = sp | 0; //@line 36501
 $1 = sp + 8 | 0; //@line 36503
 _psi_set_uint32_be($1, 0, $ckid); //@line 36504
 _psi_set_uint32_be($1, 4, $size); //@line 36505
 HEAP32[$crc >> 2] = 0; //@line 36506
 if ((_psi_write_crc($fp, $1, 8, $crc) | 0) != 0) {
  $_0 = 1; //@line 36511
  STACKTOP = sp; //@line 36513
  return $_0 | 0; //@line 36514
 }
 do {
  if (($size | 0) != 0) {
   if ((_psi_write_crc($fp, $data, $size, $crc) | 0) == 0) {
    break;
   } else {
    $_0 = 1; //@line 36526
   }
   STACKTOP = sp; //@line 36529
   return $_0 | 0; //@line 36530
  }
 } while (0);
 _psi_set_uint32_be($1, 0, HEAP32[$crc >> 2] | 0); //@line 36534
 $_0 = (_fwrite($1 | 0, 1, 4, $fp | 0) | 0) != 4 | 0; //@line 36539
 STACKTOP = sp; //@line 36541
 return $_0 | 0; //@line 36542
}
function _psi_probe_psi_fp($fp) {
 $fp = $fp | 0;
 var $1 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 36550
 STACKTOP = STACKTOP + 8 | 0; //@line 36550
 $1 = sp | 0; //@line 36552
 if ((_psi_read_ofs($fp, 0, $1, 4) | 0) != 0) {
  $_0 = 0; //@line 36557
  STACKTOP = sp; //@line 36559
  return $_0 | 0; //@line 36560
 }
 $_0 = (_psi_get_uint32_be($1, 0) | 0) == 1347635488 | 0; //@line 36566
 STACKTOP = sp; //@line 36568
 return $_0 | 0; //@line 36569
}
function _psi_write_crc($fp, $buf, $cnt, $crc) {
 $fp = $fp | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 $crc = $crc | 0;
 var $3 = 0, $i_017_i = 0, $5 = 0, $reg_1_i = 0, $8 = 0, $reg_1_1_i = 0, $11 = 0, $reg_1_2_i = 0, $14 = 0, $reg_1_3_i = 0, $17 = 0, $reg_1_4_i = 0, $20 = 0, $reg_1_5_i = 0, $23 = 0, $reg_1_6_i = 0, $26 = 0, $src_013_i = 0, $_012_i = 0, $_01011_i = 0, $41 = 0, $42 = 0, $_0_lcssa_i = 0, $45 = 0, $not_ = 0, $_ = 0;
 if (($crc | 0) == 0) {
  $45 = _fwrite($buf | 0, 1, $cnt | 0, $fp | 0) | 0; //@line 36591
  $not_ = ($45 | 0) != ($cnt | 0); //@line 36592
  $_ = $not_ & 1; //@line 36593
  return $_ | 0; //@line 36595
 }
 $3 = HEAP32[$crc >> 2] | 0; //@line 36597
 if (!(HEAP8[6648] | 0)) {
  $i_017_i = 0; //@line 36601
  do {
   $5 = $i_017_i << 25; //@line 36606
   $reg_1_i = ($i_017_i & 128 | 0) != 0 ? $5 ^ 517762881 : $5; //@line 36608
   $8 = $reg_1_i << 1; //@line 36610
   $reg_1_1_i = ($reg_1_i | 0) < 0 ? $8 ^ 517762881 : $8; //@line 36612
   $11 = $reg_1_1_i << 1; //@line 36614
   $reg_1_2_i = ($reg_1_1_i | 0) < 0 ? $11 ^ 517762881 : $11; //@line 36616
   $14 = $reg_1_2_i << 1; //@line 36618
   $reg_1_3_i = ($reg_1_2_i | 0) < 0 ? $14 ^ 517762881 : $14; //@line 36620
   $17 = $reg_1_3_i << 1; //@line 36622
   $reg_1_4_i = ($reg_1_3_i | 0) < 0 ? $17 ^ 517762881 : $17; //@line 36624
   $20 = $reg_1_4_i << 1; //@line 36626
   $reg_1_5_i = ($reg_1_4_i | 0) < 0 ? $20 ^ 517762881 : $20; //@line 36628
   $23 = $reg_1_5_i << 1; //@line 36630
   $reg_1_6_i = ($reg_1_5_i | 0) < 0 ? $23 ^ 517762881 : $23; //@line 36632
   $26 = $reg_1_6_i << 1; //@line 36634
   HEAP32[58216 + ($i_017_i << 2) >> 2] = ($reg_1_6_i | 0) < 0 ? $26 ^ 517762881 : $26; //@line 36638
   $i_017_i = $i_017_i + 1 | 0; //@line 36639
  } while ($i_017_i >>> 0 < 256);
  HEAP8[6648] = 1; //@line 36648
 }
 if (($cnt | 0) == 0) {
  $_0_lcssa_i = $3; //@line 36654
 } else {
  $_01011_i = $cnt;
  $_012_i = $3;
  $src_013_i = $buf;
  while (1) {
   $41 = HEAP32[58216 + (((HEAPU8[$src_013_i] | 0) ^ $_012_i >>> 24) << 2) >> 2] ^ $_012_i << 8; //@line 36669
   $42 = $_01011_i - 1 | 0; //@line 36670
   if (($42 | 0) == 0) {
    $_0_lcssa_i = $41; //@line 36674
    break;
   } else {
    $_01011_i = $42;
    $_012_i = $41;
    $src_013_i = $src_013_i + 1 | 0;
   }
  }
 }
 HEAP32[$crc >> 2] = $_0_lcssa_i; //@line 36682
 $45 = _fwrite($buf | 0, 1, $cnt | 0, $fp | 0) | 0; //@line 36684
 $not_ = ($45 | 0) != ($cnt | 0); //@line 36685
 $_ = $not_ & 1; //@line 36686
 return $_ | 0; //@line 36688
}
function _psi_save_sector($fp, $sct, $c, $h, $alt, $enc) {
 $fp = $fp | 0;
 $sct = $sct | 0;
 $c = $c | 0;
 $h = $h | 0;
 $alt = $alt | 0;
 $enc = $enc | 0;
 var $buf_i50 = 0, $buf_i45 = 0, $buf_i = 0, $buf = 0, $2 = 0, $_pre60 = 0, $f_0 = 0, $8 = 0, $f_1 = 0, $13 = 0, $16 = 0, $24 = 0, $26 = 0, $35 = 0, $36 = 0, $37 = 0, $41 = 0, $43 = 0, $52 = 0, $60 = 0, $62 = 0, $67 = 0, $68 = 0, $93 = 0, $97 = 0, $99 = 0, $108 = 0, $116 = 0, $118 = 0, $123 = 0, $124 = 0, $151 = 0, $152 = 0, $156 = 0, $165 = 0, $174 = 0, $175 = 0, $req_1_i = 0, $252 = 0, $259 = 0, $260 = 0, $263 = 0, $272 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 36735
 STACKTOP = STACKTOP + 48 | 0; //@line 36735
 $buf_i50 = sp | 0; //@line 36736
 $buf_i45 = sp + 8 | 0; //@line 36737
 $buf_i = sp + 32 | 0; //@line 36738
 $buf = sp + 40 | 0; //@line 36739
 $2 = ($alt | 0) != 0 ? 2 : 0; //@line 36741
 $_pre60 = $sct + 10 | 0; //@line 36744
 if ((_psi_sct_uniform($sct) | 0) == 0) {
  $f_0 = $2; //@line 36747
 } else {
  $f_0 = (HEAP16[$_pre60 >> 1] | 0) != 0 | $2; //@line 36754
 }
 $8 = $sct + 12 | 0; //@line 36757
 $f_1 = (HEAP32[$8 >> 2] & 2 | 0) == 0 ? $f_0 : $f_0 | 4; //@line 36762
 $13 = $buf | 0; //@line 36763
 _psi_set_uint16_be($13, 0, $c); //@line 36764
 HEAP8[$buf + 2 | 0] = $h & 255; //@line 36767
 $16 = $sct + 8 | 0; //@line 36768
 HEAP8[$buf + 3 | 0] = HEAP16[$16 >> 1] & 255; //@line 36772
 _psi_set_uint16_be($13, 4, HEAPU16[$_pre60 >> 1] | 0); //@line 36775
 HEAP8[$buf + 6 | 0] = $f_1 & 255; //@line 36778
 $24 = $buf + 7 | 0; //@line 36779
 HEAP8[$24] = 0; //@line 36780
 $26 = ($f_1 & 1 | 0) == 0; //@line 36782
 if (!$26) {
  HEAP8[$24] = HEAP8[HEAP32[$sct + 24 >> 2] | 0] | 0; //@line 36788
 }
 if ((_psi_save_chunk($fp, 1397048148, 8, $13) | 0) != 0) {
  $_0 = 1; //@line 36795
  STACKTOP = sp; //@line 36797
  return $_0 | 0; //@line 36798
 }
 $35 = $buf_i | 0; //@line 36800
 $36 = $sct + 16 | 0; //@line 36801
 $37 = HEAP16[$36 >> 1] | 0; //@line 36802
 do {
  if (($37 & 4095) == 1) {
   $41 = _psi_sct_get_mfm_size($sct) | 0; //@line 36808
   $43 = HEAP16[$sct + 4 >> 1] | 0; //@line 36810
   if (($43 & 65535 | 0) == ($c | 0)) {
    $52 = (HEAPU16[$sct + 6 >> 1] | 0) != ($h | 0) | 0; //@line 36821
   } else {
    $52 = 1; //@line 36823
   }
   if ($41 >>> 0 > 8) {
    $60 = 1; //@line 36829
   } else {
    $60 = (HEAPU16[$_pre60 >> 1] | 0) != (128 << $41 | 0) | 0; //@line 36837
   }
   $62 = HEAP32[$8 >> 2] | 0; //@line 36841
   $67 = HEAP16[$36 >> 1] | 0; //@line 36846
   $68 = $67 & 65535; //@line 36847
   if (($60 | $52 | ($62 & 13 | 0) != 0 | ($68 | 0) != ($enc | 0) | 0) == 0) {
    $93 = $67; //@line 36854
    break;
   }
   HEAP8[$35] = $43 & 255; //@line 36858
   HEAP8[$buf_i + 1 | 0] = HEAP16[$sct + 6 >> 1] & 255; //@line 36863
   HEAP8[$buf_i + 2 | 0] = HEAP16[$16 >> 1] & 255; //@line 36867
   HEAP8[$buf_i + 3 | 0] = $41 & 255; //@line 36870
   HEAP8[$buf_i + 4 | 0] = $62 & 15; //@line 36874
   if (($68 | 0) == 1) {
    HEAP8[$buf_i + 5 | 0] = 0; //@line 36877
   } else if (($68 | 0) == 32769) {
    HEAP8[$buf_i + 5 | 0] = 1; //@line 36881
   } else {
    HEAP8[$buf_i + 5 | 0] = 0; //@line 36885
   }
   if ((_psi_save_chunk($fp, 1229081926, 6, $35) | 0) == 0) {
    $93 = HEAP16[$36 >> 1] | 0; //@line 36894
    break;
   } else {
    $_0 = 1; //@line 36897
    STACKTOP = sp; //@line 36899
    return $_0 | 0; //@line 36900
   }
  } else {
   $93 = $37; //@line 36903
  }
 } while (0);
 do {
  if (($93 & 4095) == 2) {
   $97 = _psi_sct_get_mfm_size($sct) | 0; //@line 36912
   $99 = HEAP16[$sct + 4 >> 1] | 0; //@line 36914
   if (($99 & 65535 | 0) == ($c | 0)) {
    $108 = (HEAPU16[$sct + 6 >> 1] | 0) != ($h | 0) | 0; //@line 36925
   } else {
    $108 = 1; //@line 36927
   }
   if ($97 >>> 0 > 8) {
    $116 = 1; //@line 36933
   } else {
    $116 = (HEAPU16[$_pre60 >> 1] | 0) != (128 << $97 | 0) | 0; //@line 36941
   }
   $118 = HEAP32[$8 >> 2] | 0; //@line 36945
   $123 = HEAP16[$36 >> 1] | 0; //@line 36950
   $124 = $123 & 65535; //@line 36951
   if (($116 | $108 | ($118 & 13 | 0) != 0 | ($124 | 0) != ($enc | 0) | 0) == 0) {
    $151 = $123; //@line 36958
    break;
   }
   HEAP8[$35] = $99 & 255; //@line 36962
   HEAP8[$buf_i + 1 | 0] = HEAP16[$sct + 6 >> 1] & 255; //@line 36967
   HEAP8[$buf_i + 2 | 0] = HEAP16[$16 >> 1] & 255; //@line 36971
   HEAP8[$buf_i + 3 | 0] = $97 & 255; //@line 36974
   HEAP8[$buf_i + 4 | 0] = $118 & 15; //@line 36978
   if (($124 | 0) == 16386) {
    HEAP8[$buf_i + 5 | 0] = 2; //@line 36981
   } else if (($124 | 0) == 32770) {
    HEAP8[$buf_i + 5 | 0] = 1; //@line 36985
   } else if (($124 | 0) == 2) {
    HEAP8[$buf_i + 5 | 0] = 0; //@line 36989
   } else {
    HEAP8[$buf_i + 5 | 0] = 0; //@line 36993
   }
   if ((_psi_save_chunk($fp, 1229081933, 6, $35) | 0) == 0) {
    $151 = HEAP16[$36 >> 1] | 0; //@line 37002
    break;
   } else {
    $_0 = 1; //@line 37005
    STACKTOP = sp; //@line 37007
    return $_0 | 0; //@line 37008
   }
  } else {
   $151 = $93; //@line 37011
  }
 } while (0);
 $152 = $buf_i45 | 0; //@line 37015
 do {
  if (($151 & 4095) == 3) {
   $156 = $sct + 4 | 0; //@line 37021
   if ((HEAPU16[$156 >> 1] | 0) == ($c | 0)) {
    $165 = (HEAPU16[$sct + 6 >> 1] | 0) != ($h | 0) | 0; //@line 37033
   } else {
    $165 = 1; //@line 37035
   }
   $174 = $165 | ($151 & 65535 | 0) != ($enc | 0) | (HEAP32[$8 >> 2] & 9 | 0) != 0; //@line 37046
   $175 = $buf_i45 + 6 | 0; //@line 37047
   if ((_psi_sct_get_tags($sct, $175, 12) | 0) == 0) {
    $req_1_i = $174; //@line 37052
   } else {
    $req_1_i = (HEAP8[$175] | 0) != 0 | $174 | (HEAP8[$buf_i45 + 7 | 0] | 0) != 0 | (HEAP8[$buf_i45 + 8 | 0] | 0) != 0 | (HEAP8[$buf_i45 + 9 | 0] | 0) != 0 | (HEAP8[$buf_i45 + 10 | 0] | 0) != 0 | (HEAP8[$buf_i45 + 11 | 0] | 0) != 0 | (HEAP8[$buf_i45 + 12 | 0] | 0) != 0 | (HEAP8[$buf_i45 + 13 | 0] | 0) != 0 | (HEAP8[$buf_i45 + 14 | 0] | 0) != 0 | (HEAP8[$buf_i45 + 15 | 0] | 0) != 0 | (HEAP8[$buf_i45 + 16 | 0] | 0) != 0 | (HEAP8[$buf_i45 + 17 | 0] | 0) != 0; //@line 37113
   }
   if (($req_1_i | 0) == 0) {
    break;
   }
   _psi_set_uint16_be($152, 0, HEAPU16[$156 >> 1] | 0); //@line 37123
   HEAP8[$buf_i45 + 2 | 0] = HEAP16[$sct + 6 >> 1] & 255; //@line 37128
   HEAP8[$buf_i45 + 3 | 0] = HEAP16[$16 >> 1] & 255; //@line 37132
   HEAP8[$buf_i45 + 4 | 0] = (_psi_sct_get_gcr_format($sct) | 0) & 255; //@line 37136
   $252 = HEAP32[$8 >> 2] | 0; //@line 37138
   HEAP8[$buf_i45 + 5 | 0] = ($252 >>> 1 & 4 | $252 & 3) & 255; //@line 37144
   if ((_psi_save_chunk($fp, 1296122695, 18, $152) | 0) == 0) {
    break;
   } else {
    $_0 = 1; //@line 37151
   }
   STACKTOP = sp; //@line 37154
   return $_0 | 0; //@line 37155
  }
 } while (0);
 $259 = $buf_i50 | 0; //@line 37158
 $260 = _psi_sct_get_position($sct) | 0; //@line 37159
 do {
  if (($260 | 0) != -1) {
   _psi_set_uint32_be($259, 0, $260); //@line 37164
   if ((_psi_save_chunk($fp, 1330005587, 4, $259) | 0) == 0) {
    break;
   } else {
    $_0 = 1; //@line 37171
   }
   STACKTOP = sp; //@line 37174
   return $_0 | 0; //@line 37175
  }
 } while (0);
 $263 = _psi_sct_get_read_time($sct) | 0; //@line 37178
 do {
  if (($263 | 0) != 0) {
   if (($263 | 0) == (HEAPU16[$_pre60 >> 1] << 3 | 0)) {
    break;
   }
   _psi_set_uint32_be($259, 0, $263); //@line 37191
   if ((_psi_save_chunk($fp, 1414090053, 4, $259) | 0) == 0) {
    break;
   } else {
    $_0 = 1; //@line 37198
   }
   STACKTOP = sp; //@line 37201
   return $_0 | 0; //@line 37202
  }
 } while (0);
 do {
  if ($26) {
   $272 = HEAP16[$_pre60 >> 1] | 0; //@line 37208
   if ($272 << 16 >> 16 == 0) {
    break;
   }
   if ((_psi_save_chunk($fp, 1145132097, $272 & 65535, HEAP32[$sct + 24 >> 2] | 0) | 0) == 0) {
    break;
   } else {
    $_0 = 1; //@line 37223
   }
   STACKTOP = sp; //@line 37226
   return $_0 | 0; //@line 37227
  }
 } while (0);
 $_0 = 0; //@line 37231
 STACKTOP = sp; //@line 37233
 return $_0 | 0; //@line 37234
}
function _psi_load_st($fp) {
 $fp = $fp | 0;
 var $1 = 0, $_0 = 0;
 $1 = _psi_img_new() | 0; //@line 37243
 do {
  if (($1 | 0) == 0) {
   $_0 = 0; //@line 37248
  } else {
   if ((_raw_load_fp($fp, $1, 29104) | 0) == 0) {
    $_0 = $1; //@line 37254
    break;
   }
   _psi_img_del($1); //@line 37257
   $_0 = 0; //@line 37259
  }
 } while (0);
 return $_0 | 0; //@line 37264
}
function _raw_load_fp($fp, $img, $geo) {
 $fp = $fp | 0;
 $img = $img | 0;
 $geo = $geo | 0;
 var $1 = 0, $4 = 0, $_08_i = 0, $7 = 0, $13 = 0, $14 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $c_032 = 0, $h_029 = 0, $23 = 0, $s_0 = 0, $28 = 0, $30 = 0, $41 = 0, $46 = 0, $49 = 0, $50 = 0, $51 = 0, $_0 = 0, label = 0;
 $1 = _ftell($fp | 0) | 0; //@line 37281
 if ((_fseek($fp | 0, 0, 2) | 0) != 0) {
  $_0 = 1; //@line 37286
  return $_0 | 0; //@line 37289
 }
 $4 = _ftell($fp | 0) | 0; //@line 37291
 if ((_fseek($fp | 0, $1 | 0, 0) | 0) == 0) {
  $_08_i = $geo; //@line 37296
 } else {
  $_0 = 1; //@line 37298
  return $_0 | 0; //@line 37301
 }
 while (1) {
  $7 = HEAP32[$_08_i >> 2] | 0; //@line 37306
  if (($7 | 0) == 0) {
   $_0 = 1; //@line 37310
   label = 13885; //@line 37311
   break;
  }
  if (($7 | 0) == ($4 | 0)) {
   break;
  } else {
   $_08_i = $_08_i + 24 | 0; //@line 37320
  }
 }
 if ((label | 0) == 13885) {
  return $_0 | 0; //@line 37326
 }
 if (($_08_i | 0) == 0) {
  $_0 = 1; //@line 37331
  return $_0 | 0; //@line 37334
 }
 $13 = $_08_i + 4 | 0; //@line 37336
 $14 = HEAP32[$13 >> 2] | 0; //@line 37337
 if (($14 | 0) == 0) {
  $_0 = 0; //@line 37341
  return $_0 | 0; //@line 37344
 }
 $16 = $_08_i + 8 | 0; //@line 37346
 $17 = $_08_i + 12 | 0; //@line 37347
 $18 = $_08_i + 16 | 0; //@line 37348
 $19 = $_08_i + 20 | 0; //@line 37349
 $c_032 = 0;
 $21 = HEAP32[$16 >> 2] | 0;
 $20 = $14;
 L17627 : while (1) {
  if (($21 | 0) == 0) {
   $50 = 0;
   $49 = $20;
  } else {
   $h_029 = 0; //@line 37362
   do {
    $23 = _psi_img_get_track($img, $c_032, $h_029, 1) | 0; //@line 37365
    if (($23 | 0) == 0) {
     $_0 = 1; //@line 37369
     label = 13879; //@line 37370
     break L17627;
    } else {
     $s_0 = 0; //@line 37373
    }
    while (1) {
     if ($s_0 >>> 0 >= (HEAP32[$17 >> 2] | 0) >>> 0) {
      break;
     }
     $28 = $s_0 + 1 | 0; //@line 37383
     $30 = _psi_sct_new($c_032, $h_029, $28, HEAP32[$18 >> 2] | 0) | 0; //@line 37385
     if (($30 | 0) == 0) {
      $_0 = 1; //@line 37389
      label = 13882; //@line 37390
      break L17627;
     }
     _psi_sct_set_encoding($30, HEAP32[$19 >> 2] | 0); //@line 37394
     if ((_psi_trk_add_sector($23, $30) | 0) != 0) {
      label = 13873; //@line 37399
      break L17627;
     }
     $41 = _fread(HEAP32[$30 + 24 >> 2] | 0, 1, HEAP32[$18 >> 2] | 0, $fp | 0) | 0; //@line 37405
     if (($41 | 0) == (HEAP32[$18 >> 2] | 0)) {
      $s_0 = $28; //@line 37410
     } else {
      $_0 = 1; //@line 37412
      label = 13886; //@line 37413
      break L17627;
     }
    }
    $h_029 = $h_029 + 1 | 0; //@line 37417
    $46 = HEAP32[$16 >> 2] | 0; //@line 37418
   } while ($h_029 >>> 0 < $46 >>> 0);
   $50 = $46;
   $49 = HEAP32[$13 >> 2] | 0;
  }
  $51 = $c_032 + 1 | 0; //@line 37433
  if ($51 >>> 0 < $49 >>> 0) {
   $c_032 = $51;
   $21 = $50;
   $20 = $49;
  } else {
   $_0 = 0; //@line 37439
   label = 13887; //@line 37440
   break;
  }
 }
 if ((label | 0) == 13879) {
  return $_0 | 0; //@line 37447
 } else if ((label | 0) == 13882) {
  return $_0 | 0; //@line 37452
 } else if ((label | 0) == 13887) {
  return $_0 | 0; //@line 37457
 } else if ((label | 0) == 13873) {
  _psi_sct_del($30); //@line 37460
  $_0 = 1; //@line 37462
  return $_0 | 0; //@line 37465
 } else if ((label | 0) == 13886) {
  return $_0 | 0; //@line 37470
 }
 return 0;
}
function _psi_load_raw($fp) {
 $fp = $fp | 0;
 var $1 = 0, $_0 = 0;
 $1 = _psi_img_new() | 0; //@line 37480
 do {
  if (($1 | 0) == 0) {
   $_0 = 0; //@line 37485
  } else {
   if ((_raw_load_fp($fp, $1, 29752) | 0) == 0) {
    $_0 = $1; //@line 37491
    break;
   }
   _psi_img_del($1); //@line 37494
   $_0 = 0; //@line 37496
  }
 } while (0);
 return $_0 | 0; //@line 37501
}
function _psi_save_st($fp, $img) {
 $fp = $fp | 0;
 $img = $img | 0;
 return _psi_save_raw($fp, $img) | 0; //@line 37513
}
function _psi_save_raw($fp, $img) {
 $fp = $fp | 0;
 $img = $img | 0;
 var $1 = 0, $2 = 0, $4 = 0, $5 = 0, $c_033 = 0, $8 = 0, $9 = 0, $12 = 0, $h_031 = 0, $15 = 0, $16 = 0, $17 = 0, $20 = 0, $21 = 0, $sct_016_i = 0, $j_015_i = 0, $i_014_i = 0, $24 = 0, $27 = 0, $28 = 0, $sct_1_i = 0, $29 = 0, $32 = 0, $sct_0_ph2630 = 0, $sct_1_i_pn = 0, $_ph2529 = 0, $35 = 0, $38 = 0, $43 = 0, $45 = 0, $46 = 0, $sct_016_i15 = 0, $j_015_i16 = 0, $i_014_i17 = 0, $49 = 0, $52 = 0, $or_cond_i18 = 0, $sct_1_i20 = 0, $55 = 0, $63 = 0, $64 = 0, $_0 = 0;
 $1 = $img | 0; //@line 37533
 $2 = HEAP16[$1 >> 1] | 0; //@line 37534
 L17654 : do {
  if ($2 << 16 >> 16 != 0) {
   $4 = $img + 4 | 0; //@line 37539
   $c_033 = 0;
   $5 = $2;
   L17656 : while (1) {
    $8 = HEAP32[(HEAP32[$4 >> 2] | 0) + ($c_033 << 2) >> 2] | 0; //@line 37547
    $9 = $8 + 2 | 0; //@line 37548
    if ((HEAP16[$9 >> 1] | 0) == 0) {
     $63 = $5; //@line 37553
    } else {
     $12 = $8 + 4 | 0; //@line 37555
     $h_031 = 0; //@line 37557
     do {
      $15 = HEAP32[(HEAP32[$12 >> 2] | 0) + ($h_031 << 2) >> 2] | 0; //@line 37562
      $16 = $15 + 2 | 0; //@line 37563
      $17 = HEAP16[$16 >> 1] | 0; //@line 37564
      L17662 : do {
       if ($17 << 16 >> 16 != 0) {
        $20 = HEAP32[$15 + 4 >> 2] | 0; //@line 37570
        $21 = $17 & 65535; //@line 37571
        $i_014_i = 0;
        $j_015_i = 65535;
        $sct_016_i = 0;
        while (1) {
         $24 = HEAP32[$20 + ($i_014_i << 2) >> 2] | 0; //@line 37579
         $27 = HEAPU16[$24 + 8 >> 1] | 0; //@line 37582
         $28 = $27 >>> 0 < $j_015_i >>> 0; //@line 37583
         $sct_1_i = $28 ? $24 : $sct_016_i; //@line 37585
         $29 = $i_014_i + 1 | 0; //@line 37586
         if ($29 >>> 0 < $21 >>> 0) {
          $i_014_i = $29;
          $j_015_i = $28 ? $27 : $j_015_i;
          $sct_016_i = $sct_1_i;
         } else {
          break;
         }
        }
        if (($sct_1_i | 0) == 0) {
         break;
        }
        $32 = $15 + 4 | 0; //@line 37600
        $sct_1_i_pn = $sct_1_i;
        $sct_0_ph2630 = $sct_1_i;
        while (1) {
         $_ph2529 = (HEAPU16[$sct_1_i_pn + 8 >> 1] | 0) + 1 | 0; //@line 37609
         $35 = $sct_0_ph2630 + 10 | 0; //@line 37612
         $38 = _fwrite(HEAP32[$sct_0_ph2630 + 24 >> 2] | 0, 1, HEAPU16[$35 >> 1] | 0, $fp | 0) | 0; //@line 37615
         if (($38 | 0) != (HEAPU16[$35 >> 1] | 0)) {
          $_0 = 1; //@line 37621
          break L17656;
         }
         $43 = HEAP16[$16 >> 1] | 0; //@line 37624
         if ($43 << 16 >> 16 == 0) {
          break L17662;
         }
         $45 = HEAP32[$32 >> 2] | 0; //@line 37630
         $46 = $43 & 65535; //@line 37631
         $i_014_i17 = 0;
         $j_015_i16 = 65535;
         $sct_016_i15 = 0;
         while (1) {
          $49 = HEAP32[$45 + ($i_014_i17 << 2) >> 2] | 0; //@line 37639
          $52 = HEAPU16[$49 + 8 >> 1] | 0; //@line 37642
          $or_cond_i18 = $52 >>> 0 >= $_ph2529 >>> 0 & $52 >>> 0 < $j_015_i16 >>> 0; //@line 37645
          $sct_1_i20 = $or_cond_i18 ? $49 : $sct_016_i15; //@line 37647
          $55 = $i_014_i17 + 1 | 0; //@line 37648
          if ($55 >>> 0 < $46 >>> 0) {
           $i_014_i17 = $55;
           $j_015_i16 = $or_cond_i18 ? $52 : $j_015_i16;
           $sct_016_i15 = $sct_1_i20;
          } else {
           break;
          }
         }
         if (($sct_1_i20 | 0) == 0) {
          break L17662;
         }
         $sct_1_i_pn = $sct_1_i20;
         $sct_0_ph2630 = $sct_1_i20;
        }
       }
      } while (0);
      $h_031 = $h_031 + 1 | 0; //@line 37667
     } while ($h_031 >>> 0 < (HEAPU16[$9 >> 1] | 0) >>> 0);
     $63 = HEAP16[$1 >> 1] | 0; //@line 37680
    }
    $64 = $c_033 + 1 | 0; //@line 37683
    if ($64 >>> 0 < ($63 & 65535) >>> 0) {
     $c_033 = $64;
     $5 = $63;
    } else {
     break L17654;
    }
   }
   return $_0 | 0; //@line 37695
  }
 } while (0);
 _fflush($fp | 0) | 0; //@line 37698
 $_0 = 0; //@line 37700
 return $_0 | 0; //@line 37703
}
function _psi_probe_raw_fp($fp) {
 $fp = $fp | 0;
 var $4 = 0, $_08_i_i = 0, $7 = 0, $_08_i6_i = 0, $14 = 0, $_0_i = 0, $_0 = 0, label = 0;
 if ((_fseek($fp | 0, 0, 2) | 0) != 0) {
  $_0 = 0; //@line 37718
  return $_0 | 0; //@line 37721
 }
 $4 = _ftell($fp | 0) | 0; //@line 37723
 $_08_i_i = 29752; //@line 37725
 while (1) {
  $7 = HEAP32[$_08_i_i >> 2] | 0; //@line 37729
  if (($7 | 0) == 0) {
   $_08_i6_i = 29104; //@line 37733
   label = 13921; //@line 37734
   break;
  }
  if (($7 | 0) == ($4 | 0)) {
   label = 13920; //@line 37741
   break;
  } else {
   $_08_i_i = $_08_i_i + 24 | 0; //@line 37744
  }
 }
 if ((label | 0) == 13920) {
  if (($_08_i_i | 0) == 0) {
   $_08_i6_i = 29104; //@line 37751
   label = 13921; //@line 37752
  } else {
   $_0_i = $_08_i_i; //@line 37754
  }
 }
 L17691 : do {
  if ((label | 0) == 13921) {
   while (1) {
    label = 0; //@line 37760
    $14 = HEAP32[$_08_i6_i >> 2] | 0; //@line 37763
    if (($14 | 0) == 0) {
     $_0_i = 0; //@line 37767
     break L17691;
    }
    if (($14 | 0) == ($4 | 0)) {
     $_0_i = $_08_i6_i; //@line 37774
     break;
    } else {
     $_08_i6_i = $_08_i6_i + 24 | 0; //@line 37777
     label = 13921; //@line 37778
    }
   }
  }
 } while (0);
 $_0 = ($_0_i | 0) != 0 | 0; //@line 37787
 return $_0 | 0; //@line 37790
}
function _psi_save_stx($fp, $img) {
 $fp = $fp | 0;
 $img = $img | 0;
 return 1; //@line 37800
}
function _psi_load_stx($fp) {
 $fp = $fp | 0;
 var $buf_i_i_i = 0, $buf_i_i = 0, $buf_i = 0, $1 = 0, $4 = 0, $11 = 0, $15 = 0, $16 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $i_016_i = 0, $27 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $44 = 0, $45 = 0, $46 = 0, $i_032_i_i = 0, $hpos_031_i_i = 0, $52 = 0, $56 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $src_05_i28_i_i_i = 0, $_04_i29_i_i_i = 0, $_093_i30_i_i_i = 0, $71 = 0, $74 = 0, $_2_i31_i_i_i = 0, $78 = 0, $_2_1_i32_i_i_i = 0, $82 = 0, $_2_2_i33_i_i_i = 0, $86 = 0, $_2_3_i34_i_i_i = 0, $90 = 0, $_2_4_i35_i_i_i = 0, $94 = 0, $_2_5_i36_i_i_i = 0, $98 = 0, $_2_6_i37_i_i_i = 0, $102 = 0, $_2_7_i38_i_i_i = 0, $105 = 0, $107 = 0, $109 = 0, $110 = 0, $111 = 0, $114 = 0, $115 = 0, $139 = 0, $146 = 0, $149 = 0, $156 = 0, $159 = 0, $i_015_i_i_i_i = 0, $165 = 0, $_ph_i_i = 0, $176 = 0, $hpos_1_i_i = 0, $i_1_i_i = 0, $180 = 0, $181 = 0, $191 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 37831
 STACKTOP = STACKTOP + 48 | 0; //@line 37831
 $buf_i_i_i = sp | 0; //@line 37832
 $buf_i_i = sp + 16 | 0; //@line 37833
 $buf_i = sp + 32 | 0; //@line 37834
 $1 = _psi_img_new() | 0; //@line 37835
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 37839
  STACKTOP = sp; //@line 37841
  return $_0 | 0; //@line 37842
 }
 $4 = $buf_i | 0; //@line 37844
 L17702 : do {
  if ((_psi_read_ofs($fp, 0, $4, 16) | 0) == 0) {
   if ((_psi_get_uint32_be($4, 0) | 0) != 1381193984) {
    $11 = HEAP32[_stderr >> 2] | 0; //@line 37854
    _fwrite(56448, 15, 1, $11 | 0) | 0; //@line 37855
    break;
   }
   $15 = HEAP8[$buf_i + 10 | 0] | 0; //@line 37860
   $16 = $15 & 255; //@line 37861
   if ($15 << 24 >> 24 == 0) {
    $_0 = $1; //@line 37865
    STACKTOP = sp; //@line 37867
    return $_0 | 0; //@line 37868
   }
   $18 = $buf_i_i | 0; //@line 37870
   $19 = $buf_i_i + 14 | 0; //@line 37871
   $20 = $buf_i_i_i | 0; //@line 37872
   $21 = $buf_i_i_i + 8 | 0; //@line 37873
   $22 = $buf_i_i_i + 9 | 0; //@line 37874
   $23 = $buf_i_i_i + 10 | 0; //@line 37875
   $24 = $buf_i_i_i + 11 | 0; //@line 37876
   $25 = $buf_i_i_i + 14 | 0; //@line 37877
   $27 = 16;
   $i_016_i = 0;
   L17710 : while (1) {
    if ((_psi_read_ofs($fp, $27, $18, 16) | 0) != 0) {
     label = 13935; //@line 37887
     break;
    }
    $34 = _psi_get_uint32_le($18, 0) | 0; //@line 37890
    $35 = _psi_get_uint32_le($18, 4) | 0; //@line 37891
    $36 = _psi_get_uint16_le($18, 8) | 0; //@line 37892
    $37 = _psi_get_uint16_le($18, 10) | 0; //@line 37893
    $39 = HEAPU8[$19] | 0; //@line 37895
    $40 = $39 & 127; //@line 37896
    $41 = $39 >>> 7; //@line 37897
    $42 = $27 + 16 | 0; //@line 37898
    $44 = ($36 << 4) + $42 | 0; //@line 37900
    $45 = $44 + $35 | 0; //@line 37901
    $46 = _psi_img_get_track($1, $40, $41, 1) | 0; //@line 37902
    if (($46 | 0) == 0) {
     break L17702;
    }
    L17714 : do {
     if (($37 & 1 | 0) == 0) {
      $i_1_i_i = 0;
      $hpos_1_i_i = $42;
      while (1) {
       if ($i_1_i_i >>> 0 >= $36 >>> 0) {
        break L17714;
       }
       $180 = $i_1_i_i + 1 | 0; //@line 37922
       $181 = _psi_sct_new($40, $41, $180, 512) | 0; //@line 37923
       if (($181 | 0) == 0) {
        break L17702;
       }
       _psi_trk_add_sector($46, $181) | 0; //@line 37929
       if ((_psi_read_ofs($fp, $hpos_1_i_i, HEAP32[$181 + 24 >> 2] | 0, 512) | 0) == 0) {
        $i_1_i_i = $180;
        $hpos_1_i_i = $hpos_1_i_i + 512 | 0;
       } else {
        break L17702;
       }
      }
     } else {
      if (($36 | 0) == 0) {
       break;
      } else {
       $52 = $44;
       $hpos_031_i_i = $42;
       $i_032_i_i = 0;
      }
      while (1) {
       if ((_psi_read_ofs($fp, $hpos_031_i_i, $20, 16) | 0) != 0) {
        label = 13940; //@line 37958
        break L17710;
       }
       $58 = _psi_get_uint32_le($20, 0) | 0; //@line 37961
       $59 = _psi_get_uint16_le($20, 4) | 0; //@line 37962
       $60 = _psi_get_uint16_le($20, 6) | 0; //@line 37963
       $61 = HEAP8[$21] | 0; //@line 37964
       $62 = HEAP8[$22] | 0; //@line 37965
       $63 = HEAP8[$23] | 0; //@line 37966
       $64 = HEAP8[$24] | 0; //@line 37967
       $65 = _psi_get_uint16_be($20, 12) | 0; //@line 37968
       $66 = HEAP8[$25] | 0; //@line 37969
       $_093_i30_i_i_i = 45616;
       $_04_i29_i_i_i = 4;
       $src_05_i28_i_i_i = $21;
       while (1) {
        $71 = HEAPU8[$src_05_i28_i_i_i] << 8 ^ $_093_i30_i_i_i; //@line 37979
        $74 = $71 << 1; //@line 37982
        $_2_i31_i_i_i = ($71 & 32768 | 0) == 0 ? $74 : $74 ^ 4129; //@line 37984
        $78 = $_2_i31_i_i_i << 1; //@line 37987
        $_2_1_i32_i_i_i = ($_2_i31_i_i_i & 32768 | 0) == 0 ? $78 : $78 ^ 4129; //@line 37989
        $82 = $_2_1_i32_i_i_i << 1; //@line 37992
        $_2_2_i33_i_i_i = ($_2_1_i32_i_i_i & 32768 | 0) == 0 ? $82 : $82 ^ 4129; //@line 37994
        $86 = $_2_2_i33_i_i_i << 1; //@line 37997
        $_2_3_i34_i_i_i = ($_2_2_i33_i_i_i & 32768 | 0) == 0 ? $86 : $86 ^ 4129; //@line 37999
        $90 = $_2_3_i34_i_i_i << 1; //@line 38002
        $_2_4_i35_i_i_i = ($_2_3_i34_i_i_i & 32768 | 0) == 0 ? $90 : $90 ^ 4129; //@line 38004
        $94 = $_2_4_i35_i_i_i << 1; //@line 38007
        $_2_5_i36_i_i_i = ($_2_4_i35_i_i_i & 32768 | 0) == 0 ? $94 : $94 ^ 4129; //@line 38009
        $98 = $_2_5_i36_i_i_i << 1; //@line 38012
        $_2_6_i37_i_i_i = ($_2_5_i36_i_i_i & 32768 | 0) == 0 ? $98 : $98 ^ 4129; //@line 38014
        $102 = $_2_6_i37_i_i_i << 1; //@line 38017
        $_2_7_i38_i_i_i = ($_2_6_i37_i_i_i & 32768 | 0) == 0 ? $102 : $102 ^ 4129; //@line 38019
        $105 = $_04_i29_i_i_i - 1 | 0; //@line 38021
        if (($105 | 0) == 0) {
         break;
        } else {
         $_093_i30_i_i_i = $_2_7_i38_i_i_i;
         $_04_i29_i_i_i = $105;
         $src_05_i28_i_i_i = $src_05_i28_i_i_i + 1 | 0;
        }
       }
       $107 = $62 & 255; //@line 38030
       $109 = $61 & 255; //@line 38032
       $110 = $63 & 255; //@line 38033
       $111 = $66 & 255; //@line 38034
       $114 = 128 << ($64 & 3); //@line 38037
       $115 = _psi_sct_new($109, $107, $110, $114) | 0; //@line 38038
       if (($115 | 0) == 0) {
        break L17702;
       }
       _psi_trk_add_sector($46, $115) | 0; //@line 38044
       _psi_sct_set_position($115, $59); //@line 38045
       _psi_sct_set_mfm_size($115, $64); //@line 38046
       _psi_sct_set_read_time($115, ($60 + 2 | 0) >>> 2); //@line 38049
       if (($111 & 8 | 0) != 0) {
        _psi_sct_set_flags($115, 2, 1); //@line 38054
       }
       if (($65 | 0) != ($_2_7_i38_i_i_i & 65535 | 0)) {
        _psi_sct_set_flags($115, 1, 1); //@line 38060
       }
       if (($111 & 16 | 0) == 0) {
        if ((_psi_read_ofs($fp, $45 + $58 | 0, HEAP32[$115 + 24 >> 2] | 0, $114) | 0) != 0) {
         label = 13951; //@line 38074
         break L17710;
        }
       } else {
        _psi_sct_set_size($115, 0, 0) | 0; //@line 38078
        _psi_sct_set_flags($115, 8, 1); //@line 38079
        _psi_sct_set_read_time($115, 0); //@line 38080
       }
       if (($111 & 128 | 0) == 0) {
        $_ph_i_i = $52; //@line 38087
       } else {
        $146 = _psi_sct_clone($115, 0) | 0; //@line 38089
        if (($146 | 0) == 0) {
         break L17702;
        }
        $149 = $146 + 24 | 0; //@line 38095
        if ((_psi_read_ofs($fp, $52, HEAP32[$149 >> 2] | 0, HEAPU16[$146 + 10 >> 1] | 0) | 0) != 0) {
         break L17702;
        }
        $156 = $115 + 10 | 0; //@line 38106
        if ((HEAP16[$156 >> 1] | 0) != 0) {
         $159 = $115 + 24 | 0; //@line 38111
         $i_015_i_i_i_i = 0; //@line 38113
         do {
          $165 = (HEAP32[$149 >> 2] | 0) + $i_015_i_i_i_i | 0; //@line 38120
          HEAP8[$165] = HEAP8[$165] ^ ~HEAP8[(HEAP32[$159 >> 2] | 0) + $i_015_i_i_i_i | 0]; //@line 38124
          $i_015_i_i_i_i = $i_015_i_i_i_i + 1 | 0; //@line 38125
         } while ($i_015_i_i_i_i >>> 0 < (HEAPU16[$156 >> 1] | 0) >>> 0);
        }
        _psi_sct_add_alternate($115, $146); //@line 38137
        $_ph_i_i = $114 + $52 | 0; //@line 38140
       }
       $176 = $i_032_i_i + 1 | 0; //@line 38144
       if ($176 >>> 0 < $36 >>> 0) {
        $52 = $_ph_i_i;
        $hpos_031_i_i = $hpos_031_i_i + 16 | 0;
        $i_032_i_i = $176;
       } else {
        break;
       }
      }
     }
    } while (0);
    $191 = $i_016_i + 1 | 0; //@line 38156
    if ($191 >>> 0 < $16 >>> 0) {
     $27 = $34 + $27 | 0;
     $i_016_i = $191;
    } else {
     $_0 = $1; //@line 38162
     label = 13966; //@line 38163
     break;
    }
   }
   if ((label | 0) == 13940) {
    $56 = HEAP32[_stderr >> 2] | 0; //@line 38168
    _fwrite(46096, 32, 1, $56 | 0) | 0; //@line 38169
    break;
   } else if ((label | 0) == 13966) {
    STACKTOP = sp; //@line 38175
    return $_0 | 0; //@line 38176
   } else if ((label | 0) == 13935) {
    _fwrite(49928, 31, 1, HEAP32[_stderr >> 2] | 0) | 0; //@line 38180
    break;
   } else if ((label | 0) == 13951) {
    $139 = HEAP32[_stderr >> 2] | 0; //@line 38185
    _fprintf($139 | 0, 39552, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = $109, HEAP32[tempInt + 8 >> 2] = $107, HEAP32[tempInt + 16 >> 2] = $110, tempInt) | 0) | 0; //@line 38186
    _fwrite(36600, 30, 1, $139 | 0) | 0; //@line 38187
    break;
   }
  }
 } while (0);
 _psi_img_del($1); //@line 38193
 $_0 = 0; //@line 38195
 STACKTOP = sp; //@line 38197
 return $_0 | 0; //@line 38198
}
function _psi_probe_stx_fp($fp) {
 $fp = $fp | 0;
 var $1 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 38206
 STACKTOP = STACKTOP + 16 | 0; //@line 38206
 $1 = sp | 0; //@line 38208
 if ((_psi_read_ofs($fp, 0, $1, 8) | 0) != 0) {
  $_0 = 0; //@line 38213
  STACKTOP = sp; //@line 38215
  return $_0 | 0; //@line 38216
 }
 $_0 = (_psi_get_uint32_be($1, 0) | 0) == 1381193984 | 0; //@line 38222
 STACKTOP = sp; //@line 38224
 return $_0 | 0; //@line 38225
}
function _psi_load_tc($fp) {
 $fp = $fp | 0;
 var $buf_i22_i_i_i = 0, $buf_i_i_i_i = 0, $fm2_i_i_i = 0, $mark2_i_i_i = 0, $fm_i_i = 0, $mark_i_i = 0, $mfm_i = 0, $1 = 0, $6 = 0, $7 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $c_018_i = 0, $25 = 0, $h_014_i = 0, $27 = 0, $28 = 0, $37 = 0, $47 = 0, $54 = 0, $i_0_i_i = 0, $73 = 0, $74 = 0, $75 = 0, $77 = 0, $src_014_i_i_i_i_i = 0, $_013_i_i_i_i_i = 0, $_0912_i_i_i_i_i = 0, $83 = 0, $86 = 0, $_2_i_i_i_i_i = 0, $90 = 0, $_2_1_i_i_i_i_i = 0, $94 = 0, $_2_2_i_i_i_i_i = 0, $98 = 0, $_2_3_i_i_i_i_i = 0, $102 = 0, $_2_4_i_i_i_i_i = 0, $106 = 0, $_2_5_i_i_i_i_i = 0, $110 = 0, $_2_6_i_i_i_i_i = 0, $114 = 0, $_2_7_i_i_i_i_i = 0, $117 = 0, $126 = 0, $130 = 0, $146 = 0, $148 = 0, $149 = 0, $150 = 0, $151 = 0, $152 = 0, $i_07_i_i_i_i_i = 0, $160 = 0, $162 = 0, $163 = 0, $src_014_i_i23_i_i_i = 0, $_013_i_i24_i_i_i = 0, $_0912_i_i25_i_i_i = 0, $170 = 0, $173 = 0, $_2_i_i26_i_i_i = 0, $177 = 0, $_2_1_i_i27_i_i_i = 0, $181 = 0, $_2_2_i_i28_i_i_i = 0, $185 = 0, $_2_3_i_i29_i_i_i = 0, $189 = 0, $_2_4_i_i30_i_i_i = 0, $193 = 0, $_2_5_i_i31_i_i_i = 0, $197 = 0, $_2_6_i_i32_i_i_i = 0, $201 = 0, $_2_7_i_i33_i_i_i = 0, $204 = 0, $_09_lcssa_i_i_i_i_i = 0, $213 = 0, $221 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 38262
 STACKTOP = STACKTOP + 65616 | 0; //@line 38262
 $buf_i22_i_i_i = sp + 8 | 0; //@line 38264
 $buf_i_i_i_i = sp + 16 | 0; //@line 38265
 $fm2_i_i_i = sp + 24 | 0; //@line 38266
 $mark2_i_i_i = sp + 32 | 0; //@line 38267
 $fm_i_i = sp + 40 | 0; //@line 38268
 $mark_i_i = sp + 48 | 0; //@line 38269
 $mfm_i = sp + 56 | 0; //@line 38270
 $1 = _psi_img_new() | 0; //@line 38271
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 38275
  STACKTOP = sp; //@line 38277
  return $_0 | 0; //@line 38278
 }
 $6 = $mfm_i | 0; //@line 38282
 HEAP32[$6 >> 2] = $fp; //@line 38283
 $7 = $mfm_i + 65540 | 0; //@line 38284
 _memset($7 | 0, 0, 16); //@line 38286
 $9 = sp | 0; //@line 38287
 $10 = $mfm_i + 65544 | 0; //@line 38288
 $11 = $mfm_i + 65554 | 0; //@line 38289
 $12 = $mfm_i + 65548 | 0; //@line 38290
 $14 = HEAP32[_stderr >> 2] | 0; //@line 38292
 $15 = $buf_i_i_i_i | 0; //@line 38293
 $16 = $buf_i_i_i_i + 1 | 0; //@line 38294
 $17 = $buf_i_i_i_i + 2 | 0; //@line 38295
 $18 = $buf_i_i_i_i + 3 | 0; //@line 38296
 $19 = $buf_i_i_i_i + 4 | 0; //@line 38297
 $20 = $buf_i_i_i_i + 5 | 0; //@line 38298
 $21 = $mfm_i + 65552 | 0; //@line 38299
 $22 = $buf_i22_i_i_i | 0; //@line 38300
 $23 = $buf_i22_i_i_i + 1 | 0; //@line 38301
 $24 = $mfm_i + 4 | 0; //@line 38302
 $c_018_i = 0; //@line 38304
 L17764 : while (1) {
  $25 = $c_018_i << 1; //@line 38307
  $h_014_i = 0; //@line 38309
  do {
   HEAP32[$10 >> 2] = 0; //@line 38312
   HEAP32[$7 >> 2] = 0; //@line 38313
   HEAP8[$11] = 0; //@line 38314
   $27 = HEAP32[$6 >> 2] | 0; //@line 38316
   $28 = $h_014_i + $25 << 1; //@line 38317
   if ((_fseek($27 | 0, $28 + 773 | 0, 0) | 0) != 0) {
    break L17764;
   }
   if ((_fread($9 | 0, 1, 2, $27 | 0) | 0) != 2) {
    break L17764;
   }
   $37 = (_psi_get_uint16_be($9, 0) | 0) << 8; //@line 38332
   L17770 : do {
    if (($37 | 0) != 0) {
     if ((_fseek($27 | 0, $28 + 1285 | 0, 0) | 0) != 0) {
      break L17764;
     }
     if ((_fread($9 | 0, 1, 2, $27 | 0) | 0) != 2) {
      break L17764;
     }
     $47 = _psi_get_uint16_le($9, 0) | 0; //@line 38350
     if ((_fseek($27 | 0, $37 | 0, 0) | 0) != 0) {
      break L17764;
     }
     if ((_fread($24 | 0, 1, $47 | 0, $27 | 0) | 0) != ($47 | 0)) {
      break L17764;
     }
     HEAP32[$10 >> 2] = 0; //@line 38363
     $54 = $47 << 3; //@line 38364
     HEAP32[$7 >> 2] = $54; //@line 38365
     if (($54 | 0) == 0) {
      break;
     } else {
      $i_0_i_i = 0; //@line 38371
     }
     while (1) {
      if ($i_0_i_i >>> 0 >= 2) {
       break L17770;
      }
      HEAP32[$12 >> 2] = 0; //@line 38380
      HEAP32[$10 >> 2] = 0; //@line 38381
      L17779 : do {
       do {
        if ((_mfm_sync_mark($mfm_i, $mark_i_i, $fm_i_i) | 0) == 0) {
         if (($i_0_i_i | 0) == 1) {
          if ((HEAP32[$fm_i_i >> 2] | 0) == 0) {
           break;
          }
         } else if (($i_0_i_i | 0) == 0) {
          if ((HEAP32[$fm_i_i >> 2] | 0) != 0) {
           break;
          }
         }
         if ((HEAP32[$12 >> 2] | 0) != 0) {
          break L17779;
         }
         $73 = HEAPU8[$mark_i_i] | 0; //@line 38411
         $74 = HEAP32[$fm_i_i >> 2] | 0; //@line 38412
         $75 = HEAP32[$10 >> 2] | 0; //@line 38413
         do {
          if (($73 | 0) == 254) {
           _mfm_read_byte($mfm_i, $15); //@line 38416
           _mfm_read_byte($mfm_i, $16); //@line 38417
           _mfm_read_byte($mfm_i, $17); //@line 38418
           _mfm_read_byte($mfm_i, $18); //@line 38419
           _mfm_read_byte($mfm_i, $19); //@line 38420
           _mfm_read_byte($mfm_i, $20); //@line 38421
           $77 = _psi_get_uint16_be($15, 4) | 0; //@line 38422
           $_0912_i_i_i_i_i = HEAPU16[$21 >> 1] | 0;
           $_013_i_i_i_i_i = 4;
           $src_014_i_i_i_i_i = $15;
           while (1) {
            $83 = HEAPU8[$src_014_i_i_i_i_i] << 8 ^ $_0912_i_i_i_i_i; //@line 38433
            $86 = $83 << 1; //@line 38436
            $_2_i_i_i_i_i = ($83 & 32768 | 0) == 0 ? $86 : $86 ^ 4129; //@line 38438
            $90 = $_2_i_i_i_i_i << 1; //@line 38441
            $_2_1_i_i_i_i_i = ($_2_i_i_i_i_i & 32768 | 0) == 0 ? $90 : $90 ^ 4129; //@line 38443
            $94 = $_2_1_i_i_i_i_i << 1; //@line 38446
            $_2_2_i_i_i_i_i = ($_2_1_i_i_i_i_i & 32768 | 0) == 0 ? $94 : $94 ^ 4129; //@line 38448
            $98 = $_2_2_i_i_i_i_i << 1; //@line 38451
            $_2_3_i_i_i_i_i = ($_2_2_i_i_i_i_i & 32768 | 0) == 0 ? $98 : $98 ^ 4129; //@line 38453
            $102 = $_2_3_i_i_i_i_i << 1; //@line 38456
            $_2_4_i_i_i_i_i = ($_2_3_i_i_i_i_i & 32768 | 0) == 0 ? $102 : $102 ^ 4129; //@line 38458
            $106 = $_2_4_i_i_i_i_i << 1; //@line 38461
            $_2_5_i_i_i_i_i = ($_2_4_i_i_i_i_i & 32768 | 0) == 0 ? $106 : $106 ^ 4129; //@line 38463
            $110 = $_2_5_i_i_i_i_i << 1; //@line 38466
            $_2_6_i_i_i_i_i = ($_2_5_i_i_i_i_i & 32768 | 0) == 0 ? $110 : $110 ^ 4129; //@line 38468
            $114 = $_2_6_i_i_i_i_i << 1; //@line 38471
            $_2_7_i_i_i_i_i = ($_2_6_i_i_i_i_i & 32768 | 0) == 0 ? $114 : $114 ^ 4129; //@line 38473
            $117 = $_013_i_i_i_i_i - 1 | 0; //@line 38475
            if (($117 | 0) == 0) {
             break;
            } else {
             $_0912_i_i_i_i_i = $_2_7_i_i_i_i_i;
             $_013_i_i_i_i_i = $117;
             $src_014_i_i_i_i_i = $src_014_i_i_i_i_i + 1 | 0;
            }
           }
           HEAP16[$21 >> 1] = $_2_7_i_i_i_i_i & 65535; //@line 38485
           $126 = HEAP8[$18] | 0; //@line 38492
           $130 = _psi_sct_new(HEAPU8[$15] | 0, HEAPU8[$16] | 0, HEAPU8[$17] | 0, ($126 & 255) < 6 ? 128 << ($126 & 255) : 8192) | 0; //@line 38497
           if (($130 | 0) == 0) {
            break L17764;
           }
           _psi_sct_set_mfm_size($130, HEAP8[$18] | 0); //@line 38504
           _psi_sct_set_flags($130, 8, 1); //@line 38505
           if (($_2_7_i_i_i_i_i & 65535 | 0) != ($77 | 0)) {
            _psi_sct_set_flags($130, 1, 1); //@line 38510
           }
           _psi_sct_fill($130, 0); //@line 38513
           if (($74 | 0) == 0) {
            _psi_sct_set_encoding($130, 2); //@line 38517
           } else {
            _psi_sct_set_encoding($130, 1); //@line 38519
           }
           _psi_img_add_sector($1, $130, $c_018_i, $h_014_i) | 0; //@line 38522
           if ((_mfm_sync_mark($mfm_i, $mark2_i_i_i, $fm2_i_i_i) | 0) != 0) {
            break;
           }
           $146 = HEAP8[$mark2_i_i_i] | 0; //@line 38529
           if (!(($146 << 24 >> 24 | 0) == (-8 | 0) | ($146 << 24 >> 24 | 0) == (-5 | 0))) {
            break;
           }
           $148 = $130 + 24 | 0; //@line 38533
           $149 = HEAP32[$148 >> 2] | 0; //@line 38534
           $150 = $130 + 10 | 0; //@line 38535
           $151 = HEAP16[$150 >> 1] | 0; //@line 38536
           $152 = $151 & 65535; //@line 38537
           if ($151 << 16 >> 16 != 0) {
            $i_07_i_i_i_i_i = 0; //@line 38541
            do {
             _mfm_read_byte($mfm_i, $149 + $i_07_i_i_i_i_i | 0); //@line 38545
             $i_07_i_i_i_i_i = $i_07_i_i_i_i_i + 1 | 0; //@line 38546
            } while ($i_07_i_i_i_i_i >>> 0 < $152 >>> 0);
            if ($151 << 16 >> 16 != (HEAP16[$150 >> 1] | 0)) {
             break L17764;
            }
           }
           _mfm_read_byte($mfm_i, $22); //@line 38562
           _mfm_read_byte($mfm_i, $23); //@line 38563
           _psi_sct_set_flags($130, 8, 0); //@line 38564
           _psi_sct_set_flags($130, 4, $146 << 24 >> 24 == -8 | 0); //@line 38567
           $160 = _psi_get_uint16_be($22, 0) | 0; //@line 38568
           $162 = HEAPU16[$21 >> 1] | 0; //@line 38570
           $163 = HEAP16[$150 >> 1] | 0; //@line 38571
           if ($163 << 16 >> 16 == 0) {
            $_09_lcssa_i_i_i_i_i = $162; //@line 38575
           } else {
            $_0912_i_i25_i_i_i = $162;
            $_013_i_i24_i_i_i = $163 & 65535;
            $src_014_i_i23_i_i_i = HEAP32[$148 >> 2] | 0;
            while (1) {
             $170 = HEAPU8[$src_014_i_i23_i_i_i] << 8 ^ $_0912_i_i25_i_i_i; //@line 38588
             $173 = $170 << 1; //@line 38591
             $_2_i_i26_i_i_i = ($170 & 32768 | 0) == 0 ? $173 : $173 ^ 4129; //@line 38593
             $177 = $_2_i_i26_i_i_i << 1; //@line 38596
             $_2_1_i_i27_i_i_i = ($_2_i_i26_i_i_i & 32768 | 0) == 0 ? $177 : $177 ^ 4129; //@line 38598
             $181 = $_2_1_i_i27_i_i_i << 1; //@line 38601
             $_2_2_i_i28_i_i_i = ($_2_1_i_i27_i_i_i & 32768 | 0) == 0 ? $181 : $181 ^ 4129; //@line 38603
             $185 = $_2_2_i_i28_i_i_i << 1; //@line 38606
             $_2_3_i_i29_i_i_i = ($_2_2_i_i28_i_i_i & 32768 | 0) == 0 ? $185 : $185 ^ 4129; //@line 38608
             $189 = $_2_3_i_i29_i_i_i << 1; //@line 38611
             $_2_4_i_i30_i_i_i = ($_2_3_i_i29_i_i_i & 32768 | 0) == 0 ? $189 : $189 ^ 4129; //@line 38613
             $193 = $_2_4_i_i30_i_i_i << 1; //@line 38616
             $_2_5_i_i31_i_i_i = ($_2_4_i_i30_i_i_i & 32768 | 0) == 0 ? $193 : $193 ^ 4129; //@line 38618
             $197 = $_2_5_i_i31_i_i_i << 1; //@line 38621
             $_2_6_i_i32_i_i_i = ($_2_5_i_i31_i_i_i & 32768 | 0) == 0 ? $197 : $197 ^ 4129; //@line 38623
             $201 = $_2_6_i_i32_i_i_i << 1; //@line 38626
             $_2_7_i_i33_i_i_i = ($_2_6_i_i32_i_i_i & 32768 | 0) == 0 ? $201 : $201 ^ 4129; //@line 38628
             $204 = $_013_i_i24_i_i_i - 1 | 0; //@line 38630
             if (($204 | 0) == 0) {
              $_09_lcssa_i_i_i_i_i = $_2_7_i_i33_i_i_i; //@line 38634
              break;
             } else {
              $_0912_i_i25_i_i_i = $_2_7_i_i33_i_i_i;
              $_013_i_i24_i_i_i = $204;
              $src_014_i_i23_i_i_i = $src_014_i_i23_i_i_i + 1 | 0;
             }
            }
           }
           HEAP16[$21 >> 1] = $_09_lcssa_i_i_i_i_i & 65535; //@line 38644
           if (($_09_lcssa_i_i_i_i_i & 65535 | 0) == ($160 | 0)) {
            break;
           }
           _psi_sct_set_flags($130, 2, 1); //@line 38650
          } else if (!(($73 | 0) == 248 | ($73 | 0) == 251)) {
           $213 = HEAP32[$7 >> 2] | 0; //@line 38655
           _fprintf($14 | 0, 52600, (tempInt = STACKTOP, STACKTOP = STACKTOP + 48 | 0, HEAP32[tempInt >> 2] = $73, HEAP32[tempInt + 8 >> 2] = ($74 | 0) != 0 ? 56432 : 49920, HEAP32[tempInt + 16 >> 2] = $c_018_i, HEAP32[tempInt + 24 >> 2] = $h_014_i, HEAP32[tempInt + 32 >> 2] = $75, HEAP32[tempInt + 40 >> 2] = $213, tempInt) | 0) | 0; //@line 38656
          }
         } while (0);
         HEAP32[$12 >> 2] = 0; //@line 38660
         HEAP32[$10 >> 2] = $75; //@line 38661
        }
       } while (0);
      } while ((HEAP32[$12 >> 2] | 0) == 0);
      if ((_psi_img_get_sector($1, $c_018_i, $h_014_i, 0, 1) | 0) == 0) {
       $i_0_i_i = $i_0_i_i + 1 | 0; //@line 38677
      } else {
       break;
      }
     }
    }
   } while (0);
   $h_014_i = $h_014_i + 1 | 0; //@line 38684
  } while ($h_014_i >>> 0 < 2);
  $221 = $c_018_i + 1 | 0; //@line 38693
  if ($221 >>> 0 < 80) {
   $c_018_i = $221; //@line 38697
  } else {
   $_0 = $1; //@line 38699
   label = 14020; //@line 38700
   break;
  }
 }
 if ((label | 0) == 14020) {
  STACKTOP = sp; //@line 38706
  return $_0 | 0; //@line 38707
 }
 _psi_img_del($1); //@line 38709
 $_0 = 0; //@line 38711
 STACKTOP = sp; //@line 38713
 return $_0 | 0; //@line 38714
}
function _mfm_sync_mark($mfm, $mark, $fm) {
 $mfm = $mfm | 0;
 $mark = $mark | 0;
 $fm = $fm | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $7 = 0, $_pre20_i = 0, $9 = 0, $10 = 0, $val_0_i = 0, $20 = 0, $21 = 0, $24 = 0, $25 = 0, $26 = 0, $30 = 0, $31 = 0, $44 = 0, $47 = 0, $_2_i21 = 0, $51 = 0, $_2_1_i22 = 0, $55 = 0, $_2_2_i23 = 0, $59 = 0, $_2_3_i24 = 0, $63 = 0, $_2_4_i25 = 0, $67 = 0, $_2_5_i26 = 0, $71 = 0, $_2_6_i27 = 0, $75 = 0, $78 = 0, $i_0 = 0, $87 = 0, $90 = 0, $_2_i = 0, $94 = 0, $_2_1_i = 0, $98 = 0, $_2_2_i = 0, $102 = 0, $_2_3_i = 0, $106 = 0, $_2_4_i = 0, $110 = 0, $_2_5_i = 0, $114 = 0, $_2_6_i = 0, $118 = 0, $_0 = 0, label = 0;
 HEAP32[$fm >> 2] = 0; //@line 38741
 HEAP8[$mark] = 0; //@line 38742
 $1 = $mfm + 65554 | 0; //@line 38743
 HEAP8[$1] = 0; //@line 38744
 $2 = $mfm + 65548 | 0; //@line 38745
 $3 = HEAP32[$2 >> 2] | 0; //@line 38746
 $4 = $3 + 2 | 0; //@line 38747
 $5 = $mfm + 65544 | 0; //@line 38748
 $7 = $mfm + 65555 | 0; //@line 38750
 $_pre20_i = HEAP32[$mfm + 65540 >> 2] | 0; //@line 38752
 $val_0_i = 0;
 $10 = HEAP32[$5 >> 2] | 0;
 $9 = $3;
 while (1) {
  $20 = (HEAPU8[($10 >>> 3) + ($mfm + 4) | 0] & 128 >>> (($10 & 7) >>> 0) | 0) != 0 | 0; //@line 38768
  $21 = $10 + 1 | 0; //@line 38769
  HEAP32[$5 >> 2] = $21; //@line 38770
  if ($21 >>> 0 < $_pre20_i >>> 0) {
   $26 = $21;
   $25 = $9;
  } else {
   HEAP32[$5 >> 2] = 0; //@line 38776
   $24 = $9 + 1 | 0; //@line 38777
   HEAP32[$2 >> 2] = $24; //@line 38778
   $26 = 0;
   $25 = $24;
  }
  HEAP8[$7] = (HEAP8[$7] | 0) == 0 | 0; //@line 38787
  $30 = $20 | $val_0_i << 1; //@line 38788
  $31 = $30 & 65535; //@line 38789
  if (($31 | 0) == 63338) {
   label = 14028; //@line 38791
   break;
  } else if (($31 | 0) == 62826) {
   label = 14031; //@line 38794
   break;
  } else if (($31 | 0) == 62846) {
   label = 14029; //@line 38797
   break;
  } else if (($31 | 0) == 17545) {
   label = 14027; //@line 38800
   break;
  } else if (($31 | 0) == 62831) {
   label = 14030; //@line 38803
   break;
  }
  if ((HEAP8[$mark] | 0) != 0) {
   break;
  }
  if ($25 >>> 0 < $4 >>> 0) {
   $val_0_i = $30;
   $10 = $26;
   $9 = $25;
  } else {
   $_0 = 1; //@line 38817
   label = 14042; //@line 38818
   break;
  }
 }
 if ((label | 0) == 14028) {
  HEAP8[$mark] = -4; //@line 38823
 } else if ((label | 0) == 14042) {
  return $_0 | 0; //@line 38829
 } else if ((label | 0) == 14031) {
  HEAP8[$mark] = -8; //@line 38832
 } else if ((label | 0) == 14029) {
  HEAP8[$mark] = -2; //@line 38836
 } else if ((label | 0) == 14027) {
  HEAP8[$mark] = -95; //@line 38840
 } else if ((label | 0) == 14030) {
  HEAP8[$mark] = -5; //@line 38844
 }
 HEAP8[$1] = 1; //@line 38847
 HEAP8[$7] = 1; //@line 38848
 $44 = HEAPU8[$mark] << 8 ^ 65535; //@line 38852
 $47 = $44 << 1; //@line 38855
 $_2_i21 = ($44 & 32768 | 0) == 0 ? $47 : $47 ^ 4129; //@line 38857
 $51 = $_2_i21 << 1; //@line 38860
 $_2_1_i22 = ($_2_i21 & 32768 | 0) == 0 ? $51 : $51 ^ 4129; //@line 38862
 $55 = $_2_1_i22 << 1; //@line 38865
 $_2_2_i23 = ($_2_1_i22 & 32768 | 0) == 0 ? $55 : $55 ^ 4129; //@line 38867
 $59 = $_2_2_i23 << 1; //@line 38870
 $_2_3_i24 = ($_2_2_i23 & 32768 | 0) == 0 ? $59 : $59 ^ 4129; //@line 38872
 $63 = $_2_3_i24 << 1; //@line 38875
 $_2_4_i25 = ($_2_3_i24 & 32768 | 0) == 0 ? $63 : $63 ^ 4129; //@line 38877
 $67 = $_2_4_i25 << 1; //@line 38880
 $_2_5_i26 = ($_2_4_i25 & 32768 | 0) == 0 ? $67 : $67 ^ 4129; //@line 38882
 $71 = $_2_5_i26 << 1; //@line 38885
 $_2_6_i27 = ($_2_5_i26 & 32768 | 0) == 0 ? $71 : $71 ^ 4129; //@line 38887
 $75 = $_2_6_i27 << 1; //@line 38890
 $78 = $mfm + 65552 | 0; //@line 38894
 HEAP16[$78 >> 1] = (($_2_6_i27 & 32768 | 0) == 0 ? $75 : $75 ^ 4129) & 65535; //@line 38895
 if ((HEAP8[$mark] | 0) == -95) {
  $i_0 = 0; //@line 38900
 } else {
  HEAP32[$fm >> 2] = 1; //@line 38902
  $_0 = 0; //@line 38904
  return $_0 | 0; //@line 38907
 }
 while (1) {
  _mfm_read_byte($mfm, $mark); //@line 38911
  $87 = HEAPU8[$mark] << 8 ^ HEAPU16[$78 >> 1]; //@line 38917
  $90 = $87 << 1; //@line 38920
  $_2_i = ($87 & 32768 | 0) == 0 ? $90 : $90 ^ 4129; //@line 38922
  $94 = $_2_i << 1; //@line 38925
  $_2_1_i = ($_2_i & 32768 | 0) == 0 ? $94 : $94 ^ 4129; //@line 38927
  $98 = $_2_1_i << 1; //@line 38930
  $_2_2_i = ($_2_1_i & 32768 | 0) == 0 ? $98 : $98 ^ 4129; //@line 38932
  $102 = $_2_2_i << 1; //@line 38935
  $_2_3_i = ($_2_2_i & 32768 | 0) == 0 ? $102 : $102 ^ 4129; //@line 38937
  $106 = $_2_3_i << 1; //@line 38940
  $_2_4_i = ($_2_3_i & 32768 | 0) == 0 ? $106 : $106 ^ 4129; //@line 38942
  $110 = $_2_4_i << 1; //@line 38945
  $_2_5_i = ($_2_4_i & 32768 | 0) == 0 ? $110 : $110 ^ 4129; //@line 38947
  $114 = $_2_5_i << 1; //@line 38950
  $_2_6_i = ($_2_5_i & 32768 | 0) == 0 ? $114 : $114 ^ 4129; //@line 38952
  $118 = $_2_6_i << 1; //@line 38955
  HEAP16[$78 >> 1] = (($_2_6_i & 32768 | 0) == 0 ? $118 : $118 ^ 4129) & 65535; //@line 38960
  if ($i_0 >>> 0 >= 2) {
   $_0 = 0; //@line 38963
   label = 14040; //@line 38964
   break;
  }
  if ((HEAP8[$mark] | 0) == -95) {
   $i_0 = $i_0 + 1 | 0; //@line 38972
  } else {
   $_0 = 0; //@line 38974
   label = 14041; //@line 38975
   break;
  }
 }
 if ((label | 0) == 14040) {
  return $_0 | 0; //@line 38982
 } else if ((label | 0) == 14041) {
  return $_0 | 0; //@line 38987
 }
 return 0;
}
function _mfm_read_bit($mfm) {
 $mfm = $mfm | 0;
 var $1 = 0, $2 = 0, $11 = 0, $12 = 0, $17 = 0, $21 = 0;
 $1 = $mfm + 65544 | 0; //@line 38999
 $2 = HEAP32[$1 >> 2] | 0; //@line 39000
 $11 = (HEAPU8[($2 >>> 3) + ($mfm + 4) | 0] & 128 >>> (($2 & 7) >>> 0) | 0) != 0 | 0; //@line 39009
 $12 = $2 + 1 | 0; //@line 39010
 HEAP32[$1 >> 2] = $12; //@line 39011
 if ($12 >>> 0 >= (HEAP32[$mfm + 65540 >> 2] | 0) >>> 0) {
  HEAP32[$1 >> 2] = 0; //@line 39017
  $17 = $mfm + 65548 | 0; //@line 39018
  HEAP32[$17 >> 2] = (HEAP32[$17 >> 2] | 0) + 1; //@line 39021
 }
 $21 = $mfm + 65555 | 0; //@line 39024
 HEAP8[$21] = (HEAP8[$21] | 0) == 0 | 0; //@line 39028
 return $11 | 0; //@line 39030
}
function _mfm_read_byte($mfm, $val) {
 $mfm = $mfm | 0;
 $val = $val | 0;
 var $1 = 0, $5 = 0, $7 = 0, $12 = 0, $15 = 0, $85 = 0;
 HEAP8[$val] = 0; //@line 39048
 $1 = $mfm + 65555 | 0; //@line 39049
 if ((HEAP8[$1] | 0) == 0) {
  $15 = 0; //@line 39054
 } else {
  $5 = $mfm + 65544 | 0; //@line 39056
  $7 = (HEAP32[$5 >> 2] | 0) + 1 | 0; //@line 39058
  HEAP32[$5 >> 2] = $7; //@line 39059
  if ($7 >>> 0 >= (HEAP32[$mfm + 65540 >> 2] | 0) >>> 0) {
   HEAP32[$5 >> 2] = 0; //@line 39065
   $12 = $mfm + 65548 | 0; //@line 39066
   HEAP32[$12 >> 2] = (HEAP32[$12 >> 2] | 0) + 1; //@line 39069
  }
  HEAP8[$1] = 0; //@line 39072
  $15 = HEAP8[$val] << 1; //@line 39076
 }
 HEAP8[$val] = $15; //@line 39079
 if ((_mfm_read_bit($mfm) | 0) != 0) {
  HEAP8[$val] = HEAP8[$val] | 1; //@line 39086
 }
 _mfm_read_bit($mfm) | 0; //@line 39089
 HEAP8[$val] = HEAP8[$val] << 1; //@line 39092
 if ((_mfm_read_bit($mfm) | 0) != 0) {
  HEAP8[$val] = HEAP8[$val] | 1; //@line 39099
 }
 _mfm_read_bit($mfm) | 0; //@line 39102
 HEAP8[$val] = HEAP8[$val] << 1; //@line 39105
 if ((_mfm_read_bit($mfm) | 0) != 0) {
  HEAP8[$val] = HEAP8[$val] | 1; //@line 39112
 }
 _mfm_read_bit($mfm) | 0; //@line 39115
 HEAP8[$val] = HEAP8[$val] << 1; //@line 39118
 if ((_mfm_read_bit($mfm) | 0) != 0) {
  HEAP8[$val] = HEAP8[$val] | 1; //@line 39125
 }
 _mfm_read_bit($mfm) | 0; //@line 39128
 HEAP8[$val] = HEAP8[$val] << 1; //@line 39131
 if ((_mfm_read_bit($mfm) | 0) != 0) {
  HEAP8[$val] = HEAP8[$val] | 1; //@line 39138
 }
 _mfm_read_bit($mfm) | 0; //@line 39141
 HEAP8[$val] = HEAP8[$val] << 1; //@line 39144
 if ((_mfm_read_bit($mfm) | 0) != 0) {
  HEAP8[$val] = HEAP8[$val] | 1; //@line 39151
 }
 _mfm_read_bit($mfm) | 0; //@line 39154
 HEAP8[$val] = HEAP8[$val] << 1; //@line 39157
 if ((_mfm_read_bit($mfm) | 0) != 0) {
  HEAP8[$val] = HEAP8[$val] | 1; //@line 39164
 }
 _mfm_read_bit($mfm) | 0; //@line 39167
 HEAP8[$val] = HEAP8[$val] << 1; //@line 39170
 if ((_mfm_read_bit($mfm) | 0) == 0) {
  $85 = _mfm_read_bit($mfm) | 0; //@line 39175
  return;
 }
 HEAP8[$val] = HEAP8[$val] | 1; //@line 39181
 $85 = _mfm_read_bit($mfm) | 0; //@line 39183
 return;
}
function _psi_load_td0($fp) {
 $fp = $fp | 0;
 var $buf_i_i_i_i = 0, $buf_i_i_i = 0, $buf_i_i = 0, $buf_i = 0, $1 = 0, $4 = 0, $8 = 0, $14 = 0, $30 = 0, $32 = 0, $33 = 0, $tmp_014_i_i = 0, $_013_i_i = 0, $_0912_i_i = 0, $37 = 0, $40 = 0, $_2_i_i = 0, $44 = 0, $_2_1_i_i = 0, $48 = 0, $_2_2_i_i = 0, $52 = 0, $_2_3_i_i = 0, $56 = 0, $_2_4_i_i = 0, $60 = 0, $_2_5_i_i = 0, $64 = 0, $_2_6_i_i = 0, $68 = 0, $_2_7_i_i = 0, $71 = 0, $73 = 0, $74 = 0, $77 = 0, $81 = 0, $86 = 0, $tmp_014_i_i_i = 0, $_013_i_i_i = 0, $_0912_i_i_i = 0, $91 = 0, $94 = 0, $_2_i_i10_i = 0, $98 = 0, $_2_1_i_i11_i = 0, $102 = 0, $_2_2_i_i12_i = 0, $106 = 0, $_2_3_i_i13_i = 0, $110 = 0, $_2_4_i_i14_i = 0, $114 = 0, $_2_5_i_i15_i = 0, $118 = 0, $_2_6_i_i16_i = 0, $122 = 0, $_2_7_i_i17_i = 0, $125 = 0, $127 = 0, $128 = 0, $131 = 0, $tmp_014_i36_i_i = 0, $_013_i37_i_i = 0, $_0912_i38_i_i = 0, $140 = 0, $143 = 0, $_2_i39_i_i = 0, $147 = 0, $_2_1_i40_i_i = 0, $151 = 0, $_2_2_i41_i_i = 0, $155 = 0, $_2_3_i42_i_i = 0, $159 = 0, $_2_4_i43_i_i = 0, $163 = 0, $_2_5_i44_i_i = 0, $167 = 0, $_2_6_i45_i_i = 0, $171 = 0, $_2_7_i46_i_i = 0, $174 = 0, $176 = 0, $i_0_i_i = 0, $j_0_i_i = 0, $186 = 0, $k_049_i_i = 0, $190 = 0, $194 = 0, $crc2_0_i_i = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $220 = 0, $229 = 0, $230 = 0, $233 = 0, $_2_i_i_i = 0, $237 = 0, $_2_1_i_i_i = 0, $241 = 0, $_2_2_i_i_i = 0, $245 = 0, $_2_3_i_i_i = 0, $249 = 0, $_2_4_i_i_i = 0, $253 = 0, $_2_5_i_i_i = 0, $257 = 0, $_2_6_i_i_i = 0, $261 = 0, $264 = 0, $266 = 0, $269 = 0, $_2_i_1_i_i = 0, $273 = 0, $_2_1_i_1_i_i = 0, $277 = 0, $_2_2_i_1_i_i = 0, $281 = 0, $_2_3_i_1_i_i = 0, $285 = 0, $_2_4_i_1_i_i = 0, $289 = 0, $_2_5_i_1_i_i = 0, $293 = 0, $_2_6_i_1_i_i = 0, $297 = 0, $300 = 0, $302 = 0, $305 = 0, $_2_i_2_i_i = 0, $309 = 0, $_2_1_i_2_i_i = 0, $313 = 0, $_2_2_i_2_i_i = 0, $317 = 0, $_2_3_i_2_i_i = 0, $321 = 0, $_2_4_i_2_i_i = 0, $325 = 0, $_2_5_i_2_i_i = 0, $329 = 0, $_2_6_i_2_i_i = 0, $333 = 0, $_2_7_i_2_i_i = 0, $336 = 0, $343 = 0, $dr__i_i = 0, $348 = 0, $enc_0_i_i_i_i = 0, $i_036_i_i = 0, $357 = 0, $358 = 0, $360 = 0, $365 = 0, $370 = 0, $371 = 0, $387 = 0, $tmp_014_i_i_i_i = 0, $_013_i_i_i_i = 0, $_0912_i_i_i_i = 0, $391 = 0, $394 = 0, $_2_i_i_i_i = 0, $398 = 0, $_2_1_i_i_i_i = 0, $402 = 0, $_2_2_i_i_i_i = 0, $406 = 0, $_2_3_i_i_i_i = 0, $410 = 0, $_2_4_i_i_i_i = 0, $414 = 0, $_2_5_i_i_i_i = 0, $418 = 0, $_2_6_i_i_i_i = 0, $422 = 0, $_2_7_i_i_i_i = 0, $425 = 0, $427 = 0, $428 = 0, $437 = 0, $448 = 0, $453 = 0, $454 = 0, $456 = 0, $473 = 0, $475 = 0, $480 = 0, $i_010_i_i_i_i = 0, $483 = 0, $490 = 0, $_pre_i_i_i_i = 0, $494 = 0, $idx_037_i_i_i_i = 0, $_036_i_i_i_i = 0, $501 = 0, $502 = 0, $505 = 0, $508 = 0, $_0_be_i_i_i_i = 0, $idx_0_be_i_i_i_i = 0, $521 = 0, $522 = 0, $526 = 0, $534 = 0, $rep_033_i_i_i_i = 0, $idx_132_i_i_i_i = 0, $544 = 0, $idx_0_lcssa_i_i_i_i = 0, $_pre_phi_i = 0, $552 = 0, $555 = 0, $556 = 0, $tmp_014_i70_i_i_i = 0, $_013_i71_i_i_i = 0, $_0912_i72_i_i_i = 0, $560 = 0, $563 = 0, $_2_i73_i_i_i = 0, $567 = 0, $_2_1_i74_i_i_i = 0, $571 = 0, $_2_2_i75_i_i_i = 0, $575 = 0, $_2_3_i76_i_i_i = 0, $579 = 0, $_2_4_i77_i_i_i = 0, $583 = 0, $_2_5_i78_i_i_i = 0, $587 = 0, $_2_6_i79_i_i_i = 0, $591 = 0, $_2_7_i80_i_i_i = 0, $594 = 0, $tmp_014_i57_i_i_i = 0, $_013_i58_i_i_i = 0, $_0912_i59_i_i_i = 0, $599 = 0, $602 = 0, $_2_i60_i_i_i = 0, $606 = 0, $_2_1_i61_i_i_i = 0, $610 = 0, $_2_2_i62_i_i_i = 0, $614 = 0, $_2_3_i63_i_i_i = 0, $618 = 0, $_2_4_i64_i_i_i = 0, $622 = 0, $_2_5_i65_i_i_i = 0, $626 = 0, $_2_6_i66_i_i_i = 0, $630 = 0, $_2_7_i67_i_i_i = 0, $633 = 0, $636 = 0, $_09_lcssa_i8292_i_i_i = 0, $_09_lcssa_i_i_i_i = 0, $647 = 0, $655 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 39281
 STACKTOP = STACKTOP + 48 | 0; //@line 39281
 $buf_i_i_i_i = sp | 0; //@line 39282
 $buf_i_i_i = sp + 8 | 0; //@line 39283
 $buf_i_i = sp + 16 | 0; //@line 39284
 $buf_i = sp + 32 | 0; //@line 39285
 $1 = _psi_img_new() | 0; //@line 39286
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 39290
  STACKTOP = sp; //@line 39292
  return $_0 | 0; //@line 39293
 }
 $4 = $buf_i | 0; //@line 39295
 L17889 : do {
  if ((_psi_read($fp, $4, 12) | 0) == 0) {
   $8 = HEAP8[$4] | 0; //@line 39301
   if (($8 << 24 >> 24 | 0) == 116) {
    if ((HEAP8[$buf_i + 1 | 0] | 0) != 100) {
     break;
    }
    $14 = HEAP32[_stderr >> 2] | 0; //@line 39310
    _fwrite(56368, 40, 1, $14 | 0) | 0; //@line 39311
    break;
   } else if (($8 << 24 >> 24 | 0) != 84) {
    break;
   }
   if ((HEAP8[$buf_i + 1 | 0] | 0) != 68) {
    break;
   }
   if ((HEAP8[$buf_i + 2 | 0] | 0) != 0) {
    break;
   }
   if ((HEAPU8[$buf_i + 4 | 0] | 0) > 21) {
    break;
   }
   $30 = HEAP8[$buf_i + 5 | 0] | 0; //@line 39339
   $32 = HEAP8[$buf_i + 7 | 0] | 0; //@line 39341
   $33 = _psi_get_uint16_le($4, 10) | 0; //@line 39342
   $_0912_i_i = 0;
   $_013_i_i = 10;
   $tmp_014_i_i = $4;
   while (1) {
    $37 = HEAPU8[$tmp_014_i_i] << 8 ^ $_0912_i_i; //@line 39351
    $40 = $37 << 1; //@line 39354
    $_2_i_i = ($37 & 32768 | 0) == 0 ? $40 : $40 ^ 41111; //@line 39356
    $44 = $_2_i_i << 1; //@line 39359
    $_2_1_i_i = ($_2_i_i & 32768 | 0) == 0 ? $44 : $44 ^ 41111; //@line 39361
    $48 = $_2_1_i_i << 1; //@line 39364
    $_2_2_i_i = ($_2_1_i_i & 32768 | 0) == 0 ? $48 : $48 ^ 41111; //@line 39366
    $52 = $_2_2_i_i << 1; //@line 39369
    $_2_3_i_i = ($_2_2_i_i & 32768 | 0) == 0 ? $52 : $52 ^ 41111; //@line 39371
    $56 = $_2_3_i_i << 1; //@line 39374
    $_2_4_i_i = ($_2_3_i_i & 32768 | 0) == 0 ? $56 : $56 ^ 41111; //@line 39376
    $60 = $_2_4_i_i << 1; //@line 39379
    $_2_5_i_i = ($_2_4_i_i & 32768 | 0) == 0 ? $60 : $60 ^ 41111; //@line 39381
    $64 = $_2_5_i_i << 1; //@line 39384
    $_2_6_i_i = ($_2_5_i_i & 32768 | 0) == 0 ? $64 : $64 ^ 41111; //@line 39386
    $68 = $_2_6_i_i << 1; //@line 39389
    $_2_7_i_i = ($_2_6_i_i & 32768 | 0) == 0 ? $68 : $68 ^ 41111; //@line 39391
    $71 = $_013_i_i - 1 | 0; //@line 39393
    if (($71 | 0) == 0) {
     break;
    } else {
     $_0912_i_i = $_2_7_i_i;
     $_013_i_i = $71;
     $tmp_014_i_i = $tmp_014_i_i + 1 | 0;
    }
   }
   $73 = $30 & 255; //@line 39402
   $74 = $_2_7_i_i & 65535; //@line 39403
   if (($33 | 0) != ($74 | 0)) {
    $77 = HEAP32[_stderr >> 2] | 0; //@line 39407
    _fprintf($77 | 0, 49872, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $33, HEAP32[tempInt + 8 >> 2] = $74, tempInt) | 0) | 0; //@line 39408
    break;
   }
   $81 = $buf_i_i | 0; //@line 39413
   do {
    if ($32 << 24 >> 24 < 0) {
     if ((_psi_read($fp, $81, 10) | 0) != 0) {
      break L17889;
     }
     $86 = _psi_get_uint16_le($81, 0) | 0; //@line 39423
     $_0912_i_i_i = 0;
     $_013_i_i_i = 8;
     $tmp_014_i_i_i = $buf_i_i + 2 | 0;
     while (1) {
      $91 = HEAPU8[$tmp_014_i_i_i] << 8 ^ $_0912_i_i_i; //@line 39433
      $94 = $91 << 1; //@line 39436
      $_2_i_i10_i = ($91 & 32768 | 0) == 0 ? $94 : $94 ^ 41111; //@line 39438
      $98 = $_2_i_i10_i << 1; //@line 39441
      $_2_1_i_i11_i = ($_2_i_i10_i & 32768 | 0) == 0 ? $98 : $98 ^ 41111; //@line 39443
      $102 = $_2_1_i_i11_i << 1; //@line 39446
      $_2_2_i_i12_i = ($_2_1_i_i11_i & 32768 | 0) == 0 ? $102 : $102 ^ 41111; //@line 39448
      $106 = $_2_2_i_i12_i << 1; //@line 39451
      $_2_3_i_i13_i = ($_2_2_i_i12_i & 32768 | 0) == 0 ? $106 : $106 ^ 41111; //@line 39453
      $110 = $_2_3_i_i13_i << 1; //@line 39456
      $_2_4_i_i14_i = ($_2_3_i_i13_i & 32768 | 0) == 0 ? $110 : $110 ^ 41111; //@line 39458
      $114 = $_2_4_i_i14_i << 1; //@line 39461
      $_2_5_i_i15_i = ($_2_4_i_i14_i & 32768 | 0) == 0 ? $114 : $114 ^ 41111; //@line 39463
      $118 = $_2_5_i_i15_i << 1; //@line 39466
      $_2_6_i_i16_i = ($_2_5_i_i15_i & 32768 | 0) == 0 ? $118 : $118 ^ 41111; //@line 39468
      $122 = $_2_6_i_i16_i << 1; //@line 39471
      $_2_7_i_i17_i = ($_2_6_i_i16_i & 32768 | 0) == 0 ? $122 : $122 ^ 41111; //@line 39473
      $125 = $_013_i_i_i - 1 | 0; //@line 39475
      if (($125 | 0) == 0) {
       break;
      } else {
       $_0912_i_i_i = $_2_7_i_i17_i;
       $_013_i_i_i = $125;
       $tmp_014_i_i_i = $tmp_014_i_i_i + 1 | 0;
      }
     }
     $127 = $_2_7_i_i17_i & 65535; //@line 39484
     $128 = _psi_get_uint16_le($81, 2) | 0; //@line 39485
     if (($128 | 0) == 0) {
      $crc2_0_i_i = $127; //@line 39489
     } else {
      $131 = _malloc($128) | 0; //@line 39491
      if (($131 | 0) == 0) {
       break L17889;
      }
      if ((_psi_read($fp, $131, $128) | 0) == 0) {
       $_0912_i38_i_i = $127;
       $_013_i37_i_i = $128;
       $tmp_014_i36_i_i = $131;
      } else {
       _free($131); //@line 39503
       break L17889;
      }
      while (1) {
       $140 = HEAPU8[$tmp_014_i36_i_i] << 8 ^ $_0912_i38_i_i; //@line 39514
       $143 = $140 << 1; //@line 39517
       $_2_i39_i_i = ($140 & 32768 | 0) == 0 ? $143 : $143 ^ 41111; //@line 39519
       $147 = $_2_i39_i_i << 1; //@line 39522
       $_2_1_i40_i_i = ($_2_i39_i_i & 32768 | 0) == 0 ? $147 : $147 ^ 41111; //@line 39524
       $151 = $_2_1_i40_i_i << 1; //@line 39527
       $_2_2_i41_i_i = ($_2_1_i40_i_i & 32768 | 0) == 0 ? $151 : $151 ^ 41111; //@line 39529
       $155 = $_2_2_i41_i_i << 1; //@line 39532
       $_2_3_i42_i_i = ($_2_2_i41_i_i & 32768 | 0) == 0 ? $155 : $155 ^ 41111; //@line 39534
       $159 = $_2_3_i42_i_i << 1; //@line 39537
       $_2_4_i43_i_i = ($_2_3_i42_i_i & 32768 | 0) == 0 ? $159 : $159 ^ 41111; //@line 39539
       $163 = $_2_4_i43_i_i << 1; //@line 39542
       $_2_5_i44_i_i = ($_2_4_i43_i_i & 32768 | 0) == 0 ? $163 : $163 ^ 41111; //@line 39544
       $167 = $_2_5_i44_i_i << 1; //@line 39547
       $_2_6_i45_i_i = ($_2_5_i44_i_i & 32768 | 0) == 0 ? $167 : $167 ^ 41111; //@line 39549
       $171 = $_2_6_i45_i_i << 1; //@line 39552
       $_2_7_i46_i_i = ($_2_6_i45_i_i & 32768 | 0) == 0 ? $171 : $171 ^ 41111; //@line 39554
       $174 = $_013_i37_i_i - 1 | 0; //@line 39556
       if (($174 | 0) == 0) {
        break;
       } else {
        $_0912_i38_i_i = $_2_7_i46_i_i;
        $_013_i37_i_i = $174;
        $tmp_014_i36_i_i = $tmp_014_i36_i_i + 1 | 0;
       }
      }
      $176 = $_2_7_i46_i_i & 65535; //@line 39565
      $i_0_i_i = 0; //@line 39567
      while (1) {
       if ($i_0_i_i >>> 0 >= $128 >>> 0) {
        $j_0_i_i = $128; //@line 39573
        break;
       }
       if ((HEAP8[$131 + $i_0_i_i | 0] | 0) == 0) {
        $i_0_i_i = $i_0_i_i + 1 | 0; //@line 39581
       } else {
        $j_0_i_i = $128; //@line 39583
        break;
       }
      }
      while (1) {
       if ($i_0_i_i >>> 0 >= $j_0_i_i >>> 0) {
        break;
       }
       $186 = $j_0_i_i - 1 | 0; //@line 39594
       if ((HEAP8[$131 + $186 | 0] | 0) == 0) {
        $j_0_i_i = $186; //@line 39599
       } else {
        $k_049_i_i = $i_0_i_i; //@line 39601
        label = 14095; //@line 39602
        break;
       }
      }
      if ((label | 0) == 14095) {
       while (1) {
        label = 0; //@line 39608
        $190 = $131 + $k_049_i_i | 0; //@line 39610
        if ((HEAP8[$190] | 0) == 0) {
         HEAP8[$190] = 10; //@line 39615
        }
        $194 = $k_049_i_i + 1 | 0; //@line 39618
        if ($194 >>> 0 < $j_0_i_i >>> 0) {
         $k_049_i_i = $194; //@line 39622
         label = 14095; //@line 39623
        } else {
         break;
        }
       }
      }
      _psi_img_set_comment($1, $131 + $i_0_i_i | 0, $j_0_i_i - $i_0_i_i | 0) | 0; //@line 39631
      _free($131); //@line 39632
      _psi_img_clean_comment($1); //@line 39633
      $crc2_0_i_i = $176; //@line 39635
     }
     if (($86 | 0) == ($crc2_0_i_i | 0)) {
      break;
     }
     _fprintf(HEAP32[_stderr >> 2] | 0, 57192, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $86, HEAP32[tempInt + 8 >> 2] = $crc2_0_i_i, tempInt) | 0) | 0; //@line 39644
     break L17889;
    }
   } while (0);
   if ((_psi_read($fp, $81, 1) | 0) != 0) {
    break;
   }
   $206 = $buf_i_i + 1 | 0; //@line 39655
   $207 = $buf_i_i + 3 | 0; //@line 39656
   $208 = $73 | 128; //@line 39657
   $209 = $buf_i_i_i | 0; //@line 39658
   $210 = $buf_i_i_i + 2 | 0; //@line 39659
   $211 = $buf_i_i_i + 3 | 0; //@line 39660
   $212 = $buf_i_i_i + 4 | 0; //@line 39661
   $213 = $buf_i_i_i + 1 | 0; //@line 39662
   $214 = $buf_i_i_i + 5 | 0; //@line 39663
   $215 = $buf_i_i_i_i | 0; //@line 39664
   $216 = $buf_i_i_i_i + 2 | 0; //@line 39665
   $217 = $buf_i_i_i_i + 3 | 0; //@line 39666
   $218 = $buf_i_i_i_i + 1 | 0; //@line 39667
   $219 = HEAP32[_stderr >> 2] | 0; //@line 39668
   $220 = $buf_i_i + 2 | 0; //@line 39669
   L17935 : while (1) {
    if ((HEAP8[$81] | 0) == -1) {
     $_0 = $1; //@line 39676
     label = 14171; //@line 39677
     break;
    }
    if ((_psi_read($fp, $206, 3) | 0) != 0) {
     break L17889;
    }
    $229 = HEAP8[$81] | 0; //@line 39686
    $230 = $229 & 255; //@line 39687
    $233 = $230 << 9; //@line 39690
    $_2_i_i_i = ($230 & 128 | 0) == 0 ? $233 : $233 ^ 41111; //@line 39692
    $237 = $_2_i_i_i << 1; //@line 39695
    $_2_1_i_i_i = ($_2_i_i_i & 32768 | 0) == 0 ? $237 : $237 ^ 41111; //@line 39697
    $241 = $_2_1_i_i_i << 1; //@line 39700
    $_2_2_i_i_i = ($_2_1_i_i_i & 32768 | 0) == 0 ? $241 : $241 ^ 41111; //@line 39702
    $245 = $_2_2_i_i_i << 1; //@line 39705
    $_2_3_i_i_i = ($_2_2_i_i_i & 32768 | 0) == 0 ? $245 : $245 ^ 41111; //@line 39707
    $249 = $_2_3_i_i_i << 1; //@line 39710
    $_2_4_i_i_i = ($_2_3_i_i_i & 32768 | 0) == 0 ? $249 : $249 ^ 41111; //@line 39712
    $253 = $_2_4_i_i_i << 1; //@line 39715
    $_2_5_i_i_i = ($_2_4_i_i_i & 32768 | 0) == 0 ? $253 : $253 ^ 41111; //@line 39717
    $257 = $_2_5_i_i_i << 1; //@line 39720
    $_2_6_i_i_i = ($_2_5_i_i_i & 32768 | 0) == 0 ? $257 : $257 ^ 41111; //@line 39722
    $261 = $_2_6_i_i_i << 1; //@line 39725
    $264 = HEAPU8[$206] | 0; //@line 39729
    $266 = (($_2_6_i_i_i & 32768 | 0) == 0 ? $261 : $261 ^ 41111) ^ $264 << 8; //@line 39731
    $269 = $266 << 1; //@line 39734
    $_2_i_1_i_i = ($266 & 32768 | 0) == 0 ? $269 : $269 ^ 41111; //@line 39736
    $273 = $_2_i_1_i_i << 1; //@line 39739
    $_2_1_i_1_i_i = ($_2_i_1_i_i & 32768 | 0) == 0 ? $273 : $273 ^ 41111; //@line 39741
    $277 = $_2_1_i_1_i_i << 1; //@line 39744
    $_2_2_i_1_i_i = ($_2_1_i_1_i_i & 32768 | 0) == 0 ? $277 : $277 ^ 41111; //@line 39746
    $281 = $_2_2_i_1_i_i << 1; //@line 39749
    $_2_3_i_1_i_i = ($_2_2_i_1_i_i & 32768 | 0) == 0 ? $281 : $281 ^ 41111; //@line 39751
    $285 = $_2_3_i_1_i_i << 1; //@line 39754
    $_2_4_i_1_i_i = ($_2_3_i_1_i_i & 32768 | 0) == 0 ? $285 : $285 ^ 41111; //@line 39756
    $289 = $_2_4_i_1_i_i << 1; //@line 39759
    $_2_5_i_1_i_i = ($_2_4_i_1_i_i & 32768 | 0) == 0 ? $289 : $289 ^ 41111; //@line 39761
    $293 = $_2_5_i_1_i_i << 1; //@line 39764
    $_2_6_i_1_i_i = ($_2_5_i_1_i_i & 32768 | 0) == 0 ? $293 : $293 ^ 41111; //@line 39766
    $297 = $_2_6_i_1_i_i << 1; //@line 39769
    $300 = HEAPU8[$220] | 0; //@line 39773
    $302 = (($_2_6_i_1_i_i & 32768 | 0) == 0 ? $297 : $297 ^ 41111) ^ $300 << 8; //@line 39775
    $305 = $302 << 1; //@line 39778
    $_2_i_2_i_i = ($302 & 32768 | 0) == 0 ? $305 : $305 ^ 41111; //@line 39780
    $309 = $_2_i_2_i_i << 1; //@line 39783
    $_2_1_i_2_i_i = ($_2_i_2_i_i & 32768 | 0) == 0 ? $309 : $309 ^ 41111; //@line 39785
    $313 = $_2_1_i_2_i_i << 1; //@line 39788
    $_2_2_i_2_i_i = ($_2_1_i_2_i_i & 32768 | 0) == 0 ? $313 : $313 ^ 41111; //@line 39790
    $317 = $_2_2_i_2_i_i << 1; //@line 39793
    $_2_3_i_2_i_i = ($_2_2_i_2_i_i & 32768 | 0) == 0 ? $317 : $317 ^ 41111; //@line 39795
    $321 = $_2_3_i_2_i_i << 1; //@line 39798
    $_2_4_i_2_i_i = ($_2_3_i_2_i_i & 32768 | 0) == 0 ? $321 : $321 ^ 41111; //@line 39800
    $325 = $_2_4_i_2_i_i << 1; //@line 39803
    $_2_5_i_2_i_i = ($_2_4_i_2_i_i & 32768 | 0) == 0 ? $325 : $325 ^ 41111; //@line 39805
    $329 = $_2_5_i_2_i_i << 1; //@line 39808
    $_2_6_i_2_i_i = ($_2_5_i_2_i_i & 32768 | 0) == 0 ? $329 : $329 ^ 41111; //@line 39810
    $333 = $_2_6_i_2_i_i << 1; //@line 39813
    $_2_7_i_2_i_i = ($_2_6_i_2_i_i & 32768 | 0) == 0 ? $333 : $333 ^ 41111; //@line 39815
    $336 = HEAPU8[$207] | 0; //@line 39817
    if (($336 | 0) != ($_2_7_i_2_i_i & 255 | 0)) {
     label = 14107; //@line 39822
     break;
    }
    $343 = $300 & 127; //@line 39825
    $dr__i_i = ($300 & 128 | 0) == 0 ? $73 : $208; //@line 39828
    if ($229 << 24 >> 24 != 0) {
     $348 = 2 - ($dr__i_i >>> 7) | 0; //@line 39833
     $enc_0_i_i_i_i = ($dr__i_i & 127 | 0) == 2 ? $348 | 32768 : $348; //@line 39837
     $i_036_i_i = 0; //@line 39839
     do {
      if ((_psi_read($fp, $209, 6) | 0) != 0) {
       break L17889;
      }
      $357 = HEAPU8[$210] | 0; //@line 39849
      $358 = HEAP8[$211] | 0; //@line 39850
      $360 = HEAPU8[$212] | 0; //@line 39852
      $365 = ($358 & 255) < 7; //@line 39857
      if ($365) {
       $370 = 128 << ($358 & 255); //@line 39863
      } else {
       $370 = 0; //@line 39865
      }
      $371 = _psi_sct_new(HEAPU8[$209] | 0, HEAPU8[$213] | 0, $357, $370) | 0; //@line 39868
      if (($371 | 0) == 0) {
       break L17889;
      }
      _psi_sct_set_mfm_size($371, HEAP8[$211] | 0); //@line 39875
      if ((_psi_img_add_sector($1, $371, $264, $343) | 0) != 0) {
       label = 14115; //@line 39880
       break L17935;
      }
      _psi_sct_set_encoding($371, $enc_0_i_i_i_i); //@line 39883
      if (($360 & 2 | 0) != 0) {
       _psi_sct_set_flags($371, 2, 1); //@line 39888
      }
      if (($360 & 4 | 0) != 0) {
       _psi_sct_set_flags($371, 4, 1); //@line 39895
      }
      $387 = HEAP8[$214] | 0; //@line 39898
      $_0912_i_i_i_i = 0;
      $_013_i_i_i_i = 5;
      $tmp_014_i_i_i_i = $209;
      while (1) {
       $391 = HEAPU8[$tmp_014_i_i_i_i] << 8 ^ $_0912_i_i_i_i; //@line 39907
       $394 = $391 << 1; //@line 39910
       $_2_i_i_i_i = ($391 & 32768 | 0) == 0 ? $394 : $394 ^ 41111; //@line 39912
       $398 = $_2_i_i_i_i << 1; //@line 39915
       $_2_1_i_i_i_i = ($_2_i_i_i_i & 32768 | 0) == 0 ? $398 : $398 ^ 41111; //@line 39917
       $402 = $_2_1_i_i_i_i << 1; //@line 39920
       $_2_2_i_i_i_i = ($_2_1_i_i_i_i & 32768 | 0) == 0 ? $402 : $402 ^ 41111; //@line 39922
       $406 = $_2_2_i_i_i_i << 1; //@line 39925
       $_2_3_i_i_i_i = ($_2_2_i_i_i_i & 32768 | 0) == 0 ? $406 : $406 ^ 41111; //@line 39927
       $410 = $_2_3_i_i_i_i << 1; //@line 39930
       $_2_4_i_i_i_i = ($_2_3_i_i_i_i & 32768 | 0) == 0 ? $410 : $410 ^ 41111; //@line 39932
       $414 = $_2_4_i_i_i_i << 1; //@line 39935
       $_2_5_i_i_i_i = ($_2_4_i_i_i_i & 32768 | 0) == 0 ? $414 : $414 ^ 41111; //@line 39937
       $418 = $_2_5_i_i_i_i << 1; //@line 39940
       $_2_6_i_i_i_i = ($_2_5_i_i_i_i & 32768 | 0) == 0 ? $418 : $418 ^ 41111; //@line 39942
       $422 = $_2_6_i_i_i_i << 1; //@line 39945
       $_2_7_i_i_i_i = ($_2_6_i_i_i_i & 32768 | 0) == 0 ? $422 : $422 ^ 41111; //@line 39947
       $425 = $_013_i_i_i_i - 1 | 0; //@line 39949
       if (($425 | 0) == 0) {
        break;
       } else {
        $_0912_i_i_i_i = $_2_7_i_i_i_i;
        $_013_i_i_i_i = $425;
        $tmp_014_i_i_i_i = $tmp_014_i_i_i_i + 1 | 0;
       }
      }
      $427 = $387 & 255; //@line 39958
      $428 = $_2_7_i_i_i_i & 65535; //@line 39959
      do {
       if (($360 & 48 | 0) == 0) {
        do {
         if ($365) {
          if ((_psi_read($fp, $209, 3) | 0) != 0) {
           break L17889;
          }
          $448 = _psi_get_uint16_le($209, 0) | 0; //@line 39974
          if (($448 | 0) == 0) {
           label = 14130; //@line 39978
           break L17935;
          }
          $453 = $448 - 1 | 0; //@line 39981
          $454 = HEAP8[$210] | 0; //@line 39982
          if (($454 << 24 >> 24 | 0) == 0) {
           $456 = $371 + 10 | 0; //@line 39984
           if ((HEAPU16[$456 >> 1] | 0) != ($453 | 0)) {
            break L17889;
           }
           if ((_psi_read($fp, HEAP32[$371 + 24 >> 2] | 0, $453) | 0) == 0) {
            $_pre_phi_i = $456; //@line 39998
            break;
           } else {
            label = 14134; //@line 40001
            break L17935;
           }
          } else if (($454 << 24 >> 24 | 0) == 2) {
           $_pre_i_i_i_i = $371 + 10 | 0; //@line 40006
           if (($453 | 0) == 0) {
            $idx_0_lcssa_i_i_i_i = 0; //@line 40009
           } else {
            $494 = $371 + 24 | 0; //@line 40011
            $_036_i_i_i_i = $453;
            $idx_037_i_i_i_i = 0;
            while (1) {
             if ($_036_i_i_i_i >>> 0 < 2) {
              break L17889;
             }
             if ((_psi_read($fp, $215, 2) | 0) != 0) {
              break L17889;
             }
             $501 = $_036_i_i_i_i - 2 | 0; //@line 40028
             $502 = HEAP8[$215] | 0; //@line 40029
             do {
              if (($502 << 24 >> 24 | 0) == 1) {
               $521 = HEAP8[$218] | 0; //@line 40032
               $522 = $521 & 255; //@line 40033
               if ($501 >>> 0 < 2) {
                break L17889;
               }
               $526 = ($522 << 1) + $idx_037_i_i_i_i | 0; //@line 40040
               if ($526 >>> 0 > (HEAPU16[$_pre_i_i_i_i >> 1] | 0) >>> 0) {
                break L17889;
               }
               if ((_psi_read($fp, $216, 2) | 0) != 0) {
                break L17889;
               }
               $534 = $_036_i_i_i_i - 4 | 0; //@line 40054
               if ($521 << 24 >> 24 == 0) {
                $idx_0_be_i_i_i_i = $idx_037_i_i_i_i;
                $_0_be_i_i_i_i = $534;
                break;
               } else {
                $idx_132_i_i_i_i = $idx_037_i_i_i_i;
                $rep_033_i_i_i_i = $522;
               }
               while (1) {
                HEAP8[(HEAP32[$494 >> 2] | 0) + $idx_132_i_i_i_i | 0] = HEAP8[$216] | 0; //@line 40069
                HEAP8[(HEAP32[$494 >> 2] | 0) + ($idx_132_i_i_i_i + 1) | 0] = HEAP8[$217] | 0; //@line 40074
                $544 = $rep_033_i_i_i_i - 1 | 0; //@line 40076
                if (($544 | 0) == 0) {
                 $idx_0_be_i_i_i_i = $526;
                 $_0_be_i_i_i_i = $534;
                 break;
                } else {
                 $idx_132_i_i_i_i = $idx_132_i_i_i_i + 2 | 0;
                 $rep_033_i_i_i_i = $544;
                }
               }
              } else if (($502 << 24 >> 24 | 0) == 0) {
               $505 = HEAPU8[$218] | 0; //@line 40088
               if ($505 >>> 0 > $501 >>> 0) {
                break L17889;
               }
               $508 = $505 + $idx_037_i_i_i_i | 0; //@line 40094
               if ($508 >>> 0 > (HEAPU16[$_pre_i_i_i_i >> 1] | 0) >>> 0) {
                break L17889;
               }
               if ((_psi_read($fp, (HEAP32[$494 >> 2] | 0) + $idx_037_i_i_i_i | 0, $505) | 0) != 0) {
                break L17889;
               }
               $idx_0_be_i_i_i_i = $508;
               $_0_be_i_i_i_i = $501 - $505 | 0;
              } else {
               break L17889;
              }
             } while (0);
             if (($_0_be_i_i_i_i | 0) == 0) {
              $idx_0_lcssa_i_i_i_i = $idx_0_be_i_i_i_i; //@line 40122
              break;
             } else {
              $_036_i_i_i_i = $_0_be_i_i_i_i;
              $idx_037_i_i_i_i = $idx_0_be_i_i_i_i;
             }
            }
           }
           if ($idx_0_lcssa_i_i_i_i >>> 0 < (HEAPU16[$_pre_i_i_i_i >> 1] | 0) >>> 0) {
            break L17889;
           } else {
            $_pre_phi_i = $_pre_i_i_i_i; //@line 40137
            break;
           }
          } else if (($454 << 24 >> 24 | 0) == 1) {
           if (($453 | 0) != 4) {
            break L17889;
           }
           if ((_psi_read($fp, $215, 4) | 0) != 0) {
            break L17889;
           }
           $473 = _psi_get_uint16_le($215, 0) | 0; //@line 40152
           $475 = $371 + 10 | 0; //@line 40154
           if (($473 << 1 | 0) != (HEAPU16[$475 >> 1] | 0)) {
            break L17889;
           }
           if (($473 | 0) == 0) {
            $_pre_phi_i = $475; //@line 40165
            break;
           }
           $480 = $371 + 24 | 0; //@line 40168
           $i_010_i_i_i_i = 0; //@line 40170
           while (1) {
            $483 = $i_010_i_i_i_i << 1; //@line 40174
            HEAP8[(HEAP32[$480 >> 2] | 0) + $483 | 0] = HEAP8[$216] | 0; //@line 40177
            HEAP8[(HEAP32[$480 >> 2] | 0) + ($483 | 1) | 0] = HEAP8[$217] | 0; //@line 40182
            $490 = $i_010_i_i_i_i + 1 | 0; //@line 40183
            if ($490 >>> 0 < $473 >>> 0) {
             $i_010_i_i_i_i = $490; //@line 40187
            } else {
             $_pre_phi_i = $475; //@line 40189
             break;
            }
           }
          } else {
           label = 14157; //@line 40194
           break L17935;
          }
         } else {
          $_pre_phi_i = $371 + 10 | 0; //@line 40200
         }
        } while (0);
        $552 = HEAP16[$_pre_phi_i >> 1] | 0; //@line 40204
        if ($552 << 16 >> 16 == 0) {
         $_09_lcssa_i_i_i_i = 0;
         $_09_lcssa_i8292_i_i_i = $428;
         $636 = $428;
        } else {
         $555 = $552 & 65535; //@line 40211
         $556 = HEAP32[$371 + 24 >> 2] | 0; //@line 40212
         $_0912_i72_i_i_i = $428;
         $_013_i71_i_i_i = $555;
         $tmp_014_i70_i_i_i = $556;
         while (1) {
          $560 = HEAPU8[$tmp_014_i70_i_i_i] << 8 ^ $_0912_i72_i_i_i; //@line 40222
          $563 = $560 << 1; //@line 40225
          $_2_i73_i_i_i = ($560 & 32768 | 0) == 0 ? $563 : $563 ^ 41111; //@line 40227
          $567 = $_2_i73_i_i_i << 1; //@line 40230
          $_2_1_i74_i_i_i = ($_2_i73_i_i_i & 32768 | 0) == 0 ? $567 : $567 ^ 41111; //@line 40232
          $571 = $_2_1_i74_i_i_i << 1; //@line 40235
          $_2_2_i75_i_i_i = ($_2_1_i74_i_i_i & 32768 | 0) == 0 ? $571 : $571 ^ 41111; //@line 40237
          $575 = $_2_2_i75_i_i_i << 1; //@line 40240
          $_2_3_i76_i_i_i = ($_2_2_i75_i_i_i & 32768 | 0) == 0 ? $575 : $575 ^ 41111; //@line 40242
          $579 = $_2_3_i76_i_i_i << 1; //@line 40245
          $_2_4_i77_i_i_i = ($_2_3_i76_i_i_i & 32768 | 0) == 0 ? $579 : $579 ^ 41111; //@line 40247
          $583 = $_2_4_i77_i_i_i << 1; //@line 40250
          $_2_5_i78_i_i_i = ($_2_4_i77_i_i_i & 32768 | 0) == 0 ? $583 : $583 ^ 41111; //@line 40252
          $587 = $_2_5_i78_i_i_i << 1; //@line 40255
          $_2_6_i79_i_i_i = ($_2_5_i78_i_i_i & 32768 | 0) == 0 ? $587 : $587 ^ 41111; //@line 40257
          $591 = $_2_6_i79_i_i_i << 1; //@line 40260
          $_2_7_i80_i_i_i = ($_2_6_i79_i_i_i & 32768 | 0) == 0 ? $591 : $591 ^ 41111; //@line 40262
          $594 = $_013_i71_i_i_i - 1 | 0; //@line 40264
          if (($594 | 0) == 0) {
           $_0912_i59_i_i_i = 0;
           $_013_i58_i_i_i = $555;
           $tmp_014_i57_i_i_i = $556;
           break;
          } else {
           $_0912_i72_i_i_i = $_2_7_i80_i_i_i;
           $_013_i71_i_i_i = $594;
           $tmp_014_i70_i_i_i = $tmp_014_i70_i_i_i + 1 | 0;
          }
         }
         while (1) {
          $599 = HEAPU8[$tmp_014_i57_i_i_i] << 8 ^ $_0912_i59_i_i_i; //@line 40281
          $602 = $599 << 1; //@line 40284
          $_2_i60_i_i_i = ($599 & 32768 | 0) == 0 ? $602 : $602 ^ 41111; //@line 40286
          $606 = $_2_i60_i_i_i << 1; //@line 40289
          $_2_1_i61_i_i_i = ($_2_i60_i_i_i & 32768 | 0) == 0 ? $606 : $606 ^ 41111; //@line 40291
          $610 = $_2_1_i61_i_i_i << 1; //@line 40294
          $_2_2_i62_i_i_i = ($_2_1_i61_i_i_i & 32768 | 0) == 0 ? $610 : $610 ^ 41111; //@line 40296
          $614 = $_2_2_i62_i_i_i << 1; //@line 40299
          $_2_3_i63_i_i_i = ($_2_2_i62_i_i_i & 32768 | 0) == 0 ? $614 : $614 ^ 41111; //@line 40301
          $618 = $_2_3_i63_i_i_i << 1; //@line 40304
          $_2_4_i64_i_i_i = ($_2_3_i63_i_i_i & 32768 | 0) == 0 ? $618 : $618 ^ 41111; //@line 40306
          $622 = $_2_4_i64_i_i_i << 1; //@line 40309
          $_2_5_i65_i_i_i = ($_2_4_i64_i_i_i & 32768 | 0) == 0 ? $622 : $622 ^ 41111; //@line 40311
          $626 = $_2_5_i65_i_i_i << 1; //@line 40314
          $_2_6_i66_i_i_i = ($_2_5_i65_i_i_i & 32768 | 0) == 0 ? $626 : $626 ^ 41111; //@line 40316
          $630 = $_2_6_i66_i_i_i << 1; //@line 40319
          $_2_7_i67_i_i_i = ($_2_6_i66_i_i_i & 32768 | 0) == 0 ? $630 : $630 ^ 41111; //@line 40321
          $633 = $_013_i58_i_i_i - 1 | 0; //@line 40323
          if (($633 | 0) == 0) {
           break;
          } else {
           $_0912_i59_i_i_i = $_2_7_i67_i_i_i;
           $_013_i58_i_i_i = $633;
           $tmp_014_i57_i_i_i = $tmp_014_i57_i_i_i + 1 | 0;
          }
         }
         $_09_lcssa_i_i_i_i = $_2_7_i67_i_i_i;
         $_09_lcssa_i8292_i_i_i = $_2_7_i80_i_i_i;
         $636 = $_2_7_i80_i_i_i & 65535;
        }
        if (($427 | 0) != ($_09_lcssa_i_i_i_i & 255 | 0)) {
         _fwrite(33568, 33, 1, $219 | 0) | 0; //@line 40342
         if (($427 | 0) != ($_09_lcssa_i8292_i_i_i & 255 | 0)) {
          label = 14165; //@line 40347
          break L17935;
         }
        }
        if (($360 & 64 | 0) == 0) {
         break;
        }
        $655 = HEAPU16[$371 + 8 >> 1] | 0; //@line 40359
        _fprintf($219 | 0, 30808, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = $264, HEAP32[tempInt + 8 >> 2] = $343, HEAP32[tempInt + 16 >> 2] = $655, tempInt) | 0) | 0; //@line 40360
        _psi_img_remove_sector($1, $371); //@line 40361
        _psi_sct_del($371); //@line 40362
       } else {
        if (($427 | 0) != ($_2_7_i_i_i_i & 255 | 0)) {
         label = 14124; //@line 40369
         break L17935;
        }
        _psi_sct_fill($371, ($360 & 16 | 0) != 0 ? 246 : 0); //@line 40375
       }
      } while (0);
      $i_036_i_i = $i_036_i_i + 1 | 0; //@line 40379
     } while ($i_036_i_i >>> 0 < $230 >>> 0);
    }
    if ((_psi_read($fp, $81, 1) | 0) != 0) {
     break L17889;
    }
   }
   if ((label | 0) == 14124) {
    $437 = HEAPU16[$371 + 8 >> 1] | 0; //@line 40399
    _fprintf($219 | 0, 42600, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = $264, HEAP32[tempInt + 8 >> 2] = $343, HEAP32[tempInt + 16 >> 2] = $437, tempInt) | 0) | 0; //@line 40400
    break;
   } else if ((label | 0) == 14115) {
    _psi_sct_del($371); //@line 40405
    break;
   } else if ((label | 0) == 14130) {
    _fprintf($219 | 0, 39496, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = $264, HEAP32[tempInt + 8 >> 2] = $343, HEAP32[tempInt + 16 >> 2] = $357, tempInt) | 0) | 0; //@line 40410
    break;
   } else if ((label | 0) == 14165) {
    $647 = HEAPU16[$371 + 8 >> 1] | 0; //@line 40418
    _fprintf($219 | 0, 31752, (tempInt = STACKTOP, STACKTOP = STACKTOP + 48 | 0, HEAP32[tempInt >> 2] = $264, HEAP32[tempInt + 8 >> 2] = $343, HEAP32[tempInt + 16 >> 2] = $647, HEAP32[tempInt + 24 >> 2] = $427, HEAP32[tempInt + 32 >> 2] = $_09_lcssa_i_i_i_i & 65535, HEAP32[tempInt + 40 >> 2] = $636, tempInt) | 0) | 0; //@line 40419
    break;
   } else if ((label | 0) == 14171) {
    STACKTOP = sp; //@line 40425
    return $_0 | 0; //@line 40426
   } else if ((label | 0) == 14157) {
    _fprintf($219 | 0, 36544, (tempInt = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempInt >> 2] = $264, HEAP32[tempInt + 8 >> 2] = $343, HEAP32[tempInt + 16 >> 2] = $357, HEAP32[tempInt + 24 >> 2] = $454 & 255, tempInt) | 0) | 0; //@line 40430
    break;
   } else if ((label | 0) == 14134) {
    _fwrite(57976, 16, 1, $219 | 0) | 0; //@line 40435
    break;
   } else if ((label | 0) == 14107) {
    _fprintf($219 | 0, 46048, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $336, HEAP32[tempInt + 8 >> 2] = $_2_7_i_2_i_i & 65535, tempInt) | 0) | 0; //@line 40441
    break;
   }
  }
 } while (0);
 _psi_img_del($1); //@line 40447
 $_0 = 0; //@line 40449
 STACKTOP = sp; //@line 40451
 return $_0 | 0; //@line 40452
}
function _psi_save_td0($fp, $img) {
 $fp = $fp | 0;
 $img = $img | 0;
 var $buf_i36 = 0, $t_i = 0, $buf_i = 0, $buf = 0, $1 = 0, $2 = 0, $3 = 0, $6 = 0, $7 = 0, $c_037_i = 0, $enc_036_i = 0, $sn_035_i = 0, $hn_034_i = 0, $10 = 0, $12 = 0, $13 = 0, $_hn_0_i = 0, $17 = 0, $h_028_i = 0, $enc_127_i = 0, $sn_126_i = 0, $20 = 0, $22 = 0, $23 = 0, $_sn_1_i = 0, $26 = 0, $s_025_i = 0, $enc_224_i = 0, $enc_3_i = 0, $37 = 0, $enc_2_lcssa_i = 0, $39 = 0, $enc_1_lcssa_i = 0, $sn_1_lcssa_i = 0, $41 = 0, $extract_t_i = 0, $hn_0_lcssa_off049_i = 0, $sn_0_lcssa47_i = 0, $hn_0_lcssa_off048_i = 0, $sn_0_lcssa46_i = 0, $enc_4_off0_i = 0, $dt_0_off0_i = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $67 = 0, $tmp_014_i_i = 0, $_013_i_i = 0, $_0912_i_i = 0, $68 = 0, $71 = 0, $_2_i_i = 0, $75 = 0, $_2_1_i_i = 0, $79 = 0, $_2_2_i_i = 0, $83 = 0, $_2_3_i_i = 0, $87 = 0, $_2_4_i_i = 0, $91 = 0, $_2_5_i_i = 0, $95 = 0, $_2_6_i_i = 0, $99 = 0, $_2_7_i_i = 0, $101 = 0, $106 = 0, $__i19 = 0, $112 = 0, $131 = 0, $133 = 0, $_pre_i20 = 0, $i_042_i = 0, $137 = 0, $140 = 0, $tmp_014_i_i23 = 0, $_013_i_i24 = 0, $_0912_i_i25 = 0, $145 = 0, $148 = 0, $_2_i_i26 = 0, $152 = 0, $_2_1_i_i27 = 0, $156 = 0, $_2_2_i_i28 = 0, $160 = 0, $_2_3_i_i29 = 0, $164 = 0, $_2_4_i_i30 = 0, $168 = 0, $_2_5_i_i31 = 0, $172 = 0, $_2_6_i_i32 = 0, $176 = 0, $_2_7_i_i33 = 0, $179 = 0, $181 = 0, $tmp_014_i28_i = 0, $_013_i29_i = 0, $_0912_i30_i = 0, $185 = 0, $188 = 0, $_2_i31_i = 0, $192 = 0, $_2_1_i32_i = 0, $196 = 0, $_2_2_i33_i = 0, $200 = 0, $_2_3_i34_i = 0, $204 = 0, $_2_4_i35_i = 0, $208 = 0, $_2_5_i36_i = 0, $212 = 0, $_2_6_i37_i = 0, $216 = 0, $_2_7_i38_i = 0, $218 = 0, $_09_lcssa_i_i = 0, $225 = 0, $226 = 0, $228 = 0, $229 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $c_055 = 0, $236 = 0, $237 = 0, $240 = 0, $241 = 0, $243 = 0, $h_054 = 0, $247 = 0, $248 = 0, $249 = 0, $252 = 0, $255 = 0, $_2_i_i37 = 0, $259 = 0, $_2_1_i_i38 = 0, $263 = 0, $_2_2_i_i39 = 0, $267 = 0, $_2_3_i_i40 = 0, $271 = 0, $_2_4_i_i41 = 0, $275 = 0, $_2_5_i_i42 = 0, $279 = 0, $_2_6_i_i43 = 0, $283 = 0, $285 = 0, $288 = 0, $_2_i_1_i = 0, $292 = 0, $_2_1_i_1_i = 0, $296 = 0, $_2_2_i_1_i = 0, $300 = 0, $_2_3_i_1_i = 0, $304 = 0, $_2_4_i_1_i = 0, $308 = 0, $_2_5_i_1_i = 0, $312 = 0, $_2_6_i_1_i = 0, $316 = 0, $320 = 0, $323 = 0, $_2_i_2_i = 0, $327 = 0, $_2_1_i_2_i = 0, $331 = 0, $_2_2_i_2_i = 0, $335 = 0, $_2_3_i_2_i = 0, $339 = 0, $_2_4_i_2_i = 0, $343 = 0, $_2_5_i_2_i = 0, $347 = 0, $_2_6_i_2_i = 0, $351 = 0, $356 = 0, $s_014_i = 0, $361 = 0, $362 = 0, $364 = 0, $381 = 0, $386 = 0, $391 = 0, $392 = 0, $tmp_014_i_i_i = 0, $_013_i_i_i = 0, $_0912_i_i_i = 0, $399 = 0, $402 = 0, $_2_i_i_i = 0, $406 = 0, $_2_1_i_i_i = 0, $410 = 0, $_2_2_i_i_i = 0, $414 = 0, $_2_3_i_i_i = 0, $418 = 0, $_2_4_i_i_i = 0, $422 = 0, $_2_5_i_i_i = 0, $426 = 0, $_2_6_i_i_i = 0, $430 = 0, $_2_7_i_i_i = 0, $433 = 0, $_09_lcssa_i_off0_i_i = 0, $441 = 0, $_pre_i_i = 0, $i_0_i_i = 0, $447 = 0, $458 = 0, $483 = 0, $484 = 0, $487 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 40533
 STACKTOP = STACKTOP + 40 | 0; //@line 40533
 $buf_i36 = sp | 0; //@line 40534
 $t_i = sp + 8 | 0; //@line 40535
 $buf_i = sp + 16 | 0; //@line 40536
 $buf = sp + 32 | 0; //@line 40537
 $1 = $buf_i | 0; //@line 40538
 $2 = $img | 0; //@line 40539
 $3 = HEAP16[$2 >> 1] | 0; //@line 40540
 do {
  if ($3 << 16 >> 16 == 0) {
   $sn_0_lcssa47_i = 0;
   $hn_0_lcssa_off049_i = 0;
   label = 14189; //@line 40546
  } else {
   $6 = HEAP32[$img + 4 >> 2] | 0; //@line 40549
   $7 = $3 & 65535; //@line 40550
   $hn_034_i = 0;
   $sn_035_i = 0;
   $enc_036_i = 0;
   $c_037_i = 0;
   while (1) {
    $10 = HEAP32[$6 + ($c_037_i << 2) >> 2] | 0; //@line 40559
    $12 = HEAP16[$10 + 2 >> 1] | 0; //@line 40561
    $13 = $12 & 65535; //@line 40562
    $_hn_0_i = $13 >>> 0 > $hn_034_i >>> 0 ? $13 : $hn_034_i; //@line 40564
    if ($12 << 16 >> 16 == 0) {
     $sn_1_lcssa_i = $sn_035_i;
     $enc_1_lcssa_i = $enc_036_i;
    } else {
     $17 = HEAP32[$10 + 4 >> 2] | 0; //@line 40571
     $sn_126_i = $sn_035_i;
     $enc_127_i = $enc_036_i;
     $h_028_i = 0;
     while (1) {
      $20 = HEAP32[$17 + ($h_028_i << 2) >> 2] | 0; //@line 40579
      $22 = HEAP16[$20 + 2 >> 1] | 0; //@line 40581
      $23 = $22 & 65535; //@line 40582
      $_sn_1_i = $23 >>> 0 > $sn_126_i >>> 0 ? $23 : $sn_126_i; //@line 40584
      if ($22 << 16 >> 16 == 0) {
       $enc_2_lcssa_i = $enc_127_i; //@line 40588
      } else {
       $26 = $20 + 4 | 0; //@line 40590
       $enc_224_i = $enc_127_i;
       $s_025_i = 0;
       while (1) {
        if (($enc_224_i | 0) == 0) {
         $enc_3_i = HEAPU16[(HEAP32[(HEAP32[$26 >> 2] | 0) + ($s_025_i << 2) >> 2] | 0) + 16 >> 1] | 0; //@line 40606
        } else {
         $enc_3_i = $enc_224_i; //@line 40608
        }
        $37 = $s_025_i + 1 | 0; //@line 40611
        if ($37 >>> 0 < $23 >>> 0) {
         $enc_224_i = $enc_3_i;
         $s_025_i = $37;
        } else {
         $enc_2_lcssa_i = $enc_3_i; //@line 40617
         break;
        }
       }
      }
      $39 = $h_028_i + 1 | 0; //@line 40623
      if ($39 >>> 0 < $13 >>> 0) {
       $sn_126_i = $_sn_1_i;
       $enc_127_i = $enc_2_lcssa_i;
       $h_028_i = $39;
      } else {
       $sn_1_lcssa_i = $_sn_1_i;
       $enc_1_lcssa_i = $enc_2_lcssa_i;
       break;
      }
     }
    }
    $41 = $c_037_i + 1 | 0; //@line 40636
    if ($41 >>> 0 < $7 >>> 0) {
     $hn_034_i = $_hn_0_i;
     $sn_035_i = $sn_1_lcssa_i;
     $enc_036_i = $enc_1_lcssa_i;
     $c_037_i = $41;
    } else {
     break;
    }
   }
   $extract_t_i = $_hn_0_i & 255; //@line 40645
   if (($enc_1_lcssa_i | 0) == 32769) {
    $enc_4_off0_i = -126;
    $sn_0_lcssa46_i = $sn_1_lcssa_i;
    $hn_0_lcssa_off048_i = $extract_t_i;
    break;
   } else if (($enc_1_lcssa_i | 0) == 1) {
    $enc_4_off0_i = -128;
    $sn_0_lcssa46_i = $sn_1_lcssa_i;
    $hn_0_lcssa_off048_i = $extract_t_i;
    break;
   } else if (($enc_1_lcssa_i | 0) == 2) {
    $enc_4_off0_i = 0;
    $sn_0_lcssa46_i = $sn_1_lcssa_i;
    $hn_0_lcssa_off048_i = $extract_t_i;
    break;
   } else if (($enc_1_lcssa_i | 0) == 32770) {
    $enc_4_off0_i = 2;
    $sn_0_lcssa46_i = $sn_1_lcssa_i;
    $hn_0_lcssa_off048_i = $extract_t_i;
    break;
   } else {
    $sn_0_lcssa47_i = $sn_1_lcssa_i;
    $hn_0_lcssa_off049_i = $extract_t_i;
    label = 14189; //@line 40663
    break;
   }
  }
 } while (0);
 if ((label | 0) == 14189) {
  $enc_4_off0_i = 0;
  $sn_0_lcssa46_i = $sn_0_lcssa47_i;
  $hn_0_lcssa_off048_i = $hn_0_lcssa_off049_i;
 }
 do {
  if (($3 & 65535) < 45) {
   $dt_0_off0_i = 1; //@line 40681
  } else {
   if ($sn_0_lcssa46_i >>> 0 < 12) {
    $dt_0_off0_i = 3; //@line 40686
    break;
   }
   $dt_0_off0_i = $sn_0_lcssa46_i >>> 0 < 17 ? 2 : 4; //@line 40692
  }
 } while (0);
 HEAP8[$1] = 84; //@line 40696
 $54 = $buf_i + 1 | 0; //@line 40697
 HEAP8[$54] = 68; //@line 40698
 $55 = $buf_i + 2 | 0; //@line 40699
 HEAP8[$55] = 0; //@line 40700
 $56 = $buf_i + 3 | 0; //@line 40701
 HEAP8[$56] = 0; //@line 40702
 $57 = $buf_i + 4 | 0; //@line 40703
 HEAP8[$57] = 21; //@line 40704
 $58 = $buf_i + 5 | 0; //@line 40705
 HEAP8[$58] = $enc_4_off0_i; //@line 40706
 $59 = $buf_i + 6 | 0; //@line 40707
 HEAP8[$59] = $dt_0_off0_i; //@line 40708
 $60 = $buf_i + 7 | 0; //@line 40709
 HEAP8[$60] = 0; //@line 40710
 $61 = $buf_i + 8 | 0; //@line 40711
 HEAP8[$61] = 0; //@line 40712
 $62 = $buf_i + 9 | 0; //@line 40713
 HEAP8[$62] = $hn_0_lcssa_off048_i; //@line 40714
 $63 = $img + 8 | 0; //@line 40715
 if ((HEAP32[$63 >> 2] | 0) == 0) {
  $_0912_i_i = 0;
  $_013_i_i = 9;
  $tmp_014_i_i = $1;
  $67 = 21504;
 } else {
  HEAP8[$60] = -128; //@line 40722
  $_0912_i_i = 0;
  $_013_i_i = 9;
  $tmp_014_i_i = $1;
  $67 = 21504;
 }
 while (1) {
  $68 = $_0912_i_i ^ $67; //@line 40731
  $71 = $68 << 1; //@line 40734
  $_2_i_i = ($68 & 32768 | 0) == 0 ? $71 : $71 ^ 41111; //@line 40736
  $75 = $_2_i_i << 1; //@line 40739
  $_2_1_i_i = ($_2_i_i & 32768 | 0) == 0 ? $75 : $75 ^ 41111; //@line 40741
  $79 = $_2_1_i_i << 1; //@line 40744
  $_2_2_i_i = ($_2_1_i_i & 32768 | 0) == 0 ? $79 : $79 ^ 41111; //@line 40746
  $83 = $_2_2_i_i << 1; //@line 40749
  $_2_3_i_i = ($_2_2_i_i & 32768 | 0) == 0 ? $83 : $83 ^ 41111; //@line 40751
  $87 = $_2_3_i_i << 1; //@line 40754
  $_2_4_i_i = ($_2_3_i_i & 32768 | 0) == 0 ? $87 : $87 ^ 41111; //@line 40756
  $91 = $_2_4_i_i << 1; //@line 40759
  $_2_5_i_i = ($_2_4_i_i & 32768 | 0) == 0 ? $91 : $91 ^ 41111; //@line 40761
  $95 = $_2_5_i_i << 1; //@line 40764
  $_2_6_i_i = ($_2_5_i_i & 32768 | 0) == 0 ? $95 : $95 ^ 41111; //@line 40766
  $99 = $_2_6_i_i << 1; //@line 40769
  $_2_7_i_i = ($_2_6_i_i & 32768 | 0) == 0 ? $99 : $99 ^ 41111; //@line 40771
  $101 = $tmp_014_i_i + 1 | 0; //@line 40772
  if (($_013_i_i | 0) == 0) {
   break;
  }
  $_0912_i_i = $_2_7_i_i;
  $_013_i_i = $_013_i_i - 1 | 0;
  $tmp_014_i_i = $101;
  $67 = HEAPU8[$101] << 8;
 }
 _psi_set_uint16_le($1, 10, $_2_7_i_i & 65535); //@line 40786
 if ((_psi_write($fp, $1, 12) | 0) != 0) {
  $_0 = 1; //@line 40791
  STACKTOP = sp; //@line 40793
  return $_0 | 0; //@line 40794
 }
 $106 = HEAP32[$63 >> 2] | 0; //@line 40796
 do {
  if (($106 | 0) != 0) {
   $__i19 = $106 >>> 0 > 65535 ? 65535 : $106; //@line 40803
   _psi_set_uint16_le($1, 2, $__i19); //@line 40804
   HEAP32[$t_i >> 2] = _time(0) | 0; //@line 40806
   $112 = _gmtime($t_i | 0) | 0; //@line 40807
   HEAP8[$57] = HEAP32[$112 + 20 >> 2] & 255; //@line 40811
   HEAP8[$58] = HEAP32[$112 + 16 >> 2] & 255; //@line 40815
   HEAP8[$59] = HEAP32[$112 + 12 >> 2] & 255; //@line 40819
   HEAP8[$60] = HEAP32[$112 + 8 >> 2] & 255; //@line 40823
   HEAP8[$61] = HEAP32[$112 + 4 >> 2] & 255; //@line 40827
   HEAP8[$62] = HEAP32[$112 >> 2] & 255; //@line 40831
   $131 = _malloc($__i19) | 0; //@line 40832
   if (($131 | 0) == 0) {
    $_0 = 1; //@line 40836
    STACKTOP = sp; //@line 40838
    return $_0 | 0; //@line 40839
   }
   $133 = ($__i19 | 0) == 0; //@line 40841
   if ($133) {
    $_0912_i_i25 = 0;
    $_013_i_i24 = 8;
    $tmp_014_i_i23 = $55;
   } else {
    $_pre_i20 = HEAP32[$img + 12 >> 2] | 0; //@line 40847
    $i_042_i = 0; //@line 40849
    while (1) {
     $137 = HEAP8[$_pre_i20 + $i_042_i | 0] | 0; //@line 40853
     HEAP8[$131 + $i_042_i | 0] = $137 << 24 >> 24 == 10 ? 0 : $137; //@line 40857
     $140 = $i_042_i + 1 | 0; //@line 40858
     if ($140 >>> 0 < $__i19 >>> 0) {
      $i_042_i = $140; //@line 40862
     } else {
      $_0912_i_i25 = 0;
      $_013_i_i24 = 8;
      $tmp_014_i_i23 = $55;
      break;
     }
    }
   }
   while (1) {
    $145 = HEAPU8[$tmp_014_i_i23] << 8 ^ $_0912_i_i25; //@line 40876
    $148 = $145 << 1; //@line 40879
    $_2_i_i26 = ($145 & 32768 | 0) == 0 ? $148 : $148 ^ 41111; //@line 40881
    $152 = $_2_i_i26 << 1; //@line 40884
    $_2_1_i_i27 = ($_2_i_i26 & 32768 | 0) == 0 ? $152 : $152 ^ 41111; //@line 40886
    $156 = $_2_1_i_i27 << 1; //@line 40889
    $_2_2_i_i28 = ($_2_1_i_i27 & 32768 | 0) == 0 ? $156 : $156 ^ 41111; //@line 40891
    $160 = $_2_2_i_i28 << 1; //@line 40894
    $_2_3_i_i29 = ($_2_2_i_i28 & 32768 | 0) == 0 ? $160 : $160 ^ 41111; //@line 40896
    $164 = $_2_3_i_i29 << 1; //@line 40899
    $_2_4_i_i30 = ($_2_3_i_i29 & 32768 | 0) == 0 ? $164 : $164 ^ 41111; //@line 40901
    $168 = $_2_4_i_i30 << 1; //@line 40904
    $_2_5_i_i31 = ($_2_4_i_i30 & 32768 | 0) == 0 ? $168 : $168 ^ 41111; //@line 40906
    $172 = $_2_5_i_i31 << 1; //@line 40909
    $_2_6_i_i32 = ($_2_5_i_i31 & 32768 | 0) == 0 ? $172 : $172 ^ 41111; //@line 40911
    $176 = $_2_6_i_i32 << 1; //@line 40914
    $_2_7_i_i33 = ($_2_6_i_i32 & 32768 | 0) == 0 ? $176 : $176 ^ 41111; //@line 40916
    $179 = $_013_i_i24 - 1 | 0; //@line 40918
    if (($179 | 0) == 0) {
     break;
    } else {
     $_0912_i_i25 = $_2_7_i_i33;
     $_013_i_i24 = $179;
     $tmp_014_i_i23 = $tmp_014_i_i23 + 1 | 0;
    }
   }
   $181 = $_2_7_i_i33 & 65535; //@line 40927
   L18075 : do {
    if ($133) {
     $_09_lcssa_i_i = $181; //@line 40931
    } else {
     $_0912_i30_i = $181;
     $_013_i29_i = $__i19;
     $tmp_014_i28_i = $131;
     while (1) {
      $185 = HEAPU8[$tmp_014_i28_i] << 8 ^ $_0912_i30_i; //@line 40941
      $188 = $185 << 1; //@line 40944
      $_2_i31_i = ($185 & 32768 | 0) == 0 ? $188 : $188 ^ 41111; //@line 40946
      $192 = $_2_i31_i << 1; //@line 40949
      $_2_1_i32_i = ($_2_i31_i & 32768 | 0) == 0 ? $192 : $192 ^ 41111; //@line 40951
      $196 = $_2_1_i32_i << 1; //@line 40954
      $_2_2_i33_i = ($_2_1_i32_i & 32768 | 0) == 0 ? $196 : $196 ^ 41111; //@line 40956
      $200 = $_2_2_i33_i << 1; //@line 40959
      $_2_3_i34_i = ($_2_2_i33_i & 32768 | 0) == 0 ? $200 : $200 ^ 41111; //@line 40961
      $204 = $_2_3_i34_i << 1; //@line 40964
      $_2_4_i35_i = ($_2_3_i34_i & 32768 | 0) == 0 ? $204 : $204 ^ 41111; //@line 40966
      $208 = $_2_4_i35_i << 1; //@line 40969
      $_2_5_i36_i = ($_2_4_i35_i & 32768 | 0) == 0 ? $208 : $208 ^ 41111; //@line 40971
      $212 = $_2_5_i36_i << 1; //@line 40974
      $_2_6_i37_i = ($_2_5_i36_i & 32768 | 0) == 0 ? $212 : $212 ^ 41111; //@line 40976
      $216 = $_2_6_i37_i << 1; //@line 40979
      $_2_7_i38_i = ($_2_6_i37_i & 32768 | 0) == 0 ? $216 : $216 ^ 41111; //@line 40981
      $218 = $_013_i29_i - 1 | 0; //@line 40982
      if (($218 | 0) == 0) {
       $_09_lcssa_i_i = $_2_7_i38_i; //@line 40986
       break L18075;
      }
      $_0912_i30_i = $_2_7_i38_i;
      $_013_i29_i = $218;
      $tmp_014_i28_i = $tmp_014_i28_i + 1 | 0;
     }
    }
   } while (0);
   _psi_set_uint16_le($1, 0, $_09_lcssa_i_i & 65535); //@line 40997
   if ((_psi_write($fp, $1, 10) | 0) == 0) {
    $225 = _psi_write($fp, $131, $__i19) | 0; //@line 41002
    _free($131); //@line 41003
    if (($225 | 0) == 0) {
     break;
    } else {
     $_0 = 1; //@line 41009
    }
    STACKTOP = sp; //@line 41012
    return $_0 | 0; //@line 41013
   } else {
    _free($131); //@line 41015
    $_0 = 1; //@line 41017
    STACKTOP = sp; //@line 41019
    return $_0 | 0; //@line 41020
   }
  }
 } while (0);
 $226 = HEAP16[$2 >> 1] | 0; //@line 41024
 L18086 : do {
  if ($226 << 16 >> 16 != 0) {
   $228 = $img + 4 | 0; //@line 41029
   $229 = $buf_i36 | 0; //@line 41030
   $230 = $buf_i36 + 1 | 0; //@line 41031
   $231 = $buf_i36 + 2 | 0; //@line 41032
   $232 = $buf_i36 + 3 | 0; //@line 41033
   $c_055 = 0;
   $233 = $226;
   L18088 : while (1) {
    $236 = HEAP32[(HEAP32[$228 >> 2] | 0) + ($c_055 << 2) >> 2] | 0; //@line 41041
    $237 = $236 + 2 | 0; //@line 41042
    if ((HEAP16[$237 >> 1] | 0) == 0) {
     $483 = $233; //@line 41047
    } else {
     $240 = $236 + 4 | 0; //@line 41049
     $241 = $c_055 & 255; //@line 41050
     $243 = $c_055 << 8 & 65280; //@line 41052
     $h_054 = 0; //@line 41054
     do {
      $247 = HEAP32[(HEAP32[$240 >> 2] | 0) + ($h_054 << 2) >> 2] | 0; //@line 41059
      $248 = $247 + 2 | 0; //@line 41060
      $249 = HEAP16[$248 >> 1] | 0; //@line 41061
      HEAP8[$229] = $249 & 255; //@line 41063
      HEAP8[$230] = $241; //@line 41064
      HEAP8[$231] = $h_054 & 255; //@line 41066
      $252 = $249 & 255; //@line 41068
      $255 = $252 << 9; //@line 41071
      $_2_i_i37 = ($252 & 128 | 0) == 0 ? $255 : $255 ^ 41111; //@line 41073
      $259 = $_2_i_i37 << 1; //@line 41076
      $_2_1_i_i38 = ($_2_i_i37 & 32768 | 0) == 0 ? $259 : $259 ^ 41111; //@line 41078
      $263 = $_2_1_i_i38 << 1; //@line 41081
      $_2_2_i_i39 = ($_2_1_i_i38 & 32768 | 0) == 0 ? $263 : $263 ^ 41111; //@line 41083
      $267 = $_2_2_i_i39 << 1; //@line 41086
      $_2_3_i_i40 = ($_2_2_i_i39 & 32768 | 0) == 0 ? $267 : $267 ^ 41111; //@line 41088
      $271 = $_2_3_i_i40 << 1; //@line 41091
      $_2_4_i_i41 = ($_2_3_i_i40 & 32768 | 0) == 0 ? $271 : $271 ^ 41111; //@line 41093
      $275 = $_2_4_i_i41 << 1; //@line 41096
      $_2_5_i_i42 = ($_2_4_i_i41 & 32768 | 0) == 0 ? $275 : $275 ^ 41111; //@line 41098
      $279 = $_2_5_i_i42 << 1; //@line 41101
      $_2_6_i_i43 = ($_2_5_i_i42 & 32768 | 0) == 0 ? $279 : $279 ^ 41111; //@line 41103
      $283 = $_2_6_i_i43 << 1; //@line 41106
      $285 = (($_2_6_i_i43 & 32768 | 0) == 0 ? $283 : $283 ^ 41111) ^ $243; //@line 41109
      $288 = $285 << 1; //@line 41112
      $_2_i_1_i = ($285 & 32768 | 0) == 0 ? $288 : $288 ^ 41111; //@line 41114
      $292 = $_2_i_1_i << 1; //@line 41117
      $_2_1_i_1_i = ($_2_i_1_i & 32768 | 0) == 0 ? $292 : $292 ^ 41111; //@line 41119
      $296 = $_2_1_i_1_i << 1; //@line 41122
      $_2_2_i_1_i = ($_2_1_i_1_i & 32768 | 0) == 0 ? $296 : $296 ^ 41111; //@line 41124
      $300 = $_2_2_i_1_i << 1; //@line 41127
      $_2_3_i_1_i = ($_2_2_i_1_i & 32768 | 0) == 0 ? $300 : $300 ^ 41111; //@line 41129
      $304 = $_2_3_i_1_i << 1; //@line 41132
      $_2_4_i_1_i = ($_2_3_i_1_i & 32768 | 0) == 0 ? $304 : $304 ^ 41111; //@line 41134
      $308 = $_2_4_i_1_i << 1; //@line 41137
      $_2_5_i_1_i = ($_2_4_i_1_i & 32768 | 0) == 0 ? $308 : $308 ^ 41111; //@line 41139
      $312 = $_2_5_i_1_i << 1; //@line 41142
      $_2_6_i_1_i = ($_2_5_i_1_i & 32768 | 0) == 0 ? $312 : $312 ^ 41111; //@line 41144
      $316 = $_2_6_i_1_i << 1; //@line 41147
      $320 = (($_2_6_i_1_i & 32768 | 0) == 0 ? $316 : $316 ^ 41111) ^ $h_054 << 8 & 65280; //@line 41152
      $323 = $320 << 1; //@line 41155
      $_2_i_2_i = ($320 & 32768 | 0) == 0 ? $323 : $323 ^ 41111; //@line 41157
      $327 = $_2_i_2_i << 1; //@line 41160
      $_2_1_i_2_i = ($_2_i_2_i & 32768 | 0) == 0 ? $327 : $327 ^ 41111; //@line 41162
      $331 = $_2_1_i_2_i << 1; //@line 41165
      $_2_2_i_2_i = ($_2_1_i_2_i & 32768 | 0) == 0 ? $331 : $331 ^ 41111; //@line 41167
      $335 = $_2_2_i_2_i << 1; //@line 41170
      $_2_3_i_2_i = ($_2_2_i_2_i & 32768 | 0) == 0 ? $335 : $335 ^ 41111; //@line 41172
      $339 = $_2_3_i_2_i << 1; //@line 41175
      $_2_4_i_2_i = ($_2_3_i_2_i & 32768 | 0) == 0 ? $339 : $339 ^ 41111; //@line 41177
      $343 = $_2_4_i_2_i << 1; //@line 41180
      $_2_5_i_2_i = ($_2_4_i_2_i & 32768 | 0) == 0 ? $343 : $343 ^ 41111; //@line 41182
      $347 = $_2_5_i_2_i << 1; //@line 41185
      $_2_6_i_2_i = ($_2_5_i_2_i & 32768 | 0) == 0 ? $347 : $347 ^ 41111; //@line 41187
      $351 = $_2_6_i_2_i << 1; //@line 41190
      HEAP8[$232] = (($_2_6_i_2_i & 32768 | 0) == 0 ? $351 : $351 ^ 151) & 255; //@line 41194
      if ((_psi_write($fp, $229, 4) | 0) != 0) {
       $_0 = 1; //@line 41199
       label = 14242; //@line 41200
       break L18088;
      }
      $356 = $247 + 4 | 0; //@line 41203
      if ((HEAP16[$248 >> 1] | 0) != 0) {
       $s_014_i = 0; //@line 41208
       do {
        $361 = HEAP32[(HEAP32[$356 >> 2] | 0) + ($s_014_i << 2) >> 2] | 0; //@line 41213
        $362 = $361 + 10 | 0; //@line 41214
        $364 = HEAPU16[$362 >> 1] | 0; //@line 41216
        if (($364 + 65535 & $364 | 0) != 0) {
         $_0 = 1; //@line 41222
         label = 14240; //@line 41223
         break L18088;
        }
        HEAP8[$1] = HEAP16[$361 + 4 >> 1] & 255; //@line 41229
        HEAP8[$54] = HEAP16[$361 + 6 >> 1] & 255; //@line 41233
        HEAP8[$55] = HEAP16[$361 + 8 >> 1] & 255; //@line 41237
        HEAP8[$56] = (_psi_sct_get_mfm_size($361) | 0) & 255; //@line 41240
        HEAP8[$57] = 0; //@line 41241
        $381 = HEAP32[$361 + 12 >> 2] | 0; //@line 41243
        if (($381 & 2 | 0) == 0) {
         $386 = 4; //@line 41248
        } else {
         HEAP8[$57] = 2; //@line 41250
         $386 = 6; //@line 41252
        }
        if (($381 & 4 | 0) != 0) {
         HEAP8[$57] = $386; //@line 41259
        }
        $391 = $361 + 24 | 0; //@line 41262
        $392 = HEAP16[$362 >> 1] | 0; //@line 41263
        if ($392 << 16 >> 16 == 0) {
         $_09_lcssa_i_off0_i_i = 0; //@line 41267
        } else {
         $_0912_i_i_i = 0;
         $_013_i_i_i = $392 & 65535;
         $tmp_014_i_i_i = HEAP32[$391 >> 2] | 0;
         while (1) {
          $399 = HEAPU8[$tmp_014_i_i_i] << 8 ^ $_0912_i_i_i; //@line 41280
          $402 = $399 << 1; //@line 41283
          $_2_i_i_i = ($399 & 32768 | 0) == 0 ? $402 : $402 ^ 41111; //@line 41285
          $406 = $_2_i_i_i << 1; //@line 41288
          $_2_1_i_i_i = ($_2_i_i_i & 32768 | 0) == 0 ? $406 : $406 ^ 41111; //@line 41290
          $410 = $_2_1_i_i_i << 1; //@line 41293
          $_2_2_i_i_i = ($_2_1_i_i_i & 32768 | 0) == 0 ? $410 : $410 ^ 41111; //@line 41295
          $414 = $_2_2_i_i_i << 1; //@line 41298
          $_2_3_i_i_i = ($_2_2_i_i_i & 32768 | 0) == 0 ? $414 : $414 ^ 41111; //@line 41300
          $418 = $_2_3_i_i_i << 1; //@line 41303
          $_2_4_i_i_i = ($_2_3_i_i_i & 32768 | 0) == 0 ? $418 : $418 ^ 41111; //@line 41305
          $422 = $_2_4_i_i_i << 1; //@line 41308
          $_2_5_i_i_i = ($_2_4_i_i_i & 32768 | 0) == 0 ? $422 : $422 ^ 41111; //@line 41310
          $426 = $_2_5_i_i_i << 1; //@line 41313
          $_2_6_i_i_i = ($_2_5_i_i_i & 32768 | 0) == 0 ? $426 : $426 ^ 41111; //@line 41315
          $430 = $_2_6_i_i_i << 1; //@line 41318
          $_2_7_i_i_i = ($_2_6_i_i_i & 32768 | 0) == 0 ? $430 : $430 ^ 41111; //@line 41320
          $433 = $_013_i_i_i - 1 | 0; //@line 41322
          if (($433 | 0) == 0) {
           break;
          } else {
           $_0912_i_i_i = $_2_7_i_i_i;
           $_013_i_i_i = $433;
           $tmp_014_i_i_i = $tmp_014_i_i_i + 1 | 0;
          }
         }
         $_09_lcssa_i_off0_i_i = $_2_7_i_i_i & 255; //@line 41332
        }
        HEAP8[$58] = $_09_lcssa_i_off0_i_i; //@line 41335
        if ((_psi_write($fp, $1, 6) | 0) != 0) {
         $_0 = 1; //@line 41340
         label = 14241; //@line 41341
         break L18088;
        }
        L18112 : do {
         if ((HEAPU8[$56] | 0) <= 6) {
          $441 = HEAP16[$362 >> 1] | 0; //@line 41349
          $_pre_i_i = $441 & 65535; //@line 41354
          L18114 : do {
           if (!(($441 & 1) != 0 | ($441 & 65535) < 2)) {
            $i_0_i_i = 2; //@line 41358
            while (1) {
             if ($i_0_i_i >>> 0 >= $_pre_i_i >>> 0) {
              break;
             }
             $447 = HEAP32[$391 >> 2] | 0; //@line 41366
             if ((HEAP8[$447 + $i_0_i_i | 0] | 0) == (HEAP8[$447 + ($i_0_i_i & 1) | 0] | 0)) {
              $i_0_i_i = $i_0_i_i + 1 | 0; //@line 41376
             } else {
              break L18114;
             }
            }
            _psi_set_uint16_le($1, 0, 5); //@line 41381
            HEAP8[$55] = 1; //@line 41382
            _psi_set_uint16_le($1, 3, (HEAPU16[$362 >> 1] | 0) >>> 1); //@line 41386
            $458 = HEAP32[$391 >> 2] | 0; //@line 41387
            HEAP8[$58] = HEAP8[$458] | 0; //@line 41389
            HEAP8[$59] = HEAP8[$458 + 1 | 0] | 0; //@line 41392
            if ((_psi_write($fp, $1, 7) | 0) == 0) {
             break L18112;
            } else {
             $_0 = 1; //@line 41399
             label = 14249; //@line 41400
             break L18088;
            }
           }
          } while (0);
          _psi_set_uint16_le($1, 0, $_pre_i_i + 1 | 0); //@line 41406
          HEAP8[$55] = 0; //@line 41407
          if ((_psi_write($fp, $1, 3) | 0) != 0) {
           $_0 = 1; //@line 41412
           label = 14250; //@line 41413
           break L18088;
          }
          if ((_psi_write($fp, HEAP32[$391 >> 2] | 0, HEAPU16[$362 >> 1] | 0) | 0) != 0) {
           $_0 = 1; //@line 41423
           label = 14251; //@line 41424
           break L18088;
          }
         }
        } while (0);
        $s_014_i = $s_014_i + 1 | 0; //@line 41429
       } while ($s_014_i >>> 0 < (HEAPU16[$248 >> 1] | 0) >>> 0);
      }
      $h_054 = $h_054 + 1 | 0; //@line 41441
     } while ($h_054 >>> 0 < (HEAPU16[$237 >> 1] | 0) >>> 0);
     $483 = HEAP16[$2 >> 1] | 0; //@line 41454
    }
    $484 = $c_055 + 1 | 0; //@line 41457
    if ($484 >>> 0 < ($483 & 65535) >>> 0) {
     $c_055 = $484;
     $233 = $483;
    } else {
     break L18086;
    }
   }
   if ((label | 0) == 14249) {
    STACKTOP = sp; //@line 41469
    return $_0 | 0; //@line 41470
   } else if ((label | 0) == 14250) {
    STACKTOP = sp; //@line 41474
    return $_0 | 0; //@line 41475
   } else if ((label | 0) == 14241) {
    STACKTOP = sp; //@line 41479
    return $_0 | 0; //@line 41480
   } else if ((label | 0) == 14242) {
    STACKTOP = sp; //@line 41484
    return $_0 | 0; //@line 41485
   } else if ((label | 0) == 14251) {
    STACKTOP = sp; //@line 41489
    return $_0 | 0; //@line 41490
   } else if ((label | 0) == 14240) {
    STACKTOP = sp; //@line 41494
    return $_0 | 0; //@line 41495
   }
  }
 } while (0);
 $487 = $buf | 0; //@line 41499
 HEAP8[$487] = -1; //@line 41500
 HEAP8[$buf + 1 | 0] = 0; //@line 41502
 HEAP8[$buf + 2 | 0] = 0; //@line 41504
 HEAP8[$buf + 3 | 0] = 53; //@line 41506
 if ((_psi_write($fp, $487, 4) | 0) != 0) {
  $_0 = 1; //@line 41511
  STACKTOP = sp; //@line 41513
  return $_0 | 0; //@line 41514
 }
 _fflush($fp | 0) | 0; //@line 41516
 $_0 = 0; //@line 41518
 STACKTOP = sp; //@line 41520
 return $_0 | 0; //@line 41521
}
function _psi_get_uint16_be($buf, $idx) {
 $buf = $buf | 0;
 $idx = $idx | 0;
 return (HEAPU8[$buf + $idx | 0] | 0) << 8 | (HEAPU8[$buf + ($idx + 1) | 0] | 0) | 0; //@line 41542
}
function _psi_get_uint32_be($buf, $idx) {
 $buf = $buf | 0;
 $idx = $idx | 0;
 return (((HEAPU8[$buf + $idx | 0] | 0) << 8 | (HEAPU8[$buf + ($idx + 1) | 0] | 0)) << 8 | (HEAPU8[$buf + ($idx + 2) | 0] | 0)) << 8 | (HEAPU8[$buf + ($idx + 3) | 0] | 0) | 0; //@line 41576
}
function _psi_set_uint16_be($buf, $idx, $val) {
 $buf = $buf | 0;
 $idx = $idx | 0;
 $val = $val | 0;
 HEAP8[$buf + $idx | 0] = $val >>> 8 & 255; //@line 41590
 HEAP8[$buf + ($idx + 1) | 0] = $val & 255; //@line 41594
 return;
}
function _psi_set_uint32_be($buf, $idx, $val) {
 $buf = $buf | 0;
 $idx = $idx | 0;
 $val = $val | 0;
 HEAP8[$buf + $idx | 0] = $val >>> 24 & 255; //@line 41611
 HEAP8[$buf + ($idx + 1) | 0] = $val >>> 16 & 255; //@line 41616
 HEAP8[$buf + ($idx + 2) | 0] = $val >>> 8 & 255; //@line 41621
 HEAP8[$buf + ($idx + 3) | 0] = $val & 255; //@line 41625
 return;
}
function _psi_get_uint16_le($buf, $idx) {
 $buf = $buf | 0;
 $idx = $idx | 0;
 return (HEAPU8[$buf + ($idx + 1) | 0] | 0) << 8 | (HEAPU8[$buf + $idx | 0] | 0) | 0; //@line 41648
}
function _psi_get_uint32_le($buf, $idx) {
 $buf = $buf | 0;
 $idx = $idx | 0;
 return (((HEAPU8[$buf + ($idx + 3) | 0] | 0) << 8 | (HEAPU8[$buf + ($idx + 2) | 0] | 0)) << 8 | (HEAPU8[$buf + ($idx + 1) | 0] | 0)) << 8 | (HEAPU8[$buf + $idx | 0] | 0) | 0; //@line 41682
}
function _psi_set_uint16_le($buf, $idx, $val) {
 $buf = $buf | 0;
 $idx = $idx | 0;
 $val = $val | 0;
 HEAP8[$buf + $idx | 0] = $val & 255; //@line 41695
 HEAP8[$buf + ($idx + 1) | 0] = $val >>> 8 & 255; //@line 41700
 return;
}
function _snd_iir2_filter($iir, $dst, $src, $cnt, $ofs, $sign) {
 $iir = $iir | 0;
 $dst = $dst | 0;
 $src = $src | 0;
 $cnt = $cnt | 0;
 $ofs = $ofs | 0;
 $sign = $sign | 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $_047 = 0, $_04146 = 0, $_04245 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $31 = 0, $33 = 0, $37 = 0, $38 = 0, $v_0_off0 = 0, $47 = 0;
 if (($cnt | 0) == 0) {
  return;
 }
 $3 = ($sign | 0) != 0 ? 32768 : 0; //@line 41729
 $4 = $iir + 28 | 0; //@line 41730
 $5 = $iir + 32 | 0; //@line 41731
 $6 = $iir + 24 | 0; //@line 41732
 $7 = $iir + 40 | 0; //@line 41733
 $8 = $iir + 44 | 0; //@line 41734
 $9 = $iir + 36 | 0; //@line 41735
 $10 = $iir | 0; //@line 41736
 $11 = $iir + 4 | 0; //@line 41737
 $12 = $iir + 8 | 0; //@line 41738
 $13 = $iir + 16 | 0; //@line 41739
 $14 = $iir + 20 | 0; //@line 41740
 $_04245 = $cnt;
 $_04146 = $src;
 $_047 = $dst;
 while (1) {
  $19 = ((HEAPU16[$_04146 >> 1] | 0) ^ $3) - 32768 | 0; //@line 41750
  $20 = HEAP32[$4 >> 2] | 0; //@line 41751
  HEAP32[$5 >> 2] = $20; //@line 41752
  $21 = HEAP32[$6 >> 2] | 0; //@line 41753
  HEAP32[$4 >> 2] = $21; //@line 41754
  HEAP32[$6 >> 2] = $19; //@line 41755
  $22 = HEAP32[$7 >> 2] | 0; //@line 41756
  HEAP32[$8 >> 2] = $22; //@line 41757
  $23 = HEAP32[$9 >> 2] | 0; //@line 41758
  HEAP32[$7 >> 2] = $23; //@line 41759
  $25 = Math_imul($19, HEAP32[$10 >> 2] | 0) | 0; //@line 41761
  $27 = Math_imul($21, HEAP32[$11 >> 2] | 0) | 0; //@line 41763
  $31 = $27 + $25 + (Math_imul($20, HEAP32[$12 >> 2] | 0) | 0) | 0; //@line 41767
  $33 = Math_imul($23, HEAP32[$13 >> 2] | 0) | 0; //@line 41769
  $37 = ($31 - $33 - (Math_imul($22, HEAP32[$14 >> 2] | 0) | 0) | 0) / 8192 | 0; //@line 41774
  HEAP32[$9 >> 2] = $37; //@line 41775
  $38 = $37 + 32768 | 0; //@line 41776
  if (($38 | 0) < 0) {
   $v_0_off0 = 0; //@line 41780
  } else {
   $v_0_off0 = ($38 | 0) > 65535 ? 65535 : $38 & 65535; //@line 41786
  }
  HEAP16[$_047 >> 1] = ($v_0_off0 ^ $3) & 65535; //@line 41791
  $47 = $_04245 - 1 | 0; //@line 41794
  if (($47 | 0) == 0) {
   break;
  } else {
   $_04245 = $47;
   $_04146 = $_04146 + ($ofs << 1) | 0;
   $_047 = $_047 + ($ofs << 1) | 0;
  }
 }
 return;
}
function _snd_set_buf($dst, $src, $cnt, $sign, $be) {
 $dst = $dst | 0;
 $src = $src | 0;
 $cnt = $cnt | 0;
 $sign = $sign | 0;
 $be = $be | 0;
 var $2 = 0, $4 = 0, $_030 = 0, $i_029 = 0, $_02128 = 0, $6 = 0, $13 = 0, $_125 = 0, $i_124 = 0, $_12223 = 0, $16 = 0, $23 = 0;
 $2 = ($sign | 0) != 0 ? -32768 : 0; //@line 41821
 $4 = ($cnt | 0) == 0; //@line 41823
 if (($be | 0) == 0) {
  if ($4) {
   return;
  } else {
   $_12223 = $src;
   $i_124 = 0;
   $_125 = $dst;
  }
  while (1) {
   $16 = HEAP16[$_12223 >> 1] ^ $2; //@line 41838
   HEAP8[$_125] = $16 & 255; //@line 41840
   HEAP8[$_125 + 1 | 0] = ($16 & 65535) >>> 8 & 255; //@line 41844
   $23 = $i_124 + 1 | 0; //@line 41847
   if ($23 >>> 0 < $cnt >>> 0) {
    $_12223 = $_12223 + 2 | 0;
    $i_124 = $23;
    $_125 = $_125 + 2 | 0;
   } else {
    break;
   }
  }
  return;
 } else {
  if ($4) {
   return;
  } else {
   $_02128 = $src;
   $i_029 = 0;
   $_030 = $dst;
  }
  while (1) {
   $6 = HEAP16[$_02128 >> 1] ^ $2; //@line 41871
   HEAP8[$_030] = ($6 & 65535) >>> 8 & 255; //@line 41874
   HEAP8[$_030 + 1 | 0] = $6 & 255; //@line 41877
   $13 = $i_029 + 1 | 0; //@line 41880
   if ($13 >>> 0 < $cnt >>> 0) {
    $_02128 = $_02128 + 2 | 0;
    $i_029 = $13;
    $_030 = $_030 + 2 | 0;
   } else {
    break;
   }
  }
  return;
 }
}
function _psi_probe_td0_fp($fp) {
 $fp = $fp | 0;
 var $buf = 0, $4 = 0, $8 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 41901
 STACKTOP = STACKTOP + 16 | 0; //@line 41901
 $buf = sp | 0; //@line 41902
 do {
  if ((_fseek($fp | 0, 0, 0) | 0) == 0) {
   $4 = $buf | 0; //@line 41908
   if ((_psi_read($fp, $4, 16) | 0) != 0) {
    $_0 = 0; //@line 41913
    break;
   }
   $8 = HEAP8[$4] | 0; //@line 41916
   if (($8 << 24 >> 24 | 0) == 84) {
    if ((HEAP8[$buf + 1 | 0] | 0) != 68) {
     $_0 = 0; //@line 41923
     break;
    }
   } else if (($8 << 24 >> 24 | 0) == 116) {
    if ((HEAP8[$buf + 1 | 0] | 0) != 100) {
     $_0 = 0; //@line 41932
     break;
    }
   } else {
    $_0 = 0; //@line 41936
    break;
   }
   $_0 = (HEAP8[$buf + 2 | 0] | 0) == 0 | 0; //@line 41944
  } else {
   $_0 = 0; //@line 41946
  }
 } while (0);
 STACKTOP = sp; //@line 41950
 return $_0 | 0; //@line 41951
}
function _psi_load_xdf($fp) {
 $fp = $fp | 0;
 var $1 = 0, $i_0_i = 0, $6 = 0, $10 = 0, $11 = 0, $17 = 0, $ofs_07_i = 0, $j_06_i = 0, $i_1_i = 0, $38 = 0, $42 = 0, $43 = 0, $49 = 0, $66 = 0, $_0 = 0, label = 0;
 $1 = _psi_img_new() | 0; //@line 41968
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 41972
  return $_0 | 0; //@line 41975
 } else {
  $i_0_i = 0; //@line 41977
 }
 while (1) {
  if ($i_0_i >>> 0 >= (HEAP32[96] | 0) >>> 0) {
   label = 14289; //@line 41985
   break;
  }
  $6 = HEAP32[97] | 0; //@line 41988
  $10 = 128 << (HEAPU8[$6 + ($i_0_i << 3) + 2 | 0] | 0); //@line 41992
  $11 = $6 + ($i_0_i << 3) | 0; //@line 41993
  $17 = _psi_sct_new(0, HEAPU8[$11] | 0, HEAPU8[$6 + ($i_0_i << 3) + 1 | 0] | 0, $10) | 0; //@line 41999
  if (($17 | 0) == 0) {
   break;
  }
  _psi_sct_set_encoding($17, 32770); //@line 42005
  if ((_psi_img_add_sector($1, $17, 0, HEAPU8[$11] | 0) | 0) != 0) {
   break;
  }
  if ((_psi_read_ofs($fp, HEAP32[$6 + ($i_0_i << 3) + 4 >> 2] | 0, HEAP32[$17 + 24 >> 2] | 0, $10) | 0) == 0) {
   $i_0_i = $i_0_i + 1 | 0; //@line 42023
  } else {
   break;
  }
 }
 L18185 : do {
  if ((label | 0) == 14289) {
   if ((HEAP32[94] | 0) >>> 0 <= 1) {
    $_0 = $1; //@line 42034
    return $_0 | 0; //@line 42037
   }
   $j_06_i = 1;
   $ofs_07_i = HEAP32[95] | 0;
   while (1) {
    $i_1_i = 0; //@line 42046
    while (1) {
     if ($i_1_i >>> 0 >= (HEAP32[98] | 0) >>> 0) {
      break;
     }
     $38 = HEAP32[99] | 0; //@line 42055
     $42 = 128 << (HEAPU8[$38 + ($i_1_i << 3) + 2 | 0] | 0); //@line 42059
     $43 = $38 + ($i_1_i << 3) | 0; //@line 42060
     $49 = _psi_sct_new($j_06_i, HEAPU8[$43] | 0, HEAPU8[$38 + ($i_1_i << 3) + 1 | 0] | 0, $42) | 0; //@line 42066
     if (($49 | 0) == 0) {
      break L18185;
     }
     _psi_sct_set_encoding($49, 32770); //@line 42072
     if ((_psi_img_add_sector($1, $49, $j_06_i, HEAPU8[$43] | 0) | 0) != 0) {
      break L18185;
     }
     if ((_psi_read_ofs($fp, (HEAP32[$38 + ($i_1_i << 3) + 4 >> 2] | 0) + $ofs_07_i | 0, HEAP32[$49 + 24 >> 2] | 0, $42) | 0) != 0) {
      break L18185;
     }
     $i_1_i = $i_1_i + 1 | 0; //@line 42094
    }
    $66 = $j_06_i + 1 | 0; //@line 42098
    if ($66 >>> 0 < (HEAP32[94] | 0) >>> 0) {
     $j_06_i = $66;
     $ofs_07_i = (HEAP32[95] | 0) + $ofs_07_i | 0;
    } else {
     $_0 = $1; //@line 42105
     break;
    }
   }
   return $_0 | 0; //@line 42111
  }
 } while (0);
 _psi_img_del($1); //@line 42114
 $_0 = 0; //@line 42116
 return $_0 | 0; //@line 42119
}
function _psi_save_xdf($fp, $img) {
 $fp = $fp | 0;
 $img = $img | 0;
 var $i_0_i = 0, $5 = 0, $9 = 0, $16 = 0, $ofs_07_i = 0, $j_06_i = 0, $i_1_i = 0, $37 = 0, $41 = 0, $48 = 0, $65 = 0, $_0_i = 0, label = 0;
 $i_0_i = 0; //@line 42138
 while (1) {
  if ($i_0_i >>> 0 >= (HEAP32[96] | 0) >>> 0) {
   label = 14309; //@line 42145
   break;
  }
  $5 = HEAP32[97] | 0; //@line 42148
  $9 = 128 << (HEAPU8[$5 + ($i_0_i << 3) + 2 | 0] | 0); //@line 42152
  $16 = _psi_img_get_sector($img, 0, HEAPU8[$5 + ($i_0_i << 3) | 0] | 0, HEAPU8[$5 + ($i_0_i << 3) + 1 | 0] | 0, 0) | 0; //@line 42159
  if (($16 | 0) == 0) {
   $_0_i = 1; //@line 42163
   label = 14323; //@line 42164
   break;
  }
  if ((HEAPU16[$16 + 10 >> 1] | 0 | 0) != ($9 | 0)) {
   $_0_i = 1; //@line 42173
   label = 14319; //@line 42174
   break;
  }
  if ((_psi_write_ofs($fp, HEAP32[$5 + ($i_0_i << 3) + 4 >> 2] | 0, HEAP32[$16 + 24 >> 2] | 0, $9) | 0) == 0) {
   $i_0_i = $i_0_i + 1 | 0; //@line 42186
  } else {
   $_0_i = 1; //@line 42188
   label = 14322; //@line 42189
   break;
  }
 }
 if ((label | 0) == 14322) {
  return $_0_i | 0; //@line 42196
 } else if ((label | 0) == 14319) {
  return $_0_i | 0; //@line 42201
 } else if ((label | 0) == 14309) {
  if ((HEAP32[94] | 0) >>> 0 <= 1) {
   $_0_i = 0; //@line 42208
   return $_0_i | 0; //@line 42211
  }
  $j_06_i = 1;
  $ofs_07_i = HEAP32[95] | 0;
  L18215 : while (1) {
   $i_1_i = 0; //@line 42220
   while (1) {
    if ($i_1_i >>> 0 >= (HEAP32[98] | 0) >>> 0) {
     break;
    }
    $37 = HEAP32[99] | 0; //@line 42229
    $41 = 128 << (HEAPU8[$37 + ($i_1_i << 3) + 2 | 0] | 0); //@line 42233
    $48 = _psi_img_get_sector($img, $j_06_i, HEAPU8[$37 + ($i_1_i << 3) | 0] | 0, HEAPU8[$37 + ($i_1_i << 3) + 1 | 0] | 0, 0) | 0; //@line 42240
    if (($48 | 0) == 0) {
     $_0_i = 1; //@line 42244
     label = 14326; //@line 42245
     break L18215;
    }
    if ((HEAPU16[$48 + 10 >> 1] | 0 | 0) != ($41 | 0)) {
     $_0_i = 1; //@line 42254
     label = 14321; //@line 42255
     break L18215;
    }
    if ((_psi_write_ofs($fp, (HEAP32[$37 + ($i_1_i << 3) + 4 >> 2] | 0) + $ofs_07_i | 0, HEAP32[$48 + 24 >> 2] | 0, $41) | 0) != 0) {
     $_0_i = 1; //@line 42267
     label = 14320; //@line 42268
     break L18215;
    }
    $i_1_i = $i_1_i + 1 | 0; //@line 42273
   }
   $65 = $j_06_i + 1 | 0; //@line 42277
   if ($65 >>> 0 < (HEAP32[94] | 0) >>> 0) {
    $j_06_i = $65;
    $ofs_07_i = (HEAP32[95] | 0) + $ofs_07_i | 0;
   } else {
    $_0_i = 0; //@line 42284
    label = 14325; //@line 42285
    break;
   }
  }
  if ((label | 0) == 14321) {
   return $_0_i | 0; //@line 42292
  } else if ((label | 0) == 14325) {
   return $_0_i | 0; //@line 42297
  } else if ((label | 0) == 14326) {
   return $_0_i | 0; //@line 42302
  } else if ((label | 0) == 14320) {
   return $_0_i | 0; //@line 42307
  }
 } else if ((label | 0) == 14323) {
  return $_0_i | 0; //@line 42313
 }
 return 0;
}
function _psi_read($fp, $buf, $cnt) {
 $fp = $fp | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 return (_fread($buf | 0, 1, $cnt | 0, $fp | 0) | 0) != ($cnt | 0) | 0; //@line 42329
}
function _psi_read_ofs($fp, $ofs, $buf, $cnt) {
 $fp = $fp | 0;
 $ofs = $ofs | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 var $_0 = 0;
 if ((_fseek($fp | 0, $ofs | 0, 0) | 0) != 0) {
  $_0 = 1; //@line 42345
  return $_0 | 0; //@line 42348
 }
 $_0 = (_fread($buf | 0, 1, $cnt | 0, $fp | 0) | 0) != ($cnt | 0) | 0; //@line 42354
 return $_0 | 0; //@line 42357
}
function _psi_write($fp, $buf, $cnt) {
 $fp = $fp | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 return (_fwrite($buf | 0, 1, $cnt | 0, $fp | 0) | 0) != ($cnt | 0) | 0; //@line 42372
}
function _psi_write_ofs($fp, $ofs, $buf, $cnt) {
 $fp = $fp | 0;
 $ofs = $ofs | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 var $_0 = 0;
 if ((_fseek($fp | 0, $ofs | 0, 0) | 0) != 0) {
  $_0 = 1; //@line 42388
  return $_0 | 0; //@line 42391
 }
 $_0 = (_fwrite($buf | 0, 1, $cnt | 0, $fp | 0) | 0) != ($cnt | 0) | 0; //@line 42397
 return $_0 | 0; //@line 42400
}
function _psi_skip($fp, $cnt) {
 $fp = $fp | 0;
 $cnt = $cnt | 0;
 var $1 = 0, $_07 = 0, $6 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 42410
 STACKTOP = STACKTOP + 256 | 0; //@line 42410
 $1 = sp | 0; //@line 42412
 $_07 = $cnt; //@line 42414
 while (1) {
  if (($_07 | 0) == 0) {
   $_0 = 0; //@line 42420
   label = 14343; //@line 42421
   break;
  }
  $6 = $_07 >>> 0 < 256 ? $_07 : 256; //@line 42425
  if ((_fread($1 | 0, 1, $6 | 0, $fp | 0) | 0) == ($6 | 0)) {
   $_07 = $_07 - $6 | 0; //@line 42431
  } else {
   $_0 = 1; //@line 42433
   label = 14344; //@line 42434
   break;
  }
 }
 if ((label | 0) == 14344) {
  STACKTOP = sp; //@line 42440
  return $_0 | 0; //@line 42441
 } else if ((label | 0) == 14343) {
  STACKTOP = sp; //@line 42445
  return $_0 | 0; //@line 42446
 }
 return 0;
}
function _snd_iir2_init($iir) {
 $iir = $iir | 0;
 _memset($iir | 0, 0, 48); //@line 42458
 HEAP32[$iir >> 2] = 8192; //@line 42459
 return;
}
function _snd_iir2_reset($iir) {
 $iir = $iir | 0;
 _memset($iir + 24 | 0, 0, 24); //@line 42472
 return;
}
function _snd_iir2_set_lowpass($iir, $freq, $srate) {
 $iir = $iir | 0;
 $freq = $freq | 0;
 $srate = $srate | 0;
 var $1 = 0, $_0 = 0, $17 = 0.0, $20 = 0.0, $22 = 0;
 $1 = $iir | 0; //@line 42489
 _memset($iir | 0, 0, 48); //@line 42491
 HEAP32[$1 >> 2] = 8192; //@line 42492
 if (($freq | 0) == 0 | ($srate | 0) == 0) {
  return;
 }
 if ($freq << 1 >>> 0 < $srate >>> 0) {
  $_0 = $freq; //@line 42505
 } else {
  $_0 = ($srate >>> 1) - 1 | 0; //@line 42510
 }
 $17 = 1.0 / +Math_tan(+(+($_0 >>> 0 >>> 0) * 3.141592653589793 / +($srate >>> 0 >>> 0))); //@line 42518
 $20 = $17 * ($17 + 1.4142135623730951) + 1.0; //@line 42521
 $22 = ~~(8192.0 / $20); //@line 42523
 HEAP32[$1 >> 2] = $22; //@line 42524
 HEAP32[$iir + 4 >> 2] = ~~(16384.0 / $20); //@line 42528
 HEAP32[$iir + 8 >> 2] = $22; //@line 42530
 HEAP32[$iir + 12 >> 2] = 8192; //@line 42532
 HEAP32[$iir + 16 >> 2] = ~~((1.0 - $17 * $17) * 16384.0 / $20); //@line 42539
 HEAP32[$iir + 20 >> 2] = ~~(($17 * ($17 - 1.4142135623730951) + 1.0) * 8192.0 / $20); //@line 42547
 return;
}
function _snd_get_bbuf($sdrv, $cnt) {
 $sdrv = $sdrv | 0;
 $cnt = $cnt | 0;
 var $1 = 0, $4 = 0, $5 = 0, $7 = 0, $_0 = 0;
 $1 = $sdrv + 788 | 0; //@line 42560
 $4 = $sdrv + 792 | 0; //@line 42563
 $5 = HEAP32[$4 >> 2] | 0; //@line 42564
 if ((HEAP32[$1 >> 2] | 0) >>> 0 >= $cnt >>> 0) {
  $_0 = $5; //@line 42567
  return $_0 | 0; //@line 42570
 }
 $7 = _realloc($5, $cnt) | 0; //@line 42572
 if (($7 | 0) == 0) {
  $_0 = 0; //@line 42576
  return $_0 | 0; //@line 42579
 }
 HEAP32[$4 >> 2] = $7; //@line 42581
 HEAP32[$1 >> 2] = $cnt; //@line 42582
 $_0 = $7; //@line 42584
 return $_0 | 0; //@line 42587
}
function _snd_init($sdrv, $ext) {
 $sdrv = $sdrv | 0;
 $ext = $ext | 0;
 HEAP32[$sdrv >> 2] = $ext; //@line 42599
 _memset($sdrv + 4 | 0, 0, 16); //@line 42604
 _memset($sdrv + 788 | 0, 0, 24); //@line 42606
 HEAP8[$sdrv + 812 | 0] = 1; //@line 42607
 HEAP32[$sdrv + 816 >> 2] = 0; //@line 42609
 HEAP32[$sdrv + 820 >> 2] = 0; //@line 42611
 HEAP32[$sdrv + 824 >> 2] = 0; //@line 42613
 return;
}
function _snd_close($sdrv) {
 $sdrv = $sdrv | 0;
 var $4 = 0, $9 = 0, $15 = 0;
 if (($sdrv | 0) == 0) {
  return;
 }
 _snd_wav_close($sdrv); //@line 42631
 $4 = HEAP32[$sdrv + 816 >> 2] | 0; //@line 42633
 if (($4 | 0) != 0) {
  FUNCTION_TABLE_vi[$4 & 1023]($sdrv); //@line 42637
 }
 $9 = HEAP32[$sdrv + 800 >> 2] | 0; //@line 42641
 if (($9 | 0) != 0) {
  _free($9); //@line 42646
 }
 $15 = HEAP32[$sdrv + 792 >> 2] | 0; //@line 42650
 if (($15 | 0) == 0) {
  return;
 }
 _free($15); //@line 42657
 return;
}
function _snd_write($sdrv, $buf, $cnt) {
 $sdrv = $sdrv | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 var $3 = 0, $11 = 0, $13 = 0, $14 = 0, $17 = 0, $18 = 0, $22 = 0, $25 = 0, $_0_i_i = 0, $27 = 0, $29 = 0, $31 = 0, $i_018_i = 0, $36 = 0, $37 = 0, $_0_i = 0, $40 = 0, $_0 = 0;
 if (($sdrv | 0) == 0) {
  $_0 = 1; //@line 42679
  return $_0 | 0; //@line 42682
 }
 $3 = $sdrv + 820 | 0; //@line 42684
 if ((HEAP32[$3 >> 2] | 0) == 0) {
  $_0 = 1; //@line 42689
  return $_0 | 0; //@line 42692
 }
 do {
  if ((HEAP32[$sdrv + 16 >> 2] | 0) == 0) {
   $_0_i = $buf; //@line 42700
  } else {
   $11 = $sdrv + 4 | 0; //@line 42702
   $13 = Math_imul(HEAP32[$11 >> 2] | 0, $cnt) | 0; //@line 42704
   $14 = $sdrv + 796 | 0; //@line 42705
   $17 = $sdrv + 800 | 0; //@line 42708
   $18 = HEAP32[$17 >> 2] | 0; //@line 42709
   if ((HEAP32[$14 >> 2] | 0) >>> 0 < $13 >>> 0) {
    $22 = _realloc($18, $13 << 1) | 0; //@line 42714
    if (($22 | 0) == 0) {
     $_0_i = 0; //@line 42718
     break;
    }
    $25 = $22; //@line 42721
    HEAP32[$17 >> 2] = $25; //@line 42722
    HEAP32[$14 >> 2] = $13; //@line 42723
    $_0_i_i = $25; //@line 42725
   } else {
    $_0_i_i = $18; //@line 42727
   }
   if (($_0_i_i | 0) == 0) {
    $_0_i = 0; //@line 42733
    break;
   }
   $27 = HEAP32[$11 >> 2] | 0; //@line 42736
   if (($27 | 0) == 0) {
    $_0_i = $_0_i_i; //@line 42740
    break;
   }
   $29 = $sdrv + 12 | 0; //@line 42743
   $i_018_i = 0;
   $31 = $27;
   while (1) {
    _snd_iir2_filter($sdrv + 20 + ($i_018_i * 48 | 0) | 0, $_0_i_i + ($i_018_i << 1) | 0, $buf + ($i_018_i << 1) | 0, $cnt, $31, HEAP32[$29 >> 2] | 0); //@line 42753
    $36 = $i_018_i + 1 | 0; //@line 42754
    $37 = HEAP32[$11 >> 2] | 0; //@line 42755
    if ($36 >>> 0 < $37 >>> 0) {
     $i_018_i = $36;
     $31 = $37;
    } else {
     $_0_i = $_0_i_i; //@line 42761
     break;
    }
   }
  }
 } while (0);
 $40 = FUNCTION_TABLE_iiii[HEAP32[$3 >> 2] & 127]($sdrv, $_0_i, $cnt) | 0; //@line 42769
 _snd_wav_write($sdrv, (HEAP8[$sdrv + 812 | 0] | 0) != 0 ? $_0_i : $buf, $cnt) | 0; //@line 42774
 $_0 = $40; //@line 42776
 return $_0 | 0; //@line 42779
}
function _snd_null_write($sdrv, $buf, $cnt) {
 $sdrv = $sdrv | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 return 0; //@line 42790
}
function _snd_null_set_params($sdrv, $chn, $srate, $sign) {
 $sdrv = $sdrv | 0;
 $chn = $chn | 0;
 $srate = $srate | 0;
 $sign = $sign | 0;
 return 0; //@line 42802
}
function _snd_set_params($sdrv, $chn, $srate, $sign) {
 $sdrv = $sdrv | 0;
 $chn = $chn | 0;
 $srate = $srate | 0;
 $sign = $sign | 0;
 var $4 = 0, $8 = 0, $11 = 0, $24 = 0, $31 = 0, $i_08_i = 0, $33 = 0, $36 = 0, $_0 = 0;
 if (($sdrv | 0) == 0) {
  $_0 = 1; //@line 42821
  return $_0 | 0; //@line 42824
 }
 $4 = HEAP32[$sdrv + 824 >> 2] | 0; //@line 42827
 if (($4 | 0) == 0) {
  $_0 = 1; //@line 42831
  return $_0 | 0; //@line 42834
 }
 $8 = ($sign | 0) != 0 | 0; //@line 42837
 if ($chn >>> 0 > 16) {
  $_0 = 1; //@line 42841
  return $_0 | 0; //@line 42844
 }
 $11 = $sdrv + 4 | 0; //@line 42846
 do {
  if ((HEAP32[$11 >> 2] | 0) == ($chn | 0)) {
   if ((HEAP32[$sdrv + 8 >> 2] | 0) != ($srate | 0)) {
    break;
   }
   if ((HEAP32[$sdrv + 12 >> 2] | 0) == ($8 | 0)) {
    $_0 = 0; //@line 42864
   } else {
    break;
   }
   return $_0 | 0; //@line 42870
  }
 } while (0);
 if ((FUNCTION_TABLE_iiiii[$4 & 127]($sdrv, $chn, $srate, $8) | 0) != 0) {
  $_0 = 1; //@line 42877
  return $_0 | 0; //@line 42880
 }
 HEAP32[$11 >> 2] = $chn; //@line 42882
 $24 = $sdrv + 8 | 0; //@line 42883
 HEAP32[$24 >> 2] = $srate; //@line 42884
 HEAP32[$sdrv + 12 >> 2] = $8; //@line 42886
 if ((_snd_wav_set_params($sdrv, $chn, $srate, $8) | 0) != 0) {
  $_0 = 1; //@line 42891
  return $_0 | 0; //@line 42894
 }
 if ((HEAP32[$11 >> 2] | 0) == 0) {
  $_0 = 0; //@line 42900
  return $_0 | 0; //@line 42903
 }
 $31 = $sdrv + 16 | 0; //@line 42905
 $i_08_i = 0; //@line 42907
 while (1) {
  $33 = $sdrv + 20 + ($i_08_i * 48 | 0) | 0; //@line 42910
  _snd_iir2_set_lowpass($33, HEAP32[$31 >> 2] | 0, HEAP32[$24 >> 2] | 0); //@line 42913
  _snd_iir2_reset($33); //@line 42914
  $36 = $i_08_i + 1 | 0; //@line 42915
  if ($36 >>> 0 < (HEAP32[$11 >> 2] | 0) >>> 0) {
   $i_08_i = $36; //@line 42920
  } else {
   $_0 = 0; //@line 42922
   break;
  }
 }
 return $_0 | 0; //@line 42928
}
function _snd_open($name) {
 $name = $name | 0;
 var $1 = 0, $d_016 = 0, $s_015 = 0, $5 = 0, $6 = 0, $7 = 0, $s_013 = 0, $10 = 0, $i_019_lcssa = 0, $14 = 0, $21 = 0, $26 = 0, $32 = 0, $39 = 0, $40 = 0, $41 = 0, $44 = 0, $45 = 0, $49 = 0, $50 = 0, $52 = 0, $_0 = 0, $55 = 0, $d_016_1 = 0, $s_015_1 = 0, $60 = 0, $61 = 0, $62 = 0, $s_013_1 = 0, $64 = 0, $65 = 0, $d_016_2 = 0, $s_015_2 = 0, $70 = 0, $71 = 0, $72 = 0, $s_013_2 = 0, $74 = 0, label = 0;
 $s_015 = $name;
 $d_016 = 49864;
 $1 = 110;
 while (1) {
  if ($1 << 24 >> 24 != (HEAP8[$s_015] | 0)) {
   label = 14413; //@line 42955
   break;
  }
  $5 = $d_016 + 1 | 0; //@line 42958
  $6 = $s_015 + 1 | 0; //@line 42959
  $7 = HEAP8[$5] | 0; //@line 42960
  if ($7 << 24 >> 24 == 0) {
   $s_013 = $6; //@line 42964
   label = 14414; //@line 42965
   break;
  } else {
   $s_015 = $6;
   $d_016 = $5;
   $1 = $7;
  }
 }
 if ((label | 0) == 14413) {
  if ((HEAP8[$d_016] | 0) == 0) {
   $s_013 = $s_015; //@line 42976
   label = 14414; //@line 42977
  } else {
   $s_015_1 = $name;
   $d_016_1 = 46040;
   $55 = 119;
   label = 14427; //@line 42980
  }
 }
 if ((label | 0) == 14414) {
  $10 = HEAP8[$s_013] | 0; //@line 42985
  if (($10 << 24 >> 24 | 0) == 58 | ($10 << 24 >> 24 | 0) == 0) {
   $i_019_lcssa = 0;
  } else {
   $s_015_1 = $name;
   $d_016_1 = 46040;
   $55 = 119;
   label = 14427; //@line 42990
  }
 }
 do {
  if ((label | 0) == 14427) {
   while (1) {
    label = 0; //@line 42996
    if ($55 << 24 >> 24 != (HEAP8[$s_015_1] | 0)) {
     label = 14428; //@line 43003
     break;
    }
    $60 = $d_016_1 + 1 | 0; //@line 43006
    $61 = $s_015_1 + 1 | 0; //@line 43007
    $62 = HEAP8[$60] | 0; //@line 43008
    if ($62 << 24 >> 24 == 0) {
     $s_013_1 = $61; //@line 43012
     label = 14430; //@line 43013
     break;
    } else {
     $s_015_1 = $61;
     $d_016_1 = $60;
     $55 = $62;
     label = 14427; //@line 43017
    }
   }
   if ((label | 0) == 14428) {
    if ((HEAP8[$d_016_1] | 0) == 0) {
     $s_013_1 = $s_015_1; //@line 43025
     label = 14430; //@line 43026
    } else {
     $s_015_2 = $name;
     $d_016_2 = 42592;
     $65 = 115;
    }
   }
   if ((label | 0) == 14430) {
    $64 = HEAP8[$s_013_1] | 0; //@line 43033
    if (($64 << 24 >> 24 | 0) == 58 | ($64 << 24 >> 24 | 0) == 0) {
     $i_019_lcssa = 1;
     break;
    } else {
     $s_015_2 = $name;
     $d_016_2 = 42592;
     $65 = 115;
    }
   }
   while (1) {
    if ($65 << 24 >> 24 != (HEAP8[$s_015_2] | 0)) {
     label = 14432; //@line 43048
     break;
    }
    $70 = $d_016_2 + 1 | 0; //@line 43051
    $71 = $s_015_2 + 1 | 0; //@line 43052
    $72 = HEAP8[$70] | 0; //@line 43053
    if ($72 << 24 >> 24 == 0) {
     $s_013_2 = $71; //@line 43057
     break;
    } else {
     $s_015_2 = $71;
     $d_016_2 = $70;
     $65 = $72;
    }
   }
   do {
    if ((label | 0) == 14432) {
     if ((HEAP8[$d_016_2] | 0) == 0) {
      $s_013_2 = $s_015_2; //@line 43069
      break;
     } else {
      $_0 = 0; //@line 43072
     }
     return $_0 | 0; //@line 43076
    }
   } while (0);
   $74 = HEAP8[$s_013_2] | 0; //@line 43080
   if (($74 << 24 >> 24 | 0) == 58 | ($74 << 24 >> 24 | 0) == 0) {
    $i_019_lcssa = 2;
    break;
   } else {
    $_0 = 0; //@line 43085
   }
   return $_0 | 0; //@line 43089
  }
 } while (0);
 $14 = FUNCTION_TABLE_ii[HEAP32[29020 + ($i_019_lcssa << 3) >> 2] & 31]($name) | 0; //@line 43095
 if (($14 | 0) == 0) {
  $_0 = 0; //@line 43099
  return $_0 | 0; //@line 43102
 }
 if ((_snd_wav_init($14, $name) | 0) == 0) {
  HEAP8[$14 + 812 | 0] = (_drv_get_option_bool($name, 52128, 1) | 0) & 255; //@line 43111
  $39 = _drv_get_option_uint($name, 56336, 0) | 0; //@line 43112
  $40 = $14 + 16 | 0; //@line 43113
  HEAP32[$40 >> 2] = $39; //@line 43114
  $41 = $14 + 4 | 0; //@line 43115
  if ((HEAP32[$41 >> 2] | 0) == 0) {
   $_0 = $14; //@line 43120
   return $_0 | 0; //@line 43123
  }
  $44 = $14 + 8 | 0; //@line 43125
  $45 = $14 + 20 | 0; //@line 43126
  _snd_iir2_set_lowpass($45, $39, HEAP32[$44 >> 2] | 0); //@line 43128
  _snd_iir2_reset($45); //@line 43129
  if ((HEAP32[$41 >> 2] | 0) >>> 0 > 1) {
   $49 = 1; //@line 43134
  } else {
   $_0 = $14; //@line 43136
   return $_0 | 0; //@line 43139
  }
  while (1) {
   $50 = $14 + 20 + ($49 * 48 | 0) | 0; //@line 43144
   _snd_iir2_set_lowpass($50, HEAP32[$40 >> 2] | 0, HEAP32[$44 >> 2] | 0); //@line 43146
   _snd_iir2_reset($50); //@line 43147
   $52 = $49 + 1 | 0; //@line 43148
   if ($52 >>> 0 < (HEAP32[$41 >> 2] | 0) >>> 0) {
    $49 = $52; //@line 43153
   } else {
    $_0 = $14; //@line 43155
    break;
   }
  }
  return $_0 | 0; //@line 43161
 }
 _snd_wav_close($14); //@line 43163
 $21 = HEAP32[$14 + 816 >> 2] | 0; //@line 43165
 if (($21 | 0) != 0) {
  FUNCTION_TABLE_vi[$21 & 1023]($14); //@line 43169
 }
 $26 = HEAP32[$14 + 800 >> 2] | 0; //@line 43173
 if (($26 | 0) != 0) {
  _free($26); //@line 43178
 }
 $32 = HEAP32[$14 + 792 >> 2] | 0; //@line 43182
 if (($32 | 0) == 0) {
  $_0 = 0; //@line 43186
  return $_0 | 0; //@line 43189
 }
 _free($32); //@line 43191
 $_0 = 0; //@line 43193
 return $_0 | 0; //@line 43196
}
function _snd_null_open($name) {
 $name = $name | 0;
 var $1 = 0, $4 = 0, $_0 = 0;
 $1 = _malloc(828) | 0; //@line 43206
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 43210
  return $_0 | 0; //@line 43213
 }
 $4 = $1; //@line 43215
 _snd_init($4, $1); //@line 43216
 HEAP32[$1 + 816 >> 2] = 464; //@line 43219
 HEAP32[$1 + 820 >> 2] = 26; //@line 43222
 HEAP32[$1 + 824 >> 2] = 40; //@line 43225
 $_0 = $4; //@line 43227
 return $_0 | 0; //@line 43230
}
function _snd_null_close($sdrv) {
 $sdrv = $sdrv | 0;
 _free(HEAP32[$sdrv >> 2] | 0); //@line 43241
 return;
}
function _snd_sdl_open($name) {
 $name = $name | 0;
 var $1 = 0, $4 = 0, $_0 = 0;
 $1 = _malloc(856) | 0; //@line 43253
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 43257
  return $_0 | 0; //@line 43260
 }
 $4 = $1; //@line 43262
 _snd_init($4, $1); //@line 43263
 HEAP32[$1 + 816 >> 2] = 6; //@line 43266
 HEAP32[$1 + 820 >> 2] = 82; //@line 43269
 HEAP32[$1 + 824 >> 2] = 4; //@line 43272
 HEAP8[$1 + 828 | 0] = 0; //@line 43274
 HEAP8[$1 + 829 | 0] = 1; //@line 43276
 _memset($1 + 840 | 0, 0, 16); //@line 43278
 $_0 = $4; //@line 43280
 return $_0 | 0; //@line 43283
}
function _snd_sdl_close($sdrv) {
 $sdrv = $sdrv | 0;
 var $2 = 0, $10 = 0, $_04_i = 0, $13 = 0, $20 = 0, $_04_i4 = 0, $23 = 0;
 $2 = HEAP32[$sdrv >> 2] | 0; //@line 43296
 if ((HEAP8[$2 + 828 | 0] | 0) != 0) {
  _SDL_CloseAudio(); //@line 43302
 }
 $10 = HEAP32[$2 + 844 >> 2] | 0; //@line 43307
 if (($10 | 0) != 0) {
  $_04_i = $10; //@line 43311
  while (1) {
   $13 = HEAP32[$_04_i >> 2] | 0; //@line 43315
   _free(HEAP32[$_04_i + 16 >> 2] | 0); //@line 43318
   _free($_04_i); //@line 43320
   if (($13 | 0) == 0) {
    break;
   } else {
    $_04_i = $13; //@line 43326
   }
  }
 }
 $20 = HEAP32[$2 + 852 >> 2] | 0; //@line 43332
 if (($20 | 0) == 0) {
  _free($2); //@line 43336
  return;
 } else {
  $_04_i4 = $20; //@line 43340
 }
 while (1) {
  $23 = HEAP32[$_04_i4 >> 2] | 0; //@line 43345
  _free(HEAP32[$_04_i4 + 16 >> 2] | 0); //@line 43348
  _free($_04_i4); //@line 43350
  if (($23 | 0) == 0) {
   break;
  } else {
   $_04_i4 = $23; //@line 43356
  }
 }
 _free($2); //@line 43359
 return;
}
function _snd_sdl_write($sdrv, $buf, $cnt) {
 $sdrv = $sdrv | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 var $2 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, $16 = 0, $17 = 0, $20 = 0, $buf_0_i = 0, $31 = 0, $32 = 0, $33 = 0, $37 = 0, $39 = 0, $45 = 0, $64 = 0, $65 = 0, $73 = 0, $_0 = 0, label = 0;
 $2 = HEAP32[$sdrv >> 2] | 0; //@line 43381
 $5 = Math_imul(HEAP32[$sdrv + 4 >> 2] | 0, $cnt) | 0; //@line 43384
 $6 = $5 << 1; //@line 43385
 $8 = $2 + 852 | 0; //@line 43388
 $9 = HEAP32[$8 >> 2] | 0; //@line 43389
 do {
  if (($9 | 0) == 0) {
   $16 = $2 + 840 | 0; //@line 43395
   $17 = HEAP32[$16 >> 2] | 0; //@line 43396
   if ($17 >>> 0 > 32) {
    break;
   }
   $20 = _malloc(20) | 0; //@line 43402
   if (($20 | 0) == 0) {
    break;
   }
   HEAP32[$20 + 12 >> 2] = 0; //@line 43411
   HEAP32[$20 + 16 >> 2] = 0; //@line 43414
   HEAP32[$16 >> 2] = $17 + 1; //@line 43416
   $buf_0_i = $20; //@line 43417
   label = 14468; //@line 43418
  } else {
   HEAP32[$8 >> 2] = HEAP32[$9 >> 2]; //@line 43422
   $buf_0_i = $9; //@line 43424
   label = 14468; //@line 43425
  }
 } while (0);
 L18409 : do {
  if ((label | 0) == 14468) {
   HEAP32[$buf_0_i >> 2] = 0; //@line 43432
   $31 = $buf_0_i + 4 | 0; //@line 43433
   HEAP32[$31 >> 2] = 0; //@line 43434
   $32 = $buf_0_i + 8 | 0; //@line 43435
   HEAP32[$32 >> 2] = 0; //@line 43436
   $33 = $buf_0_i + 12 | 0; //@line 43437
   do {
    if ((HEAP32[$33 >> 2] | 0) >>> 0 < $6 >>> 0) {
     $37 = $buf_0_i + 16 | 0; //@line 43443
     $39 = _realloc(HEAP32[$37 >> 2] | 0, $6) | 0; //@line 43445
     if (($39 | 0) == 0) {
      _free(HEAP32[$37 >> 2] | 0); //@line 43450
      _free($buf_0_i); //@line 43452
      $45 = $2 + 840 | 0; //@line 43454
      HEAP32[$45 >> 2] = (HEAP32[$45 >> 2] | 0) - 1; //@line 43457
      break L18409;
     } else {
      HEAP32[$33 >> 2] = $6; //@line 43461
      HEAP32[$37 >> 2] = $39; //@line 43462
      break;
     }
    }
   } while (0);
   if (($buf_0_i | 0) == 0) {
    $_0 = 1; //@line 43472
    return $_0 | 0; //@line 43475
   }
   _snd_set_buf(HEAP32[$buf_0_i + 16 >> 2] | 0, $buf, $5, (HEAP32[$sdrv + 12 >> 2] | 0) != (HEAP32[$2 + 832 >> 2] | 0) | 0, HEAP32[$2 + 836 >> 2] | 0); //@line 43489
   HEAP32[$31 >> 2] = 0; //@line 43490
   HEAP32[$32 >> 2] = $6; //@line 43491
   $64 = $2 + 848 | 0; //@line 43494
   $65 = HEAP32[$64 >> 2] | 0; //@line 43495
   if (($65 | 0) == 0) {
    HEAP32[$2 + 844 >> 2] = $buf_0_i; //@line 43501
   } else {
    HEAP32[$65 >> 2] = $buf_0_i; //@line 43505
   }
   HEAP32[$64 >> 2] = $buf_0_i; //@line 43507
   $73 = $2 + 829 | 0; //@line 43509
   if ((HEAP8[$73] | 0) == 0) {
    $_0 = 0; //@line 43514
    return $_0 | 0; //@line 43517
   }
   _SDL_PauseAudio(0); //@line 43519
   HEAP8[$73] = 0; //@line 43520
   $_0 = 0; //@line 43522
   return $_0 | 0; //@line 43525
  }
 } while (0);
 $_0 = 1; //@line 43530
 return $_0 | 0; //@line 43533
}
function _snd_sdl_set_params($sdrv, $chn, $srate, $sign) {
 $sdrv = $sdrv | 0;
 $chn = $chn | 0;
 $srate = $srate | 0;
 $sign = $sign | 0;
 var $req = 0, $2 = 0, $9 = 0, $10 = 0, $13 = 0, $28 = 0, $29 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 43547
 STACKTOP = STACKTOP + 24 | 0; //@line 43547
 $req = sp | 0; //@line 43548
 $2 = HEAP32[$sdrv >> 2] | 0; //@line 43550
 do {
  if ((_SDL_WasInit(16) | 0) == 0) {
   if ((_SDL_InitSubSystem(16) | 0) >= 0) {
    break;
   }
   $9 = HEAP32[_stderr >> 2] | 0; //@line 43562
   $10 = _SDL_GetError() | 0; //@line 43563
   _fprintf($9 | 0, 52048, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $10, tempInt) | 0) | 0; //@line 43564
   $_0 = 1; //@line 43566
   STACKTOP = sp; //@line 43568
   return $_0 | 0; //@line 43569
  }
 } while (0);
 $13 = $2 + 828 | 0; //@line 43572
 if ((HEAP8[$13] | 0) != 0) {
  _SDL_CloseAudio(); //@line 43577
  HEAP8[$13] = 0; //@line 43578
 }
 HEAP32[$req >> 2] = $srate; //@line 43582
 HEAP16[$req + 4 >> 1] = -32752; //@line 43584
 HEAP8[$req + 6 | 0] = $chn & 255; //@line 43587
 HEAP16[$req + 8 >> 1] = 1024; //@line 43589
 HEAP32[$req + 16 >> 2] = 8; //@line 43591
 HEAP32[$req + 20 >> 2] = $2; //@line 43593
 if ((_SDL_OpenAudio($req | 0, 0) | 0) < 0) {
  $28 = HEAP32[_stderr >> 2] | 0; //@line 43598
  $29 = _SDL_GetError() | 0; //@line 43599
  _fprintf($28 | 0, 56296, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $29, tempInt) | 0) | 0; //@line 43600
  $_0 = 1; //@line 43602
  STACKTOP = sp; //@line 43604
  return $_0 | 0; //@line 43605
 } else {
  _SDL_PauseAudio(1); //@line 43607
  HEAP8[$13] = 1; //@line 43608
  HEAP8[$2 + 829 | 0] = 1; //@line 43610
  HEAP32[$2 + 832 >> 2] = 1; //@line 43613
  HEAP32[$2 + 836 >> 2] = 0; //@line 43616
  $_0 = 0; //@line 43618
  STACKTOP = sp; //@line 43620
  return $_0 | 0; //@line 43621
 }
 return 0;
}
function _snd_sdl_callback($user, $buf, $cnt) {
 $user = $user | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 var $2 = 0, $3 = 0, $7 = 0, $9 = 0, $16 = 0, $17 = 0, $18 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $32 = 0, $_0_ph37 = 0, $_028_ph36 = 0, label = 0;
 $2 = $user + 844 | 0; //@line 43638
 $3 = HEAP32[$2 >> 2] | 0; //@line 43639
 if (($3 | 0) == 0) {
  _SDL_PauseAudio(1); //@line 43643
  HEAP8[$user + 829 | 0] = 1; //@line 43645
  return;
 }
 if (($cnt | 0) <= 0) {
  return;
 }
 $7 = $user + 848 | 0; //@line 43657
 $9 = $user + 852 | 0; //@line 43659
 $_028_ph36 = $cnt;
 $_0_ph37 = $buf;
 $32 = $3;
 while (1) {
  if (($32 | 0) == 0) {
   label = 14500; //@line 43669
   break;
  }
  $16 = $32 + 4 | 0; //@line 43674
  $17 = HEAP32[$16 >> 2] | 0; //@line 43675
  $18 = (HEAP32[$32 + 8 >> 2] | 0) - $17 | 0; //@line 43676
  $22 = (HEAP32[$32 + 16 >> 2] | 0) + $17 | 0; //@line 43680
  if (($18 | 0) > ($_028_ph36 | 0)) {
   label = 14507; //@line 43683
   break;
  }
  _memcpy($_0_ph37 | 0, $22 | 0, $18) | 0; //@line 43686
  $25 = $_028_ph36 - $18 | 0; //@line 43688
  $26 = $32 | 0; //@line 43689
  $27 = HEAP32[$26 >> 2] | 0; //@line 43690
  HEAP32[$2 >> 2] = $27; //@line 43691
  if (($27 | 0) == 0) {
   HEAP32[$7 >> 2] = 0; //@line 43695
  }
  HEAP32[$26 >> 2] = HEAP32[$9 >> 2]; //@line 43699
  HEAP32[$9 >> 2] = $32; //@line 43700
  if (($25 | 0) <= 0) {
   label = 14509; //@line 43704
   break;
  }
  $_028_ph36 = $25;
  $_0_ph37 = $_0_ph37 + $18 | 0;
  $32 = HEAP32[$2 >> 2] | 0;
 }
 if ((label | 0) == 14509) {
  return;
 } else if ((label | 0) == 14507) {
  _memcpy($_0_ph37 | 0, $22 | 0, $_028_ph36) | 0; //@line 43716
  HEAP32[$16 >> 2] = (HEAP32[$16 >> 2] | 0) + $_028_ph36; //@line 43719
  return;
 } else if ((label | 0) == 14500) {
  _memset($_0_ph37 | 0, 0, $_028_ph36 | 0); //@line 43725
  return;
 }
}
function _snd_wav_close($sdrv) {
 $sdrv = $sdrv | 0;
 if ((HEAP32[$sdrv + 804 >> 2] | 0) == 0) {
  return;
 }
 _snd_wav_write_header($sdrv) | 0; //@line 43746
 return;
}
function _snd_wav_write_header($sdrv) {
 $sdrv = $sdrv | 0;
 var $buf = 0, $1 = 0, $6 = 0, $10 = 0, $11 = 0, $12 = 0, $39 = 0, $46 = 0, $58 = 0, $59 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 43769
 STACKTOP = STACKTOP + 64 | 0; //@line 43769
 $buf = sp | 0; //@line 43770
 $1 = $sdrv + 804 | 0; //@line 43771
 if ((_fseek(HEAP32[$1 >> 2] | 0, 0, 0) | 0) != 0) {
  $_0 = 1; //@line 43777
  STACKTOP = sp; //@line 43779
  return $_0 | 0; //@line 43780
 }
 $6 = $buf | 0; //@line 43782
 HEAP8[$6] = 82; //@line 43783
 HEAP8[$buf + 1 | 0] = 73; //@line 43785
 HEAP8[$buf + 2 | 0] = 70; //@line 43787
 HEAP8[$buf + 3 | 0] = 70; //@line 43789
 $10 = $sdrv + 808 | 0; //@line 43790
 $11 = HEAP32[$10 >> 2] | 0; //@line 43791
 $12 = $11 + 36 | 0; //@line 43792
 HEAP8[$buf + 4 | 0] = $12 & 255; //@line 43795
 HEAP8[$buf + 5 | 0] = $12 >>> 8 & 255; //@line 43799
 HEAP8[$buf + 6 | 0] = $12 >>> 16 & 255; //@line 43803
 HEAP8[$buf + 7 | 0] = $12 >>> 24 & 255; //@line 43807
 HEAP8[$buf + 8 | 0] = 87; //@line 43809
 HEAP8[$buf + 9 | 0] = 65; //@line 43811
 HEAP8[$buf + 10 | 0] = 86; //@line 43813
 HEAP8[$buf + 11 | 0] = 69; //@line 43815
 HEAP8[$buf + 12 | 0] = 102; //@line 43817
 HEAP8[$buf + 13 | 0] = 109; //@line 43819
 HEAP8[$buf + 14 | 0] = 116; //@line 43821
 HEAP8[$buf + 15 | 0] = 32; //@line 43823
 HEAP8[$buf + 16 | 0] = 16; //@line 43825
 HEAP8[$buf + 17 | 0] = 0; //@line 43827
 HEAP8[$buf + 18 | 0] = 0; //@line 43829
 HEAP8[$buf + 19 | 0] = 0; //@line 43831
 HEAP8[$buf + 20 | 0] = 1; //@line 43833
 HEAP8[$buf + 21 | 0] = 0; //@line 43835
 $39 = HEAP32[$sdrv + 4 >> 2] | 0; //@line 43837
 HEAP8[$buf + 22 | 0] = $39 & 255; //@line 43840
 HEAP8[$buf + 23 | 0] = $39 >>> 8 & 255; //@line 43844
 $46 = HEAP32[$sdrv + 8 >> 2] | 0; //@line 43846
 HEAP8[$buf + 24 | 0] = $46 & 255; //@line 43849
 HEAP8[$buf + 25 | 0] = $46 >>> 8 & 255; //@line 43853
 HEAP8[$buf + 26 | 0] = $46 >>> 16 & 255; //@line 43857
 HEAP8[$buf + 27 | 0] = $46 >>> 24 & 255; //@line 43861
 $58 = $39 << 1; //@line 43862
 $59 = Math_imul($58, $46) | 0; //@line 43863
 HEAP8[$buf + 28 | 0] = $59 & 255; //@line 43866
 HEAP8[$buf + 29 | 0] = $59 >>> 8 & 255; //@line 43870
 HEAP8[$buf + 30 | 0] = $59 >>> 16 & 255; //@line 43874
 HEAP8[$buf + 31 | 0] = $59 >>> 24 & 255; //@line 43878
 HEAP8[$buf + 32 | 0] = $58 & 255; //@line 43881
 HEAP8[$buf + 33 | 0] = $39 >>> 7 & 255; //@line 43885
 HEAP8[$buf + 34 | 0] = 16; //@line 43887
 HEAP8[$buf + 35 | 0] = 0; //@line 43889
 HEAP8[$buf + 36 | 0] = 100; //@line 43891
 HEAP8[$buf + 37 | 0] = 97; //@line 43893
 HEAP8[$buf + 38 | 0] = 116; //@line 43895
 HEAP8[$buf + 39 | 0] = 97; //@line 43897
 HEAP8[$buf + 40 | 0] = $11 & 255; //@line 43900
 HEAP8[$buf + 41 | 0] = $11 >>> 8 & 255; //@line 43904
 HEAP8[$buf + 42 | 0] = $11 >>> 16 & 255; //@line 43908
 HEAP8[$buf + 43 | 0] = $11 >>> 24 & 255; //@line 43912
 if ((_fwrite($6 | 0, 1, 44, HEAP32[$1 >> 2] | 0) | 0) != 44) {
  $_0 = 1; //@line 43918
  STACKTOP = sp; //@line 43920
  return $_0 | 0; //@line 43921
 }
 $_0 = (_fseek(HEAP32[$1 >> 2] | 0, (HEAP32[$10 >> 2] | 0) + 44 | 0, 0) | 0) != 0 | 0; //@line 43930
 STACKTOP = sp; //@line 43932
 return $_0 | 0; //@line 43933
}
function _snd_wav_write($sdrv, $buf, $cnt) {
 $sdrv = $sdrv | 0;
 $buf = $buf | 0;
 $cnt = $cnt | 0;
 var $1 = 0, $7 = 0, $8 = 0, $9 = 0, $20 = 0, $_0 = 0;
 $1 = $sdrv + 804 | 0; //@line 43946
 if ((HEAP32[$1 >> 2] | 0) == 0) {
  $_0 = 0; //@line 43951
  return $_0 | 0; //@line 43954
 }
 $7 = Math_imul(HEAP32[$sdrv + 4 >> 2] | 0, $cnt) | 0; //@line 43958
 $8 = $7 << 1; //@line 43959
 $9 = _snd_get_bbuf($sdrv, $8) | 0; //@line 43960
 if (($buf | 0) == 0) {
  $_0 = 1; //@line 43964
  return $_0 | 0; //@line 43967
 }
 _snd_set_buf($9, $buf, $7, (HEAP32[$sdrv + 12 >> 2] | 0) == 0 | 0, 0); //@line 43973
 if ((_fwrite($9 | 0, 1, $8 | 0, HEAP32[$1 >> 2] | 0) | 0) != ($8 | 0)) {
  $_0 = 1; //@line 43979
  return $_0 | 0; //@line 43982
 }
 $20 = $sdrv + 808 | 0; //@line 43984
 HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + $8; //@line 43987
 $_0 = 0; //@line 43989
 return $_0 | 0; //@line 43992
}
function _bp_addr_match($bp, $seg, $addr) {
 $bp = $bp | 0;
 $seg = $seg | 0;
 $addr = $addr | 0;
 return (HEAP32[$bp + 28 >> 2] | 0) == (($seg << 4) + $addr | 0) | 0; //@line 44010
}
function _bp_segofs_match($bp, $seg, $addr) {
 $bp = $bp | 0;
 $seg = $seg | 0;
 $addr = $addr | 0;
 var $_0 = 0;
 do {
  if ((HEAP32[$bp + 24 >> 2] | 0) == ($seg | 0)) {
   if ((HEAP32[$bp + 28 >> 2] | 0) == ($addr | 0)) {
    $_0 = 1; //@line 44032
   } else {
    break;
   }
   return $_0 | 0; //@line 44038
  }
 } while (0);
 $_0 = 0; //@line 44042
 return $_0 | 0; //@line 44045
}
function _bps_init($bps) {
 $bps = $bps | 0;
 HEAP32[$bps >> 2] = 0; //@line 44055
 HEAP32[$bps + 4 >> 2] = 0; //@line 44057
 return;
}
function _snd_wav_set_params($sdrv, $chn, $srate, $sign) {
 $sdrv = $sdrv | 0;
 $chn = $chn | 0;
 $srate = $srate | 0;
 $sign = $sign | 0;
 var $_0 = 0;
 if ((HEAP32[$sdrv + 804 >> 2] | 0) == 0) {
  $_0 = 0; //@line 44076
  return $_0 | 0; //@line 44079
 }
 $_0 = (_snd_wav_write_header($sdrv) | 0) != 0 | 0; //@line 44085
 return $_0 | 0; //@line 44088
}
function _snd_wav_init($sdrv, $name) {
 $sdrv = $sdrv | 0;
 $name = $name | 0;
 var $1 = 0, $3 = 0, $_0 = 0;
 $1 = $sdrv + 804 | 0; //@line 44099
 HEAP32[$1 >> 2] = 0; //@line 44100
 HEAP32[$sdrv + 808 >> 2] = 0; //@line 44102
 $3 = _drv_get_option($name, 52016) | 0; //@line 44103
 if (($3 | 0) == 0) {
  $_0 = 0; //@line 44107
  return $_0 | 0; //@line 44110
 }
 if ((HEAP8[$3] | 0) == 0) {
  $_0 = 0; //@line 44116
  return $_0 | 0; //@line 44119
 }
 HEAP32[$1 >> 2] = _fopen($3 | 0, 56288) | 0; //@line 44122
 _free($3); //@line 44123
 $_0 = (HEAP32[$1 >> 2] | 0) == 0 | 0; //@line 44128
 return $_0 | 0; //@line 44131
}
function _drv_get_option($str, $name) {
 $str = $str | 0;
 $name = $name | 0;
 var $2 = 0, $_0627_us = 0, $_0_i_i_us = 0, $5 = 0, $6 = 0, $_0_i16_i_us = 0, $_0_i16_sink_i_us = 0, $7 = 0, $8 = 0, $_0_be_i17_i_us = 0, $10 = 0, $12 = 0, $_06_i_us = 0, $14 = 0, $_0_be_i_us = 0, $20 = 0, $_0627 = 0, $_0_i_i = 0, $24 = 0, $_01024_i21 = 0, $_025_i20 = 0, $28 = 0, $_0_i16_i = 0, $31 = 0, $_0_i16_sink_i = 0, $32 = 0, $33 = 0, $35 = 0, $_0_i16_sink_i_lcssa_lcssa = 0, $n_0_lcssa_i = 0, $38 = 0, $n_040_i = 0, $40 = 0, $_sum17 = 0, $n_0_be_i = 0, $46 = 0, $n_134_i = 0, $48 = 0, $50 = 0, $n_1_lcssa_i = 0, $53 = 0, $56 = 0, $j_031_i = 0, $i_030_i = 0, $58 = 0, $_sum16 = 0, $i_1_i = 0, $67 = 0, $j_0_lcssa_i = 0, $70 = 0, $73 = 0, $_06_i = 0, $75 = 0, $_0_be_i = 0, $81 = 0, $_0 = 0, label = 0;
 if (($str | 0) == 0) {
  $_0 = 0; //@line 44157
  return $_0 | 0; //@line 44160
 }
 $2 = HEAP8[$name] | 0; //@line 44162
 L18515 : do {
  if ($2 << 24 >> 24 == 0) {
   $_0627_us = $str; //@line 44166
   L18516 : while (1) {
    $_0_i_i_us = $_0627_us; //@line 44170
    while (1) {
     $5 = HEAP8[$_0_i_i_us] | 0; //@line 44173
     if (!(($5 << 24 >> 24 | 0) == 32 | ($5 << 24 >> 24 | 0) == 9)) {
      $_0_i16_i_us = $_0_i_i_us;
      $6 = $5;
      break;
     }
     $_0_i_i_us = $_0_i_i_us + 1 | 0; //@line 44179
    }
    while (1) {
     if (($6 << 24 >> 24 | 0) == 61) {
      $_0_i16_sink_i_us = $_0_i16_i_us; //@line 44185
      label = 14561; //@line 44186
      break;
     } else if (!(($6 << 24 >> 24 | 0) == 32 | ($6 << 24 >> 24 | 0) == 9)) {
      break;
     }
     $_0_be_i17_i_us = $_0_i16_i_us + 1 | 0; //@line 44191
     $_0_i16_i_us = $_0_be_i17_i_us;
     $6 = HEAP8[$_0_be_i17_i_us] | 0;
    }
    if ((label | 0) == 14561) {
     while (1) {
      label = 0; //@line 44197
      $7 = $_0_i16_sink_i_us + 1 | 0; //@line 44199
      $8 = HEAP8[$7] | 0; //@line 44200
      if (($8 << 24 >> 24 | 0) == 32 | ($8 << 24 >> 24 | 0) == 9) {
       $_0_i16_sink_i_us = $7;
       label = 14561; //@line 44203
      } else {
       break;
      }
     }
     if (($7 | 0) != 0) {
      $_0_i16_sink_i_lcssa_lcssa = $_0_i16_sink_i_us;
      $35 = $8;
      break L18515;
     }
    }
    $10 = HEAP8[$_0627_us] | 0; //@line 44215
    if ($10 << 24 >> 24 == 0) {
     $_0 = 0; //@line 44219
     label = 14609; //@line 44220
     break;
    } else {
     $_06_i_us = $_0627_us;
     $12 = $10;
    }
    while (1) {
     $14 = $_06_i_us + 1 | 0; //@line 44229
     if ($12 << 24 >> 24 == 58) {
      if ((HEAP8[$14] | 0) != 58) {
       break;
      }
      $_0_be_i_us = $_06_i_us + 2 | 0; //@line 44240
     } else {
      $_0_be_i_us = $14; //@line 44242
     }
     $20 = HEAP8[$_0_be_i_us] | 0; //@line 44245
     if ($20 << 24 >> 24 == 0) {
      $_0 = 0; //@line 44249
      label = 14603; //@line 44250
      break L18516;
     } else {
      $_06_i_us = $_0_be_i_us;
      $12 = $20;
     }
    }
    if (($14 | 0) == 0) {
     $_0 = 0; //@line 44259
     label = 14604; //@line 44260
     break;
    } else {
     $_0627_us = $14; //@line 44263
    }
   }
   if ((label | 0) == 14609) {
    return $_0 | 0; //@line 44269
   } else if ((label | 0) == 14603) {
    return $_0 | 0; //@line 44274
   } else if ((label | 0) == 14604) {
    return $_0 | 0; //@line 44279
   }
  } else {
   $_0627 = $str; //@line 44282
   L18540 : while (1) {
    $_0_i_i = $_0627; //@line 44286
    while (1) {
     $24 = HEAP8[$_0_i_i] | 0; //@line 44289
     if (!(($24 << 24 >> 24 | 0) == 32 | ($24 << 24 >> 24 | 0) == 9)) {
      break;
     }
     $_0_i_i = $_0_i_i + 1 | 0; //@line 44294
    }
    L18546 : do {
     if ($24 << 24 >> 24 == $2 << 24 >> 24) {
      $_025_i20 = $name;
      $_01024_i21 = $_0_i_i;
      while (1) {
       $_01024_i21 = $_01024_i21 + 1 | 0; //@line 44304
       $_025_i20 = $_025_i20 + 1 | 0; //@line 44305
       $28 = HEAP8[$_025_i20] | 0; //@line 44306
       if ($28 << 24 >> 24 == 0) {
        $_0_i16_i = $_01024_i21; //@line 44310
        break;
       }
       if ((HEAP8[$_01024_i21] | 0) != $28 << 24 >> 24) {
        break L18546;
       }
      }
      while (1) {
       $31 = HEAP8[$_0_i16_i] | 0; //@line 44324
       if (($31 << 24 >> 24 | 0) == 61) {
        $_0_i16_sink_i = $_0_i16_i; //@line 44326
        break;
       } else if (!(($31 << 24 >> 24 | 0) == 32 | ($31 << 24 >> 24 | 0) == 9)) {
        break L18546;
       }
       $_0_i16_i = $_0_i16_i + 1 | 0; //@line 44332
      }
      while (1) {
       $32 = $_0_i16_sink_i + 1 | 0; //@line 44336
       $33 = HEAP8[$32] | 0; //@line 44337
       if (($33 << 24 >> 24 | 0) == 32 | ($33 << 24 >> 24 | 0) == 9) {
        $_0_i16_sink_i = $32;
       } else {
        break;
       }
      }
      if (($32 | 0) != 0) {
       $_0_i16_sink_i_lcssa_lcssa = $_0_i16_sink_i;
       $35 = $33;
       break L18515;
      }
     }
    } while (0);
    $70 = HEAP8[$_0627] | 0; //@line 44352
    if ($70 << 24 >> 24 == 0) {
     $_0 = 0; //@line 44356
     label = 14607; //@line 44357
     break;
    } else {
     $_06_i = $_0627;
     $73 = $70;
    }
    while (1) {
     $75 = $_06_i + 1 | 0; //@line 44366
     if ($73 << 24 >> 24 == 58) {
      if ((HEAP8[$75] | 0) != 58) {
       break;
      }
      $_0_be_i = $_06_i + 2 | 0; //@line 44377
     } else {
      $_0_be_i = $75; //@line 44379
     }
     $81 = HEAP8[$_0_be_i] | 0; //@line 44382
     if ($81 << 24 >> 24 == 0) {
      $_0 = 0; //@line 44386
      label = 14605; //@line 44387
      break L18540;
     } else {
      $_06_i = $_0_be_i;
      $73 = $81;
     }
    }
    if (($75 | 0) == 0) {
     $_0 = 0; //@line 44396
     label = 14606; //@line 44397
     break;
    } else {
     $_0627 = $75; //@line 44400
    }
   }
   if ((label | 0) == 14607) {
    return $_0 | 0; //@line 44406
   } else if ((label | 0) == 14605) {
    return $_0 | 0; //@line 44411
   } else if ((label | 0) == 14606) {
    return $_0 | 0; //@line 44416
   }
  }
 } while (0);
 L18569 : do {
  if ($35 << 24 >> 24 == 0) {
   $n_1_lcssa_i = 0; //@line 44426
  } else {
   $n_040_i = 0;
   $38 = $35;
   while (1) {
    $40 = $n_040_i + 1 | 0; //@line 44433
    if ($38 << 24 >> 24 == 58) {
     $_sum17 = $n_040_i + 2 | 0; //@line 44436
     if ((HEAP8[$_0_i16_sink_i_lcssa_lcssa + $_sum17 | 0] | 0) == 58) {
      $n_0_be_i = $_sum17; //@line 44442
     } else {
      $n_0_lcssa_i = $n_040_i; //@line 44444
      break;
     }
    } else {
     $n_0_be_i = $40; //@line 44448
    }
    $46 = HEAP8[$_0_i16_sink_i_lcssa_lcssa + ($n_0_be_i + 1) | 0] | 0; //@line 44453
    if ($46 << 24 >> 24 == 0) {
     $n_0_lcssa_i = $n_0_be_i; //@line 44457
     break;
    } else {
     $n_040_i = $n_0_be_i;
     $38 = $46;
    }
   }
   if (($n_0_lcssa_i | 0) == 0) {
    $n_1_lcssa_i = 0; //@line 44467
    break;
   } else {
    $n_134_i = $n_0_lcssa_i; //@line 44470
   }
   while (1) {
    $48 = $n_134_i - 1 | 0; //@line 44474
    $50 = HEAP8[$_0_i16_sink_i_lcssa_lcssa + $n_134_i | 0] | 0; //@line 44476
    if (!(($50 << 24 >> 24 | 0) == 32 | ($50 << 24 >> 24 | 0) == 9)) {
     $n_1_lcssa_i = $n_134_i; //@line 44478
     break L18569;
    }
    if (($48 | 0) == 0) {
     $n_1_lcssa_i = 0; //@line 44484
     break;
    } else {
     $n_134_i = $48; //@line 44487
    }
   }
  }
 } while (0);
 $53 = _malloc($n_1_lcssa_i + 1 | 0) | 0; //@line 44494
 if (($53 | 0) == 0) {
  $_0 = 0; //@line 44498
  return $_0 | 0; //@line 44501
 }
 L18583 : do {
  if (($n_1_lcssa_i | 0) == 0) {
   $j_0_lcssa_i = 0; //@line 44507
  } else {
   $i_030_i = 0;
   $j_031_i = 0;
   $56 = $35;
   while (1) {
    $58 = $i_030_i + 1 | 0; //@line 44515
    do {
     if ($56 << 24 >> 24 == 58) {
      $_sum16 = $i_030_i + 2 | 0; //@line 44519
      if ((HEAP8[$_0_i16_sink_i_lcssa_lcssa + $_sum16 | 0] | 0) != 58) {
       label = 14592; //@line 44525
       break;
      }
      HEAP8[$53 + $j_031_i | 0] = 58; //@line 44529
      $i_1_i = $_sum16; //@line 44531
     } else {
      label = 14592; //@line 44533
     }
    } while (0);
    if ((label | 0) == 14592) {
     label = 0; //@line 44537
     HEAP8[$53 + $j_031_i | 0] = $56; //@line 44539
     $i_1_i = $58; //@line 44540
    }
    $67 = $j_031_i + 1 | 0; //@line 44543
    if ($i_1_i >>> 0 >= $n_1_lcssa_i >>> 0) {
     $j_0_lcssa_i = $67; //@line 44547
     break L18583;
    }
    $i_030_i = $i_1_i;
    $j_031_i = $67;
    $56 = HEAP8[$_0_i16_sink_i_lcssa_lcssa + ($i_1_i + 1) | 0] | 0;
   }
  }
 } while (0);
 HEAP8[$53 + $j_0_lcssa_i | 0] = 0; //@line 44560
 $_0 = $53; //@line 44562
 return $_0 | 0; //@line 44565
}
function _drv_get_option_bool($str, $name, $def) {
 $str = $str | 0;
 $name = $name | 0;
 $def = $def | 0;
 var $1 = 0, $r_0 = 0, $_0 = 0;
 $1 = _drv_get_option($str, $name) | 0; //@line 44578
 if (($1 | 0) == 0) {
  $_0 = $def; //@line 44582
  return $_0 | 0; //@line 44585
 }
 do {
  if ((_strcmp($1 | 0, 51984) | 0) == 0) {
   $r_0 = 1; //@line 44592
  } else {
   if ((_strcmp($1 | 0, 56280) | 0) == 0) {
    $r_0 = 1; //@line 44598
    break;
   }
   if ((_strcmp($1 | 0, 49840) | 0) == 0) {
    $r_0 = 1; //@line 44605
    break;
   }
   if ((_strcmp($1 | 0, 46e3) | 0) == 0) {
    $r_0 = 0; //@line 44612
    break;
   }
   if ((_strcmp($1 | 0, 42568) | 0) == 0) {
    $r_0 = 0; //@line 44619
    break;
   }
   $r_0 = (_strcmp($1 | 0, 39488) | 0) == 0 ? 0 : $def; //@line 44626
  }
 } while (0);
 _free($1); //@line 44630
 $_0 = $r_0; //@line 44632
 return $_0 | 0; //@line 44635
}
function _drv_get_option_uint($str, $name, $def) {
 $str = $str | 0;
 $name = $name | 0;
 $def = $def | 0;
 var $end = 0, $1 = 0, $4 = 0, $5 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 44646
 STACKTOP = STACKTOP + 8 | 0; //@line 44646
 $end = sp | 0; //@line 44647
 $1 = _drv_get_option($str, $name) | 0; //@line 44648
 if (($1 | 0) == 0) {
  $_0 = $def; //@line 44652
  STACKTOP = sp; //@line 44654
  return $_0 | 0; //@line 44655
 }
 $4 = _strtoul($1 | 0, $end | 0, 0) | 0; //@line 44657
 $5 = HEAP32[$end >> 2] | 0; //@line 44658
 do {
  if (($5 | 0) != 0) {
   if ((HEAP8[$5] | 0) == 0) {
    break;
   }
   _free($1); //@line 44669
   $_0 = $def; //@line 44671
   STACKTOP = sp; //@line 44673
   return $_0 | 0; //@line 44674
  }
 } while (0);
 _free($1); //@line 44677
 $_0 = $4; //@line 44679
 STACKTOP = sp; //@line 44681
 return $_0 | 0; //@line 44682
}
function _drv_get_option_sint($str, $name, $def) {
 $str = $str | 0;
 $name = $name | 0;
 $def = $def | 0;
 var $end = 0, $1 = 0, $4 = 0, $5 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 44693
 STACKTOP = STACKTOP + 8 | 0; //@line 44693
 $end = sp | 0; //@line 44694
 $1 = _drv_get_option($str, $name) | 0; //@line 44695
 if (($1 | 0) == 0) {
  $_0 = $def; //@line 44699
  STACKTOP = sp; //@line 44701
  return $_0 | 0; //@line 44702
 }
 $4 = _strtol($1 | 0, $end | 0, 0) | 0; //@line 44704
 $5 = HEAP32[$end >> 2] | 0; //@line 44705
 do {
  if (($5 | 0) != 0) {
   if ((HEAP8[$5] | 0) == 0) {
    break;
   }
   _free($1); //@line 44716
   $_0 = $def; //@line 44718
   STACKTOP = sp; //@line 44720
   return $_0 | 0; //@line 44721
  }
 } while (0);
 _free($1); //@line 44724
 $_0 = $4; //@line 44726
 STACKTOP = sp; //@line 44728
 return $_0 | 0; //@line 44729
}
function _bp_addr_new($addr) {
 $addr = $addr | 0;
 var $1 = 0, $4 = 0, $_0 = 0;
 $1 = _malloc(36) | 0; //@line 44739
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 44743
  return $_0 | 0; //@line 44746
 }
 HEAP32[$1 >> 2] = 1; //@line 44749
 $4 = $1 + 4 | 0; //@line 44750
 _memset($4 | 0, 0, 20); //@line 44751
 HEAP32[$4 >> 2] = 294; //@line 44754
 HEAP32[$1 + 8 >> 2] = 86; //@line 44757
 HEAP32[$1 + 12 >> 2] = 160; //@line 44760
 HEAP32[$1 + 24 >> 2] = 0; //@line 44763
 HEAP32[$1 + 28 >> 2] = $addr; //@line 44766
 $_0 = $1; //@line 44768
 return $_0 | 0; //@line 44771
}
function _bp_addr_del($bp) {
 $bp = $bp | 0;
 _free($bp); //@line 44781
 return;
}
function _bp_addr_print($bp, $fp) {
 $bp = $bp | 0;
 $fp = $fp | 0;
 var $4 = 0, $6 = 0, sp = 0;
 sp = STACKTOP; //@line 44792
 $4 = HEAP32[$bp + 16 >> 2] | 0; //@line 44796
 $6 = HEAP32[$bp + 20 >> 2] | 0; //@line 44798
 _printf(55968, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = HEAP32[$bp + 28 >> 2], HEAP32[tempInt + 8 >> 2] = $4, HEAP32[tempInt + 16 >> 2] = $6, tempInt) | 0) | 0; //@line 44799
 STACKTOP = sp; //@line 44800
 return;
}
function _bp_segofs_del($bp) {
 $bp = $bp | 0;
 _free($bp); //@line 44811
 return;
}
function _bp_segofs_print($bp, $fp) {
 $bp = $bp | 0;
 $fp = $fp | 0;
 var $4 = 0, $6 = 0, $8 = 0, sp = 0;
 sp = STACKTOP; //@line 44823
 $4 = HEAP32[$bp + 28 >> 2] | 0; //@line 44827
 $6 = HEAP32[$bp + 16 >> 2] | 0; //@line 44829
 $8 = HEAP32[$bp + 20 >> 2] | 0; //@line 44831
 _printf(57160, (tempInt = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempInt >> 2] = HEAP32[$bp + 24 >> 2], HEAP32[tempInt + 8 >> 2] = $4, HEAP32[tempInt + 16 >> 2] = $6, HEAP32[tempInt + 24 >> 2] = $8, tempInt) | 0) | 0; //@line 44832
 STACKTOP = sp; //@line 44833
 return;
}
function _bp_expr_del($bp) {
 $bp = $bp | 0;
 _free(HEAP32[$bp + 32 >> 2] | 0); //@line 44845
 _free($bp); //@line 44847
 return;
}
function _bp_expr_match($bp, $seg, $addr) {
 $bp = $bp | 0;
 $seg = $seg | 0;
 $addr = $addr | 0;
 var $val = 0, $cmd = 0, $4 = 0, sp = 0;
 sp = STACKTOP; //@line 44860
 STACKTOP = STACKTOP + 272 | 0; //@line 44860
 $val = sp | 0; //@line 44861
 $cmd = sp + 8 | 0; //@line 44862
 _cmd_set_str($cmd, HEAP32[$bp + 32 >> 2] | 0); //@line 44865
 $4 = (_cmd_match_uint32($cmd, $val) | 0) != 0; //@line 44867
 STACKTOP = sp; //@line 44872
 return $4 & (HEAP32[$val >> 2] | 0) != 0 & 1 | 0; //@line 44873
}
function _bp_expr_print($bp, $fp) {
 $bp = $bp | 0;
 $fp = $fp | 0;
 var sp = 0;
 sp = STACKTOP; //@line 44882
 _printf(57960, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP32[$bp + 32 >> 2], tempInt) | 0) | 0; //@line 44885
 STACKTOP = sp; //@line 44886
 return;
}
function _bps_bp_add($bps, $bp) {
 $bps = $bps | 0;
 $bp = $bp | 0;
 var $1 = 0, $4 = 0, $8 = 0, $9 = 0, $12 = 0, $_0 = 0;
 $1 = $bps + 4 | 0; //@line 44898
 $4 = $bps | 0; //@line 44901
 $8 = _realloc(HEAP32[$1 >> 2] | 0, (HEAP32[$4 >> 2] << 2) + 4 | 0) | 0; //@line 44905
 $9 = $8; //@line 44906
 if (($8 | 0) == 0) {
  $_0 = 1; //@line 44910
  return $_0 | 0; //@line 44913
 }
 HEAP32[$1 >> 2] = $9; //@line 44915
 $12 = HEAP32[$4 >> 2] | 0; //@line 44916
 HEAP32[$9 + ($12 << 2) >> 2] = $bp; //@line 44918
 HEAP32[$4 >> 2] = $12 + 1; //@line 44920
 $_0 = 0; //@line 44922
 return $_0 | 0; //@line 44925
}
function _bps_check($bps, $seg, $addr, $fp) {
 $bps = $bps | 0;
 $seg = $seg | 0;
 $addr = $addr | 0;
 $fp = $fp | 0;
 var $1 = 0, $4 = 0, $i_013_i = 0, $7 = 0, $9 = 0, $14 = 0, $15 = 0, $18 = 0, $21 = 0, $24 = 0, $29 = 0, $33 = 0, $40 = 0, $i_0_i = 0, $48 = 0, $51 = 0, $56 = 0, $_015_i_i = 0, $_0_in14_i_i = 0, $58 = 0, $_0_i_i = 0, $62 = 0, $_lcssa_i_i = 0, $_0 = 0, label = 0;
 $1 = $bps | 0; //@line 44944
 if ((HEAP32[$1 >> 2] | 0) == 0) {
  $_0 = 0; //@line 44949
  return $_0 | 0; //@line 44952
 }
 $4 = $bps + 4 | 0; //@line 44954
 $i_013_i = 0; //@line 44956
 L18648 : while (1) {
  $7 = HEAP32[(HEAP32[$4 >> 2] | 0) + ($i_013_i << 2) >> 2] | 0; //@line 44961
  $9 = HEAP32[$7 + 8 >> 2] | 0; //@line 44963
  do {
   if (($9 | 0) != 0) {
    if ((FUNCTION_TABLE_iiii[$9 & 127]($7, $seg, $addr) | 0) == 0) {
     break;
    }
    $14 = $7 + 16 | 0; //@line 44974
    $15 = HEAP32[$14 >> 2] | 0; //@line 44975
    if (($15 | 0) == 0) {
     break L18648;
    }
    $18 = $15 - 1 | 0; //@line 44981
    HEAP32[$14 >> 2] = $18; //@line 44982
    if (($18 | 0) == 0) {
     break L18648;
    }
   }
  } while (0);
  $24 = $i_013_i + 1 | 0; //@line 44990
  if ($24 >>> 0 < (HEAP32[$1 >> 2] | 0) >>> 0) {
   $i_013_i = $24; //@line 44995
  } else {
   $_0 = 0; //@line 44997
   label = 14681; //@line 44998
   break;
  }
 }
 if ((label | 0) == 14681) {
  return $_0 | 0; //@line 45005
 }
 $21 = HEAP32[$7 + 20 >> 2] | 0; //@line 45008
 if (($21 | 0) != 0) {
  HEAP32[$14 >> 2] = $21; //@line 45012
 }
 $29 = HEAP32[(HEAP32[$4 >> 2] | 0) + ($i_013_i << 2) >> 2] | 0; //@line 45017
 if (($29 | 0) == 0) {
  $_0 = 0; //@line 45021
  return $_0 | 0; //@line 45024
 }
 $33 = HEAP32[$29 + 12 >> 2] | 0; //@line 45027
 if (($33 | 0) != 0) {
  FUNCTION_TABLE_vii[$33 & 511]($29, $fp); //@line 45031
 }
 if ((HEAP32[$29 + 16 >> 2] | 0) != 0) {
  $_0 = 1; //@line 45039
  return $_0 | 0; //@line 45042
 }
 $40 = HEAP32[$1 >> 2] | 0; //@line 45044
 $i_0_i = 0; //@line 45046
 while (1) {
  if ($i_0_i >>> 0 >= $40 >>> 0) {
   $_0 = 1; //@line 45052
   label = 14685; //@line 45053
   break;
  }
  $48 = $i_0_i + 1 | 0; //@line 45060
  if ((HEAP32[(HEAP32[$4 >> 2] | 0) + ($i_0_i << 2) >> 2] | 0) == ($29 | 0)) {
   break;
  } else {
   $i_0_i = $48; //@line 45065
  }
 }
 if ((label | 0) == 14685) {
  return $_0 | 0; //@line 45071
 }
 $51 = HEAP32[$29 + 4 >> 2] | 0; //@line 45074
 if (($51 | 0) == 0) {
  _free($29); //@line 45079
 } else {
  FUNCTION_TABLE_vi[$51 & 1023]($29); //@line 45081
 }
 $56 = HEAP32[$1 >> 2] | 0; //@line 45084
 if ($48 >>> 0 < $56 >>> 0) {
  $_0_in14_i_i = $i_0_i;
  $_015_i_i = $48;
  while (1) {
   $58 = HEAP32[$4 >> 2] | 0; //@line 45092
   HEAP32[$58 + ($_0_in14_i_i << 2) >> 2] = HEAP32[$58 + ($_015_i_i << 2) >> 2]; //@line 45096
   $_0_i_i = $_015_i_i + 1 | 0; //@line 45097
   $62 = HEAP32[$1 >> 2] | 0; //@line 45098
   if ($_0_i_i >>> 0 < $62 >>> 0) {
    $_0_in14_i_i = $_015_i_i;
    $_015_i_i = $_0_i_i;
   } else {
    $_lcssa_i_i = $62; //@line 45104
    break;
   }
  }
 } else {
  $_lcssa_i_i = $56; //@line 45109
 }
 HEAP32[$1 >> 2] = $_lcssa_i_i - 1; //@line 45113
 $_0 = 1; //@line 45115
 return $_0 | 0; //@line 45118
}
function _cmd_set_str($cmd, $str) {
 $cmd = $cmd | 0;
 $str = $str | 0;
 var $i_0 = 0, $5 = 0, label = 0;
 HEAP32[$cmd >> 2] = 0; //@line 45130
 $i_0 = 0; //@line 45132
 while (1) {
  if ($i_0 >>> 0 >= 256) {
   break;
  }
  $5 = $str + $i_0 | 0; //@line 45140
  HEAP8[$cmd + 4 + $i_0 | 0] = HEAP8[$5] | 0; //@line 45143
  if ((HEAP8[$5] | 0) == 0) {
   label = 14692; //@line 45149
   break;
  } else {
   $i_0 = $i_0 + 1 | 0; //@line 45152
  }
 }
 if ((label | 0) == 14692) {
  return;
 }
 HEAP8[$cmd + 259 | 0] = 0; //@line 45160
 return;
}
function _cmd_get_str($cmd) {
 $cmd = $cmd | 0;
 return (HEAP32[$cmd >> 2] | 0) + ($cmd + 4) | 0; //@line 45176
}
function _cmd_do_b($cmd, $bps) {
 $cmd = $cmd | 0;
 $bps = $bps | 0;
 var $idx_i = 0, $addr_i_i = 0, $pass_i3_i = 0, $reset_i4_i = 0, $pass_i_i = 0, $reset_i_i = 0, $expr_i_i = 0, $7 = 0, $8 = 0, $11 = 0, $i_07_i_i = 0, $16 = 0, $18 = 0, $34 = 0, $44 = 0, $47 = 0, $50 = 0, $60 = 0, $_0_i_i_i = 0, $63 = 0, $67 = 0, $71 = 0, $74 = 0, $78 = 0, $79 = 0, $82 = 0, $96 = 0, $isseg_0_i_i = 0, $seg_0_off0_i_i = 0, $107 = 0, $111 = 0, $112 = 0, $113 = 0, $116 = 0, $130 = 0, $bp_0_i_i = 0, $143 = 0, $147 = 0, $151 = 0, $154 = 0, $158 = 0, $159 = 0, $162 = 0, $174 = 0, $175 = 0, $177 = 0, $180 = 0, $181 = 0, $182 = 0, $i_09_i_i = 0, $184 = 0, $186 = 0, $191 = 0, $194 = 0, $_lcssa8_i_i = 0, $198 = 0, $206 = 0, $208 = 0, $_013_i_i = 0, $213 = 0, $_015_i_i = 0, $_0_in14_i_i = 0, $215 = 0, $_0_i_i = 0, $219 = 0, $_lcssa_i_i = 0, sp = 0;
 sp = STACKTOP; //@line 45210
 STACKTOP = STACKTOP + 304 | 0; //@line 45210
 $idx_i = sp | 0; //@line 45211
 $addr_i_i = sp + 8 | 0; //@line 45212
 $pass_i3_i = sp + 16 | 0; //@line 45213
 $reset_i4_i = sp + 24 | 0; //@line 45214
 $pass_i_i = sp + 32 | 0; //@line 45215
 $reset_i_i = sp + 40 | 0; //@line 45216
 $expr_i_i = sp + 48 | 0; //@line 45217
 if ((_cmd_match($cmd, 56264) | 0) != 0) {
  if ((_cmd_match_end($cmd) | 0) == 0) {
   STACKTOP = sp; //@line 45226
   return;
  }
  $7 = HEAP32[_stdout >> 2] | 0; //@line 45229
  $8 = $bps | 0; //@line 45230
  if ((HEAP32[$8 >> 2] | 0) != 0) {
   $11 = $bps + 4 | 0; //@line 45235
   $i_07_i_i = 0; //@line 45237
   do {
    _fprintf($7 | 0, 51936, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $i_07_i_i, tempInt) | 0) | 0; //@line 45240
    $16 = HEAP32[(HEAP32[$11 >> 2] | 0) + ($i_07_i_i << 2) >> 2] | 0; //@line 45243
    $18 = HEAP32[$16 + 12 >> 2] | 0; //@line 45245
    if (($18 | 0) != 0) {
     FUNCTION_TABLE_vii[$18 & 511]($16, $7); //@line 45249
    }
    $i_07_i_i = $i_07_i_i + 1 | 0; //@line 45252
   } while ($i_07_i_i >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0);
  }
  _fflush($7 | 0) | 0; //@line 45263
  STACKTOP = sp; //@line 45265
  return;
 }
 if ((_cmd_match($cmd, 49824) | 0) == 0) {
  if ((_cmd_match($cmd, 45992) | 0) == 0) {
   _cmd_error($cmd, 42544); //@line 45276
   STACKTOP = sp; //@line 45277
   return;
  }
  if ((_cmd_match_eol($cmd) | 0) != 0) {
   $177 = $bps | 0; //@line 45285
   $180 = $bps + 4 | 0; //@line 45288
   $181 = HEAP32[$180 >> 2] | 0; //@line 45289
   if ((HEAP32[$177 >> 2] | 0) == 0) {
    $_lcssa8_i_i = $181; //@line 45292
   } else {
    $i_09_i_i = 0;
    $182 = $181;
    while (1) {
     $184 = HEAP32[$182 + ($i_09_i_i << 2) >> 2] | 0; //@line 45299
     $186 = HEAP32[$184 + 4 >> 2] | 0; //@line 45301
     if (($186 | 0) == 0) {
      _free($184); //@line 45306
     } else {
      FUNCTION_TABLE_vi[$186 & 1023]($184); //@line 45308
     }
     $191 = $i_09_i_i + 1 | 0; //@line 45311
     $194 = HEAP32[$180 >> 2] | 0; //@line 45314
     if ($191 >>> 0 < (HEAP32[$177 >> 2] | 0) >>> 0) {
      $i_09_i_i = $191;
      $182 = $194;
     } else {
      $_lcssa8_i_i = $194; //@line 45319
      break;
     }
    }
   }
   _free($_lcssa8_i_i); //@line 45326
   HEAP32[$177 >> 2] = 0; //@line 45327
   HEAP32[$180 >> 2] = 0; //@line 45328
   STACKTOP = sp; //@line 45329
   return;
  }
  if ((_cmd_match_uint16($cmd, $idx_i) | 0) != 0) {
   $174 = $bps | 0; //@line 45336
   $175 = $bps + 4 | 0; //@line 45337
   do {
    $198 = HEAPU16[$idx_i >> 1] | 0; //@line 45341
    if ((HEAP32[$174 >> 2] | 0) >>> 0 > $198 >>> 0) {
     $206 = HEAP32[(HEAP32[$175 >> 2] | 0) + ($198 << 2) >> 2] | 0; //@line 45348
     $208 = HEAP32[$206 + 4 >> 2] | 0; //@line 45350
     if (($208 | 0) == 0) {
      _free($206); //@line 45355
     } else {
      FUNCTION_TABLE_vi[$208 & 1023]($206); //@line 45357
     }
     $_013_i_i = $198 + 1 | 0; //@line 45360
     $213 = HEAP32[$174 >> 2] | 0; //@line 45361
     if ($_013_i_i >>> 0 < $213 >>> 0) {
      $_0_in14_i_i = $198;
      $_015_i_i = $_013_i_i;
      while (1) {
       $215 = HEAP32[$175 >> 2] | 0; //@line 45369
       HEAP32[$215 + ($_0_in14_i_i << 2) >> 2] = HEAP32[$215 + ($_015_i_i << 2) >> 2]; //@line 45373
       $_0_i_i = $_015_i_i + 1 | 0; //@line 45374
       $219 = HEAP32[$174 >> 2] | 0; //@line 45375
       if ($_0_i_i >>> 0 < $219 >>> 0) {
        $_0_in14_i_i = $_015_i_i;
        $_015_i_i = $_0_i_i;
       } else {
        $_lcssa_i_i = $219; //@line 45381
        break;
       }
      }
     } else {
      $_lcssa_i_i = $213; //@line 45386
     }
     HEAP32[$174 >> 2] = $_lcssa_i_i - 1; //@line 45390
    }
   } while ((_cmd_match_uint16($cmd, $idx_i) | 0) != 0);
  }
  _cmd_match_end($cmd) | 0; //@line 45401
  STACKTOP = sp; //@line 45402
  return;
 }
 if ((_cmd_match($cmd, 39456) | 0) != 0) {
  $34 = $expr_i_i | 0; //@line 45411
  HEAP16[$pass_i_i >> 1] = 1; //@line 45412
  HEAP16[$reset_i_i >> 1] = 0; //@line 45413
  if ((_cmd_match_str($cmd, $34, 256) | 0) == 0) {
   _cmd_error($cmd, 30784); //@line 45418
   STACKTOP = sp; //@line 45420
   return;
  }
  _cmd_match_uint16($cmd, $pass_i_i) | 0; //@line 45423
  _cmd_match_uint16($cmd, $reset_i_i) | 0; //@line 45424
  if ((_cmd_match_end($cmd) | 0) == 0) {
   STACKTOP = sp; //@line 45429
   return;
  }
  $44 = HEAP16[$pass_i_i >> 1] | 0; //@line 45432
  if ($44 << 16 >> 16 == 0) {
   STACKTOP = sp; //@line 45436
   return;
  }
  $47 = _malloc(36) | 0; //@line 45439
  if (($47 | 0) == 0) {
   $_0_i_i_i = 0;
   $60 = $44;
  } else {
   HEAP32[$47 >> 2] = 3; //@line 45446
   $50 = $47 + 4 | 0; //@line 45447
   _memset($50 | 0, 0, 20); //@line 45448
   HEAP32[$50 >> 2] = 352; //@line 45451
   HEAP32[$47 + 8 >> 2] = 58; //@line 45454
   HEAP32[$47 + 12 >> 2] = 206; //@line 45457
   HEAP32[$47 + 32 >> 2] = _strdup($34 | 0) | 0; //@line 45461
   $_0_i_i_i = $47;
   $60 = HEAP16[$pass_i_i >> 1] | 0;
  }
  $63 = HEAPU16[$reset_i_i >> 1] | 0; //@line 45470
  HEAP32[$_0_i_i_i + 16 >> 2] = $60 & 65535; //@line 45472
  HEAP32[$_0_i_i_i + 20 >> 2] = $63; //@line 45474
  $67 = HEAP32[$_0_i_i_i + 12 >> 2] | 0; //@line 45476
  if (($67 | 0) != 0) {
   FUNCTION_TABLE_vii[$67 & 511]($_0_i_i_i, HEAP32[_stdout >> 2] | 0); //@line 45481
  }
  $71 = $bps + 4 | 0; //@line 45484
  $74 = $bps | 0; //@line 45487
  $78 = _realloc(HEAP32[$71 >> 2] | 0, (HEAP32[$74 >> 2] << 2) + 4 | 0) | 0; //@line 45491
  $79 = $78; //@line 45492
  if (($78 | 0) == 0) {
   STACKTOP = sp; //@line 45496
   return;
  }
  HEAP32[$71 >> 2] = $79; //@line 45499
  $82 = HEAP32[$74 >> 2] | 0; //@line 45500
  HEAP32[$79 + ($82 << 2) >> 2] = $_0_i_i_i; //@line 45502
  HEAP32[$74 >> 2] = $82 + 1; //@line 45504
  STACKTOP = sp; //@line 45506
  return;
 }
 HEAP16[$pass_i3_i >> 1] = 1; //@line 45512
 HEAP16[$reset_i4_i >> 1] = 0; //@line 45513
 HEAP32[$addr_i_i >> 2] = 0; //@line 45514
 if ((_cmd_match_uint32($cmd, $addr_i_i) | 0) == 0) {
  _cmd_error($cmd, 36496); //@line 45519
  STACKTOP = sp; //@line 45521
  return;
 }
 do {
  if ((_cmd_match($cmd, 33544) | 0) == 0) {
   $seg_0_off0_i_i = 0;
   $isseg_0_i_i = 0;
  } else {
   $96 = HEAP32[$addr_i_i >> 2] | 0; //@line 45531
   if ((_cmd_match_uint32($cmd, $addr_i_i) | 0) != 0) {
    $seg_0_off0_i_i = $96 & 65535;
    $isseg_0_i_i = 1;
    break;
   }
   _cmd_error($cmd, 31728); //@line 45541
   STACKTOP = sp; //@line 45543
   return;
  }
 } while (0);
 _cmd_match_uint16($cmd, $pass_i3_i) | 0; //@line 45549
 _cmd_match_uint16($cmd, $reset_i4_i) | 0; //@line 45550
 if ((_cmd_match_end($cmd) | 0) == 0) {
  STACKTOP = sp; //@line 45555
  return;
 }
 $107 = HEAP16[$pass_i3_i >> 1] | 0; //@line 45558
 if ($107 << 16 >> 16 == 0) {
  STACKTOP = sp; //@line 45562
  return;
 }
 $111 = HEAP32[$addr_i_i >> 2] | 0; //@line 45566
 $112 = _malloc(36) | 0; //@line 45567
 $113 = ($112 | 0) == 0; //@line 45568
 do {
  if (($isseg_0_i_i | 0) == 0) {
   if ($113) {
    $bp_0_i_i = 0; //@line 45574
    break;
   }
   HEAP32[$112 >> 2] = 1; //@line 45578
   $130 = $112 + 4 | 0; //@line 45579
   _memset($130 | 0, 0, 20); //@line 45580
   HEAP32[$130 >> 2] = 294; //@line 45583
   HEAP32[$112 + 8 >> 2] = 86; //@line 45586
   HEAP32[$112 + 12 >> 2] = 160; //@line 45589
   HEAP32[$112 + 24 >> 2] = 0; //@line 45592
   HEAP32[$112 + 28 >> 2] = $111; //@line 45595
   $bp_0_i_i = $112; //@line 45597
  } else {
   if ($113) {
    $bp_0_i_i = 0; //@line 45601
    break;
   }
   HEAP32[$112 >> 2] = 2; //@line 45605
   $116 = $112 + 4 | 0; //@line 45606
   _memset($116 | 0, 0, 20); //@line 45607
   HEAP32[$116 >> 2] = 108; //@line 45610
   HEAP32[$112 + 8 >> 2] = 40; //@line 45613
   HEAP32[$112 + 12 >> 2] = 294; //@line 45616
   HEAP32[$112 + 24 >> 2] = $seg_0_off0_i_i; //@line 45619
   HEAP32[$112 + 28 >> 2] = $111 & 65535; //@line 45623
   $bp_0_i_i = $112; //@line 45625
  }
 } while (0);
 $143 = HEAPU16[$reset_i4_i >> 1] | 0; //@line 45631
 HEAP32[$bp_0_i_i + 16 >> 2] = $107 & 65535; //@line 45633
 HEAP32[$bp_0_i_i + 20 >> 2] = $143; //@line 45635
 $147 = HEAP32[$bp_0_i_i + 12 >> 2] | 0; //@line 45637
 if (($147 | 0) != 0) {
  FUNCTION_TABLE_vii[$147 & 511]($bp_0_i_i, HEAP32[_stdout >> 2] | 0); //@line 45642
 }
 $151 = $bps + 4 | 0; //@line 45645
 $154 = $bps | 0; //@line 45648
 $158 = _realloc(HEAP32[$151 >> 2] | 0, (HEAP32[$154 >> 2] << 2) + 4 | 0) | 0; //@line 45652
 $159 = $158; //@line 45653
 if (($158 | 0) == 0) {
  STACKTOP = sp; //@line 45657
  return;
 }
 HEAP32[$151 >> 2] = $159; //@line 45660
 $162 = HEAP32[$154 >> 2] | 0; //@line 45661
 HEAP32[$159 + ($162 << 2) >> 2] = $bp_0_i_i; //@line 45663
 HEAP32[$154 >> 2] = $162 + 1; //@line 45665
 STACKTOP = sp; //@line 45667
 return;
}
function _cmd_set_sym($cmd, $sym, $val) {
 $cmd = $cmd | 0;
 $sym = $sym | 0;
 $val = $val | 0;
 var $1 = 0, $_sym = 0, $5 = 0, $12 = 0, $14 = 0, $15 = 0, $i_0 = 0, $30 = 0, $31 = 0, $34 = 0, $i_129 = 0, $36 = 0, $37 = 0, $44 = 0, $45 = 0, $46$1 = 0, $i_1_lcssa = 0, $_0 = 0, label = 0;
 $1 = HEAP8[$sym] | 0; //@line 45685
 $_sym = ($1 - 36 & 255) < 2 ? $sym + 1 | 0 : $sym; //@line 45689
 do {
  if ($1 << 24 >> 24 != 36) {
   $5 = HEAP32[15700] | 0; //@line 45694
   do {
    if (($5 | 0) == 0) {
     $12 = $1; //@line 45699
    } else {
     if ((FUNCTION_TABLE_iiii[$5 & 127](HEAP32[15702] | 0, $_sym, $val) | 0) == 0) {
      $_0 = 0; //@line 45706
      return $_0 | 0; //@line 45709
     } else {
      $12 = HEAP8[$sym] | 0; //@line 45713
      break;
     }
    }
   } while (0);
   if ($12 << 24 >> 24 == 37) {
    $_0 = 1; //@line 45722
   } else {
    break;
   }
   return $_0 | 0; //@line 45728
  }
 } while (0);
 $14 = HEAP32[15696] | 0; //@line 45731
 $15 = HEAP32[15698] | 0; //@line 45732
 $i_0 = 0; //@line 45734
 while (1) {
  if ($i_0 >>> 0 >= $14 >>> 0) {
   break;
  }
  if ((_strcmp(HEAP32[$15 + ($i_0 << 3) >> 2] | 0, $_sym | 0) | 0) == 0) {
   label = 14777; //@line 45749
   break;
  } else {
   $i_0 = $i_0 + 1 | 0; //@line 45752
  }
 }
 if ((label | 0) == 14777) {
  HEAP32[$15 + ($i_0 << 3) + 4 >> 2] = $val; //@line 45757
  $_0 = 0; //@line 45759
  return $_0 | 0; //@line 45762
 }
 $30 = _realloc($15, ($14 << 3) + 8 | 0) | 0; //@line 45767
 $31 = $30; //@line 45768
 if (($30 | 0) == 0) {
  $_0 = 1; //@line 45772
  return $_0 | 0; //@line 45775
 }
 $34 = HEAP32[15696] | 0; //@line 45777
 L18820 : do {
  if (($34 | 0) == 0) {
   $i_1_lcssa = 0; //@line 45782
  } else {
   $i_129 = $34; //@line 45784
   while (1) {
    $36 = $i_129 - 1 | 0; //@line 45787
    $37 = $31 + ($36 << 3) | 0; //@line 45788
    if ((_strcmp(HEAP32[$37 >> 2] | 0, $_sym | 0) | 0) < 0) {
     $i_1_lcssa = $i_129; //@line 45795
     break L18820;
    }
    $44 = $37; //@line 45799
    $45 = $31 + ($i_129 << 3) | 0; //@line 45800
    $46$1 = HEAP32[$44 + 4 >> 2] | 0; //@line 45804
    HEAP32[$45 >> 2] = HEAP32[$44 >> 2]; //@line 45806
    HEAP32[$45 + 4 >> 2] = $46$1; //@line 45808
    if (($36 | 0) == 0) {
     $i_1_lcssa = 0; //@line 45812
     break;
    } else {
     $i_129 = $36; //@line 45815
    }
   }
  }
 } while (0);
 HEAP32[$31 + ($i_1_lcssa << 3) >> 2] = _strdup($_sym | 0) | 0; //@line 45823
 HEAP32[$31 + ($i_1_lcssa << 3) + 4 >> 2] = $val; //@line 45825
 HEAP32[15698] = $31; //@line 45826
 HEAP32[15696] = (HEAP32[15696] | 0) + 1; //@line 45829
 $_0 = 0; //@line 45831
 return $_0 | 0; //@line 45834
}
function _cmd_error($cmd, $str) {
 $cmd = $cmd | 0;
 $str = $str | 0;
 var $3 = 0, sp = 0;
 sp = STACKTOP; //@line 45843
 $3 = (HEAP32[$cmd >> 2] | 0) + ($cmd + 4) | 0; //@line 45846
 _pce_printf(42512, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $str, HEAP32[tempInt + 8 >> 2] = $3, tempInt) | 0); //@line 45847
 STACKTOP = sp; //@line 45848
 return;
}
function _cmd_match_ident($cmd, $str, $max) {
 $cmd = $cmd | 0;
 $str = $str | 0;
 $max = $max | 0;
 var $1 = 0, $i_0_i = 0, $4 = 0, $5 = 0, $8 = 0, $_024 = 0, $i_0 = 0, $n_0 = 0, $14 = 0, $23 = 0, $27 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 45863
 $1 = $cmd | 0; //@line 45864
 $i_0_i = HEAP32[$1 >> 2] | 0; //@line 45867
 while (1) {
  $4 = $cmd + 4 + $i_0_i | 0; //@line 45870
  $5 = HEAP8[$4] | 0; //@line 45871
  if (!(($5 << 24 >> 24 | 0) == 13 | ($5 << 24 >> 24 | 0) == 32 | ($5 << 24 >> 24 | 0) == 9 | ($5 << 24 >> 24 | 0) == 10)) {
   break;
  }
  $i_0_i = $i_0_i + 1 | 0; //@line 45877
 }
 HEAP32[$1 >> 2] = $i_0_i; //@line 45879
 $8 = HEAP8[$4] | 0; //@line 45880
 if ((($8 << 24 >> 24) - 36 | 0) >>> 0 < 2) {
  HEAP8[$str] = $8; //@line 45887
  $n_0 = 1;
  $i_0 = $i_0_i + 1 | 0;
  $_024 = $str + 1 | 0;
 } else {
  $n_0 = 0;
  $i_0 = $i_0_i;
  $_024 = $str;
 }
 while (1) {
  $14 = HEAP8[$cmd + 4 + $i_0 | 0] | 0; //@line 45899
  if ($14 << 24 >> 24 == 0) {
   label = 14799; //@line 45903
   break;
  }
  if (!(($14 - 48 & 255) < 10 | ($14 - 97 & 255) < 26 | ($14 - 65 & 255) < 26 | $14 << 24 >> 24 == 95)) {
   label = 14799; //@line 45918
   break;
  }
  HEAP8[$_024] = $14; //@line 45922
  $23 = $n_0 + 1 | 0; //@line 45924
  if ($23 >>> 0 < $max >>> 0) {
   $n_0 = $23;
   $i_0 = $i_0 + 1 | 0;
   $_024 = $_024 + 1 | 0;
  } else {
   label = 14798; //@line 45930
   break;
  }
 }
 if ((label | 0) == 14799) {
  HEAP8[$_024] = 0; //@line 45935
  HEAP32[$1 >> 2] = $i_0; //@line 45936
  $_0 = ($n_0 | 0) != 0 | 0; //@line 45940
  STACKTOP = sp; //@line 45942
  return $_0 | 0; //@line 45943
 } else if ((label | 0) == 14798) {
  $27 = (HEAP32[$1 >> 2] | 0) + ($cmd + 4) | 0; //@line 45947
  _pce_printf(42512, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 39432, HEAP32[tempInt + 8 >> 2] = $27, tempInt) | 0); //@line 45948
  $_0 = 0; //@line 45950
  STACKTOP = sp; //@line 45952
  return $_0 | 0; //@line 45953
 }
 return 0;
}
function _cmd_match_eol($cmd) {
 $cmd = $cmd | 0;
 var $1 = 0, $i_0_i = 0, $4 = 0, $5 = 0;
 $1 = $cmd | 0; //@line 45964
 $i_0_i = HEAP32[$1 >> 2] | 0; //@line 45967
 while (1) {
  $4 = $cmd + 4 + $i_0_i | 0; //@line 45970
  $5 = HEAP8[$4] | 0; //@line 45971
  if (!(($5 << 24 >> 24 | 0) == 13 | ($5 << 24 >> 24 | 0) == 32 | ($5 << 24 >> 24 | 0) == 9 | ($5 << 24 >> 24 | 0) == 10)) {
   break;
  }
  $i_0_i = $i_0_i + 1 | 0; //@line 45977
 }
 HEAP32[$1 >> 2] = $i_0_i; //@line 45979
 return (HEAP8[$4] | 0) == 0 | 0; //@line 45984
}
function _cmd_match($cmd, $str) {
 $cmd = $cmd | 0;
 $str = $str | 0;
 var $1 = 0, $i_0_i = 0, $5 = 0, $8 = 0, $_pr = 0, $i_016 = 0, $_015 = 0, $14 = 0, $15 = 0, $16 = 0, $i_014 = 0, $_011 = 0;
 $1 = $cmd | 0; //@line 45996
 $i_0_i = HEAP32[$1 >> 2] | 0; //@line 45999
 while (1) {
  $5 = HEAP8[$cmd + 4 + $i_0_i | 0] | 0; //@line 46003
  if (!(($5 << 24 >> 24 | 0) == 13 | ($5 << 24 >> 24 | 0) == 32 | ($5 << 24 >> 24 | 0) == 9 | ($5 << 24 >> 24 | 0) == 10)) {
   break;
  }
  $i_0_i = $i_0_i + 1 | 0; //@line 46009
 }
 HEAP32[$1 >> 2] = $i_0_i; //@line 46011
 $8 = HEAP8[$str] | 0; //@line 46012
 L18853 : do {
  if ($8 << 24 >> 24 == 0) {
   $i_014 = $i_0_i; //@line 46017
  } else {
   $_015 = $str;
   $i_016 = $i_0_i;
   $_pr = $8;
   while (1) {
    if ((HEAP8[$cmd + 4 + $i_016 | 0] | 0) != $_pr << 24 >> 24) {
     $_011 = 0; //@line 46028
     break;
    }
    $14 = $i_016 + 1 | 0; //@line 46031
    $15 = $_015 + 1 | 0; //@line 46032
    $16 = HEAP8[$15] | 0; //@line 46033
    if ($16 << 24 >> 24 == 0) {
     $i_014 = $14; //@line 46037
     break L18853;
    } else {
     $_015 = $15;
     $i_016 = $14;
     $_pr = $16;
    }
   }
   return $_011 | 0; //@line 46045
  }
 } while (0);
 HEAP32[$1 >> 2] = $i_014; //@line 46049
 $_011 = 1; //@line 46051
 return $_011 | 0; //@line 46054
}
function _cmd_match_str($cmd, $str, $max) {
 $cmd = $cmd | 0;
 $str = $str | 0;
 $max = $max | 0;
 var $1 = 0, $i_0_i = 0, $4 = 0, $5 = 0, $9 = 0, $_i_0_i = 0, $_021_us = 0, $i_0_us = 0, $n_0_us = 0, $12 = 0, $15 = 0, $_021 = 0, $i_0 = 0, $n_0 = 0, $18 = 0, $22 = 0, $25 = 0, $n_030 = 0, $_02125 = 0, $i_1 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 46068
 $1 = $cmd | 0; //@line 46069
 $i_0_i = HEAP32[$1 >> 2] | 0; //@line 46072
 while (1) {
  $4 = $cmd + 4 + $i_0_i | 0; //@line 46075
  $5 = HEAP8[$4] | 0; //@line 46076
  if (!(($5 << 24 >> 24 | 0) == 13 | ($5 << 24 >> 24 | 0) == 32 | ($5 << 24 >> 24 | 0) == 9 | ($5 << 24 >> 24 | 0) == 10)) {
   break;
  }
  $i_0_i = $i_0_i + 1 | 0; //@line 46082
 }
 HEAP32[$1 >> 2] = $i_0_i; //@line 46084
 $9 = (HEAP8[$4] | 0) == 34; //@line 46086
 $_i_0_i = ($9 & 1) + $i_0_i | 0; //@line 46088
 L18865 : do {
  if ($9) {
   $n_0_us = 0;
   $i_0_us = $_i_0_i;
   $_021_us = $str;
   while (1) {
    $12 = HEAP8[$cmd + 4 + $i_0_us | 0] | 0; //@line 46097
    if (($12 << 24 >> 24 | 0) == 34) {
     break;
    } else if (($12 << 24 >> 24 | 0) == 0) {
     $i_1 = $i_0_us;
     $_02125 = $_021_us;
     $n_030 = $n_0_us;
     label = 14827; //@line 46102
     break L18865;
    }
    HEAP8[$_021_us] = $12; //@line 46106
    $15 = $n_0_us + 1 | 0; //@line 46108
    if ($15 >>> 0 < $max >>> 0) {
     $n_0_us = $15;
     $i_0_us = $i_0_us + 1 | 0;
     $_021_us = $_021_us + 1 | 0;
    } else {
     label = 14826; //@line 46114
     break L18865;
    }
   }
   $i_1 = $i_0_us + 1 | 0;
   $_02125 = $_021_us;
   $n_030 = $n_0_us;
   label = 14827; //@line 46121
  } else {
   $n_0 = 0;
   $i_0 = $_i_0_i;
   $_021 = $str;
   while (1) {
    $18 = HEAP8[$cmd + 4 + $i_0 | 0] | 0; //@line 46129
    if (($18 << 24 >> 24 | 0) == 0 | ($18 << 24 >> 24 | 0) == 32 | ($18 << 24 >> 24 | 0) == 9 | ($18 << 24 >> 24 | 0) == 10 | ($18 << 24 >> 24 | 0) == 13) {
     $i_1 = $i_0;
     $_02125 = $_021;
     $n_030 = $n_0;
     label = 14827; //@line 46132
     break L18865;
    }
    HEAP8[$_021] = $18; //@line 46136
    $22 = $n_0 + 1 | 0; //@line 46138
    if ($22 >>> 0 < $max >>> 0) {
     $n_0 = $22;
     $i_0 = $i_0 + 1 | 0;
     $_021 = $_021 + 1 | 0;
    } else {
     label = 14826; //@line 46144
     break;
    }
   }
  }
 } while (0);
 if ((label | 0) == 14826) {
  $25 = (HEAP32[$1 >> 2] | 0) + ($cmd + 4) | 0; //@line 46152
  _pce_printf(42512, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 36480, HEAP32[tempInt + 8 >> 2] = $25, tempInt) | 0); //@line 46153
  $_0 = 0; //@line 46155
  STACKTOP = sp; //@line 46157
  return $_0 | 0; //@line 46158
 } else if ((label | 0) == 14827) {
  HEAP8[$_02125] = 0; //@line 46164
  HEAP32[$1 >> 2] = $i_1; //@line 46165
  $_0 = ($n_030 | 0) != 0 | 0; //@line 46169
  STACKTOP = sp; //@line 46171
  return $_0 | 0; //@line 46172
 }
 return 0;
}
function _cmd_match_end($cmd) {
 $cmd = $cmd | 0;
 var $1 = 0, $i_0_i_i = 0, $4 = 0, $5 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 46182
 $1 = $cmd | 0; //@line 46183
 $i_0_i_i = HEAP32[$1 >> 2] | 0; //@line 46186
 while (1) {
  $4 = $cmd + 4 + $i_0_i_i | 0; //@line 46189
  $5 = HEAP8[$4] | 0; //@line 46190
  if (!(($5 << 24 >> 24 | 0) == 13 | ($5 << 24 >> 24 | 0) == 32 | ($5 << 24 >> 24 | 0) == 9 | ($5 << 24 >> 24 | 0) == 10)) {
   break;
  }
  $i_0_i_i = $i_0_i_i + 1 | 0; //@line 46196
 }
 HEAP32[$1 >> 2] = $i_0_i_i; //@line 46198
 if ((HEAP8[$4] | 0) == 0) {
  $_0 = 1; //@line 46203
  STACKTOP = sp; //@line 46205
  return $_0 | 0; //@line 46206
 }
 _pce_printf(42512, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 33520, HEAP32[tempInt + 8 >> 2] = $4, tempInt) | 0); //@line 46208
 $_0 = 0; //@line 46210
 STACKTOP = sp; //@line 46212
 return $_0 | 0; //@line 46213
}
function _cmd_init($ext, $getsym, $setsym) {
 $ext = $ext | 0;
 $getsym = $getsym | 0;
 $setsym = $setsym | 0;
 HEAP32[15706] = $ext; //@line 46224
 HEAP32[15704] = $getsym; //@line 46226
 HEAP32[15702] = $ext; //@line 46227
 HEAP32[15700] = $setsym; //@line 46229
 return;
}
function _cmd_match_expr($cmd, $val, $base) {
 $cmd = $cmd | 0;
 $val = $val | 0;
 $base = $base | 0;
 var $str_i = 0, $tmp_i = 0, $1 = 0, $3 = 0, $4 = 0, $i_0_i144_i = 0, $7 = 0, $i_0_i_i137_i = 0, $11 = 0, $12 = 0, $15 = 0, $_024_i_i = 0, $19 = 0, $n_0_i_i = 0, $21 = 0, $30 = 0, $33 = 0, $j_0_i = 0, $35 = 0, $36 = 0, $38 = 0, $40 = 0, $41 = 0, $42 = 0, $45 = 0, $47 = 0, $49 = 0, $50 = 0, $52 = 0, $54 = 0, $61 = 0, $62 = 0, $63 = 0, $65 = 0, $72 = 0, $73 = 0, $74 = 0, $76 = 0, $83 = 0, $84 = 0, $85 = 0, $87 = 0, $94 = 0, $95 = 0, $96 = 0, $98 = 0, $105 = 0, $106 = 0, $107 = 0, $109 = 0, $116 = 0, $117 = 0, $118 = 0, $120 = 0, $127 = 0, $128 = 0, $129 = 0, $131 = 0, $138 = 0, $i_0_i_i47_i = 0, $139 = 0, $147 = 0, $op_0_i7 = 0, $i_0_i_i_i = 0, $149 = 0, $150 = 0, $_0_i43_i = 0, $160 = 0, $162 = 0, $j_014_i_i = 0, $i_013_i_i = 0, $163 = 0, $177 = 0, $178 = 0, $179$1 = 0, $182 = 0, $j_1_i_i = 0, $183 = 0, $j_0_lcssa_i_i = 0, $_sym_i_i = 0, $189 = 0, $196 = 0, $198 = 0, $199 = 0, $i_0_i_i6 = 0, $215 = 0, $219 = 0, $223 = 0, $227 = 0, $229 = 0, $233 = 0, $238 = 0, $242 = 0, $246 = 0, $250 = 0, $254 = 0, $256 = 0, $258 = 0, $i_0_i_i = 0, $264 = 0, $265 = 0, $270 = 0, $_0 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $279 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 46277
 STACKTOP = STACKTOP + 264 | 0; //@line 46277
 $str_i = sp | 0; //@line 46278
 $tmp_i = sp + 256 | 0; //@line 46279
 $1 = $str_i | 0; //@line 46280
 $3 = $cmd | 0; //@line 46282
 $4 = $str_i + 1 | 0; //@line 46283
 $i_0_i144_i = HEAP32[$3 >> 2] | 0; //@line 46286
 while (1) {
  $7 = HEAP8[$cmd + 4 + $i_0_i144_i | 0] | 0; //@line 46290
  if (($7 << 24 >> 24 | 0) == 13 | ($7 << 24 >> 24 | 0) == 32 | ($7 << 24 >> 24 | 0) == 9 | ($7 << 24 >> 24 | 0) == 10) {
   $i_0_i144_i = $i_0_i144_i + 1 | 0; //@line 46294
   continue;
  }
  HEAP32[$3 >> 2] = $i_0_i144_i; //@line 46297
  $i_0_i_i137_i = $i_0_i144_i; //@line 46299
  while (1) {
   $11 = $cmd + 4 + $i_0_i_i137_i | 0; //@line 46302
   $12 = HEAP8[$11] | 0; //@line 46303
   if (!(($12 << 24 >> 24 | 0) == 13 | ($12 << 24 >> 24 | 0) == 32 | ($12 << 24 >> 24 | 0) == 9 | ($12 << 24 >> 24 | 0) == 10)) {
    break;
   }
   $i_0_i_i137_i = $i_0_i_i137_i + 1 | 0; //@line 46309
  }
  HEAP32[$3 >> 2] = $i_0_i_i137_i; //@line 46311
  $15 = HEAP8[$11] | 0; //@line 46312
  if ((($15 << 24 >> 24) - 36 | 0) >>> 0 < 2) {
   HEAP8[$1] = $15; //@line 46318
   $n_0_i_i = 1;
   $19 = $i_0_i_i137_i + 1 | 0;
   $_024_i_i = $4;
  } else {
   $n_0_i_i = 0;
   $19 = $i_0_i_i137_i;
   $_024_i_i = $1;
  }
  while (1) {
   $21 = HEAP8[$cmd + 4 + $19 | 0] | 0; //@line 46330
   if ($21 << 24 >> 24 == 0) {
    label = 14852; //@line 46334
    break;
   }
   if (!(($21 - 48 & 255) < 10 | ($21 - 97 & 255) < 26 | ($21 - 65 & 255) < 26 | $21 << 24 >> 24 == 95)) {
    label = 14852; //@line 46349
    break;
   }
   HEAP8[$_024_i_i] = $21; //@line 46353
   $30 = $n_0_i_i + 1 | 0; //@line 46355
   if ($30 >>> 0 < 256) {
    $n_0_i_i = $30;
    $19 = $19 + 1 | 0;
    $_024_i_i = $_024_i_i + 1 | 0;
   } else {
    label = 14851; //@line 46361
    break;
   }
  }
  L18904 : do {
   if ((label | 0) == 14852) {
    label = 0; //@line 46367
    HEAP8[$_024_i_i] = 0; //@line 46368
    HEAP32[$3 >> 2] = $19; //@line 46369
    if (($n_0_i_i | 0) == 0) {
     label = 14932; //@line 46373
     break;
    } else {
     $j_0_i = 0; //@line 46376
    }
    while (1) {
     $35 = $str_i + $j_0_i | 0; //@line 46380
     $36 = HEAP8[$35] | 0; //@line 46381
     $38 = $j_0_i + 1 | 0; //@line 46383
     if ($36 << 24 >> 24 == 37) {
      $j_0_i = $38; //@line 46386
     } else {
      $40 = $19; //@line 46388
      break;
     }
    }
    while (1) {
     $41 = $cmd + 4 + $40 | 0; //@line 46394
     $42 = HEAP8[$41] | 0; //@line 46395
     if (!(($42 << 24 >> 24 | 0) == 13 | ($42 << 24 >> 24 | 0) == 32 | ($42 << 24 >> 24 | 0) == 9 | ($42 << 24 >> 24 | 0) == 10)) {
      break;
     }
     $40 = $40 + 1 | 0; //@line 46401
    }
    HEAP32[$3 >> 2] = $40; //@line 46403
    $45 = HEAP8[$41] | 0; //@line 46404
    L18912 : do {
     if ($45 << 24 >> 24 == 61) {
      $47 = $40 + 1 | 0; //@line 46408
      HEAP32[$3 >> 2] = $47; //@line 46409
      $op_0_i7 = 1;
      $147 = $47;
     } else {
      $50 = $40;
      $49 = $45;
      while (1) {
       if (!(($49 << 24 >> 24 | 0) == 13 | ($49 << 24 >> 24 | 0) == 32 | ($49 << 24 >> 24 | 0) == 9 | ($49 << 24 >> 24 | 0) == 10)) {
        break;
       }
       $52 = $50 + 1 | 0; //@line 46420
       $50 = $52;
       $49 = HEAP8[$cmd + 4 + $52 | 0] | 0;
      }
      HEAP32[$3 >> 2] = $50; //@line 46427
      $54 = HEAP8[$cmd + 4 + $50 | 0] | 0; //@line 46428
      do {
       if ($54 << 24 >> 24 == 43) {
        if ((HEAP8[$50 + 1 + ($cmd + 4) | 0] | 0) != 61) {
         $62 = $50;
         $61 = 43;
         break;
        }
        $271 = $50 + 2 | 0; //@line 46440
        HEAP32[$3 >> 2] = $271; //@line 46441
        $op_0_i7 = 2;
        $147 = $271;
        break L18912;
       } else {
        $62 = $50;
        $61 = $54;
       }
      } while (0);
      while (1) {
       if (!(($61 << 24 >> 24 | 0) == 13 | ($61 << 24 >> 24 | 0) == 32 | ($61 << 24 >> 24 | 0) == 9 | ($61 << 24 >> 24 | 0) == 10)) {
        break;
       }
       $63 = $62 + 1 | 0; //@line 46455
       $62 = $63;
       $61 = HEAP8[$cmd + 4 + $63 | 0] | 0;
      }
      HEAP32[$3 >> 2] = $62; //@line 46462
      $65 = HEAP8[$cmd + 4 + $62 | 0] | 0; //@line 46463
      do {
       if ($65 << 24 >> 24 == 45) {
        if ((HEAP8[$62 + 1 + ($cmd + 4) | 0] | 0) != 61) {
         $73 = $62;
         $72 = 45;
         break;
        }
        $272 = $62 + 2 | 0; //@line 46475
        HEAP32[$3 >> 2] = $272; //@line 46476
        $op_0_i7 = 3;
        $147 = $272;
        break L18912;
       } else {
        $73 = $62;
        $72 = $65;
       }
      } while (0);
      while (1) {
       if (!(($72 << 24 >> 24 | 0) == 13 | ($72 << 24 >> 24 | 0) == 32 | ($72 << 24 >> 24 | 0) == 9 | ($72 << 24 >> 24 | 0) == 10)) {
        break;
       }
       $74 = $73 + 1 | 0; //@line 46490
       $73 = $74;
       $72 = HEAP8[$cmd + 4 + $74 | 0] | 0;
      }
      HEAP32[$3 >> 2] = $73; //@line 46497
      $76 = HEAP8[$cmd + 4 + $73 | 0] | 0; //@line 46498
      do {
       if ($76 << 24 >> 24 == 42) {
        if ((HEAP8[$73 + 1 + ($cmd + 4) | 0] | 0) != 61) {
         $84 = $73;
         $83 = 42;
         break;
        }
        $273 = $73 + 2 | 0; //@line 46510
        HEAP32[$3 >> 2] = $273; //@line 46511
        $op_0_i7 = 4;
        $147 = $273;
        break L18912;
       } else {
        $84 = $73;
        $83 = $76;
       }
      } while (0);
      while (1) {
       if (!(($83 << 24 >> 24 | 0) == 13 | ($83 << 24 >> 24 | 0) == 32 | ($83 << 24 >> 24 | 0) == 9 | ($83 << 24 >> 24 | 0) == 10)) {
        break;
       }
       $85 = $84 + 1 | 0; //@line 46525
       $84 = $85;
       $83 = HEAP8[$cmd + 4 + $85 | 0] | 0;
      }
      HEAP32[$3 >> 2] = $84; //@line 46532
      $87 = HEAP8[$cmd + 4 + $84 | 0] | 0; //@line 46533
      do {
       if ($87 << 24 >> 24 == 47) {
        if ((HEAP8[$84 + 1 + ($cmd + 4) | 0] | 0) != 61) {
         $95 = $84;
         $94 = 47;
         break;
        }
        $274 = $84 + 2 | 0; //@line 46545
        HEAP32[$3 >> 2] = $274; //@line 46546
        $op_0_i7 = 5;
        $147 = $274;
        break L18912;
       } else {
        $95 = $84;
        $94 = $87;
       }
      } while (0);
      while (1) {
       if (!(($94 << 24 >> 24 | 0) == 13 | ($94 << 24 >> 24 | 0) == 32 | ($94 << 24 >> 24 | 0) == 9 | ($94 << 24 >> 24 | 0) == 10)) {
        break;
       }
       $96 = $95 + 1 | 0; //@line 46560
       $95 = $96;
       $94 = HEAP8[$cmd + 4 + $96 | 0] | 0;
      }
      HEAP32[$3 >> 2] = $95; //@line 46567
      $98 = HEAP8[$cmd + 4 + $95 | 0] | 0; //@line 46568
      do {
       if ($98 << 24 >> 24 == 60) {
        if ((HEAP8[$95 + 1 + ($cmd + 4) | 0] | 0) != 60) {
         $106 = $95;
         $105 = 60;
         break;
        }
        if ((HEAP8[$95 + 2 + ($cmd + 4) | 0] | 0) != 61) {
         $106 = $95;
         $105 = $98;
         break;
        }
        $279 = $95 + 3 | 0; //@line 46588
        HEAP32[$3 >> 2] = $279; //@line 46589
        $op_0_i7 = 6;
        $147 = $279;
        break L18912;
       } else {
        $106 = $95;
        $105 = $98;
       }
      } while (0);
      while (1) {
       if (!(($105 << 24 >> 24 | 0) == 13 | ($105 << 24 >> 24 | 0) == 32 | ($105 << 24 >> 24 | 0) == 9 | ($105 << 24 >> 24 | 0) == 10)) {
        break;
       }
       $107 = $106 + 1 | 0; //@line 46603
       $106 = $107;
       $105 = HEAP8[$cmd + 4 + $107 | 0] | 0;
      }
      HEAP32[$3 >> 2] = $106; //@line 46610
      $109 = HEAP8[$cmd + 4 + $106 | 0] | 0; //@line 46611
      do {
       if ($109 << 24 >> 24 == 62) {
        if ((HEAP8[$106 + 1 + ($cmd + 4) | 0] | 0) != 62) {
         $117 = $106;
         $116 = 62;
         break;
        }
        if ((HEAP8[$106 + 2 + ($cmd + 4) | 0] | 0) != 61) {
         $117 = $106;
         $116 = $109;
         break;
        }
        $284 = $106 + 3 | 0; //@line 46631
        HEAP32[$3 >> 2] = $284; //@line 46632
        $op_0_i7 = 7;
        $147 = $284;
        break L18912;
       } else {
        $117 = $106;
        $116 = $109;
       }
      } while (0);
      while (1) {
       if (!(($116 << 24 >> 24 | 0) == 13 | ($116 << 24 >> 24 | 0) == 32 | ($116 << 24 >> 24 | 0) == 9 | ($116 << 24 >> 24 | 0) == 10)) {
        break;
       }
       $118 = $117 + 1 | 0; //@line 46646
       $117 = $118;
       $116 = HEAP8[$cmd + 4 + $118 | 0] | 0;
      }
      HEAP32[$3 >> 2] = $117; //@line 46653
      $120 = HEAP8[$cmd + 4 + $117 | 0] | 0; //@line 46654
      do {
       if ($120 << 24 >> 24 == 124) {
        if ((HEAP8[$117 + 1 + ($cmd + 4) | 0] | 0) != 61) {
         $128 = $117;
         $127 = 124;
         break;
        }
        $285 = $117 + 2 | 0; //@line 46666
        HEAP32[$3 >> 2] = $285; //@line 46667
        $op_0_i7 = 8;
        $147 = $285;
        break L18912;
       } else {
        $128 = $117;
        $127 = $120;
       }
      } while (0);
      while (1) {
       if (!(($127 << 24 >> 24 | 0) == 13 | ($127 << 24 >> 24 | 0) == 32 | ($127 << 24 >> 24 | 0) == 9 | ($127 << 24 >> 24 | 0) == 10)) {
        break;
       }
       $129 = $128 + 1 | 0; //@line 46681
       $128 = $129;
       $127 = HEAP8[$cmd + 4 + $129 | 0] | 0;
      }
      HEAP32[$3 >> 2] = $128; //@line 46688
      $131 = HEAP8[$cmd + 4 + $128 | 0] | 0; //@line 46689
      do {
       if ($131 << 24 >> 24 == 38) {
        if ((HEAP8[$128 + 1 + ($cmd + 4) | 0] | 0) != 61) {
         $i_0_i_i47_i = $128;
         $138 = 38;
         break;
        }
        $286 = $128 + 2 | 0; //@line 46701
        HEAP32[$3 >> 2] = $286; //@line 46702
        $op_0_i7 = 9;
        $147 = $286;
        break L18912;
       } else {
        $i_0_i_i47_i = $128;
        $138 = $131;
       }
      } while (0);
      while (1) {
       if (!(($138 << 24 >> 24 | 0) == 13 | ($138 << 24 >> 24 | 0) == 32 | ($138 << 24 >> 24 | 0) == 9 | ($138 << 24 >> 24 | 0) == 10)) {
        break;
       }
       $139 = $i_0_i_i47_i + 1 | 0; //@line 46716
       $i_0_i_i47_i = $139;
       $138 = HEAP8[$cmd + 4 + $139 | 0] | 0;
      }
      HEAP32[$3 >> 2] = $i_0_i_i47_i; //@line 46723
      if ((HEAP8[$cmd + 4 + $i_0_i_i47_i | 0] | 0) != 94) {
       label = 14932; //@line 46727
       break L18904;
      }
      if ((HEAP8[$i_0_i_i47_i + 1 + ($cmd + 4) | 0] | 0) != 61) {
       label = 14932; //@line 46735
       break L18904;
      }
      $287 = $i_0_i_i47_i + 2 | 0; //@line 46738
      HEAP32[$3 >> 2] = $287; //@line 46739
      $op_0_i7 = 10;
      $147 = $287;
     }
    } while (0);
    $i_0_i_i_i = $147; //@line 46747
    while (1) {
     $149 = $cmd + 4 + $i_0_i_i_i | 0; //@line 46750
     $150 = HEAP8[$149] | 0; //@line 46751
     if (!(($150 << 24 >> 24 | 0) == 13 | ($150 << 24 >> 24 | 0) == 32 | ($150 << 24 >> 24 | 0) == 9 | ($150 << 24 >> 24 | 0) == 10)) {
      break;
     }
     $i_0_i_i_i = $i_0_i_i_i + 1 | 0; //@line 46757
    }
    HEAP32[$3 >> 2] = $i_0_i_i_i; //@line 46759
    if ((HEAP8[$149] | 0) == 59) {
     HEAP32[$3 >> 2] = $i_0_i_i_i + 1; //@line 46764
     if (($36 << 24 >> 24 | 0) == 37) {
      break;
     } else if (($36 << 24 >> 24 | 0) == 36) {
      $_0_i43_i = $str_i + $38 | 0; //@line 46770
     } else {
      $_0_i43_i = $35; //@line 46772
     }
     HEAP32[$val >> 2] = 0; //@line 46775
     $160 = HEAP32[15696] | 0; //@line 46776
     if (($160 | 0) == 0) {
      $j_0_lcssa_i_i = 0; //@line 46780
     } else {
      $i_013_i_i = 0;
      $j_014_i_i = 0;
      $162 = $160;
      while (1) {
       $163 = HEAP32[15698] | 0; //@line 46787
       if ((_strcmp(HEAP32[$163 + ($i_013_i_i << 3) >> 2] | 0, $_0_i43_i | 0) | 0) == 0) {
        HEAP32[$val >> 2] = HEAP32[$163 + ($i_013_i_i << 3) + 4 >> 2]; //@line 46796
        _free(HEAP32[(HEAP32[15698] | 0) + ($i_013_i_i << 3) >> 2] | 0); //@line 46800
        $j_1_i_i = $j_014_i_i;
        $182 = HEAP32[15696] | 0;
       } else {
        $177 = $163 + ($i_013_i_i << 3) | 0; //@line 46807
        $178 = $163 + ($j_014_i_i << 3) | 0; //@line 46808
        $179$1 = HEAP32[$177 + 4 >> 2] | 0; //@line 46812
        HEAP32[$178 >> 2] = HEAP32[$177 >> 2]; //@line 46814
        HEAP32[$178 + 4 >> 2] = $179$1; //@line 46816
        $j_1_i_i = $j_014_i_i + 1 | 0;
        $182 = $162;
       }
       $183 = $i_013_i_i + 1 | 0; //@line 46822
       if ($183 >>> 0 < $182 >>> 0) {
        $i_013_i_i = $183;
        $j_014_i_i = $j_1_i_i;
        $162 = $182;
       } else {
        $j_0_lcssa_i_i = $j_1_i_i; //@line 46828
        break;
       }
      }
     }
     HEAP32[15696] = $j_0_lcssa_i_i; //@line 46834
     break;
    }
    $_sym_i_i = ($36 - 36 & 255) < 2 ? $str_i + $38 | 0 : $35; //@line 46841
    do {
     if ($36 << 24 >> 24 == 36) {
      label = 14911; //@line 46846
     } else {
      $189 = HEAP32[15704] | 0; //@line 46848
      if (($189 | 0) == 0) {
       $196 = $36; //@line 46852
      } else {
       if ((FUNCTION_TABLE_iiii[$189 & 127](HEAP32[15706] | 0, $_sym_i_i, $val) | 0) == 0) {
        break;
       }
       $196 = HEAP8[$35] | 0; //@line 46863
      }
      if ($196 << 24 >> 24 == 37) {
       label = 14915; //@line 46869
      } else {
       label = 14911; //@line 46871
      }
     }
    } while (0);
    L19003 : do {
     if ((label | 0) == 14911) {
      label = 0; //@line 46877
      $198 = HEAP32[15696] | 0; //@line 46878
      $199 = HEAP32[15698] | 0; //@line 46879
      $i_0_i_i6 = 0; //@line 46881
      while (1) {
       if ($i_0_i_i6 >>> 0 >= $198 >>> 0) {
        label = 14915; //@line 46887
        break L19003;
       }
       if ((_strcmp(HEAP32[$199 + ($i_0_i_i6 << 3) >> 2] | 0, $_sym_i_i | 0) | 0) == 0) {
        break;
       } else {
        $i_0_i_i6 = $i_0_i_i6 + 1 | 0; //@line 46899
       }
      }
      HEAP32[$val >> 2] = HEAP32[$199 + ($i_0_i_i6 << 3) + 4 >> 2]; //@line 46904
     }
    } while (0);
    if ((label | 0) == 14915) {
     label = 0; //@line 46909
     HEAP32[$val >> 2] = 0; //@line 46910
    }
    if ((_cmd_match_expr_cond($cmd, $tmp_i, $base) | 0) == 0) {
     label = 14932; //@line 46917
     break;
    }
    do {
     if (($op_0_i7 | 0) == 6) {
      $238 = HEAP32[$val >> 2] << HEAP32[$tmp_i >> 2]; //@line 46924
      HEAP32[$val >> 2] = $238; //@line 46925
      $258 = $238; //@line 46927
     } else if (($op_0_i7 | 0) == 7) {
      $242 = (HEAP32[$val >> 2] | 0) >>> ((HEAP32[$tmp_i >> 2] | 0) >>> 0); //@line 46931
      HEAP32[$val >> 2] = $242; //@line 46932
      $258 = $242; //@line 46934
     } else if (($op_0_i7 | 0) == 9) {
      $250 = HEAP32[$val >> 2] & HEAP32[$tmp_i >> 2]; //@line 46938
      HEAP32[$val >> 2] = $250; //@line 46939
      $258 = $250; //@line 46941
     } else if (($op_0_i7 | 0) == 8) {
      $246 = HEAP32[$val >> 2] | HEAP32[$tmp_i >> 2]; //@line 46945
      HEAP32[$val >> 2] = $246; //@line 46946
      $258 = $246; //@line 46948
     } else if (($op_0_i7 | 0) == 10) {
      $254 = HEAP32[$val >> 2] ^ HEAP32[$tmp_i >> 2]; //@line 46952
      HEAP32[$val >> 2] = $254; //@line 46953
      $258 = $254; //@line 46955
     } else if (($op_0_i7 | 0) == 3) {
      $223 = (HEAP32[$val >> 2] | 0) - (HEAP32[$tmp_i >> 2] | 0) | 0; //@line 46959
      HEAP32[$val >> 2] = $223; //@line 46960
      $258 = $223; //@line 46962
     } else if (($op_0_i7 | 0) == 1) {
      $215 = HEAP32[$tmp_i >> 2] | 0; //@line 46964
      HEAP32[$val >> 2] = $215; //@line 46965
      $258 = $215; //@line 46967
     } else if (($op_0_i7 | 0) == 2) {
      $219 = (HEAP32[$val >> 2] | 0) + (HEAP32[$tmp_i >> 2] | 0) | 0; //@line 46971
      HEAP32[$val >> 2] = $219; //@line 46972
      $258 = $219; //@line 46974
     } else if (($op_0_i7 | 0) == 4) {
      $227 = Math_imul(HEAP32[$val >> 2] | 0, HEAP32[$tmp_i >> 2] | 0) | 0; //@line 46978
      HEAP32[$val >> 2] = $227; //@line 46979
      $258 = $227; //@line 46981
     } else if (($op_0_i7 | 0) == 5) {
      $229 = HEAP32[$tmp_i >> 2] | 0; //@line 46983
      if (($229 | 0) == 0) {
       HEAP32[$val >> 2] = -1; //@line 46987
       $258 = -1; //@line 46988
       break;
      } else {
       $233 = ((HEAP32[$val >> 2] | 0) >>> 0) / ($229 >>> 0) | 0; //@line 46992
       HEAP32[$val >> 2] = $233; //@line 46993
       $258 = $233; //@line 46995
       break;
      }
     } else {
      $256 = HEAP32[$tmp_i >> 2] | 0; //@line 46999
      HEAP32[$val >> 2] = $256; //@line 47000
      $258 = $256; //@line 47002
     }
    } while (0);
    _cmd_set_sym(0, $35, $258) | 0; //@line 47006
   } else if ((label | 0) == 14851) {
    label = 0; //@line 47010
    $33 = (HEAP32[$3 >> 2] | 0) + ($cmd + 4) | 0; //@line 47012
    _pce_printf(42512, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 39432, HEAP32[tempInt + 8 >> 2] = $33, tempInt) | 0); //@line 47013
    label = 14932; //@line 47015
   }
  } while (0);
  if ((label | 0) == 14932) {
   label = 0; //@line 47019
   HEAP32[$3 >> 2] = $i_0_i144_i; //@line 47020
   if ((_cmd_match_expr_cond($cmd, $val, $base) | 0) == 0) {
    $_0 = 0; //@line 47025
    label = 14951; //@line 47026
    break;
   }
  }
  $i_0_i_i = HEAP32[$3 >> 2] | 0; //@line 47032
  while (1) {
   $264 = $cmd + 4 + $i_0_i_i | 0; //@line 47035
   $265 = HEAP8[$264] | 0; //@line 47036
   if (!(($265 << 24 >> 24 | 0) == 13 | ($265 << 24 >> 24 | 0) == 32 | ($265 << 24 >> 24 | 0) == 9 | ($265 << 24 >> 24 | 0) == 10)) {
    break;
   }
   $i_0_i_i = $i_0_i_i + 1 | 0; //@line 47042
  }
  HEAP32[$3 >> 2] = $i_0_i_i; //@line 47044
  if ((HEAP8[$264] | 0) != 44) {
   $_0 = 1; //@line 47048
   label = 14950; //@line 47049
   break;
  }
  $270 = $i_0_i_i + 1 | 0; //@line 47052
  HEAP32[$3 >> 2] = $270; //@line 47053
  $i_0_i144_i = $270; //@line 47055
 }
 if ((label | 0) == 14950) {
  STACKTOP = sp; //@line 47059
  return $_0 | 0; //@line 47060
 } else if ((label | 0) == 14951) {
  STACKTOP = sp; //@line 47064
  return $_0 | 0; //@line 47065
 }
 return 0;
}
function _cmd_match_uint16($cmd, $val) {
 $cmd = $cmd | 0;
 $val = $val | 0;
 var $tmp_i = 0, $_0_i = 0, sp = 0;
 sp = STACKTOP; //@line 47075
 STACKTOP = STACKTOP + 8 | 0; //@line 47075
 $tmp_i = sp | 0; //@line 47076
 if ((_cmd_match_expr($cmd, $tmp_i, 16) | 0) == 0) {
  $_0_i = 0; //@line 47082
  STACKTOP = sp; //@line 47084
  return $_0_i | 0; //@line 47085
 }
 HEAP16[$val >> 1] = HEAP32[$tmp_i >> 2] & 65535; //@line 47089
 $_0_i = 1; //@line 47091
 STACKTOP = sp; //@line 47093
 return $_0_i | 0; //@line 47094
}
function _cmd_match_uint32($cmd, $val) {
 $cmd = $cmd | 0;
 $val = $val | 0;
 return _cmd_match_expr($cmd, $val, 16) | 0; //@line 47106
}
function _cmd_match_expr_cond($cmd, $val, $base) {
 $cmd = $cmd | 0;
 $val = $val | 0;
 $base = $base | 0;
 var $val2_i2110 = 0, $val2_i2087 = 0, $val2_i2083 = 0, $val2_i2060 = 0, $val2_i2056 = 0, $val2_i2033 = 0, $val2_i2029 = 0, $val2_i2006 = 0, $val2_i2002 = 0, $val2_i1979 = 0, $val2_i1975 = 0, $val2_i1952 = 0, $val2_i1948 = 0, $val2_i1925 = 0, $val2_i1921 = 0, $val2_i1898 = 0, $val2_i1894 = 0, $val2_i1871 = 0, $val2_i1867 = 0, $val2_i1844 = 0, $val2_i1840 = 0, $val2_i1817 = 0, $val2_i1813 = 0, $val2_i1790 = 0, $val2_i1786 = 0, $val2_i1763 = 0, $val2_i1759 = 0, $val2_i1736 = 0, $val2_i1732 = 0, $val2_i1709 = 0, $val2_i1705 = 0, $val2_i1682 = 0, $val2_i1678 = 0, $val2_i1655 = 0, $val2_i1651 = 0, $val2_i1628 = 0, $val2_i1624 = 0, $val2_i1601 = 0, $val2_i1597 = 0, $val2_i1574 = 0, $val2_i1570 = 0, $val2_i1547 = 0, $val2_i1543 = 0, $val2_i1520 = 0, $val2_i1516 = 0, $val2_i1493 = 0, $val2_i1489 = 0, $val2_i1466 = 0, $val2_i1462 = 0, $val2_i1439 = 0, $val2_i1435 = 0, $val2_i1412 = 0, $val2_i1408 = 0, $val2_i1385 = 0, $val2_i1381 = 0, $val2_i1358 = 0, $val2_i1354 = 0, $val2_i1331 = 0, $val2_i1327 = 0, $val2_i1304 = 0, $val2_i1300 = 0, $val2_i1277 = 0, $val2_i1273 = 0, $val2_i1250 = 0, $val2_i1246 = 0, $val2_i1223 = 0, $val2_i1219 = 0, $val2_i1196 = 0, $val2_i1192 = 0, $val2_i1169 = 0, $val2_i1165 = 0, $val2_i1142 = 0, $val2_i1138 = 0, $val2_i1115 = 0, $val2_i1111 = 0, $val2_i1088 = 0, $val2_i1084 = 0, $val2_i1061 = 0, $val2_i1057 = 0, $val2_i1034 = 0, $val2_i1030 = 0, $val2_i1007 = 0, $val2_i1003 = 0, $val2_i980 = 0, $val2_i976 = 0, $val2_i953 = 0, $val2_i949 = 0, $val2_i926 = 0, $val2_i922 = 0, $val2_i899 = 0, $val2_i895 = 0, $val2_i872 = 0, $val2_i868 = 0, $val2_i845 = 0, $val2_i841 = 0, $val2_i820 = 0, $val2_i817 = 0, $val2_i814 = 0, $val2_i811 = 0, $val2_i808 = 0, $val2_i805 = 0, $val2_i802 = 0, $val2_i799 = 0, $val2_i796 = 0, $val2_i793 = 0, $val2_i790 = 0, $val2_i787 = 0, $val2_i784 = 0, $val2_i781 = 0, $val2_i778 = 0, $val2_i775 = 0, $val2_i772 = 0, $val2_i769 = 0, $val2_i766 = 0, $val2_i763 = 0, $val2_i760 = 0, $val2_i757 = 0, $val2_i754 = 0, $val2_i751 = 0, $val2_i748 = 0, $val2_i745 = 0, $val2_i742 = 0, $val2_i739 = 0, $val2_i736 = 0, $val2_i733 = 0, $val2_i730 = 0, $val2_i727 = 0, $val2_i724 = 0, $val2_i721 = 0, $val2_i718 = 0, $val2_i715 = 0, $val2_i712 = 0, $val2_i709 = 0, $val2_i706 = 0, $val2_i703 = 0, $val2_i700 = 0, $val2_i697 = 0, $val2_i694 = 0, $val2_i691 = 0, $val2_i688 = 0, $val2_i685 = 0, $val2_i682 = 0, $val2_i679 = 0, $val2_i677 = 0, $val2_i665 = 0, $val2_i634 = 0, $val2_i622 = 0, $val2_i591 = 0, $val2_i579 = 0, $val2_i548 = 0, $val2_i536 = 0, $val2_i505 = 0, $val2_i493 = 0, $val2_i462 = 0, $val2_i450 = 0, $val2_i419 = 0, $val2_i407 = 0, $val2_i376 = 0, $val2_i364 = 0, $val2_i333 = 0, $val2_i321 = 0, $val2_i290 = 0, $val2_i278 = 0, $val2_i247 = 0, $val2_i235 = 0, $val2_i204 = 0, $val2_i192 = 0, $val2_i165 = 0, $val2_i162 = 0, $val2_i159 = 0, $val2_i156 = 0, $val2_i153 = 0, $val2_i150 = 0, $val2_i147 = 0, $val2_i144 = 0, $val2_i141 = 0, $val2_i138 = 0, $val2_i135 = 0, $val2_i132 = 0, $val2_i130 = 0, $val2_i117 = 0, $val2_i104 = 0, $val2_i91 = 0, $val2_i78 = 0, $val2_i65 = 0, $val2_i53 = 0, $val2_i40 = 0, $val2_i27 = 0, $val2_i = 0, $val2 = 0, $val3 = 0, $1 = 0, $2 = 0, $13 = 0, $14 = 0, $15 = 0, $18 = 0, $25 = 0, $i_0_i_i2124 = 0, $26 = 0, $storemerge4248_in = 0, $op_0_i = 0, $49 = 0, $51 = 0, $52 = 0, $53 = 0, $56 = 0, $63 = 0, $i_0_i_i831 = 0, $64 = 0, $68 = 0, $73 = 0, $78 = 0, $79 = 0, $80 = 0, $83 = 0, $90 = 0, $i_0_i_i2144 = 0, $91 = 0, $storemerge4247_in = 0, $op_0_i842 = 0, $i_0_i_i_i166 = 0, $116 = 0, $117 = 0, $130 = 0, $135 = 0, $136 = 0, $137 = 0, $140 = 0, $147 = 0, $i_0_i_i2164 = 0, $148 = 0, $storemerge4246_in = 0, $op_0_i846 = 0, $170 = 0, $172 = 0, $173 = 0, $174 = 0, $177 = 0, $184 = 0, $i_0_i_i858 = 0, $185 = 0, $190 = 0, $195 = 0, $196 = 0, $197 = 0, $200 = 0, $207 = 0, $i_0_i_i2184 = 0, $208 = 0, $storemerge4245_in = 0, $op_0_i869 = 0, $236 = 0, $238 = 0, $239 = 0, $240 = 0, $243 = 0, $250 = 0, $i_0_i_i182 = 0, $251 = 0, $255 = 0, $272 = 0, $277 = 0, $278 = 0, $279 = 0, $282 = 0, $289 = 0, $i_0_i_i2204 = 0, $290 = 0, $storemerge4244_in = 0, $op_0_i873 = 0, $312 = 0, $314 = 0, $315 = 0, $316 = 0, $319 = 0, $326 = 0, $i_0_i_i885 = 0, $327 = 0, $332 = 0, $337 = 0, $338 = 0, $339 = 0, $342 = 0, $349 = 0, $i_0_i_i2224 = 0, $350 = 0, $storemerge4243_in = 0, $op_0_i896 = 0, $i_0_i_i_i193 = 0, $375 = 0, $376 = 0, $382 = 0, $387 = 0, $388 = 0, $389 = 0, $392 = 0, $399 = 0, $i_0_i_i2244 = 0, $400 = 0, $storemerge4242_in = 0, $op_0_i900 = 0, $422 = 0, $424 = 0, $425 = 0, $426 = 0, $429 = 0, $436 = 0, $i_0_i_i912 = 0, $437 = 0, $442 = 0, $447 = 0, $448 = 0, $449 = 0, $452 = 0, $459 = 0, $i_0_i_i2264 = 0, $460 = 0, $storemerge4241_in = 0, $op_0_i923 = 0, $485 = 0, $i_0_i_i_i54 = 0, $493 = 0, $494 = 0, $536 = 0, $537 = 0, $538 = 0, $541 = 0, $548 = 0, $i_0_i_i2284 = 0, $549 = 0, $storemerge4240_in = 0, $op_0_i927 = 0, $571 = 0, $573 = 0, $574 = 0, $575 = 0, $578 = 0, $585 = 0, $i_0_i_i939 = 0, $586 = 0, $591 = 0, $596 = 0, $597 = 0, $598 = 0, $601 = 0, $608 = 0, $i_0_i_i2304 = 0, $609 = 0, $storemerge4239_in = 0, $op_0_i950 = 0, $i_0_i_i_i205 = 0, $634 = 0, $635 = 0, $641 = 0, $646 = 0, $647 = 0, $648 = 0, $651 = 0, $658 = 0, $i_0_i_i2324 = 0, $659 = 0, $storemerge4238_in = 0, $op_0_i954 = 0, $681 = 0, $683 = 0, $684 = 0, $685 = 0, $688 = 0, $695 = 0, $i_0_i_i966 = 0, $696 = 0, $701 = 0, $706 = 0, $707 = 0, $708 = 0, $711 = 0, $718 = 0, $i_0_i_i2344 = 0, $719 = 0, $storemerge4237_in = 0, $op_0_i977 = 0, $744 = 0, $748 = 0, $750 = 0, $751 = 0, $752 = 0, $755 = 0, $762 = 0, $i_0_i_i225 = 0, $763 = 0, $768 = 0, $773 = 0, $774 = 0, $775 = 0, $778 = 0, $785 = 0, $i_0_i_i2364 = 0, $786 = 0, $storemerge4236_in = 0, $op_0_i981 = 0, $808 = 0, $810 = 0, $811 = 0, $812 = 0, $815 = 0, $822 = 0, $i_0_i_i993 = 0, $823 = 0, $828 = 0, $833 = 0, $834 = 0, $835 = 0, $838 = 0, $845 = 0, $i_0_i_i2384 = 0, $846 = 0, $storemerge4235_in = 0, $op_0_i1004 = 0, $i_0_i_i_i236 = 0, $871 = 0, $872 = 0, $878 = 0, $883 = 0, $884 = 0, $885 = 0, $888 = 0, $895 = 0, $i_0_i_i2404 = 0, $896 = 0, $storemerge4234_in = 0, $op_0_i1008 = 0, $918 = 0, $920 = 0, $921 = 0, $922 = 0, $925 = 0, $932 = 0, $i_0_i_i1020 = 0, $933 = 0, $938 = 0, $943 = 0, $944 = 0, $945 = 0, $948 = 0, $955 = 0, $i_0_i_i2424 = 0, $956 = 0, $storemerge4233_in = 0, $op_0_i1031 = 0, $981 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $1001 = 0, $1009 = 0, $1010 = 0, $1011 = 0, $1014 = 0, $1021 = 0, $i_0_i_i2444 = 0, $1022 = 0, $storemerge4232_in = 0, $op_0_i1035 = 0, $1044 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1051 = 0, $1058 = 0, $i_0_i_i1047 = 0, $1059 = 0, $1064 = 0, $1069 = 0, $1070 = 0, $1071 = 0, $1074 = 0, $1081 = 0, $i_0_i_i2464 = 0, $1082 = 0, $storemerge4231_in = 0, $op_0_i1058 = 0, $i_0_i_i_i248 = 0, $1107 = 0, $1108 = 0, $1114 = 0, $1119 = 0, $1120 = 0, $1121 = 0, $1124 = 0, $1131 = 0, $i_0_i_i2484 = 0, $1132 = 0, $storemerge4230_in = 0, $op_0_i1062 = 0, $1154 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1161 = 0, $1168 = 0, $i_0_i_i1074 = 0, $1169 = 0, $1174 = 0, $1179 = 0, $1180 = 0, $1181 = 0, $1184 = 0, $1191 = 0, $i_0_i_i2504 = 0, $1192 = 0, $storemerge4229_in = 0, $op_0_i1085 = 0, $1217 = 0, $1221 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1228 = 0, $1235 = 0, $i_0_i_i268 = 0, $1236 = 0, $1241 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1251 = 0, $1258 = 0, $i_0_i_i2524 = 0, $1259 = 0, $storemerge4228_in = 0, $op_0_i1089 = 0, $1281 = 0, $1283 = 0, $1284 = 0, $1285 = 0, $1288 = 0, $1295 = 0, $i_0_i_i1101 = 0, $1296 = 0, $1301 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1311 = 0, $1318 = 0, $i_0_i_i2544 = 0, $1319 = 0, $storemerge4227_in = 0, $op_0_i1112 = 0, $i_0_i_i_i279 = 0, $1344 = 0, $1345 = 0, $1351 = 0, $1356 = 0, $1357 = 0, $1358 = 0, $1361 = 0, $1368 = 0, $i_0_i_i2564 = 0, $1369 = 0, $storemerge4226_in = 0, $op_0_i1116 = 0, $1391 = 0, $1393 = 0, $1394 = 0, $1395 = 0, $1398 = 0, $1405 = 0, $i_0_i_i1128 = 0, $1406 = 0, $1411 = 0, $1416 = 0, $1417 = 0, $1418 = 0, $1421 = 0, $1428 = 0, $i_0_i_i2584 = 0, $1429 = 0, $storemerge4225_in = 0, $op_0_i1139 = 0, $1454 = 0, $i_0_i_i_i66 = 0, $1462 = 0, $1463 = 0, $1474 = 0, $1475 = 0, $1476 = 0, $1479 = 0, $1486 = 0, $i_0_i_i2604 = 0, $1487 = 0, $storemerge4224_in = 0, $op_0_i1143 = 0, $1509 = 0, $1511 = 0, $1512 = 0, $1513 = 0, $1516 = 0, $1523 = 0, $i_0_i_i1155 = 0, $1524 = 0, $1529 = 0, $1534 = 0, $1535 = 0, $1536 = 0, $1539 = 0, $1546 = 0, $i_0_i_i2624 = 0, $1547 = 0, $storemerge4223_in = 0, $op_0_i1166 = 0, $i_0_i_i_i291 = 0, $1572 = 0, $1573 = 0, $1579 = 0, $1584 = 0, $1585 = 0, $1586 = 0, $1589 = 0, $1596 = 0, $i_0_i_i2644 = 0, $1597 = 0, $storemerge4222_in = 0, $op_0_i1170 = 0, $1619 = 0, $1621 = 0, $1622 = 0, $1623 = 0, $1626 = 0, $1633 = 0, $i_0_i_i1182 = 0, $1634 = 0, $1639 = 0, $1644 = 0, $1645 = 0, $1646 = 0, $1649 = 0, $1656 = 0, $i_0_i_i2664 = 0, $1657 = 0, $storemerge4221_in = 0, $op_0_i1193 = 0, $1682 = 0, $1686 = 0, $1688 = 0, $1689 = 0, $1690 = 0, $1693 = 0, $1700 = 0, $i_0_i_i311 = 0, $1701 = 0, $1706 = 0, $1711 = 0, $1712 = 0, $1713 = 0, $1716 = 0, $1723 = 0, $i_0_i_i2684 = 0, $1724 = 0, $storemerge4220_in = 0, $op_0_i1197 = 0, $1746 = 0, $1748 = 0, $1749 = 0, $1750 = 0, $1753 = 0, $1760 = 0, $i_0_i_i1209 = 0, $1761 = 0, $1766 = 0, $1771 = 0, $1772 = 0, $1773 = 0, $1776 = 0, $1783 = 0, $i_0_i_i2704 = 0, $1784 = 0, $storemerge4219_in = 0, $op_0_i1220 = 0, $i_0_i_i_i322 = 0, $1809 = 0, $1810 = 0, $1816 = 0, $1821 = 0, $1822 = 0, $1823 = 0, $1826 = 0, $1833 = 0, $i_0_i_i2724 = 0, $1834 = 0, $storemerge4218_in = 0, $op_0_i1224 = 0, $1856 = 0, $1858 = 0, $1859 = 0, $1860 = 0, $1863 = 0, $1870 = 0, $i_0_i_i1236 = 0, $1871 = 0, $1876 = 0, $1881 = 0, $1882 = 0, $1883 = 0, $1886 = 0, $1893 = 0, $i_0_i_i2744 = 0, $1894 = 0, $storemerge4217_in = 0, $op_0_i1247 = 0, $1919 = 0, $1927 = 0, $1934 = 0, $1942 = 0, $1944 = 0, $i_0_i_i18 = 0, $1945 = 0, $1950 = 0, $1961 = 0, $1962 = 0, $1963 = 0, $1966 = 0, $1973 = 0, $i_0_i_i2764 = 0, $1974 = 0, $storemerge4216_in = 0, $op_0_i1251 = 0, $1997 = 0, $1999 = 0, $2000 = 0, $2001 = 0, $2004 = 0, $2011 = 0, $i_0_i_i1263 = 0, $2012 = 0, $2016 = 0, $2021 = 0, $2026 = 0, $2027 = 0, $2028 = 0, $2031 = 0, $2038 = 0, $i_0_i_i2784 = 0, $2039 = 0, $storemerge4215_in = 0, $op_0_i1274 = 0, $i_0_i_i_i334 = 0, $2064 = 0, $2065 = 0, $2078 = 0, $2083 = 0, $2084 = 0, $2085 = 0, $2088 = 0, $2095 = 0, $i_0_i_i2804 = 0, $2096 = 0, $storemerge4214_in = 0, $op_0_i1278 = 0, $2118 = 0, $2120 = 0, $2121 = 0, $2122 = 0, $2125 = 0, $2132 = 0, $i_0_i_i1290 = 0, $2133 = 0, $2138 = 0, $2143 = 0, $2144 = 0, $2145 = 0, $2148 = 0, $2155 = 0, $i_0_i_i2824 = 0, $2156 = 0, $storemerge4213_in = 0, $op_0_i1301 = 0, $2181 = 0, $2185 = 0, $2187 = 0, $2188 = 0, $2189 = 0, $2192 = 0, $2199 = 0, $i_0_i_i354 = 0, $2200 = 0, $2204 = 0, $2221 = 0, $2226 = 0, $2227 = 0, $2228 = 0, $2231 = 0, $2238 = 0, $i_0_i_i2844 = 0, $2239 = 0, $storemerge4212_in = 0, $op_0_i1305 = 0, $2261 = 0, $2263 = 0, $2264 = 0, $2265 = 0, $2268 = 0, $2275 = 0, $i_0_i_i1317 = 0, $2276 = 0, $2281 = 0, $2286 = 0, $2287 = 0, $2288 = 0, $2291 = 0, $2298 = 0, $i_0_i_i2864 = 0, $2299 = 0, $storemerge4211_in = 0, $op_0_i1328 = 0, $i_0_i_i_i365 = 0, $2324 = 0, $2325 = 0, $2331 = 0, $2336 = 0, $2337 = 0, $2338 = 0, $2341 = 0, $2348 = 0, $i_0_i_i2884 = 0, $2349 = 0, $storemerge4210_in = 0, $op_0_i1332 = 0, $2371 = 0, $2373 = 0, $2374 = 0, $2375 = 0, $2378 = 0, $2385 = 0, $i_0_i_i1344 = 0, $2386 = 0, $2391 = 0, $2396 = 0, $2397 = 0, $2398 = 0, $2401 = 0, $2408 = 0, $i_0_i_i2904 = 0, $2409 = 0, $storemerge4209_in = 0, $op_0_i1355 = 0, $2434 = 0, $i_0_i_i_i79 = 0, $2442 = 0, $2443 = 0, $2485 = 0, $2486 = 0, $2487 = 0, $2490 = 0, $2497 = 0, $i_0_i_i2924 = 0, $2498 = 0, $storemerge4208_in = 0, $op_0_i1359 = 0, $2520 = 0, $2522 = 0, $2523 = 0, $2524 = 0, $2527 = 0, $2534 = 0, $i_0_i_i1371 = 0, $2535 = 0, $2540 = 0, $2545 = 0, $2546 = 0, $2547 = 0, $2550 = 0, $2557 = 0, $i_0_i_i2944 = 0, $2558 = 0, $storemerge4207_in = 0, $op_0_i1382 = 0, $i_0_i_i_i377 = 0, $2583 = 0, $2584 = 0, $2590 = 0, $2595 = 0, $2596 = 0, $2597 = 0, $2600 = 0, $2607 = 0, $i_0_i_i2964 = 0, $2608 = 0, $storemerge4206_in = 0, $op_0_i1386 = 0, $2630 = 0, $2632 = 0, $2633 = 0, $2634 = 0, $2637 = 0, $2644 = 0, $i_0_i_i1398 = 0, $2645 = 0, $2650 = 0, $2655 = 0, $2656 = 0, $2657 = 0, $2660 = 0, $2667 = 0, $i_0_i_i2984 = 0, $2668 = 0, $storemerge4205_in = 0, $op_0_i1409 = 0, $2693 = 0, $2697 = 0, $2699 = 0, $2700 = 0, $2701 = 0, $2704 = 0, $2711 = 0, $i_0_i_i397 = 0, $2712 = 0, $2717 = 0, $2722 = 0, $2723 = 0, $2724 = 0, $2727 = 0, $2734 = 0, $i_0_i_i3004 = 0, $2735 = 0, $storemerge4204_in = 0, $op_0_i1413 = 0, $2757 = 0, $2759 = 0, $2760 = 0, $2761 = 0, $2764 = 0, $2771 = 0, $i_0_i_i1425 = 0, $2772 = 0, $2777 = 0, $2782 = 0, $2783 = 0, $2784 = 0, $2787 = 0, $2794 = 0, $i_0_i_i3024 = 0, $2795 = 0, $storemerge4203_in = 0, $op_0_i1436 = 0, $i_0_i_i_i408 = 0, $2820 = 0, $2821 = 0, $2827 = 0, $2832 = 0, $2833 = 0, $2834 = 0, $2837 = 0, $2844 = 0, $i_0_i_i3044 = 0, $2845 = 0, $storemerge4202_in = 0, $op_0_i1440 = 0, $2867 = 0, $2869 = 0, $2870 = 0, $2871 = 0, $2874 = 0, $2881 = 0, $i_0_i_i1452 = 0, $2882 = 0, $2887 = 0, $2892 = 0, $2893 = 0, $2894 = 0, $2897 = 0, $2904 = 0, $i_0_i_i3064 = 0, $2905 = 0, $storemerge4201_in = 0, $op_0_i1463 = 0, $2930 = 0, $2938 = 0, $2945 = 0, $2946 = 0, $2947 = 0, $2948 = 0, $2951 = 0, $2959 = 0, $2960 = 0, $2961 = 0, $2964 = 0, $2971 = 0, $i_0_i_i3084 = 0, $2972 = 0, $storemerge4200_in = 0, $op_0_i1467 = 0, $2994 = 0, $2996 = 0, $2997 = 0, $2998 = 0, $3001 = 0, $3008 = 0, $i_0_i_i1479 = 0, $3009 = 0, $3014 = 0, $3019 = 0, $3020 = 0, $3021 = 0, $3024 = 0, $3031 = 0, $i_0_i_i3104 = 0, $3032 = 0, $storemerge4199_in = 0, $op_0_i1490 = 0, $i_0_i_i_i420 = 0, $3057 = 0, $3058 = 0, $3064 = 0, $3069 = 0, $3070 = 0, $3071 = 0, $3074 = 0, $3081 = 0, $i_0_i_i3124 = 0, $3082 = 0, $storemerge4198_in = 0, $op_0_i1494 = 0, $3104 = 0, $3106 = 0, $3107 = 0, $3108 = 0, $3111 = 0, $3118 = 0, $i_0_i_i1506 = 0, $3119 = 0, $3124 = 0, $3129 = 0, $3130 = 0, $3131 = 0, $3134 = 0, $3141 = 0, $i_0_i_i3144 = 0, $3142 = 0, $storemerge4197_in = 0, $op_0_i1517 = 0, $3167 = 0, $3171 = 0, $3173 = 0, $3174 = 0, $3175 = 0, $3178 = 0, $3185 = 0, $i_0_i_i440 = 0, $3186 = 0, $3191 = 0, $3196 = 0, $3197 = 0, $3198 = 0, $3201 = 0, $3208 = 0, $i_0_i_i3164 = 0, $3209 = 0, $storemerge4196_in = 0, $op_0_i1521 = 0, $3231 = 0, $3233 = 0, $3234 = 0, $3235 = 0, $3238 = 0, $3245 = 0, $i_0_i_i1533 = 0, $3246 = 0, $3251 = 0, $3256 = 0, $3257 = 0, $3258 = 0, $3261 = 0, $3268 = 0, $i_0_i_i3184 = 0, $3269 = 0, $storemerge4195_in = 0, $op_0_i1544 = 0, $i_0_i_i_i451 = 0, $3294 = 0, $3295 = 0, $3301 = 0, $3306 = 0, $3307 = 0, $3308 = 0, $3311 = 0, $3318 = 0, $i_0_i_i3204 = 0, $3319 = 0, $storemerge4194_in = 0, $op_0_i1548 = 0, $3341 = 0, $3343 = 0, $3344 = 0, $3345 = 0, $3348 = 0, $3355 = 0, $i_0_i_i1560 = 0, $3356 = 0, $3361 = 0, $3366 = 0, $3367 = 0, $3368 = 0, $3371 = 0, $3378 = 0, $i_0_i_i3224 = 0, $3379 = 0, $storemerge4193_in = 0, $op_0_i1571 = 0, $3404 = 0, $i_0_i_i_i92 = 0, $3412 = 0, $3413 = 0, $3424 = 0, $3425 = 0, $3426 = 0, $3429 = 0, $3436 = 0, $i_0_i_i3244 = 0, $3437 = 0, $storemerge4192_in = 0, $op_0_i1575 = 0, $3459 = 0, $3461 = 0, $3462 = 0, $3463 = 0, $3466 = 0, $3473 = 0, $i_0_i_i1587 = 0, $3474 = 0, $3479 = 0, $3484 = 0, $3485 = 0, $3486 = 0, $3489 = 0, $3496 = 0, $i_0_i_i3264 = 0, $3497 = 0, $storemerge4191_in = 0, $op_0_i1598 = 0, $i_0_i_i_i463 = 0, $3522 = 0, $3523 = 0, $3529 = 0, $3534 = 0, $3535 = 0, $3536 = 0, $3539 = 0, $3546 = 0, $i_0_i_i3284 = 0, $3547 = 0, $storemerge4190_in = 0, $op_0_i1602 = 0, $3569 = 0, $3571 = 0, $3572 = 0, $3573 = 0, $3576 = 0, $3583 = 0, $i_0_i_i1614 = 0, $3584 = 0, $3589 = 0, $3594 = 0, $3595 = 0, $3596 = 0, $3599 = 0, $3606 = 0, $i_0_i_i3304 = 0, $3607 = 0, $storemerge4189_in = 0, $op_0_i1625 = 0, $3632 = 0, $3636 = 0, $3638 = 0, $3639 = 0, $3640 = 0, $3643 = 0, $3650 = 0, $i_0_i_i483 = 0, $3651 = 0, $3656 = 0, $3661 = 0, $3662 = 0, $3663 = 0, $3666 = 0, $3673 = 0, $i_0_i_i3324 = 0, $3674 = 0, $storemerge4188_in = 0, $op_0_i1629 = 0, $3696 = 0, $3698 = 0, $3699 = 0, $3700 = 0, $3703 = 0, $3710 = 0, $i_0_i_i1641 = 0, $3711 = 0, $3716 = 0, $3721 = 0, $3722 = 0, $3723 = 0, $3726 = 0, $3733 = 0, $i_0_i_i3344 = 0, $3734 = 0, $storemerge4187_in = 0, $op_0_i1652 = 0, $i_0_i_i_i494 = 0, $3759 = 0, $3760 = 0, $3766 = 0, $3771 = 0, $3772 = 0, $3773 = 0, $3776 = 0, $3783 = 0, $i_0_i_i3364 = 0, $3784 = 0, $storemerge4186_in = 0, $op_0_i1656 = 0, $3806 = 0, $3808 = 0, $3809 = 0, $3810 = 0, $3813 = 0, $3820 = 0, $i_0_i_i1668 = 0, $3821 = 0, $3826 = 0, $3831 = 0, $3832 = 0, $3833 = 0, $3836 = 0, $3843 = 0, $i_0_i_i3384 = 0, $3844 = 0, $storemerge4185_in = 0, $op_0_i1679 = 0, $3869 = 0, $3877 = 0, $3884 = 0, $3892 = 0, $3894 = 0, $i_0_i_i = 0, $3895 = 0, $3900 = 0, $3912 = 0, $3913 = 0, $3914 = 0, $3917 = 0, $3924 = 0, $i_0_i_i3404 = 0, $3925 = 0, $storemerge4184_in = 0, $op_0_i1683 = 0, $3948 = 0, $3950 = 0, $3951 = 0, $3952 = 0, $3955 = 0, $3962 = 0, $i_0_i_i1695 = 0, $3963 = 0, $3967 = 0, $3972 = 0, $3977 = 0, $3978 = 0, $3979 = 0, $3982 = 0, $3989 = 0, $i_0_i_i3424 = 0, $3990 = 0, $storemerge4183_in = 0, $op_0_i1706 = 0, $i_0_i_i_i506 = 0, $4015 = 0, $4016 = 0, $4029 = 0, $4034 = 0, $4035 = 0, $4036 = 0, $4039 = 0, $4046 = 0, $i_0_i_i3444 = 0, $4047 = 0, $storemerge4182_in = 0, $op_0_i1710 = 0, $4069 = 0, $4071 = 0, $4072 = 0, $4073 = 0, $4076 = 0, $4083 = 0, $i_0_i_i1722 = 0, $4084 = 0, $4089 = 0, $4094 = 0, $4095 = 0, $4096 = 0, $4099 = 0, $4106 = 0, $i_0_i_i3464 = 0, $4107 = 0, $storemerge4181_in = 0, $op_0_i1733 = 0, $4132 = 0, $4136 = 0, $4138 = 0, $4139 = 0, $4140 = 0, $4143 = 0, $4150 = 0, $i_0_i_i526 = 0, $4151 = 0, $4155 = 0, $4172 = 0, $4177 = 0, $4178 = 0, $4179 = 0, $4182 = 0, $4189 = 0, $i_0_i_i3484 = 0, $4190 = 0, $storemerge4180_in = 0, $op_0_i1737 = 0, $4212 = 0, $4214 = 0, $4215 = 0, $4216 = 0, $4219 = 0, $4226 = 0, $i_0_i_i1749 = 0, $4227 = 0, $4232 = 0, $4237 = 0, $4238 = 0, $4239 = 0, $4242 = 0, $4249 = 0, $i_0_i_i3504 = 0, $4250 = 0, $storemerge4179_in = 0, $op_0_i1760 = 0, $i_0_i_i_i537 = 0, $4275 = 0, $4276 = 0, $4282 = 0, $4287 = 0, $4288 = 0, $4289 = 0, $4292 = 0, $4299 = 0, $i_0_i_i3524 = 0, $4300 = 0, $storemerge4178_in = 0, $op_0_i1764 = 0, $4322 = 0, $4324 = 0, $4325 = 0, $4326 = 0, $4329 = 0, $4336 = 0, $i_0_i_i1776 = 0, $4337 = 0, $4342 = 0, $4347 = 0, $4348 = 0, $4349 = 0, $4352 = 0, $4359 = 0, $i_0_i_i3544 = 0, $4360 = 0, $storemerge4177_in = 0, $op_0_i1787 = 0, $4385 = 0, $i_0_i_i_i105 = 0, $4393 = 0, $4394 = 0, $4436 = 0, $4437 = 0, $4438 = 0, $4441 = 0, $4448 = 0, $i_0_i_i3564 = 0, $4449 = 0, $storemerge4176_in = 0, $op_0_i1791 = 0, $4471 = 0, $4473 = 0, $4474 = 0, $4475 = 0, $4478 = 0, $4485 = 0, $i_0_i_i1803 = 0, $4486 = 0, $4491 = 0, $4496 = 0, $4497 = 0, $4498 = 0, $4501 = 0, $4508 = 0, $i_0_i_i3584 = 0, $4509 = 0, $storemerge4175_in = 0, $op_0_i1814 = 0, $i_0_i_i_i549 = 0, $4534 = 0, $4535 = 0, $4541 = 0, $4546 = 0, $4547 = 0, $4548 = 0, $4551 = 0, $4558 = 0, $i_0_i_i3604 = 0, $4559 = 0, $storemerge4174_in = 0, $op_0_i1818 = 0, $4581 = 0, $4583 = 0, $4584 = 0, $4585 = 0, $4588 = 0, $4595 = 0, $i_0_i_i1830 = 0, $4596 = 0, $4601 = 0, $4606 = 0, $4607 = 0, $4608 = 0, $4611 = 0, $4618 = 0, $i_0_i_i3624 = 0, $4619 = 0, $storemerge4173_in = 0, $op_0_i1841 = 0, $4644 = 0, $4648 = 0, $4650 = 0, $4651 = 0, $4652 = 0, $4655 = 0, $4662 = 0, $i_0_i_i569 = 0, $4663 = 0, $4668 = 0, $4673 = 0, $4674 = 0, $4675 = 0, $4678 = 0, $4685 = 0, $i_0_i_i3644 = 0, $4686 = 0, $storemerge4172_in = 0, $op_0_i1845 = 0, $4708 = 0, $4710 = 0, $4711 = 0, $4712 = 0, $4715 = 0, $4722 = 0, $i_0_i_i1857 = 0, $4723 = 0, $4728 = 0, $4733 = 0, $4734 = 0, $4735 = 0, $4738 = 0, $4745 = 0, $i_0_i_i3664 = 0, $4746 = 0, $storemerge4171_in = 0, $op_0_i1868 = 0, $i_0_i_i_i580 = 0, $4771 = 0, $4772 = 0, $4778 = 0, $4783 = 0, $4784 = 0, $4785 = 0, $4788 = 0, $4795 = 0, $i_0_i_i3684 = 0, $4796 = 0, $storemerge4170_in = 0, $op_0_i1872 = 0, $4818 = 0, $4820 = 0, $4821 = 0, $4822 = 0, $4825 = 0, $4832 = 0, $i_0_i_i1884 = 0, $4833 = 0, $4838 = 0, $4843 = 0, $4844 = 0, $4845 = 0, $4848 = 0, $4855 = 0, $i_0_i_i3704 = 0, $4856 = 0, $storemerge4169_in = 0, $op_0_i1895 = 0, $4881 = 0, $4889 = 0, $4896 = 0, $i_0_i_i_i41 = 0, $4897 = 0, $4898 = 0, $4909 = 0, $4910 = 0, $4911 = 0, $4914 = 0, $4921 = 0, $i_0_i_i3724 = 0, $4922 = 0, $storemerge4168_in = 0, $op_0_i1899 = 0, $4944 = 0, $4946 = 0, $4947 = 0, $4948 = 0, $4951 = 0, $4958 = 0, $i_0_i_i1911 = 0, $4959 = 0, $4964 = 0, $4969 = 0, $4970 = 0, $4971 = 0, $4974 = 0, $4981 = 0, $i_0_i_i3744 = 0, $4982 = 0, $storemerge4167_in = 0, $op_0_i1922 = 0, $i_0_i_i_i592 = 0, $5007 = 0, $5008 = 0, $5014 = 0, $5019 = 0, $5020 = 0, $5021 = 0, $5024 = 0, $5031 = 0, $i_0_i_i3764 = 0, $5032 = 0, $storemerge4166_in = 0, $op_0_i1926 = 0, $5054 = 0, $5056 = 0, $5057 = 0, $5058 = 0, $5061 = 0, $5068 = 0, $i_0_i_i1938 = 0, $5069 = 0, $5074 = 0, $5079 = 0, $5080 = 0, $5081 = 0, $5084 = 0, $5091 = 0, $i_0_i_i3784 = 0, $5092 = 0, $storemerge4165_in = 0, $op_0_i1949 = 0, $5117 = 0, $5121 = 0, $5123 = 0, $5124 = 0, $5125 = 0, $5128 = 0, $5135 = 0, $i_0_i_i612 = 0, $5136 = 0, $5141 = 0, $5146 = 0, $5147 = 0, $5148 = 0, $5151 = 0, $5158 = 0, $i_0_i_i3804 = 0, $5159 = 0, $storemerge4164_in = 0, $op_0_i1953 = 0, $5181 = 0, $5183 = 0, $5184 = 0, $5185 = 0, $5188 = 0, $5195 = 0, $i_0_i_i1965 = 0, $5196 = 0, $5201 = 0, $5206 = 0, $5207 = 0, $5208 = 0, $5211 = 0, $5218 = 0, $i_0_i_i3824 = 0, $5219 = 0, $storemerge4163_in = 0, $op_0_i1976 = 0, $i_0_i_i_i623 = 0, $5244 = 0, $5245 = 0, $5251 = 0, $5256 = 0, $5257 = 0, $5258 = 0, $5261 = 0, $5268 = 0, $i_0_i_i3844 = 0, $5269 = 0, $storemerge4162_in = 0, $op_0_i1980 = 0, $5291 = 0, $5293 = 0, $5294 = 0, $5295 = 0, $5298 = 0, $5305 = 0, $i_0_i_i1992 = 0, $5306 = 0, $5311 = 0, $5316 = 0, $5317 = 0, $5318 = 0, $5321 = 0, $5328 = 0, $i_0_i_i3864 = 0, $5329 = 0, $storemerge4161_in = 0, $op_0_i2003 = 0, $5354 = 0, $i_0_i_i_i118 = 0, $5362 = 0, $5363 = 0, $5374 = 0, $5375 = 0, $5376 = 0, $5379 = 0, $5386 = 0, $i_0_i_i3884 = 0, $5387 = 0, $storemerge4160_in = 0, $op_0_i2007 = 0, $5409 = 0, $5411 = 0, $5412 = 0, $5413 = 0, $5416 = 0, $5423 = 0, $i_0_i_i2019 = 0, $5424 = 0, $5429 = 0, $5434 = 0, $5435 = 0, $5436 = 0, $5439 = 0, $5446 = 0, $i_0_i_i3904 = 0, $5447 = 0, $storemerge4159_in = 0, $op_0_i2030 = 0, $i_0_i_i_i635 = 0, $5472 = 0, $5473 = 0, $5479 = 0, $5484 = 0, $5485 = 0, $5486 = 0, $5489 = 0, $5496 = 0, $i_0_i_i3924 = 0, $5497 = 0, $storemerge4158_in = 0, $op_0_i2034 = 0, $5519 = 0, $5521 = 0, $5522 = 0, $5523 = 0, $5526 = 0, $5533 = 0, $i_0_i_i2046 = 0, $5534 = 0, $5539 = 0, $5544 = 0, $5545 = 0, $5546 = 0, $5549 = 0, $5556 = 0, $i_0_i_i3944 = 0, $5557 = 0, $storemerge4157_in = 0, $op_0_i2057 = 0, $5582 = 0, $5586 = 0, $5588 = 0, $5589 = 0, $5590 = 0, $5593 = 0, $5600 = 0, $i_0_i_i655 = 0, $5601 = 0, $5606 = 0, $5611 = 0, $5612 = 0, $5613 = 0, $5616 = 0, $5623 = 0, $i_0_i_i3964 = 0, $5624 = 0, $storemerge4156_in = 0, $op_0_i2061 = 0, $5646 = 0, $5648 = 0, $5649 = 0, $5650 = 0, $5653 = 0, $5660 = 0, $i_0_i_i2073 = 0, $5661 = 0, $5666 = 0, $5671 = 0, $5672 = 0, $5673 = 0, $5676 = 0, $5683 = 0, $i_0_i_i3984 = 0, $5684 = 0, $storemerge4155_in = 0, $op_0_i2084 = 0, $i_0_i_i_i666 = 0, $5709 = 0, $5710 = 0, $5716 = 0, $5721 = 0, $5722 = 0, $5723 = 0, $5726 = 0, $5733 = 0, $i_0_i_i4004 = 0, $5734 = 0, $storemerge4154_in = 0, $op_0_i2088 = 0, $5756 = 0, $5758 = 0, $5759 = 0, $5760 = 0, $5763 = 0, $5770 = 0, $i_0_i_i2100 = 0, $5771 = 0, $5776 = 0, $5781 = 0, $5782 = 0, $5783 = 0, $5786 = 0, $5793 = 0, $i_0_i_i4024 = 0, $5794 = 0, $storemerge_in = 0, $op_0_i2111 = 0, $5819 = 0, $5827 = 0, $5834 = 0, $5842 = 0, $_0 = 0, $5849 = 0, $5853 = 0, $5857 = 0, $5861 = 0, $5865 = 0, $5869 = 0, $5873 = 0, $5877 = 0, $5881 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 47849
 STACKTOP = STACKTOP + 1528 | 0; //@line 47849
 $val2_i2110 = sp | 0; //@line 47850
 $val2_i2087 = sp + 8 | 0; //@line 47851
 $val2_i2083 = sp + 16 | 0; //@line 47852
 $val2_i2060 = sp + 24 | 0; //@line 47853
 $val2_i2056 = sp + 32 | 0; //@line 47854
 $val2_i2033 = sp + 40 | 0; //@line 47855
 $val2_i2029 = sp + 48 | 0; //@line 47856
 $val2_i2006 = sp + 56 | 0; //@line 47857
 $val2_i2002 = sp + 64 | 0; //@line 47858
 $val2_i1979 = sp + 72 | 0; //@line 47859
 $val2_i1975 = sp + 80 | 0; //@line 47860
 $val2_i1952 = sp + 88 | 0; //@line 47861
 $val2_i1948 = sp + 96 | 0; //@line 47862
 $val2_i1925 = sp + 104 | 0; //@line 47863
 $val2_i1921 = sp + 112 | 0; //@line 47864
 $val2_i1898 = sp + 120 | 0; //@line 47865
 $val2_i1894 = sp + 128 | 0; //@line 47866
 $val2_i1871 = sp + 136 | 0; //@line 47867
 $val2_i1867 = sp + 144 | 0; //@line 47868
 $val2_i1844 = sp + 152 | 0; //@line 47869
 $val2_i1840 = sp + 160 | 0; //@line 47870
 $val2_i1817 = sp + 168 | 0; //@line 47871
 $val2_i1813 = sp + 176 | 0; //@line 47872
 $val2_i1790 = sp + 184 | 0; //@line 47873
 $val2_i1786 = sp + 192 | 0; //@line 47874
 $val2_i1763 = sp + 200 | 0; //@line 47875
 $val2_i1759 = sp + 208 | 0; //@line 47876
 $val2_i1736 = sp + 216 | 0; //@line 47877
 $val2_i1732 = sp + 224 | 0; //@line 47878
 $val2_i1709 = sp + 232 | 0; //@line 47879
 $val2_i1705 = sp + 240 | 0; //@line 47880
 $val2_i1682 = sp + 248 | 0; //@line 47881
 $val2_i1678 = sp + 256 | 0; //@line 47882
 $val2_i1655 = sp + 264 | 0; //@line 47883
 $val2_i1651 = sp + 272 | 0; //@line 47884
 $val2_i1628 = sp + 280 | 0; //@line 47885
 $val2_i1624 = sp + 288 | 0; //@line 47886
 $val2_i1601 = sp + 296 | 0; //@line 47887
 $val2_i1597 = sp + 304 | 0; //@line 47888
 $val2_i1574 = sp + 312 | 0; //@line 47889
 $val2_i1570 = sp + 320 | 0; //@line 47890
 $val2_i1547 = sp + 328 | 0; //@line 47891
 $val2_i1543 = sp + 336 | 0; //@line 47892
 $val2_i1520 = sp + 344 | 0; //@line 47893
 $val2_i1516 = sp + 352 | 0; //@line 47894
 $val2_i1493 = sp + 360 | 0; //@line 47895
 $val2_i1489 = sp + 368 | 0; //@line 47896
 $val2_i1466 = sp + 376 | 0; //@line 47897
 $val2_i1462 = sp + 384 | 0; //@line 47898
 $val2_i1439 = sp + 392 | 0; //@line 47899
 $val2_i1435 = sp + 400 | 0; //@line 47900
 $val2_i1412 = sp + 408 | 0; //@line 47901
 $val2_i1408 = sp + 416 | 0; //@line 47902
 $val2_i1385 = sp + 424 | 0; //@line 47903
 $val2_i1381 = sp + 432 | 0; //@line 47904
 $val2_i1358 = sp + 440 | 0; //@line 47905
 $val2_i1354 = sp + 448 | 0; //@line 47906
 $val2_i1331 = sp + 456 | 0; //@line 47907
 $val2_i1327 = sp + 464 | 0; //@line 47908
 $val2_i1304 = sp + 472 | 0; //@line 47909
 $val2_i1300 = sp + 480 | 0; //@line 47910
 $val2_i1277 = sp + 488 | 0; //@line 47911
 $val2_i1273 = sp + 496 | 0; //@line 47912
 $val2_i1250 = sp + 504 | 0; //@line 47913
 $val2_i1246 = sp + 512 | 0; //@line 47914
 $val2_i1223 = sp + 520 | 0; //@line 47915
 $val2_i1219 = sp + 528 | 0; //@line 47916
 $val2_i1196 = sp + 536 | 0; //@line 47917
 $val2_i1192 = sp + 544 | 0; //@line 47918
 $val2_i1169 = sp + 552 | 0; //@line 47919
 $val2_i1165 = sp + 560 | 0; //@line 47920
 $val2_i1142 = sp + 568 | 0; //@line 47921
 $val2_i1138 = sp + 576 | 0; //@line 47922
 $val2_i1115 = sp + 584 | 0; //@line 47923
 $val2_i1111 = sp + 592 | 0; //@line 47924
 $val2_i1088 = sp + 600 | 0; //@line 47925
 $val2_i1084 = sp + 608 | 0; //@line 47926
 $val2_i1061 = sp + 616 | 0; //@line 47927
 $val2_i1057 = sp + 624 | 0; //@line 47928
 $val2_i1034 = sp + 632 | 0; //@line 47929
 $val2_i1030 = sp + 640 | 0; //@line 47930
 $val2_i1007 = sp + 648 | 0; //@line 47931
 $val2_i1003 = sp + 656 | 0; //@line 47932
 $val2_i980 = sp + 664 | 0; //@line 47933
 $val2_i976 = sp + 672 | 0; //@line 47934
 $val2_i953 = sp + 680 | 0; //@line 47935
 $val2_i949 = sp + 688 | 0; //@line 47936
 $val2_i926 = sp + 696 | 0; //@line 47937
 $val2_i922 = sp + 704 | 0; //@line 47938
 $val2_i899 = sp + 712 | 0; //@line 47939
 $val2_i895 = sp + 720 | 0; //@line 47940
 $val2_i872 = sp + 728 | 0; //@line 47941
 $val2_i868 = sp + 736 | 0; //@line 47942
 $val2_i845 = sp + 744 | 0; //@line 47943
 $val2_i841 = sp + 752 | 0; //@line 47944
 $val2_i820 = sp + 760 | 0; //@line 47945
 $val2_i817 = sp + 768 | 0; //@line 47946
 $val2_i814 = sp + 776 | 0; //@line 47947
 $val2_i811 = sp + 784 | 0; //@line 47948
 $val2_i808 = sp + 792 | 0; //@line 47949
 $val2_i805 = sp + 800 | 0; //@line 47950
 $val2_i802 = sp + 808 | 0; //@line 47951
 $val2_i799 = sp + 816 | 0; //@line 47952
 $val2_i796 = sp + 824 | 0; //@line 47953
 $val2_i793 = sp + 832 | 0; //@line 47954
 $val2_i790 = sp + 840 | 0; //@line 47955
 $val2_i787 = sp + 848 | 0; //@line 47956
 $val2_i784 = sp + 856 | 0; //@line 47957
 $val2_i781 = sp + 864 | 0; //@line 47958
 $val2_i778 = sp + 872 | 0; //@line 47959
 $val2_i775 = sp + 880 | 0; //@line 47960
 $val2_i772 = sp + 888 | 0; //@line 47961
 $val2_i769 = sp + 896 | 0; //@line 47962
 $val2_i766 = sp + 904 | 0; //@line 47963
 $val2_i763 = sp + 912 | 0; //@line 47964
 $val2_i760 = sp + 920 | 0; //@line 47965
 $val2_i757 = sp + 928 | 0; //@line 47966
 $val2_i754 = sp + 936 | 0; //@line 47967
 $val2_i751 = sp + 944 | 0; //@line 47968
 $val2_i748 = sp + 952 | 0; //@line 47969
 $val2_i745 = sp + 960 | 0; //@line 47970
 $val2_i742 = sp + 968 | 0; //@line 47971
 $val2_i739 = sp + 976 | 0; //@line 47972
 $val2_i736 = sp + 984 | 0; //@line 47973
 $val2_i733 = sp + 992 | 0; //@line 47974
 $val2_i730 = sp + 1e3 | 0; //@line 47975
 $val2_i727 = sp + 1008 | 0; //@line 47976
 $val2_i724 = sp + 1016 | 0; //@line 47977
 $val2_i721 = sp + 1024 | 0; //@line 47978
 $val2_i718 = sp + 1032 | 0; //@line 47979
 $val2_i715 = sp + 1040 | 0; //@line 47980
 $val2_i712 = sp + 1048 | 0; //@line 47981
 $val2_i709 = sp + 1056 | 0; //@line 47982
 $val2_i706 = sp + 1064 | 0; //@line 47983
 $val2_i703 = sp + 1072 | 0; //@line 47984
 $val2_i700 = sp + 1080 | 0; //@line 47985
 $val2_i697 = sp + 1088 | 0; //@line 47986
 $val2_i694 = sp + 1096 | 0; //@line 47987
 $val2_i691 = sp + 1104 | 0; //@line 47988
 $val2_i688 = sp + 1112 | 0; //@line 47989
 $val2_i685 = sp + 1120 | 0; //@line 47990
 $val2_i682 = sp + 1128 | 0; //@line 47991
 $val2_i679 = sp + 1136 | 0; //@line 47992
 $val2_i677 = sp + 1144 | 0; //@line 47993
 $val2_i665 = sp + 1152 | 0; //@line 47994
 $val2_i634 = sp + 1160 | 0; //@line 47995
 $val2_i622 = sp + 1168 | 0; //@line 47996
 $val2_i591 = sp + 1176 | 0; //@line 47997
 $val2_i579 = sp + 1184 | 0; //@line 47998
 $val2_i548 = sp + 1192 | 0; //@line 47999
 $val2_i536 = sp + 1200 | 0; //@line 48000
 $val2_i505 = sp + 1208 | 0; //@line 48001
 $val2_i493 = sp + 1216 | 0; //@line 48002
 $val2_i462 = sp + 1224 | 0; //@line 48003
 $val2_i450 = sp + 1232 | 0; //@line 48004
 $val2_i419 = sp + 1240 | 0; //@line 48005
 $val2_i407 = sp + 1248 | 0; //@line 48006
 $val2_i376 = sp + 1256 | 0; //@line 48007
 $val2_i364 = sp + 1264 | 0; //@line 48008
 $val2_i333 = sp + 1272 | 0; //@line 48009
 $val2_i321 = sp + 1280 | 0; //@line 48010
 $val2_i290 = sp + 1288 | 0; //@line 48011
 $val2_i278 = sp + 1296 | 0; //@line 48012
 $val2_i247 = sp + 1304 | 0; //@line 48013
 $val2_i235 = sp + 1312 | 0; //@line 48014
 $val2_i204 = sp + 1320 | 0; //@line 48015
 $val2_i192 = sp + 1328 | 0; //@line 48016
 $val2_i165 = sp + 1336 | 0; //@line 48017
 $val2_i162 = sp + 1344 | 0; //@line 48018
 $val2_i159 = sp + 1352 | 0; //@line 48019
 $val2_i156 = sp + 1360 | 0; //@line 48020
 $val2_i153 = sp + 1368 | 0; //@line 48021
 $val2_i150 = sp + 1376 | 0; //@line 48022
 $val2_i147 = sp + 1384 | 0; //@line 48023
 $val2_i144 = sp + 1392 | 0; //@line 48024
 $val2_i141 = sp + 1400 | 0; //@line 48025
 $val2_i138 = sp + 1408 | 0; //@line 48026
 $val2_i135 = sp + 1416 | 0; //@line 48027
 $val2_i132 = sp + 1424 | 0; //@line 48028
 $val2_i130 = sp + 1432 | 0; //@line 48029
 $val2_i117 = sp + 1440 | 0; //@line 48030
 $val2_i104 = sp + 1448 | 0; //@line 48031
 $val2_i91 = sp + 1456 | 0; //@line 48032
 $val2_i78 = sp + 1464 | 0; //@line 48033
 $val2_i65 = sp + 1472 | 0; //@line 48034
 $val2_i53 = sp + 1480 | 0; //@line 48035
 $val2_i40 = sp + 1488 | 0; //@line 48036
 $val2_i27 = sp + 1496 | 0; //@line 48037
 $val2_i = sp + 1504 | 0; //@line 48038
 $val2 = sp + 1512 | 0; //@line 48039
 $val3 = sp + 1520 | 0; //@line 48040
 $1 = $cmd | 0; //@line 48041
 $2 = HEAP32[$1 >> 2] | 0; //@line 48042
 if ((_cmd_match_expr_cmp($cmd, $val, $base) | 0) == 0) {
  $_0 = 0; //@line 48053
  STACKTOP = sp; //@line 48055
  return $_0 | 0; //@line 48056
 }
 while (1) {
  $13 = HEAP32[$1 >> 2] | 0; //@line 48061
  while (1) {
   $14 = $cmd + 4 + $13 | 0; //@line 48064
   $15 = HEAP8[$14] | 0; //@line 48065
   if (!(($15 << 24 >> 24 | 0) == 13 | ($15 << 24 >> 24 | 0) == 32 | ($15 << 24 >> 24 | 0) == 9 | ($15 << 24 >> 24 | 0) == 10)) {
    break;
   }
   $13 = $13 + 1 | 0; //@line 48071
  }
  HEAP32[$1 >> 2] = $13; //@line 48073
  $18 = HEAP8[$14] | 0; //@line 48074
  if ($18 << 24 >> 24 == 61) {
   if ((HEAP8[$13 + 1 + ($cmd + 4) | 0] | 0) == 61) {
    $op_0_i = 1;
    $storemerge4248_in = $13;
   } else {
    $i_0_i_i2124 = $13;
    $25 = 61;
    label = 14964; //@line 48085
   }
  } else {
   $i_0_i_i2124 = $13;
   $25 = $18;
   label = 14964; //@line 48089
  }
  if ((label | 0) == 14964) {
   while (1) {
    label = 0; //@line 48093
    if (!(($25 << 24 >> 24 | 0) == 13 | ($25 << 24 >> 24 | 0) == 32 | ($25 << 24 >> 24 | 0) == 9 | ($25 << 24 >> 24 | 0) == 10)) {
     break;
    }
    $26 = $i_0_i_i2124 + 1 | 0; //@line 48099
    $i_0_i_i2124 = $26;
    $25 = HEAP8[$cmd + 4 + $26 | 0] | 0;
    label = 14964; //@line 48104
   }
   HEAP32[$1 >> 2] = $i_0_i_i2124; //@line 48107
   if ((HEAP8[$cmd + 4 + $i_0_i_i2124 | 0] | 0) != 33) {
    break;
   }
   if ((HEAP8[$i_0_i_i2124 + 1 + ($cmd + 4) | 0] | 0) == 61) {
    $op_0_i = 2;
    $storemerge4248_in = $i_0_i_i2124;
   } else {
    break;
   }
  }
  HEAP32[$1 >> 2] = $storemerge4248_in + 2; //@line 48126
  if ((_cmd_match_expr_cmp($cmd, $val2_i820, $base) | 0) == 0) {
   label = 14970; //@line 48131
   break;
  }
  if (($op_0_i | 0) == 1) {
   HEAP32[$val >> 2] = (HEAP32[$val >> 2] | 0) == (HEAP32[$val2_i820 >> 2] | 0); //@line 48139
   continue;
  } else if (($op_0_i | 0) == 2) {
   HEAP32[$val >> 2] = (HEAP32[$val >> 2] | 0) != (HEAP32[$val2_i820 >> 2] | 0); //@line 48147
   continue;
  } else {
   continue;
  }
 }
 if ((label | 0) == 14970) {
  HEAP32[$1 >> 2] = $2; //@line 48155
  $_0 = 0; //@line 48157
  STACKTOP = sp; //@line 48159
  return $_0 | 0; //@line 48160
 }
 $49 = $i_0_i_i2124; //@line 48164
 L19073 : while (1) {
  $51 = $49; //@line 48168
  while (1) {
   $52 = $cmd + 4 + $51 | 0; //@line 48171
   $53 = HEAP8[$52] | 0; //@line 48172
   if (!(($53 << 24 >> 24 | 0) == 13 | ($53 << 24 >> 24 | 0) == 32 | ($53 << 24 >> 24 | 0) == 9 | ($53 << 24 >> 24 | 0) == 10)) {
    break;
   }
   $51 = $51 + 1 | 0; //@line 48178
  }
  HEAP32[$1 >> 2] = $51; //@line 48180
  $56 = HEAP8[$52] | 0; //@line 48181
  if ($56 << 24 >> 24 == 38) {
   if ((HEAP8[$51 + 1 + ($cmd + 4) | 0] | 0) == 38) {
    label = 17275; //@line 48189
    break;
   } else {
    $i_0_i_i831 = $51;
    $63 = 38;
   }
  } else {
   $i_0_i_i831 = $51;
   $63 = $56;
  }
  while (1) {
   if (!(($63 << 24 >> 24 | 0) == 13 | ($63 << 24 >> 24 | 0) == 32 | ($63 << 24 >> 24 | 0) == 9 | ($63 << 24 >> 24 | 0) == 10)) {
    break;
   }
   $64 = $i_0_i_i831 + 1 | 0; //@line 48203
   $i_0_i_i831 = $64;
   $63 = HEAP8[$cmd + 4 + $64 | 0] | 0;
  }
  HEAP32[$1 >> 2] = $i_0_i_i831; //@line 48210
  if ((HEAP8[$cmd + 4 + $i_0_i_i831 | 0] | 0) != 38) {
   $68 = $i_0_i_i831; //@line 48214
   break;
  }
  $73 = $i_0_i_i831 + 1 | 0; //@line 48217
  HEAP32[$1 >> 2] = $73; //@line 48218
  if ((_cmd_match_expr_cmp($cmd, $val2_i677, $base) | 0) == 0) {
   label = 14998; //@line 48223
   break;
  }
  while (1) {
   $78 = HEAP32[$1 >> 2] | 0; //@line 48229
   while (1) {
    $79 = $cmd + 4 + $78 | 0; //@line 48232
    $80 = HEAP8[$79] | 0; //@line 48233
    if (!(($80 << 24 >> 24 | 0) == 13 | ($80 << 24 >> 24 | 0) == 32 | ($80 << 24 >> 24 | 0) == 9 | ($80 << 24 >> 24 | 0) == 10)) {
     break;
    }
    $78 = $78 + 1 | 0; //@line 48239
   }
   HEAP32[$1 >> 2] = $78; //@line 48241
   $83 = HEAP8[$79] | 0; //@line 48242
   if ($83 << 24 >> 24 == 61) {
    if ((HEAP8[$78 + 1 + ($cmd + 4) | 0] | 0) == 61) {
     $op_0_i842 = 1;
     $storemerge4247_in = $78;
    } else {
     $i_0_i_i2144 = $78;
     $90 = 61;
     label = 14989; //@line 48253
    }
   } else {
    $i_0_i_i2144 = $78;
    $90 = $83;
    label = 14989; //@line 48257
   }
   if ((label | 0) == 14989) {
    while (1) {
     label = 0; //@line 48261
     if (!(($90 << 24 >> 24 | 0) == 13 | ($90 << 24 >> 24 | 0) == 32 | ($90 << 24 >> 24 | 0) == 9 | ($90 << 24 >> 24 | 0) == 10)) {
      break;
     }
     $91 = $i_0_i_i2144 + 1 | 0; //@line 48267
     $i_0_i_i2144 = $91;
     $90 = HEAP8[$cmd + 4 + $91 | 0] | 0;
     label = 14989; //@line 48272
    }
    HEAP32[$1 >> 2] = $i_0_i_i2144; //@line 48275
    if ((HEAP8[$cmd + 4 + $i_0_i_i2144 | 0] | 0) != 33) {
     break;
    }
    if ((HEAP8[$i_0_i_i2144 + 1 + ($cmd + 4) | 0] | 0) == 61) {
     $op_0_i842 = 2;
     $storemerge4247_in = $i_0_i_i2144;
    } else {
     break;
    }
   }
   HEAP32[$1 >> 2] = $storemerge4247_in + 2; //@line 48294
   if ((_cmd_match_expr_cmp($cmd, $val2_i841, $base) | 0) == 0) {
    label = 14994; //@line 48299
    break L19073;
   }
   if (($op_0_i842 | 0) == 2) {
    HEAP32[$val2_i677 >> 2] = (HEAP32[$val2_i677 >> 2] | 0) != (HEAP32[$val2_i841 >> 2] | 0); //@line 48307
    continue;
   } else if (($op_0_i842 | 0) == 1) {
    HEAP32[$val2_i677 >> 2] = (HEAP32[$val2_i677 >> 2] | 0) == (HEAP32[$val2_i841 >> 2] | 0); //@line 48315
    continue;
   } else {
    continue;
   }
  }
  HEAP32[$val >> 2] = HEAP32[$val2_i677 >> 2] & HEAP32[$val >> 2]; //@line 48325
  $49 = HEAP32[$1 >> 2] | 0; //@line 48328
 }
 if ((label | 0) == 14994) {
  HEAP32[$1 >> 2] = $73; //@line 48331
  label = 14998; //@line 48333
 } else if ((label | 0) == 17275) {
  HEAP32[$1 >> 2] = $49; //@line 48336
  $68 = $49; //@line 48338
 }
 if ((label | 0) == 14998) {
  HEAP32[$1 >> 2] = $2; //@line 48341
  $_0 = 0; //@line 48343
  STACKTOP = sp; //@line 48345
  return $_0 | 0; //@line 48346
 }
 $i_0_i_i_i166 = $68; //@line 48353
 L19113 : while (1) {
  $116 = $cmd + 4 + $i_0_i_i_i166 | 0; //@line 48356
  $117 = HEAP8[$116] | 0; //@line 48357
  if (($117 << 24 >> 24 | 0) == 13 | ($117 << 24 >> 24 | 0) == 32 | ($117 << 24 >> 24 | 0) == 9 | ($117 << 24 >> 24 | 0) == 10) {
   $i_0_i_i_i166 = $i_0_i_i_i166 + 1 | 0; //@line 48361
   continue;
  }
  HEAP32[$1 >> 2] = $i_0_i_i_i166; //@line 48364
  if ((HEAP8[$116] | 0) != 94) {
   label = 15003; //@line 48368
   break;
  }
  $130 = $i_0_i_i_i166 + 1 | 0; //@line 48371
  HEAP32[$1 >> 2] = $130; //@line 48372
  if ((_cmd_match_expr_cmp($cmd, $val2_i165, $base) | 0) == 0) {
   break;
  }
  while (1) {
   $135 = HEAP32[$1 >> 2] | 0; //@line 48382
   while (1) {
    $136 = $cmd + 4 + $135 | 0; //@line 48385
    $137 = HEAP8[$136] | 0; //@line 48386
    if (!(($137 << 24 >> 24 | 0) == 13 | ($137 << 24 >> 24 | 0) == 32 | ($137 << 24 >> 24 | 0) == 9 | ($137 << 24 >> 24 | 0) == 10)) {
     break;
    }
    $135 = $135 + 1 | 0; //@line 48392
   }
   HEAP32[$1 >> 2] = $135; //@line 48394
   $140 = HEAP8[$136] | 0; //@line 48395
   if ($140 << 24 >> 24 == 61) {
    if ((HEAP8[$135 + 1 + ($cmd + 4) | 0] | 0) == 61) {
     $op_0_i846 = 1;
     $storemerge4246_in = $135;
    } else {
     $i_0_i_i2164 = $135;
     $147 = 61;
     label = 15010; //@line 48406
    }
   } else {
    $i_0_i_i2164 = $135;
    $147 = $140;
    label = 15010; //@line 48410
   }
   if ((label | 0) == 15010) {
    while (1) {
     label = 0; //@line 48414
     if (!(($147 << 24 >> 24 | 0) == 13 | ($147 << 24 >> 24 | 0) == 32 | ($147 << 24 >> 24 | 0) == 9 | ($147 << 24 >> 24 | 0) == 10)) {
      break;
     }
     $148 = $i_0_i_i2164 + 1 | 0; //@line 48420
     $i_0_i_i2164 = $148;
     $147 = HEAP8[$cmd + 4 + $148 | 0] | 0;
     label = 15010; //@line 48425
    }
    HEAP32[$1 >> 2] = $i_0_i_i2164; //@line 48428
    if ((HEAP8[$cmd + 4 + $i_0_i_i2164 | 0] | 0) != 33) {
     $170 = $i_0_i_i2164; //@line 48432
     break;
    }
    if ((HEAP8[$i_0_i_i2164 + 1 + ($cmd + 4) | 0] | 0) == 61) {
     $op_0_i846 = 2;
     $storemerge4246_in = $i_0_i_i2164;
    } else {
     $170 = $i_0_i_i2164; //@line 48442
     break;
    }
   }
   HEAP32[$1 >> 2] = $storemerge4246_in + 2; //@line 48449
   if ((_cmd_match_expr_cmp($cmd, $val2_i845, $base) | 0) == 0) {
    label = 15015; //@line 48454
    break L19113;
   }
   if (($op_0_i846 | 0) == 1) {
    HEAP32[$val2_i165 >> 2] = (HEAP32[$val2_i165 >> 2] | 0) == (HEAP32[$val2_i845 >> 2] | 0); //@line 48462
    continue;
   } else if (($op_0_i846 | 0) == 2) {
    HEAP32[$val2_i165 >> 2] = (HEAP32[$val2_i165 >> 2] | 0) != (HEAP32[$val2_i845 >> 2] | 0); //@line 48470
    continue;
   } else {
    continue;
   }
  }
  while (1) {
   $172 = $170; //@line 48480
   while (1) {
    $173 = $cmd + 4 + $172 | 0; //@line 48483
    $174 = HEAP8[$173] | 0; //@line 48484
    if (!(($174 << 24 >> 24 | 0) == 13 | ($174 << 24 >> 24 | 0) == 32 | ($174 << 24 >> 24 | 0) == 9 | ($174 << 24 >> 24 | 0) == 10)) {
     break;
    }
    $172 = $172 + 1 | 0; //@line 48490
   }
   HEAP32[$1 >> 2] = $172; //@line 48492
   $177 = HEAP8[$173] | 0; //@line 48493
   if ($177 << 24 >> 24 == 38) {
    if ((HEAP8[$172 + 1 + ($cmd + 4) | 0] | 0) == 38) {
     label = 17274; //@line 48501
     break;
    } else {
     $i_0_i_i858 = $172;
     $184 = 38;
    }
   } else {
    $i_0_i_i858 = $172;
    $184 = $177;
   }
   while (1) {
    if (!(($184 << 24 >> 24 | 0) == 13 | ($184 << 24 >> 24 | 0) == 32 | ($184 << 24 >> 24 | 0) == 9 | ($184 << 24 >> 24 | 0) == 10)) {
     break;
    }
    $185 = $i_0_i_i858 + 1 | 0; //@line 48515
    $i_0_i_i858 = $185;
    $184 = HEAP8[$cmd + 4 + $185 | 0] | 0;
   }
   HEAP32[$1 >> 2] = $i_0_i_i858; //@line 48522
   if ((HEAP8[$cmd + 4 + $i_0_i_i858 | 0] | 0) != 38) {
    break;
   }
   $190 = $i_0_i_i858 + 1 | 0; //@line 48528
   HEAP32[$1 >> 2] = $190; //@line 48529
   if ((_cmd_match_expr_cmp($cmd, $val2_i679, $base) | 0) == 0) {
    label = 15042; //@line 48534
    break L19113;
   }
   while (1) {
    $195 = HEAP32[$1 >> 2] | 0; //@line 48540
    while (1) {
     $196 = $cmd + 4 + $195 | 0; //@line 48543
     $197 = HEAP8[$196] | 0; //@line 48544
     if (!(($197 << 24 >> 24 | 0) == 13 | ($197 << 24 >> 24 | 0) == 32 | ($197 << 24 >> 24 | 0) == 9 | ($197 << 24 >> 24 | 0) == 10)) {
      break;
     }
     $195 = $195 + 1 | 0; //@line 48550
    }
    HEAP32[$1 >> 2] = $195; //@line 48552
    $200 = HEAP8[$196] | 0; //@line 48553
    if ($200 << 24 >> 24 == 61) {
     if ((HEAP8[$195 + 1 + ($cmd + 4) | 0] | 0) == 61) {
      $op_0_i869 = 1;
      $storemerge4245_in = $195;
     } else {
      $i_0_i_i2184 = $195;
      $207 = 61;
      label = 15033; //@line 48564
     }
    } else {
     $i_0_i_i2184 = $195;
     $207 = $200;
     label = 15033; //@line 48568
    }
    if ((label | 0) == 15033) {
     while (1) {
      label = 0; //@line 48572
      if (!(($207 << 24 >> 24 | 0) == 13 | ($207 << 24 >> 24 | 0) == 32 | ($207 << 24 >> 24 | 0) == 9 | ($207 << 24 >> 24 | 0) == 10)) {
       break;
      }
      $208 = $i_0_i_i2184 + 1 | 0; //@line 48578
      $i_0_i_i2184 = $208;
      $207 = HEAP8[$cmd + 4 + $208 | 0] | 0;
      label = 15033; //@line 48583
     }
     HEAP32[$1 >> 2] = $i_0_i_i2184; //@line 48586
     if ((HEAP8[$cmd + 4 + $i_0_i_i2184 | 0] | 0) != 33) {
      break;
     }
     if ((HEAP8[$i_0_i_i2184 + 1 + ($cmd + 4) | 0] | 0) == 61) {
      $op_0_i869 = 2;
      $storemerge4245_in = $i_0_i_i2184;
     } else {
      break;
     }
    }
    HEAP32[$1 >> 2] = $storemerge4245_in + 2; //@line 48605
    if ((_cmd_match_expr_cmp($cmd, $val2_i868, $base) | 0) == 0) {
     label = 15038; //@line 48610
     break L19113;
    }
    if (($op_0_i869 | 0) == 1) {
     HEAP32[$val2_i679 >> 2] = (HEAP32[$val2_i679 >> 2] | 0) == (HEAP32[$val2_i868 >> 2] | 0); //@line 48618
     continue;
    } else if (($op_0_i869 | 0) == 2) {
     HEAP32[$val2_i679 >> 2] = (HEAP32[$val2_i679 >> 2] | 0) != (HEAP32[$val2_i868 >> 2] | 0); //@line 48626
     continue;
    } else {
     continue;
    }
   }
   HEAP32[$val2_i165 >> 2] = HEAP32[$val2_i679 >> 2] & HEAP32[$val2_i165 >> 2]; //@line 48636
   $170 = $i_0_i_i2184; //@line 48638
  }
  if ((label | 0) == 17274) {
   label = 0; //@line 48641
   HEAP32[$1 >> 2] = $170; //@line 48642
  }
  HEAP32[$val >> 2] = HEAP32[$val2_i165 >> 2] ^ HEAP32[$val >> 2]; //@line 48648
  $i_0_i_i_i166 = HEAP32[$1 >> 2] | 0; //@line 48651
 }
 if ((label | 0) == 15015) {
  HEAP32[$1 >> 2] = $130; //@line 48654
 } else if ((label | 0) == 15038) {
  HEAP32[$1 >> 2] = $190; //@line 48658
  label = 15042; //@line 48660
 } else if ((label | 0) == 15003) {
  $236 = $i_0_i_i_i166; //@line 48671
  L19178 : while (1) {
   $238 = $236; //@line 48675
   while (1) {
    $239 = $cmd + 4 + $238 | 0; //@line 48678
    $240 = HEAP8[$239] | 0; //@line 48679
    if (!(($240 << 24 >> 24 | 0) == 13 | ($240 << 24 >> 24 | 0) == 32 | ($240 << 24 >> 24 | 0) == 9 | ($240 << 24 >> 24 | 0) == 10)) {
     break;
    }
    $238 = $238 + 1 | 0; //@line 48685
   }
   HEAP32[$1 >> 2] = $238; //@line 48687
   $243 = HEAP8[$239] | 0; //@line 48688
   if ($243 << 24 >> 24 == 124) {
    if ((HEAP8[$238 + 1 + ($cmd + 4) | 0] | 0) == 124) {
     label = 17271; //@line 48696
     break;
    } else {
     $i_0_i_i182 = $238;
     $250 = 124;
    }
   } else {
    $i_0_i_i182 = $238;
    $250 = $243;
   }
   while (1) {
    if (!(($250 << 24 >> 24 | 0) == 13 | ($250 << 24 >> 24 | 0) == 32 | ($250 << 24 >> 24 | 0) == 9 | ($250 << 24 >> 24 | 0) == 10)) {
     break;
    }
    $251 = $i_0_i_i182 + 1 | 0; //@line 48710
    $i_0_i_i182 = $251;
    $250 = HEAP8[$cmd + 4 + $251 | 0] | 0;
   }
   HEAP32[$1 >> 2] = $i_0_i_i182; //@line 48717
   if ((HEAP8[$cmd + 4 + $i_0_i_i182 | 0] | 0) != 124) {
    $255 = $i_0_i_i182; //@line 48721
    label = 15054; //@line 48722
    break;
   }
   $272 = $i_0_i_i182 + 1 | 0; //@line 48725
   HEAP32[$1 >> 2] = $272; //@line 48726
   if ((_cmd_match_expr_cmp($cmd, $val2_i130, $base) | 0) == 0) {
    break;
   }
   while (1) {
    $277 = HEAP32[$1 >> 2] | 0; //@line 48736
    while (1) {
     $278 = $cmd + 4 + $277 | 0; //@line 48739
     $279 = HEAP8[$278] | 0; //@line 48740
     if (!(($279 << 24 >> 24 | 0) == 13 | ($279 << 24 >> 24 | 0) == 32 | ($279 << 24 >> 24 | 0) == 9 | ($279 << 24 >> 24 | 0) == 10)) {
      break;
     }
     $277 = $277 + 1 | 0; //@line 48746
    }
    HEAP32[$1 >> 2] = $277; //@line 48748
    $282 = HEAP8[$278] | 0; //@line 48749
    if ($282 << 24 >> 24 == 61) {
     if ((HEAP8[$277 + 1 + ($cmd + 4) | 0] | 0) == 61) {
      $op_0_i873 = 1;
      $storemerge4244_in = $277;
     } else {
      $i_0_i_i2204 = $277;
      $289 = 61;
      label = 15061; //@line 48760
     }
    } else {
     $i_0_i_i2204 = $277;
     $289 = $282;
     label = 15061; //@line 48764
    }
    if ((label | 0) == 15061) {
     while (1) {
      label = 0; //@line 48768
      if (!(($289 << 24 >> 24 | 0) == 13 | ($289 << 24 >> 24 | 0) == 32 | ($289 << 24 >> 24 | 0) == 9 | ($289 << 24 >> 24 | 0) == 10)) {
       break;
      }
      $290 = $i_0_i_i2204 + 1 | 0; //@line 48774
      $i_0_i_i2204 = $290;
      $289 = HEAP8[$cmd + 4 + $290 | 0] | 0;
      label = 15061; //@line 48779
     }
     HEAP32[$1 >> 2] = $i_0_i_i2204; //@line 48782
     if ((HEAP8[$cmd + 4 + $i_0_i_i2204 | 0] | 0) != 33) {
      $312 = $i_0_i_i2204; //@line 48786
      break;
     }
     if ((HEAP8[$i_0_i_i2204 + 1 + ($cmd + 4) | 0] | 0) == 61) {
      $op_0_i873 = 2;
      $storemerge4244_in = $i_0_i_i2204;
     } else {
      $312 = $i_0_i_i2204; //@line 48796
      break;
     }
    }
    HEAP32[$1 >> 2] = $storemerge4244_in + 2; //@line 48803
    if ((_cmd_match_expr_cmp($cmd, $val2_i872, $base) | 0) == 0) {
     label = 15066; //@line 48808
     break L19178;
    }
    if (($op_0_i873 | 0) == 2) {
     HEAP32[$val2_i130 >> 2] = (HEAP32[$val2_i130 >> 2] | 0) != (HEAP32[$val2_i872 >> 2] | 0); //@line 48816
     continue;
    } else if (($op_0_i873 | 0) == 1) {
     HEAP32[$val2_i130 >> 2] = (HEAP32[$val2_i130 >> 2] | 0) == (HEAP32[$val2_i872 >> 2] | 0); //@line 48824
     continue;
    } else {
     continue;
    }
   }
   while (1) {
    $314 = $312; //@line 48834
    while (1) {
     $315 = $cmd + 4 + $314 | 0; //@line 48837
     $316 = HEAP8[$315] | 0; //@line 48838
     if (!(($316 << 24 >> 24 | 0) == 13 | ($316 << 24 >> 24 | 0) == 32 | ($316 << 24 >> 24 | 0) == 9 | ($316 << 24 >> 24 | 0) == 10)) {
      break;
     }
     $314 = $314 + 1 | 0; //@line 48844
    }
    HEAP32[$1 >> 2] = $314; //@line 48846
    $319 = HEAP8[$315] | 0; //@line 48847
    if ($319 << 24 >> 24 == 38) {
     if ((HEAP8[$314 + 1 + ($cmd + 4) | 0] | 0) == 38) {
      label = 17272; //@line 48855
      break;
     } else {
      $i_0_i_i885 = $314;
      $326 = 38;
     }
    } else {
     $i_0_i_i885 = $314;
     $326 = $319;
    }
    while (1) {
     if (!(($326 << 24 >> 24 | 0) == 13 | ($326 << 24 >> 24 | 0) == 32 | ($326 << 24 >> 24 | 0) == 9 | ($326 << 24 >> 24 | 0) == 10)) {
      break;
     }
     $327 = $i_0_i_i885 + 1 | 0; //@line 48869
     $i_0_i_i885 = $327;
     $326 = HEAP8[$cmd + 4 + $327 | 0] | 0;
    }
    HEAP32[$1 >> 2] = $i_0_i_i885; //@line 48876
    if ((HEAP8[$cmd + 4 + $i_0_i_i885 | 0] | 0) != 38) {
     $i_0_i_i_i193 = $i_0_i_i885; //@line 48880
     break;
    }
    $332 = $i_0_i_i885 + 1 | 0; //@line 48883
    HEAP32[$1 >> 2] = $332; //@line 48884
    if ((_cmd_match_expr_cmp($cmd, $val2_i682, $base) | 0) == 0) {
     label = 15093; //@line 48889
     break L19178;
    }
    while (1) {
     $337 = HEAP32[$1 >> 2] | 0; //@line 48895
     while (1) {
      $338 = $cmd + 4 + $337 | 0; //@line 48898
      $339 = HEAP8[$338] | 0; //@line 48899
      if (!(($339 << 24 >> 24 | 0) == 13 | ($339 << 24 >> 24 | 0) == 32 | ($339 << 24 >> 24 | 0) == 9 | ($339 << 24 >> 24 | 0) == 10)) {
       break;
      }
      $337 = $337 + 1 | 0; //@line 48905
     }
     HEAP32[$1 >> 2] = $337; //@line 48907
     $342 = HEAP8[$338] | 0; //@line 48908
     if ($342 << 24 >> 24 == 61) {
      if ((HEAP8[$337 + 1 + ($cmd + 4) | 0] | 0) == 61) {
       $op_0_i896 = 1;
       $storemerge4243_in = $337;
      } else {
       $i_0_i_i2224 = $337;
       $349 = 61;
       label = 15084; //@line 48919
      }
     } else {
      $i_0_i_i2224 = $337;
      $349 = $342;
      label = 15084; //@line 48923
     }
     if ((label | 0) == 15084) {
      while (1) {
       label = 0; //@line 48927
       if (!(($349 << 24 >> 24 | 0) == 13 | ($349 << 24 >> 24 | 0) == 32 | ($349 << 24 >> 24 | 0) == 9 | ($349 << 24 >> 24 | 0) == 10)) {
        break;
       }
       $350 = $i_0_i_i2224 + 1 | 0; //@line 48933
       $i_0_i_i2224 = $350;
       $349 = HEAP8[$cmd + 4 + $350 | 0] | 0;
       label = 15084; //@line 48938
      }
      HEAP32[$1 >> 2] = $i_0_i_i2224; //@line 48941
      if ((HEAP8[$cmd + 4 + $i_0_i_i2224 | 0] | 0) != 33) {
       break;
      }
      if ((HEAP8[$i_0_i_i2224 + 1 + ($cmd + 4) | 0] | 0) == 61) {
       $op_0_i896 = 2;
       $storemerge4243_in = $i_0_i_i2224;
      } else {
       break;
      }
     }
     HEAP32[$1 >> 2] = $storemerge4243_in + 2; //@line 48960
     if ((_cmd_match_expr_cmp($cmd, $val2_i895, $base) | 0) == 0) {
      label = 15089; //@line 48965
      break L19178;
     }
     if (($op_0_i896 | 0) == 1) {
      HEAP32[$val2_i682 >> 2] = (HEAP32[$val2_i682 >> 2] | 0) == (HEAP32[$val2_i895 >> 2] | 0); //@line 48973
      continue;
     } else if (($op_0_i896 | 0) == 2) {
      HEAP32[$val2_i682 >> 2] = (HEAP32[$val2_i682 >> 2] | 0) != (HEAP32[$val2_i895 >> 2] | 0); //@line 48981
      continue;
     } else {
      continue;
     }
    }
    HEAP32[$val2_i130 >> 2] = HEAP32[$val2_i682 >> 2] & HEAP32[$val2_i130 >> 2]; //@line 48991
    $312 = $i_0_i_i2224; //@line 48993
   }
   if ((label | 0) == 17272) {
    label = 0; //@line 48996
    HEAP32[$1 >> 2] = $312; //@line 48997
    $i_0_i_i_i193 = $312; //@line 48999
   }
   while (1) {
    $375 = $cmd + 4 + $i_0_i_i_i193 | 0; //@line 49003
    $376 = HEAP8[$375] | 0; //@line 49004
    if (($376 << 24 >> 24 | 0) == 13 | ($376 << 24 >> 24 | 0) == 32 | ($376 << 24 >> 24 | 0) == 9 | ($376 << 24 >> 24 | 0) == 10) {
     $i_0_i_i_i193 = $i_0_i_i_i193 + 1 | 0; //@line 49008
     continue;
    }
    HEAP32[$1 >> 2] = $i_0_i_i_i193; //@line 49011
    if ((HEAP8[$375] | 0) != 94) {
     break;
    }
    $382 = $i_0_i_i_i193 + 1 | 0; //@line 49017
    HEAP32[$1 >> 2] = $382; //@line 49018
    if ((_cmd_match_expr_cmp($cmd, $val2_i192, $base) | 0) == 0) {
     label = 15138; //@line 49023
     break L19178;
    }
    while (1) {
     $387 = HEAP32[$1 >> 2] | 0; //@line 49029
     while (1) {
      $388 = $cmd + 4 + $387 | 0; //@line 49032
      $389 = HEAP8[$388] | 0; //@line 49033
      if (!(($389 << 24 >> 24 | 0) == 13 | ($389 << 24 >> 24 | 0) == 32 | ($389 << 24 >> 24 | 0) == 9 | ($389 << 24 >> 24 | 0) == 10)) {
       break;
      }
      $387 = $387 + 1 | 0; //@line 49039
     }
     HEAP32[$1 >> 2] = $387; //@line 49041
     $392 = HEAP8[$388] | 0; //@line 49042
     if ($392 << 24 >> 24 == 61) {
      if ((HEAP8[$387 + 1 + ($cmd + 4) | 0] | 0) == 61) {
       $op_0_i900 = 1;
       $storemerge4242_in = $387;
      } else {
       $i_0_i_i2244 = $387;
       $399 = 61;
       label = 15104; //@line 49053
      }
     } else {
      $i_0_i_i2244 = $387;
      $399 = $392;
      label = 15104; //@line 49057
     }
     if ((label | 0) == 15104) {
      while (1) {
       label = 0; //@line 49061
       if (!(($399 << 24 >> 24 | 0) == 13 | ($399 << 24 >> 24 | 0) == 32 | ($399 << 24 >> 24 | 0) == 9 | ($399 << 24 >> 24 | 0) == 10)) {
        break;
       }
       $400 = $i_0_i_i2244 + 1 | 0; //@line 49067
       $i_0_i_i2244 = $400;
       $399 = HEAP8[$cmd + 4 + $400 | 0] | 0;
       label = 15104; //@line 49072
      }
      HEAP32[$1 >> 2] = $i_0_i_i2244; //@line 49075
      if ((HEAP8[$cmd + 4 + $i_0_i_i2244 | 0] | 0) != 33) {
       $422 = $i_0_i_i2244; //@line 49079
       break;
      }
      if ((HEAP8[$i_0_i_i2244 + 1 + ($cmd + 4) | 0] | 0) == 61) {
       $op_0_i900 = 2;
       $storemerge4242_in = $i_0_i_i2244;
      } else {
       $422 = $i_0_i_i2244; //@line 49089
       break;
      }
     }
     HEAP32[$1 >> 2] = $storemerge4242_in + 2; //@line 49096
     if ((_cmd_match_expr_cmp($cmd, $val2_i899, $base) | 0) == 0) {
      label = 15109; //@line 49101
      break L19178;
     }
     if (($op_0_i900 | 0) == 1) {
      HEAP32[$val2_i192 >> 2] = (HEAP32[$val2_i192 >> 2] | 0) == (HEAP32[$val2_i899 >> 2] | 0); //@line 49109
      continue;
     } else if (($op_0_i900 | 0) == 2) {
      HEAP32[$val2_i192 >> 2] = (HEAP32[$val2_i192 >> 2] | 0) != (HEAP32[$val2_i899 >> 2] | 0); //@line 49117
      continue;
     } else {
      continue;
     }
    }
    while (1) {
     $424 = $422; //@line 49127
     while (1) {
      $425 = $cmd + 4 + $424 | 0; //@line 49130
      $426 = HEAP8[$425] | 0; //@line 49131
      if (!(($426 << 24 >> 24 | 0) == 13 | ($426 << 24 >> 24 | 0) == 32 | ($426 << 24 >> 24 | 0) == 9 | ($426 << 24 >> 24 | 0) == 10)) {
       break;
      }
      $424 = $424 + 1 | 0; //@line 49137
     }
     HEAP32[$1 >> 2] = $424; //@line 49139
     $429 = HEAP8[$425] | 0; //@line 49140
     if ($429 << 24 >> 24 == 38) {
      if ((HEAP8[$424 + 1 + ($cmd + 4) | 0] | 0) == 38) {
       label = 17273; //@line 49148
       break;
      } else {
       $i_0_i_i912 = $424;
       $436 = 38;
      }
     } else {
      $i_0_i_i912 = $424;
      $436 = $429;
     }
     while (1) {
      if (!(($436 << 24 >> 24 | 0) == 13 | ($436 << 24 >> 24 | 0) == 32 | ($436 << 24 >> 24 | 0) == 9 | ($436 << 24 >> 24 | 0) == 10)) {
       break;
      }
      $437 = $i_0_i_i912 + 1 | 0; //@line 49162
      $i_0_i_i912 = $437;
      $436 = HEAP8[$cmd + 4 + $437 | 0] | 0;
     }
     HEAP32[$1 >> 2] = $i_0_i_i912; //@line 49169
     if ((HEAP8[$cmd + 4 + $i_0_i_i912 | 0] | 0) != 38) {
      $485 = $i_0_i_i912; //@line 49173
      break;
     }
     $442 = $i_0_i_i912 + 1 | 0; //@line 49176
     HEAP32[$1 >> 2] = $442; //@line 49177
     if ((_cmd_match_expr_cmp($cmd, $val2_i685, $base) | 0) == 0) {
      label = 15136; //@line 49182
      break L19178;
     }
     while (1) {
      $447 = HEAP32[$1 >> 2] | 0; //@line 49188
      while (1) {
       $448 = $cmd + 4 + $447 | 0; //@line 49191
       $449 = HEAP8[$448] | 0; //@line 49192
       if (!(($449 << 24 >> 24 | 0) == 13 | ($449 << 24 >> 24 | 0) == 32 | ($449 << 24 >> 24 | 0) == 9 | ($449 << 24 >> 24 | 0) == 10)) {
        break;
       }
       $447 = $447 + 1 | 0; //@line 49198
      }
      HEAP32[$1 >> 2] = $447; //@line 49200
      $452 = HEAP8[$448] | 0; //@line 49201
      if ($452 << 24 >> 24 == 61) {
       if ((HEAP8[$447 + 1 + ($cmd + 4) | 0] | 0) == 61) {
        $op_0_i923 = 1;
        $storemerge4241_in = $447;
       } else {
        $i_0_i_i2264 = $447;
        $459 = 61;
        label = 15127; //@line 49212
       }
      } else {
       $i_0_i_i2264 = $447;
       $459 = $452;
       label = 15127; //@line 49216
      }
      if ((label | 0) == 15127) {
       while (1) {
        label = 0; //@line 49220
        if (!(($459 << 24 >> 24 | 0) == 13 | ($459 << 24 >> 24 | 0) == 32 | ($459 << 24 >> 24 | 0) == 9 | ($459 << 24 >> 24 | 0) == 10)) {
         break;
        }
        $460 = $i_0_i_i2264 + 1 | 0; //@line 49226
        $i_0_i_i2264 = $460;
        $459 = HEAP8[$cmd + 4 + $460 | 0] | 0;
        label = 15127; //@line 49231
       }
       HEAP32[$1 >> 2] = $i_0_i_i2264; //@line 49234
       if ((HEAP8[$cmd + 4 + $i_0_i_i2264 | 0] | 0) != 33) {
        break;
       }
       if ((HEAP8[$i_0_i_i2264 + 1 + ($cmd + 4) | 0] | 0) == 61) {
        $op_0_i923 = 2;
        $storemerge4241_in = $i_0_i_i2264;
       } else {
        break;
       }
      }
      HEAP32[$1 >> 2] = $storemerge4241_in + 2; //@line 49253
      if ((_cmd_match_expr_cmp($cmd, $val2_i922, $base) | 0) == 0) {
       label = 15132; //@line 49258
       break L19178;
      }
      if (($op_0_i923 | 0) == 1) {
       HEAP32[$val2_i685 >> 2] = (HEAP32[$val2_i685 >> 2] | 0) == (HEAP32[$val2_i922 >> 2] | 0); //@line 49266
       continue;
      } else if (($op_0_i923 | 0) == 2) {
       HEAP32[$val2_i685 >> 2] = (HEAP32[$val2_i685 >> 2] | 0) != (HEAP32[$val2_i922 >> 2] | 0); //@line 49274
       continue;
      } else {
       continue;
      }
     }
     HEAP32[$val2_i192 >> 2] = HEAP32[$val2_i685 >> 2] & HEAP32[$val2_i192 >> 2]; //@line 49284
     $422 = $i_0_i_i2264; //@line 49286
    }
    if ((label | 0) == 17273) {
     label = 0; //@line 49289
     HEAP32[$1 >> 2] = $422; //@line 49290
     $485 = $422; //@line 49292
    }
    HEAP32[$val2_i130 >> 2] = HEAP32[$val2_i192 >> 2] ^ HEAP32[$val2_i130 >> 2]; //@line 49298
    $i_0_i_i_i193 = $485; //@line 49300
   }
   HEAP32[$val >> 2] = HEAP32[$val2_i130 >> 2] | HEAP32[$val >> 2]; //@line 49305
   $236 = HEAP32[$1 >> 2] | 0; //@line 49308
  }
  if ((label | 0) == 15132) {
   HEAP32[$1 >> 2] = $442; //@line 49311
   label = 15136; //@line 49313
  } else if ((label | 0) == 15066) {
   HEAP32[$1 >> 2] = $272; //@line 49316
  } else if ((label | 0) == 15089) {
   HEAP32[$1 >> 2] = $332; //@line 49320
   label = 15093; //@line 49322
  } else if ((label | 0) == 15109) {
   HEAP32[$1 >> 2] = $382; //@line 49325
   label = 15138; //@line 49327
  } else if ((label | 0) == 17271) {
   HEAP32[$1 >> 2] = $236; //@line 49330
   $255 = $236; //@line 49332
   label = 15054; //@line 49333
  }
  if ((label | 0) == 15136) {
   HEAP32[$1 >> 2] = $382; //@line 49336
   label = 15138; //@line 49338
  } else if ((label | 0) == 15093) {
   HEAP32[$1 >> 2] = $272; //@line 49341
  } else if ((label | 0) == 15054) {
   $i_0_i_i_i54 = $255; //@line 49362
   L19317 : while (1) {
    $493 = $cmd + 4 + $i_0_i_i_i54 | 0; //@line 49365
    $494 = HEAP8[$493] | 0; //@line 49366
    if (($494 << 24 >> 24 | 0) == 13 | ($494 << 24 >> 24 | 0) == 32 | ($494 << 24 >> 24 | 0) == 9 | ($494 << 24 >> 24 | 0) == 10) {
     $i_0_i_i_i54 = $i_0_i_i_i54 + 1 | 0; //@line 49370
     continue;
    }
    HEAP32[$1 >> 2] = $i_0_i_i_i54; //@line 49373
    if ((HEAP8[$493] | 0) != 38) {
     label = 15145; //@line 49377
     break;
    }
    if ((HEAP8[$i_0_i_i_i54 + 1 + ($cmd + 4) | 0] | 0) != 38) {
     label = 15145; //@line 49385
     break;
    }
    $5881 = $i_0_i_i_i54 + 2 | 0; //@line 49388
    HEAP32[$1 >> 2] = $5881; //@line 49389
    if ((_cmd_match_expr_cmp($cmd, $val2_i53, $base) | 0) == 0) {
     break;
    }
    while (1) {
     $536 = HEAP32[$1 >> 2] | 0; //@line 49399
     while (1) {
      $537 = $cmd + 4 + $536 | 0; //@line 49402
      $538 = HEAP8[$537] | 0; //@line 49403
      if (!(($538 << 24 >> 24 | 0) == 13 | ($538 << 24 >> 24 | 0) == 32 | ($538 << 24 >> 24 | 0) == 9 | ($538 << 24 >> 24 | 0) == 10)) {
       break;
      }
      $536 = $536 + 1 | 0; //@line 49409
     }
     HEAP32[$1 >> 2] = $536; //@line 49411
     $541 = HEAP8[$537] | 0; //@line 49412
     if ($541 << 24 >> 24 == 61) {
      if ((HEAP8[$536 + 1 + ($cmd + 4) | 0] | 0) == 61) {
       $op_0_i927 = 1;
       $storemerge4240_in = $536;
      } else {
       $i_0_i_i2284 = $536;
       $548 = 61;
       label = 15152; //@line 49423
      }
     } else {
      $i_0_i_i2284 = $536;
      $548 = $541;
      label = 15152; //@line 49427
     }
     if ((label | 0) == 15152) {
      while (1) {
       label = 0; //@line 49431
       if (!(($548 << 24 >> 24 | 0) == 13 | ($548 << 24 >> 24 | 0) == 32 | ($548 << 24 >> 24 | 0) == 9 | ($548 << 24 >> 24 | 0) == 10)) {
        break;
       }
       $549 = $i_0_i_i2284 + 1 | 0; //@line 49437
       $i_0_i_i2284 = $549;
       $548 = HEAP8[$cmd + 4 + $549 | 0] | 0;
       label = 15152; //@line 49442
      }
      HEAP32[$1 >> 2] = $i_0_i_i2284; //@line 49445
      if ((HEAP8[$cmd + 4 + $i_0_i_i2284 | 0] | 0) != 33) {
       $571 = $i_0_i_i2284; //@line 49449
       break;
      }
      if ((HEAP8[$i_0_i_i2284 + 1 + ($cmd + 4) | 0] | 0) == 61) {
       $op_0_i927 = 2;
       $storemerge4240_in = $i_0_i_i2284;
      } else {
       $571 = $i_0_i_i2284; //@line 49459
       break;
      }
     }
     HEAP32[$1 >> 2] = $storemerge4240_in + 2; //@line 49466
     if ((_cmd_match_expr_cmp($cmd, $val2_i926, $base) | 0) == 0) {
      label = 15157; //@line 49471
      break L19317;
     }
     if (($op_0_i927 | 0) == 1) {
      HEAP32[$val2_i53 >> 2] = (HEAP32[$val2_i53 >> 2] | 0) == (HEAP32[$val2_i926 >> 2] | 0); //@line 49479
      continue;
     } else if (($op_0_i927 | 0) == 2) {
      HEAP32[$val2_i53 >> 2] = (HEAP32[$val2_i53 >> 2] | 0) != (HEAP32[$val2_i926 >> 2] | 0); //@line 49487
      continue;
     } else {
      continue;
     }
    }
    while (1) {
     $573 = $571; //@line 49497
     while (1) {
      $574 = $cmd + 4 + $573 | 0; //@line 49500
      $575 = HEAP8[$574] | 0; //@line 49501
      if (!(($575 << 24 >> 24 | 0) == 13 | ($575 << 24 >> 24 | 0) == 32 | ($575 << 24 >> 24 | 0) == 9 | ($575 << 24 >> 24 | 0) == 10)) {
       break;
      }
      $573 = $573 + 1 | 0; //@line 49507
     }
     HEAP32[$1 >> 2] = $573; //@line 49509
     $578 = HEAP8[$574] | 0; //@line 49510
     if ($578 << 24 >> 24 == 38) {
      if ((HEAP8[$573 + 1 + ($cmd + 4) | 0] | 0) == 38) {
       label = 17266; //@line 49518
       break;
      } else {
       $i_0_i_i939 = $573;
       $585 = 38;
      }
     } else {
      $i_0_i_i939 = $573;
      $585 = $578;
     }
     while (1) {
      if (!(($585 << 24 >> 24 | 0) == 13 | ($585 << 24 >> 24 | 0) == 32 | ($585 << 24 >> 24 | 0) == 9 | ($585 << 24 >> 24 | 0) == 10)) {
       break;
      }
      $586 = $i_0_i_i939 + 1 | 0; //@line 49532
      $i_0_i_i939 = $586;
      $585 = HEAP8[$cmd + 4 + $586 | 0] | 0;
     }
     HEAP32[$1 >> 2] = $i_0_i_i939; //@line 49539
     if ((HEAP8[$cmd + 4 + $i_0_i_i939 | 0] | 0) != 38) {
      $i_0_i_i_i205 = $i_0_i_i939; //@line 49543
      break;
     }
     $591 = $i_0_i_i939 + 1 | 0; //@line 49546
     HEAP32[$1 >> 2] = $591; //@line 49547
     if ((_cmd_match_expr_cmp($cmd, $val2_i688, $base) | 0) == 0) {
      label = 15184; //@line 49552
      break L19317;
     }
     while (1) {
      $596 = HEAP32[$1 >> 2] | 0; //@line 49558
      while (1) {
       $597 = $cmd + 4 + $596 | 0; //@line 49561
       $598 = HEAP8[$597] | 0; //@line 49562
       if (!(($598 << 24 >> 24 | 0) == 13 | ($598 << 24 >> 24 | 0) == 32 | ($598 << 24 >> 24 | 0) == 9 | ($598 << 24 >> 24 | 0) == 10)) {
        break;
       }
       $596 = $596 + 1 | 0; //@line 49568
      }
      HEAP32[$1 >> 2] = $596; //@line 49570
      $601 = HEAP8[$597] | 0; //@line 49571
      if ($601 << 24 >> 24 == 61) {
       if ((HEAP8[$596 + 1 + ($cmd + 4) | 0] | 0) == 61) {
        $op_0_i950 = 1;
        $storemerge4239_in = $596;
       } else {
        $i_0_i_i2304 = $596;
        $608 = 61;
        label = 15175; //@line 49582
       }
      } else {
       $i_0_i_i2304 = $596;
       $608 = $601;
       label = 15175; //@line 49586
      }
      if ((label | 0) == 15175) {
       while (1) {
        label = 0; //@line 49590
        if (!(($608 << 24 >> 24 | 0) == 13 | ($608 << 24 >> 24 | 0) == 32 | ($608 << 24 >> 24 | 0) == 9 | ($608 << 24 >> 24 | 0) == 10)) {
         break;
        }
        $609 = $i_0_i_i2304 + 1 | 0; //@line 49596
        $i_0_i_i2304 = $609;
        $608 = HEAP8[$cmd + 4 + $609 | 0] | 0;
        label = 15175; //@line 49601
       }
       HEAP32[$1 >> 2] = $i_0_i_i2304; //@line 49604
       if ((HEAP8[$cmd + 4 + $i_0_i_i2304 | 0] | 0) != 33) {
        break;
       }
       if ((HEAP8[$i_0_i_i2304 + 1 + ($cmd + 4) | 0] | 0) == 61) {
        $op_0_i950 = 2;
        $storemerge4239_in = $i_0_i_i2304;
       } else {
        break;
       }
      }
      HEAP32[$1 >> 2] = $storemerge4239_in + 2; //@line 49623
      if ((_cmd_match_expr_cmp($cmd, $val2_i949, $base) | 0) == 0) {
       label = 15180; //@line 49628
       break L19317;
      }
      if (($op_0_i950 | 0) == 1) {
       HEAP32[$val2_i688 >> 2] = (HEAP32[$val2_i688 >> 2] | 0) == (HEAP32[$val2_i949 >> 2] | 0); //@line 49636
       continue;
      } else if (($op_0_i950 | 0) == 2) {
       HEAP32[$val2_i688 >> 2] = (HEAP32[$val2_i688 >> 2] | 0) != (HEAP32[$val2_i949 >> 2] | 0); //@line 49644
       continue;
      } else {
       continue;
      }
     }
     HEAP32[$val2_i53 >> 2] = HEAP32[$val2_i688 >> 2] & HEAP32[$val2_i53 >> 2]; //@line 49654
     $571 = $i_0_i_i2304; //@line 49656
    }
    if ((label | 0) == 17266) {
     label = 0; //@line 49659
     HEAP32[$1 >> 2] = $571; //@line 49660
     $i_0_i_i_i205 = $571; //@line 49662
    }
    while (1) {
     $634 = $cmd + 4 + $i_0_i_i_i205 | 0; //@line 49666
     $635 = HEAP8[$634] | 0; //@line 49667
     if (($635 << 24 >> 24 | 0) == 13 | ($635 << 24 >> 24 | 0) == 32 | ($635 << 24 >> 24 | 0) == 9 | ($635 << 24 >> 24 | 0) == 10) {
      $i_0_i_i_i205 = $i_0_i_i_i205 + 1 | 0; //@line 49671
      continue;
     }
     HEAP32[$1 >> 2] = $i_0_i_i_i205; //@line 49674
     if ((HEAP8[$634] | 0) != 94) {
      $748 = $i_0_i_i_i205; //@line 49678
      break;
     }
     $641 = $i_0_i_i_i205 + 1 | 0; //@line 49681
     HEAP32[$1 >> 2] = $641; //@line 49682
     if ((_cmd_match_expr_cmp($cmd, $val2_i204, $base) | 0) == 0) {
      label = 15229; //@line 49687
      break L19317;
     }
     while (1) {
      $646 = HEAP32[$1 >> 2] | 0; //@line 49693
      while (1) {
       $647 = $cmd + 4 + $646 | 0; //@line 49696
       $648 = HEAP8[$647] | 0; //@line 49697
       if (!(($648 << 24 >> 24 | 0) == 13 | ($648 << 24 >> 24 | 0) == 32 | ($648 << 24 >> 24 | 0) == 9 | ($648 << 24 >> 24 | 0) == 10)) {
        break;
       }
       $646 = $646 + 1 | 0; //@line 49703
      }
      HEAP32[$1 >> 2] = $646; //@line 49705
      $651 = HEAP8[$647] | 0; //@line 49706
      if ($651 << 24 >> 24 == 61) {
       if ((HEAP8[$646 + 1 + ($cmd + 4) | 0] | 0) == 61) {
        $op_0_i954 = 1;
        $storemerge4238_in = $646;
       } else {
        $i_0_i_i2324 = $646;
        $658 = 61;
        label = 15195; //@line 49717
       }
      } else {
       $i_0_i_i2324 = $646;
       $658 = $651;
       label = 15195; //@line 49721
      }
      if ((label | 0) == 15195) {
       while (1) {
        label = 0; //@line 49725
        if (!(($658 << 24 >> 24 | 0) == 13 | ($658 << 24 >> 24 | 0) == 32 | ($658 << 24 >> 24 | 0) == 9 | ($658 << 24 >> 24 | 0) == 10)) {
         break;
        }
        $659 = $i_0_i_i2324 + 1 | 0; //@line 49731
        $i_0_i_i2324 = $659;
        $658 = HEAP8[$cmd + 4 + $659 | 0] | 0;
        label = 15195; //@line 49736
       }
       HEAP32[$1 >> 2] = $i_0_i_i2324; //@line 49739
       if ((HEAP8[$cmd + 4 + $i_0_i_i2324 | 0] | 0) != 33) {
        $681 = $i_0_i_i2324; //@line 49743
        break;
       }
       if ((HEAP8[$i_0_i_i2324 + 1 + ($cmd + 4) | 0] | 0) == 61) {
        $op_0_i954 = 2;
        $storemerge4238_in = $i_0_i_i2324;
       } else {
        $681 = $i_0_i_i2324; //@line 49753
        break;
       }
      }
      HEAP32[$1 >> 2] = $storemerge4238_in + 2; //@line 49760
      if ((_cmd_match_expr_cmp($cmd, $val2_i953, $base) | 0) == 0) {
       label = 15200; //@line 49765
       break L19317;
      }
      if (($op_0_i954 | 0) == 1) {
       HEAP32[$val2_i204 >> 2] = (HEAP32[$val2_i204 >> 2] | 0) == (HEAP32[$val2_i953 >> 2] | 0); //@line 49773
       continue;
      } else if (($op_0_i954 | 0) == 2) {
       HEAP32[$val2_i204 >> 2] = (HEAP32[$val2_i204 >> 2] | 0) != (HEAP32[$val2_i953 >> 2] | 0); //@line 49781
       continue;
      } else {
       continue;
      }
     }
     while (1) {
      $683 = $681; //@line 49791
      while (1) {
       $684 = $cmd + 4 + $683 | 0; //@line 49794
       $685 = HEAP8[$684] | 0; //@line 49795
       if (!(($685 << 24 >> 24 | 0) == 13 | ($685 << 24 >> 24 | 0) == 32 | ($685 << 24 >> 24 | 0) == 9 | ($685 << 24 >> 24 | 0) == 10)) {
        break;
       }
       $683 = $683 + 1 | 0; //@line 49801
      }
      HEAP32[$1 >> 2] = $683; //@line 49803
      $688 = HEAP8[$684] | 0; //@line 49804
      if ($688 << 24 >> 24 == 38) {
       if ((HEAP8[$683 + 1 + ($cmd + 4) | 0] | 0) == 38) {
        label = 17267; //@line 49812
        break;
       } else {
        $i_0_i_i966 = $683;
        $695 = 38;
       }
      } else {
       $i_0_i_i966 = $683;
       $695 = $688;
      }
      while (1) {
       if (!(($695 << 24 >> 24 | 0) == 13 | ($695 << 24 >> 24 | 0) == 32 | ($695 << 24 >> 24 | 0) == 9 | ($695 << 24 >> 24 | 0) == 10)) {
        break;
       }
       $696 = $i_0_i_i966 + 1 | 0; //@line 49826
       $i_0_i_i966 = $696;
       $695 = HEAP8[$cmd + 4 + $696 | 0] | 0;
      }
      HEAP32[$1 >> 2] = $i_0_i_i966; //@line 49833
      if ((HEAP8[$cmd + 4 + $i_0_i_i966 | 0] | 0) != 38) {
       $744 = $i_0_i_i966; //@line 49837
       break;
      }
      $701 = $i_0_i_i966 + 1 | 0; //@line 49840
      HEAP32[$1 >> 2] = $701; //@line 49841
      if ((_cmd_match_expr_cmp($cmd, $val2_i691, $base) | 0) == 0) {
       label = 15227; //@line 49846
       break L19317;
      }
      while (1) {
       $706 = HEAP32[$1 >> 2] | 0; //@line 49852
       while (1) {
        $707 = $cmd + 4 + $706 | 0; //@line 49855
        $708 = HEAP8[$707] | 0; //@line 49856
        if (!(($708 << 24 >> 24 | 0) == 13 | ($708 << 24 >> 24 | 0) == 32 | ($708 << 24 >> 24 | 0) == 9 | ($708 << 24 >> 24 | 0) == 10)) {
         break;
        }
        $706 = $706 + 1 | 0; //@line 49862
       }
       HEAP32[$1 >> 2] = $706; //@line 49864
       $711 = HEAP8[$707] | 0; //@line 49865
       if ($711 << 24 >> 24 == 61) {
        if ((HEAP8[$706 + 1 + ($cmd + 4) | 0] | 0) == 61) {
         $op_0_i977 = 1;
         $storemerge4237_in = $706;
        } else {
         $i_0_i_i2344 = $706;
         $718 = 61;
         label = 15218; //@line 49876
        }
       } else {
        $i_0_i_i2344 = $706;
        $718 = $711;
        label = 15218; //@line 49880
       }
       if ((label | 0) == 15218) {
        while (1) {
         label = 0; //@line 49884
         if (!(($718 << 24 >> 24 | 0) == 13 | ($718 << 24 >> 24 | 0) == 32 | ($718 << 24 >> 24 | 0) == 9 | ($718 << 24 >> 24 | 0) == 10)) {
          break;
         }
         $719 = $i_0_i_i2344 + 1 | 0; //@line 49890
         $i_0_i_i2344 = $719;
         $718 = HEAP8[$cmd + 4 + $719 | 0] | 0;
         label = 15218; //@line 49895
        }
        HEAP32[$1 >> 2] = $i_0_i_i2344; //@line 49898
        if ((HEAP8[$cmd + 4 + $i_0_i_i2344 | 0] | 0) != 33) {
         break;
        }
        if ((HEAP8[$i_0_i_i2344 + 1 + ($cmd + 4) | 0] | 0) == 61) {
         $op_0_i977 = 2;
         $storemerge4237_in = $i_0_i_i2344;
        } else {
         break;
        }
       }
       HEAP32[$1 >> 2] = $storemerge4237_in + 2; //@line 49917
       if ((_cmd_match_expr_cmp($cmd, $val2_i976, $base) | 0) == 0) {
        label = 15223; //@line 49922
        break L19317;
       }
       if (($op_0_i977 | 0) == 1) {
        HEAP32[$val2_i691 >> 2] = (HEAP32[$val2_i691 >> 2] | 0) == (HEAP32[$val2_i976 >> 2] | 0); //@line 49930
        continue;
       } else if (($op_0_i977 | 0) == 2) {
        HEAP32[$val2_i691 >> 2] = (HEAP32[$val2_i691 >> 2] | 0) != (HEAP32[$val2_i976 >> 2] | 0); //@line 49938
        continue;
       } else {
        continue;
       }
      }
      HEAP32[$val2_i204 >> 2] = HEAP32[$val2_i691 >> 2] & HEAP32[$val2_i204 >> 2]; //@line 49948
      $681 = $i_0_i_i2344; //@line 49950
     }
     if ((label | 0) == 17267) {
      label = 0; //@line 49953
      HEAP32[$1 >> 2] = $681; //@line 49954
      $744 = $681; //@line 49956
     }
     HEAP32[$val2_i53 >> 2] = HEAP32[$val2_i204 >> 2] ^ HEAP32[$val2_i53 >> 2]; //@line 49962
     $i_0_i_i_i205 = $744; //@line 49964
    }
    while (1) {
     $750 = $748; //@line 49969
     while (1) {
      $751 = $cmd + 4 + $750 | 0; //@line 49972
      $752 = HEAP8[$751] | 0; //@line 49973
      if (!(($752 << 24 >> 24 | 0) == 13 | ($752 << 24 >> 24 | 0) == 32 | ($752 << 24 >> 24 | 0) == 9 | ($752 << 24 >> 24 | 0) == 10)) {
       break;
      }
      $750 = $750 + 1 | 0; //@line 49979
     }
     HEAP32[$1 >> 2] = $750; //@line 49981
     $755 = HEAP8[$751] | 0; //@line 49982
     if ($755 << 24 >> 24 == 124) {
      if ((HEAP8[$750 + 1 + ($cmd + 4) | 0] | 0) == 124) {
       label = 17268; //@line 49990
       break;
      } else {
       $i_0_i_i225 = $750;
       $762 = 124;
      }
     } else {
      $i_0_i_i225 = $750;
      $762 = $755;
     }
     while (1) {
      if (!(($762 << 24 >> 24 | 0) == 13 | ($762 << 24 >> 24 | 0) == 32 | ($762 << 24 >> 24 | 0) == 9 | ($762 << 24 >> 24 | 0) == 10)) {
       break;
      }
      $763 = $i_0_i_i225 + 1 | 0; //@line 50004
      $i_0_i_i225 = $763;
      $762 = HEAP8[$cmd + 4 + $763 | 0] | 0;
     }
     HEAP32[$1 >> 2] = $i_0_i_i225; //@line 50011
     if ((HEAP8[$cmd + 4 + $i_0_i_i225 | 0] | 0) != 124) {
      break;
     }
     $768 = $i_0_i_i225 + 1 | 0; //@line 50017
     HEAP32[$1 >> 2] = $768; //@line 50018
     if ((_cmd_match_expr_cmp($cmd, $val2_i132, $base) | 0) == 0) {
      label = 15324; //@line 50023
      break L19317;
     }
     while (1) {
      $773 = HEAP32[$1 >> 2] | 0; //@line 50029
      while (1) {
       $774 = $cmd + 4 + $773 | 0; //@line 50032
       $775 = HEAP8[$774] | 0; //@line 50033
       if (!(($775 << 24 >> 24 | 0) == 13 | ($775 << 24 >> 24 | 0) == 32 | ($775 << 24 >> 24 | 0) == 9 | ($775 << 24 >> 24 | 0) == 10)) {
        break;
       }
       $773 = $773 + 1 | 0; //@line 50039
      }
      HEAP32[$1 >> 2] = $773; //@line 50041
      $778 = HEAP8[$774] | 0; //@line 50042
      if ($778 << 24 >> 24 == 61) {
       if ((HEAP8[$773 + 1 + ($cmd + 4) | 0] | 0) == 61) {
        $op_0_i981 = 1;
        $storemerge4236_in = $773;
       } else {
        $i_0_i_i2364 = $773;
        $785 = 61;
        label = 15245; //@line 50053
       }
      } else {
       $i_0_i_i2364 = $773;
       $785 = $778;
       label = 15245; //@line 50057
      }
      if ((label | 0) == 15245) {
       while (1) {
        label = 0; //@line 50061
        if (!(($785 << 24 >> 24 | 0) == 13 | ($785 << 24 >> 24 | 0) == 32 | ($785 << 24 >> 24 | 0) == 9 | ($785 << 24 >> 24 | 0) == 10)) {
         break;
        }
        $786 = $i_0_i_i2364 + 1 | 0; //@line 50067
        $i_0_i_i2364 = $786;
        $785 = HEAP8[$cmd + 4 + $786 | 0] | 0;
        label = 15245; //@line 50072
       }
       HEAP32[$1 >> 2] = $i_0_i_i2364; //@line 50075
       if ((HEAP8[$cmd + 4 + $i_0_i_i2364 | 0] | 0) != 33) {
        $808 = $i_0_i_i2364; //@line 50079
        break;
       }
       if ((HEAP8[$i_0_i_i2364 + 1 + ($cmd + 4) | 0] | 0) == 61) {
        $op_0_i981 = 2;
        $storemerge4236_in = $i_0_i_i2364;
       } else {
        $808 = $i_0_i_i2364; //@line 50089
        break;
       }
      }
      HEAP32[$1 >> 2] = $storemerge4236_in + 2; //@line 50096
      if ((_cmd_match_expr_cmp($cmd, $val2_i980, $base) | 0) == 0) {
       label = 15250; //@line 50101
       break L19317;
      }
      if (($op_0_i981 | 0) == 1) {
       HEAP32[$val2_i132 >> 2] = (HEAP32[$val2_i132 >> 2] | 0) == (HEAP32[$val2_i980 >> 2] | 0); //@line 50109
       continue;
      } else if (($op_0_i981 | 0) == 2) {
       HEAP32[$val2_i132 >> 2] = (HEAP32[$val2_i132 >> 2] | 0) != (HEAP32[$val2_i980 >> 2] | 0); //@line 50117
       continue;
      } else {
       continue;
      }
     }
     while (1) {
      $810 = $808; //@line 50127
      while (1) {
       $811 = $cmd + 4 + $810 | 0; //@line 50130
       $812 = HEAP8[$811] | 0; //@line 50131
       if (!(($812 << 24 >> 24 | 0) == 13 | ($812 << 24 >> 24 | 0) == 32 | ($812 << 24 >> 24 | 0) == 9 | ($812 << 24 >> 24 | 0) == 10)) {
        break;
       }
       $810 = $810 + 1 | 0; //@line 50137
      }
      HEAP32[$1 >> 2] = $810; //@line 50139
      $815 = HEAP8[$811] | 0; //@line 50140
      if ($815 << 24 >> 24 == 38) {
       if ((HEAP8[$810 + 1 + ($cmd + 4) | 0] | 0) == 38) {
        label = 17269; //@line 50148
        break;
       } else {
        $i_0_i_i993 = $810;
        $822 = 38;
       }
      } else {
       $i_0_i_i993 = $810;
       $822 = $815;
      }
      while (1) {
       if (!(($822 << 24 >> 24 | 0) == 13 | ($822 << 24 >> 24 | 0) == 32 | ($822 << 24 >> 24 | 0) == 9 | ($822 << 24 >> 24 | 0) == 10)) {
        break;
       }
       $823 = $i_0_i_i993 + 1 | 0; //@line 50162
       $i_0_i_i993 = $823;
       $822 = HEAP8[$cmd + 4 + $823 | 0] | 0;
      }
      HEAP32[$1 >> 2] = $i_0_i_i993; //@line 50169
      if ((HEAP8[$cmd + 4 + $i_0_i_i993 | 0] | 0) != 38) {
       $i_0_i_i_i236 = $i_0_i_i993; //@line 50173
       break;
      }
      $828 = $i_0_i_i993 + 1 | 0; //@line 50176
      HEAP32[$1 >> 2] = $828; //@line 50177
      if ((_cmd_match_expr_cmp($cmd, $val2_i694, $base) | 0) == 0) {
       label = 15277; //@line 50182
       break L19317;
      }
      while (1) {
       $833 = HEAP32[$1 >> 2] | 0; //@line 50188
       while (1) {
        $834 = $cmd + 4 + $833 | 0; //@line 50191
        $835 = HEAP8[$834] | 0; //@line 50192
        if (!(($835 << 24 >> 24 | 0) == 13 | ($835 << 24 >> 24 | 0) == 32 | ($835 << 24 >> 24 | 0) == 9 | ($835 << 24 >> 24 | 0) == 10)) {
         break;
        }
        $833 = $833 + 1 | 0; //@line 50198
       }
       HEAP32[$1 >> 2] = $833; //@line 50200
       $838 = HEAP8[$834] | 0; //@line 50201
       if ($838 << 24 >> 24 == 61) {
        if ((HEAP8[$833 + 1 + ($cmd + 4) | 0] | 0) == 61) {
         $op_0_i1004 = 1;
         $storemerge4235_in = $833;
        } else {
         $i_0_i_i2384 = $833;
         $845 = 61;
         label = 15268; //@line 50212
        }
       } else {
        $i_0_i_i2384 = $833;
        $845 = $838;
        label = 15268; //@line 50216
       }
       if ((label | 0) == 15268) {
        while (1) {
         label = 0; //@line 50220
         if (!(($845 << 24 >> 24 | 0) == 13 | ($845 << 24 >> 24 | 0) == 32 | ($845 << 24 >> 24 | 0) == 9 | ($845 << 24 >> 24 | 0) == 10)) {
          break;
         }
         $846 = $i_0_i_i2384 + 1 | 0; //@line 50226
         $i_0_i_i2384 = $846;
         $845 = HEAP8[$cmd + 4 + $846 | 0] | 0;
         label = 15268; //@line 50231
        }
        HEAP32[$1 >> 2] = $i_0_i_i2384; //@line 50234
        if ((HEAP8[$cmd + 4 + $i_0_i_i2384 | 0] | 0) != 33) {
         break;
        }
        if ((HEAP8[$i_0_i_i2384 + 1 + ($cmd + 4) | 0] | 0) == 61) {
         $op_0_i1004 = 2;
         $storemerge4235_in = $i_0_i_i2384;
        } else {
         break;
        }
       }
       HEAP32[$1 >> 2] = $storemerge4235_in + 2; //@line 50253
       if ((_cmd_match_expr_cmp($cmd, $val2_i1003, $base) | 0) == 0) {
        label = 15273; //@line 50258
        break L19317;
       }
       if (($op_0_i1004 | 0) == 1) {
        HEAP32[$val2_i694 >> 2] = (HEAP32[$val2_i694 >> 2] | 0) == (HEAP32[$val2_i1003 >> 2] | 0); //@line 50266
        continue;
       } else if (($op_0_i1004 | 0) == 2) {
        HEAP32[$val2_i694 >> 2] = (HEAP32[$val2_i694 >> 2] | 0) != (HEAP32[$val2_i1003 >> 2] | 0); //@line 50274
        continue;
       } else {
        continue;
       }
      }
      HEAP32[$val2_i132 >> 2] = HEAP32[$val2_i694 >> 2] & HEAP32[$val2_i132 >> 2]; //@line 50284
      $808 = $i_0_i_i2384; //@line 50286
     }
     if ((label | 0) == 17269) {
      label = 0; //@line 50289
      HEAP32[$1 >> 2] = $808; //@line 50290
      $i_0_i_i_i236 = $808; //@line 50292
     }
     while (1) {
      $871 = $cmd + 4 + $i_0_i_i_i236 | 0; //@line 50296
      $872 = HEAP8[$871] | 0; //@line 50297
      if (($872 << 24 >> 24 | 0) == 13 | ($872 << 24 >> 24 | 0) == 32 | ($872 << 24 >> 24 | 0) == 9 | ($872 << 24 >> 24 | 0) == 10) {
       $i_0_i_i_i236 = $i_0_i_i_i236 + 1 | 0; //@line 50301
       continue;
      }
      HEAP32[$1 >> 2] = $i_0_i_i_i236; //@line 50304
      if ((HEAP8[$871] | 0) != 94) {
       break;
      }
      $878 = $i_0_i_i_i236 + 1 | 0; //@line 50310
      HEAP32[$1 >> 2] = $878; //@line 50311
      if ((_cmd_match_expr_cmp($cmd, $val2_i235, $base) | 0) == 0) {
       label = 15322; //@line 50316
       break L19317;
      }
      while (1) {
       $883 = HEAP32[$1 >> 2] | 0; //@line 50322
       while (1) {
        $884 = $cmd + 4 + $883 | 0; //@line 50325
        $885 = HEAP8[$884] | 0; //@line 50326
        if (!(($885 << 24 >> 24 | 0) == 13 | ($885 << 24 >> 24 | 0) == 32 | ($885 << 24 >> 24 | 0) == 9 | ($885 << 24 >> 24 | 0) == 10)) {
         break;
        }
        $883 = $883 + 1 | 0; //@line 50332
       }
       HEAP32[$1 >> 2] = $883; //@line 50334
       $888 = HEAP8[$884] | 0; //@line 50335
       if ($888 << 24 >> 24 == 61) {
        if ((HEAP8[$883 + 1 + ($cmd + 4) | 0] | 0) == 61) {
         $op_0_i1008 = 1;
         $storemerge4234_in = $883;
        } else {
         $i_0_i_i2404 = $883;
         $895 = 61;
         label = 15288; //@line 50346
        }
       } else {
        $i_0_i_i2404 = $883;
        $895 = $888;
        label = 15288; //@line 50350
       }
       if ((label | 0) == 15288) {
        while (1) {
         label = 0; //@line 50354
         if (!(($895 << 24 >> 24 | 0) == 13 | ($895 << 24 >> 24 | 0) == 32 | ($895 << 24 >> 24 | 0) == 9 | ($895 << 24 >> 24 | 0) == 10)) {
          break;
         }
         $896 = $i_0_i_i2404 + 1 | 0; //@line 50360
         $i_0_i_i2404 = $896;
         $895 = HEAP8[$cmd + 4 + $896 | 0] | 0;
         label = 15288; //@line 50365
        }
        HEAP32[$1 >> 2] = $i_0_i_i2404; //@line 50368
        if ((HEAP8[$cmd + 4 + $i_0_i_i2404 | 0] | 0) != 33) {
         $918 = $i_0_i_i2404; //@line 50372
         break;
        }
        if ((HEAP8[$i_0_i_i2404 + 1 + ($cmd + 4) | 0] | 0) == 61) {
         $op_0_i1008 = 2;
         $storemerge4234_in = $i_0_i_i2404;
        } else {
         $918 = $i_0_i_i2404; //@line 50382
         break;
        }
       }
       HEAP32[$1 >> 2] = $storemerge4234_in + 2; //@line 50389
       if ((_cmd_match_expr_cmp($cmd, $val2_i1007, $base) | 0) == 0) {
        label = 15293; //@line 50394
        break L19317;
       }
       if (($op_0_i1008 | 0) == 1) {
        HEAP32[$val2_i235 >> 2] = (HEAP32[$val2_i235 >> 2] | 0) == (HEAP32[$val2_i1007 >> 2] | 0); //@line 50402
        continue;
       } else if (($op_0_i1008 | 0) == 2) {
        HEAP32[$val2_i235 >> 2] = (HEAP32[$val2_i235 >> 2] | 0) != (HEAP32[$val2_i1007 >> 2] | 0); //@line 50410
        continue;
       } else {
        continue;
       }
      }
      while (1) {
       $920 = $918; //@line 50420
       while (1) {
        $921 = $cmd + 4 + $920 | 0; //@line 50423
        $922 = HEAP8[$921] | 0; //@line 50424
        if (!(($922 << 24 >> 24 | 0) == 13 | ($922 << 24 >> 24 | 0) == 32 | ($922 << 24 >> 24 | 0) == 9 | ($922 << 24 >> 24 | 0) == 10)) {
         break;
        }
        $920 = $920 + 1 | 0; //@line 50430
       }
       HEAP32[$1 >> 2] = $920; //@line 50432
       $925 = HEAP8[$921] | 0; //@line 50433
       if ($925 << 24 >> 24 == 38) {
        if ((HEAP8[$920 + 1 + ($cmd + 4) | 0] | 0) == 38) {
         label = 17270; //@line 50441
         break;
        } else {
         $i_0_i_i1020 = $920;
         $932 = 38;
        }
       } else {
        $i_0_i_i1020 = $920;
        $932 = $925;
       }
       while (1) {
        if (!(($932 << 24 >> 24 | 0) == 13 | ($932 << 24 >> 24 | 0) == 32 | ($932 << 24 >> 24 | 0) == 9 | ($932 << 24 >> 24 | 0) == 10)) {
         break;
        }
        $933 = $i_0_i_i1020 + 1 | 0; //@line 50455
        $i_0_i_i1020 = $933;
        $932 = HEAP8[$cmd + 4 + $933 | 0] | 0;
       }
       HEAP32[$1 >> 2] = $i_0_i_i1020; //@line 50462
       if ((HEAP8[$cmd + 4 + $i_0_i_i1020 | 0] | 0) != 38) {
        $981 = $i_0_i_i1020; //@line 50466
        break;
       }
       $938 = $i_0_i_i1020 + 1 | 0; //@line 50469
       HEAP32[$1 >> 2] = $938; //@line 50470
       if ((_cmd_match_expr_cmp($cmd, $val2_i697, $base) | 0) == 0) {
        label = 15320; //@line 50475
        break L19317;
       }
       while (1) {
        $943 = HEAP32[$1 >> 2] | 0; //@line 50481
        while (1) {
         $944 = $cmd + 4 + $943 | 0; //@line 50484
         $945 = HEAP8[$944] | 0; //@line 50485
         if (!(($945 << 24 >> 24 | 0) == 13 | ($945 << 24 >> 24 | 0) == 32 | ($945 << 24 >> 24 | 0) == 9 | ($945 << 24 >> 24 | 0) == 10)) {
          break;
         }
         $943 = $943 + 1 | 0; //@line 50491
        }
        HEAP32[$1 >> 2] = $943; //@line 50493
        $948 = HEAP8[$944] | 0; //@line 50494
        if ($948 << 24 >> 24 == 61) {
         if ((HEAP8[$943 + 1 + ($cmd + 4) | 0] | 0) == 61) {
          $op_0_i1031 = 1;
          $storemerge4233_in = $943;
         } else {
          $i_0_i_i2424 = $943;
          $955 = 61;
          label = 15311; //@line 50505
         }
        } else {
         $i_0_i_i2424 = $943;
         $955 = $948;
         label = 15311; //@line 50509
        }
        if ((label | 0) == 15311) {
         while (1) {
          label = 0; //@line 50513
          if (!(($955 << 24 >> 24 | 0) == 13 | ($955 << 24 >> 24 | 0) == 32 | ($955 << 24 >> 24 | 0) == 9 | ($955 << 24 >> 24 | 0) == 10)) {
           break;
          }
          $956 = $i_0_i_i2424 + 1 | 0; //@line 50519
          $i_0_i_i2424 = $956;
          $955 = HEAP8[$cmd + 4 + $956 | 0] | 0;
          label = 15311; //@line 50524
         }
         HEAP32[$1 >> 2] = $i_0_i_i2424; //@line 50527
         if ((HEAP8[$cmd + 4 + $i_0_i_i2424 | 0] | 0) != 33) {
          break;
         }
         if ((HEAP8[$i_0_i_i2424 + 1 + ($cmd + 4) | 0] | 0) == 61) {
          $op_0_i1031 = 2;
          $storemerge4233_in = $i_0_i_i2424;
         } else {
          break;
         }
        }
        HEAP32[$1 >> 2] = $storemerge4233_in + 2; //@line 50546
        if ((_cmd_match_expr_cmp($cmd, $val2_i1030, $base) | 0) == 0) {
         label = 15316; //@line 50551
         break L19317;
        }
        if (($op_0_i1031 | 0) == 1) {
         HEAP32[$val2_i697 >> 2] = (HEAP32[$val2_i697 >> 2] | 0) == (HEAP32[$val2_i1030 >> 2] | 0); //@line 50559
         continue;
        } else if (($op_0_i1031 | 0) == 2) {
         HEAP32[$val2_i697 >> 2] = (HEAP32[$val2_i697 >> 2] | 0) != (HEAP32[$val2_i1030 >> 2] | 0); //@line 50567
         continue;
        } else {
         continue;
        }
       }
       HEAP32[$val2_i235 >> 2] = HEAP32[$val2_i697 >> 2] & HEAP32[$val2_i235 >> 2]; //@line 50577
       $918 = $i_0_i_i2424; //@line 50579
      }
      if ((label | 0) == 17270) {
       label = 0; //@line 50582
       HEAP32[$1 >> 2] = $918; //@line 50583
       $981 = $918; //@line 50585
      }
      HEAP32[$val2_i132 >> 2] = HEAP32[$val2_i235 >> 2] ^ HEAP32[$val2_i132 >> 2]; //@line 50591
      $i_0_i_i_i236 = $981; //@line 50593
     }
     HEAP32[$val2_i53 >> 2] = HEAP32[$val2_i132 >> 2] | HEAP32[$val2_i53 >> 2]; //@line 50598
     $748 = $i_0_i_i_i236; //@line 50600
    }
    if ((label | 0) == 17268) {
     label = 0; //@line 50603
     HEAP32[$1 >> 2] = $748; //@line 50604
    }
    if ((HEAP32[$val >> 2] | 0) == 0) {
     $995 = 0; //@line 50611
    } else {
     $995 = (HEAP32[$val2_i53 >> 2] | 0) != 0 | 0; //@line 50616
    }
    HEAP32[$val >> 2] = $995; //@line 50619
    $i_0_i_i_i54 = HEAP32[$1 >> 2] | 0; //@line 50622
   }
   if ((label | 0) == 15250) {
    HEAP32[$1 >> 2] = $768; //@line 50625
    label = 15324; //@line 50627
   } else if ((label | 0) == 15223) {
    HEAP32[$1 >> 2] = $701; //@line 50630
    label = 15227; //@line 50632
   } else if ((label | 0) == 15157) {
    HEAP32[$1 >> 2] = $5881; //@line 50635
   } else if ((label | 0) == 15180) {
    HEAP32[$1 >> 2] = $591; //@line 50639
    label = 15184; //@line 50641
   } else if ((label | 0) == 15145) {
    $996 = $i_0_i_i_i54; //@line 50676
    L19580 : while (1) {
     $997 = $cmd + 4 + $996 | 0; //@line 50679
     $998 = HEAP8[$997] | 0; //@line 50680
     if (($998 << 24 >> 24 | 0) == 13 | ($998 << 24 >> 24 | 0) == 32 | ($998 << 24 >> 24 | 0) == 9 | ($998 << 24 >> 24 | 0) == 10) {
      $996 = $996 + 1 | 0; //@line 50684
      continue;
     }
     HEAP32[$1 >> 2] = $996; //@line 50687
     $1001 = HEAP8[$997] | 0; //@line 50688
     if ($1001 << 24 >> 24 != 124) {
      $i_0_i_i18 = $996;
      $1944 = $1001;
      label = 15704; //@line 50692
      break;
     }
     if ((HEAP8[$996 + 1 + ($cmd + 4) | 0] | 0) != 124) {
      $i_0_i_i18 = $996;
      $1944 = $1001;
      label = 15704; //@line 50701
      break;
     }
     $5873 = $996 + 2 | 0; //@line 50704
     HEAP32[$1 >> 2] = $5873; //@line 50705
     if ((_cmd_match_expr_cmp($cmd, $val2_i, $base) | 0) == 0) {
      break;
     }
     while (1) {
      $1009 = HEAP32[$1 >> 2] | 0; //@line 50715
      while (1) {
       $1010 = $cmd + 4 + $1009 | 0; //@line 50718
       $1011 = HEAP8[$1010] | 0; //@line 50719
       if (!(($1011 << 24 >> 24 | 0) == 13 | ($1011 << 24 >> 24 | 0) == 32 | ($1011 << 24 >> 24 | 0) == 9 | ($1011 << 24 >> 24 | 0) == 10)) {
        break;
       }
       $1009 = $1009 + 1 | 0; //@line 50725
      }
      HEAP32[$1 >> 2] = $1009; //@line 50727
      $1014 = HEAP8[$1010] | 0; //@line 50728
      if ($1014 << 24 >> 24 == 61) {
       if ((HEAP8[$1009 + 1 + ($cmd + 4) | 0] | 0) == 61) {
        $op_0_i1035 = 1;
        $storemerge4232_in = $1009;
       } else {
        $i_0_i_i2444 = $1009;
        $1021 = 61;
        label = 15339; //@line 50739
       }
      } else {
       $i_0_i_i2444 = $1009;
       $1021 = $1014;
       label = 15339; //@line 50743
      }
      if ((label | 0) == 15339) {
       while (1) {
        label = 0; //@line 50747
        if (!(($1021 << 24 >> 24 | 0) == 13 | ($1021 << 24 >> 24 | 0) == 32 | ($1021 << 24 >> 24 | 0) == 9 | ($1021 << 24 >> 24 | 0) == 10)) {
         break;
        }
        $1022 = $i_0_i_i2444 + 1 | 0; //@line 50753
        $i_0_i_i2444 = $1022;
        $1021 = HEAP8[$cmd + 4 + $1022 | 0] | 0;
        label = 15339; //@line 50758
       }
       HEAP32[$1 >> 2] = $i_0_i_i2444; //@line 50761
       if ((HEAP8[$cmd + 4 + $i_0_i_i2444 | 0] | 0) != 33) {
        $1044 = $i_0_i_i2444; //@line 50765
        break;
       }
       if ((HEAP8[$i_0_i_i2444 + 1 + ($cmd + 4) | 0] | 0) == 61) {
        $op_0_i1035 = 2;
        $storemerge4232_in = $i_0_i_i2444;
       } else {
        $1044 = $i_0_i_i2444; //@line 50775
        break;
       }
      }
      HEAP32[$1 >> 2] = $storemerge4232_in + 2; //@line 50782
      if ((_cmd_match_expr_cmp($cmd, $val2_i1034, $base) | 0) == 0) {
       label = 15344; //@line 50787
       break L19580;
      }
      if (($op_0_i1035 | 0) == 1) {
       HEAP32[$val2_i >> 2] = (HEAP32[$val2_i >> 2] | 0) == (HEAP32[$val2_i1034 >> 2] | 0); //@line 50795
       continue;
      } else if (($op_0_i1035 | 0) == 2) {
       HEAP32[$val2_i >> 2] = (HEAP32[$val2_i >> 2] | 0) != (HEAP32[$val2_i1034 >> 2] | 0); //@line 50803
       continue;
      } else {
       continue;
      }
     }
     while (1) {
      $1046 = $1044; //@line 50813
      while (1) {
       $1047 = $cmd + 4 + $1046 | 0; //@line 50816
       $1048 = HEAP8[$1047] | 0; //@line 50817
       if (!(($1048 << 24 >> 24 | 0) == 13 | ($1048 << 24 >> 24 | 0) == 32 | ($1048 << 24 >> 24 | 0) == 9 | ($1048 << 24 >> 24 | 0) == 10)) {
        break;
       }
       $1046 = $1046 + 1 | 0; //@line 50823
      }
      HEAP32[$1 >> 2] = $1046; //@line 50825
      $1051 = HEAP8[$1047] | 0; //@line 50826
      if ($1051 << 24 >> 24 == 38) {
       if ((HEAP8[$1046 + 1 + ($cmd + 4) | 0] | 0) == 38) {
        label = 17254; //@line 50834
        break;
       } else {
        $i_0_i_i1047 = $1046;
        $1058 = 38;
       }
      } else {
       $i_0_i_i1047 = $1046;
       $1058 = $1051;
      }
      while (1) {
       if (!(($1058 << 24 >> 24 | 0) == 13 | ($1058 << 24 >> 24 | 0) == 32 | ($1058 << 24 >> 24 | 0) == 9 | ($1058 << 24 >> 24 | 0) == 10)) {
        break;
       }
       $1059 = $i_0_i_i1047 + 1 | 0; //@line 50848
       $i_0_i_i1047 = $1059;
       $1058 = HEAP8[$cmd + 4 + $1059 | 0] | 0;
      }
      HEAP32[$1 >> 2] = $i_0_i_i1047; //@line 50855
      if ((HEAP8[$cmd + 4 + $i_0_i_i1047 | 0] | 0) != 38) {
       $i_0_i_i_i248 = $i_0_i_i1047; //@line 50859
       break;
      }
      $1064 = $i_0_i_i1047 + 1 | 0; //@line 50862
      HEAP32[$1 >> 2] = $1064; //@line 50863
      if ((_cmd_match_expr_cmp($cmd, $val2_i700, $base) | 0) == 0) {
       label = 15371; //@line 50868
       break L19580;
      }
      while (1) {
       $1069 = HEAP32[$1 >> 2] | 0; //@line 50874
       while (1) {
        $1070 = $cmd + 4 + $1069 | 0; //@line 50877
        $1071 = HEAP8[$1070] | 0; //@line 50878
        if (!(($1071 << 24 >> 24 | 0) == 13 | ($1071 << 24 >> 24 | 0) == 32 | ($1071 << 24 >> 24 | 0) == 9 | ($1071 << 24 >> 24 | 0) == 10)) {
         break;
        }
        $1069 = $1069 + 1 | 0; //@line 50884
       }
       HEAP32[$1 >> 2] = $1069; //@line 50886
       $1074 = HEAP8[$1070] | 0; //@line 50887
       if ($1074 << 24 >> 24 == 61) {
        if ((HEAP8[$1069 + 1 + ($cmd + 4) | 0] | 0) == 61) {
         $op_0_i1058 = 1;
         $storemerge4231_in = $1069;
        } else {
         $i_0_i_i2464 = $1069;
         $1081 = 61;
         label = 15362; //@line 50898
        }
       } else {
        $i_0_i_i2464 = $1069;
        $1081 = $1074;
        label = 15362; //@line 50902
       }
       if ((label | 0) == 15362) {
        while (1) {
         label = 0; //@line 50906
         if (!(($1081 << 24 >> 24 | 0) == 13 | ($1081 << 24 >> 24 | 0) == 32 | ($1081 << 24 >> 24 | 0) == 9 | ($1081 << 24 >> 24 | 0) == 10)) {
          break;
         }
         $1082 = $i_0_i_i2464 + 1 | 0; //@line 50912
         $i_0_i_i2464 = $1082;
         $1081 = HEAP8[$cmd + 4 + $1082 | 0] | 0;
         label = 15362; //@line 50917
        }
        HEAP32[$1 >> 2] = $i_0_i_i2464; //@line 50920
        if ((HEAP8[$cmd + 4 + $i_0_i_i2464 | 0] | 0) != 33) {
         break;
        }
        if ((HEAP8[$i_0_i_i2464 + 1 + ($cmd + 4) | 0] | 0) == 61) {
         $op_0_i1058 = 2;
         $storemerge4231_in = $i_0_i_i2464;
        } else {
         break;
        }
       }
       HEAP32[$1 >> 2] = $storemerge4231_in + 2; //@line 50939
       if ((_cmd_match_expr_cmp($cmd, $val2_i1057, $base) | 0) == 0) {
        label = 15367; //@line 50944
        break L19580;
       }
       if (($op_0_i1058 | 0) == 1) {
        HEAP32[$val2_i700 >> 2] = (HEAP32[$val2_i700 >> 2] | 0) == (HEAP32[$val2_i1057 >> 2] | 0); //@line 50952
        continue;
       } else if (($op_0_i1058 | 0) == 2) {
        HEAP32[$val2_i700 >> 2] = (HEAP32[$val2_i700 >> 2] | 0) != (HEAP32[$val2_i1057 >> 2] | 0); //@line 50960
        continue;
       } else {
        continue;
       }
      }
      HEAP32[$val2_i >> 2] = HEAP32[$val2_i700 >> 2] & HEAP32[$val2_i >> 2]; //@line 50970
      $1044 = $i_0_i_i2464; //@line 50972
     }
     if ((label | 0) == 17254) {
      label = 0; //@line 50975
      HEAP32[$1 >> 2] = $1044; //@line 50976
      $i_0_i_i_i248 = $1044; //@line 50978
     }
     while (1) {
      $1107 = $cmd + 4 + $i_0_i_i_i248 | 0; //@line 50982
      $1108 = HEAP8[$1107] | 0; //@line 50983
      if (($1108 << 24 >> 24 | 0) == 13 | ($1108 << 24 >> 24 | 0) == 32 | ($1108 << 24 >> 24 | 0) == 9 | ($1108 << 24 >> 24 | 0) == 10) {
       $i_0_i_i_i248 = $i_0_i_i_i248 + 1 | 0; //@line 50987
       continue;
      }
      HEAP32[$1 >> 2] = $i_0_i_i_i248; //@line 50990
      if ((HEAP8[$1107] | 0) != 94) {
       $1221 = $i_0_i_i_i248; //@line 50994
       break;
      }
      $1114 = $i_0_i_i_i248 + 1 | 0; //@line 50997
      HEAP32[$1 >> 2] = $1114; //@line 50998
      if ((_cmd_match_expr_cmp($cmd, $val2_i247, $base) | 0) == 0) {
       label = 15416; //@line 51003
       break L19580;
      }
      while (1) {
       $1119 = HEAP32[$1 >> 2] | 0; //@line 51009
       while (1) {
        $1120 = $cmd + 4 + $1119 | 0; //@line 51012
        $1121 = HEAP8[$1120] | 0; //@line 51013
        if (!(($1121 << 24 >> 24 | 0) == 13 | ($1121 << 24 >> 24 | 0) == 32 | ($1121 << 24 >> 24 | 0) == 9 | ($1121 << 24 >> 24 | 0) == 10)) {
         break;
        }
        $1119 = $1119 + 1 | 0; //@line 51019
       }
       HEAP32[$1 >> 2] = $1119; //@line 51021
       $1124 = HEAP8[$1120] | 0; //@line 51022
       if ($1124 << 24 >> 24 == 61) {
        if ((HEAP8[$1119 + 1 + ($cmd + 4) | 0] | 0) == 61) {
         $op_0_i1062 = 1;
         $storemerge4230_in = $1119;
        } else {
         $i_0_i_i2484 = $1119;
         $1131 = 61;
         label = 15382; //@line 51033
        }
       } else {
        $i_0_i_i2484 = $1119;
        $1131 = $1124;
        label = 15382; //@line 51037
       }
       if ((label | 0) == 15382) {
        while (1) {
         label = 0; //@line 51041
         if (!(($1131 << 24 >> 24 | 0) == 13 | ($1131 << 24 >> 24 | 0) == 32 | ($1131 << 24 >> 24 | 0) == 9 | ($1131 << 24 >> 24 | 0) == 10)) {
          break;
         }
         $1132 = $i_0_i_i2484 + 1 | 0; //@line 51047
         $i_0_i_i2484 = $1132;
         $1131 = HEAP8[$cmd + 4 + $1132 | 0] | 0;
         label = 15382; //@line 51052
        }
        HEAP32[$1 >> 2] = $i_0_i_i2484; //@line 51055
        if ((HEAP8[$cmd + 4 + $i_0_i_i2484 | 0] | 0) != 33) {
         $1154 = $i_0_i_i2484; //@line 51059
         break;
        }
        if ((HEAP8[$i_0_i_i2484 + 1 + ($cmd + 4) | 0] | 0) == 61) {
         $op_0_i1062 = 2;
         $storemerge4230_in = $i_0_i_i2484;
        } else {
         $1154 = $i_0_i_i2484; //@line 51069
         break;
        }
       }
       HEAP32[$1 >> 2] = $storemerge4230_in + 2; //@line 51076
       if ((_cmd_match_expr_cmp($cmd, $val2_i1061, $base) | 0) == 0) {
        label = 15387; //@line 51081
        break L19580;
       }
       if (($op_0_i1062 | 0) == 1) {
        HEAP32[$val2_i247 >> 2] = (HEAP32[$val2_i247 >> 2] | 0) == (HEAP32[$val2_i1061 >> 2] | 0); //@line 51089
        continue;
       } else if (($op_0_i1062 | 0) == 2) {
        HEAP32[$val2_i247 >> 2] = (HEAP32[$val2_i247 >> 2] | 0) != (HEAP32[$val2_i1061 >> 2] | 0); //@line 51097
        continue;
       } else {
        continue;
       }
      }
      while (1) {
       $1156 = $1154; //@line 51107
       while (1) {
        $1157 = $cmd + 4 + $1156 | 0; //@line 51110
        $1158 = HEAP8[$1157] | 0; //@line 51111
        if (!(($1158 << 24 >> 24 | 0) == 13 | ($1158 << 24 >> 24 | 0) == 32 | ($1158 << 24 >> 24 | 0) == 9 | ($1158 << 24 >> 24 | 0) == 10)) {
         break;
        }
        $1156 = $1156 + 1 | 0; //@line 51117
       }
       HEAP32[$1 >> 2] = $1156; //@line 51119
       $1161 = HEAP8[$1157] | 0; //@line 51120
       if ($1161 << 24 >> 24 == 38) {
        if ((HEAP8[$1156 + 1 + ($cmd + 4) | 0] | 0) == 38) {
         label = 17255; //@line 51128
         break;
        } else {
         $i_0_i_i1074 = $1156;
         $1168 = 38;
        }
       } else {
        $i_0_i_i1074 = $1156;
        $1168 = $1161;
       }
       while (1) {
        if (!(($1168 << 24 >> 24 | 0) == 13 | ($1168 << 24 >> 24 | 0) == 32 | ($1168 << 24 >> 24 | 0) == 9 | ($1168 << 24 >> 24 | 0) == 10)) {
         break;
        }
        $1169 = $i_0_i_i1074 + 1 | 0; //@line 51142
        $i_0_i_i1074 = $1169;
        $1168 = HEAP8[$cmd + 4 + $1169 | 0] | 0;
       }
       HEAP32[$1 >> 2] = $i_0_i_i1074; //@line 51149
       if ((HEAP8[$cmd + 4 + $i_0_i_i1074 | 0] | 0) != 38) {
        $1217 = $i_0_i_i1074; //@line 51153
        break;
       }
       $1174 = $i_0_i_i1074 + 1 | 0; //@line 51156
       HEAP32[$1 >> 2] = $1174; //@line 51157
       if ((_cmd_match_expr_cmp($cmd, $val2_i703, $base) | 0) == 0) {
        label = 15414; //@line 51162
        break L19580;
       }
       while (1) {
        $1179 = HEAP32[$1 >> 2] | 0; //@line 51168
        while (1) {
         $1180 = $cmd + 4 + $1179 | 0; //@line 51171
         $1181 = HEAP8[$1180] | 0; //@line 51172
         if (!(($1181 << 24 >> 24 | 0) == 13 | ($1181 << 24 >> 24 | 0) == 32 | ($1181 << 24 >> 24 | 0) == 9 | ($1181 << 24 >> 24 | 0) == 10)) {
          break;
         }
         $1179 = $1179 + 1 | 0; //@line 51178
        }
        HEAP32[$1 >> 2] = $1179; //@line 51180
        $1184 = HEAP8[$1180] | 0; //@line 51181
        if ($1184 << 24 >> 24 == 61) {
         if ((HEAP8[$1179 + 1 + ($cmd + 4) | 0] | 0) == 61) {
          $op_0_i1085 = 1;
          $storemerge4229_in = $1179;
         } else {
          $i_0_i_i2504 = $1179;
          $1191 = 61;
          label = 15405; //@line 51192
         }
        } else {
         $i_0_i_i2504 = $1179;
         $1191 = $1184;
         label = 15405; //@line 51196
        }
        if ((label | 0) == 15405) {
         while (1) {
          label = 0; //@line 51200
          if (!(($1191 << 24 >> 24 | 0) == 13 | ($1191 << 24 >> 24 | 0) == 32 | ($1191 << 24 >> 24 | 0) == 9 | ($1191 << 24 >> 24 | 0) == 10)) {
           break;
          }
          $1192 = $i_0_i_i2504 + 1 | 0; //@line 51206
          $i_0_i_i2504 = $1192;
          $1191 = HEAP8[$cmd + 4 + $1192 | 0] | 0;
          label = 15405; //@line 51211
         }
         HEAP32[$1 >> 2] = $i_0_i_i2504; //@line 51214
         if ((HEAP8[$cmd + 4 + $i_0_i_i2504 | 0] | 0) != 33) {
          break;
         }
         if ((HEAP8[$i_0_i_i2504 + 1 + ($cmd + 4) | 0] | 0) == 61) {
          $op_0_i1085 = 2;
          $storemerge4229_in = $i_0_i_i2504;
         } else {
          break;
         }
        }
        HEAP32[$1 >> 2] = $storemerge4229_in + 2; //@line 51233
        if ((_cmd_match_expr_cmp($cmd, $val2_i1084, $base) | 0) == 0) {
         label = 15410; //@line 51238
         break L19580;
        }
        if (($op_0_i1085 | 0) == 1) {
         HEAP32[$val2_i703 >> 2] = (HEAP32[$val2_i703 >> 2] | 0) == (HEAP32[$val2_i1084 >> 2] | 0); //@line 51246
         continue;
        } else if (($op_0_i1085 | 0) == 2) {
         HEAP32[$val2_i703 >> 2] = (HEAP32[$val2_i703 >> 2] | 0) != (HEAP32[$val2_i1084 >> 2] | 0); //@line 51254
         continue;
        } else {
         continue;
        }
       }
       HEAP32[$val2_i247 >> 2] = HEAP32[$val2_i703 >> 2] & HEAP32[$val2_i247 >> 2]; //@line 51264
       $1154 = $i_0_i_i2504; //@line 51266
      }
      if ((label | 0) == 17255) {
       label = 0; //@line 51269
       HEAP32[$1 >> 2] = $1154; //@line 51270
       $1217 = $1154; //@line 51272
      }
      HEAP32[$val2_i >> 2] = HEAP32[$val2_i247 >> 2] ^ HEAP32[$val2_i >> 2]; //@line 51278
      $i_0_i_i_i248 = $1217; //@line 51280
     }
     while (1) {
      $1223 = $1221; //@line 51285
      while (1) {
       $1224 = $cmd + 4 + $1223 | 0; //@line 51288
       $1225 = HEAP8[$1224] | 0; //@line 51289
       if (!(($1225 << 24 >> 24 | 0) == 13 | ($1225 << 24 >> 24 | 0) == 32 | ($1225 << 24 >> 24 | 0) == 9 | ($1225 << 24 >> 24 | 0) == 10)) {
        break;
       }
       $1223 = $1223 + 1 | 0; //@line 51295
      }
      HEAP32[$1 >> 2] = $1223; //@line 51297
      $1228 = HEAP8[$1224] | 0; //@line 51298
      if ($1228 << 24 >> 24 == 124) {
       if ((HEAP8[$1223 + 1 + ($cmd + 4) | 0] | 0) == 124) {
        label = 17256; //@line 51306
        break;
       } else {
        $i_0_i_i268 = $1223;
        $1235 = 124;
       }
      } else {
       $i_0_i_i268 = $1223;
       $1235 = $1228;
      }
      while (1) {
       if (!(($1235 << 24 >> 24 | 0) == 13 | ($1235 << 24 >> 24 | 0) == 32 | ($1235 << 24 >> 24 | 0) == 9 | ($1235 << 24 >> 24 | 0) == 10)) {
        break;
       }
       $1236 = $i_0_i_i268 + 1 | 0; //@line 51320
       $i_0_i_i268 = $1236;
       $1235 = HEAP8[$cmd + 4 + $1236 | 0] | 0;
      }
      HEAP32[$1 >> 2] = $i_0_i_i268; //@line 51327
      if ((HEAP8[$cmd + 4 + $i_0_i_i268 | 0] | 0) != 124) {
       $i_0_i_i_i66 = $i_0_i_i268; //@line 51331
       break;
      }
      $1241 = $i_0_i_i268 + 1 | 0; //@line 51334
      HEAP32[$1 >> 2] = $1241; //@line 51335
      if ((_cmd_match_expr_cmp($cmd, $val2_i135, $base) | 0) == 0) {
       label = 15511; //@line 51340
       break L19580;
      }
      while (1) {
       $1246 = HEAP32[$1 >> 2] | 0; //@line 51346
       while (1) {
        $1247 = $cmd + 4 + $1246 | 0; //@line 51349
        $1248 = HEAP8[$1247] | 0; //@line 51350
        if (!(($1248 << 24 >> 24 | 0) == 13 | ($1248 << 24 >> 24 | 0) == 32 | ($1248 << 24 >> 24 | 0) == 9 | ($1248 << 24 >> 24 | 0) == 10)) {
         break;
        }
        $1246 = $1246 + 1 | 0; //@line 51356
       }
       HEAP32[$1 >> 2] = $1246; //@line 51358
       $1251 = HEAP8[$1247] | 0; //@line 51359
       if ($1251 << 24 >> 24 == 61) {
        if ((HEAP8[$1246 + 1 + ($cmd + 4) | 0] | 0) == 61) {
         $op_0_i1089 = 1;
         $storemerge4228_in = $1246;
        } else {
         $i_0_i_i2524 = $1246;
         $1258 = 61;
         label = 15432; //@line 51370
        }
       } else {
        $i_0_i_i2524 = $1246;
        $1258 = $1251;
        label = 15432; //@line 51374
       }
       if ((label | 0) == 15432) {
        while (1) {
         label = 0; //@line 51378
         if (!(($1258 << 24 >> 24 | 0) == 13 | ($1258 << 24 >> 24 | 0) == 32 | ($1258 << 24 >> 24 | 0) == 9 | ($1258 << 24 >> 24 | 0) == 10)) {
          break;
         }
         $1259 = $i_0_i_i2524 + 1 | 0; //@line 51384
         $i_0_i_i2524 = $1259;
         $1258 = HEAP8[$cmd + 4 + $1259 | 0] | 0;
         label = 15432; //@line 51389
        }
        HEAP32[$1 >> 2] = $i_0_i_i2524; //@line 51392
        if ((HEAP8[$cmd + 4 + $i_0_i_i2524 | 0] | 0) != 33) {
         $1281 = $i_0_i_i2524; //@line 51396
         break;
        }
        if ((HEAP8[$i_0_i_i2524 + 1 + ($cmd + 4) | 0] | 0) == 61) {
         $op_0_i1089 = 2;
         $storemerge4228_in = $i_0_i_i2524;
        } else {
         $1281 = $i_0_i_i2524; //@line 51406
         break;
        }
       }
       HEAP32[$1 >> 2] = $storemerge4228_in + 2; //@line 51413
       if ((_cmd_match_expr_cmp($cmd, $val2_i1088, $base) | 0) == 0) {
        label = 15437; //@line 51418
        break L19580;
       }
       if (($op_0_i1089 | 0) == 1) {
        HEAP32[$val2_i135 >> 2] = (HEAP32[$val2_i135 >> 2] | 0) == (HEAP32[$val2_i1088 >> 2] | 0); //@line 51426
        continue;
       } else if (($op_0_i1089 | 0) == 2) {
        HEAP32[$val2_i135 >> 2] = (HEAP32[$val2_i135 >> 2] | 0) != (HEAP32[$val2_i1088 >> 2] | 0); //@line 51434
        continue;
       } else {
        continue;
       }
      }
      while (1) {
       $1283 = $1281; //@line 51444
       while (1) {
        $1284 = $cmd + 4 + $1283 | 0; //@line 51447
        $1285 = HEAP8[$1284] | 0; //@line 51448
        if (!(($1285 << 24 >> 24 | 0) == 13 | ($1285 << 24 >> 24 | 0) == 32 | ($1285 << 24 >> 24 | 0) == 9 | ($1285 << 24 >> 24 | 0) == 10)) {
         break;
        }
        $1283 = $1283 + 1 | 0; //@line 51454
       }
       HEAP32[$1 >> 2] = $1283; //@line 51456
       $1288 = HEAP8[$1284] | 0; //@line 51457
       if ($1288 << 24 >> 24 == 38) {
        if ((HEAP8[$1283 + 1 + ($cmd + 4) | 0] | 0) == 38) {
         label = 17257; //@line 51465
         break;
        } else {
         $i_0_i_i1101 = $1283;
         $1295 = 38;
        }
       } else {
        $i_0_i_i1101 = $1283;
        $1295 = $1288;
       }
       while (1) {
        if (!(($1295 << 24 >> 24 | 0) == 13 | ($1295 << 24 >> 24 | 0) == 32 | ($1295 << 24 >> 24 | 0) == 9 | ($1295 << 24 >> 24 | 0) == 10)) {
         break;
        }
        $1296 = $i_0_i_i1101 + 1 | 0; //@line 51479
        $i_0_i_i1101 = $1296;
        $1295 = HEAP8[$cmd + 4 + $1296 | 0] | 0;
       }
       HEAP32[$1 >> 2] = $i_0_i_i1101; //@line 51486
       if ((HEAP8[$cmd + 4 + $i_0_i_i1101 | 0] | 0) != 38) {
        $i_0_i_i_i279 = $i_0_i_i1101; //@line 51490
        break;
       }
       $1301 = $i_0_i_i1101 + 1 | 0; //@line 51493
       HEAP32[$1 >> 2] = $1301; //@line 51494
       if ((_cmd_match_expr_cmp($cmd, $val2_i706, $base) | 0) == 0) {
        label = 15464; //@line 51499
        break L19580;
       }
       while (1) {
        $1306 = HEAP32[$1 >> 2] | 0; //@line 51505
        while (1) {
         $1307 = $cmd + 4 + $1306 | 0; //@line 51508
         $1308 = HEAP8[$1307] | 0; //@line 51509
         if (!(($1308 << 24 >> 24 | 0) == 13 | ($1308 << 24 >> 24 | 0) == 32 | ($1308 << 24 >> 24 | 0) == 9 | ($1308 << 24 >> 24 | 0) == 10)) {
          break;
         }
         $1306 = $1306 + 1 | 0; //@line 51515
        }
        HEAP32[$1 >> 2] = $1306; //@line 51517
        $1311 = HEAP8[$1307] | 0; //@line 51518
        if ($1311 << 24 >> 24 == 61) {
         if ((HEAP8[$1306 + 1 + ($cmd + 4) | 0] | 0) == 61) {
          $op_0_i1112 = 1;
          $storemerge4227_in = $1306;
         } else {
          $i_0_i_i2544 = $1306;
          $1318 = 61;
          label = 15455; //@line 51529
         }
        } else {
         $i_0_i_i2544 = $1306;
         $1318 = $1311;
         label = 15455; //@line 51533
        }
        if ((label | 0) == 15455) {
         while (1) {
          label = 0; //@line 51537
          if (!(($1318 << 24 >> 24 | 0) == 13 | ($1318 << 24 >> 24 | 0) == 32 | ($1318 << 24 >> 24 | 0) == 9 | ($1318 << 24 >> 24 | 0) == 10)) {
           break;
          }
          $1319 = $i_0_i_i2544 + 1 | 0; //@line 51543
          $i_0_i_i2544 = $1319;
          $1318 = HEAP8[$cmd + 4 + $1319 | 0] | 0;
          label = 15455; //@line 51548
         }
         HEAP32[$1 >> 2] = $i_0_i_i2544; //@line 51551
         if ((HEAP8[$cmd + 4 + $i_0_i_i2544 | 0] | 0) != 33) {
          break;
         }
         if ((HEAP8[$i_0_i_i2544 + 1 + ($cmd + 4) | 0] | 0) == 61) {
          $op_0_i1112 = 2;
          $storemerge4227_in = $i_0_i_i2544;
         } else {
          break;
         }
        }
        HEAP32[$1 >> 2] = $storemerge4227_in + 2; //@line 51570
        if ((_cmd_match_expr_cmp($cmd, $val2_i1111, $base) | 0) == 0) {
         label = 15460; //@line 51575
         break L19580;
        }
        if (($op_0_i1112 | 0) == 1) {
         HEAP32[$val2_i706 >> 2] = (HEAP32[$val2_i706 >> 2] | 0) == (HEAP32[$val2_i1111 >> 2] | 0); //@line 51583
         continue;
        } else if (($op_0_i1112 | 0) == 2) {
         HEAP32[$val2_i706 >> 2] = (HEAP32[$val2_i706 >> 2] | 0) != (HEAP32[$val2_i1111 >> 2] | 0); //@line 51591
         continue;
        } else {
         continue;
        }
       }
       HEAP32[$val2_i135 >> 2] = HEAP32[$val2_i706 >> 2] & HEAP32[$val2_i135 >> 2]; //@line 51601
       $1281 = $i_0_i_i2544; //@line 51603
      }
      if ((label | 0) == 17257) {
       label = 0; //@line 51606
       HEAP32[$1 >> 2] = $1281; //@line 51607
       $i_0_i_i_i279 = $1281; //@line 51609
      }
      while (1) {
       $1344 = $cmd + 4 + $i_0_i_i_i279 | 0; //@line 51613
       $1345 = HEAP8[$1344] | 0; //@line 51614
       if (($1345 << 24 >> 24 | 0) == 13 | ($1345 << 24 >> 24 | 0) == 32 | ($1345 << 24 >> 24 | 0) == 9 | ($1345 << 24 >> 24 | 0) == 10) {
        $i_0_i_i_i279 = $i_0_i_i_i279 + 1 | 0; //@line 51618
        continue;
       }
       HEAP32[$1 >> 2] = $i_0_i_i_i279; //@line 51621
       if ((HEAP8[$1344] | 0) != 94) {
        break;
       }
       $1351 = $i_0_i_i_i279 + 1 | 0; //@line 51627
       HEAP32[$1 >> 2] = $1351; //@line 51628
       if ((_cmd_match_expr_cmp($cmd, $val2_i278, $base) | 0) == 0) {
        label = 15509; //@line 51633
        break L19580;
       }
       while (1) {
        $1356 = HEAP32[$1 >> 2] | 0; //@line 51639
        while (1) {
         $1357 = $cmd + 4 + $1356 | 0; //@line 51642
         $1358 = HEAP8[$1357] | 0; //@line 51643
         if (!(($1358 << 24 >> 24 | 0) == 13 | ($1358 << 24 >> 24 | 0) == 32 | ($1358 << 24 >> 24 | 0) == 9 | ($1358 << 24 >> 24 | 0) == 10)) {
          break;
         }
         $1356 = $1356 + 1 | 0; //@line 51649
        }
        HEAP32[$1 >> 2] = $1356; //@line 51651
        $1361 = HEAP8[$1357] | 0; //@line 51652
        if ($1361 << 24 >> 24 == 61) {
         if ((HEAP8[$1356 + 1 + ($cmd + 4) | 0] | 0) == 61) {
          $op_0_i1116 = 1;
          $storemerge4226_in = $1356;
         } else {
          $i_0_i_i2564 = $1356;
          $1368 = 61;
          label = 15475; //@line 51663
         }
        } else {
         $i_0_i_i2564 = $1356;
         $1368 = $1361;
         label = 15475; //@line 51667
        }
        if ((label | 0) == 15475) {
         while (1) {
          label = 0; //@line 51671
          if (!(($1368 << 24 >> 24 | 0) == 13 | ($1368 << 24 >> 24 | 0) == 32 | ($1368 << 24 >> 24 | 0) == 9 | ($1368 << 24 >> 24 | 0) == 10)) {
           break;
          }
          $1369 = $i_0_i_i2564 + 1 | 0; //@line 51677
          $i_0_i_i2564 = $1369;
          $1368 = HEAP8[$cmd + 4 + $1369 | 0] | 0;
          label = 15475; //@line 51682
         }
         HEAP32[$1 >> 2] = $i_0_i_i2564; //@line 51685
         if ((HEAP8[$cmd + 4 + $i_0_i_i2564 | 0] | 0) != 33) {
          $1391 = $i_0_i_i2564; //@line 51689
          break;
         }
         if ((HEAP8[$i_0_i_i2564 + 1 + ($cmd + 4) | 0] | 0) == 61) {
          $op_0_i1116 = 2;
          $storemerge4226_in = $i_0_i_i2564;
         } else {
          $1391 = $i_0_i_i2564; //@line 51699
          break;
         }
        }
        HEAP32[$1 >> 2] = $storemerge4226_in + 2; //@line 51706
        if ((_cmd_match_expr_cmp($cmd, $val2_i1115, $base) | 0) == 0) {
         label = 15480; //@line 51711
         break L19580;
        }
        if (($op_0_i1116 | 0) == 1) {
         HEAP32[$val2_i278 >> 2] = (HEAP32[$val2_i278 >> 2] | 0) == (HEAP32[$val2_i1115 >> 2] | 0); //@line 51719
         continue;
        } else if (($op_0_i1116 | 0) == 2) {
         HEAP32[$val2_i278 >> 2] = (HEAP32[$val2_i278 >> 2] | 0) != (HEAP32[$val2_i1115 >> 2] | 0); //@line 51727
         continue;
        } else {
         continue;
        }
       }
       while (1) {
        $1393 = $1391; //@line 51737
        while (1) {
         $1394 = $cmd + 4 + $1393 | 0; //@line 51740
         $1395 = HEAP8[$1394] | 0; //@line 51741
         if (!(($1395 << 24 >> 24 | 0) == 13 | ($1395 << 24 >> 24 | 0) == 32 | ($1395 << 24 >> 24 | 0) == 9 | ($1395 << 24 >> 24 | 0) == 10)) {
          break;
         }
         $1393 = $1393 + 1 | 0; //@line 51747
        }
        HEAP32[$1 >> 2] = $1393; //@line 51749
        $1398 = HEAP8[$1394] | 0; //@line 51750
        if ($1398 << 24 >> 24 == 38) {
         if ((HEAP8[$1393 + 1 + ($cmd + 4) | 0] | 0) == 38) {
          label = 17258; //@line 51758
          break;
         } else {
          $i_0_i_i1128 = $1393;
          $1405 = 38;
         }
        } else {
         $i_0_i_i1128 = $1393;
         $1405 = $1398;
        }
        while (1) {
         if (!(($1405 << 24 >> 24 | 0) == 13 | ($1405 << 24 >> 24 | 0) == 32 | ($1405 << 24 >> 24 | 0) == 9 | ($1405 << 24 >> 24 | 0) == 10)) {
          break;
         }
         $1406 = $i_0_i_i1128 + 1 | 0; //@line 51772
         $i_0_i_i1128 = $1406;
         $1405 = HEAP8[$cmd + 4 + $1406 | 0] | 0;
        }
        HEAP32[$1 >> 2] = $i_0_i_i1128; //@line 51779
        if ((HEAP8[$cmd + 4 + $i_0_i_i1128 | 0] | 0) != 38) {
         $1454 = $i_0_i_i1128; //@line 51783
         break;
        }
        $1411 = $i_0_i_i1128 + 1 | 0; //@line 51786
        HEAP32[$1 >> 2] = $1411; //@line 51787
        if ((_cmd_match_expr_cmp($cmd, $val2_i709, $base) | 0) == 0) {
         label = 15507; //@line 51792
         break L19580;
        }
        while (1) {
         $1416 = HEAP32[$1 >> 2] | 0; //@line 51798
         while (1) {
          $1417 = $cmd + 4 + $1416 | 0; //@line 51801
          $1418 = HEAP8[$1417] | 0; //@line 51802
          if (!(($1418 << 24 >> 24 | 0) == 13 | ($1418 << 24 >> 24 | 0) == 32 | ($1418 << 24 >> 24 | 0) == 9 | ($1418 << 24 >> 24 | 0) == 10)) {
           break;
          }
          $1416 = $1416 + 1 | 0; //@line 51808
         }
         HEAP32[$1 >> 2] = $1416; //@line 51810
         $1421 = HEAP8[$1417] | 0; //@line 51811
         if ($1421 << 24 >> 24 == 61) {
          if ((HEAP8[$1416 + 1 + ($cmd + 4) | 0] | 0) == 61) {
           $op_0_i1139 = 1;
           $storemerge4225_in = $1416;
          } else {
           $i_0_i_i2584 = $1416;
           $1428 = 61;
           label = 15498; //@line 51822
          }
         } else {
          $i_0_i_i2584 = $1416;
          $1428 = $1421;
          label = 15498; //@line 51826
         }
         if ((label | 0) == 15498) {
          while (1) {
           label = 0; //@line 51830
           if (!(($1428 << 24 >> 24 | 0) == 13 | ($1428 << 24 >> 24 | 0) == 32 | ($1428 << 24 >> 24 | 0) == 9 | ($1428 << 24 >> 24 | 0) == 10)) {
            break;
           }
           $1429 = $i_0_i_i2584 + 1 | 0; //@line 51836
           $i_0_i_i2584 = $1429;
           $1428 = HEAP8[$cmd + 4 + $1429 | 0] | 0;
           label = 15498; //@line 51841
          }
          HEAP32[$1 >> 2] = $i_0_i_i2584; //@line 51844
          if ((HEAP8[$cmd + 4 + $i_0_i_i2584 | 0] | 0) != 33) {
           break;
          }
          if ((HEAP8[$i_0_i_i2584 + 1 + ($cmd + 4) | 0] | 0) == 61) {
           $op_0_i1139 = 2;
           $storemerge4225_in = $i_0_i_i2584;
          } else {
           break;
          }
         }
         HEAP32[$1 >> 2] = $storemerge4225_in + 2; //@line 51863
         if ((_cmd_match_expr_cmp($cmd, $val2_i1138, $base) | 0) == 0) {
          label = 15503; //@line 51868
          break L19580;
         }
         if (($op_0_i1139 | 0) == 1) {
          HEAP32[$val2_i709 >> 2] = (HEAP32[$val2_i709 >> 2] | 0) == (HEAP32[$val2_i1138 >> 2] | 0); //@line 51876
          continue;
         } else if (($op_0_i1139 | 0) == 2) {
          HEAP32[$val2_i709 >> 2] = (HEAP32[$val2_i709 >> 2] | 0) != (HEAP32[$val2_i1138 >> 2] | 0); //@line 51884
          continue;
         } else {
          continue;
         }
        }
        HEAP32[$val2_i278 >> 2] = HEAP32[$val2_i709 >> 2] & HEAP32[$val2_i278 >> 2]; //@line 51894
        $1391 = $i_0_i_i2584; //@line 51896
       }
       if ((label | 0) == 17258) {
        label = 0; //@line 51899
        HEAP32[$1 >> 2] = $1391; //@line 51900
        $1454 = $1391; //@line 51902
       }
       HEAP32[$val2_i135 >> 2] = HEAP32[$val2_i278 >> 2] ^ HEAP32[$val2_i135 >> 2]; //@line 51908
       $i_0_i_i_i279 = $1454; //@line 51910
      }
      HEAP32[$val2_i >> 2] = HEAP32[$val2_i135 >> 2] | HEAP32[$val2_i >> 2]; //@line 51915
      $1221 = $i_0_i_i_i279; //@line 51917
     }
     if ((label | 0) == 17256) {
      label = 0; //@line 51920
      HEAP32[$1 >> 2] = $1221; //@line 51921
      $i_0_i_i_i66 = $1221; //@line 51923
     }
     while (1) {
      $1462 = $cmd + 4 + $i_0_i_i_i66 | 0; //@line 51927
      $1463 = HEAP8[$1462] | 0; //@line 51928
      if (($1463 << 24 >> 24 | 0) == 13 | ($1463 << 24 >> 24 | 0) == 32 | ($1463 << 24 >> 24 | 0) == 9 | ($1463 << 24 >> 24 | 0) == 10) {
       $i_0_i_i_i66 = $i_0_i_i_i66 + 1 | 0; //@line 51932
       continue;
      }
      HEAP32[$1 >> 2] = $i_0_i_i_i66; //@line 51935
      if ((HEAP8[$1462] | 0) != 38) {
       break;
      }
      if ((HEAP8[$i_0_i_i_i66 + 1 + ($cmd + 4) | 0] | 0) != 38) {
       break;
      }
      $5877 = $i_0_i_i_i66 + 2 | 0; //@line 51948
      HEAP32[$1 >> 2] = $5877; //@line 51949
      if ((_cmd_match_expr_cmp($cmd, $val2_i65, $base) | 0) == 0) {
       label = 15696; //@line 51954
       break L19580;
      }
      while (1) {
       $1474 = HEAP32[$1 >> 2] | 0; //@line 51960
       while (1) {
        $1475 = $cmd + 4 + $1474 | 0; //@line 51963
        $1476 = HEAP8[$1475] | 0; //@line 51964
        if (!(($1476 << 24 >> 24 | 0) == 13 | ($1476 << 24 >> 24 | 0) == 32 | ($1476 << 24 >> 24 | 0) == 9 | ($1476 << 24 >> 24 | 0) == 10)) {
         break;
        }
        $1474 = $1474 + 1 | 0; //@line 51970
       }
       HEAP32[$1 >> 2] = $1474; //@line 51972
       $1479 = HEAP8[$1475] | 0; //@line 51973
       if ($1479 << 24 >> 24 == 61) {
        if ((HEAP8[$1474 + 1 + ($cmd + 4) | 0] | 0) == 61) {
         $op_0_i1143 = 1;
         $storemerge4224_in = $1474;
        } else {
         $i_0_i_i2604 = $1474;
         $1486 = 61;
         label = 15522; //@line 51984
        }
       } else {
        $i_0_i_i2604 = $1474;
        $1486 = $1479;
        label = 15522; //@line 51988
       }
       if ((label | 0) == 15522) {
        while (1) {
         label = 0; //@line 51992
         if (!(($1486 << 24 >> 24 | 0) == 13 | ($1486 << 24 >> 24 | 0) == 32 | ($1486 << 24 >> 24 | 0) == 9 | ($1486 << 24 >> 24 | 0) == 10)) {
          break;
         }
         $1487 = $i_0_i_i2604 + 1 | 0; //@line 51998
         $i_0_i_i2604 = $1487;
         $1486 = HEAP8[$cmd + 4 + $1487 | 0] | 0;
         label = 15522; //@line 52003
        }
        HEAP32[$1 >> 2] = $i_0_i_i2604; //@line 52006
        if ((HEAP8[$cmd + 4 + $i_0_i_i2604 | 0] | 0) != 33) {
         $1509 = $i_0_i_i2604; //@line 52010
         break;
        }
        if ((HEAP8[$i_0_i_i2604 + 1 + ($cmd + 4) | 0] | 0) == 61) {
         $op_0_i1143 = 2;
         $storemerge4224_in = $i_0_i_i2604;
        } else {
         $1509 = $i_0_i_i2604; //@line 52020
         break;
        }
       }
       HEAP32[$1 >> 2] = $storemerge4224_in + 2; //@line 52027
       if ((_cmd_match_expr_cmp($cmd, $val2_i1142, $base) | 0) == 0) {
        label = 15527; //@line 52032
        break L19580;
       }
       if (($op_0_i1143 | 0) == 1) {
        HEAP32[$val2_i65 >> 2] = (HEAP32[$val2_i65 >> 2] | 0) == (HEAP32[$val2_i1142 >> 2] | 0); //@line 52040
        continue;
       } else if (($op_0_i1143 | 0) == 2) {
        HEAP32[$val2_i65 >> 2] = (HEAP32[$val2_i65 >> 2] | 0) != (HEAP32[$val2_i1142 >> 2] | 0); //@line 52048
        continue;
       } else {
        continue;
       }
      }
      while (1) {
       $1511 = $1509; //@line 52058
       while (1) {
        $1512 = $cmd + 4 + $1511 | 0; //@line 52061
        $1513 = HEAP8[$1512] | 0; //@line 52062
        if (!(($1513 << 24 >> 24 | 0) == 13 | ($1513 << 24 >> 24 | 0) == 32 | ($1513 << 24 >> 24 | 0) == 9 | ($1513 << 24 >> 24 | 0) == 10)) {
         break;
        }
        $1511 = $1511 + 1 | 0; //@line 52068
       }
       HEAP32[$1 >> 2] = $1511; //@line 52070
       $1516 = HEAP8[$1512] | 0; //@line 52071
       if ($1516 << 24 >> 24 == 38) {
        if ((HEAP8[$1511 + 1 + ($cmd + 4) | 0] | 0) == 38) {
         label = 17260; //@line 52079
         break;
        } else {
         $i_0_i_i1155 = $1511;
         $1523 = 38;
        }
       } else {
        $i_0_i_i1155 = $1511;
        $1523 = $1516;
       }
       while (1) {
        if (!(($1523 << 24 >> 24 | 0) == 13 | ($1523 << 24 >> 24 | 0) == 32 | ($1523 << 24 >> 24 | 0) == 9 | ($1523 << 24 >> 24 | 0) == 10)) {
         break;
        }
        $1524 = $i_0_i_i1155 + 1 | 0; //@line 52093
        $i_0_i_i1155 = $1524;
        $1523 = HEAP8[$cmd + 4 + $1524 | 0] | 0;
       }
       HEAP32[$1 >> 2] = $i_0_i_i1155; //@line 52100
       if ((HEAP8[$cmd + 4 + $i_0_i_i1155 | 0] | 0) != 38) {
        $i_0_i_i_i291 = $i_0_i_i1155; //@line 52104
        break;
       }
       $1529 = $i_0_i_i1155 + 1 | 0; //@line 52107
       HEAP32[$1 >> 2] = $1529; //@line 52108
       if ((_cmd_match_expr_cmp($cmd, $val2_i712, $base) | 0) == 0) {
        label = 15554; //@line 52113
        break L19580;
       }
       while (1) {
        $1534 = HEAP32[$1 >> 2] | 0; //@line 52119
        while (1) {
         $1535 = $cmd + 4 + $1534 | 0; //@line 52122
         $1536 = HEAP8[$1535] | 0; //@line 52123
         if (!(($1536 << 24 >> 24 | 0) == 13 | ($1536 << 24 >> 24 | 0) == 32 | ($1536 << 24 >> 24 | 0) == 9 | ($1536 << 24 >> 24 | 0) == 10)) {
          break;
         }
         $1534 = $1534 + 1 | 0; //@line 52129
        }
        HEAP32[$1 >> 2] = $1534; //@line 52131
        $1539 = HEAP8[$1535] | 0; //@line 52132
        if ($1539 << 24 >> 24 == 61) {
         if ((HEAP8[$1534 + 1 + ($cmd + 4) | 0] | 0) == 61) {
          $op_0_i1166 = 1;
          $storemerge4223_in = $1534;
         } else {
          $i_0_i_i2624 = $1534;
          $1546 = 61;
          label = 15545; //@line 52143
         }
        } else {
         $i_0_i_i2624 = $1534;
         $1546 = $1539;
         label = 15545; //@line 52147
        }
        if ((label | 0) == 15545) {
         while (1) {
          label = 0; //@line 52151
          if (!(($1546 << 24 >> 24 | 0) == 13 | ($1546 << 24 >> 24 | 0) == 32 | ($1546 << 24 >> 24 | 0) == 9 | ($1546 << 24 >> 24 | 0) == 10)) {
           break;
          }
          $1547 = $i_0_i_i2624 + 1 | 0; //@line 52157
          $i_0_i_i2624 = $1547;
          $1546 = HEAP8[$cmd + 4 + $1547 | 0] | 0;
          label = 15545; //@line 52162
         }
         HEAP32[$1 >> 2] = $i_0_i_i2624; //@line 52165
         if ((HEAP8[$cmd + 4 + $i_0_i_i2624 | 0] | 0) != 33) {
          break;
         }
         if ((HEAP8[$i_0_i_i2624 + 1 + ($cmd + 4) | 0] | 0) == 61) {
          $op_0_i1166 = 2;
          $storemerge4223_in = $i_0_i_i2624;
         } else {
          break;
         }
        }
        HEAP32[$1 >> 2] = $storemerge4223_in + 2; //@line 52184
        if ((_cmd_match_expr_cmp($cmd, $val2_i1165, $base) | 0) == 0) {
         label = 15550; //@line 52189
         break L19580;
        }
        if (($op_0_i1166 | 0) == 1) {
         HEAP32[$val2_i712 >> 2] = (HEAP32[$val2_i712 >> 2] | 0) == (HEAP32[$val2_i1165 >> 2] | 0); //@line 52197
         continue;
        } else if (($op_0_i1166 | 0) == 2) {
         HEAP32[$val2_i712 >> 2] = (HEAP32[$val2_i712 >> 2] | 0) != (HEAP32[$val2_i1165 >> 2] | 0); //@line 52205
         continue;
        } else {
         continue;
        }
       }
       HEAP32[$val2_i65 >> 2] = HEAP32[$val2_i712 >> 2] & HEAP32[$val2_i65 >> 2]; //@line 52215
       $1509 = $i_0_i_i2624; //@line 52217
      }
      if ((label | 0) == 17260) {
       label = 0; //@line 52220
       HEAP32[$1 >> 2] = $1509; //@line 52221
       $i_0_i_i_i291 = $1509; //@line 52223
      }
      while (1) {
       $1572 = $cmd + 4 + $i_0_i_i_i291 | 0; //@line 52227
       $1573 = HEAP8[$1572] | 0; //@line 52228
       if (($1573 << 24 >> 24 | 0) == 13 | ($1573 << 24 >> 24 | 0) == 32 | ($1573 << 24 >> 24 | 0) == 9 | ($1573 << 24 >> 24 | 0) == 10) {
        $i_0_i_i_i291 = $i_0_i_i_i291 + 1 | 0; //@line 52232
        continue;
       }
       HEAP32[$1 >> 2] = $i_0_i_i_i291; //@line 52235
       if ((HEAP8[$1572] | 0) != 94) {
        $1686 = $i_0_i_i_i291; //@line 52239
        break;
       }
       $1579 = $i_0_i_i_i291 + 1 | 0; //@line 52242
       HEAP32[$1 >> 2] = $1579; //@line 52243
       if ((_cmd_match_expr_cmp($cmd, $val2_i290, $base) | 0) == 0) {
        label = 15599; //@line 52248
        break L19580;
       }
       while (1) {
        $1584 = HEAP32[$1 >> 2] | 0; //@line 52254
        while (1) {
         $1585 = $cmd + 4 + $1584 | 0; //@line 52257
         $1586 = HEAP8[$1585] | 0; //@line 52258
         if (!(($1586 << 24 >> 24 | 0) == 13 | ($1586 << 24 >> 24 | 0) == 32 | ($1586 << 24 >> 24 | 0) == 9 | ($1586 << 24 >> 24 | 0) == 10)) {
          break;
         }
         $1584 = $1584 + 1 | 0; //@line 52264
        }
        HEAP32[$1 >> 2] = $1584; //@line 52266
        $1589 = HEAP8[$1585] | 0; //@line 52267
        if ($1589 << 24 >> 24 == 61) {
         if ((HEAP8[$1584 + 1 + ($cmd + 4) | 0] | 0) == 61) {
          $op_0_i1170 = 1;
          $storemerge4222_in = $1584;
         } else {
          $i_0_i_i2644 = $1584;
          $1596 = 61;
          label = 15565; //@line 52278
         }
        } else {
         $i_0_i_i2644 = $1584;
         $1596 = $1589;
         label = 15565; //@line 52282
        }
        if ((label | 0) == 15565) {
         while (1) {
          label = 0; //@line 52286
          if (!(($1596 << 24 >> 24 | 0) == 13 | ($1596 << 24 >> 24 | 0) == 32 | ($1596 << 24 >> 24 | 0) == 9 | ($1596 << 24 >> 24 | 0) == 10)) {
           break;
          }
          $1597 = $i_0_i_i2644 + 1 | 0; //@line 52292
          $i_0_i_i2644 = $1597;
          $1596 = HEAP8[$cmd + 4 + $1597 | 0] | 0;
          label = 15565; //@line 52297
         }
         HEAP32[$1 >> 2] = $i_0_i_i2644; //@line 52300
         if ((HEAP8[$cmd + 4 + $i_0_i_i2644 | 0] | 0) != 33) {
          $1619 = $i_0_i_i2644; //@line 52304
          break;
         }
         if ((HEAP8[$i_0_i_i2644 + 1 + ($cmd + 4) | 0] | 0) == 61) {
          $op_0_i1170 = 2;
          $storemerge4222_in = $i_0_i_i2644;
         } else {
          $1619 = $i_0_i_i2644; //@line 52314
          break;
         }
        }
        HEAP32[$1 >> 2] = $storemerge4222_in + 2; //@line 52321
        if ((_cmd_match_expr_cmp($cmd, $val2_i1169, $base) | 0) == 0) {
         label = 15570; //@line 52326
         break L19580;
        }
        if (($op_0_i1170 | 0) == 1) {
         HEAP32[$val2_i290 >> 2] = (HEAP32[$val2_i290 >> 2] | 0) == (HEAP32[$val2_i1169 >> 2] | 0); //@line 52334
         continue;
        } else if (($op_0_i1170 | 0) == 2) {
         HEAP32[$val2_i290 >> 2] = (HEAP32[$val2_i290 >> 2] | 0) != (HEAP32[$val2_i1169 >> 2] | 0); //@line 52342
         continue;
        } else {
         continue;
        }
       }
       while (1) {
        $1621 = $1619; //@line 52352
        while (1) {
         $1622 = $cmd + 4 + $1621 | 0; //@line 52355
         $1623 = HEAP8[$1622] | 0; //@line 52356
         if (!(($1623 << 24 >> 24 | 0) == 13 | ($1623 << 24 >> 24 | 0) == 32 | ($1623 << 24 >> 24 | 0) == 9 | ($1623 << 24 >> 24 | 0) == 10)) {
          break;
         }
         $1621 = $1621 + 1 | 0; //@line 52362
        }
        HEAP32[$1 >> 2] = $1621; //@line 52364
        $1626 = HEAP8[$1622] | 0; //@line 52365
        if ($1626 << 24 >> 24 == 38) {
         if ((HEAP8[$1621 + 1 + ($cmd + 4) | 0] | 0) == 38) {
          label = 17261; //@line 52373
          break;
         } else {
          $i_0_i_i1182 = $1621;
          $1633 = 38;
         }
        } else {
         $i_0_i_i1182 = $1621;
         $1633 = $1626;
        }
        while (1) {
         if (!(($1633 << 24 >> 24 | 0) == 13 | ($1633 << 24 >> 24 | 0) == 32 | ($1633 << 24 >> 24 | 0) == 9 | ($1633 << 24 >> 24 | 0) == 10)) {
          break;
         }
         $1634 = $i_0_i_i1182 + 1 | 0; //@line 52387
         $i_0_i_i1182 = $1634;
         $1633 = HEAP8[$cmd + 4 + $1634 | 0] | 0;
        }
        HEAP32[$1 >> 2] = $i_0_i_i1182; //@line 52394
        if ((HEAP8[$cmd + 4 + $i_0_i_i1182 | 0] | 0) != 38) {
         $1682 = $i_0_i_i1182; //@line 52398
         break;
        }
        $1639 = $i_0_i_i1182 + 1 | 0; //@line 52401
        HEAP32[$1 >> 2] = $1639; //@line 52402
        if ((_cmd_match_expr_cmp($cmd, $val2_i715, $base) | 0) == 0) {
         label = 15597; //@line 52407
         break L19580;
        }
        while (1) {
         $1644 = HEAP32[$1 >> 2] | 0; //@line 52413
         while (1) {
          $1645 = $cmd + 4 + $1644 | 0; //@line 52416
          $1646 = HEAP8[$1645] | 0; //@line 52417
          if (!(($1646 << 24 >> 24 | 0) == 13 | ($1646 << 24 >> 24 | 0) == 32 | ($1646 << 24 >> 24 | 0) == 9 | ($1646 << 24 >> 24 | 0) == 10)) {
           break;
          }
          $1644 = $1644 + 1 | 0; //@line 52423
         }
         HEAP32[$1 >> 2] = $1644; //@line 52425
         $1649 = HEAP8[$1645] | 0; //@line 52426
         if ($1649 << 24 >> 24 == 61) {
          if ((HEAP8[$1644 + 1 + ($cmd + 4) | 0] | 0) == 61) {
           $op_0_i1193 = 1;
           $storemerge4221_in = $1644;
          } else {
           $i_0_i_i2664 = $1644;
           $1656 = 61;
           label = 15588; //@line 52437
          }
         } else {
          $i_0_i_i2664 = $1644;
          $1656 = $1649;
          label = 15588; //@line 52441
         }
         if ((label | 0) == 15588) {
          while (1) {
           label = 0; //@line 52445
           if (!(($1656 << 24 >> 24 | 0) == 13 | ($1656 << 24 >> 24 | 0) == 32 | ($1656 << 24 >> 24 | 0) == 9 | ($1656 << 24 >> 24 | 0) == 10)) {
            break;
           }
           $1657 = $i_0_i_i2664 + 1 | 0; //@line 52451
           $i_0_i_i2664 = $1657;
           $1656 = HEAP8[$cmd + 4 + $1657 | 0] | 0;
           label = 15588; //@line 52456
          }
          HEAP32[$1 >> 2] = $i_0_i_i2664; //@line 52459
          if ((HEAP8[$cmd + 4 + $i_0_i_i2664 | 0] | 0) != 33) {
           break;
          }
          if ((HEAP8[$i_0_i_i2664 + 1 + ($cmd + 4) | 0] | 0) == 61) {
           $op_0_i1193 = 2;
           $storemerge4221_in = $i_0_i_i2664;
          } else {
           break;
          }
         }
         HEAP32[$1 >> 2] = $storemerge4221_in + 2; //@line 52478
         if ((_cmd_match_expr_cmp($cmd, $val2_i1192, $base) | 0) == 0) {
          label = 15593; //@line 52483
          break L19580;
         }
         if (($op_0_i1193 | 0) == 1) {
          HEAP32[$val2_i715 >> 2] = (HEAP32[$val2_i715 >> 2] | 0) == (HEAP32[$val2_i1192 >> 2] | 0); //@line 52491
          continue;
         } else if (($op_0_i1193 | 0) == 2) {
          HEAP32[$val2_i715 >> 2] = (HEAP32[$val2_i715 >> 2] | 0) != (HEAP32[$val2_i1192 >> 2] | 0); //@line 52499
          continue;
         } else {
          continue;
         }
        }
        HEAP32[$val2_i290 >> 2] = HEAP32[$val2_i715 >> 2] & HEAP32[$val2_i290 >> 2]; //@line 52509
        $1619 = $i_0_i_i2664; //@line 52511
       }
       if ((label | 0) == 17261) {
        label = 0; //@line 52514
        HEAP32[$1 >> 2] = $1619; //@line 52515
        $1682 = $1619; //@line 52517
       }
       HEAP32[$val2_i65 >> 2] = HEAP32[$val2_i290 >> 2] ^ HEAP32[$val2_i65 >> 2]; //@line 52523
       $i_0_i_i_i291 = $1682; //@line 52525
      }
      while (1) {
       $1688 = $1686; //@line 52530
       while (1) {
        $1689 = $cmd + 4 + $1688 | 0; //@line 52533
        $1690 = HEAP8[$1689] | 0; //@line 52534
        if (!(($1690 << 24 >> 24 | 0) == 13 | ($1690 << 24 >> 24 | 0) == 32 | ($1690 << 24 >> 24 | 0) == 9 | ($1690 << 24 >> 24 | 0) == 10)) {
         break;
        }
        $1688 = $1688 + 1 | 0; //@line 52540
       }
       HEAP32[$1 >> 2] = $1688; //@line 52542
       $1693 = HEAP8[$1689] | 0; //@line 52543
       if ($1693 << 24 >> 24 == 124) {
        if ((HEAP8[$1688 + 1 + ($cmd + 4) | 0] | 0) == 124) {
         label = 17262; //@line 52551
         break;
        } else {
         $i_0_i_i311 = $1688;
         $1700 = 124;
        }
       } else {
        $i_0_i_i311 = $1688;
        $1700 = $1693;
       }
       while (1) {
        if (!(($1700 << 24 >> 24 | 0) == 13 | ($1700 << 24 >> 24 | 0) == 32 | ($1700 << 24 >> 24 | 0) == 9 | ($1700 << 24 >> 24 | 0) == 10)) {
         break;
        }
        $1701 = $i_0_i_i311 + 1 | 0; //@line 52565
        $i_0_i_i311 = $1701;
        $1700 = HEAP8[$cmd + 4 + $1701 | 0] | 0;
       }
       HEAP32[$1 >> 2] = $i_0_i_i311; //@line 52572
       if ((HEAP8[$cmd + 4 + $i_0_i_i311 | 0] | 0) != 124) {
        $1927 = $i_0_i_i311; //@line 52576
        break;
       }
       $1706 = $i_0_i_i311 + 1 | 0; //@line 52579
       HEAP32[$1 >> 2] = $1706; //@line 52580
       if ((_cmd_match_expr_cmp($cmd, $val2_i138, $base) | 0) == 0) {
        label = 15694; //@line 52585
        break L19580;
       }
       while (1) {
        $1711 = HEAP32[$1 >> 2] | 0; //@line 52591
        while (1) {
         $1712 = $cmd + 4 + $1711 | 0; //@line 52594
         $1713 = HEAP8[$1712] | 0; //@line 52595
         if (!(($1713 << 24 >> 24 | 0) == 13 | ($1713 << 24 >> 24 | 0) == 32 | ($1713 << 24 >> 24 | 0) == 9 | ($1713 << 24 >> 24 | 0) == 10)) {
          break;
         }
         $1711 = $1711 + 1 | 0; //@line 52601
        }
        HEAP32[$1 >> 2] = $1711; //@line 52603
        $1716 = HEAP8[$1712] | 0; //@line 52604
        if ($1716 << 24 >> 24 == 61) {
         if ((HEAP8[$1711 + 1 + ($cmd + 4) | 0] | 0) == 61) {
          $op_0_i1197 = 1;
          $storemerge4220_in = $1711;
         } else {
          $i_0_i_i2684 = $1711;
          $1723 = 61;
          label = 15615; //@line 52615
         }
        } else {
         $i_0_i_i2684 = $1711;
         $1723 = $1716;
         label = 15615; //@line 52619
        }
        if ((label | 0) == 15615) {
         while (1) {
          label = 0; //@line 52623
          if (!(($1723 << 24 >> 24 | 0) == 13 | ($1723 << 24 >> 24 | 0) == 32 | ($1723 << 24 >> 24 | 0) == 9 | ($1723 << 24 >> 24 | 0) == 10)) {
           break;
          }
          $1724 = $i_0_i_i2684 + 1 | 0; //@line 52629
          $i_0_i_i2684 = $1724;
          $1723 = HEAP8[$cmd + 4 + $1724 | 0] | 0;
          label = 15615; //@line 52634
         }
         HEAP32[$1 >> 2] = $i_0_i_i2684; //@line 52637
         if ((HEAP8[$cmd + 4 + $i_0_i_i2684 | 0] | 0) != 33) {
          $1746 = $i_0_i_i2684; //@line 52641
          break;
         }
         if ((HEAP8[$i_0_i_i2684 + 1 + ($cmd + 4) | 0] | 0) == 61) {
          $op_0_i1197 = 2;
          $storemerge4220_in = $i_0_i_i2684;
         } else {
          $1746 = $i_0_i_i2684; //@line 52651
          break;
         }
        }
        HEAP32[$1 >> 2] = $storemerge4220_in + 2; //@line 52658
        if ((_cmd_match_expr_cmp($cmd, $val2_i1196, $base) | 0) == 0) {
         label = 15620; //@line 52663
         break L19580;
        }
        if (($op_0_i1197 | 0) == 1) {
         HEAP32[$val2_i138 >> 2] = (HEAP32[$val2_i138 >> 2] | 0) == (HEAP32[$val2_i1196 >> 2] | 0); //@line 52671
         continue;
        } else if (($op_0_i1197 | 0) == 2) {
         HEAP32[$val2_i138 >> 2] = (HEAP32[$val2_i138 >> 2] | 0) != (HEAP32[$val2_i1196 >> 2] | 0); //@line 52679
         continue;
        } else {
         continue;
        }
       }
       while (1) {
        $1748 = $1746; //@line 52689
        while (1) {
         $1749 = $cmd + 4 + $1748 | 0; //@line 52692
         $1750 = HEAP8[$1749] | 0; //@line 52693
         if (!(($1750 << 24 >> 24 | 0) == 13 | ($1750 << 24 >> 24 | 0) == 32 | ($1750 << 24 >> 24 | 0) == 9 | ($1750 << 24 >> 24 | 0) == 10)) {
          break;
         }
         $1748 = $1748 + 1 | 0; //@line 52699
        }
        HEAP32[$1 >> 2] = $1748; //@line 52701
        $1753 = HEAP8[$1749] | 0; //@line 52702
        if ($1753 << 24 >> 24 == 38) {
         if ((HEAP8[$1748 + 1 + ($cmd + 4) | 0] | 0) == 38) {
          label = 17263; //@line 52710
          break;
         } else {
          $i_0_i_i1209 = $1748;
          $1760 = 38;
         }
        } else {
         $i_0_i_i1209 = $1748;
         $1760 = $1753;
        }
        while (1) {
         if (!(($1760 << 24 >> 24 | 0) == 13 | ($1760 << 24 >> 24 | 0) == 32 | ($1760 << 24 >> 24 | 0) == 9 | ($1760 << 24 >> 24 | 0) == 10)) {
          break;
         }
         $1761 = $i_0_i_i1209 + 1 | 0; //@line 52724
         $i_0_i_i1209 = $1761;
         $1760 = HEAP8[$cmd + 4 + $1761 | 0] | 0;
        }
        HEAP32[$1 >> 2] = $i_0_i_i1209; //@line 52731
        if ((HEAP8[$cmd + 4 + $i_0_i_i1209 | 0] | 0) != 38) {
         $i_0_i_i_i322 = $i_0_i_i1209; //@line 52735
         break;
        }
        $1766 = $i_0_i_i1209 + 1 | 0; //@line 52738
        HEAP32[$1 >> 2] = $1766; //@line 52739
        if ((_cmd_match_expr_cmp($cmd, $val2_i718, $base) | 0) == 0) {
         label = 15647; //@line 52744
         break L19580;
        }
        while (1) {
         $1771 = HEAP32[$1 >> 2] | 0; //@line 52750
         while (1) {
          $1772 = $cmd + 4 + $1771 | 0; //@line 52753
          $1773 = HEAP8[$1772] | 0; //@line 52754
          if (!(($1773 << 24 >> 24 | 0) == 13 | ($1773 << 24 >> 24 | 0) == 32 | ($1773 << 24 >> 24 | 0) == 9 | ($1773 << 24 >> 24 | 0) == 10)) {
           break;
          }
          $1771 = $1771 + 1 | 0; //@line 52760
         }
         HEAP32[$1 >> 2] = $1771; //@line 52762
         $1776 = HEAP8[$1772] | 0; //@line 52763
         if ($1776 << 24 >> 24 == 61) {
          if ((HEAP8[$1771 + 1 + ($cmd + 4) | 0] | 0) == 61) {
           $op_0_i1220 = 1;
           $storemerge4219_in = $1771;
          } else {
           $i_0_i_i2704 = $1771;
           $1783 = 61;
           label = 15638; //@line 52774
          }
         } else {
          $i_0_i_i2704 = $1771;
          $1783 = $1776;
          label = 15638; //@line 52778
         }
         if ((label | 0) == 15638) {
          while (1) {
           label = 0; //@line 52782
           if (!(($1783 << 24 >> 24 | 0) == 13 | ($1783 << 24 >> 24 | 0) == 32 | ($1783 << 24 >> 24 | 0) == 9 | ($1783 << 24 >> 24 | 0) == 10)) {
            break;
           }
           $1784 = $i_0_i_i2704 + 1 | 0; //@line 52788
           $i_0_i_i2704 = $1784;
           $1783 = HEAP8[$cmd + 4 + $1784 | 0] | 0;
           label = 15638; //@line 52793
          }
          HEAP32[$1 >> 2] = $i_0_i_i2704; //@line 52796
          if ((HEAP8[$cmd + 4 + $i_0_i_i2704 | 0] | 0) != 33) {
           break;
          }
          if ((HEAP8[$i_0_i_i2704 + 1 + ($cmd + 4) | 0] | 0) == 61) {
           $op_0_i1220 = 2;
           $storemerge4219_in = $i_0_i_i2704;
          } else {
           break;
          }
         }
         HEAP32[$1 >> 2] = $storemerge4219_in + 2; //@line 52815
         if ((_cmd_match_expr_cmp($cmd, $val2_i1219, $base) | 0) == 0) {
          label = 15643; //@line 52820
          break L19580;
         }
         if (($op_0_i1220 | 0) == 1) {
          HEAP32[$val2_i718 >> 2] = (HEAP32[$val2_i718 >> 2] | 0) == (HEAP32[$val2_i1219 >> 2] | 0); //@line 52828
          continue;
         } else if (($op_0_i1220 | 0) == 2) {
          HEAP32[$val2_i718 >> 2] = (HEAP32[$val2_i718 >> 2] | 0) != (HEAP32[$val2_i1219 >> 2] | 0); //@line 52836
          continue;
         } else {
          continue;
         }
        }
        HEAP32[$val2_i138 >> 2] = HEAP32[$val2_i718 >> 2] & HEAP32[$val2_i138 >> 2]; //@line 52846
        $1746 = $i_0_i_i2704; //@line 52848
       }
       if ((label | 0) == 17263) {
        label = 0; //@line 52851
        HEAP32[$1 >> 2] = $1746; //@line 52852
        $i_0_i_i_i322 = $1746; //@line 52854
       }
       while (1) {
        $1809 = $cmd + 4 + $i_0_i_i_i322 | 0; //@line 52858
        $1810 = HEAP8[$1809] | 0; //@line 52859
        if (($1810 << 24 >> 24 | 0) == 13 | ($1810 << 24 >> 24 | 0) == 32 | ($1810 << 24 >> 24 | 0) == 9 | ($1810 << 24 >> 24 | 0) == 10) {
         $i_0_i_i_i322 = $i_0_i_i_i322 + 1 | 0; //@line 52863
         continue;
        }
        HEAP32[$1 >> 2] = $i_0_i_i_i322; //@line 52866
        if ((HEAP8[$1809] | 0) != 94) {
         break;
        }
        $1816 = $i_0_i_i_i322 + 1 | 0; //@line 52872
        HEAP32[$1 >> 2] = $1816; //@line 52873
        if ((_cmd_match_expr_cmp($cmd, $val2_i321, $base) | 0) == 0) {
         label = 15692; //@line 52878
         break L19580;
        }
        while (1) {
         $1821 = HEAP32[$1 >> 2] | 0; //@line 52884
         while (1) {
          $1822 = $cmd + 4 + $1821 | 0; //@line 52887
          $1823 = HEAP8[$1822] | 0; //@line 52888
          if (!(($1823 << 24 >> 24 | 0) == 13 | ($1823 << 24 >> 24 | 0) == 32 | ($1823 << 24 >> 24 | 0) == 9 | ($1823 << 24 >> 24 | 0) == 10)) {
           break;
          }
          $1821 = $1821 + 1 | 0; //@line 52894
         }
         HEAP32[$1 >> 2] = $1821; //@line 52896
         $1826 = HEAP8[$1822] | 0; //@line 52897
         if ($1826 << 24 >> 24 == 61) {
          if ((HEAP8[$1821 + 1 + ($cmd + 4) | 0] | 0) == 61) {
           $op_0_i1224 = 1;
           $storemerge4218_in = $1821;
          } else {
           $i_0_i_i2724 = $1821;
           $1833 = 61;
           label = 15658; //@line 52908
          }
         } else {
          $i_0_i_i2724 = $1821;
          $1833 = $1826;
          label = 15658; //@line 52912
         }
         if ((label | 0) == 15658) {
          while (1) {
           label = 0; //@line 52916
           if (!(($1833 << 24 >> 24 | 0) == 13 | ($1833 << 24 >> 24 | 0) == 32 | ($1833 << 24 >> 24 | 0) == 9 | ($1833 << 24 >> 24 | 0) == 10)) {
            break;
           }
           $1834 = $i_0_i_i2724 + 1 | 0; //@line 52922
           $i_0_i_i2724 = $1834;
           $1833 = HEAP8[$cmd + 4 + $1834 | 0] | 0;
           label = 15658; //@line 52927
          }
          HEAP32[$1 >> 2] = $i_0_i_i2724; //@line 52930
          if ((HEAP8[$cmd + 4 + $i_0_i_i2724 | 0] | 0) != 33) {
           $1856 = $i_0_i_i2724; //@line 52934
           break;
          }
          if ((HEAP8[$i_0_i_i2724 + 1 + ($cmd + 4) | 0] | 0) == 61) {
           $op_0_i1224 = 2;
           $storemerge4218_in = $i_0_i_i2724;
          } else {
           $1856 = $i_0_i_i2724; //@line 52944
           break;
          }
         }
         HEAP32[$1 >> 2] = $storemerge4218_in + 2; //@line 52951
         if ((_cmd_match_expr_cmp($cmd, $val2_i1223, $base) | 0) == 0) {
          label = 15663; //@line 52956
          break L19580;
         }
         if (($op_0_i1224 | 0) == 1) {
          HEAP32[$val2_i321 >> 2] = (HEAP32[$val2_i321 >> 2] | 0) == (HEAP32[$val2_i1223 >> 2] | 0); //@line 52964
          continue;
         } else if (($op_0_i1224 | 0) == 2) {
          HEAP32[$val2_i321 >> 2] = (HEAP32[$val2_i321 >> 2] | 0) != (HEAP32[$val2_i1223 >> 2] | 0); //@line 52972
          continue;
         } else {
          continue;
         }
        }
        while (1) {
         $1858 = $1856; //@line 52982
         while (1) {
          $1859 = $cmd + 4 + $1858 | 0; //@line 52985
          $1860 = HEAP8[$1859] | 0; //@line 52986
          if (!(($1860 << 24 >> 24 | 0) == 13 | ($1860 << 24 >> 24 | 0) == 32 | ($1860 << 24 >> 24 | 0) == 9 | ($1860 << 24 >> 24 | 0) == 10)) {
           break;
          }
          $1858 = $1858 + 1 | 0; //@line 52992
         }
         HEAP32[$1 >> 2] = $1858; //@line 52994
         $1863 = HEAP8[$1859] | 0; //@line 52995
         if ($1863 << 24 >> 24 == 38) {
          if ((HEAP8[$1858 + 1 + ($cmd + 4) | 0] | 0) == 38) {
           label = 17264; //@line 53003
           break;
          } else {
           $i_0_i_i1236 = $1858;
           $1870 = 38;
          }
         } else {
          $i_0_i_i1236 = $1858;
          $1870 = $1863;
         }
         while (1) {
          if (!(($1870 << 24 >> 24 | 0) == 13 | ($1870 << 24 >> 24 | 0) == 32 | ($1870 << 24 >> 24 | 0) == 9 | ($1870 << 24 >> 24 | 0) == 10)) {
           break;
          }
          $1871 = $i_0_i_i1236 + 1 | 0; //@line 53017
          $i_0_i_i1236 = $1871;
          $1870 = HEAP8[$cmd + 4 + $1871 | 0] | 0;
         }
         HEAP32[$1 >> 2] = $i_0_i_i1236; //@line 53024
         if ((HEAP8[$cmd + 4 + $i_0_i_i1236 | 0] | 0) != 38) {
          $1919 = $i_0_i_i1236; //@line 53028
          break;
         }
         $1876 = $i_0_i_i1236 + 1 | 0; //@line 53031
         HEAP32[$1 >> 2] = $1876; //@line 53032
         if ((_cmd_match_expr_cmp($cmd, $val2_i721, $base) | 0) == 0) {
          label = 15690; //@line 53037
          break L19580;
         }
         while (1) {
          $1881 = HEAP32[$1 >> 2] | 0; //@line 53043
          while (1) {
           $1882 = $cmd + 4 + $1881 | 0; //@line 53046
           $1883 = HEAP8[$1882] | 0; //@line 53047
           if (!(($1883 << 24 >> 24 | 0) == 13 | ($1883 << 24 >> 24 | 0) == 32 | ($1883 << 24 >> 24 | 0) == 9 | ($1883 << 24 >> 24 | 0) == 10)) {
            break;
           }
           $1881 = $1881 + 1 | 0; //@line 53053
          }
          HEAP32[$1 >> 2] = $1881; //@line 53055
          $1886 = HEAP8[$1882] | 0; //@line 53056
          if ($1886 << 24 >> 24 == 61) {
           if ((HEAP8[$1881 + 1 + ($cmd + 4) | 0] | 0) == 61) {
            $op_0_i1247 = 1;
            $storemerge4217_in = $1881;
           } else {
            $i_0_i_i2744 = $1881;
            $1893 = 61;
            label = 15681; //@line 53067
           }
          } else {
           $i_0_i_i2744 = $1881;
           $1893 = $1886;
           label = 15681; //@line 53071
          }
          if ((label | 0) == 15681) {
           while (1) {
            label = 0; //@line 53075
            if (!(($1893 << 24 >> 24 | 0) == 13 | ($1893 << 24 >> 24 | 0) == 32 | ($1893 << 24 >> 24 | 0) == 9 | ($1893 << 24 >> 24 | 0) == 10)) {
             break;
            }
            $1894 = $i_0_i_i2744 + 1 | 0; //@line 53081
            $i_0_i_i2744 = $1894;
            $1893 = HEAP8[$cmd + 4 + $1894 | 0] | 0;
            label = 15681; //@line 53086
           }
           HEAP32[$1 >> 2] = $i_0_i_i2744; //@line 53089
           if ((HEAP8[$cmd + 4 + $i_0_i_i2744 | 0] | 0) != 33) {
            break;
           }
           if ((HEAP8[$i_0_i_i2744 + 1 + ($cmd + 4) | 0] | 0) == 61) {
            $op_0_i1247 = 2;
            $storemerge4217_in = $i_0_i_i2744;
           } else {
            break;
           }
          }
          HEAP32[$1 >> 2] = $storemerge4217_in + 2; //@line 53108
          if ((_cmd_match_expr_cmp($cmd, $val2_i1246, $base) | 0) == 0) {
           label = 15686; //@line 53113
           break L19580;
          }
          if (($op_0_i1247 | 0) == 1) {
           HEAP32[$val2_i721 >> 2] = (HEAP32[$val2_i721 >> 2] | 0) == (HEAP32[$val2_i1246 >> 2] | 0); //@line 53121
           continue;
          } else if (($op_0_i1247 | 0) == 2) {
           HEAP32[$val2_i721 >> 2] = (HEAP32[$val2_i721 >> 2] | 0) != (HEAP32[$val2_i1246 >> 2] | 0); //@line 53129
           continue;
          } else {
           continue;
          }
         }
         HEAP32[$val2_i321 >> 2] = HEAP32[$val2_i721 >> 2] & HEAP32[$val2_i321 >> 2]; //@line 53139
         $1856 = $i_0_i_i2744; //@line 53141
        }
        if ((label | 0) == 17264) {
         label = 0; //@line 53144
         HEAP32[$1 >> 2] = $1856; //@line 53145
         $1919 = $1856; //@line 53147
        }
        HEAP32[$val2_i138 >> 2] = HEAP32[$val2_i321 >> 2] ^ HEAP32[$val2_i138 >> 2]; //@line 53153
        $i_0_i_i_i322 = $1919; //@line 53155
       }
       HEAP32[$val2_i65 >> 2] = HEAP32[$val2_i138 >> 2] | HEAP32[$val2_i65 >> 2]; //@line 53160
       $1686 = $i_0_i_i_i322; //@line 53162
      }
      if ((label | 0) == 17262) {
       label = 0; //@line 53165
       HEAP32[$1 >> 2] = $1686; //@line 53166
       $1927 = $1686; //@line 53168
      }
      if ((HEAP32[$val2_i >> 2] | 0) == 0) {
       $1934 = 0; //@line 53175
      } else {
       $1934 = (HEAP32[$val2_i65 >> 2] | 0) != 0 | 0; //@line 53180
      }
      HEAP32[$val2_i >> 2] = $1934; //@line 53183
      $i_0_i_i_i66 = $1927; //@line 53185
     }
     if ((HEAP32[$val >> 2] | 0) == 0) {
      $1942 = (HEAP32[$val2_i >> 2] | 0) != 0 | 0; //@line 53195
     } else {
      $1942 = 1; //@line 53197
     }
     HEAP32[$val >> 2] = $1942; //@line 53200
     $996 = HEAP32[$1 >> 2] | 0; //@line 53203
    }
    if ((label | 0) == 15344) {
     HEAP32[$1 >> 2] = $5873; //@line 53206
    } else if ((label | 0) == 15367) {
     HEAP32[$1 >> 2] = $1064; //@line 53210
     label = 15371; //@line 53212
    } else if ((label | 0) == 15387) {
     HEAP32[$1 >> 2] = $1114; //@line 53215
     label = 15416; //@line 53217
    } else if ((label | 0) == 15410) {
     HEAP32[$1 >> 2] = $1174; //@line 53220
     label = 15414; //@line 53222
    } else if ((label | 0) == 15437) {
     HEAP32[$1 >> 2] = $1241; //@line 53225
     label = 15511; //@line 53227
    } else if ((label | 0) == 15460) {
     HEAP32[$1 >> 2] = $1301; //@line 53230
     label = 15464; //@line 53232
    } else if ((label | 0) == 15480) {
     HEAP32[$1 >> 2] = $1351; //@line 53235
     label = 15509; //@line 53237
    } else if ((label | 0) == 15503) {
     HEAP32[$1 >> 2] = $1411; //@line 53240
     label = 15507; //@line 53242
    } else if ((label | 0) == 15527) {
     HEAP32[$1 >> 2] = $5877; //@line 53245
     label = 15696; //@line 53247
    } else if ((label | 0) == 15550) {
     HEAP32[$1 >> 2] = $1529; //@line 53250
     label = 15554; //@line 53252
    } else if ((label | 0) == 15570) {
     HEAP32[$1 >> 2] = $1579; //@line 53255
     label = 15599; //@line 53257
    } else if ((label | 0) == 15593) {
     HEAP32[$1 >> 2] = $1639; //@line 53260
     label = 15597; //@line 53262
    } else if ((label | 0) == 15620) {
     HEAP32[$1 >> 2] = $1706; //@line 53265
     label = 15694; //@line 53267
    } else if ((label | 0) == 15643) {
     HEAP32[$1 >> 2] = $1766; //@line 53270
     label = 15647; //@line 53272
    } else if ((label | 0) == 15663) {
     HEAP32[$1 >> 2] = $1816; //@line 53275
     label = 15692; //@line 53277
    } else if ((label | 0) == 15686) {
     HEAP32[$1 >> 2] = $1876; //@line 53280
     label = 15690; //@line 53282
    } else if ((label | 0) == 15704) {
     while (1) {
      label = 0; //@line 53286
      if (!(($1944 << 24 >> 24 | 0) == 13 | ($1944 << 24 >> 24 | 0) == 32 | ($1944 << 24 >> 24 | 0) == 9 | ($1944 << 24 >> 24 | 0) == 10)) {
       break;
      }
      $1945 = $i_0_i_i18 + 1 | 0; //@line 53292
      $i_0_i_i18 = $1945;
      $1944 = HEAP8[$cmd + 4 + $1945 | 0] | 0;
      label = 15704; //@line 53297
     }
     HEAP32[$1 >> 2] = $i_0_i_i18; //@line 53300
     if ((HEAP8[$cmd + 4 + $i_0_i_i18 | 0] | 0) != 63) {
      $_0 = 1; //@line 53304
      STACKTOP = sp; //@line 53306
      return $_0 | 0; //@line 53307
     }
     $1950 = $i_0_i_i18 + 1 | 0; //@line 53309
     HEAP32[$1 >> 2] = $1950; //@line 53310
     do {
      if ((_cmd_match_expr_cmp($cmd, $val2, $base) | 0) != 0) {
       while (1) {
        $1961 = HEAP32[$1 >> 2] | 0; //@line 53325
        while (1) {
         $1962 = $cmd + 4 + $1961 | 0; //@line 53328
         $1963 = HEAP8[$1962] | 0; //@line 53329
         if (!(($1963 << 24 >> 24 | 0) == 13 | ($1963 << 24 >> 24 | 0) == 32 | ($1963 << 24 >> 24 | 0) == 9 | ($1963 << 24 >> 24 | 0) == 10)) {
          break;
         }
         $1961 = $1961 + 1 | 0; //@line 53335
        }
        HEAP32[$1 >> 2] = $1961; //@line 53337
        $1966 = HEAP8[$1962] | 0; //@line 53338
        if ($1966 << 24 >> 24 == 61) {
         if ((HEAP8[$1961 + 1 + ($cmd + 4) | 0] | 0) == 61) {
          $op_0_i1251 = 1;
          $storemerge4216_in = $1961;
         } else {
          $i_0_i_i2764 = $1961;
          $1973 = 61;
          label = 15713; //@line 53349
         }
        } else {
         $i_0_i_i2764 = $1961;
         $1973 = $1966;
         label = 15713; //@line 53353
        }
        if ((label | 0) == 15713) {
         while (1) {
          label = 0; //@line 53357
          if (!(($1973 << 24 >> 24 | 0) == 13 | ($1973 << 24 >> 24 | 0) == 32 | ($1973 << 24 >> 24 | 0) == 9 | ($1973 << 24 >> 24 | 0) == 10)) {
           break;
          }
          $1974 = $i_0_i_i2764 + 1 | 0; //@line 53363
          $i_0_i_i2764 = $1974;
          $1973 = HEAP8[$cmd + 4 + $1974 | 0] | 0;
          label = 15713; //@line 53368
         }
         HEAP32[$1 >> 2] = $i_0_i_i2764; //@line 53371
         if ((HEAP8[$cmd + 4 + $i_0_i_i2764 | 0] | 0) != 33) {
          break;
         }
         if ((HEAP8[$i_0_i_i2764 + 1 + ($cmd + 4) | 0] | 0) == 61) {
          $op_0_i1251 = 2;
          $storemerge4216_in = $i_0_i_i2764;
         } else {
          break;
         }
        }
        HEAP32[$1 >> 2] = $storemerge4216_in + 2; //@line 53390
        if ((_cmd_match_expr_cmp($cmd, $val2_i1250, $base) | 0) == 0) {
         label = 15719; //@line 53395
         break;
        }
        if (($op_0_i1251 | 0) == 1) {
         HEAP32[$val2 >> 2] = (HEAP32[$val2 >> 2] | 0) == (HEAP32[$val2_i1250 >> 2] | 0); //@line 53403
         continue;
        } else if (($op_0_i1251 | 0) == 2) {
         HEAP32[$val2 >> 2] = (HEAP32[$val2 >> 2] | 0) != (HEAP32[$val2_i1250 >> 2] | 0); //@line 53411
         continue;
        } else {
         continue;
        }
       }
       if ((label | 0) == 15719) {
        HEAP32[$1 >> 2] = $1950; //@line 53419
        break;
       }
       $1997 = $i_0_i_i2764; //@line 53425
       L20141 : while (1) {
        $1999 = $1997; //@line 53429
        while (1) {
         $2000 = $cmd + 4 + $1999 | 0; //@line 53432
         $2001 = HEAP8[$2000] | 0; //@line 53433
         if (!(($2001 << 24 >> 24 | 0) == 13 | ($2001 << 24 >> 24 | 0) == 32 | ($2001 << 24 >> 24 | 0) == 9 | ($2001 << 24 >> 24 | 0) == 10)) {
          break;
         }
         $1999 = $1999 + 1 | 0; //@line 53439
        }
        HEAP32[$1 >> 2] = $1999; //@line 53441
        $2004 = HEAP8[$2000] | 0; //@line 53442
        if ($2004 << 24 >> 24 == 38) {
         if ((HEAP8[$1999 + 1 + ($cmd + 4) | 0] | 0) == 38) {
          label = 17252; //@line 53450
          break;
         } else {
          $i_0_i_i1263 = $1999;
          $2011 = 38;
         }
        } else {
         $i_0_i_i1263 = $1999;
         $2011 = $2004;
        }
        while (1) {
         if (!(($2011 << 24 >> 24 | 0) == 13 | ($2011 << 24 >> 24 | 0) == 32 | ($2011 << 24 >> 24 | 0) == 9 | ($2011 << 24 >> 24 | 0) == 10)) {
          break;
         }
         $2012 = $i_0_i_i1263 + 1 | 0; //@line 53464
         $i_0_i_i1263 = $2012;
         $2011 = HEAP8[$cmd + 4 + $2012 | 0] | 0;
        }
        HEAP32[$1 >> 2] = $i_0_i_i1263; //@line 53471
        if ((HEAP8[$cmd + 4 + $i_0_i_i1263 | 0] | 0) != 38) {
         $2016 = $i_0_i_i1263; //@line 53475
         break;
        }
        $2021 = $i_0_i_i1263 + 1 | 0; //@line 53478
        HEAP32[$1 >> 2] = $2021; //@line 53479
        if ((_cmd_match_expr_cmp($cmd, $val2_i724, $base) | 0) == 0) {
         label = 15747; //@line 53484
         break;
        }
        while (1) {
         $2026 = HEAP32[$1 >> 2] | 0; //@line 53490
         while (1) {
          $2027 = $cmd + 4 + $2026 | 0; //@line 53493
          $2028 = HEAP8[$2027] | 0; //@line 53494
          if (!(($2028 << 24 >> 24 | 0) == 13 | ($2028 << 24 >> 24 | 0) == 32 | ($2028 << 24 >> 24 | 0) == 9 | ($2028 << 24 >> 24 | 0) == 10)) {
           break;
          }
          $2026 = $2026 + 1 | 0; //@line 53500
         }
         HEAP32[$1 >> 2] = $2026; //@line 53502
         $2031 = HEAP8[$2027] | 0; //@line 53503
         if ($2031 << 24 >> 24 == 61) {
          if ((HEAP8[$2026 + 1 + ($cmd + 4) | 0] | 0) == 61) {
           $op_0_i1274 = 1;
           $storemerge4215_in = $2026;
          } else {
           $i_0_i_i2784 = $2026;
           $2038 = 61;
           label = 15738; //@line 53514
          }
         } else {
          $i_0_i_i2784 = $2026;
          $2038 = $2031;
          label = 15738; //@line 53518
         }
         if ((label | 0) == 15738) {
          while (1) {
           label = 0; //@line 53522
           if (!(($2038 << 24 >> 24 | 0) == 13 | ($2038 << 24 >> 24 | 0) == 32 | ($2038 << 24 >> 24 | 0) == 9 | ($2038 << 24 >> 24 | 0) == 10)) {
            break;
           }
           $2039 = $i_0_i_i2784 + 1 | 0; //@line 53528
           $i_0_i_i2784 = $2039;
           $2038 = HEAP8[$cmd + 4 + $2039 | 0] | 0;
           label = 15738; //@line 53533
          }
          HEAP32[$1 >> 2] = $i_0_i_i2784; //@line 53536
          if ((HEAP8[$cmd + 4 + $i_0_i_i2784 | 0] | 0) != 33) {
           break;
          }
          if ((HEAP8[$i_0_i_i2784 + 1 + ($cmd + 4) | 0] | 0) == 61) {
           $op_0_i1274 = 2;
           $storemerge4215_in = $i_0_i_i2784;
          } else {
           break;
          }
         }
         HEAP32[$1 >> 2] = $storemerge4215_in + 2; //@line 53555
         if ((_cmd_match_expr_cmp($cmd, $val2_i1273, $base) | 0) == 0) {
          label = 15743; //@line 53560
          break L20141;
         }
         if (($op_0_i1274 | 0) == 1) {
          HEAP32[$val2_i724 >> 2] = (HEAP32[$val2_i724 >> 2] | 0) == (HEAP32[$val2_i1273 >> 2] | 0); //@line 53568
          continue;
         } else if (($op_0_i1274 | 0) == 2) {
          HEAP32[$val2_i724 >> 2] = (HEAP32[$val2_i724 >> 2] | 0) != (HEAP32[$val2_i1273 >> 2] | 0); //@line 53576
          continue;
         } else {
          continue;
         }
        }
        HEAP32[$val2 >> 2] = HEAP32[$val2_i724 >> 2] & HEAP32[$val2 >> 2]; //@line 53586
        $1997 = $i_0_i_i2784; //@line 53588
       }
       if ((label | 0) == 15743) {
        HEAP32[$1 >> 2] = $2021; //@line 53591
        label = 15747; //@line 53593
       } else if ((label | 0) == 17252) {
        HEAP32[$1 >> 2] = $1997; //@line 53596
        $2016 = $1997; //@line 53598
       }
       if ((label | 0) == 15747) {
        HEAP32[$1 >> 2] = $1950; //@line 53601
        break;
       }
       $i_0_i_i_i334 = $2016; //@line 53610
       L20180 : while (1) {
        $2064 = $cmd + 4 + $i_0_i_i_i334 | 0; //@line 53613
        $2065 = HEAP8[$2064] | 0; //@line 53614
        if (($2065 << 24 >> 24 | 0) == 13 | ($2065 << 24 >> 24 | 0) == 32 | ($2065 << 24 >> 24 | 0) == 9 | ($2065 << 24 >> 24 | 0) == 10) {
         $i_0_i_i_i334 = $i_0_i_i_i334 + 1 | 0; //@line 53618
         continue;
        }
        HEAP32[$1 >> 2] = $i_0_i_i_i334; //@line 53621
        if ((HEAP8[$2064] | 0) != 94) {
         label = 15752; //@line 53625
         break;
        }
        $2078 = $i_0_i_i_i334 + 1 | 0; //@line 53628
        HEAP32[$1 >> 2] = $2078; //@line 53629
        if ((_cmd_match_expr_cmp($cmd, $val2_i333, $base) | 0) == 0) {
         break;
        }
        while (1) {
         $2083 = HEAP32[$1 >> 2] | 0; //@line 53639
         while (1) {
          $2084 = $cmd + 4 + $2083 | 0; //@line 53642
          $2085 = HEAP8[$2084] | 0; //@line 53643
          if (!(($2085 << 24 >> 24 | 0) == 13 | ($2085 << 24 >> 24 | 0) == 32 | ($2085 << 24 >> 24 | 0) == 9 | ($2085 << 24 >> 24 | 0) == 10)) {
           break;
          }
          $2083 = $2083 + 1 | 0; //@line 53649
         }
         HEAP32[$1 >> 2] = $2083; //@line 53651
         $2088 = HEAP8[$2084] | 0; //@line 53652
         if ($2088 << 24 >> 24 == 61) {
          if ((HEAP8[$2083 + 1 + ($cmd + 4) | 0] | 0) == 61) {
           $op_0_i1278 = 1;
           $storemerge4214_in = $2083;
          } else {
           $i_0_i_i2804 = $2083;
           $2095 = 61;
           label = 15759; //@line 53663
          }
         } else {
          $i_0_i_i2804 = $2083;
          $2095 = $2088;
          label = 15759; //@line 53667
         }
         if ((label | 0) == 15759) {
          while (1) {
           label = 0; //@line 53671
           if (!(($2095 << 24 >> 24 | 0) == 13 | ($2095 << 24 >> 24 | 0) == 32 | ($2095 << 24 >> 24 | 0) == 9 | ($2095 << 24 >> 24 | 0) == 10)) {
            break;
           }
           $2096 = $i_0_i_i2804 + 1 | 0; //@line 53677
           $i_0_i_i2804 = $2096;
           $2095 = HEAP8[$cmd + 4 + $2096 | 0] | 0;
           label = 15759; //@line 53682
          }
          HEAP32[$1 >> 2] = $i_0_i_i2804; //@line 53685
          if ((HEAP8[$cmd + 4 + $i_0_i_i2804 | 0] | 0) != 33) {
           $2118 = $i_0_i_i2804; //@line 53689
           break;
          }
          if ((HEAP8[$i_0_i_i2804 + 1 + ($cmd + 4) | 0] | 0) == 61) {
           $op_0_i1278 = 2;
           $storemerge4214_in = $i_0_i_i2804;
          } else {
           $2118 = $i_0_i_i2804; //@line 53699
           break;
          }
         }
         HEAP32[$1 >> 2] = $storemerge4214_in + 2; //@line 53706
         if ((_cmd_match_expr_cmp($cmd, $val2_i1277, $base) | 0) == 0) {
          label = 15764; //@line 53711
          break L20180;
         }
         if (($op_0_i1278 | 0) == 1) {
          HEAP32[$val2_i333 >> 2] = (HEAP32[$val2_i333 >> 2] | 0) == (HEAP32[$val2_i1277 >> 2] | 0); //@line 53719
          continue;
         } else if (($op_0_i1278 | 0) == 2) {
          HEAP32[$val2_i333 >> 2] = (HEAP32[$val2_i333 >> 2] | 0) != (HEAP32[$val2_i1277 >> 2] | 0); //@line 53727
          continue;
         } else {
          continue;
         }
        }
        while (1) {
         $2120 = $2118; //@line 53737
         while (1) {
          $2121 = $cmd + 4 + $2120 | 0; //@line 53740
          $2122 = HEAP8[$2121] | 0; //@line 53741
          if (!(($2122 << 24 >> 24 | 0) == 13 | ($2122 << 24 >> 24 | 0) == 32 | ($2122 << 24 >> 24 | 0) == 9 | ($2122 << 24 >> 24 | 0) == 10)) {
           break;
          }
          $2120 = $2120 + 1 | 0; //@line 53747
         }
         HEAP32[$1 >> 2] = $2120; //@line 53749
         $2125 = HEAP8[$2121] | 0; //@line 53750
         if ($2125 << 24 >> 24 == 38) {
          if ((HEAP8[$2120 + 1 + ($cmd + 4) | 0] | 0) == 38) {
           label = 17251; //@line 53758
           break;
          } else {
           $i_0_i_i1290 = $2120;
           $2132 = 38;
          }
         } else {
          $i_0_i_i1290 = $2120;
          $2132 = $2125;
         }
         while (1) {
          if (!(($2132 << 24 >> 24 | 0) == 13 | ($2132 << 24 >> 24 | 0) == 32 | ($2132 << 24 >> 24 | 0) == 9 | ($2132 << 24 >> 24 | 0) == 10)) {
           break;
          }
          $2133 = $i_0_i_i1290 + 1 | 0; //@line 53772
          $i_0_i_i1290 = $2133;
          $2132 = HEAP8[$cmd + 4 + $2133 | 0] | 0;
         }
         HEAP32[$1 >> 2] = $i_0_i_i1290; //@line 53779
         if ((HEAP8[$cmd + 4 + $i_0_i_i1290 | 0] | 0) != 38) {
          $2181 = $i_0_i_i1290; //@line 53783
          break;
         }
         $2138 = $i_0_i_i1290 + 1 | 0; //@line 53786
         HEAP32[$1 >> 2] = $2138; //@line 53787
         if ((_cmd_match_expr_cmp($cmd, $val2_i727, $base) | 0) == 0) {
          label = 15791; //@line 53792
          break L20180;
         }
         while (1) {
          $2143 = HEAP32[$1 >> 2] | 0; //@line 53798
          while (1) {
           $2144 = $cmd + 4 + $2143 | 0; //@line 53801
           $2145 = HEAP8[$2144] | 0; //@line 53802
           if (!(($2145 << 24 >> 24 | 0) == 13 | ($2145 << 24 >> 24 | 0) == 32 | ($2145 << 24 >> 24 | 0) == 9 | ($2145 << 24 >> 24 | 0) == 10)) {
            break;
           }
           $2143 = $2143 + 1 | 0; //@line 53808
          }
          HEAP32[$1 >> 2] = $2143; //@line 53810
          $2148 = HEAP8[$2144] | 0; //@line 53811
          if ($2148 << 24 >> 24 == 61) {
           if ((HEAP8[$2143 + 1 + ($cmd + 4) | 0] | 0) == 61) {
            $op_0_i1301 = 1;
            $storemerge4213_in = $2143;
           } else {
            $i_0_i_i2824 = $2143;
            $2155 = 61;
            label = 15782; //@line 53822
           }
          } else {
           $i_0_i_i2824 = $2143;
           $2155 = $2148;
           label = 15782; //@line 53826
          }
          if ((label | 0) == 15782) {
           while (1) {
            label = 0; //@line 53830
            if (!(($2155 << 24 >> 24 | 0) == 13 | ($2155 << 24 >> 24 | 0) == 32 | ($2155 << 24 >> 24 | 0) == 9 | ($2155 << 24 >> 24 | 0) == 10)) {
             break;
            }
            $2156 = $i_0_i_i2824 + 1 | 0; //@line 53836
            $i_0_i_i2824 = $2156;
            $2155 = HEAP8[$cmd + 4 + $2156 | 0] | 0;
            label = 15782; //@line 53841
           }
           HEAP32[$1 >> 2] = $i_0_i_i2824; //@line 53844
           if ((HEAP8[$cmd + 4 + $i_0_i_i2824 | 0] | 0) != 33) {
            break;
           }
           if ((HEAP8[$i_0_i_i2824 + 1 + ($cmd + 4) | 0] | 0) == 61) {
            $op_0_i1301 = 2;
            $storemerge4213_in = $i_0_i_i2824;
           } else {
            break;
           }
          }
          HEAP32[$1 >> 2] = $storemerge4213_in + 2; //@line 53863
          if ((_cmd_match_expr_cmp($cmd, $val2_i1300, $base) | 0) == 0) {
           label = 15787; //@line 53868
           break L20180;
          }
          if (($op_0_i1301 | 0) == 1) {
           HEAP32[$val2_i727 >> 2] = (HEAP32[$val2_i727 >> 2] | 0) == (HEAP32[$val2_i1300 >> 2] | 0); //@line 53876
           continue;
          } else if (($op_0_i1301 | 0) == 2) {
           HEAP32[$val2_i727 >> 2] = (HEAP32[$val2_i727 >> 2] | 0) != (HEAP32[$val2_i1300 >> 2] | 0); //@line 53884
           continue;
          } else {
           continue;
          }
         }
         HEAP32[$val2_i333 >> 2] = HEAP32[$val2_i727 >> 2] & HEAP32[$val2_i333 >> 2]; //@line 53894
         $2118 = $i_0_i_i2824; //@line 53896
        }
        if ((label | 0) == 17251) {
         label = 0; //@line 53899
         HEAP32[$1 >> 2] = $2118; //@line 53900
         $2181 = $2118; //@line 53902
        }
        HEAP32[$val2 >> 2] = HEAP32[$val2_i333 >> 2] ^ HEAP32[$val2 >> 2]; //@line 53908
        $i_0_i_i_i334 = $2181; //@line 53910
       }
       if ((label | 0) == 15752) {
        $2185 = $i_0_i_i_i334; //@line 53921
        L20243 : while (1) {
         $2187 = $2185; //@line 53925
         while (1) {
          $2188 = $cmd + 4 + $2187 | 0; //@line 53928
          $2189 = HEAP8[$2188] | 0; //@line 53929
          if (!(($2189 << 24 >> 24 | 0) == 13 | ($2189 << 24 >> 24 | 0) == 32 | ($2189 << 24 >> 24 | 0) == 9 | ($2189 << 24 >> 24 | 0) == 10)) {
           break;
          }
          $2187 = $2187 + 1 | 0; //@line 53935
         }
         HEAP32[$1 >> 2] = $2187; //@line 53937
         $2192 = HEAP8[$2188] | 0; //@line 53938
         if ($2192 << 24 >> 24 == 124) {
          if ((HEAP8[$2187 + 1 + ($cmd + 4) | 0] | 0) == 124) {
           label = 17248; //@line 53946
           break;
          } else {
           $i_0_i_i354 = $2187;
           $2199 = 124;
          }
         } else {
          $i_0_i_i354 = $2187;
          $2199 = $2192;
         }
         while (1) {
          if (!(($2199 << 24 >> 24 | 0) == 13 | ($2199 << 24 >> 24 | 0) == 32 | ($2199 << 24 >> 24 | 0) == 9 | ($2199 << 24 >> 24 | 0) == 10)) {
           break;
          }
          $2200 = $i_0_i_i354 + 1 | 0; //@line 53960
          $i_0_i_i354 = $2200;
          $2199 = HEAP8[$cmd + 4 + $2200 | 0] | 0;
         }
         HEAP32[$1 >> 2] = $i_0_i_i354; //@line 53967
         if ((HEAP8[$cmd + 4 + $i_0_i_i354 | 0] | 0) != 124) {
          $2204 = $i_0_i_i354; //@line 53971
          label = 15803; //@line 53972
          break;
         }
         $2221 = $i_0_i_i354 + 1 | 0; //@line 53975
         HEAP32[$1 >> 2] = $2221; //@line 53976
         if ((_cmd_match_expr_cmp($cmd, $val2_i141, $base) | 0) == 0) {
          break;
         }
         while (1) {
          $2226 = HEAP32[$1 >> 2] | 0; //@line 53986
          while (1) {
           $2227 = $cmd + 4 + $2226 | 0; //@line 53989
           $2228 = HEAP8[$2227] | 0; //@line 53990
           if (!(($2228 << 24 >> 24 | 0) == 13 | ($2228 << 24 >> 24 | 0) == 32 | ($2228 << 24 >> 24 | 0) == 9 | ($2228 << 24 >> 24 | 0) == 10)) {
            break;
           }
           $2226 = $2226 + 1 | 0; //@line 53996
          }
          HEAP32[$1 >> 2] = $2226; //@line 53998
          $2231 = HEAP8[$2227] | 0; //@line 53999
          if ($2231 << 24 >> 24 == 61) {
           if ((HEAP8[$2226 + 1 + ($cmd + 4) | 0] | 0) == 61) {
            $op_0_i1305 = 1;
            $storemerge4212_in = $2226;
           } else {
            $i_0_i_i2844 = $2226;
            $2238 = 61;
            label = 15810; //@line 54010
           }
          } else {
           $i_0_i_i2844 = $2226;
           $2238 = $2231;
           label = 15810; //@line 54014
          }
          if ((label | 0) == 15810) {
           while (1) {
            label = 0; //@line 54018
            if (!(($2238 << 24 >> 24 | 0) == 13 | ($2238 << 24 >> 24 | 0) == 32 | ($2238 << 24 >> 24 | 0) == 9 | ($2238 << 24 >> 24 | 0) == 10)) {
             break;
            }
            $2239 = $i_0_i_i2844 + 1 | 0; //@line 54024
            $i_0_i_i2844 = $2239;
            $2238 = HEAP8[$cmd + 4 + $2239 | 0] | 0;
            label = 15810; //@line 54029
           }
           HEAP32[$1 >> 2] = $i_0_i_i2844; //@line 54032
           if ((HEAP8[$cmd + 4 + $i_0_i_i2844 | 0] | 0) != 33) {
            $2261 = $i_0_i_i2844; //@line 54036
            break;
           }
           if ((HEAP8[$i_0_i_i2844 + 1 + ($cmd + 4) | 0] | 0) == 61) {
            $op_0_i1305 = 2;
            $storemerge4212_in = $i_0_i_i2844;
           } else {
            $2261 = $i_0_i_i2844; //@line 54046
            break;
           }
          }
          HEAP32[$1 >> 2] = $storemerge4212_in + 2; //@line 54053
          if ((_cmd_match_expr_cmp($cmd, $val2_i1304, $base) | 0) == 0) {
           label = 15815; //@line 54058
           break L20243;
          }
          if (($op_0_i1305 | 0) == 1) {
           HEAP32[$val2_i141 >> 2] = (HEAP32[$val2_i141 >> 2] | 0) == (HEAP32[$val2_i1304 >> 2] | 0); //@line 54066
           continue;
          } else if (($op_0_i1305 | 0) == 2) {
           HEAP32[$val2_i141 >> 2] = (HEAP32[$val2_i141 >> 2] | 0) != (HEAP32[$val2_i1304 >> 2] | 0); //@line 54074
           continue;
          } else {
           continue;
          }
         }
         while (1) {
          $2263 = $2261; //@line 54084
          while (1) {
           $2264 = $cmd + 4 + $2263 | 0; //@line 54087
           $2265 = HEAP8[$2264] | 0; //@line 54088
           if (!(($2265 << 24 >> 24 | 0) == 13 | ($2265 << 24 >> 24 | 0) == 32 | ($2265 << 24 >> 24 | 0) == 9 | ($2265 << 24 >> 24 | 0) == 10)) {
            break;
           }
           $2263 = $2263 + 1 | 0; //@line 54094
          }
          HEAP32[$1 >> 2] = $2263; //@line 54096
          $2268 = HEAP8[$2264] | 0; //@line 54097
          if ($2268 << 24 >> 24 == 38) {
           if ((HEAP8[$2263 + 1 + ($cmd + 4) | 0] | 0) == 38) {
            label = 17249; //@line 54105
            break;
           } else {
            $i_0_i_i1317 = $2263;
            $2275 = 38;
           }
          } else {
           $i_0_i_i1317 = $2263;
           $2275 = $2268;
          }
          while (1) {
           if (!(($2275 << 24 >> 24 | 0) == 13 | ($2275 << 24 >> 24 | 0) == 32 | ($2275 << 24 >> 24 | 0) == 9 | ($2275 << 24 >> 24 | 0) == 10)) {
            break;
           }
           $2276 = $i_0_i_i1317 + 1 | 0; //@line 54119
           $i_0_i_i1317 = $2276;
           $2275 = HEAP8[$cmd + 4 + $2276 | 0] | 0;
          }
          HEAP32[$1 >> 2] = $i_0_i_i1317; //@line 54126
          if ((HEAP8[$cmd + 4 + $i_0_i_i1317 | 0] | 0) != 38) {
           $i_0_i_i_i365 = $i_0_i_i1317; //@line 54130
           break;
          }
          $2281 = $i_0_i_i1317 + 1 | 0; //@line 54133
          HEAP32[$1 >> 2] = $2281; //@line 54134
          if ((_cmd_match_expr_cmp($cmd, $val2_i730, $base) | 0) == 0) {
           label = 15842; //@line 54139
           break L20243;
          }
          while (1) {
           $2286 = HEAP32[$1 >> 2] | 0; //@line 54145
           while (1) {
            $2287 = $cmd + 4 + $2286 | 0; //@line 54148
            $2288 = HEAP8[$2287] | 0; //@line 54149
            if (!(($2288 << 24 >> 24 | 0) == 13 | ($2288 << 24 >> 24 | 0) == 32 | ($2288 << 24 >> 24 | 0) == 9 | ($2288 << 24 >> 24 | 0) == 10)) {
             break;
            }
            $2286 = $2286 + 1 | 0; //@line 54155
           }
           HEAP32[$1 >> 2] = $2286; //@line 54157
           $2291 = HEAP8[$2287] | 0; //@line 54158
           if ($2291 << 24 >> 24 == 61) {
            if ((HEAP8[$2286 + 1 + ($cmd + 4) | 0] | 0) == 61) {
             $op_0_i1328 = 1;
             $storemerge4211_in = $2286;
            } else {
             $i_0_i_i2864 = $2286;
             $2298 = 61;
             label = 15833; //@line 54169
            }
           } else {
            $i_0_i_i2864 = $2286;
            $2298 = $2291;
            label = 15833; //@line 54173
           }
           if ((label | 0) == 15833) {
            while (1) {
             label = 0; //@line 54177
             if (!(($2298 << 24 >> 24 | 0) == 13 | ($2298 << 24 >> 24 | 0) == 32 | ($2298 << 24 >> 24 | 0) == 9 | ($2298 << 24 >> 24 | 0) == 10)) {
              break;
             }
             $2299 = $i_0_i_i2864 + 1 | 0; //@line 54183
             $i_0_i_i2864 = $2299;
             $2298 = HEAP8[$cmd + 4 + $2299 | 0] | 0;
             label = 15833; //@line 54188
            }
            HEAP32[$1 >> 2] = $i_0_i_i2864; //@line 54191
            if ((HEAP8[$cmd + 4 + $i_0_i_i2864 | 0] | 0) != 33) {
             break;
            }
            if ((HEAP8[$i_0_i_i2864 + 1 + ($cmd + 4) | 0] | 0) == 61) {
             $op_0_i1328 = 2;
             $storemerge4211_in = $i_0_i_i2864;
            } else {
             break;
            }
           }
           HEAP32[$1 >> 2] = $storemerge4211_in + 2; //@line 54210
           if ((_cmd_match_expr_cmp($cmd, $val2_i1327, $base) | 0) == 0) {
            label = 15838; //@line 54215
            break L20243;
           }
           if (($op_0_i1328 | 0) == 1) {
            HEAP32[$val2_i730 >> 2] = (HEAP32[$val2_i730 >> 2] | 0) == (HEAP32[$val2_i1327 >> 2] | 0); //@line 54223
            continue;
           } else if (($op_0_i1328 | 0) == 2) {
            HEAP32[$val2_i730 >> 2] = (HEAP32[$val2_i730 >> 2] | 0) != (HEAP32[$val2_i1327 >> 2] | 0); //@line 54231
            continue;
           } else {
            continue;
           }
          }
          HEAP32[$val2_i141 >> 2] = HEAP32[$val2_i730 >> 2] & HEAP32[$val2_i141 >> 2]; //@line 54241
          $2261 = $i_0_i_i2864; //@line 54243
         }
         if ((label | 0) == 17249) {
          label = 0; //@line 54246
          HEAP32[$1 >> 2] = $2261; //@line 54247
          $i_0_i_i_i365 = $2261; //@line 54249
         }
         while (1) {
          $2324 = $cmd + 4 + $i_0_i_i_i365 | 0; //@line 54253
          $2325 = HEAP8[$2324] | 0; //@line 54254
          if (($2325 << 24 >> 24 | 0) == 13 | ($2325 << 24 >> 24 | 0) == 32 | ($2325 << 24 >> 24 | 0) == 9 | ($2325 << 24 >> 24 | 0) == 10) {
           $i_0_i_i_i365 = $i_0_i_i_i365 + 1 | 0; //@line 54258
           continue;
          }
          HEAP32[$1 >> 2] = $i_0_i_i_i365; //@line 54261
          if ((HEAP8[$2324] | 0) != 94) {
           break;
          }
          $2331 = $i_0_i_i_i365 + 1 | 0; //@line 54267
          HEAP32[$1 >> 2] = $2331; //@line 54268
          if ((_cmd_match_expr_cmp($cmd, $val2_i364, $base) | 0) == 0) {
           label = 15887; //@line 54273
           break L20243;
          }
          while (1) {
           $2336 = HEAP32[$1 >> 2] | 0; //@line 54279
           while (1) {
            $2337 = $cmd + 4 + $2336 | 0; //@line 54282
            $2338 = HEAP8[$2337] | 0; //@line 54283
            if (!(($2338 << 24 >> 24 | 0) == 13 | ($2338 << 24 >> 24 | 0) == 32 | ($2338 << 24 >> 24 | 0) == 9 | ($2338 << 24 >> 24 | 0) == 10)) {
             break;
            }
            $2336 = $2336 + 1 | 0; //@line 54289
           }
           HEAP32[$1 >> 2] = $2336; //@line 54291
           $2341 = HEAP8[$2337] | 0; //@line 54292
           if ($2341 << 24 >> 24 == 61) {
            if ((HEAP8[$2336 + 1 + ($cmd + 4) | 0] | 0) == 61) {
             $op_0_i1332 = 1;
             $storemerge4210_in = $2336;
            } else {
             $i_0_i_i2884 = $2336;
             $2348 = 61;
             label = 15853; //@line 54303
            }
           } else {
            $i_0_i_i2884 = $2336;
            $2348 = $2341;
            label = 15853; //@line 54307
           }
           if ((label | 0) == 15853) {
            while (1) {
             label = 0; //@line 54311
             if (!(($2348 << 24 >> 24 | 0) == 13 | ($2348 << 24 >> 24 | 0) == 32 | ($2348 << 24 >> 24 | 0) == 9 | ($2348 << 24 >> 24 | 0) == 10)) {
              break;
             }
             $2349 = $i_0_i_i2884 + 1 | 0; //@line 54317
             $i_0_i_i2884 = $2349;
             $2348 = HEAP8[$cmd + 4 + $2349 | 0] | 0;
             label = 15853; //@line 54322
            }
            HEAP32[$1 >> 2] = $i_0_i_i2884; //@line 54325
            if ((HEAP8[$cmd + 4 + $i_0_i_i2884 | 0] | 0) != 33) {
             $2371 = $i_0_i_i2884; //@line 54329
             break;
            }
            if ((HEAP8[$i_0_i_i2884 + 1 + ($cmd + 4) | 0] | 0) == 61) {
             $op_0_i1332 = 2;
             $storemerge4210_in = $i_0_i_i2884;
            } else {
             $2371 = $i_0_i_i2884; //@line 54339
             break;
            }
           }
           HEAP32[$1 >> 2] = $storemerge4210_in + 2; //@line 54346
           if ((_cmd_match_expr_cmp($cmd, $val2_i1331, $base) | 0) == 0) {
            label = 15858; //@line 54351
            break L20243;
           }
           if (($op_0_i1332 | 0) == 1) {
            HEAP32[$val2_i364 >> 2] = (HEAP32[$val2_i364 >> 2] | 0) == (HEAP32[$val2_i1331 >> 2] | 0); //@line 54359
            continue;
           } else if (($op_0_i1332 | 0) == 2) {
            HEAP32[$val2_i364 >> 2] = (HEAP32[$val2_i364 >> 2] | 0) != (HEAP32[$val2_i1331 >> 2] | 0); //@line 54367
            continue;
           } else {
            continue;
           }
          }
          while (1) {
           $2373 = $2371; //@line 54377
           while (1) {
            $2374 = $cmd + 4 + $2373 | 0; //@line 54380
            $2375 = HEAP8[$2374] | 0; //@line 54381
            if (!(($2375 << 24 >> 24 | 0) == 13 | ($2375 << 24 >> 24 | 0) == 32 | ($2375 << 24 >> 24 | 0) == 9 | ($2375 << 24 >> 24 | 0) == 10)) {
             break;
            }
            $2373 = $2373 + 1 | 0; //@line 54387
           }
           HEAP32[$1 >> 2] = $2373; //@line 54389
           $2378 = HEAP8[$2374] | 0; //@line 54390
           if ($2378 << 24 >> 24 == 38) {
            if ((HEAP8[$2373 + 1 + ($cmd + 4) | 0] | 0) == 38) {
             label = 17250; //@line 54398
             break;
            } else {
             $i_0_i_i1344 = $2373;
             $2385 = 38;
            }
           } else {
            $i_0_i_i1344 = $2373;
            $2385 = $2378;
           }
           while (1) {
            if (!(($2385 << 24 >> 24 | 0) == 13 | ($2385 << 24 >> 24 | 0) == 32 | ($2385 << 24 >> 24 | 0) == 9 | ($2385 << 24 >> 24 | 0) == 10)) {
             break;
            }
            $2386 = $i_0_i_i1344 + 1 | 0; //@line 54412
            $i_0_i_i1344 = $2386;
            $2385 = HEAP8[$cmd + 4 + $2386 | 0] | 0;
           }
           HEAP32[$1 >> 2] = $i_0_i_i1344; //@line 54419
           if ((HEAP8[$cmd + 4 + $i_0_i_i1344 | 0] | 0) != 38) {
            $2434 = $i_0_i_i1344; //@line 54423
            break;
           }
           $2391 = $i_0_i_i1344 + 1 | 0; //@line 54426
           HEAP32[$1 >> 2] = $2391; //@line 54427
           if ((_cmd_match_expr_cmp($cmd, $val2_i733, $base) | 0) == 0) {
            label = 15885; //@line 54432
            break L20243;
           }
           while (1) {
            $2396 = HEAP32[$1 >> 2] | 0; //@line 54438
            while (1) {
             $2397 = $cmd + 4 + $2396 | 0; //@line 54441
             $2398 = HEAP8[$2397] | 0; //@line 54442
             if (!(($2398 << 24 >> 24 | 0) == 13 | ($2398 << 24 >> 24 | 0) == 32 | ($2398 << 24 >> 24 | 0) == 9 | ($2398 << 24 >> 24 | 0) == 10)) {
              break;
             }
             $2396 = $2396 + 1 | 0; //@line 54448
            }
            HEAP32[$1 >> 2] = $2396; //@line 54450
            $2401 = HEAP8[$2397] | 0; //@line 54451
            if ($2401 << 24 >> 24 == 61) {
             if ((HEAP8[$2396 + 1 + ($cmd + 4) | 0] | 0) == 61) {
              $op_0_i1355 = 1;
              $storemerge4209_in = $2396;
             } else {
              $i_0_i_i2904 = $2396;
              $2408 = 61;
              label = 15876; //@line 54462
             }
            } else {
             $i_0_i_i2904 = $2396;
             $2408 = $2401;
             label = 15876; //@line 54466
            }
            if ((label | 0) == 15876) {
             while (1) {
              label = 0; //@line 54470
              if (!(($2408 << 24 >> 24 | 0) == 13 | ($2408 << 24 >> 24 | 0) == 32 | ($2408 << 24 >> 24 | 0) == 9 | ($2408 << 24 >> 24 | 0) == 10)) {
               break;
              }
              $2409 = $i_0_i_i2904 + 1 | 0; //@line 54476
              $i_0_i_i2904 = $2409;
              $2408 = HEAP8[$cmd + 4 + $2409 | 0] | 0;
              label = 15876; //@line 54481
             }
             HEAP32[$1 >> 2] = $i_0_i_i2904; //@line 54484
             if ((HEAP8[$cmd + 4 + $i_0_i_i2904 | 0] | 0) != 33) {
              break;
             }
             if ((HEAP8[$i_0_i_i2904 + 1 + ($cmd + 4) | 0] | 0) == 61) {
              $op_0_i1355 = 2;
              $storemerge4209_in = $i_0_i_i2904;
             } else {
              break;
             }
            }
            HEAP32[$1 >> 2] = $storemerge4209_in + 2; //@line 54503
            if ((_cmd_match_expr_cmp($cmd, $val2_i1354, $base) | 0) == 0) {
             label = 15881; //@line 54508
             break L20243;
            }
            if (($op_0_i1355 | 0) == 1) {
             HEAP32[$val2_i733 >> 2] = (HEAP32[$val2_i733 >> 2] | 0) == (HEAP32[$val2_i1354 >> 2] | 0); //@line 54516
             continue;
            } else if (($op_0_i1355 | 0) == 2) {
             HEAP32[$val2_i733 >> 2] = (HEAP32[$val2_i733 >> 2] | 0) != (HEAP32[$val2_i1354 >> 2] | 0); //@line 54524
             continue;
            } else {
             continue;
            }
           }
           HEAP32[$val2_i364 >> 2] = HEAP32[$val2_i733 >> 2] & HEAP32[$val2_i364 >> 2]; //@line 54534
           $2371 = $i_0_i_i2904; //@line 54536
          }
          if ((label | 0) == 17250) {
           label = 0; //@line 54539
           HEAP32[$1 >> 2] = $2371; //@line 54540
           $2434 = $2371; //@line 54542
          }
          HEAP32[$val2_i141 >> 2] = HEAP32[$val2_i364 >> 2] ^ HEAP32[$val2_i141 >> 2]; //@line 54548
          $i_0_i_i_i365 = $2434; //@line 54550
         }
         HEAP32[$val2 >> 2] = HEAP32[$val2_i141 >> 2] | HEAP32[$val2 >> 2]; //@line 54555
         $2185 = $i_0_i_i_i365; //@line 54557
        }
        if ((label | 0) == 15815) {
         HEAP32[$1 >> 2] = $2221; //@line 54560
        } else if ((label | 0) == 15838) {
         HEAP32[$1 >> 2] = $2281; //@line 54564
         label = 15842; //@line 54566
        } else if ((label | 0) == 15858) {
         HEAP32[$1 >> 2] = $2331; //@line 54569
         label = 15887; //@line 54571
        } else if ((label | 0) == 15881) {
         HEAP32[$1 >> 2] = $2391; //@line 54574
         label = 15885; //@line 54576
        } else if ((label | 0) == 17248) {
         HEAP32[$1 >> 2] = $2185; //@line 54579
         $2204 = $2185; //@line 54581
         label = 15803; //@line 54582
        }
        if ((label | 0) == 15803) {
         $i_0_i_i_i79 = $2204; //@line 54602
         L20380 : while (1) {
          $2442 = $cmd + 4 + $i_0_i_i_i79 | 0; //@line 54605
          $2443 = HEAP8[$2442] | 0; //@line 54606
          if (($2443 << 24 >> 24 | 0) == 13 | ($2443 << 24 >> 24 | 0) == 32 | ($2443 << 24 >> 24 | 0) == 9 | ($2443 << 24 >> 24 | 0) == 10) {
           $i_0_i_i_i79 = $i_0_i_i_i79 + 1 | 0; //@line 54610
           continue;
          }
          HEAP32[$1 >> 2] = $i_0_i_i_i79; //@line 54613
          if ((HEAP8[$2442] | 0) != 38) {
           label = 15894; //@line 54617
           break;
          }
          if ((HEAP8[$i_0_i_i_i79 + 1 + ($cmd + 4) | 0] | 0) != 38) {
           label = 15894; //@line 54625
           break;
          }
          $5869 = $i_0_i_i_i79 + 2 | 0; //@line 54628
          HEAP32[$1 >> 2] = $5869; //@line 54629
          if ((_cmd_match_expr_cmp($cmd, $val2_i78, $base) | 0) == 0) {
           break;
          }
          while (1) {
           $2485 = HEAP32[$1 >> 2] | 0; //@line 54639
           while (1) {
            $2486 = $cmd + 4 + $2485 | 0; //@line 54642
            $2487 = HEAP8[$2486] | 0; //@line 54643
            if (!(($2487 << 24 >> 24 | 0) == 13 | ($2487 << 24 >> 24 | 0) == 32 | ($2487 << 24 >> 24 | 0) == 9 | ($2487 << 24 >> 24 | 0) == 10)) {
             break;
            }
            $2485 = $2485 + 1 | 0; //@line 54649
           }
           HEAP32[$1 >> 2] = $2485; //@line 54651
           $2490 = HEAP8[$2486] | 0; //@line 54652
           if ($2490 << 24 >> 24 == 61) {
            if ((HEAP8[$2485 + 1 + ($cmd + 4) | 0] | 0) == 61) {
             $op_0_i1359 = 1;
             $storemerge4208_in = $2485;
            } else {
             $i_0_i_i2924 = $2485;
             $2497 = 61;
             label = 15901; //@line 54663
            }
           } else {
            $i_0_i_i2924 = $2485;
            $2497 = $2490;
            label = 15901; //@line 54667
           }
           if ((label | 0) == 15901) {
            while (1) {
             label = 0; //@line 54671
             if (!(($2497 << 24 >> 24 | 0) == 13 | ($2497 << 24 >> 24 | 0) == 32 | ($2497 << 24 >> 24 | 0) == 9 | ($2497 << 24 >> 24 | 0) == 10)) {
              break;
             }
             $2498 = $i_0_i_i2924 + 1 | 0; //@line 54677
             $i_0_i_i2924 = $2498;
             $2497 = HEAP8[$cmd + 4 + $2498 | 0] | 0;
             label = 15901; //@line 54682
            }
            HEAP32[$1 >> 2] = $i_0_i_i2924; //@line 54685
            if ((HEAP8[$cmd + 4 + $i_0_i_i2924 | 0] | 0) != 33) {
             $2520 = $i_0_i_i2924; //@line 54689
             break;
            }
            if ((HEAP8[$i_0_i_i2924 + 1 + ($cmd + 4) | 0] | 0) == 61) {
             $op_0_i1359 = 2;
             $storemerge4208_in = $i_0_i_i2924;
            } else {
             $2520 = $i_0_i_i2924; //@line 54699
             break;
            }
           }
           HEAP32[$1 >> 2] = $storemerge4208_in + 2; //@line 54706
           if ((_cmd_match_expr_cmp($cmd, $val2_i1358, $base) | 0) == 0) {
            label = 15906; //@line 54711
            break L20380;
           }
           if (($op_0_i1359 | 0) == 1) {
            HEAP32[$val2_i78 >> 2] = (HEAP32[$val2_i78 >> 2] | 0) == (HEAP32[$val2_i1358 >> 2] | 0); //@line 54719
            continue;
           } else if (($op_0_i1359 | 0) == 2) {
            HEAP32[$val2_i78 >> 2] = (HEAP32[$val2_i78 >> 2] | 0) != (HEAP32[$val2_i1358 >> 2] | 0); //@line 54727
            continue;
           } else {
            continue;
           }
          }
          while (1) {
           $2522 = $2520; //@line 54737
           while (1) {
            $2523 = $cmd + 4 + $2522 | 0; //@line 54740
            $2524 = HEAP8[$2523] | 0; //@line 54741
            if (!(($2524 << 24 >> 24 | 0) == 13 | ($2524 << 24 >> 24 | 0) == 32 | ($2524 << 24 >> 24 | 0) == 9 | ($2524 << 24 >> 24 | 0) == 10)) {
             break;
            }
            $2522 = $2522 + 1 | 0; //@line 54747
           }
           HEAP32[$1 >> 2] = $2522; //@line 54749
           $2527 = HEAP8[$2523] | 0; //@line 54750
           if ($2527 << 24 >> 24 == 38) {
            if ((HEAP8[$2522 + 1 + ($cmd + 4) | 0] | 0) == 38) {
             label = 17243; //@line 54758
             break;
            } else {
             $i_0_i_i1371 = $2522;
             $2534 = 38;
            }
           } else {
            $i_0_i_i1371 = $2522;
            $2534 = $2527;
           }
           while (1) {
            if (!(($2534 << 24 >> 24 | 0) == 13 | ($2534 << 24 >> 24 | 0) == 32 | ($2534 << 24 >> 24 | 0) == 9 | ($2534 << 24 >> 24 | 0) == 10)) {
             break;
            }
            $2535 = $i_0_i_i1371 + 1 | 0; //@line 54772
            $i_0_i_i1371 = $2535;
            $2534 = HEAP8[$cmd + 4 + $2535 | 0] | 0;
           }
           HEAP32[$1 >> 2] = $i_0_i_i1371; //@line 54779
           if ((HEAP8[$cmd + 4 + $i_0_i_i1371 | 0] | 0) != 38) {
            $i_0_i_i_i377 = $i_0_i_i1371; //@line 54783
            break;
           }
           $2540 = $i_0_i_i1371 + 1 | 0; //@line 54786
           HEAP32[$1 >> 2] = $2540; //@line 54787
           if ((_cmd_match_expr_cmp($cmd, $val2_i736, $base) | 0) == 0) {
            label = 15933; //@line 54792
            break L20380;
           }
           while (1) {
            $2545 = HEAP32[$1 >> 2] | 0; //@line 54798
            while (1) {
             $2546 = $cmd + 4 + $2545 | 0; //@line 54801
             $2547 = HEAP8[$2546] | 0; //@line 54802
             if (!(($2547 << 24 >> 24 | 0) == 13 | ($2547 << 24 >> 24 | 0) == 32 | ($2547 << 24 >> 24 | 0) == 9 | ($2547 << 24 >> 24 | 0) == 10)) {
              break;
             }
             $2545 = $2545 + 1 | 0; //@line 54808
            }
            HEAP32[$1 >> 2] = $2545; //@line 54810
            $2550 = HEAP8[$2546] | 0; //@line 54811
            if ($2550 << 24 >> 24 == 61) {
             if ((HEAP8[$2545 + 1 + ($cmd + 4) | 0] | 0) == 61) {
              $op_0_i1382 = 1;
              $storemerge4207_in = $2545;
             } else {
              $i_0_i_i2944 = $2545;
              $2557 = 61;
              label = 15924; //@line 54822
             }
            } else {
             $i_0_i_i2944 = $2545;
             $2557 = $2550;
             label = 15924; //@line 54826
            }
            if ((label | 0) == 15924) {
             while (1) {
              label = 0; //@line 54830
              if (!(($2557 << 24 >> 24 | 0) == 13 | ($2557 << 24 >> 24 | 0) == 32 | ($2557 << 24 >> 24 | 0) == 9 | ($2557 << 24 >> 24 | 0) == 10)) {
               break;
              }
              $2558 = $i_0_i_i2944 + 1 | 0; //@line 54836
              $i_0_i_i2944 = $2558;
              $2557 = HEAP8[$cmd + 4 + $2558 | 0] | 0;
              label = 15924; //@line 54841
             }
             HEAP32[$1 >> 2] = $i_0_i_i2944; //@line 54844
             if ((HEAP8[$cmd + 4 + $i_0_i_i2944 | 0] | 0) != 33) {
              break;
             }
             if ((HEAP8[$i_0_i_i2944 + 1 + ($cmd + 4) | 0] | 0) == 61) {
              $op_0_i1382 = 2;
              $storemerge4207_in = $i_0_i_i2944;
             } else {
              break;
             }
            }
            HEAP32[$1 >> 2] = $storemerge4207_in + 2; //@line 54863
            if ((_cmd_match_expr_cmp($cmd, $val2_i1381, $base) | 0) == 0) {
             label = 15929; //@line 54868
             break L20380;
            }
            if (($op_0_i1382 | 0) == 1) {
             HEAP32[$val2_i736 >> 2] = (HEAP32[$val2_i736 >> 2] | 0) == (HEAP32[$val2_i1381 >> 2] | 0); //@line 54876
             continue;
            } else if (($op_0_i1382 | 0) == 2) {
             HEAP32[$val2_i736 >> 2] = (HEAP32[$val2_i736 >> 2] | 0) != (HEAP32[$val2_i1381 >> 2] | 0); //@line 54884
             continue;
            } else {
             continue;
            }
           }
           HEAP32[$val2_i78 >> 2] = HEAP32[$val2_i736 >> 2] & HEAP32[$val2_i78 >> 2]; //@line 54894
           $2520 = $i_0_i_i2944; //@line 54896
          }
          if ((label | 0) == 17243) {
           label = 0; //@line 54899
           HEAP32[$1 >> 2] = $2520; //@line 54900
           $i_0_i_i_i377 = $2520; //@line 54902
          }
          while (1) {
           $2583 = $cmd + 4 + $i_0_i_i_i377 | 0; //@line 54906
           $2584 = HEAP8[$2583] | 0; //@line 54907
           if (($2584 << 24 >> 24 | 0) == 13 | ($2584 << 24 >> 24 | 0) == 32 | ($2584 << 24 >> 24 | 0) == 9 | ($2584 << 24 >> 24 | 0) == 10) {
            $i_0_i_i_i377 = $i_0_i_i_i377 + 1 | 0; //@line 54911
            continue;
           }
           HEAP32[$1 >> 2] = $i_0_i_i_i377; //@line 54914
           if ((HEAP8[$2583] | 0) != 94) {
            $2697 = $i_0_i_i_i377; //@line 54918
            break;
           }
           $2590 = $i_0_i_i_i377 + 1 | 0; //@line 54921
           HEAP32[$1 >> 2] = $2590; //@line 54922
           if ((_cmd_match_expr_cmp($cmd, $val2_i376, $base) | 0) == 0) {
            label = 15978; //@line 54927
            break L20380;
           }
           while (1) {
            $2595 = HEAP32[$1 >> 2] | 0; //@line 54933
            while (1) {
             $2596 = $cmd + 4 + $2595 | 0; //@line 54936
             $2597 = HEAP8[$2596] | 0; //@line 54937
             if (!(($2597 << 24 >> 24 | 0) == 13 | ($2597 << 24 >> 24 | 0) == 32 | ($2597 << 24 >> 24 | 0) == 9 | ($2597 << 24 >> 24 | 0) == 10)) {
              break;
             }
             $2595 = $2595 + 1 | 0; //@line 54943
            }
            HEAP32[$1 >> 2] = $2595; //@line 54945
            $2600 = HEAP8[$2596] | 0; //@line 54946
            if ($2600 << 24 >> 24 == 61) {
             if ((HEAP8[$2595 + 1 + ($cmd + 4) | 0] | 0) == 61) {
              $op_0_i1386 = 1;
              $storemerge4206_in = $2595;
             } else {
              $i_0_i_i2964 = $2595;
              $2607 = 61;
              label = 15944; //@line 54957
             }
            } else {
             $i_0_i_i2964 = $2595;
             $2607 = $2600;
             label = 15944; //@line 54961
            }
            if ((label | 0) == 15944) {
             while (1) {
              label = 0; //@line 54965
              if (!(($2607 << 24 >> 24 | 0) == 13 | ($2607 << 24 >> 24 | 0) == 32 | ($2607 << 24 >> 24 | 0) == 9 | ($2607 << 24 >> 24 | 0) == 10)) {
               break;
              }
              $2608 = $i_0_i_i2964 + 1 | 0; //@line 54971
              $i_0_i_i2964 = $2608;
              $2607 = HEAP8[$cmd + 4 + $2608 | 0] | 0;
              label = 15944; //@line 54976
             }
             HEAP32[$1 >> 2] = $i_0_i_i2964; //@line 54979
             if ((HEAP8[$cmd + 4 + $i_0_i_i2964 | 0] | 0) != 33) {
              $2630 = $i_0_i_i2964; //@line 54983
              break;
             }
             if ((HEAP8[$i_0_i_i2964 + 1 + ($cmd + 4) | 0] | 0) == 61) {
              $op_0_i1386 = 2;
              $storemerge4206_in = $i_0_i_i2964;
             } else {
              $2630 = $i_0_i_i2964; //@line 54993
              break;
             }
            }
            HEAP32[$1 >> 2] = $storemerge4206_in + 2; //@line 55000
            if ((_cmd_match_expr_cmp($cmd, $val2_i1385, $base) | 0) == 0) {
             label = 15949; //@line 55005
             break L20380;
            }
            if (($op_0_i1386 | 0) == 1) {
             HEAP32[$val2_i376 >> 2] = (HEAP32[$val2_i376 >> 2] | 0) == (HEAP32[$val2_i1385 >> 2] | 0); //@line 55013
             continue;
            } else if (($op_0_i1386 | 0) == 2) {
             HEAP32[$val2_i376 >> 2] = (HEAP32[$val2_i376 >> 2] | 0) != (HEAP32[$val2_i1385 >> 2] | 0); //@line 55021
             continue;
            } else {
             continue;
            }
           }
           while (1) {
            $2632 = $2630; //@line 55031
            while (1) {
             $2633 = $cmd + 4 + $2632 | 0; //@line 55034
             $2634 = HEAP8[$2633] | 0; //@line 55035
             if (!(($2634 << 24 >> 24 | 0) == 13 | ($2634 << 24 >> 24 | 0) == 32 | ($2634 << 24 >> 24 | 0) == 9 | ($2634 << 24 >> 24 | 0) == 10)) {
              break;
             }
             $2632 = $2632 + 1 | 0; //@line 55041
            }
            HEAP32[$1 >> 2] = $2632; //@line 55043
            $2637 = HEAP8[$2633] | 0; //@line 55044
            if ($2637 << 24 >> 24 == 38) {
             if ((HEAP8[$2632 + 1 + ($cmd + 4) | 0] | 0) == 38) {
              label = 17244; //@line 55052
              break;
             } else {
              $i_0_i_i1398 = $2632;
              $2644 = 38;
             }
            } else {
             $i_0_i_i1398 = $2632;
             $2644 = $2637;
            }
            while (1) {
             if (!(($2644 << 24 >> 24 | 0) == 13 | ($2644 << 24 >> 24 | 0) == 32 | ($2644 << 24 >> 24 | 0) == 9 | ($2644 << 24 >> 24 | 0) == 10)) {
              break;
             }
             $2645 = $i_0_i_i1398 + 1 | 0; //@line 55066
             $i_0_i_i1398 = $2645;
             $2644 = HEAP8[$cmd + 4 + $2645 | 0] | 0;
            }
            HEAP32[$1 >> 2] = $i_0_i_i1398; //@line 55073
            if ((HEAP8[$cmd + 4 + $i_0_i_i1398 | 0] | 0) != 38) {
             $2693 = $i_0_i_i1398; //@line 55077
             break;
            }
            $2650 = $i_0_i_i1398 + 1 | 0; //@line 55080
            HEAP32[$1 >> 2] = $2650; //@line 55081
            if ((_cmd_match_expr_cmp($cmd, $val2_i739, $base) | 0) == 0) {
             label = 15976; //@line 55086
             break L20380;
            }
            while (1) {
             $2655 = HEAP32[$1 >> 2] | 0; //@line 55092
             while (1) {
              $2656 = $cmd + 4 + $2655 | 0; //@line 55095
              $2657 = HEAP8[$2656] | 0; //@line 55096
              if (!(($2657 << 24 >> 24 | 0) == 13 | ($2657 << 24 >> 24 | 0) == 32 | ($2657 << 24 >> 24 | 0) == 9 | ($2657 << 24 >> 24 | 0) == 10)) {
               break;
              }
              $2655 = $2655 + 1 | 0; //@line 55102
             }
             HEAP32[$1 >> 2] = $2655; //@line 55104
             $2660 = HEAP8[$2656] | 0; //@line 55105
             if ($2660 << 24 >> 24 == 61) {
              if ((HEAP8[$2655 + 1 + ($cmd + 4) | 0] | 0) == 61) {
               $op_0_i1409 = 1;
               $storemerge4205_in = $2655;
              } else {
               $i_0_i_i2984 = $2655;
               $2667 = 61;
               label = 15967; //@line 55116
              }
             } else {
              $i_0_i_i2984 = $2655;
              $2667 = $2660;
              label = 15967; //@line 55120
             }
             if ((label | 0) == 15967) {
              while (1) {
               label = 0; //@line 55124
               if (!(($2667 << 24 >> 24 | 0) == 13 | ($2667 << 24 >> 24 | 0) == 32 | ($2667 << 24 >> 24 | 0) == 9 | ($2667 << 24 >> 24 | 0) == 10)) {
                break;
               }
               $2668 = $i_0_i_i2984 + 1 | 0; //@line 55130
               $i_0_i_i2984 = $2668;
               $2667 = HEAP8[$cmd + 4 + $2668 | 0] | 0;
               label = 15967; //@line 55135
              }
              HEAP32[$1 >> 2] = $i_0_i_i2984; //@line 55138
              if ((HEAP8[$cmd + 4 + $i_0_i_i2984 | 0] | 0) != 33) {
               break;
              }
              if ((HEAP8[$i_0_i_i2984 + 1 + ($cmd + 4) | 0] | 0) == 61) {
               $op_0_i1409 = 2;
               $storemerge4205_in = $i_0_i_i2984;
              } else {
               break;
              }
             }
             HEAP32[$1 >> 2] = $storemerge4205_in + 2; //@line 55157
             if ((_cmd_match_expr_cmp($cmd, $val2_i1408, $base) | 0) == 0) {
              label = 15972; //@line 55162
              break L20380;
             }
             if (($op_0_i1409 | 0) == 1) {
              HEAP32[$val2_i739 >> 2] = (HEAP32[$val2_i739 >> 2] | 0) == (HEAP32[$val2_i1408 >> 2] | 0); //@line 55170
              continue;
             } else if (($op_0_i1409 | 0) == 2) {
              HEAP32[$val2_i739 >> 2] = (HEAP32[$val2_i739 >> 2] | 0) != (HEAP32[$val2_i1408 >> 2] | 0); //@line 55178
              continue;
             } else {
              continue;
             }
            }
            HEAP32[$val2_i376 >> 2] = HEAP32[$val2_i739 >> 2] & HEAP32[$val2_i376 >> 2]; //@line 55188
            $2630 = $i_0_i_i2984; //@line 55190
           }
           if ((label | 0) == 17244) {
            label = 0; //@line 55193
            HEAP32[$1 >> 2] = $2630; //@line 55194
            $2693 = $2630; //@line 55196
           }
           HEAP32[$val2_i78 >> 2] = HEAP32[$val2_i376 >> 2] ^ HEAP32[$val2_i78 >> 2]; //@line 55202
           $i_0_i_i_i377 = $2693; //@line 55204
          }
          while (1) {
           $2699 = $2697; //@line 55209
           while (1) {
            $2700 = $cmd + 4 + $2699 | 0; //@line 55212
            $2701 = HEAP8[$2700] | 0; //@line 55213
            if (!(($2701 << 24 >> 24 | 0) == 13 | ($2701 << 24 >> 24 | 0) == 32 | ($2701 << 24 >> 24 | 0) == 9 | ($2701 << 24 >> 24 | 0) == 10)) {
             break;
            }
            $2699 = $2699 + 1 | 0; //@line 55219
           }
           HEAP32[$1 >> 2] = $2699; //@line 55221
           $2704 = HEAP8[$2700] | 0; //@line 55222
           if ($2704 << 24 >> 24 == 124) {
            if ((HEAP8[$2699 + 1 + ($cmd + 4) | 0] | 0) == 124) {
             label = 17245; //@line 55230
             break;
            } else {
             $i_0_i_i397 = $2699;
             $2711 = 124;
            }
           } else {
            $i_0_i_i397 = $2699;
            $2711 = $2704;
           }
           while (1) {
            if (!(($2711 << 24 >> 24 | 0) == 13 | ($2711 << 24 >> 24 | 0) == 32 | ($2711 << 24 >> 24 | 0) == 9 | ($2711 << 24 >> 24 | 0) == 10)) {
             break;
            }
            $2712 = $i_0_i_i397 + 1 | 0; //@line 55244
            $i_0_i_i397 = $2712;
            $2711 = HEAP8[$cmd + 4 + $2712 | 0] | 0;
           }
           HEAP32[$1 >> 2] = $i_0_i_i397; //@line 55251
           if ((HEAP8[$cmd + 4 + $i_0_i_i397 | 0] | 0) != 124) {
            $2938 = $i_0_i_i397; //@line 55255
            break;
           }
           $2717 = $i_0_i_i397 + 1 | 0; //@line 55258
           HEAP32[$1 >> 2] = $2717; //@line 55259
           if ((_cmd_match_expr_cmp($cmd, $val2_i144, $base) | 0) == 0) {
            label = 16073; //@line 55264
            break L20380;
           }
           while (1) {
            $2722 = HEAP32[$1 >> 2] | 0; //@line 55270
            while (1) {
             $2723 = $cmd + 4 + $2722 | 0; //@line 55273
             $2724 = HEAP8[$2723] | 0; //@line 55274
             if (!(($2724 << 24 >> 24 | 0) == 13 | ($2724 << 24 >> 24 | 0) == 32 | ($2724 << 24 >> 24 | 0) == 9 | ($2724 << 24 >> 24 | 0) == 10)) {
              break;
             }
             $2722 = $2722 + 1 | 0; //@line 55280
            }
            HEAP32[$1 >> 2] = $2722; //@line 55282
            $2727 = HEAP8[$2723] | 0; //@line 55283
            if ($2727 << 24 >> 24 == 61) {
             if ((HEAP8[$2722 + 1 + ($cmd + 4) | 0] | 0) == 61) {
              $op_0_i1413 = 1;
              $storemerge4204_in = $2722;
             } else {
              $i_0_i_i3004 = $2722;
              $2734 = 61;
              label = 15994; //@line 55294
             }
            } else {
             $i_0_i_i3004 = $2722;
             $2734 = $2727;
             label = 15994; //@line 55298
            }
            if ((label | 0) == 15994) {
             while (1) {
              label = 0; //@line 55302
              if (!(($2734 << 24 >> 24 | 0) == 13 | ($2734 << 24 >> 24 | 0) == 32 | ($2734 << 24 >> 24 | 0) == 9 | ($2734 << 24 >> 24 | 0) == 10)) {
               break;
              }
              $2735 = $i_0_i_i3004 + 1 | 0; //@line 55308
              $i_0_i_i3004 = $2735;
              $2734 = HEAP8[$cmd + 4 + $2735 | 0] | 0;
              label = 15994; //@line 55313
             }
             HEAP32[$1 >> 2] = $i_0_i_i3004; //@line 55316
             if ((HEAP8[$cmd + 4 + $i_0_i_i3004 | 0] | 0) != 33) {
              $2757 = $i_0_i_i3004; //@line 55320
              break;
             }
             if ((HEAP8[$i_0_i_i3004 + 1 + ($cmd + 4) | 0] | 0) == 61) {
              $op_0_i1413 = 2;
              $storemerge4204_in = $i_0_i_i3004;
             } else {
              $2757 = $i_0_i_i3004; //@line 55330
              break;
             }
            }
            HEAP32[$1 >> 2] = $storemerge4204_in + 2; //@line 55337
            if ((_cmd_match_expr_cmp($cmd, $val2_i1412, $base) | 0) == 0) {
             label = 15999; //@line 55342
             break L20380;
            }
            if (($op_0_i1413 | 0) == 1) {
             HEAP32[$val2_i144 >> 2] = (HEAP32[$val2_i144 >> 2] | 0) == (HEAP32[$val2_i1412 >> 2] | 0); //@line 55350
             continue;
            } else if (($op_0_i1413 | 0) == 2) {
             HEAP32[$val2_i144 >> 2] = (HEAP32[$val2_i144 >> 2] | 0) != (HEAP32[$val2_i1412 >> 2] | 0); //@line 55358
             continue;
            } else {
             continue;
            }
           }
           while (1) {
            $2759 = $2757; //@line 55368
            while (1) {
             $2760 = $cmd + 4 + $2759 | 0; //@line 55371
             $2761 = HEAP8[$2760] | 0; //@line 55372
             if (!(($2761 << 24 >> 24 | 0) == 13 | ($2761 << 24 >> 24 | 0) == 32 | ($2761 << 24 >> 24 | 0) == 9 | ($2761 << 24 >> 24 | 0) == 10)) {
              break;
             }
             $2759 = $2759 + 1 | 0; //@line 55378
            }
            HEAP32[$1 >> 2] = $2759; //@line 55380
            $2764 = HEAP8[$2760] | 0; //@line 55381
            if ($2764 << 24 >> 24 == 38) {
             if ((HEAP8[$2759 + 1 + ($cmd + 4) | 0] | 0) == 38) {
              label = 17246; //@line 55389
              break;
             } else {
              $i_0_i_i1425 = $2759;
              $2771 = 38;
             }
            } else {
             $i_0_i_i1425 = $2759;
             $2771 = $2764;
            }
            while (1) {
             if (!(($2771 << 24 >> 24 | 0) == 13 | ($2771 << 24 >> 24 | 0) == 32 | ($2771 << 24 >> 24 | 0) == 9 | ($2771 << 24 >> 24 | 0) == 10)) {
              break;
             }
             $2772 = $i_0_i_i1425 + 1 | 0; //@line 55403
             $i_0_i_i1425 = $2772;
             $2771 = HEAP8[$cmd + 4 + $2772 | 0] | 0;
            }
            HEAP32[$1 >> 2] = $i_0_i_i1425; //@line 55410
            if ((HEAP8[$cmd + 4 + $i_0_i_i1425 | 0] | 0) != 38) {
             $i_0_i_i_i408 = $i_0_i_i1425; //@line 55414
             break;
            }
            $2777 = $i_0_i_i1425 + 1 | 0; //@line 55417
            HEAP32[$1 >> 2] = $2777; //@line 55418
            if ((_cmd_match_expr_cmp($cmd, $val2_i742, $base) | 0) == 0) {
             label = 16026; //@line 55423
             break L20380;
            }
            while (1) {
             $2782 = HEAP32[$1 >> 2] | 0; //@line 55429
             while (1) {
              $2783 = $cmd + 4 + $2782 | 0; //@line 55432
              $2784 = HEAP8[$2783] | 0; //@line 55433
              if (!(($2784 << 24 >> 24 | 0) == 13 | ($2784 << 24 >> 24 | 0) == 32 | ($2784 << 24 >> 24 | 0) == 9 | ($2784 << 24 >> 24 | 0) == 10)) {
               break;
              }
              $2782 = $2782 + 1 | 0; //@line 55439
             }
             HEAP32[$1 >> 2] = $2782; //@line 55441
             $2787 = HEAP8[$2783] | 0; //@line 55442
             if ($2787 << 24 >> 24 == 61) {
              if ((HEAP8[$2782 + 1 + ($cmd + 4) | 0] | 0) == 61) {
               $op_0_i1436 = 1;
               $storemerge4203_in = $2782;
              } else {
               $i_0_i_i3024 = $2782;
               $2794 = 61;
               label = 16017; //@line 55453
              }
             } else {
              $i_0_i_i3024 = $2782;
              $2794 = $2787;
              label = 16017; //@line 55457
             }
             if ((label | 0) == 16017) {
              while (1) {
               label = 0; //@line 55461
               if (!(($2794 << 24 >> 24 | 0) == 13 | ($2794 << 24 >> 24 | 0) == 32 | ($2794 << 24 >> 24 | 0) == 9 | ($2794 << 24 >> 24 | 0) == 10)) {
                break;
               }
               $2795 = $i_0_i_i3024 + 1 | 0; //@line 55467
               $i_0_i_i3024 = $2795;
               $2794 = HEAP8[$cmd + 4 + $2795 | 0] | 0;
               label = 16017; //@line 55472
              }
              HEAP32[$1 >> 2] = $i_0_i_i3024; //@line 55475
              if ((HEAP8[$cmd + 4 + $i_0_i_i3024 | 0] | 0) != 33) {
               break;
              }
              if ((HEAP8[$i_0_i_i3024 + 1 + ($cmd + 4) | 0] | 0) == 61) {
               $op_0_i1436 = 2;
               $storemerge4203_in = $i_0_i_i3024;
              } else {
               break;
              }
             }
             HEAP32[$1 >> 2] = $storemerge4203_in + 2; //@line 55494
             if ((_cmd_match_expr_cmp($cmd, $val2_i1435, $base) | 0) == 0) {
              label = 16022; //@line 55499
              break L20380;
             }
             if (($op_0_i1436 | 0) == 1) {
              HEAP32[$val2_i742 >> 2] = (HEAP32[$val2_i742 >> 2] | 0) == (HEAP32[$val2_i1435 >> 2] | 0); //@line 55507
              continue;
             } else if (($op_0_i1436 | 0) == 2) {
              HEAP32[$val2_i742 >> 2] = (HEAP32[$val2_i742 >> 2] | 0) != (HEAP32[$val2_i1435 >> 2] | 0); //@line 55515
              continue;
             } else {
              continue;
             }
            }
            HEAP32[$val2_i144 >> 2] = HEAP32[$val2_i742 >> 2] & HEAP32[$val2_i144 >> 2]; //@line 55525
            $2757 = $i_0_i_i3024; //@line 55527
           }
           if ((label | 0) == 17246) {
            label = 0; //@line 55530
            HEAP32[$1 >> 2] = $2757; //@line 55531
            $i_0_i_i_i408 = $2757; //@line 55533
           }
           while (1) {
            $2820 = $cmd + 4 + $i_0_i_i_i408 | 0; //@line 55537
            $2821 = HEAP8[$2820] | 0; //@line 55538
            if (($2821 << 24 >> 24 | 0) == 13 | ($2821 << 24 >> 24 | 0) == 32 | ($2821 << 24 >> 24 | 0) == 9 | ($2821 << 24 >> 24 | 0) == 10) {
             $i_0_i_i_i408 = $i_0_i_i_i408 + 1 | 0; //@line 55542
             continue;
            }
            HEAP32[$1 >> 2] = $i_0_i_i_i408; //@line 55545
            if ((HEAP8[$2820] | 0) != 94) {
             break;
            }
            $2827 = $i_0_i_i_i408 + 1 | 0; //@line 55551
            HEAP32[$1 >> 2] = $2827; //@line 55552
            if ((_cmd_match_expr_cmp($cmd, $val2_i407, $base) | 0) == 0) {
             label = 16071; //@line 55557
             break L20380;
            }
            while (1) {
             $2832 = HEAP32[$1 >> 2] | 0; //@line 55563
             while (1) {
              $2833 = $cmd + 4 + $2832 | 0; //@line 55566
              $2834 = HEAP8[$2833] | 0; //@line 55567
              if (!(($2834 << 24 >> 24 | 0) == 13 | ($2834 << 24 >> 24 | 0) == 32 | ($2834 << 24 >> 24 | 0) == 9 | ($2834 << 24 >> 24 | 0) == 10)) {
               break;
              }
              $2832 = $2832 + 1 | 0; //@line 55573
             }
             HEAP32[$1 >> 2] = $2832; //@line 55575
             $2837 = HEAP8[$2833] | 0; //@line 55576
             if ($2837 << 24 >> 24 == 61) {
              if ((HEAP8[$2832 + 1 + ($cmd + 4) | 0] | 0) == 61) {
               $op_0_i1440 = 1;
               $storemerge4202_in = $2832;
              } else {
               $i_0_i_i3044 = $2832;
               $2844 = 61;
               label = 16037; //@line 55587
              }
             } else {
              $i_0_i_i3044 = $2832;
              $2844 = $2837;
              label = 16037; //@line 55591
             }
             if ((label | 0) == 16037) {
              while (1) {
               label = 0; //@line 55595
               if (!(($2844 << 24 >> 24 | 0) == 13 | ($2844 << 24 >> 24 | 0) == 32 | ($2844 << 24 >> 24 | 0) == 9 | ($2844 << 24 >> 24 | 0) == 10)) {
                break;
               }
               $2845 = $i_0_i_i3044 + 1 | 0; //@line 55601
               $i_0_i_i3044 = $2845;
               $2844 = HEAP8[$cmd + 4 + $2845 | 0] | 0;
               label = 16037; //@line 55606
              }
              HEAP32[$1 >> 2] = $i_0_i_i3044; //@line 55609
              if ((HEAP8[$cmd + 4 + $i_0_i_i3044 | 0] | 0) != 33) {
               $2867 = $i_0_i_i3044; //@line 55613
               break;
              }
              if ((HEAP8[$i_0_i_i3044 + 1 + ($cmd + 4) | 0] | 0) == 61) {
               $op_0_i1440 = 2;
               $storemerge4202_in = $i_0_i_i3044;
              } else {
               $2867 = $i_0_i_i3044; //@line 55623
               break;
              }
             }
             HEAP32[$1 >> 2] = $storemerge4202_in + 2; //@line 55630
             if ((_cmd_match_expr_cmp($cmd, $val2_i1439, $base) | 0) == 0) {
              label = 16042; //@line 55635
              break L20380;
             }
             if (($op_0_i1440 | 0) == 1) {
              HEAP32[$val2_i407 >> 2] = (HEAP32[$val2_i407 >> 2] | 0) == (HEAP32[$val2_i1439 >> 2] | 0); //@line 55643
              continue;
             } else if (($op_0_i1440 | 0) == 2) {
              HEAP32[$val2_i407 >> 2] = (HEAP32[$val2_i407 >> 2] | 0) != (HEAP32[$val2_i1439 >> 2] | 0); //@line 55651
              continue;
             } else {
              continue;
             }
            }
            while (1) {
             $2869 = $2867; //@line 55661
             while (1) {
              $2870 = $cmd + 4 + $2869 | 0; //@line 55664
              $2871 = HEAP8[$2870] | 0; //@line 55665
              if (!(($2871 << 24 >> 24 | 0) == 13 | ($2871 << 24 >> 24 | 0) == 32 | ($2871 << 24 >> 24 | 0) == 9 | ($2871 << 24 >> 24 | 0) == 10)) {
               break;
              }
              $2869 = $2869 + 1 | 0; //@line 55671
             }
             HEAP32[$1 >> 2] = $2869; //@line 55673
             $2874 = HEAP8[$2870] | 0; //@line 55674
             if ($2874 << 24 >> 24 == 38) {
              if ((HEAP8[$2869 + 1 + ($cmd + 4) | 0] | 0) == 38) {
               label = 17247; //@line 55682
               break;
              } else {
               $i_0_i_i1452 = $2869;
               $2881 = 38;
              }
             } else {
              $i_0_i_i1452 = $2869;
              $2881 = $2874;
             }
             while (1) {
              if (!(($2881 << 24 >> 24 | 0) == 13 | ($2881 << 24 >> 24 | 0) == 32 | ($2881 << 24 >> 24 | 0) == 9 | ($2881 << 24 >> 24 | 0) == 10)) {
               break;
              }
              $2882 = $i_0_i_i1452 + 1 | 0; //@line 55696
              $i_0_i_i1452 = $2882;
              $2881 = HEAP8[$cmd + 4 + $2882 | 0] | 0;
             }
             HEAP32[$1 >> 2] = $i_0_i_i1452; //@line 55703
             if ((HEAP8[$cmd + 4 + $i_0_i_i1452 | 0] | 0) != 38) {
              $2930 = $i_0_i_i1452; //@line 55707
              break;
             }
             $2887 = $i_0_i_i1452 + 1 | 0; //@line 55710
             HEAP32[$1 >> 2] = $2887; //@line 55711
             if ((_cmd_match_expr_cmp($cmd, $val2_i745, $base) | 0) == 0) {
              label = 16069; //@line 55716
              break L20380;
             }
             while (1) {
              $2892 = HEAP32[$1 >> 2] | 0; //@line 55722
              while (1) {
               $2893 = $cmd + 4 + $2892 | 0; //@line 55725
               $2894 = HEAP8[$2893] | 0; //@line 55726
               if (!(($2894 << 24 >> 24 | 0) == 13 | ($2894 << 24 >> 24 | 0) == 32 | ($2894 << 24 >> 24 | 0) == 9 | ($2894 << 24 >> 24 | 0) == 10)) {
                break;
               }
               $2892 = $2892 + 1 | 0; //@line 55732
              }
              HEAP32[$1 >> 2] = $2892; //@line 55734
              $2897 = HEAP8[$2893] | 0; //@line 55735
              if ($2897 << 24 >> 24 == 61) {
               if ((HEAP8[$2892 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                $op_0_i1463 = 1;
                $storemerge4201_in = $2892;
               } else {
                $i_0_i_i3064 = $2892;
                $2904 = 61;
                label = 16060; //@line 55746
               }
              } else {
               $i_0_i_i3064 = $2892;
               $2904 = $2897;
               label = 16060; //@line 55750
              }
              if ((label | 0) == 16060) {
               while (1) {
                label = 0; //@line 55754
                if (!(($2904 << 24 >> 24 | 0) == 13 | ($2904 << 24 >> 24 | 0) == 32 | ($2904 << 24 >> 24 | 0) == 9 | ($2904 << 24 >> 24 | 0) == 10)) {
                 break;
                }
                $2905 = $i_0_i_i3064 + 1 | 0; //@line 55760
                $i_0_i_i3064 = $2905;
                $2904 = HEAP8[$cmd + 4 + $2905 | 0] | 0;
                label = 16060; //@line 55765
               }
               HEAP32[$1 >> 2] = $i_0_i_i3064; //@line 55768
               if ((HEAP8[$cmd + 4 + $i_0_i_i3064 | 0] | 0) != 33) {
                break;
               }
               if ((HEAP8[$i_0_i_i3064 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                $op_0_i1463 = 2;
                $storemerge4201_in = $i_0_i_i3064;
               } else {
                break;
               }
              }
              HEAP32[$1 >> 2] = $storemerge4201_in + 2; //@line 55787
              if ((_cmd_match_expr_cmp($cmd, $val2_i1462, $base) | 0) == 0) {
               label = 16065; //@line 55792
               break L20380;
              }
              if (($op_0_i1463 | 0) == 1) {
               HEAP32[$val2_i745 >> 2] = (HEAP32[$val2_i745 >> 2] | 0) == (HEAP32[$val2_i1462 >> 2] | 0); //@line 55800
               continue;
              } else if (($op_0_i1463 | 0) == 2) {
               HEAP32[$val2_i745 >> 2] = (HEAP32[$val2_i745 >> 2] | 0) != (HEAP32[$val2_i1462 >> 2] | 0); //@line 55808
               continue;
              } else {
               continue;
              }
             }
             HEAP32[$val2_i407 >> 2] = HEAP32[$val2_i745 >> 2] & HEAP32[$val2_i407 >> 2]; //@line 55818
             $2867 = $i_0_i_i3064; //@line 55820
            }
            if ((label | 0) == 17247) {
             label = 0; //@line 55823
             HEAP32[$1 >> 2] = $2867; //@line 55824
             $2930 = $2867; //@line 55826
            }
            HEAP32[$val2_i144 >> 2] = HEAP32[$val2_i407 >> 2] ^ HEAP32[$val2_i144 >> 2]; //@line 55832
            $i_0_i_i_i408 = $2930; //@line 55834
           }
           HEAP32[$val2_i78 >> 2] = HEAP32[$val2_i144 >> 2] | HEAP32[$val2_i78 >> 2]; //@line 55839
           $2697 = $i_0_i_i_i408; //@line 55841
          }
          if ((label | 0) == 17245) {
           label = 0; //@line 55844
           HEAP32[$1 >> 2] = $2697; //@line 55845
           $2938 = $2697; //@line 55847
          }
          if ((HEAP32[$val2 >> 2] | 0) == 0) {
           $2945 = 0; //@line 55854
          } else {
           $2945 = (HEAP32[$val2_i78 >> 2] | 0) != 0 | 0; //@line 55859
          }
          HEAP32[$val2 >> 2] = $2945; //@line 55862
          $i_0_i_i_i79 = $2938; //@line 55864
         }
         if ((label | 0) == 15894) {
          $2946 = $i_0_i_i_i79; //@line 55899
          L20639 : while (1) {
           $2947 = $cmd + 4 + $2946 | 0; //@line 55902
           $2948 = HEAP8[$2947] | 0; //@line 55903
           if (($2948 << 24 >> 24 | 0) == 13 | ($2948 << 24 >> 24 | 0) == 32 | ($2948 << 24 >> 24 | 0) == 9 | ($2948 << 24 >> 24 | 0) == 10) {
            $2946 = $2946 + 1 | 0; //@line 55907
            continue;
           }
           HEAP32[$1 >> 2] = $2946; //@line 55910
           $2951 = HEAP8[$2947] | 0; //@line 55911
           if ($2951 << 24 >> 24 != 124) {
            $i_0_i_i = $2946;
            $3894 = $2951;
            label = 16454; //@line 55915
            break;
           }
           if ((HEAP8[$2946 + 1 + ($cmd + 4) | 0] | 0) != 124) {
            $i_0_i_i = $2946;
            $3894 = $2951;
            label = 16454; //@line 55924
            break;
           }
           $5861 = $2946 + 2 | 0; //@line 55927
           HEAP32[$1 >> 2] = $5861; //@line 55928
           if ((_cmd_match_expr_cmp($cmd, $val2_i27, $base) | 0) == 0) {
            break;
           }
           while (1) {
            $2959 = HEAP32[$1 >> 2] | 0; //@line 55938
            while (1) {
             $2960 = $cmd + 4 + $2959 | 0; //@line 55941
             $2961 = HEAP8[$2960] | 0; //@line 55942
             if (!(($2961 << 24 >> 24 | 0) == 13 | ($2961 << 24 >> 24 | 0) == 32 | ($2961 << 24 >> 24 | 0) == 9 | ($2961 << 24 >> 24 | 0) == 10)) {
              break;
             }
             $2959 = $2959 + 1 | 0; //@line 55948
            }
            HEAP32[$1 >> 2] = $2959; //@line 55950
            $2964 = HEAP8[$2960] | 0; //@line 55951
            if ($2964 << 24 >> 24 == 61) {
             if ((HEAP8[$2959 + 1 + ($cmd + 4) | 0] | 0) == 61) {
              $op_0_i1467 = 1;
              $storemerge4200_in = $2959;
             } else {
              $i_0_i_i3084 = $2959;
              $2971 = 61;
              label = 16088; //@line 55962
             }
            } else {
             $i_0_i_i3084 = $2959;
             $2971 = $2964;
             label = 16088; //@line 55966
            }
            if ((label | 0) == 16088) {
             while (1) {
              label = 0; //@line 55970
              if (!(($2971 << 24 >> 24 | 0) == 13 | ($2971 << 24 >> 24 | 0) == 32 | ($2971 << 24 >> 24 | 0) == 9 | ($2971 << 24 >> 24 | 0) == 10)) {
               break;
              }
              $2972 = $i_0_i_i3084 + 1 | 0; //@line 55976
              $i_0_i_i3084 = $2972;
              $2971 = HEAP8[$cmd + 4 + $2972 | 0] | 0;
              label = 16088; //@line 55981
             }
             HEAP32[$1 >> 2] = $i_0_i_i3084; //@line 55984
             if ((HEAP8[$cmd + 4 + $i_0_i_i3084 | 0] | 0) != 33) {
              $2994 = $i_0_i_i3084; //@line 55988
              break;
             }
             if ((HEAP8[$i_0_i_i3084 + 1 + ($cmd + 4) | 0] | 0) == 61) {
              $op_0_i1467 = 2;
              $storemerge4200_in = $i_0_i_i3084;
             } else {
              $2994 = $i_0_i_i3084; //@line 55998
              break;
             }
            }
            HEAP32[$1 >> 2] = $storemerge4200_in + 2; //@line 56005
            if ((_cmd_match_expr_cmp($cmd, $val2_i1466, $base) | 0) == 0) {
             label = 16093; //@line 56010
             break L20639;
            }
            if (($op_0_i1467 | 0) == 1) {
             HEAP32[$val2_i27 >> 2] = (HEAP32[$val2_i27 >> 2] | 0) == (HEAP32[$val2_i1466 >> 2] | 0); //@line 56018
             continue;
            } else if (($op_0_i1467 | 0) == 2) {
             HEAP32[$val2_i27 >> 2] = (HEAP32[$val2_i27 >> 2] | 0) != (HEAP32[$val2_i1466 >> 2] | 0); //@line 56026
             continue;
            } else {
             continue;
            }
           }
           while (1) {
            $2996 = $2994; //@line 56036
            while (1) {
             $2997 = $cmd + 4 + $2996 | 0; //@line 56039
             $2998 = HEAP8[$2997] | 0; //@line 56040
             if (!(($2998 << 24 >> 24 | 0) == 13 | ($2998 << 24 >> 24 | 0) == 32 | ($2998 << 24 >> 24 | 0) == 9 | ($2998 << 24 >> 24 | 0) == 10)) {
              break;
             }
             $2996 = $2996 + 1 | 0; //@line 56046
            }
            HEAP32[$1 >> 2] = $2996; //@line 56048
            $3001 = HEAP8[$2997] | 0; //@line 56049
            if ($3001 << 24 >> 24 == 38) {
             if ((HEAP8[$2996 + 1 + ($cmd + 4) | 0] | 0) == 38) {
              label = 17231; //@line 56057
              break;
             } else {
              $i_0_i_i1479 = $2996;
              $3008 = 38;
             }
            } else {
             $i_0_i_i1479 = $2996;
             $3008 = $3001;
            }
            while (1) {
             if (!(($3008 << 24 >> 24 | 0) == 13 | ($3008 << 24 >> 24 | 0) == 32 | ($3008 << 24 >> 24 | 0) == 9 | ($3008 << 24 >> 24 | 0) == 10)) {
              break;
             }
             $3009 = $i_0_i_i1479 + 1 | 0; //@line 56071
             $i_0_i_i1479 = $3009;
             $3008 = HEAP8[$cmd + 4 + $3009 | 0] | 0;
            }
            HEAP32[$1 >> 2] = $i_0_i_i1479; //@line 56078
            if ((HEAP8[$cmd + 4 + $i_0_i_i1479 | 0] | 0) != 38) {
             $i_0_i_i_i420 = $i_0_i_i1479; //@line 56082
             break;
            }
            $3014 = $i_0_i_i1479 + 1 | 0; //@line 56085
            HEAP32[$1 >> 2] = $3014; //@line 56086
            if ((_cmd_match_expr_cmp($cmd, $val2_i748, $base) | 0) == 0) {
             label = 16120; //@line 56091
             break L20639;
            }
            while (1) {
             $3019 = HEAP32[$1 >> 2] | 0; //@line 56097
             while (1) {
              $3020 = $cmd + 4 + $3019 | 0; //@line 56100
              $3021 = HEAP8[$3020] | 0; //@line 56101
              if (!(($3021 << 24 >> 24 | 0) == 13 | ($3021 << 24 >> 24 | 0) == 32 | ($3021 << 24 >> 24 | 0) == 9 | ($3021 << 24 >> 24 | 0) == 10)) {
               break;
              }
              $3019 = $3019 + 1 | 0; //@line 56107
             }
             HEAP32[$1 >> 2] = $3019; //@line 56109
             $3024 = HEAP8[$3020] | 0; //@line 56110
             if ($3024 << 24 >> 24 == 61) {
              if ((HEAP8[$3019 + 1 + ($cmd + 4) | 0] | 0) == 61) {
               $op_0_i1490 = 1;
               $storemerge4199_in = $3019;
              } else {
               $i_0_i_i3104 = $3019;
               $3031 = 61;
               label = 16111; //@line 56121
              }
             } else {
              $i_0_i_i3104 = $3019;
              $3031 = $3024;
              label = 16111; //@line 56125
             }
             if ((label | 0) == 16111) {
              while (1) {
               label = 0; //@line 56129
               if (!(($3031 << 24 >> 24 | 0) == 13 | ($3031 << 24 >> 24 | 0) == 32 | ($3031 << 24 >> 24 | 0) == 9 | ($3031 << 24 >> 24 | 0) == 10)) {
                break;
               }
               $3032 = $i_0_i_i3104 + 1 | 0; //@line 56135
               $i_0_i_i3104 = $3032;
               $3031 = HEAP8[$cmd + 4 + $3032 | 0] | 0;
               label = 16111; //@line 56140
              }
              HEAP32[$1 >> 2] = $i_0_i_i3104; //@line 56143
              if ((HEAP8[$cmd + 4 + $i_0_i_i3104 | 0] | 0) != 33) {
               break;
              }
              if ((HEAP8[$i_0_i_i3104 + 1 + ($cmd + 4) | 0] | 0) == 61) {
               $op_0_i1490 = 2;
               $storemerge4199_in = $i_0_i_i3104;
              } else {
               break;
              }
             }
             HEAP32[$1 >> 2] = $storemerge4199_in + 2; //@line 56162
             if ((_cmd_match_expr_cmp($cmd, $val2_i1489, $base) | 0) == 0) {
              label = 16116; //@line 56167
              break L20639;
             }
             if (($op_0_i1490 | 0) == 1) {
              HEAP32[$val2_i748 >> 2] = (HEAP32[$val2_i748 >> 2] | 0) == (HEAP32[$val2_i1489 >> 2] | 0); //@line 56175
              continue;
             } else if (($op_0_i1490 | 0) == 2) {
              HEAP32[$val2_i748 >> 2] = (HEAP32[$val2_i748 >> 2] | 0) != (HEAP32[$val2_i1489 >> 2] | 0); //@line 56183
              continue;
             } else {
              continue;
             }
            }
            HEAP32[$val2_i27 >> 2] = HEAP32[$val2_i748 >> 2] & HEAP32[$val2_i27 >> 2]; //@line 56193
            $2994 = $i_0_i_i3104; //@line 56195
           }
           if ((label | 0) == 17231) {
            label = 0; //@line 56198
            HEAP32[$1 >> 2] = $2994; //@line 56199
            $i_0_i_i_i420 = $2994; //@line 56201
           }
           while (1) {
            $3057 = $cmd + 4 + $i_0_i_i_i420 | 0; //@line 56205
            $3058 = HEAP8[$3057] | 0; //@line 56206
            if (($3058 << 24 >> 24 | 0) == 13 | ($3058 << 24 >> 24 | 0) == 32 | ($3058 << 24 >> 24 | 0) == 9 | ($3058 << 24 >> 24 | 0) == 10) {
             $i_0_i_i_i420 = $i_0_i_i_i420 + 1 | 0; //@line 56210
             continue;
            }
            HEAP32[$1 >> 2] = $i_0_i_i_i420; //@line 56213
            if ((HEAP8[$3057] | 0) != 94) {
             $3171 = $i_0_i_i_i420; //@line 56217
             break;
            }
            $3064 = $i_0_i_i_i420 + 1 | 0; //@line 56220
            HEAP32[$1 >> 2] = $3064; //@line 56221
            if ((_cmd_match_expr_cmp($cmd, $val2_i419, $base) | 0) == 0) {
             label = 16165; //@line 56226
             break L20639;
            }
            while (1) {
             $3069 = HEAP32[$1 >> 2] | 0; //@line 56232
             while (1) {
              $3070 = $cmd + 4 + $3069 | 0; //@line 56235
              $3071 = HEAP8[$3070] | 0; //@line 56236
              if (!(($3071 << 24 >> 24 | 0) == 13 | ($3071 << 24 >> 24 | 0) == 32 | ($3071 << 24 >> 24 | 0) == 9 | ($3071 << 24 >> 24 | 0) == 10)) {
               break;
              }
              $3069 = $3069 + 1 | 0; //@line 56242
             }
             HEAP32[$1 >> 2] = $3069; //@line 56244
             $3074 = HEAP8[$3070] | 0; //@line 56245
             if ($3074 << 24 >> 24 == 61) {
              if ((HEAP8[$3069 + 1 + ($cmd + 4) | 0] | 0) == 61) {
               $op_0_i1494 = 1;
               $storemerge4198_in = $3069;
              } else {
               $i_0_i_i3124 = $3069;
               $3081 = 61;
               label = 16131; //@line 56256
              }
             } else {
              $i_0_i_i3124 = $3069;
              $3081 = $3074;
              label = 16131; //@line 56260
             }
             if ((label | 0) == 16131) {
              while (1) {
               label = 0; //@line 56264
               if (!(($3081 << 24 >> 24 | 0) == 13 | ($3081 << 24 >> 24 | 0) == 32 | ($3081 << 24 >> 24 | 0) == 9 | ($3081 << 24 >> 24 | 0) == 10)) {
                break;
               }
               $3082 = $i_0_i_i3124 + 1 | 0; //@line 56270
               $i_0_i_i3124 = $3082;
               $3081 = HEAP8[$cmd + 4 + $3082 | 0] | 0;
               label = 16131; //@line 56275
              }
              HEAP32[$1 >> 2] = $i_0_i_i3124; //@line 56278
              if ((HEAP8[$cmd + 4 + $i_0_i_i3124 | 0] | 0) != 33) {
               $3104 = $i_0_i_i3124; //@line 56282
               break;
              }
              if ((HEAP8[$i_0_i_i3124 + 1 + ($cmd + 4) | 0] | 0) == 61) {
               $op_0_i1494 = 2;
               $storemerge4198_in = $i_0_i_i3124;
              } else {
               $3104 = $i_0_i_i3124; //@line 56292
               break;
              }
             }
             HEAP32[$1 >> 2] = $storemerge4198_in + 2; //@line 56299
             if ((_cmd_match_expr_cmp($cmd, $val2_i1493, $base) | 0) == 0) {
              label = 16136; //@line 56304
              break L20639;
             }
             if (($op_0_i1494 | 0) == 1) {
              HEAP32[$val2_i419 >> 2] = (HEAP32[$val2_i419 >> 2] | 0) == (HEAP32[$val2_i1493 >> 2] | 0); //@line 56312
              continue;
             } else if (($op_0_i1494 | 0) == 2) {
              HEAP32[$val2_i419 >> 2] = (HEAP32[$val2_i419 >> 2] | 0) != (HEAP32[$val2_i1493 >> 2] | 0); //@line 56320
              continue;
             } else {
              continue;
             }
            }
            while (1) {
             $3106 = $3104; //@line 56330
             while (1) {
              $3107 = $cmd + 4 + $3106 | 0; //@line 56333
              $3108 = HEAP8[$3107] | 0; //@line 56334
              if (!(($3108 << 24 >> 24 | 0) == 13 | ($3108 << 24 >> 24 | 0) == 32 | ($3108 << 24 >> 24 | 0) == 9 | ($3108 << 24 >> 24 | 0) == 10)) {
               break;
              }
              $3106 = $3106 + 1 | 0; //@line 56340
             }
             HEAP32[$1 >> 2] = $3106; //@line 56342
             $3111 = HEAP8[$3107] | 0; //@line 56343
             if ($3111 << 24 >> 24 == 38) {
              if ((HEAP8[$3106 + 1 + ($cmd + 4) | 0] | 0) == 38) {
               label = 17232; //@line 56351
               break;
              } else {
               $i_0_i_i1506 = $3106;
               $3118 = 38;
              }
             } else {
              $i_0_i_i1506 = $3106;
              $3118 = $3111;
             }
             while (1) {
              if (!(($3118 << 24 >> 24 | 0) == 13 | ($3118 << 24 >> 24 | 0) == 32 | ($3118 << 24 >> 24 | 0) == 9 | ($3118 << 24 >> 24 | 0) == 10)) {
               break;
              }
              $3119 = $i_0_i_i1506 + 1 | 0; //@line 56365
              $i_0_i_i1506 = $3119;
              $3118 = HEAP8[$cmd + 4 + $3119 | 0] | 0;
             }
             HEAP32[$1 >> 2] = $i_0_i_i1506; //@line 56372
             if ((HEAP8[$cmd + 4 + $i_0_i_i1506 | 0] | 0) != 38) {
              $3167 = $i_0_i_i1506; //@line 56376
              break;
             }
             $3124 = $i_0_i_i1506 + 1 | 0; //@line 56379
             HEAP32[$1 >> 2] = $3124; //@line 56380
             if ((_cmd_match_expr_cmp($cmd, $val2_i751, $base) | 0) == 0) {
              label = 16163; //@line 56385
              break L20639;
             }
             while (1) {
              $3129 = HEAP32[$1 >> 2] | 0; //@line 56391
              while (1) {
               $3130 = $cmd + 4 + $3129 | 0; //@line 56394
               $3131 = HEAP8[$3130] | 0; //@line 56395
               if (!(($3131 << 24 >> 24 | 0) == 13 | ($3131 << 24 >> 24 | 0) == 32 | ($3131 << 24 >> 24 | 0) == 9 | ($3131 << 24 >> 24 | 0) == 10)) {
                break;
               }
               $3129 = $3129 + 1 | 0; //@line 56401
              }
              HEAP32[$1 >> 2] = $3129; //@line 56403
              $3134 = HEAP8[$3130] | 0; //@line 56404
              if ($3134 << 24 >> 24 == 61) {
               if ((HEAP8[$3129 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                $op_0_i1517 = 1;
                $storemerge4197_in = $3129;
               } else {
                $i_0_i_i3144 = $3129;
                $3141 = 61;
                label = 16154; //@line 56415
               }
              } else {
               $i_0_i_i3144 = $3129;
               $3141 = $3134;
               label = 16154; //@line 56419
              }
              if ((label | 0) == 16154) {
               while (1) {
                label = 0; //@line 56423
                if (!(($3141 << 24 >> 24 | 0) == 13 | ($3141 << 24 >> 24 | 0) == 32 | ($3141 << 24 >> 24 | 0) == 9 | ($3141 << 24 >> 24 | 0) == 10)) {
                 break;
                }
                $3142 = $i_0_i_i3144 + 1 | 0; //@line 56429
                $i_0_i_i3144 = $3142;
                $3141 = HEAP8[$cmd + 4 + $3142 | 0] | 0;
                label = 16154; //@line 56434
               }
               HEAP32[$1 >> 2] = $i_0_i_i3144; //@line 56437
               if ((HEAP8[$cmd + 4 + $i_0_i_i3144 | 0] | 0) != 33) {
                break;
               }
               if ((HEAP8[$i_0_i_i3144 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                $op_0_i1517 = 2;
                $storemerge4197_in = $i_0_i_i3144;
               } else {
                break;
               }
              }
              HEAP32[$1 >> 2] = $storemerge4197_in + 2; //@line 56456
              if ((_cmd_match_expr_cmp($cmd, $val2_i1516, $base) | 0) == 0) {
               label = 16159; //@line 56461
               break L20639;
              }
              if (($op_0_i1517 | 0) == 1) {
               HEAP32[$val2_i751 >> 2] = (HEAP32[$val2_i751 >> 2] | 0) == (HEAP32[$val2_i1516 >> 2] | 0); //@line 56469
               continue;
              } else if (($op_0_i1517 | 0) == 2) {
               HEAP32[$val2_i751 >> 2] = (HEAP32[$val2_i751 >> 2] | 0) != (HEAP32[$val2_i1516 >> 2] | 0); //@line 56477
               continue;
              } else {
               continue;
              }
             }
             HEAP32[$val2_i419 >> 2] = HEAP32[$val2_i751 >> 2] & HEAP32[$val2_i419 >> 2]; //@line 56487
             $3104 = $i_0_i_i3144; //@line 56489
            }
            if ((label | 0) == 17232) {
             label = 0; //@line 56492
             HEAP32[$1 >> 2] = $3104; //@line 56493
             $3167 = $3104; //@line 56495
            }
            HEAP32[$val2_i27 >> 2] = HEAP32[$val2_i419 >> 2] ^ HEAP32[$val2_i27 >> 2]; //@line 56501
            $i_0_i_i_i420 = $3167; //@line 56503
           }
           while (1) {
            $3173 = $3171; //@line 56508
            while (1) {
             $3174 = $cmd + 4 + $3173 | 0; //@line 56511
             $3175 = HEAP8[$3174] | 0; //@line 56512
             if (!(($3175 << 24 >> 24 | 0) == 13 | ($3175 << 24 >> 24 | 0) == 32 | ($3175 << 24 >> 24 | 0) == 9 | ($3175 << 24 >> 24 | 0) == 10)) {
              break;
             }
             $3173 = $3173 + 1 | 0; //@line 56518
            }
            HEAP32[$1 >> 2] = $3173; //@line 56520
            $3178 = HEAP8[$3174] | 0; //@line 56521
            if ($3178 << 24 >> 24 == 124) {
             if ((HEAP8[$3173 + 1 + ($cmd + 4) | 0] | 0) == 124) {
              label = 17233; //@line 56529
              break;
             } else {
              $i_0_i_i440 = $3173;
              $3185 = 124;
             }
            } else {
             $i_0_i_i440 = $3173;
             $3185 = $3178;
            }
            while (1) {
             if (!(($3185 << 24 >> 24 | 0) == 13 | ($3185 << 24 >> 24 | 0) == 32 | ($3185 << 24 >> 24 | 0) == 9 | ($3185 << 24 >> 24 | 0) == 10)) {
              break;
             }
             $3186 = $i_0_i_i440 + 1 | 0; //@line 56543
             $i_0_i_i440 = $3186;
             $3185 = HEAP8[$cmd + 4 + $3186 | 0] | 0;
            }
            HEAP32[$1 >> 2] = $i_0_i_i440; //@line 56550
            if ((HEAP8[$cmd + 4 + $i_0_i_i440 | 0] | 0) != 124) {
             $i_0_i_i_i92 = $i_0_i_i440; //@line 56554
             break;
            }
            $3191 = $i_0_i_i440 + 1 | 0; //@line 56557
            HEAP32[$1 >> 2] = $3191; //@line 56558
            if ((_cmd_match_expr_cmp($cmd, $val2_i147, $base) | 0) == 0) {
             label = 16260; //@line 56563
             break L20639;
            }
            while (1) {
             $3196 = HEAP32[$1 >> 2] | 0; //@line 56569
             while (1) {
              $3197 = $cmd + 4 + $3196 | 0; //@line 56572
              $3198 = HEAP8[$3197] | 0; //@line 56573
              if (!(($3198 << 24 >> 24 | 0) == 13 | ($3198 << 24 >> 24 | 0) == 32 | ($3198 << 24 >> 24 | 0) == 9 | ($3198 << 24 >> 24 | 0) == 10)) {
               break;
              }
              $3196 = $3196 + 1 | 0; //@line 56579
             }
             HEAP32[$1 >> 2] = $3196; //@line 56581
             $3201 = HEAP8[$3197] | 0; //@line 56582
             if ($3201 << 24 >> 24 == 61) {
              if ((HEAP8[$3196 + 1 + ($cmd + 4) | 0] | 0) == 61) {
               $op_0_i1521 = 1;
               $storemerge4196_in = $3196;
              } else {
               $i_0_i_i3164 = $3196;
               $3208 = 61;
               label = 16181; //@line 56593
              }
             } else {
              $i_0_i_i3164 = $3196;
              $3208 = $3201;
              label = 16181; //@line 56597
             }
             if ((label | 0) == 16181) {
              while (1) {
               label = 0; //@line 56601
               if (!(($3208 << 24 >> 24 | 0) == 13 | ($3208 << 24 >> 24 | 0) == 32 | ($3208 << 24 >> 24 | 0) == 9 | ($3208 << 24 >> 24 | 0) == 10)) {
                break;
               }
               $3209 = $i_0_i_i3164 + 1 | 0; //@line 56607
               $i_0_i_i3164 = $3209;
               $3208 = HEAP8[$cmd + 4 + $3209 | 0] | 0;
               label = 16181; //@line 56612
              }
              HEAP32[$1 >> 2] = $i_0_i_i3164; //@line 56615
              if ((HEAP8[$cmd + 4 + $i_0_i_i3164 | 0] | 0) != 33) {
               $3231 = $i_0_i_i3164; //@line 56619
               break;
              }
              if ((HEAP8[$i_0_i_i3164 + 1 + ($cmd + 4) | 0] | 0) == 61) {
               $op_0_i1521 = 2;
               $storemerge4196_in = $i_0_i_i3164;
              } else {
               $3231 = $i_0_i_i3164; //@line 56629
               break;
              }
             }
             HEAP32[$1 >> 2] = $storemerge4196_in + 2; //@line 56636
             if ((_cmd_match_expr_cmp($cmd, $val2_i1520, $base) | 0) == 0) {
              label = 16186; //@line 56641
              break L20639;
             }
             if (($op_0_i1521 | 0) == 1) {
              HEAP32[$val2_i147 >> 2] = (HEAP32[$val2_i147 >> 2] | 0) == (HEAP32[$val2_i1520 >> 2] | 0); //@line 56649
              continue;
             } else if (($op_0_i1521 | 0) == 2) {
              HEAP32[$val2_i147 >> 2] = (HEAP32[$val2_i147 >> 2] | 0) != (HEAP32[$val2_i1520 >> 2] | 0); //@line 56657
              continue;
             } else {
              continue;
             }
            }
            while (1) {
             $3233 = $3231; //@line 56667
             while (1) {
              $3234 = $cmd + 4 + $3233 | 0; //@line 56670
              $3235 = HEAP8[$3234] | 0; //@line 56671
              if (!(($3235 << 24 >> 24 | 0) == 13 | ($3235 << 24 >> 24 | 0) == 32 | ($3235 << 24 >> 24 | 0) == 9 | ($3235 << 24 >> 24 | 0) == 10)) {
               break;
              }
              $3233 = $3233 + 1 | 0; //@line 56677
             }
             HEAP32[$1 >> 2] = $3233; //@line 56679
             $3238 = HEAP8[$3234] | 0; //@line 56680
             if ($3238 << 24 >> 24 == 38) {
              if ((HEAP8[$3233 + 1 + ($cmd + 4) | 0] | 0) == 38) {
               label = 17234; //@line 56688
               break;
              } else {
               $i_0_i_i1533 = $3233;
               $3245 = 38;
              }
             } else {
              $i_0_i_i1533 = $3233;
              $3245 = $3238;
             }
             while (1) {
              if (!(($3245 << 24 >> 24 | 0) == 13 | ($3245 << 24 >> 24 | 0) == 32 | ($3245 << 24 >> 24 | 0) == 9 | ($3245 << 24 >> 24 | 0) == 10)) {
               break;
              }
              $3246 = $i_0_i_i1533 + 1 | 0; //@line 56702
              $i_0_i_i1533 = $3246;
              $3245 = HEAP8[$cmd + 4 + $3246 | 0] | 0;
             }
             HEAP32[$1 >> 2] = $i_0_i_i1533; //@line 56709
             if ((HEAP8[$cmd + 4 + $i_0_i_i1533 | 0] | 0) != 38) {
              $i_0_i_i_i451 = $i_0_i_i1533; //@line 56713
              break;
             }
             $3251 = $i_0_i_i1533 + 1 | 0; //@line 56716
             HEAP32[$1 >> 2] = $3251; //@line 56717
             if ((_cmd_match_expr_cmp($cmd, $val2_i754, $base) | 0) == 0) {
              label = 16213; //@line 56722
              break L20639;
             }
             while (1) {
              $3256 = HEAP32[$1 >> 2] | 0; //@line 56728
              while (1) {
               $3257 = $cmd + 4 + $3256 | 0; //@line 56731
               $3258 = HEAP8[$3257] | 0; //@line 56732
               if (!(($3258 << 24 >> 24 | 0) == 13 | ($3258 << 24 >> 24 | 0) == 32 | ($3258 << 24 >> 24 | 0) == 9 | ($3258 << 24 >> 24 | 0) == 10)) {
                break;
               }
               $3256 = $3256 + 1 | 0; //@line 56738
              }
              HEAP32[$1 >> 2] = $3256; //@line 56740
              $3261 = HEAP8[$3257] | 0; //@line 56741
              if ($3261 << 24 >> 24 == 61) {
               if ((HEAP8[$3256 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                $op_0_i1544 = 1;
                $storemerge4195_in = $3256;
               } else {
                $i_0_i_i3184 = $3256;
                $3268 = 61;
                label = 16204; //@line 56752
               }
              } else {
               $i_0_i_i3184 = $3256;
               $3268 = $3261;
               label = 16204; //@line 56756
              }
              if ((label | 0) == 16204) {
               while (1) {
                label = 0; //@line 56760
                if (!(($3268 << 24 >> 24 | 0) == 13 | ($3268 << 24 >> 24 | 0) == 32 | ($3268 << 24 >> 24 | 0) == 9 | ($3268 << 24 >> 24 | 0) == 10)) {
                 break;
                }
                $3269 = $i_0_i_i3184 + 1 | 0; //@line 56766
                $i_0_i_i3184 = $3269;
                $3268 = HEAP8[$cmd + 4 + $3269 | 0] | 0;
                label = 16204; //@line 56771
               }
               HEAP32[$1 >> 2] = $i_0_i_i3184; //@line 56774
               if ((HEAP8[$cmd + 4 + $i_0_i_i3184 | 0] | 0) != 33) {
                break;
               }
               if ((HEAP8[$i_0_i_i3184 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                $op_0_i1544 = 2;
                $storemerge4195_in = $i_0_i_i3184;
               } else {
                break;
               }
              }
              HEAP32[$1 >> 2] = $storemerge4195_in + 2; //@line 56793
              if ((_cmd_match_expr_cmp($cmd, $val2_i1543, $base) | 0) == 0) {
               label = 16209; //@line 56798
               break L20639;
              }
              if (($op_0_i1544 | 0) == 1) {
               HEAP32[$val2_i754 >> 2] = (HEAP32[$val2_i754 >> 2] | 0) == (HEAP32[$val2_i1543 >> 2] | 0); //@line 56806
               continue;
              } else if (($op_0_i1544 | 0) == 2) {
               HEAP32[$val2_i754 >> 2] = (HEAP32[$val2_i754 >> 2] | 0) != (HEAP32[$val2_i1543 >> 2] | 0); //@line 56814
               continue;
              } else {
               continue;
              }
             }
             HEAP32[$val2_i147 >> 2] = HEAP32[$val2_i754 >> 2] & HEAP32[$val2_i147 >> 2]; //@line 56824
             $3231 = $i_0_i_i3184; //@line 56826
            }
            if ((label | 0) == 17234) {
             label = 0; //@line 56829
             HEAP32[$1 >> 2] = $3231; //@line 56830
             $i_0_i_i_i451 = $3231; //@line 56832
            }
            while (1) {
             $3294 = $cmd + 4 + $i_0_i_i_i451 | 0; //@line 56836
             $3295 = HEAP8[$3294] | 0; //@line 56837
             if (($3295 << 24 >> 24 | 0) == 13 | ($3295 << 24 >> 24 | 0) == 32 | ($3295 << 24 >> 24 | 0) == 9 | ($3295 << 24 >> 24 | 0) == 10) {
              $i_0_i_i_i451 = $i_0_i_i_i451 + 1 | 0; //@line 56841
              continue;
             }
             HEAP32[$1 >> 2] = $i_0_i_i_i451; //@line 56844
             if ((HEAP8[$3294] | 0) != 94) {
              break;
             }
             $3301 = $i_0_i_i_i451 + 1 | 0; //@line 56850
             HEAP32[$1 >> 2] = $3301; //@line 56851
             if ((_cmd_match_expr_cmp($cmd, $val2_i450, $base) | 0) == 0) {
              label = 16258; //@line 56856
              break L20639;
             }
             while (1) {
              $3306 = HEAP32[$1 >> 2] | 0; //@line 56862
              while (1) {
               $3307 = $cmd + 4 + $3306 | 0; //@line 56865
               $3308 = HEAP8[$3307] | 0; //@line 56866
               if (!(($3308 << 24 >> 24 | 0) == 13 | ($3308 << 24 >> 24 | 0) == 32 | ($3308 << 24 >> 24 | 0) == 9 | ($3308 << 24 >> 24 | 0) == 10)) {
                break;
               }
               $3306 = $3306 + 1 | 0; //@line 56872
              }
              HEAP32[$1 >> 2] = $3306; //@line 56874
              $3311 = HEAP8[$3307] | 0; //@line 56875
              if ($3311 << 24 >> 24 == 61) {
               if ((HEAP8[$3306 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                $op_0_i1548 = 1;
                $storemerge4194_in = $3306;
               } else {
                $i_0_i_i3204 = $3306;
                $3318 = 61;
                label = 16224; //@line 56886
               }
              } else {
               $i_0_i_i3204 = $3306;
               $3318 = $3311;
               label = 16224; //@line 56890
              }
              if ((label | 0) == 16224) {
               while (1) {
                label = 0; //@line 56894
                if (!(($3318 << 24 >> 24 | 0) == 13 | ($3318 << 24 >> 24 | 0) == 32 | ($3318 << 24 >> 24 | 0) == 9 | ($3318 << 24 >> 24 | 0) == 10)) {
                 break;
                }
                $3319 = $i_0_i_i3204 + 1 | 0; //@line 56900
                $i_0_i_i3204 = $3319;
                $3318 = HEAP8[$cmd + 4 + $3319 | 0] | 0;
                label = 16224; //@line 56905
               }
               HEAP32[$1 >> 2] = $i_0_i_i3204; //@line 56908
               if ((HEAP8[$cmd + 4 + $i_0_i_i3204 | 0] | 0) != 33) {
                $3341 = $i_0_i_i3204; //@line 56912
                break;
               }
               if ((HEAP8[$i_0_i_i3204 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                $op_0_i1548 = 2;
                $storemerge4194_in = $i_0_i_i3204;
               } else {
                $3341 = $i_0_i_i3204; //@line 56922
                break;
               }
              }
              HEAP32[$1 >> 2] = $storemerge4194_in + 2; //@line 56929
              if ((_cmd_match_expr_cmp($cmd, $val2_i1547, $base) | 0) == 0) {
               label = 16229; //@line 56934
               break L20639;
              }
              if (($op_0_i1548 | 0) == 1) {
               HEAP32[$val2_i450 >> 2] = (HEAP32[$val2_i450 >> 2] | 0) == (HEAP32[$val2_i1547 >> 2] | 0); //@line 56942
               continue;
              } else if (($op_0_i1548 | 0) == 2) {
               HEAP32[$val2_i450 >> 2] = (HEAP32[$val2_i450 >> 2] | 0) != (HEAP32[$val2_i1547 >> 2] | 0); //@line 56950
               continue;
              } else {
               continue;
              }
             }
             while (1) {
              $3343 = $3341; //@line 56960
              while (1) {
               $3344 = $cmd + 4 + $3343 | 0; //@line 56963
               $3345 = HEAP8[$3344] | 0; //@line 56964
               if (!(($3345 << 24 >> 24 | 0) == 13 | ($3345 << 24 >> 24 | 0) == 32 | ($3345 << 24 >> 24 | 0) == 9 | ($3345 << 24 >> 24 | 0) == 10)) {
                break;
               }
               $3343 = $3343 + 1 | 0; //@line 56970
              }
              HEAP32[$1 >> 2] = $3343; //@line 56972
              $3348 = HEAP8[$3344] | 0; //@line 56973
              if ($3348 << 24 >> 24 == 38) {
               if ((HEAP8[$3343 + 1 + ($cmd + 4) | 0] | 0) == 38) {
                label = 17235; //@line 56981
                break;
               } else {
                $i_0_i_i1560 = $3343;
                $3355 = 38;
               }
              } else {
               $i_0_i_i1560 = $3343;
               $3355 = $3348;
              }
              while (1) {
               if (!(($3355 << 24 >> 24 | 0) == 13 | ($3355 << 24 >> 24 | 0) == 32 | ($3355 << 24 >> 24 | 0) == 9 | ($3355 << 24 >> 24 | 0) == 10)) {
                break;
               }
               $3356 = $i_0_i_i1560 + 1 | 0; //@line 56995
               $i_0_i_i1560 = $3356;
               $3355 = HEAP8[$cmd + 4 + $3356 | 0] | 0;
              }
              HEAP32[$1 >> 2] = $i_0_i_i1560; //@line 57002
              if ((HEAP8[$cmd + 4 + $i_0_i_i1560 | 0] | 0) != 38) {
               $3404 = $i_0_i_i1560; //@line 57006
               break;
              }
              $3361 = $i_0_i_i1560 + 1 | 0; //@line 57009
              HEAP32[$1 >> 2] = $3361; //@line 57010
              if ((_cmd_match_expr_cmp($cmd, $val2_i757, $base) | 0) == 0) {
               label = 16256; //@line 57015
               break L20639;
              }
              while (1) {
               $3366 = HEAP32[$1 >> 2] | 0; //@line 57021
               while (1) {
                $3367 = $cmd + 4 + $3366 | 0; //@line 57024
                $3368 = HEAP8[$3367] | 0; //@line 57025
                if (!(($3368 << 24 >> 24 | 0) == 13 | ($3368 << 24 >> 24 | 0) == 32 | ($3368 << 24 >> 24 | 0) == 9 | ($3368 << 24 >> 24 | 0) == 10)) {
                 break;
                }
                $3366 = $3366 + 1 | 0; //@line 57031
               }
               HEAP32[$1 >> 2] = $3366; //@line 57033
               $3371 = HEAP8[$3367] | 0; //@line 57034
               if ($3371 << 24 >> 24 == 61) {
                if ((HEAP8[$3366 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                 $op_0_i1571 = 1;
                 $storemerge4193_in = $3366;
                } else {
                 $i_0_i_i3224 = $3366;
                 $3378 = 61;
                 label = 16247; //@line 57045
                }
               } else {
                $i_0_i_i3224 = $3366;
                $3378 = $3371;
                label = 16247; //@line 57049
               }
               if ((label | 0) == 16247) {
                while (1) {
                 label = 0; //@line 57053
                 if (!(($3378 << 24 >> 24 | 0) == 13 | ($3378 << 24 >> 24 | 0) == 32 | ($3378 << 24 >> 24 | 0) == 9 | ($3378 << 24 >> 24 | 0) == 10)) {
                  break;
                 }
                 $3379 = $i_0_i_i3224 + 1 | 0; //@line 57059
                 $i_0_i_i3224 = $3379;
                 $3378 = HEAP8[$cmd + 4 + $3379 | 0] | 0;
                 label = 16247; //@line 57064
                }
                HEAP32[$1 >> 2] = $i_0_i_i3224; //@line 57067
                if ((HEAP8[$cmd + 4 + $i_0_i_i3224 | 0] | 0) != 33) {
                 break;
                }
                if ((HEAP8[$i_0_i_i3224 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                 $op_0_i1571 = 2;
                 $storemerge4193_in = $i_0_i_i3224;
                } else {
                 break;
                }
               }
               HEAP32[$1 >> 2] = $storemerge4193_in + 2; //@line 57086
               if ((_cmd_match_expr_cmp($cmd, $val2_i1570, $base) | 0) == 0) {
                label = 16252; //@line 57091
                break L20639;
               }
               if (($op_0_i1571 | 0) == 1) {
                HEAP32[$val2_i757 >> 2] = (HEAP32[$val2_i757 >> 2] | 0) == (HEAP32[$val2_i1570 >> 2] | 0); //@line 57099
                continue;
               } else if (($op_0_i1571 | 0) == 2) {
                HEAP32[$val2_i757 >> 2] = (HEAP32[$val2_i757 >> 2] | 0) != (HEAP32[$val2_i1570 >> 2] | 0); //@line 57107
                continue;
               } else {
                continue;
               }
              }
              HEAP32[$val2_i450 >> 2] = HEAP32[$val2_i757 >> 2] & HEAP32[$val2_i450 >> 2]; //@line 57117
              $3341 = $i_0_i_i3224; //@line 57119
             }
             if ((label | 0) == 17235) {
              label = 0; //@line 57122
              HEAP32[$1 >> 2] = $3341; //@line 57123
              $3404 = $3341; //@line 57125
             }
             HEAP32[$val2_i147 >> 2] = HEAP32[$val2_i450 >> 2] ^ HEAP32[$val2_i147 >> 2]; //@line 57131
             $i_0_i_i_i451 = $3404; //@line 57133
            }
            HEAP32[$val2_i27 >> 2] = HEAP32[$val2_i147 >> 2] | HEAP32[$val2_i27 >> 2]; //@line 57138
            $3171 = $i_0_i_i_i451; //@line 57140
           }
           if ((label | 0) == 17233) {
            label = 0; //@line 57143
            HEAP32[$1 >> 2] = $3171; //@line 57144
            $i_0_i_i_i92 = $3171; //@line 57146
           }
           while (1) {
            $3412 = $cmd + 4 + $i_0_i_i_i92 | 0; //@line 57150
            $3413 = HEAP8[$3412] | 0; //@line 57151
            if (($3413 << 24 >> 24 | 0) == 13 | ($3413 << 24 >> 24 | 0) == 32 | ($3413 << 24 >> 24 | 0) == 9 | ($3413 << 24 >> 24 | 0) == 10) {
             $i_0_i_i_i92 = $i_0_i_i_i92 + 1 | 0; //@line 57155
             continue;
            }
            HEAP32[$1 >> 2] = $i_0_i_i_i92; //@line 57158
            if ((HEAP8[$3412] | 0) != 38) {
             break;
            }
            if ((HEAP8[$i_0_i_i_i92 + 1 + ($cmd + 4) | 0] | 0) != 38) {
             break;
            }
            $5865 = $i_0_i_i_i92 + 2 | 0; //@line 57171
            HEAP32[$1 >> 2] = $5865; //@line 57172
            if ((_cmd_match_expr_cmp($cmd, $val2_i91, $base) | 0) == 0) {
             label = 16445; //@line 57177
             break L20639;
            }
            while (1) {
             $3424 = HEAP32[$1 >> 2] | 0; //@line 57183
             while (1) {
              $3425 = $cmd + 4 + $3424 | 0; //@line 57186
              $3426 = HEAP8[$3425] | 0; //@line 57187
              if (!(($3426 << 24 >> 24 | 0) == 13 | ($3426 << 24 >> 24 | 0) == 32 | ($3426 << 24 >> 24 | 0) == 9 | ($3426 << 24 >> 24 | 0) == 10)) {
               break;
              }
              $3424 = $3424 + 1 | 0; //@line 57193
             }
             HEAP32[$1 >> 2] = $3424; //@line 57195
             $3429 = HEAP8[$3425] | 0; //@line 57196
             if ($3429 << 24 >> 24 == 61) {
              if ((HEAP8[$3424 + 1 + ($cmd + 4) | 0] | 0) == 61) {
               $op_0_i1575 = 1;
               $storemerge4192_in = $3424;
              } else {
               $i_0_i_i3244 = $3424;
               $3436 = 61;
               label = 16271; //@line 57207
              }
             } else {
              $i_0_i_i3244 = $3424;
              $3436 = $3429;
              label = 16271; //@line 57211
             }
             if ((label | 0) == 16271) {
              while (1) {
               label = 0; //@line 57215
               if (!(($3436 << 24 >> 24 | 0) == 13 | ($3436 << 24 >> 24 | 0) == 32 | ($3436 << 24 >> 24 | 0) == 9 | ($3436 << 24 >> 24 | 0) == 10)) {
                break;
               }
               $3437 = $i_0_i_i3244 + 1 | 0; //@line 57221
               $i_0_i_i3244 = $3437;
               $3436 = HEAP8[$cmd + 4 + $3437 | 0] | 0;
               label = 16271; //@line 57226
              }
              HEAP32[$1 >> 2] = $i_0_i_i3244; //@line 57229
              if ((HEAP8[$cmd + 4 + $i_0_i_i3244 | 0] | 0) != 33) {
               $3459 = $i_0_i_i3244; //@line 57233
               break;
              }
              if ((HEAP8[$i_0_i_i3244 + 1 + ($cmd + 4) | 0] | 0) == 61) {
               $op_0_i1575 = 2;
               $storemerge4192_in = $i_0_i_i3244;
              } else {
               $3459 = $i_0_i_i3244; //@line 57243
               break;
              }
             }
             HEAP32[$1 >> 2] = $storemerge4192_in + 2; //@line 57250
             if ((_cmd_match_expr_cmp($cmd, $val2_i1574, $base) | 0) == 0) {
              label = 16276; //@line 57255
              break L20639;
             }
             if (($op_0_i1575 | 0) == 1) {
              HEAP32[$val2_i91 >> 2] = (HEAP32[$val2_i91 >> 2] | 0) == (HEAP32[$val2_i1574 >> 2] | 0); //@line 57263
              continue;
             } else if (($op_0_i1575 | 0) == 2) {
              HEAP32[$val2_i91 >> 2] = (HEAP32[$val2_i91 >> 2] | 0) != (HEAP32[$val2_i1574 >> 2] | 0); //@line 57271
              continue;
             } else {
              continue;
             }
            }
            while (1) {
             $3461 = $3459; //@line 57281
             while (1) {
              $3462 = $cmd + 4 + $3461 | 0; //@line 57284
              $3463 = HEAP8[$3462] | 0; //@line 57285
              if (!(($3463 << 24 >> 24 | 0) == 13 | ($3463 << 24 >> 24 | 0) == 32 | ($3463 << 24 >> 24 | 0) == 9 | ($3463 << 24 >> 24 | 0) == 10)) {
               break;
              }
              $3461 = $3461 + 1 | 0; //@line 57291
             }
             HEAP32[$1 >> 2] = $3461; //@line 57293
             $3466 = HEAP8[$3462] | 0; //@line 57294
             if ($3466 << 24 >> 24 == 38) {
              if ((HEAP8[$3461 + 1 + ($cmd + 4) | 0] | 0) == 38) {
               label = 17237; //@line 57302
               break;
              } else {
               $i_0_i_i1587 = $3461;
               $3473 = 38;
              }
             } else {
              $i_0_i_i1587 = $3461;
              $3473 = $3466;
             }
             while (1) {
              if (!(($3473 << 24 >> 24 | 0) == 13 | ($3473 << 24 >> 24 | 0) == 32 | ($3473 << 24 >> 24 | 0) == 9 | ($3473 << 24 >> 24 | 0) == 10)) {
               break;
              }
              $3474 = $i_0_i_i1587 + 1 | 0; //@line 57316
              $i_0_i_i1587 = $3474;
              $3473 = HEAP8[$cmd + 4 + $3474 | 0] | 0;
             }
             HEAP32[$1 >> 2] = $i_0_i_i1587; //@line 57323
             if ((HEAP8[$cmd + 4 + $i_0_i_i1587 | 0] | 0) != 38) {
              $i_0_i_i_i463 = $i_0_i_i1587; //@line 57327
              break;
             }
             $3479 = $i_0_i_i1587 + 1 | 0; //@line 57330
             HEAP32[$1 >> 2] = $3479; //@line 57331
             if ((_cmd_match_expr_cmp($cmd, $val2_i760, $base) | 0) == 0) {
              label = 16303; //@line 57336
              break L20639;
             }
             while (1) {
              $3484 = HEAP32[$1 >> 2] | 0; //@line 57342
              while (1) {
               $3485 = $cmd + 4 + $3484 | 0; //@line 57345
               $3486 = HEAP8[$3485] | 0; //@line 57346
               if (!(($3486 << 24 >> 24 | 0) == 13 | ($3486 << 24 >> 24 | 0) == 32 | ($3486 << 24 >> 24 | 0) == 9 | ($3486 << 24 >> 24 | 0) == 10)) {
                break;
               }
               $3484 = $3484 + 1 | 0; //@line 57352
              }
              HEAP32[$1 >> 2] = $3484; //@line 57354
              $3489 = HEAP8[$3485] | 0; //@line 57355
              if ($3489 << 24 >> 24 == 61) {
               if ((HEAP8[$3484 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                $op_0_i1598 = 1;
                $storemerge4191_in = $3484;
               } else {
                $i_0_i_i3264 = $3484;
                $3496 = 61;
                label = 16294; //@line 57366
               }
              } else {
               $i_0_i_i3264 = $3484;
               $3496 = $3489;
               label = 16294; //@line 57370
              }
              if ((label | 0) == 16294) {
               while (1) {
                label = 0; //@line 57374
                if (!(($3496 << 24 >> 24 | 0) == 13 | ($3496 << 24 >> 24 | 0) == 32 | ($3496 << 24 >> 24 | 0) == 9 | ($3496 << 24 >> 24 | 0) == 10)) {
                 break;
                }
                $3497 = $i_0_i_i3264 + 1 | 0; //@line 57380
                $i_0_i_i3264 = $3497;
                $3496 = HEAP8[$cmd + 4 + $3497 | 0] | 0;
                label = 16294; //@line 57385
               }
               HEAP32[$1 >> 2] = $i_0_i_i3264; //@line 57388
               if ((HEAP8[$cmd + 4 + $i_0_i_i3264 | 0] | 0) != 33) {
                break;
               }
               if ((HEAP8[$i_0_i_i3264 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                $op_0_i1598 = 2;
                $storemerge4191_in = $i_0_i_i3264;
               } else {
                break;
               }
              }
              HEAP32[$1 >> 2] = $storemerge4191_in + 2; //@line 57407
              if ((_cmd_match_expr_cmp($cmd, $val2_i1597, $base) | 0) == 0) {
               label = 16299; //@line 57412
               break L20639;
              }
              if (($op_0_i1598 | 0) == 1) {
               HEAP32[$val2_i760 >> 2] = (HEAP32[$val2_i760 >> 2] | 0) == (HEAP32[$val2_i1597 >> 2] | 0); //@line 57420
               continue;
              } else if (($op_0_i1598 | 0) == 2) {
               HEAP32[$val2_i760 >> 2] = (HEAP32[$val2_i760 >> 2] | 0) != (HEAP32[$val2_i1597 >> 2] | 0); //@line 57428
               continue;
              } else {
               continue;
              }
             }
             HEAP32[$val2_i91 >> 2] = HEAP32[$val2_i760 >> 2] & HEAP32[$val2_i91 >> 2]; //@line 57438
             $3459 = $i_0_i_i3264; //@line 57440
            }
            if ((label | 0) == 17237) {
             label = 0; //@line 57443
             HEAP32[$1 >> 2] = $3459; //@line 57444
             $i_0_i_i_i463 = $3459; //@line 57446
            }
            while (1) {
             $3522 = $cmd + 4 + $i_0_i_i_i463 | 0; //@line 57450
             $3523 = HEAP8[$3522] | 0; //@line 57451
             if (($3523 << 24 >> 24 | 0) == 13 | ($3523 << 24 >> 24 | 0) == 32 | ($3523 << 24 >> 24 | 0) == 9 | ($3523 << 24 >> 24 | 0) == 10) {
              $i_0_i_i_i463 = $i_0_i_i_i463 + 1 | 0; //@line 57455
              continue;
             }
             HEAP32[$1 >> 2] = $i_0_i_i_i463; //@line 57458
             if ((HEAP8[$3522] | 0) != 94) {
              $3636 = $i_0_i_i_i463; //@line 57462
              break;
             }
             $3529 = $i_0_i_i_i463 + 1 | 0; //@line 57465
             HEAP32[$1 >> 2] = $3529; //@line 57466
             if ((_cmd_match_expr_cmp($cmd, $val2_i462, $base) | 0) == 0) {
              label = 16348; //@line 57471
              break L20639;
             }
             while (1) {
              $3534 = HEAP32[$1 >> 2] | 0; //@line 57477
              while (1) {
               $3535 = $cmd + 4 + $3534 | 0; //@line 57480
               $3536 = HEAP8[$3535] | 0; //@line 57481
               if (!(($3536 << 24 >> 24 | 0) == 13 | ($3536 << 24 >> 24 | 0) == 32 | ($3536 << 24 >> 24 | 0) == 9 | ($3536 << 24 >> 24 | 0) == 10)) {
                break;
               }
               $3534 = $3534 + 1 | 0; //@line 57487
              }
              HEAP32[$1 >> 2] = $3534; //@line 57489
              $3539 = HEAP8[$3535] | 0; //@line 57490
              if ($3539 << 24 >> 24 == 61) {
               if ((HEAP8[$3534 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                $op_0_i1602 = 1;
                $storemerge4190_in = $3534;
               } else {
                $i_0_i_i3284 = $3534;
                $3546 = 61;
                label = 16314; //@line 57501
               }
              } else {
               $i_0_i_i3284 = $3534;
               $3546 = $3539;
               label = 16314; //@line 57505
              }
              if ((label | 0) == 16314) {
               while (1) {
                label = 0; //@line 57509
                if (!(($3546 << 24 >> 24 | 0) == 13 | ($3546 << 24 >> 24 | 0) == 32 | ($3546 << 24 >> 24 | 0) == 9 | ($3546 << 24 >> 24 | 0) == 10)) {
                 break;
                }
                $3547 = $i_0_i_i3284 + 1 | 0; //@line 57515
                $i_0_i_i3284 = $3547;
                $3546 = HEAP8[$cmd + 4 + $3547 | 0] | 0;
                label = 16314; //@line 57520
               }
               HEAP32[$1 >> 2] = $i_0_i_i3284; //@line 57523
               if ((HEAP8[$cmd + 4 + $i_0_i_i3284 | 0] | 0) != 33) {
                $3569 = $i_0_i_i3284; //@line 57527
                break;
               }
               if ((HEAP8[$i_0_i_i3284 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                $op_0_i1602 = 2;
                $storemerge4190_in = $i_0_i_i3284;
               } else {
                $3569 = $i_0_i_i3284; //@line 57537
                break;
               }
              }
              HEAP32[$1 >> 2] = $storemerge4190_in + 2; //@line 57544
              if ((_cmd_match_expr_cmp($cmd, $val2_i1601, $base) | 0) == 0) {
               label = 16319; //@line 57549
               break L20639;
              }
              if (($op_0_i1602 | 0) == 1) {
               HEAP32[$val2_i462 >> 2] = (HEAP32[$val2_i462 >> 2] | 0) == (HEAP32[$val2_i1601 >> 2] | 0); //@line 57557
               continue;
              } else if (($op_0_i1602 | 0) == 2) {
               HEAP32[$val2_i462 >> 2] = (HEAP32[$val2_i462 >> 2] | 0) != (HEAP32[$val2_i1601 >> 2] | 0); //@line 57565
               continue;
              } else {
               continue;
              }
             }
             while (1) {
              $3571 = $3569; //@line 57575
              while (1) {
               $3572 = $cmd + 4 + $3571 | 0; //@line 57578
               $3573 = HEAP8[$3572] | 0; //@line 57579
               if (!(($3573 << 24 >> 24 | 0) == 13 | ($3573 << 24 >> 24 | 0) == 32 | ($3573 << 24 >> 24 | 0) == 9 | ($3573 << 24 >> 24 | 0) == 10)) {
                break;
               }
               $3571 = $3571 + 1 | 0; //@line 57585
              }
              HEAP32[$1 >> 2] = $3571; //@line 57587
              $3576 = HEAP8[$3572] | 0; //@line 57588
              if ($3576 << 24 >> 24 == 38) {
               if ((HEAP8[$3571 + 1 + ($cmd + 4) | 0] | 0) == 38) {
                label = 17238; //@line 57596
                break;
               } else {
                $i_0_i_i1614 = $3571;
                $3583 = 38;
               }
              } else {
               $i_0_i_i1614 = $3571;
               $3583 = $3576;
              }
              while (1) {
               if (!(($3583 << 24 >> 24 | 0) == 13 | ($3583 << 24 >> 24 | 0) == 32 | ($3583 << 24 >> 24 | 0) == 9 | ($3583 << 24 >> 24 | 0) == 10)) {
                break;
               }
               $3584 = $i_0_i_i1614 + 1 | 0; //@line 57610
               $i_0_i_i1614 = $3584;
               $3583 = HEAP8[$cmd + 4 + $3584 | 0] | 0;
              }
              HEAP32[$1 >> 2] = $i_0_i_i1614; //@line 57617
              if ((HEAP8[$cmd + 4 + $i_0_i_i1614 | 0] | 0) != 38) {
               $3632 = $i_0_i_i1614; //@line 57621
               break;
              }
              $3589 = $i_0_i_i1614 + 1 | 0; //@line 57624
              HEAP32[$1 >> 2] = $3589; //@line 57625
              if ((_cmd_match_expr_cmp($cmd, $val2_i763, $base) | 0) == 0) {
               label = 16346; //@line 57630
               break L20639;
              }
              while (1) {
               $3594 = HEAP32[$1 >> 2] | 0; //@line 57636
               while (1) {
                $3595 = $cmd + 4 + $3594 | 0; //@line 57639
                $3596 = HEAP8[$3595] | 0; //@line 57640
                if (!(($3596 << 24 >> 24 | 0) == 13 | ($3596 << 24 >> 24 | 0) == 32 | ($3596 << 24 >> 24 | 0) == 9 | ($3596 << 24 >> 24 | 0) == 10)) {
                 break;
                }
                $3594 = $3594 + 1 | 0; //@line 57646
               }
               HEAP32[$1 >> 2] = $3594; //@line 57648
               $3599 = HEAP8[$3595] | 0; //@line 57649
               if ($3599 << 24 >> 24 == 61) {
                if ((HEAP8[$3594 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                 $op_0_i1625 = 1;
                 $storemerge4189_in = $3594;
                } else {
                 $i_0_i_i3304 = $3594;
                 $3606 = 61;
                 label = 16337; //@line 57660
                }
               } else {
                $i_0_i_i3304 = $3594;
                $3606 = $3599;
                label = 16337; //@line 57664
               }
               if ((label | 0) == 16337) {
                while (1) {
                 label = 0; //@line 57668
                 if (!(($3606 << 24 >> 24 | 0) == 13 | ($3606 << 24 >> 24 | 0) == 32 | ($3606 << 24 >> 24 | 0) == 9 | ($3606 << 24 >> 24 | 0) == 10)) {
                  break;
                 }
                 $3607 = $i_0_i_i3304 + 1 | 0; //@line 57674
                 $i_0_i_i3304 = $3607;
                 $3606 = HEAP8[$cmd + 4 + $3607 | 0] | 0;
                 label = 16337; //@line 57679
                }
                HEAP32[$1 >> 2] = $i_0_i_i3304; //@line 57682
                if ((HEAP8[$cmd + 4 + $i_0_i_i3304 | 0] | 0) != 33) {
                 break;
                }
                if ((HEAP8[$i_0_i_i3304 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                 $op_0_i1625 = 2;
                 $storemerge4189_in = $i_0_i_i3304;
                } else {
                 break;
                }
               }
               HEAP32[$1 >> 2] = $storemerge4189_in + 2; //@line 57701
               if ((_cmd_match_expr_cmp($cmd, $val2_i1624, $base) | 0) == 0) {
                label = 16342; //@line 57706
                break L20639;
               }
               if (($op_0_i1625 | 0) == 1) {
                HEAP32[$val2_i763 >> 2] = (HEAP32[$val2_i763 >> 2] | 0) == (HEAP32[$val2_i1624 >> 2] | 0); //@line 57714
                continue;
               } else if (($op_0_i1625 | 0) == 2) {
                HEAP32[$val2_i763 >> 2] = (HEAP32[$val2_i763 >> 2] | 0) != (HEAP32[$val2_i1624 >> 2] | 0); //@line 57722
                continue;
               } else {
                continue;
               }
              }
              HEAP32[$val2_i462 >> 2] = HEAP32[$val2_i763 >> 2] & HEAP32[$val2_i462 >> 2]; //@line 57732
              $3569 = $i_0_i_i3304; //@line 57734
             }
             if ((label | 0) == 17238) {
              label = 0; //@line 57737
              HEAP32[$1 >> 2] = $3569; //@line 57738
              $3632 = $3569; //@line 57740
             }
             HEAP32[$val2_i91 >> 2] = HEAP32[$val2_i462 >> 2] ^ HEAP32[$val2_i91 >> 2]; //@line 57746
             $i_0_i_i_i463 = $3632; //@line 57748
            }
            while (1) {
             $3638 = $3636; //@line 57753
             while (1) {
              $3639 = $cmd + 4 + $3638 | 0; //@line 57756
              $3640 = HEAP8[$3639] | 0; //@line 57757
              if (!(($3640 << 24 >> 24 | 0) == 13 | ($3640 << 24 >> 24 | 0) == 32 | ($3640 << 24 >> 24 | 0) == 9 | ($3640 << 24 >> 24 | 0) == 10)) {
               break;
              }
              $3638 = $3638 + 1 | 0; //@line 57763
             }
             HEAP32[$1 >> 2] = $3638; //@line 57765
             $3643 = HEAP8[$3639] | 0; //@line 57766
             if ($3643 << 24 >> 24 == 124) {
              if ((HEAP8[$3638 + 1 + ($cmd + 4) | 0] | 0) == 124) {
               label = 17239; //@line 57774
               break;
              } else {
               $i_0_i_i483 = $3638;
               $3650 = 124;
              }
             } else {
              $i_0_i_i483 = $3638;
              $3650 = $3643;
             }
             while (1) {
              if (!(($3650 << 24 >> 24 | 0) == 13 | ($3650 << 24 >> 24 | 0) == 32 | ($3650 << 24 >> 24 | 0) == 9 | ($3650 << 24 >> 24 | 0) == 10)) {
               break;
              }
              $3651 = $i_0_i_i483 + 1 | 0; //@line 57788
              $i_0_i_i483 = $3651;
              $3650 = HEAP8[$cmd + 4 + $3651 | 0] | 0;
             }
             HEAP32[$1 >> 2] = $i_0_i_i483; //@line 57795
             if ((HEAP8[$cmd + 4 + $i_0_i_i483 | 0] | 0) != 124) {
              $3877 = $i_0_i_i483; //@line 57799
              break;
             }
             $3656 = $i_0_i_i483 + 1 | 0; //@line 57802
             HEAP32[$1 >> 2] = $3656; //@line 57803
             if ((_cmd_match_expr_cmp($cmd, $val2_i150, $base) | 0) == 0) {
              label = 16443; //@line 57808
              break L20639;
             }
             while (1) {
              $3661 = HEAP32[$1 >> 2] | 0; //@line 57814
              while (1) {
               $3662 = $cmd + 4 + $3661 | 0; //@line 57817
               $3663 = HEAP8[$3662] | 0; //@line 57818
               if (!(($3663 << 24 >> 24 | 0) == 13 | ($3663 << 24 >> 24 | 0) == 32 | ($3663 << 24 >> 24 | 0) == 9 | ($3663 << 24 >> 24 | 0) == 10)) {
                break;
               }
               $3661 = $3661 + 1 | 0; //@line 57824
              }
              HEAP32[$1 >> 2] = $3661; //@line 57826
              $3666 = HEAP8[$3662] | 0; //@line 57827
              if ($3666 << 24 >> 24 == 61) {
               if ((HEAP8[$3661 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                $op_0_i1629 = 1;
                $storemerge4188_in = $3661;
               } else {
                $i_0_i_i3324 = $3661;
                $3673 = 61;
                label = 16364; //@line 57838
               }
              } else {
               $i_0_i_i3324 = $3661;
               $3673 = $3666;
               label = 16364; //@line 57842
              }
              if ((label | 0) == 16364) {
               while (1) {
                label = 0; //@line 57846
                if (!(($3673 << 24 >> 24 | 0) == 13 | ($3673 << 24 >> 24 | 0) == 32 | ($3673 << 24 >> 24 | 0) == 9 | ($3673 << 24 >> 24 | 0) == 10)) {
                 break;
                }
                $3674 = $i_0_i_i3324 + 1 | 0; //@line 57852
                $i_0_i_i3324 = $3674;
                $3673 = HEAP8[$cmd + 4 + $3674 | 0] | 0;
                label = 16364; //@line 57857
               }
               HEAP32[$1 >> 2] = $i_0_i_i3324; //@line 57860
               if ((HEAP8[$cmd + 4 + $i_0_i_i3324 | 0] | 0) != 33) {
                $3696 = $i_0_i_i3324; //@line 57864
                break;
               }
               if ((HEAP8[$i_0_i_i3324 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                $op_0_i1629 = 2;
                $storemerge4188_in = $i_0_i_i3324;
               } else {
                $3696 = $i_0_i_i3324; //@line 57874
                break;
               }
              }
              HEAP32[$1 >> 2] = $storemerge4188_in + 2; //@line 57881
              if ((_cmd_match_expr_cmp($cmd, $val2_i1628, $base) | 0) == 0) {
               label = 16369; //@line 57886
               break L20639;
              }
              if (($op_0_i1629 | 0) == 1) {
               HEAP32[$val2_i150 >> 2] = (HEAP32[$val2_i150 >> 2] | 0) == (HEAP32[$val2_i1628 >> 2] | 0); //@line 57894
               continue;
              } else if (($op_0_i1629 | 0) == 2) {
               HEAP32[$val2_i150 >> 2] = (HEAP32[$val2_i150 >> 2] | 0) != (HEAP32[$val2_i1628 >> 2] | 0); //@line 57902
               continue;
              } else {
               continue;
              }
             }
             while (1) {
              $3698 = $3696; //@line 57912
              while (1) {
               $3699 = $cmd + 4 + $3698 | 0; //@line 57915
               $3700 = HEAP8[$3699] | 0; //@line 57916
               if (!(($3700 << 24 >> 24 | 0) == 13 | ($3700 << 24 >> 24 | 0) == 32 | ($3700 << 24 >> 24 | 0) == 9 | ($3700 << 24 >> 24 | 0) == 10)) {
                break;
               }
               $3698 = $3698 + 1 | 0; //@line 57922
              }
              HEAP32[$1 >> 2] = $3698; //@line 57924
              $3703 = HEAP8[$3699] | 0; //@line 57925
              if ($3703 << 24 >> 24 == 38) {
               if ((HEAP8[$3698 + 1 + ($cmd + 4) | 0] | 0) == 38) {
                label = 17240; //@line 57933
                break;
               } else {
                $i_0_i_i1641 = $3698;
                $3710 = 38;
               }
              } else {
               $i_0_i_i1641 = $3698;
               $3710 = $3703;
              }
              while (1) {
               if (!(($3710 << 24 >> 24 | 0) == 13 | ($3710 << 24 >> 24 | 0) == 32 | ($3710 << 24 >> 24 | 0) == 9 | ($3710 << 24 >> 24 | 0) == 10)) {
                break;
               }
               $3711 = $i_0_i_i1641 + 1 | 0; //@line 57947
               $i_0_i_i1641 = $3711;
               $3710 = HEAP8[$cmd + 4 + $3711 | 0] | 0;
              }
              HEAP32[$1 >> 2] = $i_0_i_i1641; //@line 57954
              if ((HEAP8[$cmd + 4 + $i_0_i_i1641 | 0] | 0) != 38) {
               $i_0_i_i_i494 = $i_0_i_i1641; //@line 57958
               break;
              }
              $3716 = $i_0_i_i1641 + 1 | 0; //@line 57961
              HEAP32[$1 >> 2] = $3716; //@line 57962
              if ((_cmd_match_expr_cmp($cmd, $val2_i766, $base) | 0) == 0) {
               label = 16396; //@line 57967
               break L20639;
              }
              while (1) {
               $3721 = HEAP32[$1 >> 2] | 0; //@line 57973
               while (1) {
                $3722 = $cmd + 4 + $3721 | 0; //@line 57976
                $3723 = HEAP8[$3722] | 0; //@line 57977
                if (!(($3723 << 24 >> 24 | 0) == 13 | ($3723 << 24 >> 24 | 0) == 32 | ($3723 << 24 >> 24 | 0) == 9 | ($3723 << 24 >> 24 | 0) == 10)) {
                 break;
                }
                $3721 = $3721 + 1 | 0; //@line 57983
               }
               HEAP32[$1 >> 2] = $3721; //@line 57985
               $3726 = HEAP8[$3722] | 0; //@line 57986
               if ($3726 << 24 >> 24 == 61) {
                if ((HEAP8[$3721 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                 $op_0_i1652 = 1;
                 $storemerge4187_in = $3721;
                } else {
                 $i_0_i_i3344 = $3721;
                 $3733 = 61;
                 label = 16387; //@line 57997
                }
               } else {
                $i_0_i_i3344 = $3721;
                $3733 = $3726;
                label = 16387; //@line 58001
               }
               if ((label | 0) == 16387) {
                while (1) {
                 label = 0; //@line 58005
                 if (!(($3733 << 24 >> 24 | 0) == 13 | ($3733 << 24 >> 24 | 0) == 32 | ($3733 << 24 >> 24 | 0) == 9 | ($3733 << 24 >> 24 | 0) == 10)) {
                  break;
                 }
                 $3734 = $i_0_i_i3344 + 1 | 0; //@line 58011
                 $i_0_i_i3344 = $3734;
                 $3733 = HEAP8[$cmd + 4 + $3734 | 0] | 0;
                 label = 16387; //@line 58016
                }
                HEAP32[$1 >> 2] = $i_0_i_i3344; //@line 58019
                if ((HEAP8[$cmd + 4 + $i_0_i_i3344 | 0] | 0) != 33) {
                 break;
                }
                if ((HEAP8[$i_0_i_i3344 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                 $op_0_i1652 = 2;
                 $storemerge4187_in = $i_0_i_i3344;
                } else {
                 break;
                }
               }
               HEAP32[$1 >> 2] = $storemerge4187_in + 2; //@line 58038
               if ((_cmd_match_expr_cmp($cmd, $val2_i1651, $base) | 0) == 0) {
                label = 16392; //@line 58043
                break L20639;
               }
               if (($op_0_i1652 | 0) == 1) {
                HEAP32[$val2_i766 >> 2] = (HEAP32[$val2_i766 >> 2] | 0) == (HEAP32[$val2_i1651 >> 2] | 0); //@line 58051
                continue;
               } else if (($op_0_i1652 | 0) == 2) {
                HEAP32[$val2_i766 >> 2] = (HEAP32[$val2_i766 >> 2] | 0) != (HEAP32[$val2_i1651 >> 2] | 0); //@line 58059
                continue;
               } else {
                continue;
               }
              }
              HEAP32[$val2_i150 >> 2] = HEAP32[$val2_i766 >> 2] & HEAP32[$val2_i150 >> 2]; //@line 58069
              $3696 = $i_0_i_i3344; //@line 58071
             }
             if ((label | 0) == 17240) {
              label = 0; //@line 58074
              HEAP32[$1 >> 2] = $3696; //@line 58075
              $i_0_i_i_i494 = $3696; //@line 58077
             }
             while (1) {
              $3759 = $cmd + 4 + $i_0_i_i_i494 | 0; //@line 58081
              $3760 = HEAP8[$3759] | 0; //@line 58082
              if (($3760 << 24 >> 24 | 0) == 13 | ($3760 << 24 >> 24 | 0) == 32 | ($3760 << 24 >> 24 | 0) == 9 | ($3760 << 24 >> 24 | 0) == 10) {
               $i_0_i_i_i494 = $i_0_i_i_i494 + 1 | 0; //@line 58086
               continue;
              }
              HEAP32[$1 >> 2] = $i_0_i_i_i494; //@line 58089
              if ((HEAP8[$3759] | 0) != 94) {
               break;
              }
              $3766 = $i_0_i_i_i494 + 1 | 0; //@line 58095
              HEAP32[$1 >> 2] = $3766; //@line 58096
              if ((_cmd_match_expr_cmp($cmd, $val2_i493, $base) | 0) == 0) {
               label = 16441; //@line 58101
               break L20639;
              }
              while (1) {
               $3771 = HEAP32[$1 >> 2] | 0; //@line 58107
               while (1) {
                $3772 = $cmd + 4 + $3771 | 0; //@line 58110
                $3773 = HEAP8[$3772] | 0; //@line 58111
                if (!(($3773 << 24 >> 24 | 0) == 13 | ($3773 << 24 >> 24 | 0) == 32 | ($3773 << 24 >> 24 | 0) == 9 | ($3773 << 24 >> 24 | 0) == 10)) {
                 break;
                }
                $3771 = $3771 + 1 | 0; //@line 58117
               }
               HEAP32[$1 >> 2] = $3771; //@line 58119
               $3776 = HEAP8[$3772] | 0; //@line 58120
               if ($3776 << 24 >> 24 == 61) {
                if ((HEAP8[$3771 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                 $op_0_i1656 = 1;
                 $storemerge4186_in = $3771;
                } else {
                 $i_0_i_i3364 = $3771;
                 $3783 = 61;
                 label = 16407; //@line 58131
                }
               } else {
                $i_0_i_i3364 = $3771;
                $3783 = $3776;
                label = 16407; //@line 58135
               }
               if ((label | 0) == 16407) {
                while (1) {
                 label = 0; //@line 58139
                 if (!(($3783 << 24 >> 24 | 0) == 13 | ($3783 << 24 >> 24 | 0) == 32 | ($3783 << 24 >> 24 | 0) == 9 | ($3783 << 24 >> 24 | 0) == 10)) {
                  break;
                 }
                 $3784 = $i_0_i_i3364 + 1 | 0; //@line 58145
                 $i_0_i_i3364 = $3784;
                 $3783 = HEAP8[$cmd + 4 + $3784 | 0] | 0;
                 label = 16407; //@line 58150
                }
                HEAP32[$1 >> 2] = $i_0_i_i3364; //@line 58153
                if ((HEAP8[$cmd + 4 + $i_0_i_i3364 | 0] | 0) != 33) {
                 $3806 = $i_0_i_i3364; //@line 58157
                 break;
                }
                if ((HEAP8[$i_0_i_i3364 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                 $op_0_i1656 = 2;
                 $storemerge4186_in = $i_0_i_i3364;
                } else {
                 $3806 = $i_0_i_i3364; //@line 58167
                 break;
                }
               }
               HEAP32[$1 >> 2] = $storemerge4186_in + 2; //@line 58174
               if ((_cmd_match_expr_cmp($cmd, $val2_i1655, $base) | 0) == 0) {
                label = 16412; //@line 58179
                break L20639;
               }
               if (($op_0_i1656 | 0) == 1) {
                HEAP32[$val2_i493 >> 2] = (HEAP32[$val2_i493 >> 2] | 0) == (HEAP32[$val2_i1655 >> 2] | 0); //@line 58187
                continue;
               } else if (($op_0_i1656 | 0) == 2) {
                HEAP32[$val2_i493 >> 2] = (HEAP32[$val2_i493 >> 2] | 0) != (HEAP32[$val2_i1655 >> 2] | 0); //@line 58195
                continue;
               } else {
                continue;
               }
              }
              while (1) {
               $3808 = $3806; //@line 58205
               while (1) {
                $3809 = $cmd + 4 + $3808 | 0; //@line 58208
                $3810 = HEAP8[$3809] | 0; //@line 58209
                if (!(($3810 << 24 >> 24 | 0) == 13 | ($3810 << 24 >> 24 | 0) == 32 | ($3810 << 24 >> 24 | 0) == 9 | ($3810 << 24 >> 24 | 0) == 10)) {
                 break;
                }
                $3808 = $3808 + 1 | 0; //@line 58215
               }
               HEAP32[$1 >> 2] = $3808; //@line 58217
               $3813 = HEAP8[$3809] | 0; //@line 58218
               if ($3813 << 24 >> 24 == 38) {
                if ((HEAP8[$3808 + 1 + ($cmd + 4) | 0] | 0) == 38) {
                 label = 17241; //@line 58226
                 break;
                } else {
                 $i_0_i_i1668 = $3808;
                 $3820 = 38;
                }
               } else {
                $i_0_i_i1668 = $3808;
                $3820 = $3813;
               }
               while (1) {
                if (!(($3820 << 24 >> 24 | 0) == 13 | ($3820 << 24 >> 24 | 0) == 32 | ($3820 << 24 >> 24 | 0) == 9 | ($3820 << 24 >> 24 | 0) == 10)) {
                 break;
                }
                $3821 = $i_0_i_i1668 + 1 | 0; //@line 58240
                $i_0_i_i1668 = $3821;
                $3820 = HEAP8[$cmd + 4 + $3821 | 0] | 0;
               }
               HEAP32[$1 >> 2] = $i_0_i_i1668; //@line 58247
               if ((HEAP8[$cmd + 4 + $i_0_i_i1668 | 0] | 0) != 38) {
                $3869 = $i_0_i_i1668; //@line 58251
                break;
               }
               $3826 = $i_0_i_i1668 + 1 | 0; //@line 58254
               HEAP32[$1 >> 2] = $3826; //@line 58255
               if ((_cmd_match_expr_cmp($cmd, $val2_i769, $base) | 0) == 0) {
                label = 16439; //@line 58260
                break L20639;
               }
               while (1) {
                $3831 = HEAP32[$1 >> 2] | 0; //@line 58266
                while (1) {
                 $3832 = $cmd + 4 + $3831 | 0; //@line 58269
                 $3833 = HEAP8[$3832] | 0; //@line 58270
                 if (!(($3833 << 24 >> 24 | 0) == 13 | ($3833 << 24 >> 24 | 0) == 32 | ($3833 << 24 >> 24 | 0) == 9 | ($3833 << 24 >> 24 | 0) == 10)) {
                  break;
                 }
                 $3831 = $3831 + 1 | 0; //@line 58276
                }
                HEAP32[$1 >> 2] = $3831; //@line 58278
                $3836 = HEAP8[$3832] | 0; //@line 58279
                if ($3836 << 24 >> 24 == 61) {
                 if ((HEAP8[$3831 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                  $op_0_i1679 = 1;
                  $storemerge4185_in = $3831;
                 } else {
                  $i_0_i_i3384 = $3831;
                  $3843 = 61;
                  label = 16430; //@line 58290
                 }
                } else {
                 $i_0_i_i3384 = $3831;
                 $3843 = $3836;
                 label = 16430; //@line 58294
                }
                if ((label | 0) == 16430) {
                 while (1) {
                  label = 0; //@line 58298
                  if (!(($3843 << 24 >> 24 | 0) == 13 | ($3843 << 24 >> 24 | 0) == 32 | ($3843 << 24 >> 24 | 0) == 9 | ($3843 << 24 >> 24 | 0) == 10)) {
                   break;
                  }
                  $3844 = $i_0_i_i3384 + 1 | 0; //@line 58304
                  $i_0_i_i3384 = $3844;
                  $3843 = HEAP8[$cmd + 4 + $3844 | 0] | 0;
                  label = 16430; //@line 58309
                 }
                 HEAP32[$1 >> 2] = $i_0_i_i3384; //@line 58312
                 if ((HEAP8[$cmd + 4 + $i_0_i_i3384 | 0] | 0) != 33) {
                  break;
                 }
                 if ((HEAP8[$i_0_i_i3384 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                  $op_0_i1679 = 2;
                  $storemerge4185_in = $i_0_i_i3384;
                 } else {
                  break;
                 }
                }
                HEAP32[$1 >> 2] = $storemerge4185_in + 2; //@line 58331
                if ((_cmd_match_expr_cmp($cmd, $val2_i1678, $base) | 0) == 0) {
                 label = 16435; //@line 58336
                 break L20639;
                }
                if (($op_0_i1679 | 0) == 1) {
                 HEAP32[$val2_i769 >> 2] = (HEAP32[$val2_i769 >> 2] | 0) == (HEAP32[$val2_i1678 >> 2] | 0); //@line 58344
                 continue;
                } else if (($op_0_i1679 | 0) == 2) {
                 HEAP32[$val2_i769 >> 2] = (HEAP32[$val2_i769 >> 2] | 0) != (HEAP32[$val2_i1678 >> 2] | 0); //@line 58352
                 continue;
                } else {
                 continue;
                }
               }
               HEAP32[$val2_i493 >> 2] = HEAP32[$val2_i769 >> 2] & HEAP32[$val2_i493 >> 2]; //@line 58362
               $3806 = $i_0_i_i3384; //@line 58364
              }
              if ((label | 0) == 17241) {
               label = 0; //@line 58367
               HEAP32[$1 >> 2] = $3806; //@line 58368
               $3869 = $3806; //@line 58370
              }
              HEAP32[$val2_i150 >> 2] = HEAP32[$val2_i493 >> 2] ^ HEAP32[$val2_i150 >> 2]; //@line 58376
              $i_0_i_i_i494 = $3869; //@line 58378
             }
             HEAP32[$val2_i91 >> 2] = HEAP32[$val2_i150 >> 2] | HEAP32[$val2_i91 >> 2]; //@line 58383
             $3636 = $i_0_i_i_i494; //@line 58385
            }
            if ((label | 0) == 17239) {
             label = 0; //@line 58388
             HEAP32[$1 >> 2] = $3636; //@line 58389
             $3877 = $3636; //@line 58391
            }
            if ((HEAP32[$val2_i27 >> 2] | 0) == 0) {
             $3884 = 0; //@line 58398
            } else {
             $3884 = (HEAP32[$val2_i91 >> 2] | 0) != 0 | 0; //@line 58403
            }
            HEAP32[$val2_i27 >> 2] = $3884; //@line 58406
            $i_0_i_i_i92 = $3877; //@line 58408
           }
           if ((HEAP32[$val2 >> 2] | 0) == 0) {
            $3892 = (HEAP32[$val2_i27 >> 2] | 0) != 0 | 0; //@line 58418
           } else {
            $3892 = 1; //@line 58420
           }
           HEAP32[$val2 >> 2] = $3892; //@line 58423
           $2946 = $i_0_i_i_i92; //@line 58425
          }
          if ((label | 0) == 16093) {
           HEAP32[$1 >> 2] = $5861; //@line 58428
          } else if ((label | 0) == 16116) {
           HEAP32[$1 >> 2] = $3014; //@line 58432
           label = 16120; //@line 58434
          } else if ((label | 0) == 16136) {
           HEAP32[$1 >> 2] = $3064; //@line 58437
           label = 16165; //@line 58439
          } else if ((label | 0) == 16159) {
           HEAP32[$1 >> 2] = $3124; //@line 58442
           label = 16163; //@line 58444
          } else if ((label | 0) == 16186) {
           HEAP32[$1 >> 2] = $3191; //@line 58447
           label = 16260; //@line 58449
          } else if ((label | 0) == 16209) {
           HEAP32[$1 >> 2] = $3251; //@line 58452
           label = 16213; //@line 58454
          } else if ((label | 0) == 16229) {
           HEAP32[$1 >> 2] = $3301; //@line 58457
           label = 16258; //@line 58459
          } else if ((label | 0) == 16252) {
           HEAP32[$1 >> 2] = $3361; //@line 58462
           label = 16256; //@line 58464
          } else if ((label | 0) == 16276) {
           HEAP32[$1 >> 2] = $5865; //@line 58467
           label = 16445; //@line 58469
          } else if ((label | 0) == 16299) {
           HEAP32[$1 >> 2] = $3479; //@line 58472
           label = 16303; //@line 58474
          } else if ((label | 0) == 16319) {
           HEAP32[$1 >> 2] = $3529; //@line 58477
           label = 16348; //@line 58479
          } else if ((label | 0) == 16342) {
           HEAP32[$1 >> 2] = $3589; //@line 58482
           label = 16346; //@line 58484
          } else if ((label | 0) == 16369) {
           HEAP32[$1 >> 2] = $3656; //@line 58487
           label = 16443; //@line 58489
          } else if ((label | 0) == 16392) {
           HEAP32[$1 >> 2] = $3716; //@line 58492
           label = 16396; //@line 58494
          } else if ((label | 0) == 16412) {
           HEAP32[$1 >> 2] = $3766; //@line 58497
           label = 16441; //@line 58499
          } else if ((label | 0) == 16435) {
           HEAP32[$1 >> 2] = $3826; //@line 58502
           label = 16439; //@line 58504
          } else if ((label | 0) == 16454) {
           while (1) {
            label = 0; //@line 58508
            if (!(($3894 << 24 >> 24 | 0) == 13 | ($3894 << 24 >> 24 | 0) == 32 | ($3894 << 24 >> 24 | 0) == 9 | ($3894 << 24 >> 24 | 0) == 10)) {
             break;
            }
            $3895 = $i_0_i_i + 1 | 0; //@line 58514
            $i_0_i_i = $3895;
            $3894 = HEAP8[$cmd + 4 + $3895 | 0] | 0;
            label = 16454; //@line 58519
           }
           HEAP32[$1 >> 2] = $i_0_i_i; //@line 58522
           if ((HEAP8[$cmd + 4 + $i_0_i_i | 0] | 0) != 58) {
            HEAP32[$1 >> 2] = $2; //@line 58526
            $_0 = 0; //@line 58528
            STACKTOP = sp; //@line 58530
            return $_0 | 0; //@line 58531
           }
           $3900 = $i_0_i_i + 1 | 0; //@line 58533
           HEAP32[$1 >> 2] = $3900; //@line 58534
           do {
            if ((_cmd_match_expr_cmp($cmd, $val3, $base) | 0) != 0) {
             while (1) {
              $3912 = HEAP32[$1 >> 2] | 0; //@line 58549
              while (1) {
               $3913 = $cmd + 4 + $3912 | 0; //@line 58552
               $3914 = HEAP8[$3913] | 0; //@line 58553
               if (!(($3914 << 24 >> 24 | 0) == 13 | ($3914 << 24 >> 24 | 0) == 32 | ($3914 << 24 >> 24 | 0) == 9 | ($3914 << 24 >> 24 | 0) == 10)) {
                break;
               }
               $3912 = $3912 + 1 | 0; //@line 58559
              }
              HEAP32[$1 >> 2] = $3912; //@line 58561
              $3917 = HEAP8[$3913] | 0; //@line 58562
              if ($3917 << 24 >> 24 == 61) {
               if ((HEAP8[$3912 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                $op_0_i1683 = 1;
                $storemerge4184_in = $3912;
               } else {
                $i_0_i_i3404 = $3912;
                $3924 = 61;
                label = 16464; //@line 58573
               }
              } else {
               $i_0_i_i3404 = $3912;
               $3924 = $3917;
               label = 16464; //@line 58577
              }
              if ((label | 0) == 16464) {
               while (1) {
                label = 0; //@line 58581
                if (!(($3924 << 24 >> 24 | 0) == 13 | ($3924 << 24 >> 24 | 0) == 32 | ($3924 << 24 >> 24 | 0) == 9 | ($3924 << 24 >> 24 | 0) == 10)) {
                 break;
                }
                $3925 = $i_0_i_i3404 + 1 | 0; //@line 58587
                $i_0_i_i3404 = $3925;
                $3924 = HEAP8[$cmd + 4 + $3925 | 0] | 0;
                label = 16464; //@line 58592
               }
               HEAP32[$1 >> 2] = $i_0_i_i3404; //@line 58595
               if ((HEAP8[$cmd + 4 + $i_0_i_i3404 | 0] | 0) != 33) {
                break;
               }
               if ((HEAP8[$i_0_i_i3404 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                $op_0_i1683 = 2;
                $storemerge4184_in = $i_0_i_i3404;
               } else {
                break;
               }
              }
              HEAP32[$1 >> 2] = $storemerge4184_in + 2; //@line 58614
              if ((_cmd_match_expr_cmp($cmd, $val2_i1682, $base) | 0) == 0) {
               label = 16470; //@line 58619
               break;
              }
              if (($op_0_i1683 | 0) == 1) {
               HEAP32[$val3 >> 2] = (HEAP32[$val3 >> 2] | 0) == (HEAP32[$val2_i1682 >> 2] | 0); //@line 58627
               continue;
              } else if (($op_0_i1683 | 0) == 2) {
               HEAP32[$val3 >> 2] = (HEAP32[$val3 >> 2] | 0) != (HEAP32[$val2_i1682 >> 2] | 0); //@line 58635
               continue;
              } else {
               continue;
              }
             }
             if ((label | 0) == 16470) {
              HEAP32[$1 >> 2] = $3900; //@line 58643
              break;
             }
             $3948 = $i_0_i_i3404; //@line 58649
             L21201 : while (1) {
              $3950 = $3948; //@line 58653
              while (1) {
               $3951 = $cmd + 4 + $3950 | 0; //@line 58656
               $3952 = HEAP8[$3951] | 0; //@line 58657
               if (!(($3952 << 24 >> 24 | 0) == 13 | ($3952 << 24 >> 24 | 0) == 32 | ($3952 << 24 >> 24 | 0) == 9 | ($3952 << 24 >> 24 | 0) == 10)) {
                break;
               }
               $3950 = $3950 + 1 | 0; //@line 58663
              }
              HEAP32[$1 >> 2] = $3950; //@line 58665
              $3955 = HEAP8[$3951] | 0; //@line 58666
              if ($3955 << 24 >> 24 == 38) {
               if ((HEAP8[$3950 + 1 + ($cmd + 4) | 0] | 0) == 38) {
                label = 17229; //@line 58674
                break;
               } else {
                $i_0_i_i1695 = $3950;
                $3962 = 38;
               }
              } else {
               $i_0_i_i1695 = $3950;
               $3962 = $3955;
              }
              while (1) {
               if (!(($3962 << 24 >> 24 | 0) == 13 | ($3962 << 24 >> 24 | 0) == 32 | ($3962 << 24 >> 24 | 0) == 9 | ($3962 << 24 >> 24 | 0) == 10)) {
                break;
               }
               $3963 = $i_0_i_i1695 + 1 | 0; //@line 58688
               $i_0_i_i1695 = $3963;
               $3962 = HEAP8[$cmd + 4 + $3963 | 0] | 0;
              }
              HEAP32[$1 >> 2] = $i_0_i_i1695; //@line 58695
              if ((HEAP8[$cmd + 4 + $i_0_i_i1695 | 0] | 0) != 38) {
               $3967 = $i_0_i_i1695; //@line 58699
               break;
              }
              $3972 = $i_0_i_i1695 + 1 | 0; //@line 58702
              HEAP32[$1 >> 2] = $3972; //@line 58703
              if ((_cmd_match_expr_cmp($cmd, $val2_i772, $base) | 0) == 0) {
               label = 16498; //@line 58708
               break;
              }
              while (1) {
               $3977 = HEAP32[$1 >> 2] | 0; //@line 58714
               while (1) {
                $3978 = $cmd + 4 + $3977 | 0; //@line 58717
                $3979 = HEAP8[$3978] | 0; //@line 58718
                if (!(($3979 << 24 >> 24 | 0) == 13 | ($3979 << 24 >> 24 | 0) == 32 | ($3979 << 24 >> 24 | 0) == 9 | ($3979 << 24 >> 24 | 0) == 10)) {
                 break;
                }
                $3977 = $3977 + 1 | 0; //@line 58724
               }
               HEAP32[$1 >> 2] = $3977; //@line 58726
               $3982 = HEAP8[$3978] | 0; //@line 58727
               if ($3982 << 24 >> 24 == 61) {
                if ((HEAP8[$3977 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                 $op_0_i1706 = 1;
                 $storemerge4183_in = $3977;
                } else {
                 $i_0_i_i3424 = $3977;
                 $3989 = 61;
                 label = 16489; //@line 58738
                }
               } else {
                $i_0_i_i3424 = $3977;
                $3989 = $3982;
                label = 16489; //@line 58742
               }
               if ((label | 0) == 16489) {
                while (1) {
                 label = 0; //@line 58746
                 if (!(($3989 << 24 >> 24 | 0) == 13 | ($3989 << 24 >> 24 | 0) == 32 | ($3989 << 24 >> 24 | 0) == 9 | ($3989 << 24 >> 24 | 0) == 10)) {
                  break;
                 }
                 $3990 = $i_0_i_i3424 + 1 | 0; //@line 58752
                 $i_0_i_i3424 = $3990;
                 $3989 = HEAP8[$cmd + 4 + $3990 | 0] | 0;
                 label = 16489; //@line 58757
                }
                HEAP32[$1 >> 2] = $i_0_i_i3424; //@line 58760
                if ((HEAP8[$cmd + 4 + $i_0_i_i3424 | 0] | 0) != 33) {
                 break;
                }
                if ((HEAP8[$i_0_i_i3424 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                 $op_0_i1706 = 2;
                 $storemerge4183_in = $i_0_i_i3424;
                } else {
                 break;
                }
               }
               HEAP32[$1 >> 2] = $storemerge4183_in + 2; //@line 58779
               if ((_cmd_match_expr_cmp($cmd, $val2_i1705, $base) | 0) == 0) {
                label = 16494; //@line 58784
                break L21201;
               }
               if (($op_0_i1706 | 0) == 1) {
                HEAP32[$val2_i772 >> 2] = (HEAP32[$val2_i772 >> 2] | 0) == (HEAP32[$val2_i1705 >> 2] | 0); //@line 58792
                continue;
               } else if (($op_0_i1706 | 0) == 2) {
                HEAP32[$val2_i772 >> 2] = (HEAP32[$val2_i772 >> 2] | 0) != (HEAP32[$val2_i1705 >> 2] | 0); //@line 58800
                continue;
               } else {
                continue;
               }
              }
              HEAP32[$val3 >> 2] = HEAP32[$val2_i772 >> 2] & HEAP32[$val3 >> 2]; //@line 58810
              $3948 = $i_0_i_i3424; //@line 58812
             }
             if ((label | 0) == 16494) {
              HEAP32[$1 >> 2] = $3972; //@line 58815
              label = 16498; //@line 58817
             } else if ((label | 0) == 17229) {
              HEAP32[$1 >> 2] = $3948; //@line 58820
              $3967 = $3948; //@line 58822
             }
             if ((label | 0) == 16498) {
              HEAP32[$1 >> 2] = $3900; //@line 58825
              break;
             }
             $i_0_i_i_i506 = $3967; //@line 58834
             L21240 : while (1) {
              $4015 = $cmd + 4 + $i_0_i_i_i506 | 0; //@line 58837
              $4016 = HEAP8[$4015] | 0; //@line 58838
              if (($4016 << 24 >> 24 | 0) == 13 | ($4016 << 24 >> 24 | 0) == 32 | ($4016 << 24 >> 24 | 0) == 9 | ($4016 << 24 >> 24 | 0) == 10) {
               $i_0_i_i_i506 = $i_0_i_i_i506 + 1 | 0; //@line 58842
               continue;
              }
              HEAP32[$1 >> 2] = $i_0_i_i_i506; //@line 58845
              if ((HEAP8[$4015] | 0) != 94) {
               label = 16503; //@line 58849
               break;
              }
              $4029 = $i_0_i_i_i506 + 1 | 0; //@line 58852
              HEAP32[$1 >> 2] = $4029; //@line 58853
              if ((_cmd_match_expr_cmp($cmd, $val2_i505, $base) | 0) == 0) {
               break;
              }
              while (1) {
               $4034 = HEAP32[$1 >> 2] | 0; //@line 58863
               while (1) {
                $4035 = $cmd + 4 + $4034 | 0; //@line 58866
                $4036 = HEAP8[$4035] | 0; //@line 58867
                if (!(($4036 << 24 >> 24 | 0) == 13 | ($4036 << 24 >> 24 | 0) == 32 | ($4036 << 24 >> 24 | 0) == 9 | ($4036 << 24 >> 24 | 0) == 10)) {
                 break;
                }
                $4034 = $4034 + 1 | 0; //@line 58873
               }
               HEAP32[$1 >> 2] = $4034; //@line 58875
               $4039 = HEAP8[$4035] | 0; //@line 58876
               if ($4039 << 24 >> 24 == 61) {
                if ((HEAP8[$4034 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                 $op_0_i1710 = 1;
                 $storemerge4182_in = $4034;
                } else {
                 $i_0_i_i3444 = $4034;
                 $4046 = 61;
                 label = 16510; //@line 58887
                }
               } else {
                $i_0_i_i3444 = $4034;
                $4046 = $4039;
                label = 16510; //@line 58891
               }
               if ((label | 0) == 16510) {
                while (1) {
                 label = 0; //@line 58895
                 if (!(($4046 << 24 >> 24 | 0) == 13 | ($4046 << 24 >> 24 | 0) == 32 | ($4046 << 24 >> 24 | 0) == 9 | ($4046 << 24 >> 24 | 0) == 10)) {
                  break;
                 }
                 $4047 = $i_0_i_i3444 + 1 | 0; //@line 58901
                 $i_0_i_i3444 = $4047;
                 $4046 = HEAP8[$cmd + 4 + $4047 | 0] | 0;
                 label = 16510; //@line 58906
                }
                HEAP32[$1 >> 2] = $i_0_i_i3444; //@line 58909
                if ((HEAP8[$cmd + 4 + $i_0_i_i3444 | 0] | 0) != 33) {
                 $4069 = $i_0_i_i3444; //@line 58913
                 break;
                }
                if ((HEAP8[$i_0_i_i3444 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                 $op_0_i1710 = 2;
                 $storemerge4182_in = $i_0_i_i3444;
                } else {
                 $4069 = $i_0_i_i3444; //@line 58923
                 break;
                }
               }
               HEAP32[$1 >> 2] = $storemerge4182_in + 2; //@line 58930
               if ((_cmd_match_expr_cmp($cmd, $val2_i1709, $base) | 0) == 0) {
                label = 16515; //@line 58935
                break L21240;
               }
               if (($op_0_i1710 | 0) == 1) {
                HEAP32[$val2_i505 >> 2] = (HEAP32[$val2_i505 >> 2] | 0) == (HEAP32[$val2_i1709 >> 2] | 0); //@line 58943
                continue;
               } else if (($op_0_i1710 | 0) == 2) {
                HEAP32[$val2_i505 >> 2] = (HEAP32[$val2_i505 >> 2] | 0) != (HEAP32[$val2_i1709 >> 2] | 0); //@line 58951
                continue;
               } else {
                continue;
               }
              }
              while (1) {
               $4071 = $4069; //@line 58961
               while (1) {
                $4072 = $cmd + 4 + $4071 | 0; //@line 58964
                $4073 = HEAP8[$4072] | 0; //@line 58965
                if (!(($4073 << 24 >> 24 | 0) == 13 | ($4073 << 24 >> 24 | 0) == 32 | ($4073 << 24 >> 24 | 0) == 9 | ($4073 << 24 >> 24 | 0) == 10)) {
                 break;
                }
                $4071 = $4071 + 1 | 0; //@line 58971
               }
               HEAP32[$1 >> 2] = $4071; //@line 58973
               $4076 = HEAP8[$4072] | 0; //@line 58974
               if ($4076 << 24 >> 24 == 38) {
                if ((HEAP8[$4071 + 1 + ($cmd + 4) | 0] | 0) == 38) {
                 label = 17228; //@line 58982
                 break;
                } else {
                 $i_0_i_i1722 = $4071;
                 $4083 = 38;
                }
               } else {
                $i_0_i_i1722 = $4071;
                $4083 = $4076;
               }
               while (1) {
                if (!(($4083 << 24 >> 24 | 0) == 13 | ($4083 << 24 >> 24 | 0) == 32 | ($4083 << 24 >> 24 | 0) == 9 | ($4083 << 24 >> 24 | 0) == 10)) {
                 break;
                }
                $4084 = $i_0_i_i1722 + 1 | 0; //@line 58996
                $i_0_i_i1722 = $4084;
                $4083 = HEAP8[$cmd + 4 + $4084 | 0] | 0;
               }
               HEAP32[$1 >> 2] = $i_0_i_i1722; //@line 59003
               if ((HEAP8[$cmd + 4 + $i_0_i_i1722 | 0] | 0) != 38) {
                $4132 = $i_0_i_i1722; //@line 59007
                break;
               }
               $4089 = $i_0_i_i1722 + 1 | 0; //@line 59010
               HEAP32[$1 >> 2] = $4089; //@line 59011
               if ((_cmd_match_expr_cmp($cmd, $val2_i775, $base) | 0) == 0) {
                label = 16542; //@line 59016
                break L21240;
               }
               while (1) {
                $4094 = HEAP32[$1 >> 2] | 0; //@line 59022
                while (1) {
                 $4095 = $cmd + 4 + $4094 | 0; //@line 59025
                 $4096 = HEAP8[$4095] | 0; //@line 59026
                 if (!(($4096 << 24 >> 24 | 0) == 13 | ($4096 << 24 >> 24 | 0) == 32 | ($4096 << 24 >> 24 | 0) == 9 | ($4096 << 24 >> 24 | 0) == 10)) {
                  break;
                 }
                 $4094 = $4094 + 1 | 0; //@line 59032
                }
                HEAP32[$1 >> 2] = $4094; //@line 59034
                $4099 = HEAP8[$4095] | 0; //@line 59035
                if ($4099 << 24 >> 24 == 61) {
                 if ((HEAP8[$4094 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                  $op_0_i1733 = 1;
                  $storemerge4181_in = $4094;
                 } else {
                  $i_0_i_i3464 = $4094;
                  $4106 = 61;
                  label = 16533; //@line 59046
                 }
                } else {
                 $i_0_i_i3464 = $4094;
                 $4106 = $4099;
                 label = 16533; //@line 59050
                }
                if ((label | 0) == 16533) {
                 while (1) {
                  label = 0; //@line 59054
                  if (!(($4106 << 24 >> 24 | 0) == 13 | ($4106 << 24 >> 24 | 0) == 32 | ($4106 << 24 >> 24 | 0) == 9 | ($4106 << 24 >> 24 | 0) == 10)) {
                   break;
                  }
                  $4107 = $i_0_i_i3464 + 1 | 0; //@line 59060
                  $i_0_i_i3464 = $4107;
                  $4106 = HEAP8[$cmd + 4 + $4107 | 0] | 0;
                  label = 16533; //@line 59065
                 }
                 HEAP32[$1 >> 2] = $i_0_i_i3464; //@line 59068
                 if ((HEAP8[$cmd + 4 + $i_0_i_i3464 | 0] | 0) != 33) {
                  break;
                 }
                 if ((HEAP8[$i_0_i_i3464 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                  $op_0_i1733 = 2;
                  $storemerge4181_in = $i_0_i_i3464;
                 } else {
                  break;
                 }
                }
                HEAP32[$1 >> 2] = $storemerge4181_in + 2; //@line 59087
                if ((_cmd_match_expr_cmp($cmd, $val2_i1732, $base) | 0) == 0) {
                 label = 16538; //@line 59092
                 break L21240;
                }
                if (($op_0_i1733 | 0) == 1) {
                 HEAP32[$val2_i775 >> 2] = (HEAP32[$val2_i775 >> 2] | 0) == (HEAP32[$val2_i1732 >> 2] | 0); //@line 59100
                 continue;
                } else if (($op_0_i1733 | 0) == 2) {
                 HEAP32[$val2_i775 >> 2] = (HEAP32[$val2_i775 >> 2] | 0) != (HEAP32[$val2_i1732 >> 2] | 0); //@line 59108
                 continue;
                } else {
                 continue;
                }
               }
               HEAP32[$val2_i505 >> 2] = HEAP32[$val2_i775 >> 2] & HEAP32[$val2_i505 >> 2]; //@line 59118
               $4069 = $i_0_i_i3464; //@line 59120
              }
              if ((label | 0) == 17228) {
               label = 0; //@line 59123
               HEAP32[$1 >> 2] = $4069; //@line 59124
               $4132 = $4069; //@line 59126
              }
              HEAP32[$val3 >> 2] = HEAP32[$val2_i505 >> 2] ^ HEAP32[$val3 >> 2]; //@line 59132
              $i_0_i_i_i506 = $4132; //@line 59134
             }
             if ((label | 0) == 16503) {
              $4136 = $i_0_i_i_i506; //@line 59145
              L21303 : while (1) {
               $4138 = $4136; //@line 59149
               while (1) {
                $4139 = $cmd + 4 + $4138 | 0; //@line 59152
                $4140 = HEAP8[$4139] | 0; //@line 59153
                if (!(($4140 << 24 >> 24 | 0) == 13 | ($4140 << 24 >> 24 | 0) == 32 | ($4140 << 24 >> 24 | 0) == 9 | ($4140 << 24 >> 24 | 0) == 10)) {
                 break;
                }
                $4138 = $4138 + 1 | 0; //@line 59159
               }
               HEAP32[$1 >> 2] = $4138; //@line 59161
               $4143 = HEAP8[$4139] | 0; //@line 59162
               if ($4143 << 24 >> 24 == 124) {
                if ((HEAP8[$4138 + 1 + ($cmd + 4) | 0] | 0) == 124) {
                 label = 17225; //@line 59170
                 break;
                } else {
                 $i_0_i_i526 = $4138;
                 $4150 = 124;
                }
               } else {
                $i_0_i_i526 = $4138;
                $4150 = $4143;
               }
               while (1) {
                if (!(($4150 << 24 >> 24 | 0) == 13 | ($4150 << 24 >> 24 | 0) == 32 | ($4150 << 24 >> 24 | 0) == 9 | ($4150 << 24 >> 24 | 0) == 10)) {
                 break;
                }
                $4151 = $i_0_i_i526 + 1 | 0; //@line 59184
                $i_0_i_i526 = $4151;
                $4150 = HEAP8[$cmd + 4 + $4151 | 0] | 0;
               }
               HEAP32[$1 >> 2] = $i_0_i_i526; //@line 59191
               if ((HEAP8[$cmd + 4 + $i_0_i_i526 | 0] | 0) != 124) {
                $4155 = $i_0_i_i526; //@line 59195
                label = 16554; //@line 59196
                break;
               }
               $4172 = $i_0_i_i526 + 1 | 0; //@line 59199
               HEAP32[$1 >> 2] = $4172; //@line 59200
               if ((_cmd_match_expr_cmp($cmd, $val2_i153, $base) | 0) == 0) {
                break;
               }
               while (1) {
                $4177 = HEAP32[$1 >> 2] | 0; //@line 59210
                while (1) {
                 $4178 = $cmd + 4 + $4177 | 0; //@line 59213
                 $4179 = HEAP8[$4178] | 0; //@line 59214
                 if (!(($4179 << 24 >> 24 | 0) == 13 | ($4179 << 24 >> 24 | 0) == 32 | ($4179 << 24 >> 24 | 0) == 9 | ($4179 << 24 >> 24 | 0) == 10)) {
                  break;
                 }
                 $4177 = $4177 + 1 | 0; //@line 59220
                }
                HEAP32[$1 >> 2] = $4177; //@line 59222
                $4182 = HEAP8[$4178] | 0; //@line 59223
                if ($4182 << 24 >> 24 == 61) {
                 if ((HEAP8[$4177 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                  $op_0_i1737 = 1;
                  $storemerge4180_in = $4177;
                 } else {
                  $i_0_i_i3484 = $4177;
                  $4189 = 61;
                  label = 16561; //@line 59234
                 }
                } else {
                 $i_0_i_i3484 = $4177;
                 $4189 = $4182;
                 label = 16561; //@line 59238
                }
                if ((label | 0) == 16561) {
                 while (1) {
                  label = 0; //@line 59242
                  if (!(($4189 << 24 >> 24 | 0) == 13 | ($4189 << 24 >> 24 | 0) == 32 | ($4189 << 24 >> 24 | 0) == 9 | ($4189 << 24 >> 24 | 0) == 10)) {
                   break;
                  }
                  $4190 = $i_0_i_i3484 + 1 | 0; //@line 59248
                  $i_0_i_i3484 = $4190;
                  $4189 = HEAP8[$cmd + 4 + $4190 | 0] | 0;
                  label = 16561; //@line 59253
                 }
                 HEAP32[$1 >> 2] = $i_0_i_i3484; //@line 59256
                 if ((HEAP8[$cmd + 4 + $i_0_i_i3484 | 0] | 0) != 33) {
                  $4212 = $i_0_i_i3484; //@line 59260
                  break;
                 }
                 if ((HEAP8[$i_0_i_i3484 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                  $op_0_i1737 = 2;
                  $storemerge4180_in = $i_0_i_i3484;
                 } else {
                  $4212 = $i_0_i_i3484; //@line 59270
                  break;
                 }
                }
                HEAP32[$1 >> 2] = $storemerge4180_in + 2; //@line 59277
                if ((_cmd_match_expr_cmp($cmd, $val2_i1736, $base) | 0) == 0) {
                 label = 16566; //@line 59282
                 break L21303;
                }
                if (($op_0_i1737 | 0) == 1) {
                 HEAP32[$val2_i153 >> 2] = (HEAP32[$val2_i153 >> 2] | 0) == (HEAP32[$val2_i1736 >> 2] | 0); //@line 59290
                 continue;
                } else if (($op_0_i1737 | 0) == 2) {
                 HEAP32[$val2_i153 >> 2] = (HEAP32[$val2_i153 >> 2] | 0) != (HEAP32[$val2_i1736 >> 2] | 0); //@line 59298
                 continue;
                } else {
                 continue;
                }
               }
               while (1) {
                $4214 = $4212; //@line 59308
                while (1) {
                 $4215 = $cmd + 4 + $4214 | 0; //@line 59311
                 $4216 = HEAP8[$4215] | 0; //@line 59312
                 if (!(($4216 << 24 >> 24 | 0) == 13 | ($4216 << 24 >> 24 | 0) == 32 | ($4216 << 24 >> 24 | 0) == 9 | ($4216 << 24 >> 24 | 0) == 10)) {
                  break;
                 }
                 $4214 = $4214 + 1 | 0; //@line 59318
                }
                HEAP32[$1 >> 2] = $4214; //@line 59320
                $4219 = HEAP8[$4215] | 0; //@line 59321
                if ($4219 << 24 >> 24 == 38) {
                 if ((HEAP8[$4214 + 1 + ($cmd + 4) | 0] | 0) == 38) {
                  label = 17226; //@line 59329
                  break;
                 } else {
                  $i_0_i_i1749 = $4214;
                  $4226 = 38;
                 }
                } else {
                 $i_0_i_i1749 = $4214;
                 $4226 = $4219;
                }
                while (1) {
                 if (!(($4226 << 24 >> 24 | 0) == 13 | ($4226 << 24 >> 24 | 0) == 32 | ($4226 << 24 >> 24 | 0) == 9 | ($4226 << 24 >> 24 | 0) == 10)) {
                  break;
                 }
                 $4227 = $i_0_i_i1749 + 1 | 0; //@line 59343
                 $i_0_i_i1749 = $4227;
                 $4226 = HEAP8[$cmd + 4 + $4227 | 0] | 0;
                }
                HEAP32[$1 >> 2] = $i_0_i_i1749; //@line 59350
                if ((HEAP8[$cmd + 4 + $i_0_i_i1749 | 0] | 0) != 38) {
                 $i_0_i_i_i537 = $i_0_i_i1749; //@line 59354
                 break;
                }
                $4232 = $i_0_i_i1749 + 1 | 0; //@line 59357
                HEAP32[$1 >> 2] = $4232; //@line 59358
                if ((_cmd_match_expr_cmp($cmd, $val2_i778, $base) | 0) == 0) {
                 label = 16593; //@line 59363
                 break L21303;
                }
                while (1) {
                 $4237 = HEAP32[$1 >> 2] | 0; //@line 59369
                 while (1) {
                  $4238 = $cmd + 4 + $4237 | 0; //@line 59372
                  $4239 = HEAP8[$4238] | 0; //@line 59373
                  if (!(($4239 << 24 >> 24 | 0) == 13 | ($4239 << 24 >> 24 | 0) == 32 | ($4239 << 24 >> 24 | 0) == 9 | ($4239 << 24 >> 24 | 0) == 10)) {
                   break;
                  }
                  $4237 = $4237 + 1 | 0; //@line 59379
                 }
                 HEAP32[$1 >> 2] = $4237; //@line 59381
                 $4242 = HEAP8[$4238] | 0; //@line 59382
                 if ($4242 << 24 >> 24 == 61) {
                  if ((HEAP8[$4237 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                   $op_0_i1760 = 1;
                   $storemerge4179_in = $4237;
                  } else {
                   $i_0_i_i3504 = $4237;
                   $4249 = 61;
                   label = 16584; //@line 59393
                  }
                 } else {
                  $i_0_i_i3504 = $4237;
                  $4249 = $4242;
                  label = 16584; //@line 59397
                 }
                 if ((label | 0) == 16584) {
                  while (1) {
                   label = 0; //@line 59401
                   if (!(($4249 << 24 >> 24 | 0) == 13 | ($4249 << 24 >> 24 | 0) == 32 | ($4249 << 24 >> 24 | 0) == 9 | ($4249 << 24 >> 24 | 0) == 10)) {
                    break;
                   }
                   $4250 = $i_0_i_i3504 + 1 | 0; //@line 59407
                   $i_0_i_i3504 = $4250;
                   $4249 = HEAP8[$cmd + 4 + $4250 | 0] | 0;
                   label = 16584; //@line 59412
                  }
                  HEAP32[$1 >> 2] = $i_0_i_i3504; //@line 59415
                  if ((HEAP8[$cmd + 4 + $i_0_i_i3504 | 0] | 0) != 33) {
                   break;
                  }
                  if ((HEAP8[$i_0_i_i3504 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                   $op_0_i1760 = 2;
                   $storemerge4179_in = $i_0_i_i3504;
                  } else {
                   break;
                  }
                 }
                 HEAP32[$1 >> 2] = $storemerge4179_in + 2; //@line 59434
                 if ((_cmd_match_expr_cmp($cmd, $val2_i1759, $base) | 0) == 0) {
                  label = 16589; //@line 59439
                  break L21303;
                 }
                 if (($op_0_i1760 | 0) == 1) {
                  HEAP32[$val2_i778 >> 2] = (HEAP32[$val2_i778 >> 2] | 0) == (HEAP32[$val2_i1759 >> 2] | 0); //@line 59447
                  continue;
                 } else if (($op_0_i1760 | 0) == 2) {
                  HEAP32[$val2_i778 >> 2] = (HEAP32[$val2_i778 >> 2] | 0) != (HEAP32[$val2_i1759 >> 2] | 0); //@line 59455
                  continue;
                 } else {
                  continue;
                 }
                }
                HEAP32[$val2_i153 >> 2] = HEAP32[$val2_i778 >> 2] & HEAP32[$val2_i153 >> 2]; //@line 59465
                $4212 = $i_0_i_i3504; //@line 59467
               }
               if ((label | 0) == 17226) {
                label = 0; //@line 59470
                HEAP32[$1 >> 2] = $4212; //@line 59471
                $i_0_i_i_i537 = $4212; //@line 59473
               }
               while (1) {
                $4275 = $cmd + 4 + $i_0_i_i_i537 | 0; //@line 59477
                $4276 = HEAP8[$4275] | 0; //@line 59478
                if (($4276 << 24 >> 24 | 0) == 13 | ($4276 << 24 >> 24 | 0) == 32 | ($4276 << 24 >> 24 | 0) == 9 | ($4276 << 24 >> 24 | 0) == 10) {
                 $i_0_i_i_i537 = $i_0_i_i_i537 + 1 | 0; //@line 59482
                 continue;
                }
                HEAP32[$1 >> 2] = $i_0_i_i_i537; //@line 59485
                if ((HEAP8[$4275] | 0) != 94) {
                 break;
                }
                $4282 = $i_0_i_i_i537 + 1 | 0; //@line 59491
                HEAP32[$1 >> 2] = $4282; //@line 59492
                if ((_cmd_match_expr_cmp($cmd, $val2_i536, $base) | 0) == 0) {
                 label = 16638; //@line 59497
                 break L21303;
                }
                while (1) {
                 $4287 = HEAP32[$1 >> 2] | 0; //@line 59503
                 while (1) {
                  $4288 = $cmd + 4 + $4287 | 0; //@line 59506
                  $4289 = HEAP8[$4288] | 0; //@line 59507
                  if (!(($4289 << 24 >> 24 | 0) == 13 | ($4289 << 24 >> 24 | 0) == 32 | ($4289 << 24 >> 24 | 0) == 9 | ($4289 << 24 >> 24 | 0) == 10)) {
                   break;
                  }
                  $4287 = $4287 + 1 | 0; //@line 59513
                 }
                 HEAP32[$1 >> 2] = $4287; //@line 59515
                 $4292 = HEAP8[$4288] | 0; //@line 59516
                 if ($4292 << 24 >> 24 == 61) {
                  if ((HEAP8[$4287 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                   $op_0_i1764 = 1;
                   $storemerge4178_in = $4287;
                  } else {
                   $i_0_i_i3524 = $4287;
                   $4299 = 61;
                   label = 16604; //@line 59527
                  }
                 } else {
                  $i_0_i_i3524 = $4287;
                  $4299 = $4292;
                  label = 16604; //@line 59531
                 }
                 if ((label | 0) == 16604) {
                  while (1) {
                   label = 0; //@line 59535
                   if (!(($4299 << 24 >> 24 | 0) == 13 | ($4299 << 24 >> 24 | 0) == 32 | ($4299 << 24 >> 24 | 0) == 9 | ($4299 << 24 >> 24 | 0) == 10)) {
                    break;
                   }
                   $4300 = $i_0_i_i3524 + 1 | 0; //@line 59541
                   $i_0_i_i3524 = $4300;
                   $4299 = HEAP8[$cmd + 4 + $4300 | 0] | 0;
                   label = 16604; //@line 59546
                  }
                  HEAP32[$1 >> 2] = $i_0_i_i3524; //@line 59549
                  if ((HEAP8[$cmd + 4 + $i_0_i_i3524 | 0] | 0) != 33) {
                   $4322 = $i_0_i_i3524; //@line 59553
                   break;
                  }
                  if ((HEAP8[$i_0_i_i3524 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                   $op_0_i1764 = 2;
                   $storemerge4178_in = $i_0_i_i3524;
                  } else {
                   $4322 = $i_0_i_i3524; //@line 59563
                   break;
                  }
                 }
                 HEAP32[$1 >> 2] = $storemerge4178_in + 2; //@line 59570
                 if ((_cmd_match_expr_cmp($cmd, $val2_i1763, $base) | 0) == 0) {
                  label = 16609; //@line 59575
                  break L21303;
                 }
                 if (($op_0_i1764 | 0) == 1) {
                  HEAP32[$val2_i536 >> 2] = (HEAP32[$val2_i536 >> 2] | 0) == (HEAP32[$val2_i1763 >> 2] | 0); //@line 59583
                  continue;
                 } else if (($op_0_i1764 | 0) == 2) {
                  HEAP32[$val2_i536 >> 2] = (HEAP32[$val2_i536 >> 2] | 0) != (HEAP32[$val2_i1763 >> 2] | 0); //@line 59591
                  continue;
                 } else {
                  continue;
                 }
                }
                while (1) {
                 $4324 = $4322; //@line 59601
                 while (1) {
                  $4325 = $cmd + 4 + $4324 | 0; //@line 59604
                  $4326 = HEAP8[$4325] | 0; //@line 59605
                  if (!(($4326 << 24 >> 24 | 0) == 13 | ($4326 << 24 >> 24 | 0) == 32 | ($4326 << 24 >> 24 | 0) == 9 | ($4326 << 24 >> 24 | 0) == 10)) {
                   break;
                  }
                  $4324 = $4324 + 1 | 0; //@line 59611
                 }
                 HEAP32[$1 >> 2] = $4324; //@line 59613
                 $4329 = HEAP8[$4325] | 0; //@line 59614
                 if ($4329 << 24 >> 24 == 38) {
                  if ((HEAP8[$4324 + 1 + ($cmd + 4) | 0] | 0) == 38) {
                   label = 17227; //@line 59622
                   break;
                  } else {
                   $i_0_i_i1776 = $4324;
                   $4336 = 38;
                  }
                 } else {
                  $i_0_i_i1776 = $4324;
                  $4336 = $4329;
                 }
                 while (1) {
                  if (!(($4336 << 24 >> 24 | 0) == 13 | ($4336 << 24 >> 24 | 0) == 32 | ($4336 << 24 >> 24 | 0) == 9 | ($4336 << 24 >> 24 | 0) == 10)) {
                   break;
                  }
                  $4337 = $i_0_i_i1776 + 1 | 0; //@line 59636
                  $i_0_i_i1776 = $4337;
                  $4336 = HEAP8[$cmd + 4 + $4337 | 0] | 0;
                 }
                 HEAP32[$1 >> 2] = $i_0_i_i1776; //@line 59643
                 if ((HEAP8[$cmd + 4 + $i_0_i_i1776 | 0] | 0) != 38) {
                  $4385 = $i_0_i_i1776; //@line 59647
                  break;
                 }
                 $4342 = $i_0_i_i1776 + 1 | 0; //@line 59650
                 HEAP32[$1 >> 2] = $4342; //@line 59651
                 if ((_cmd_match_expr_cmp($cmd, $val2_i781, $base) | 0) == 0) {
                  label = 16636; //@line 59656
                  break L21303;
                 }
                 while (1) {
                  $4347 = HEAP32[$1 >> 2] | 0; //@line 59662
                  while (1) {
                   $4348 = $cmd + 4 + $4347 | 0; //@line 59665
                   $4349 = HEAP8[$4348] | 0; //@line 59666
                   if (!(($4349 << 24 >> 24 | 0) == 13 | ($4349 << 24 >> 24 | 0) == 32 | ($4349 << 24 >> 24 | 0) == 9 | ($4349 << 24 >> 24 | 0) == 10)) {
                    break;
                   }
                   $4347 = $4347 + 1 | 0; //@line 59672
                  }
                  HEAP32[$1 >> 2] = $4347; //@line 59674
                  $4352 = HEAP8[$4348] | 0; //@line 59675
                  if ($4352 << 24 >> 24 == 61) {
                   if ((HEAP8[$4347 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                    $op_0_i1787 = 1;
                    $storemerge4177_in = $4347;
                   } else {
                    $i_0_i_i3544 = $4347;
                    $4359 = 61;
                    label = 16627; //@line 59686
                   }
                  } else {
                   $i_0_i_i3544 = $4347;
                   $4359 = $4352;
                   label = 16627; //@line 59690
                  }
                  if ((label | 0) == 16627) {
                   while (1) {
                    label = 0; //@line 59694
                    if (!(($4359 << 24 >> 24 | 0) == 13 | ($4359 << 24 >> 24 | 0) == 32 | ($4359 << 24 >> 24 | 0) == 9 | ($4359 << 24 >> 24 | 0) == 10)) {
                     break;
                    }
                    $4360 = $i_0_i_i3544 + 1 | 0; //@line 59700
                    $i_0_i_i3544 = $4360;
                    $4359 = HEAP8[$cmd + 4 + $4360 | 0] | 0;
                    label = 16627; //@line 59705
                   }
                   HEAP32[$1 >> 2] = $i_0_i_i3544; //@line 59708
                   if ((HEAP8[$cmd + 4 + $i_0_i_i3544 | 0] | 0) != 33) {
                    break;
                   }
                   if ((HEAP8[$i_0_i_i3544 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                    $op_0_i1787 = 2;
                    $storemerge4177_in = $i_0_i_i3544;
                   } else {
                    break;
                   }
                  }
                  HEAP32[$1 >> 2] = $storemerge4177_in + 2; //@line 59727
                  if ((_cmd_match_expr_cmp($cmd, $val2_i1786, $base) | 0) == 0) {
                   label = 16632; //@line 59732
                   break L21303;
                  }
                  if (($op_0_i1787 | 0) == 1) {
                   HEAP32[$val2_i781 >> 2] = (HEAP32[$val2_i781 >> 2] | 0) == (HEAP32[$val2_i1786 >> 2] | 0); //@line 59740
                   continue;
                  } else if (($op_0_i1787 | 0) == 2) {
                   HEAP32[$val2_i781 >> 2] = (HEAP32[$val2_i781 >> 2] | 0) != (HEAP32[$val2_i1786 >> 2] | 0); //@line 59748
                   continue;
                  } else {
                   continue;
                  }
                 }
                 HEAP32[$val2_i536 >> 2] = HEAP32[$val2_i781 >> 2] & HEAP32[$val2_i536 >> 2]; //@line 59758
                 $4322 = $i_0_i_i3544; //@line 59760
                }
                if ((label | 0) == 17227) {
                 label = 0; //@line 59763
                 HEAP32[$1 >> 2] = $4322; //@line 59764
                 $4385 = $4322; //@line 59766
                }
                HEAP32[$val2_i153 >> 2] = HEAP32[$val2_i536 >> 2] ^ HEAP32[$val2_i153 >> 2]; //@line 59772
                $i_0_i_i_i537 = $4385; //@line 59774
               }
               HEAP32[$val3 >> 2] = HEAP32[$val2_i153 >> 2] | HEAP32[$val3 >> 2]; //@line 59779
               $4136 = $i_0_i_i_i537; //@line 59781
              }
              if ((label | 0) == 16566) {
               HEAP32[$1 >> 2] = $4172; //@line 59784
              } else if ((label | 0) == 16589) {
               HEAP32[$1 >> 2] = $4232; //@line 59788
               label = 16593; //@line 59790
              } else if ((label | 0) == 16609) {
               HEAP32[$1 >> 2] = $4282; //@line 59793
               label = 16638; //@line 59795
              } else if ((label | 0) == 16632) {
               HEAP32[$1 >> 2] = $4342; //@line 59798
               label = 16636; //@line 59800
              } else if ((label | 0) == 17225) {
               HEAP32[$1 >> 2] = $4136; //@line 59803
               $4155 = $4136; //@line 59805
               label = 16554; //@line 59806
              }
              if ((label | 0) == 16554) {
               $i_0_i_i_i105 = $4155; //@line 59826
               L21440 : while (1) {
                $4393 = $cmd + 4 + $i_0_i_i_i105 | 0; //@line 59829
                $4394 = HEAP8[$4393] | 0; //@line 59830
                if (($4394 << 24 >> 24 | 0) == 13 | ($4394 << 24 >> 24 | 0) == 32 | ($4394 << 24 >> 24 | 0) == 9 | ($4394 << 24 >> 24 | 0) == 10) {
                 $i_0_i_i_i105 = $i_0_i_i_i105 + 1 | 0; //@line 59834
                 continue;
                }
                HEAP32[$1 >> 2] = $i_0_i_i_i105; //@line 59837
                if ((HEAP8[$4393] | 0) != 38) {
                 label = 16645; //@line 59841
                 break;
                }
                if ((HEAP8[$i_0_i_i_i105 + 1 + ($cmd + 4) | 0] | 0) != 38) {
                 label = 16645; //@line 59849
                 break;
                }
                $5857 = $i_0_i_i_i105 + 2 | 0; //@line 59852
                HEAP32[$1 >> 2] = $5857; //@line 59853
                if ((_cmd_match_expr_cmp($cmd, $val2_i104, $base) | 0) == 0) {
                 break;
                }
                while (1) {
                 $4436 = HEAP32[$1 >> 2] | 0; //@line 59863
                 while (1) {
                  $4437 = $cmd + 4 + $4436 | 0; //@line 59866
                  $4438 = HEAP8[$4437] | 0; //@line 59867
                  if (!(($4438 << 24 >> 24 | 0) == 13 | ($4438 << 24 >> 24 | 0) == 32 | ($4438 << 24 >> 24 | 0) == 9 | ($4438 << 24 >> 24 | 0) == 10)) {
                   break;
                  }
                  $4436 = $4436 + 1 | 0; //@line 59873
                 }
                 HEAP32[$1 >> 2] = $4436; //@line 59875
                 $4441 = HEAP8[$4437] | 0; //@line 59876
                 if ($4441 << 24 >> 24 == 61) {
                  if ((HEAP8[$4436 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                   $op_0_i1791 = 1;
                   $storemerge4176_in = $4436;
                  } else {
                   $i_0_i_i3564 = $4436;
                   $4448 = 61;
                   label = 16652; //@line 59887
                  }
                 } else {
                  $i_0_i_i3564 = $4436;
                  $4448 = $4441;
                  label = 16652; //@line 59891
                 }
                 if ((label | 0) == 16652) {
                  while (1) {
                   label = 0; //@line 59895
                   if (!(($4448 << 24 >> 24 | 0) == 13 | ($4448 << 24 >> 24 | 0) == 32 | ($4448 << 24 >> 24 | 0) == 9 | ($4448 << 24 >> 24 | 0) == 10)) {
                    break;
                   }
                   $4449 = $i_0_i_i3564 + 1 | 0; //@line 59901
                   $i_0_i_i3564 = $4449;
                   $4448 = HEAP8[$cmd + 4 + $4449 | 0] | 0;
                   label = 16652; //@line 59906
                  }
                  HEAP32[$1 >> 2] = $i_0_i_i3564; //@line 59909
                  if ((HEAP8[$cmd + 4 + $i_0_i_i3564 | 0] | 0) != 33) {
                   $4471 = $i_0_i_i3564; //@line 59913
                   break;
                  }
                  if ((HEAP8[$i_0_i_i3564 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                   $op_0_i1791 = 2;
                   $storemerge4176_in = $i_0_i_i3564;
                  } else {
                   $4471 = $i_0_i_i3564; //@line 59923
                   break;
                  }
                 }
                 HEAP32[$1 >> 2] = $storemerge4176_in + 2; //@line 59930
                 if ((_cmd_match_expr_cmp($cmd, $val2_i1790, $base) | 0) == 0) {
                  label = 16657; //@line 59935
                  break L21440;
                 }
                 if (($op_0_i1791 | 0) == 1) {
                  HEAP32[$val2_i104 >> 2] = (HEAP32[$val2_i104 >> 2] | 0) == (HEAP32[$val2_i1790 >> 2] | 0); //@line 59943
                  continue;
                 } else if (($op_0_i1791 | 0) == 2) {
                  HEAP32[$val2_i104 >> 2] = (HEAP32[$val2_i104 >> 2] | 0) != (HEAP32[$val2_i1790 >> 2] | 0); //@line 59951
                  continue;
                 } else {
                  continue;
                 }
                }
                while (1) {
                 $4473 = $4471; //@line 59961
                 while (1) {
                  $4474 = $cmd + 4 + $4473 | 0; //@line 59964
                  $4475 = HEAP8[$4474] | 0; //@line 59965
                  if (!(($4475 << 24 >> 24 | 0) == 13 | ($4475 << 24 >> 24 | 0) == 32 | ($4475 << 24 >> 24 | 0) == 9 | ($4475 << 24 >> 24 | 0) == 10)) {
                   break;
                  }
                  $4473 = $4473 + 1 | 0; //@line 59971
                 }
                 HEAP32[$1 >> 2] = $4473; //@line 59973
                 $4478 = HEAP8[$4474] | 0; //@line 59974
                 if ($4478 << 24 >> 24 == 38) {
                  if ((HEAP8[$4473 + 1 + ($cmd + 4) | 0] | 0) == 38) {
                   label = 17220; //@line 59982
                   break;
                  } else {
                   $i_0_i_i1803 = $4473;
                   $4485 = 38;
                  }
                 } else {
                  $i_0_i_i1803 = $4473;
                  $4485 = $4478;
                 }
                 while (1) {
                  if (!(($4485 << 24 >> 24 | 0) == 13 | ($4485 << 24 >> 24 | 0) == 32 | ($4485 << 24 >> 24 | 0) == 9 | ($4485 << 24 >> 24 | 0) == 10)) {
                   break;
                  }
                  $4486 = $i_0_i_i1803 + 1 | 0; //@line 59996
                  $i_0_i_i1803 = $4486;
                  $4485 = HEAP8[$cmd + 4 + $4486 | 0] | 0;
                 }
                 HEAP32[$1 >> 2] = $i_0_i_i1803; //@line 60003
                 if ((HEAP8[$cmd + 4 + $i_0_i_i1803 | 0] | 0) != 38) {
                  $i_0_i_i_i549 = $i_0_i_i1803; //@line 60007
                  break;
                 }
                 $4491 = $i_0_i_i1803 + 1 | 0; //@line 60010
                 HEAP32[$1 >> 2] = $4491; //@line 60011
                 if ((_cmd_match_expr_cmp($cmd, $val2_i784, $base) | 0) == 0) {
                  label = 16684; //@line 60016
                  break L21440;
                 }
                 while (1) {
                  $4496 = HEAP32[$1 >> 2] | 0; //@line 60022
                  while (1) {
                   $4497 = $cmd + 4 + $4496 | 0; //@line 60025
                   $4498 = HEAP8[$4497] | 0; //@line 60026
                   if (!(($4498 << 24 >> 24 | 0) == 13 | ($4498 << 24 >> 24 | 0) == 32 | ($4498 << 24 >> 24 | 0) == 9 | ($4498 << 24 >> 24 | 0) == 10)) {
                    break;
                   }
                   $4496 = $4496 + 1 | 0; //@line 60032
                  }
                  HEAP32[$1 >> 2] = $4496; //@line 60034
                  $4501 = HEAP8[$4497] | 0; //@line 60035
                  if ($4501 << 24 >> 24 == 61) {
                   if ((HEAP8[$4496 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                    $op_0_i1814 = 1;
                    $storemerge4175_in = $4496;
                   } else {
                    $i_0_i_i3584 = $4496;
                    $4508 = 61;
                    label = 16675; //@line 60046
                   }
                  } else {
                   $i_0_i_i3584 = $4496;
                   $4508 = $4501;
                   label = 16675; //@line 60050
                  }
                  if ((label | 0) == 16675) {
                   while (1) {
                    label = 0; //@line 60054
                    if (!(($4508 << 24 >> 24 | 0) == 13 | ($4508 << 24 >> 24 | 0) == 32 | ($4508 << 24 >> 24 | 0) == 9 | ($4508 << 24 >> 24 | 0) == 10)) {
                     break;
                    }
                    $4509 = $i_0_i_i3584 + 1 | 0; //@line 60060
                    $i_0_i_i3584 = $4509;
                    $4508 = HEAP8[$cmd + 4 + $4509 | 0] | 0;
                    label = 16675; //@line 60065
                   }
                   HEAP32[$1 >> 2] = $i_0_i_i3584; //@line 60068
                   if ((HEAP8[$cmd + 4 + $i_0_i_i3584 | 0] | 0) != 33) {
                    break;
                   }
                   if ((HEAP8[$i_0_i_i3584 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                    $op_0_i1814 = 2;
                    $storemerge4175_in = $i_0_i_i3584;
                   } else {
                    break;
                   }
                  }
                  HEAP32[$1 >> 2] = $storemerge4175_in + 2; //@line 60087
                  if ((_cmd_match_expr_cmp($cmd, $val2_i1813, $base) | 0) == 0) {
                   label = 16680; //@line 60092
                   break L21440;
                  }
                  if (($op_0_i1814 | 0) == 1) {
                   HEAP32[$val2_i784 >> 2] = (HEAP32[$val2_i784 >> 2] | 0) == (HEAP32[$val2_i1813 >> 2] | 0); //@line 60100
                   continue;
                  } else if (($op_0_i1814 | 0) == 2) {
                   HEAP32[$val2_i784 >> 2] = (HEAP32[$val2_i784 >> 2] | 0) != (HEAP32[$val2_i1813 >> 2] | 0); //@line 60108
                   continue;
                  } else {
                   continue;
                  }
                 }
                 HEAP32[$val2_i104 >> 2] = HEAP32[$val2_i784 >> 2] & HEAP32[$val2_i104 >> 2]; //@line 60118
                 $4471 = $i_0_i_i3584; //@line 60120
                }
                if ((label | 0) == 17220) {
                 label = 0; //@line 60123
                 HEAP32[$1 >> 2] = $4471; //@line 60124
                 $i_0_i_i_i549 = $4471; //@line 60126
                }
                while (1) {
                 $4534 = $cmd + 4 + $i_0_i_i_i549 | 0; //@line 60130
                 $4535 = HEAP8[$4534] | 0; //@line 60131
                 if (($4535 << 24 >> 24 | 0) == 13 | ($4535 << 24 >> 24 | 0) == 32 | ($4535 << 24 >> 24 | 0) == 9 | ($4535 << 24 >> 24 | 0) == 10) {
                  $i_0_i_i_i549 = $i_0_i_i_i549 + 1 | 0; //@line 60135
                  continue;
                 }
                 HEAP32[$1 >> 2] = $i_0_i_i_i549; //@line 60138
                 if ((HEAP8[$4534] | 0) != 94) {
                  $4648 = $i_0_i_i_i549; //@line 60142
                  break;
                 }
                 $4541 = $i_0_i_i_i549 + 1 | 0; //@line 60145
                 HEAP32[$1 >> 2] = $4541; //@line 60146
                 if ((_cmd_match_expr_cmp($cmd, $val2_i548, $base) | 0) == 0) {
                  label = 16729; //@line 60151
                  break L21440;
                 }
                 while (1) {
                  $4546 = HEAP32[$1 >> 2] | 0; //@line 60157
                  while (1) {
                   $4547 = $cmd + 4 + $4546 | 0; //@line 60160
                   $4548 = HEAP8[$4547] | 0; //@line 60161
                   if (!(($4548 << 24 >> 24 | 0) == 13 | ($4548 << 24 >> 24 | 0) == 32 | ($4548 << 24 >> 24 | 0) == 9 | ($4548 << 24 >> 24 | 0) == 10)) {
                    break;
                   }
                   $4546 = $4546 + 1 | 0; //@line 60167
                  }
                  HEAP32[$1 >> 2] = $4546; //@line 60169
                  $4551 = HEAP8[$4547] | 0; //@line 60170
                  if ($4551 << 24 >> 24 == 61) {
                   if ((HEAP8[$4546 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                    $op_0_i1818 = 1;
                    $storemerge4174_in = $4546;
                   } else {
                    $i_0_i_i3604 = $4546;
                    $4558 = 61;
                    label = 16695; //@line 60181
                   }
                  } else {
                   $i_0_i_i3604 = $4546;
                   $4558 = $4551;
                   label = 16695; //@line 60185
                  }
                  if ((label | 0) == 16695) {
                   while (1) {
                    label = 0; //@line 60189
                    if (!(($4558 << 24 >> 24 | 0) == 13 | ($4558 << 24 >> 24 | 0) == 32 | ($4558 << 24 >> 24 | 0) == 9 | ($4558 << 24 >> 24 | 0) == 10)) {
                     break;
                    }
                    $4559 = $i_0_i_i3604 + 1 | 0; //@line 60195
                    $i_0_i_i3604 = $4559;
                    $4558 = HEAP8[$cmd + 4 + $4559 | 0] | 0;
                    label = 16695; //@line 60200
                   }
                   HEAP32[$1 >> 2] = $i_0_i_i3604; //@line 60203
                   if ((HEAP8[$cmd + 4 + $i_0_i_i3604 | 0] | 0) != 33) {
                    $4581 = $i_0_i_i3604; //@line 60207
                    break;
                   }
                   if ((HEAP8[$i_0_i_i3604 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                    $op_0_i1818 = 2;
                    $storemerge4174_in = $i_0_i_i3604;
                   } else {
                    $4581 = $i_0_i_i3604; //@line 60217
                    break;
                   }
                  }
                  HEAP32[$1 >> 2] = $storemerge4174_in + 2; //@line 60224
                  if ((_cmd_match_expr_cmp($cmd, $val2_i1817, $base) | 0) == 0) {
                   label = 16700; //@line 60229
                   break L21440;
                  }
                  if (($op_0_i1818 | 0) == 1) {
                   HEAP32[$val2_i548 >> 2] = (HEAP32[$val2_i548 >> 2] | 0) == (HEAP32[$val2_i1817 >> 2] | 0); //@line 60237
                   continue;
                  } else if (($op_0_i1818 | 0) == 2) {
                   HEAP32[$val2_i548 >> 2] = (HEAP32[$val2_i548 >> 2] | 0) != (HEAP32[$val2_i1817 >> 2] | 0); //@line 60245
                   continue;
                  } else {
                   continue;
                  }
                 }
                 while (1) {
                  $4583 = $4581; //@line 60255
                  while (1) {
                   $4584 = $cmd + 4 + $4583 | 0; //@line 60258
                   $4585 = HEAP8[$4584] | 0; //@line 60259
                   if (!(($4585 << 24 >> 24 | 0) == 13 | ($4585 << 24 >> 24 | 0) == 32 | ($4585 << 24 >> 24 | 0) == 9 | ($4585 << 24 >> 24 | 0) == 10)) {
                    break;
                   }
                   $4583 = $4583 + 1 | 0; //@line 60265
                  }
                  HEAP32[$1 >> 2] = $4583; //@line 60267
                  $4588 = HEAP8[$4584] | 0; //@line 60268
                  if ($4588 << 24 >> 24 == 38) {
                   if ((HEAP8[$4583 + 1 + ($cmd + 4) | 0] | 0) == 38) {
                    label = 17221; //@line 60276
                    break;
                   } else {
                    $i_0_i_i1830 = $4583;
                    $4595 = 38;
                   }
                  } else {
                   $i_0_i_i1830 = $4583;
                   $4595 = $4588;
                  }
                  while (1) {
                   if (!(($4595 << 24 >> 24 | 0) == 13 | ($4595 << 24 >> 24 | 0) == 32 | ($4595 << 24 >> 24 | 0) == 9 | ($4595 << 24 >> 24 | 0) == 10)) {
                    break;
                   }
                   $4596 = $i_0_i_i1830 + 1 | 0; //@line 60290
                   $i_0_i_i1830 = $4596;
                   $4595 = HEAP8[$cmd + 4 + $4596 | 0] | 0;
                  }
                  HEAP32[$1 >> 2] = $i_0_i_i1830; //@line 60297
                  if ((HEAP8[$cmd + 4 + $i_0_i_i1830 | 0] | 0) != 38) {
                   $4644 = $i_0_i_i1830; //@line 60301
                   break;
                  }
                  $4601 = $i_0_i_i1830 + 1 | 0; //@line 60304
                  HEAP32[$1 >> 2] = $4601; //@line 60305
                  if ((_cmd_match_expr_cmp($cmd, $val2_i787, $base) | 0) == 0) {
                   label = 16727; //@line 60310
                   break L21440;
                  }
                  while (1) {
                   $4606 = HEAP32[$1 >> 2] | 0; //@line 60316
                   while (1) {
                    $4607 = $cmd + 4 + $4606 | 0; //@line 60319
                    $4608 = HEAP8[$4607] | 0; //@line 60320
                    if (!(($4608 << 24 >> 24 | 0) == 13 | ($4608 << 24 >> 24 | 0) == 32 | ($4608 << 24 >> 24 | 0) == 9 | ($4608 << 24 >> 24 | 0) == 10)) {
                     break;
                    }
                    $4606 = $4606 + 1 | 0; //@line 60326
                   }
                   HEAP32[$1 >> 2] = $4606; //@line 60328
                   $4611 = HEAP8[$4607] | 0; //@line 60329
                   if ($4611 << 24 >> 24 == 61) {
                    if ((HEAP8[$4606 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                     $op_0_i1841 = 1;
                     $storemerge4173_in = $4606;
                    } else {
                     $i_0_i_i3624 = $4606;
                     $4618 = 61;
                     label = 16718; //@line 60340
                    }
                   } else {
                    $i_0_i_i3624 = $4606;
                    $4618 = $4611;
                    label = 16718; //@line 60344
                   }
                   if ((label | 0) == 16718) {
                    while (1) {
                     label = 0; //@line 60348
                     if (!(($4618 << 24 >> 24 | 0) == 13 | ($4618 << 24 >> 24 | 0) == 32 | ($4618 << 24 >> 24 | 0) == 9 | ($4618 << 24 >> 24 | 0) == 10)) {
                      break;
                     }
                     $4619 = $i_0_i_i3624 + 1 | 0; //@line 60354
                     $i_0_i_i3624 = $4619;
                     $4618 = HEAP8[$cmd + 4 + $4619 | 0] | 0;
                     label = 16718; //@line 60359
                    }
                    HEAP32[$1 >> 2] = $i_0_i_i3624; //@line 60362
                    if ((HEAP8[$cmd + 4 + $i_0_i_i3624 | 0] | 0) != 33) {
                     break;
                    }
                    if ((HEAP8[$i_0_i_i3624 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                     $op_0_i1841 = 2;
                     $storemerge4173_in = $i_0_i_i3624;
                    } else {
                     break;
                    }
                   }
                   HEAP32[$1 >> 2] = $storemerge4173_in + 2; //@line 60381
                   if ((_cmd_match_expr_cmp($cmd, $val2_i1840, $base) | 0) == 0) {
                    label = 16723; //@line 60386
                    break L21440;
                   }
                   if (($op_0_i1841 | 0) == 1) {
                    HEAP32[$val2_i787 >> 2] = (HEAP32[$val2_i787 >> 2] | 0) == (HEAP32[$val2_i1840 >> 2] | 0); //@line 60394
                    continue;
                   } else if (($op_0_i1841 | 0) == 2) {
                    HEAP32[$val2_i787 >> 2] = (HEAP32[$val2_i787 >> 2] | 0) != (HEAP32[$val2_i1840 >> 2] | 0); //@line 60402
                    continue;
                   } else {
                    continue;
                   }
                  }
                  HEAP32[$val2_i548 >> 2] = HEAP32[$val2_i787 >> 2] & HEAP32[$val2_i548 >> 2]; //@line 60412
                  $4581 = $i_0_i_i3624; //@line 60414
                 }
                 if ((label | 0) == 17221) {
                  label = 0; //@line 60417
                  HEAP32[$1 >> 2] = $4581; //@line 60418
                  $4644 = $4581; //@line 60420
                 }
                 HEAP32[$val2_i104 >> 2] = HEAP32[$val2_i548 >> 2] ^ HEAP32[$val2_i104 >> 2]; //@line 60426
                 $i_0_i_i_i549 = $4644; //@line 60428
                }
                while (1) {
                 $4650 = $4648; //@line 60433
                 while (1) {
                  $4651 = $cmd + 4 + $4650 | 0; //@line 60436
                  $4652 = HEAP8[$4651] | 0; //@line 60437
                  if (!(($4652 << 24 >> 24 | 0) == 13 | ($4652 << 24 >> 24 | 0) == 32 | ($4652 << 24 >> 24 | 0) == 9 | ($4652 << 24 >> 24 | 0) == 10)) {
                   break;
                  }
                  $4650 = $4650 + 1 | 0; //@line 60443
                 }
                 HEAP32[$1 >> 2] = $4650; //@line 60445
                 $4655 = HEAP8[$4651] | 0; //@line 60446
                 if ($4655 << 24 >> 24 == 124) {
                  if ((HEAP8[$4650 + 1 + ($cmd + 4) | 0] | 0) == 124) {
                   label = 17222; //@line 60454
                   break;
                  } else {
                   $i_0_i_i569 = $4650;
                   $4662 = 124;
                  }
                 } else {
                  $i_0_i_i569 = $4650;
                  $4662 = $4655;
                 }
                 while (1) {
                  if (!(($4662 << 24 >> 24 | 0) == 13 | ($4662 << 24 >> 24 | 0) == 32 | ($4662 << 24 >> 24 | 0) == 9 | ($4662 << 24 >> 24 | 0) == 10)) {
                   break;
                  }
                  $4663 = $i_0_i_i569 + 1 | 0; //@line 60468
                  $i_0_i_i569 = $4663;
                  $4662 = HEAP8[$cmd + 4 + $4663 | 0] | 0;
                 }
                 HEAP32[$1 >> 2] = $i_0_i_i569; //@line 60475
                 if ((HEAP8[$cmd + 4 + $i_0_i_i569 | 0] | 0) != 124) {
                  $4889 = $i_0_i_i569; //@line 60479
                  break;
                 }
                 $4668 = $i_0_i_i569 + 1 | 0; //@line 60482
                 HEAP32[$1 >> 2] = $4668; //@line 60483
                 if ((_cmd_match_expr_cmp($cmd, $val2_i156, $base) | 0) == 0) {
                  label = 16824; //@line 60488
                  break L21440;
                 }
                 while (1) {
                  $4673 = HEAP32[$1 >> 2] | 0; //@line 60494
                  while (1) {
                   $4674 = $cmd + 4 + $4673 | 0; //@line 60497
                   $4675 = HEAP8[$4674] | 0; //@line 60498
                   if (!(($4675 << 24 >> 24 | 0) == 13 | ($4675 << 24 >> 24 | 0) == 32 | ($4675 << 24 >> 24 | 0) == 9 | ($4675 << 24 >> 24 | 0) == 10)) {
                    break;
                   }
                   $4673 = $4673 + 1 | 0; //@line 60504
                  }
                  HEAP32[$1 >> 2] = $4673; //@line 60506
                  $4678 = HEAP8[$4674] | 0; //@line 60507
                  if ($4678 << 24 >> 24 == 61) {
                   if ((HEAP8[$4673 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                    $op_0_i1845 = 1;
                    $storemerge4172_in = $4673;
                   } else {
                    $i_0_i_i3644 = $4673;
                    $4685 = 61;
                    label = 16745; //@line 60518
                   }
                  } else {
                   $i_0_i_i3644 = $4673;
                   $4685 = $4678;
                   label = 16745; //@line 60522
                  }
                  if ((label | 0) == 16745) {
                   while (1) {
                    label = 0; //@line 60526
                    if (!(($4685 << 24 >> 24 | 0) == 13 | ($4685 << 24 >> 24 | 0) == 32 | ($4685 << 24 >> 24 | 0) == 9 | ($4685 << 24 >> 24 | 0) == 10)) {
                     break;
                    }
                    $4686 = $i_0_i_i3644 + 1 | 0; //@line 60532
                    $i_0_i_i3644 = $4686;
                    $4685 = HEAP8[$cmd + 4 + $4686 | 0] | 0;
                    label = 16745; //@line 60537
                   }
                   HEAP32[$1 >> 2] = $i_0_i_i3644; //@line 60540
                   if ((HEAP8[$cmd + 4 + $i_0_i_i3644 | 0] | 0) != 33) {
                    $4708 = $i_0_i_i3644; //@line 60544
                    break;
                   }
                   if ((HEAP8[$i_0_i_i3644 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                    $op_0_i1845 = 2;
                    $storemerge4172_in = $i_0_i_i3644;
                   } else {
                    $4708 = $i_0_i_i3644; //@line 60554
                    break;
                   }
                  }
                  HEAP32[$1 >> 2] = $storemerge4172_in + 2; //@line 60561
                  if ((_cmd_match_expr_cmp($cmd, $val2_i1844, $base) | 0) == 0) {
                   label = 16750; //@line 60566
                   break L21440;
                  }
                  if (($op_0_i1845 | 0) == 1) {
                   HEAP32[$val2_i156 >> 2] = (HEAP32[$val2_i156 >> 2] | 0) == (HEAP32[$val2_i1844 >> 2] | 0); //@line 60574
                   continue;
                  } else if (($op_0_i1845 | 0) == 2) {
                   HEAP32[$val2_i156 >> 2] = (HEAP32[$val2_i156 >> 2] | 0) != (HEAP32[$val2_i1844 >> 2] | 0); //@line 60582
                   continue;
                  } else {
                   continue;
                  }
                 }
                 while (1) {
                  $4710 = $4708; //@line 60592
                  while (1) {
                   $4711 = $cmd + 4 + $4710 | 0; //@line 60595
                   $4712 = HEAP8[$4711] | 0; //@line 60596
                   if (!(($4712 << 24 >> 24 | 0) == 13 | ($4712 << 24 >> 24 | 0) == 32 | ($4712 << 24 >> 24 | 0) == 9 | ($4712 << 24 >> 24 | 0) == 10)) {
                    break;
                   }
                   $4710 = $4710 + 1 | 0; //@line 60602
                  }
                  HEAP32[$1 >> 2] = $4710; //@line 60604
                  $4715 = HEAP8[$4711] | 0; //@line 60605
                  if ($4715 << 24 >> 24 == 38) {
                   if ((HEAP8[$4710 + 1 + ($cmd + 4) | 0] | 0) == 38) {
                    label = 17223; //@line 60613
                    break;
                   } else {
                    $i_0_i_i1857 = $4710;
                    $4722 = 38;
                   }
                  } else {
                   $i_0_i_i1857 = $4710;
                   $4722 = $4715;
                  }
                  while (1) {
                   if (!(($4722 << 24 >> 24 | 0) == 13 | ($4722 << 24 >> 24 | 0) == 32 | ($4722 << 24 >> 24 | 0) == 9 | ($4722 << 24 >> 24 | 0) == 10)) {
                    break;
                   }
                   $4723 = $i_0_i_i1857 + 1 | 0; //@line 60627
                   $i_0_i_i1857 = $4723;
                   $4722 = HEAP8[$cmd + 4 + $4723 | 0] | 0;
                  }
                  HEAP32[$1 >> 2] = $i_0_i_i1857; //@line 60634
                  if ((HEAP8[$cmd + 4 + $i_0_i_i1857 | 0] | 0) != 38) {
                   $i_0_i_i_i580 = $i_0_i_i1857; //@line 60638
                   break;
                  }
                  $4728 = $i_0_i_i1857 + 1 | 0; //@line 60641
                  HEAP32[$1 >> 2] = $4728; //@line 60642
                  if ((_cmd_match_expr_cmp($cmd, $val2_i790, $base) | 0) == 0) {
                   label = 16777; //@line 60647
                   break L21440;
                  }
                  while (1) {
                   $4733 = HEAP32[$1 >> 2] | 0; //@line 60653
                   while (1) {
                    $4734 = $cmd + 4 + $4733 | 0; //@line 60656
                    $4735 = HEAP8[$4734] | 0; //@line 60657
                    if (!(($4735 << 24 >> 24 | 0) == 13 | ($4735 << 24 >> 24 | 0) == 32 | ($4735 << 24 >> 24 | 0) == 9 | ($4735 << 24 >> 24 | 0) == 10)) {
                     break;
                    }
                    $4733 = $4733 + 1 | 0; //@line 60663
                   }
                   HEAP32[$1 >> 2] = $4733; //@line 60665
                   $4738 = HEAP8[$4734] | 0; //@line 60666
                   if ($4738 << 24 >> 24 == 61) {
                    if ((HEAP8[$4733 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                     $op_0_i1868 = 1;
                     $storemerge4171_in = $4733;
                    } else {
                     $i_0_i_i3664 = $4733;
                     $4745 = 61;
                     label = 16768; //@line 60677
                    }
                   } else {
                    $i_0_i_i3664 = $4733;
                    $4745 = $4738;
                    label = 16768; //@line 60681
                   }
                   if ((label | 0) == 16768) {
                    while (1) {
                     label = 0; //@line 60685
                     if (!(($4745 << 24 >> 24 | 0) == 13 | ($4745 << 24 >> 24 | 0) == 32 | ($4745 << 24 >> 24 | 0) == 9 | ($4745 << 24 >> 24 | 0) == 10)) {
                      break;
                     }
                     $4746 = $i_0_i_i3664 + 1 | 0; //@line 60691
                     $i_0_i_i3664 = $4746;
                     $4745 = HEAP8[$cmd + 4 + $4746 | 0] | 0;
                     label = 16768; //@line 60696
                    }
                    HEAP32[$1 >> 2] = $i_0_i_i3664; //@line 60699
                    if ((HEAP8[$cmd + 4 + $i_0_i_i3664 | 0] | 0) != 33) {
                     break;
                    }
                    if ((HEAP8[$i_0_i_i3664 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                     $op_0_i1868 = 2;
                     $storemerge4171_in = $i_0_i_i3664;
                    } else {
                     break;
                    }
                   }
                   HEAP32[$1 >> 2] = $storemerge4171_in + 2; //@line 60718
                   if ((_cmd_match_expr_cmp($cmd, $val2_i1867, $base) | 0) == 0) {
                    label = 16773; //@line 60723
                    break L21440;
                   }
                   if (($op_0_i1868 | 0) == 1) {
                    HEAP32[$val2_i790 >> 2] = (HEAP32[$val2_i790 >> 2] | 0) == (HEAP32[$val2_i1867 >> 2] | 0); //@line 60731
                    continue;
                   } else if (($op_0_i1868 | 0) == 2) {
                    HEAP32[$val2_i790 >> 2] = (HEAP32[$val2_i790 >> 2] | 0) != (HEAP32[$val2_i1867 >> 2] | 0); //@line 60739
                    continue;
                   } else {
                    continue;
                   }
                  }
                  HEAP32[$val2_i156 >> 2] = HEAP32[$val2_i790 >> 2] & HEAP32[$val2_i156 >> 2]; //@line 60749
                  $4708 = $i_0_i_i3664; //@line 60751
                 }
                 if ((label | 0) == 17223) {
                  label = 0; //@line 60754
                  HEAP32[$1 >> 2] = $4708; //@line 60755
                  $i_0_i_i_i580 = $4708; //@line 60757
                 }
                 while (1) {
                  $4771 = $cmd + 4 + $i_0_i_i_i580 | 0; //@line 60761
                  $4772 = HEAP8[$4771] | 0; //@line 60762
                  if (($4772 << 24 >> 24 | 0) == 13 | ($4772 << 24 >> 24 | 0) == 32 | ($4772 << 24 >> 24 | 0) == 9 | ($4772 << 24 >> 24 | 0) == 10) {
                   $i_0_i_i_i580 = $i_0_i_i_i580 + 1 | 0; //@line 60766
                   continue;
                  }
                  HEAP32[$1 >> 2] = $i_0_i_i_i580; //@line 60769
                  if ((HEAP8[$4771] | 0) != 94) {
                   break;
                  }
                  $4778 = $i_0_i_i_i580 + 1 | 0; //@line 60775
                  HEAP32[$1 >> 2] = $4778; //@line 60776
                  if ((_cmd_match_expr_cmp($cmd, $val2_i579, $base) | 0) == 0) {
                   label = 16822; //@line 60781
                   break L21440;
                  }
                  while (1) {
                   $4783 = HEAP32[$1 >> 2] | 0; //@line 60787
                   while (1) {
                    $4784 = $cmd + 4 + $4783 | 0; //@line 60790
                    $4785 = HEAP8[$4784] | 0; //@line 60791
                    if (!(($4785 << 24 >> 24 | 0) == 13 | ($4785 << 24 >> 24 | 0) == 32 | ($4785 << 24 >> 24 | 0) == 9 | ($4785 << 24 >> 24 | 0) == 10)) {
                     break;
                    }
                    $4783 = $4783 + 1 | 0; //@line 60797
                   }
                   HEAP32[$1 >> 2] = $4783; //@line 60799
                   $4788 = HEAP8[$4784] | 0; //@line 60800
                   if ($4788 << 24 >> 24 == 61) {
                    if ((HEAP8[$4783 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                     $op_0_i1872 = 1;
                     $storemerge4170_in = $4783;
                    } else {
                     $i_0_i_i3684 = $4783;
                     $4795 = 61;
                     label = 16788; //@line 60811
                    }
                   } else {
                    $i_0_i_i3684 = $4783;
                    $4795 = $4788;
                    label = 16788; //@line 60815
                   }
                   if ((label | 0) == 16788) {
                    while (1) {
                     label = 0; //@line 60819
                     if (!(($4795 << 24 >> 24 | 0) == 13 | ($4795 << 24 >> 24 | 0) == 32 | ($4795 << 24 >> 24 | 0) == 9 | ($4795 << 24 >> 24 | 0) == 10)) {
                      break;
                     }
                     $4796 = $i_0_i_i3684 + 1 | 0; //@line 60825
                     $i_0_i_i3684 = $4796;
                     $4795 = HEAP8[$cmd + 4 + $4796 | 0] | 0;
                     label = 16788; //@line 60830
                    }
                    HEAP32[$1 >> 2] = $i_0_i_i3684; //@line 60833
                    if ((HEAP8[$cmd + 4 + $i_0_i_i3684 | 0] | 0) != 33) {
                     $4818 = $i_0_i_i3684; //@line 60837
                     break;
                    }
                    if ((HEAP8[$i_0_i_i3684 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                     $op_0_i1872 = 2;
                     $storemerge4170_in = $i_0_i_i3684;
                    } else {
                     $4818 = $i_0_i_i3684; //@line 60847
                     break;
                    }
                   }
                   HEAP32[$1 >> 2] = $storemerge4170_in + 2; //@line 60854
                   if ((_cmd_match_expr_cmp($cmd, $val2_i1871, $base) | 0) == 0) {
                    label = 16793; //@line 60859
                    break L21440;
                   }
                   if (($op_0_i1872 | 0) == 1) {
                    HEAP32[$val2_i579 >> 2] = (HEAP32[$val2_i579 >> 2] | 0) == (HEAP32[$val2_i1871 >> 2] | 0); //@line 60867
                    continue;
                   } else if (($op_0_i1872 | 0) == 2) {
                    HEAP32[$val2_i579 >> 2] = (HEAP32[$val2_i579 >> 2] | 0) != (HEAP32[$val2_i1871 >> 2] | 0); //@line 60875
                    continue;
                   } else {
                    continue;
                   }
                  }
                  while (1) {
                   $4820 = $4818; //@line 60885
                   while (1) {
                    $4821 = $cmd + 4 + $4820 | 0; //@line 60888
                    $4822 = HEAP8[$4821] | 0; //@line 60889
                    if (!(($4822 << 24 >> 24 | 0) == 13 | ($4822 << 24 >> 24 | 0) == 32 | ($4822 << 24 >> 24 | 0) == 9 | ($4822 << 24 >> 24 | 0) == 10)) {
                     break;
                    }
                    $4820 = $4820 + 1 | 0; //@line 60895
                   }
                   HEAP32[$1 >> 2] = $4820; //@line 60897
                   $4825 = HEAP8[$4821] | 0; //@line 60898
                   if ($4825 << 24 >> 24 == 38) {
                    if ((HEAP8[$4820 + 1 + ($cmd + 4) | 0] | 0) == 38) {
                     label = 17224; //@line 60906
                     break;
                    } else {
                     $i_0_i_i1884 = $4820;
                     $4832 = 38;
                    }
                   } else {
                    $i_0_i_i1884 = $4820;
                    $4832 = $4825;
                   }
                   while (1) {
                    if (!(($4832 << 24 >> 24 | 0) == 13 | ($4832 << 24 >> 24 | 0) == 32 | ($4832 << 24 >> 24 | 0) == 9 | ($4832 << 24 >> 24 | 0) == 10)) {
                     break;
                    }
                    $4833 = $i_0_i_i1884 + 1 | 0; //@line 60920
                    $i_0_i_i1884 = $4833;
                    $4832 = HEAP8[$cmd + 4 + $4833 | 0] | 0;
                   }
                   HEAP32[$1 >> 2] = $i_0_i_i1884; //@line 60927
                   if ((HEAP8[$cmd + 4 + $i_0_i_i1884 | 0] | 0) != 38) {
                    $4881 = $i_0_i_i1884; //@line 60931
                    break;
                   }
                   $4838 = $i_0_i_i1884 + 1 | 0; //@line 60934
                   HEAP32[$1 >> 2] = $4838; //@line 60935
                   if ((_cmd_match_expr_cmp($cmd, $val2_i793, $base) | 0) == 0) {
                    label = 16820; //@line 60940
                    break L21440;
                   }
                   while (1) {
                    $4843 = HEAP32[$1 >> 2] | 0; //@line 60946
                    while (1) {
                     $4844 = $cmd + 4 + $4843 | 0; //@line 60949
                     $4845 = HEAP8[$4844] | 0; //@line 60950
                     if (!(($4845 << 24 >> 24 | 0) == 13 | ($4845 << 24 >> 24 | 0) == 32 | ($4845 << 24 >> 24 | 0) == 9 | ($4845 << 24 >> 24 | 0) == 10)) {
                      break;
                     }
                     $4843 = $4843 + 1 | 0; //@line 60956
                    }
                    HEAP32[$1 >> 2] = $4843; //@line 60958
                    $4848 = HEAP8[$4844] | 0; //@line 60959
                    if ($4848 << 24 >> 24 == 61) {
                     if ((HEAP8[$4843 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                      $op_0_i1895 = 1;
                      $storemerge4169_in = $4843;
                     } else {
                      $i_0_i_i3704 = $4843;
                      $4855 = 61;
                      label = 16811; //@line 60970
                     }
                    } else {
                     $i_0_i_i3704 = $4843;
                     $4855 = $4848;
                     label = 16811; //@line 60974
                    }
                    if ((label | 0) == 16811) {
                     while (1) {
                      label = 0; //@line 60978
                      if (!(($4855 << 24 >> 24 | 0) == 13 | ($4855 << 24 >> 24 | 0) == 32 | ($4855 << 24 >> 24 | 0) == 9 | ($4855 << 24 >> 24 | 0) == 10)) {
                       break;
                      }
                      $4856 = $i_0_i_i3704 + 1 | 0; //@line 60984
                      $i_0_i_i3704 = $4856;
                      $4855 = HEAP8[$cmd + 4 + $4856 | 0] | 0;
                      label = 16811; //@line 60989
                     }
                     HEAP32[$1 >> 2] = $i_0_i_i3704; //@line 60992
                     if ((HEAP8[$cmd + 4 + $i_0_i_i3704 | 0] | 0) != 33) {
                      break;
                     }
                     if ((HEAP8[$i_0_i_i3704 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                      $op_0_i1895 = 2;
                      $storemerge4169_in = $i_0_i_i3704;
                     } else {
                      break;
                     }
                    }
                    HEAP32[$1 >> 2] = $storemerge4169_in + 2; //@line 61011
                    if ((_cmd_match_expr_cmp($cmd, $val2_i1894, $base) | 0) == 0) {
                     label = 16816; //@line 61016
                     break L21440;
                    }
                    if (($op_0_i1895 | 0) == 1) {
                     HEAP32[$val2_i793 >> 2] = (HEAP32[$val2_i793 >> 2] | 0) == (HEAP32[$val2_i1894 >> 2] | 0); //@line 61024
                     continue;
                    } else if (($op_0_i1895 | 0) == 2) {
                     HEAP32[$val2_i793 >> 2] = (HEAP32[$val2_i793 >> 2] | 0) != (HEAP32[$val2_i1894 >> 2] | 0); //@line 61032
                     continue;
                    } else {
                     continue;
                    }
                   }
                   HEAP32[$val2_i579 >> 2] = HEAP32[$val2_i793 >> 2] & HEAP32[$val2_i579 >> 2]; //@line 61042
                   $4818 = $i_0_i_i3704; //@line 61044
                  }
                  if ((label | 0) == 17224) {
                   label = 0; //@line 61047
                   HEAP32[$1 >> 2] = $4818; //@line 61048
                   $4881 = $4818; //@line 61050
                  }
                  HEAP32[$val2_i156 >> 2] = HEAP32[$val2_i579 >> 2] ^ HEAP32[$val2_i156 >> 2]; //@line 61056
                  $i_0_i_i_i580 = $4881; //@line 61058
                 }
                 HEAP32[$val2_i104 >> 2] = HEAP32[$val2_i156 >> 2] | HEAP32[$val2_i104 >> 2]; //@line 61063
                 $4648 = $i_0_i_i_i580; //@line 61065
                }
                if ((label | 0) == 17222) {
                 label = 0; //@line 61068
                 HEAP32[$1 >> 2] = $4648; //@line 61069
                 $4889 = $4648; //@line 61071
                }
                if ((HEAP32[$val3 >> 2] | 0) == 0) {
                 $4896 = 0; //@line 61078
                } else {
                 $4896 = (HEAP32[$val2_i104 >> 2] | 0) != 0 | 0; //@line 61083
                }
                HEAP32[$val3 >> 2] = $4896; //@line 61086
                $i_0_i_i_i105 = $4889; //@line 61088
               }
               if ((label | 0) == 16645) {
                $i_0_i_i_i41 = $i_0_i_i_i105; //@line 61123
                L21699 : while (1) {
                 $4897 = $cmd + 4 + $i_0_i_i_i41 | 0; //@line 61126
                 $4898 = HEAP8[$4897] | 0; //@line 61127
                 if (($4898 << 24 >> 24 | 0) == 13 | ($4898 << 24 >> 24 | 0) == 32 | ($4898 << 24 >> 24 | 0) == 9 | ($4898 << 24 >> 24 | 0) == 10) {
                  $i_0_i_i_i41 = $i_0_i_i_i41 + 1 | 0; //@line 61131
                  continue;
                 }
                 HEAP32[$1 >> 2] = $i_0_i_i_i41; //@line 61134
                 if ((HEAP8[$4897] | 0) != 124) {
                  label = 17205; //@line 61138
                  break;
                 }
                 if ((HEAP8[$i_0_i_i_i41 + 1 + ($cmd + 4) | 0] | 0) != 124) {
                  label = 17205; //@line 61146
                  break;
                 }
                 $5849 = $i_0_i_i_i41 + 2 | 0; //@line 61149
                 HEAP32[$1 >> 2] = $5849; //@line 61150
                 if ((_cmd_match_expr_cmp($cmd, $val2_i40, $base) | 0) == 0) {
                  break;
                 }
                 while (1) {
                  $4909 = HEAP32[$1 >> 2] | 0; //@line 61160
                  while (1) {
                   $4910 = $cmd + 4 + $4909 | 0; //@line 61163
                   $4911 = HEAP8[$4910] | 0; //@line 61164
                   if (!(($4911 << 24 >> 24 | 0) == 13 | ($4911 << 24 >> 24 | 0) == 32 | ($4911 << 24 >> 24 | 0) == 9 | ($4911 << 24 >> 24 | 0) == 10)) {
                    break;
                   }
                   $4909 = $4909 + 1 | 0; //@line 61170
                  }
                  HEAP32[$1 >> 2] = $4909; //@line 61172
                  $4914 = HEAP8[$4910] | 0; //@line 61173
                  if ($4914 << 24 >> 24 == 61) {
                   if ((HEAP8[$4909 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                    $op_0_i1899 = 1;
                    $storemerge4168_in = $4909;
                   } else {
                    $i_0_i_i3724 = $4909;
                    $4921 = 61;
                    label = 16839; //@line 61184
                   }
                  } else {
                   $i_0_i_i3724 = $4909;
                   $4921 = $4914;
                   label = 16839; //@line 61188
                  }
                  if ((label | 0) == 16839) {
                   while (1) {
                    label = 0; //@line 61192
                    if (!(($4921 << 24 >> 24 | 0) == 13 | ($4921 << 24 >> 24 | 0) == 32 | ($4921 << 24 >> 24 | 0) == 9 | ($4921 << 24 >> 24 | 0) == 10)) {
                     break;
                    }
                    $4922 = $i_0_i_i3724 + 1 | 0; //@line 61198
                    $i_0_i_i3724 = $4922;
                    $4921 = HEAP8[$cmd + 4 + $4922 | 0] | 0;
                    label = 16839; //@line 61203
                   }
                   HEAP32[$1 >> 2] = $i_0_i_i3724; //@line 61206
                   if ((HEAP8[$cmd + 4 + $i_0_i_i3724 | 0] | 0) != 33) {
                    $4944 = $i_0_i_i3724; //@line 61210
                    break;
                   }
                   if ((HEAP8[$i_0_i_i3724 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                    $op_0_i1899 = 2;
                    $storemerge4168_in = $i_0_i_i3724;
                   } else {
                    $4944 = $i_0_i_i3724; //@line 61220
                    break;
                   }
                  }
                  HEAP32[$1 >> 2] = $storemerge4168_in + 2; //@line 61227
                  if ((_cmd_match_expr_cmp($cmd, $val2_i1898, $base) | 0) == 0) {
                   label = 16844; //@line 61232
                   break L21699;
                  }
                  if (($op_0_i1899 | 0) == 1) {
                   HEAP32[$val2_i40 >> 2] = (HEAP32[$val2_i40 >> 2] | 0) == (HEAP32[$val2_i1898 >> 2] | 0); //@line 61240
                   continue;
                  } else if (($op_0_i1899 | 0) == 2) {
                   HEAP32[$val2_i40 >> 2] = (HEAP32[$val2_i40 >> 2] | 0) != (HEAP32[$val2_i1898 >> 2] | 0); //@line 61248
                   continue;
                  } else {
                   continue;
                  }
                 }
                 while (1) {
                  $4946 = $4944; //@line 61258
                  while (1) {
                   $4947 = $cmd + 4 + $4946 | 0; //@line 61261
                   $4948 = HEAP8[$4947] | 0; //@line 61262
                   if (!(($4948 << 24 >> 24 | 0) == 13 | ($4948 << 24 >> 24 | 0) == 32 | ($4948 << 24 >> 24 | 0) == 9 | ($4948 << 24 >> 24 | 0) == 10)) {
                    break;
                   }
                   $4946 = $4946 + 1 | 0; //@line 61268
                  }
                  HEAP32[$1 >> 2] = $4946; //@line 61270
                  $4951 = HEAP8[$4947] | 0; //@line 61271
                  if ($4951 << 24 >> 24 == 38) {
                   if ((HEAP8[$4946 + 1 + ($cmd + 4) | 0] | 0) == 38) {
                    label = 17208; //@line 61279
                    break;
                   } else {
                    $i_0_i_i1911 = $4946;
                    $4958 = 38;
                   }
                  } else {
                   $i_0_i_i1911 = $4946;
                   $4958 = $4951;
                  }
                  while (1) {
                   if (!(($4958 << 24 >> 24 | 0) == 13 | ($4958 << 24 >> 24 | 0) == 32 | ($4958 << 24 >> 24 | 0) == 9 | ($4958 << 24 >> 24 | 0) == 10)) {
                    break;
                   }
                   $4959 = $i_0_i_i1911 + 1 | 0; //@line 61293
                   $i_0_i_i1911 = $4959;
                   $4958 = HEAP8[$cmd + 4 + $4959 | 0] | 0;
                  }
                  HEAP32[$1 >> 2] = $i_0_i_i1911; //@line 61300
                  if ((HEAP8[$cmd + 4 + $i_0_i_i1911 | 0] | 0) != 38) {
                   $i_0_i_i_i592 = $i_0_i_i1911; //@line 61304
                   break;
                  }
                  $4964 = $i_0_i_i1911 + 1 | 0; //@line 61307
                  HEAP32[$1 >> 2] = $4964; //@line 61308
                  if ((_cmd_match_expr_cmp($cmd, $val2_i796, $base) | 0) == 0) {
                   label = 16871; //@line 61313
                   break L21699;
                  }
                  while (1) {
                   $4969 = HEAP32[$1 >> 2] | 0; //@line 61319
                   while (1) {
                    $4970 = $cmd + 4 + $4969 | 0; //@line 61322
                    $4971 = HEAP8[$4970] | 0; //@line 61323
                    if (!(($4971 << 24 >> 24 | 0) == 13 | ($4971 << 24 >> 24 | 0) == 32 | ($4971 << 24 >> 24 | 0) == 9 | ($4971 << 24 >> 24 | 0) == 10)) {
                     break;
                    }
                    $4969 = $4969 + 1 | 0; //@line 61329
                   }
                   HEAP32[$1 >> 2] = $4969; //@line 61331
                   $4974 = HEAP8[$4970] | 0; //@line 61332
                   if ($4974 << 24 >> 24 == 61) {
                    if ((HEAP8[$4969 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                     $op_0_i1922 = 1;
                     $storemerge4167_in = $4969;
                    } else {
                     $i_0_i_i3744 = $4969;
                     $4981 = 61;
                     label = 16862; //@line 61343
                    }
                   } else {
                    $i_0_i_i3744 = $4969;
                    $4981 = $4974;
                    label = 16862; //@line 61347
                   }
                   if ((label | 0) == 16862) {
                    while (1) {
                     label = 0; //@line 61351
                     if (!(($4981 << 24 >> 24 | 0) == 13 | ($4981 << 24 >> 24 | 0) == 32 | ($4981 << 24 >> 24 | 0) == 9 | ($4981 << 24 >> 24 | 0) == 10)) {
                      break;
                     }
                     $4982 = $i_0_i_i3744 + 1 | 0; //@line 61357
                     $i_0_i_i3744 = $4982;
                     $4981 = HEAP8[$cmd + 4 + $4982 | 0] | 0;
                     label = 16862; //@line 61362
                    }
                    HEAP32[$1 >> 2] = $i_0_i_i3744; //@line 61365
                    if ((HEAP8[$cmd + 4 + $i_0_i_i3744 | 0] | 0) != 33) {
                     break;
                    }
                    if ((HEAP8[$i_0_i_i3744 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                     $op_0_i1922 = 2;
                     $storemerge4167_in = $i_0_i_i3744;
                    } else {
                     break;
                    }
                   }
                   HEAP32[$1 >> 2] = $storemerge4167_in + 2; //@line 61384
                   if ((_cmd_match_expr_cmp($cmd, $val2_i1921, $base) | 0) == 0) {
                    label = 16867; //@line 61389
                    break L21699;
                   }
                   if (($op_0_i1922 | 0) == 1) {
                    HEAP32[$val2_i796 >> 2] = (HEAP32[$val2_i796 >> 2] | 0) == (HEAP32[$val2_i1921 >> 2] | 0); //@line 61397
                    continue;
                   } else if (($op_0_i1922 | 0) == 2) {
                    HEAP32[$val2_i796 >> 2] = (HEAP32[$val2_i796 >> 2] | 0) != (HEAP32[$val2_i1921 >> 2] | 0); //@line 61405
                    continue;
                   } else {
                    continue;
                   }
                  }
                  HEAP32[$val2_i40 >> 2] = HEAP32[$val2_i796 >> 2] & HEAP32[$val2_i40 >> 2]; //@line 61415
                  $4944 = $i_0_i_i3744; //@line 61417
                 }
                 if ((label | 0) == 17208) {
                  label = 0; //@line 61420
                  HEAP32[$1 >> 2] = $4944; //@line 61421
                  $i_0_i_i_i592 = $4944; //@line 61423
                 }
                 while (1) {
                  $5007 = $cmd + 4 + $i_0_i_i_i592 | 0; //@line 61427
                  $5008 = HEAP8[$5007] | 0; //@line 61428
                  if (($5008 << 24 >> 24 | 0) == 13 | ($5008 << 24 >> 24 | 0) == 32 | ($5008 << 24 >> 24 | 0) == 9 | ($5008 << 24 >> 24 | 0) == 10) {
                   $i_0_i_i_i592 = $i_0_i_i_i592 + 1 | 0; //@line 61432
                   continue;
                  }
                  HEAP32[$1 >> 2] = $i_0_i_i_i592; //@line 61435
                  if ((HEAP8[$5007] | 0) != 94) {
                   $5121 = $i_0_i_i_i592; //@line 61439
                   break;
                  }
                  $5014 = $i_0_i_i_i592 + 1 | 0; //@line 61442
                  HEAP32[$1 >> 2] = $5014; //@line 61443
                  if ((_cmd_match_expr_cmp($cmd, $val2_i591, $base) | 0) == 0) {
                   label = 16916; //@line 61448
                   break L21699;
                  }
                  while (1) {
                   $5019 = HEAP32[$1 >> 2] | 0; //@line 61454
                   while (1) {
                    $5020 = $cmd + 4 + $5019 | 0; //@line 61457
                    $5021 = HEAP8[$5020] | 0; //@line 61458
                    if (!(($5021 << 24 >> 24 | 0) == 13 | ($5021 << 24 >> 24 | 0) == 32 | ($5021 << 24 >> 24 | 0) == 9 | ($5021 << 24 >> 24 | 0) == 10)) {
                     break;
                    }
                    $5019 = $5019 + 1 | 0; //@line 61464
                   }
                   HEAP32[$1 >> 2] = $5019; //@line 61466
                   $5024 = HEAP8[$5020] | 0; //@line 61467
                   if ($5024 << 24 >> 24 == 61) {
                    if ((HEAP8[$5019 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                     $op_0_i1926 = 1;
                     $storemerge4166_in = $5019;
                    } else {
                     $i_0_i_i3764 = $5019;
                     $5031 = 61;
                     label = 16882; //@line 61478
                    }
                   } else {
                    $i_0_i_i3764 = $5019;
                    $5031 = $5024;
                    label = 16882; //@line 61482
                   }
                   if ((label | 0) == 16882) {
                    while (1) {
                     label = 0; //@line 61486
                     if (!(($5031 << 24 >> 24 | 0) == 13 | ($5031 << 24 >> 24 | 0) == 32 | ($5031 << 24 >> 24 | 0) == 9 | ($5031 << 24 >> 24 | 0) == 10)) {
                      break;
                     }
                     $5032 = $i_0_i_i3764 + 1 | 0; //@line 61492
                     $i_0_i_i3764 = $5032;
                     $5031 = HEAP8[$cmd + 4 + $5032 | 0] | 0;
                     label = 16882; //@line 61497
                    }
                    HEAP32[$1 >> 2] = $i_0_i_i3764; //@line 61500
                    if ((HEAP8[$cmd + 4 + $i_0_i_i3764 | 0] | 0) != 33) {
                     $5054 = $i_0_i_i3764; //@line 61504
                     break;
                    }
                    if ((HEAP8[$i_0_i_i3764 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                     $op_0_i1926 = 2;
                     $storemerge4166_in = $i_0_i_i3764;
                    } else {
                     $5054 = $i_0_i_i3764; //@line 61514
                     break;
                    }
                   }
                   HEAP32[$1 >> 2] = $storemerge4166_in + 2; //@line 61521
                   if ((_cmd_match_expr_cmp($cmd, $val2_i1925, $base) | 0) == 0) {
                    label = 16887; //@line 61526
                    break L21699;
                   }
                   if (($op_0_i1926 | 0) == 1) {
                    HEAP32[$val2_i591 >> 2] = (HEAP32[$val2_i591 >> 2] | 0) == (HEAP32[$val2_i1925 >> 2] | 0); //@line 61534
                    continue;
                   } else if (($op_0_i1926 | 0) == 2) {
                    HEAP32[$val2_i591 >> 2] = (HEAP32[$val2_i591 >> 2] | 0) != (HEAP32[$val2_i1925 >> 2] | 0); //@line 61542
                    continue;
                   } else {
                    continue;
                   }
                  }
                  while (1) {
                   $5056 = $5054; //@line 61552
                   while (1) {
                    $5057 = $cmd + 4 + $5056 | 0; //@line 61555
                    $5058 = HEAP8[$5057] | 0; //@line 61556
                    if (!(($5058 << 24 >> 24 | 0) == 13 | ($5058 << 24 >> 24 | 0) == 32 | ($5058 << 24 >> 24 | 0) == 9 | ($5058 << 24 >> 24 | 0) == 10)) {
                     break;
                    }
                    $5056 = $5056 + 1 | 0; //@line 61562
                   }
                   HEAP32[$1 >> 2] = $5056; //@line 61564
                   $5061 = HEAP8[$5057] | 0; //@line 61565
                   if ($5061 << 24 >> 24 == 38) {
                    if ((HEAP8[$5056 + 1 + ($cmd + 4) | 0] | 0) == 38) {
                     label = 17209; //@line 61573
                     break;
                    } else {
                     $i_0_i_i1938 = $5056;
                     $5068 = 38;
                    }
                   } else {
                    $i_0_i_i1938 = $5056;
                    $5068 = $5061;
                   }
                   while (1) {
                    if (!(($5068 << 24 >> 24 | 0) == 13 | ($5068 << 24 >> 24 | 0) == 32 | ($5068 << 24 >> 24 | 0) == 9 | ($5068 << 24 >> 24 | 0) == 10)) {
                     break;
                    }
                    $5069 = $i_0_i_i1938 + 1 | 0; //@line 61587
                    $i_0_i_i1938 = $5069;
                    $5068 = HEAP8[$cmd + 4 + $5069 | 0] | 0;
                   }
                   HEAP32[$1 >> 2] = $i_0_i_i1938; //@line 61594
                   if ((HEAP8[$cmd + 4 + $i_0_i_i1938 | 0] | 0) != 38) {
                    $5117 = $i_0_i_i1938; //@line 61598
                    break;
                   }
                   $5074 = $i_0_i_i1938 + 1 | 0; //@line 61601
                   HEAP32[$1 >> 2] = $5074; //@line 61602
                   if ((_cmd_match_expr_cmp($cmd, $val2_i799, $base) | 0) == 0) {
                    label = 16914; //@line 61607
                    break L21699;
                   }
                   while (1) {
                    $5079 = HEAP32[$1 >> 2] | 0; //@line 61613
                    while (1) {
                     $5080 = $cmd + 4 + $5079 | 0; //@line 61616
                     $5081 = HEAP8[$5080] | 0; //@line 61617
                     if (!(($5081 << 24 >> 24 | 0) == 13 | ($5081 << 24 >> 24 | 0) == 32 | ($5081 << 24 >> 24 | 0) == 9 | ($5081 << 24 >> 24 | 0) == 10)) {
                      break;
                     }
                     $5079 = $5079 + 1 | 0; //@line 61623
                    }
                    HEAP32[$1 >> 2] = $5079; //@line 61625
                    $5084 = HEAP8[$5080] | 0; //@line 61626
                    if ($5084 << 24 >> 24 == 61) {
                     if ((HEAP8[$5079 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                      $op_0_i1949 = 1;
                      $storemerge4165_in = $5079;
                     } else {
                      $i_0_i_i3784 = $5079;
                      $5091 = 61;
                      label = 16905; //@line 61637
                     }
                    } else {
                     $i_0_i_i3784 = $5079;
                     $5091 = $5084;
                     label = 16905; //@line 61641
                    }
                    if ((label | 0) == 16905) {
                     while (1) {
                      label = 0; //@line 61645
                      if (!(($5091 << 24 >> 24 | 0) == 13 | ($5091 << 24 >> 24 | 0) == 32 | ($5091 << 24 >> 24 | 0) == 9 | ($5091 << 24 >> 24 | 0) == 10)) {
                       break;
                      }
                      $5092 = $i_0_i_i3784 + 1 | 0; //@line 61651
                      $i_0_i_i3784 = $5092;
                      $5091 = HEAP8[$cmd + 4 + $5092 | 0] | 0;
                      label = 16905; //@line 61656
                     }
                     HEAP32[$1 >> 2] = $i_0_i_i3784; //@line 61659
                     if ((HEAP8[$cmd + 4 + $i_0_i_i3784 | 0] | 0) != 33) {
                      break;
                     }
                     if ((HEAP8[$i_0_i_i3784 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                      $op_0_i1949 = 2;
                      $storemerge4165_in = $i_0_i_i3784;
                     } else {
                      break;
                     }
                    }
                    HEAP32[$1 >> 2] = $storemerge4165_in + 2; //@line 61678
                    if ((_cmd_match_expr_cmp($cmd, $val2_i1948, $base) | 0) == 0) {
                     label = 16910; //@line 61683
                     break L21699;
                    }
                    if (($op_0_i1949 | 0) == 1) {
                     HEAP32[$val2_i799 >> 2] = (HEAP32[$val2_i799 >> 2] | 0) == (HEAP32[$val2_i1948 >> 2] | 0); //@line 61691
                     continue;
                    } else if (($op_0_i1949 | 0) == 2) {
                     HEAP32[$val2_i799 >> 2] = (HEAP32[$val2_i799 >> 2] | 0) != (HEAP32[$val2_i1948 >> 2] | 0); //@line 61699
                     continue;
                    } else {
                     continue;
                    }
                   }
                   HEAP32[$val2_i591 >> 2] = HEAP32[$val2_i799 >> 2] & HEAP32[$val2_i591 >> 2]; //@line 61709
                   $5054 = $i_0_i_i3784; //@line 61711
                  }
                  if ((label | 0) == 17209) {
                   label = 0; //@line 61714
                   HEAP32[$1 >> 2] = $5054; //@line 61715
                   $5117 = $5054; //@line 61717
                  }
                  HEAP32[$val2_i40 >> 2] = HEAP32[$val2_i591 >> 2] ^ HEAP32[$val2_i40 >> 2]; //@line 61723
                  $i_0_i_i_i592 = $5117; //@line 61725
                 }
                 while (1) {
                  $5123 = $5121; //@line 61730
                  while (1) {
                   $5124 = $cmd + 4 + $5123 | 0; //@line 61733
                   $5125 = HEAP8[$5124] | 0; //@line 61734
                   if (!(($5125 << 24 >> 24 | 0) == 13 | ($5125 << 24 >> 24 | 0) == 32 | ($5125 << 24 >> 24 | 0) == 9 | ($5125 << 24 >> 24 | 0) == 10)) {
                    break;
                   }
                   $5123 = $5123 + 1 | 0; //@line 61740
                  }
                  HEAP32[$1 >> 2] = $5123; //@line 61742
                  $5128 = HEAP8[$5124] | 0; //@line 61743
                  if ($5128 << 24 >> 24 == 124) {
                   if ((HEAP8[$5123 + 1 + ($cmd + 4) | 0] | 0) == 124) {
                    label = 17210; //@line 61751
                    break;
                   } else {
                    $i_0_i_i612 = $5123;
                    $5135 = 124;
                   }
                  } else {
                   $i_0_i_i612 = $5123;
                   $5135 = $5128;
                  }
                  while (1) {
                   if (!(($5135 << 24 >> 24 | 0) == 13 | ($5135 << 24 >> 24 | 0) == 32 | ($5135 << 24 >> 24 | 0) == 9 | ($5135 << 24 >> 24 | 0) == 10)) {
                    break;
                   }
                   $5136 = $i_0_i_i612 + 1 | 0; //@line 61765
                   $i_0_i_i612 = $5136;
                   $5135 = HEAP8[$cmd + 4 + $5136 | 0] | 0;
                  }
                  HEAP32[$1 >> 2] = $i_0_i_i612; //@line 61772
                  if ((HEAP8[$cmd + 4 + $i_0_i_i612 | 0] | 0) != 124) {
                   $i_0_i_i_i118 = $i_0_i_i612; //@line 61776
                   break;
                  }
                  $5141 = $i_0_i_i612 + 1 | 0; //@line 61779
                  HEAP32[$1 >> 2] = $5141; //@line 61780
                  if ((_cmd_match_expr_cmp($cmd, $val2_i159, $base) | 0) == 0) {
                   label = 17011; //@line 61785
                   break L21699;
                  }
                  while (1) {
                   $5146 = HEAP32[$1 >> 2] | 0; //@line 61791
                   while (1) {
                    $5147 = $cmd + 4 + $5146 | 0; //@line 61794
                    $5148 = HEAP8[$5147] | 0; //@line 61795
                    if (!(($5148 << 24 >> 24 | 0) == 13 | ($5148 << 24 >> 24 | 0) == 32 | ($5148 << 24 >> 24 | 0) == 9 | ($5148 << 24 >> 24 | 0) == 10)) {
                     break;
                    }
                    $5146 = $5146 + 1 | 0; //@line 61801
                   }
                   HEAP32[$1 >> 2] = $5146; //@line 61803
                   $5151 = HEAP8[$5147] | 0; //@line 61804
                   if ($5151 << 24 >> 24 == 61) {
                    if ((HEAP8[$5146 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                     $op_0_i1953 = 1;
                     $storemerge4164_in = $5146;
                    } else {
                     $i_0_i_i3804 = $5146;
                     $5158 = 61;
                     label = 16932; //@line 61815
                    }
                   } else {
                    $i_0_i_i3804 = $5146;
                    $5158 = $5151;
                    label = 16932; //@line 61819
                   }
                   if ((label | 0) == 16932) {
                    while (1) {
                     label = 0; //@line 61823
                     if (!(($5158 << 24 >> 24 | 0) == 13 | ($5158 << 24 >> 24 | 0) == 32 | ($5158 << 24 >> 24 | 0) == 9 | ($5158 << 24 >> 24 | 0) == 10)) {
                      break;
                     }
                     $5159 = $i_0_i_i3804 + 1 | 0; //@line 61829
                     $i_0_i_i3804 = $5159;
                     $5158 = HEAP8[$cmd + 4 + $5159 | 0] | 0;
                     label = 16932; //@line 61834
                    }
                    HEAP32[$1 >> 2] = $i_0_i_i3804; //@line 61837
                    if ((HEAP8[$cmd + 4 + $i_0_i_i3804 | 0] | 0) != 33) {
                     $5181 = $i_0_i_i3804; //@line 61841
                     break;
                    }
                    if ((HEAP8[$i_0_i_i3804 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                     $op_0_i1953 = 2;
                     $storemerge4164_in = $i_0_i_i3804;
                    } else {
                     $5181 = $i_0_i_i3804; //@line 61851
                     break;
                    }
                   }
                   HEAP32[$1 >> 2] = $storemerge4164_in + 2; //@line 61858
                   if ((_cmd_match_expr_cmp($cmd, $val2_i1952, $base) | 0) == 0) {
                    label = 16937; //@line 61863
                    break L21699;
                   }
                   if (($op_0_i1953 | 0) == 1) {
                    HEAP32[$val2_i159 >> 2] = (HEAP32[$val2_i159 >> 2] | 0) == (HEAP32[$val2_i1952 >> 2] | 0); //@line 61871
                    continue;
                   } else if (($op_0_i1953 | 0) == 2) {
                    HEAP32[$val2_i159 >> 2] = (HEAP32[$val2_i159 >> 2] | 0) != (HEAP32[$val2_i1952 >> 2] | 0); //@line 61879
                    continue;
                   } else {
                    continue;
                   }
                  }
                  while (1) {
                   $5183 = $5181; //@line 61889
                   while (1) {
                    $5184 = $cmd + 4 + $5183 | 0; //@line 61892
                    $5185 = HEAP8[$5184] | 0; //@line 61893
                    if (!(($5185 << 24 >> 24 | 0) == 13 | ($5185 << 24 >> 24 | 0) == 32 | ($5185 << 24 >> 24 | 0) == 9 | ($5185 << 24 >> 24 | 0) == 10)) {
                     break;
                    }
                    $5183 = $5183 + 1 | 0; //@line 61899
                   }
                   HEAP32[$1 >> 2] = $5183; //@line 61901
                   $5188 = HEAP8[$5184] | 0; //@line 61902
                   if ($5188 << 24 >> 24 == 38) {
                    if ((HEAP8[$5183 + 1 + ($cmd + 4) | 0] | 0) == 38) {
                     label = 17211; //@line 61910
                     break;
                    } else {
                     $i_0_i_i1965 = $5183;
                     $5195 = 38;
                    }
                   } else {
                    $i_0_i_i1965 = $5183;
                    $5195 = $5188;
                   }
                   while (1) {
                    if (!(($5195 << 24 >> 24 | 0) == 13 | ($5195 << 24 >> 24 | 0) == 32 | ($5195 << 24 >> 24 | 0) == 9 | ($5195 << 24 >> 24 | 0) == 10)) {
                     break;
                    }
                    $5196 = $i_0_i_i1965 + 1 | 0; //@line 61924
                    $i_0_i_i1965 = $5196;
                    $5195 = HEAP8[$cmd + 4 + $5196 | 0] | 0;
                   }
                   HEAP32[$1 >> 2] = $i_0_i_i1965; //@line 61931
                   if ((HEAP8[$cmd + 4 + $i_0_i_i1965 | 0] | 0) != 38) {
                    $i_0_i_i_i623 = $i_0_i_i1965; //@line 61935
                    break;
                   }
                   $5201 = $i_0_i_i1965 + 1 | 0; //@line 61938
                   HEAP32[$1 >> 2] = $5201; //@line 61939
                   if ((_cmd_match_expr_cmp($cmd, $val2_i802, $base) | 0) == 0) {
                    label = 16964; //@line 61944
                    break L21699;
                   }
                   while (1) {
                    $5206 = HEAP32[$1 >> 2] | 0; //@line 61950
                    while (1) {
                     $5207 = $cmd + 4 + $5206 | 0; //@line 61953
                     $5208 = HEAP8[$5207] | 0; //@line 61954
                     if (!(($5208 << 24 >> 24 | 0) == 13 | ($5208 << 24 >> 24 | 0) == 32 | ($5208 << 24 >> 24 | 0) == 9 | ($5208 << 24 >> 24 | 0) == 10)) {
                      break;
                     }
                     $5206 = $5206 + 1 | 0; //@line 61960
                    }
                    HEAP32[$1 >> 2] = $5206; //@line 61962
                    $5211 = HEAP8[$5207] | 0; //@line 61963
                    if ($5211 << 24 >> 24 == 61) {
                     if ((HEAP8[$5206 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                      $op_0_i1976 = 1;
                      $storemerge4163_in = $5206;
                     } else {
                      $i_0_i_i3824 = $5206;
                      $5218 = 61;
                      label = 16955; //@line 61974
                     }
                    } else {
                     $i_0_i_i3824 = $5206;
                     $5218 = $5211;
                     label = 16955; //@line 61978
                    }
                    if ((label | 0) == 16955) {
                     while (1) {
                      label = 0; //@line 61982
                      if (!(($5218 << 24 >> 24 | 0) == 13 | ($5218 << 24 >> 24 | 0) == 32 | ($5218 << 24 >> 24 | 0) == 9 | ($5218 << 24 >> 24 | 0) == 10)) {
                       break;
                      }
                      $5219 = $i_0_i_i3824 + 1 | 0; //@line 61988
                      $i_0_i_i3824 = $5219;
                      $5218 = HEAP8[$cmd + 4 + $5219 | 0] | 0;
                      label = 16955; //@line 61993
                     }
                     HEAP32[$1 >> 2] = $i_0_i_i3824; //@line 61996
                     if ((HEAP8[$cmd + 4 + $i_0_i_i3824 | 0] | 0) != 33) {
                      break;
                     }
                     if ((HEAP8[$i_0_i_i3824 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                      $op_0_i1976 = 2;
                      $storemerge4163_in = $i_0_i_i3824;
                     } else {
                      break;
                     }
                    }
                    HEAP32[$1 >> 2] = $storemerge4163_in + 2; //@line 62015
                    if ((_cmd_match_expr_cmp($cmd, $val2_i1975, $base) | 0) == 0) {
                     label = 16960; //@line 62020
                     break L21699;
                    }
                    if (($op_0_i1976 | 0) == 1) {
                     HEAP32[$val2_i802 >> 2] = (HEAP32[$val2_i802 >> 2] | 0) == (HEAP32[$val2_i1975 >> 2] | 0); //@line 62028
                     continue;
                    } else if (($op_0_i1976 | 0) == 2) {
                     HEAP32[$val2_i802 >> 2] = (HEAP32[$val2_i802 >> 2] | 0) != (HEAP32[$val2_i1975 >> 2] | 0); //@line 62036
                     continue;
                    } else {
                     continue;
                    }
                   }
                   HEAP32[$val2_i159 >> 2] = HEAP32[$val2_i802 >> 2] & HEAP32[$val2_i159 >> 2]; //@line 62046
                   $5181 = $i_0_i_i3824; //@line 62048
                  }
                  if ((label | 0) == 17211) {
                   label = 0; //@line 62051
                   HEAP32[$1 >> 2] = $5181; //@line 62052
                   $i_0_i_i_i623 = $5181; //@line 62054
                  }
                  while (1) {
                   $5244 = $cmd + 4 + $i_0_i_i_i623 | 0; //@line 62058
                   $5245 = HEAP8[$5244] | 0; //@line 62059
                   if (($5245 << 24 >> 24 | 0) == 13 | ($5245 << 24 >> 24 | 0) == 32 | ($5245 << 24 >> 24 | 0) == 9 | ($5245 << 24 >> 24 | 0) == 10) {
                    $i_0_i_i_i623 = $i_0_i_i_i623 + 1 | 0; //@line 62063
                    continue;
                   }
                   HEAP32[$1 >> 2] = $i_0_i_i_i623; //@line 62066
                   if ((HEAP8[$5244] | 0) != 94) {
                    break;
                   }
                   $5251 = $i_0_i_i_i623 + 1 | 0; //@line 62072
                   HEAP32[$1 >> 2] = $5251; //@line 62073
                   if ((_cmd_match_expr_cmp($cmd, $val2_i622, $base) | 0) == 0) {
                    label = 17009; //@line 62078
                    break L21699;
                   }
                   while (1) {
                    $5256 = HEAP32[$1 >> 2] | 0; //@line 62084
                    while (1) {
                     $5257 = $cmd + 4 + $5256 | 0; //@line 62087
                     $5258 = HEAP8[$5257] | 0; //@line 62088
                     if (!(($5258 << 24 >> 24 | 0) == 13 | ($5258 << 24 >> 24 | 0) == 32 | ($5258 << 24 >> 24 | 0) == 9 | ($5258 << 24 >> 24 | 0) == 10)) {
                      break;
                     }
                     $5256 = $5256 + 1 | 0; //@line 62094
                    }
                    HEAP32[$1 >> 2] = $5256; //@line 62096
                    $5261 = HEAP8[$5257] | 0; //@line 62097
                    if ($5261 << 24 >> 24 == 61) {
                     if ((HEAP8[$5256 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                      $op_0_i1980 = 1;
                      $storemerge4162_in = $5256;
                     } else {
                      $i_0_i_i3844 = $5256;
                      $5268 = 61;
                      label = 16975; //@line 62108
                     }
                    } else {
                     $i_0_i_i3844 = $5256;
                     $5268 = $5261;
                     label = 16975; //@line 62112
                    }
                    if ((label | 0) == 16975) {
                     while (1) {
                      label = 0; //@line 62116
                      if (!(($5268 << 24 >> 24 | 0) == 13 | ($5268 << 24 >> 24 | 0) == 32 | ($5268 << 24 >> 24 | 0) == 9 | ($5268 << 24 >> 24 | 0) == 10)) {
                       break;
                      }
                      $5269 = $i_0_i_i3844 + 1 | 0; //@line 62122
                      $i_0_i_i3844 = $5269;
                      $5268 = HEAP8[$cmd + 4 + $5269 | 0] | 0;
                      label = 16975; //@line 62127
                     }
                     HEAP32[$1 >> 2] = $i_0_i_i3844; //@line 62130
                     if ((HEAP8[$cmd + 4 + $i_0_i_i3844 | 0] | 0) != 33) {
                      $5291 = $i_0_i_i3844; //@line 62134
                      break;
                     }
                     if ((HEAP8[$i_0_i_i3844 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                      $op_0_i1980 = 2;
                      $storemerge4162_in = $i_0_i_i3844;
                     } else {
                      $5291 = $i_0_i_i3844; //@line 62144
                      break;
                     }
                    }
                    HEAP32[$1 >> 2] = $storemerge4162_in + 2; //@line 62151
                    if ((_cmd_match_expr_cmp($cmd, $val2_i1979, $base) | 0) == 0) {
                     label = 16980; //@line 62156
                     break L21699;
                    }
                    if (($op_0_i1980 | 0) == 1) {
                     HEAP32[$val2_i622 >> 2] = (HEAP32[$val2_i622 >> 2] | 0) == (HEAP32[$val2_i1979 >> 2] | 0); //@line 62164
                     continue;
                    } else if (($op_0_i1980 | 0) == 2) {
                     HEAP32[$val2_i622 >> 2] = (HEAP32[$val2_i622 >> 2] | 0) != (HEAP32[$val2_i1979 >> 2] | 0); //@line 62172
                     continue;
                    } else {
                     continue;
                    }
                   }
                   while (1) {
                    $5293 = $5291; //@line 62182
                    while (1) {
                     $5294 = $cmd + 4 + $5293 | 0; //@line 62185
                     $5295 = HEAP8[$5294] | 0; //@line 62186
                     if (!(($5295 << 24 >> 24 | 0) == 13 | ($5295 << 24 >> 24 | 0) == 32 | ($5295 << 24 >> 24 | 0) == 9 | ($5295 << 24 >> 24 | 0) == 10)) {
                      break;
                     }
                     $5293 = $5293 + 1 | 0; //@line 62192
                    }
                    HEAP32[$1 >> 2] = $5293; //@line 62194
                    $5298 = HEAP8[$5294] | 0; //@line 62195
                    if ($5298 << 24 >> 24 == 38) {
                     if ((HEAP8[$5293 + 1 + ($cmd + 4) | 0] | 0) == 38) {
                      label = 17212; //@line 62203
                      break;
                     } else {
                      $i_0_i_i1992 = $5293;
                      $5305 = 38;
                     }
                    } else {
                     $i_0_i_i1992 = $5293;
                     $5305 = $5298;
                    }
                    while (1) {
                     if (!(($5305 << 24 >> 24 | 0) == 13 | ($5305 << 24 >> 24 | 0) == 32 | ($5305 << 24 >> 24 | 0) == 9 | ($5305 << 24 >> 24 | 0) == 10)) {
                      break;
                     }
                     $5306 = $i_0_i_i1992 + 1 | 0; //@line 62217
                     $i_0_i_i1992 = $5306;
                     $5305 = HEAP8[$cmd + 4 + $5306 | 0] | 0;
                    }
                    HEAP32[$1 >> 2] = $i_0_i_i1992; //@line 62224
                    if ((HEAP8[$cmd + 4 + $i_0_i_i1992 | 0] | 0) != 38) {
                     $5354 = $i_0_i_i1992; //@line 62228
                     break;
                    }
                    $5311 = $i_0_i_i1992 + 1 | 0; //@line 62231
                    HEAP32[$1 >> 2] = $5311; //@line 62232
                    if ((_cmd_match_expr_cmp($cmd, $val2_i805, $base) | 0) == 0) {
                     label = 17007; //@line 62237
                     break L21699;
                    }
                    while (1) {
                     $5316 = HEAP32[$1 >> 2] | 0; //@line 62243
                     while (1) {
                      $5317 = $cmd + 4 + $5316 | 0; //@line 62246
                      $5318 = HEAP8[$5317] | 0; //@line 62247
                      if (!(($5318 << 24 >> 24 | 0) == 13 | ($5318 << 24 >> 24 | 0) == 32 | ($5318 << 24 >> 24 | 0) == 9 | ($5318 << 24 >> 24 | 0) == 10)) {
                       break;
                      }
                      $5316 = $5316 + 1 | 0; //@line 62253
                     }
                     HEAP32[$1 >> 2] = $5316; //@line 62255
                     $5321 = HEAP8[$5317] | 0; //@line 62256
                     if ($5321 << 24 >> 24 == 61) {
                      if ((HEAP8[$5316 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                       $op_0_i2003 = 1;
                       $storemerge4161_in = $5316;
                      } else {
                       $i_0_i_i3864 = $5316;
                       $5328 = 61;
                       label = 16998; //@line 62267
                      }
                     } else {
                      $i_0_i_i3864 = $5316;
                      $5328 = $5321;
                      label = 16998; //@line 62271
                     }
                     if ((label | 0) == 16998) {
                      while (1) {
                       label = 0; //@line 62275
                       if (!(($5328 << 24 >> 24 | 0) == 13 | ($5328 << 24 >> 24 | 0) == 32 | ($5328 << 24 >> 24 | 0) == 9 | ($5328 << 24 >> 24 | 0) == 10)) {
                        break;
                       }
                       $5329 = $i_0_i_i3864 + 1 | 0; //@line 62281
                       $i_0_i_i3864 = $5329;
                       $5328 = HEAP8[$cmd + 4 + $5329 | 0] | 0;
                       label = 16998; //@line 62286
                      }
                      HEAP32[$1 >> 2] = $i_0_i_i3864; //@line 62289
                      if ((HEAP8[$cmd + 4 + $i_0_i_i3864 | 0] | 0) != 33) {
                       break;
                      }
                      if ((HEAP8[$i_0_i_i3864 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                       $op_0_i2003 = 2;
                       $storemerge4161_in = $i_0_i_i3864;
                      } else {
                       break;
                      }
                     }
                     HEAP32[$1 >> 2] = $storemerge4161_in + 2; //@line 62308
                     if ((_cmd_match_expr_cmp($cmd, $val2_i2002, $base) | 0) == 0) {
                      label = 17003; //@line 62313
                      break L21699;
                     }
                     if (($op_0_i2003 | 0) == 1) {
                      HEAP32[$val2_i805 >> 2] = (HEAP32[$val2_i805 >> 2] | 0) == (HEAP32[$val2_i2002 >> 2] | 0); //@line 62321
                      continue;
                     } else if (($op_0_i2003 | 0) == 2) {
                      HEAP32[$val2_i805 >> 2] = (HEAP32[$val2_i805 >> 2] | 0) != (HEAP32[$val2_i2002 >> 2] | 0); //@line 62329
                      continue;
                     } else {
                      continue;
                     }
                    }
                    HEAP32[$val2_i622 >> 2] = HEAP32[$val2_i805 >> 2] & HEAP32[$val2_i622 >> 2]; //@line 62339
                    $5291 = $i_0_i_i3864; //@line 62341
                   }
                   if ((label | 0) == 17212) {
                    label = 0; //@line 62344
                    HEAP32[$1 >> 2] = $5291; //@line 62345
                    $5354 = $5291; //@line 62347
                   }
                   HEAP32[$val2_i159 >> 2] = HEAP32[$val2_i622 >> 2] ^ HEAP32[$val2_i159 >> 2]; //@line 62353
                   $i_0_i_i_i623 = $5354; //@line 62355
                  }
                  HEAP32[$val2_i40 >> 2] = HEAP32[$val2_i159 >> 2] | HEAP32[$val2_i40 >> 2]; //@line 62360
                  $5121 = $i_0_i_i_i623; //@line 62362
                 }
                 if ((label | 0) == 17210) {
                  label = 0; //@line 62365
                  HEAP32[$1 >> 2] = $5121; //@line 62366
                  $i_0_i_i_i118 = $5121; //@line 62368
                 }
                 while (1) {
                  $5362 = $cmd + 4 + $i_0_i_i_i118 | 0; //@line 62372
                  $5363 = HEAP8[$5362] | 0; //@line 62373
                  if (($5363 << 24 >> 24 | 0) == 13 | ($5363 << 24 >> 24 | 0) == 32 | ($5363 << 24 >> 24 | 0) == 9 | ($5363 << 24 >> 24 | 0) == 10) {
                   $i_0_i_i_i118 = $i_0_i_i_i118 + 1 | 0; //@line 62377
                   continue;
                  }
                  HEAP32[$1 >> 2] = $i_0_i_i_i118; //@line 62380
                  if ((HEAP8[$5362] | 0) != 38) {
                   break;
                  }
                  if ((HEAP8[$i_0_i_i_i118 + 1 + ($cmd + 4) | 0] | 0) != 38) {
                   break;
                  }
                  $5853 = $i_0_i_i_i118 + 2 | 0; //@line 62393
                  HEAP32[$1 >> 2] = $5853; //@line 62394
                  if ((_cmd_match_expr_cmp($cmd, $val2_i117, $base) | 0) == 0) {
                   label = 17196; //@line 62399
                   break L21699;
                  }
                  while (1) {
                   $5374 = HEAP32[$1 >> 2] | 0; //@line 62405
                   while (1) {
                    $5375 = $cmd + 4 + $5374 | 0; //@line 62408
                    $5376 = HEAP8[$5375] | 0; //@line 62409
                    if (!(($5376 << 24 >> 24 | 0) == 13 | ($5376 << 24 >> 24 | 0) == 32 | ($5376 << 24 >> 24 | 0) == 9 | ($5376 << 24 >> 24 | 0) == 10)) {
                     break;
                    }
                    $5374 = $5374 + 1 | 0; //@line 62415
                   }
                   HEAP32[$1 >> 2] = $5374; //@line 62417
                   $5379 = HEAP8[$5375] | 0; //@line 62418
                   if ($5379 << 24 >> 24 == 61) {
                    if ((HEAP8[$5374 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                     $op_0_i2007 = 1;
                     $storemerge4160_in = $5374;
                    } else {
                     $i_0_i_i3884 = $5374;
                     $5386 = 61;
                     label = 17022; //@line 62429
                    }
                   } else {
                    $i_0_i_i3884 = $5374;
                    $5386 = $5379;
                    label = 17022; //@line 62433
                   }
                   if ((label | 0) == 17022) {
                    while (1) {
                     label = 0; //@line 62437
                     if (!(($5386 << 24 >> 24 | 0) == 13 | ($5386 << 24 >> 24 | 0) == 32 | ($5386 << 24 >> 24 | 0) == 9 | ($5386 << 24 >> 24 | 0) == 10)) {
                      break;
                     }
                     $5387 = $i_0_i_i3884 + 1 | 0; //@line 62443
                     $i_0_i_i3884 = $5387;
                     $5386 = HEAP8[$cmd + 4 + $5387 | 0] | 0;
                     label = 17022; //@line 62448
                    }
                    HEAP32[$1 >> 2] = $i_0_i_i3884; //@line 62451
                    if ((HEAP8[$cmd + 4 + $i_0_i_i3884 | 0] | 0) != 33) {
                     $5409 = $i_0_i_i3884; //@line 62455
                     break;
                    }
                    if ((HEAP8[$i_0_i_i3884 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                     $op_0_i2007 = 2;
                     $storemerge4160_in = $i_0_i_i3884;
                    } else {
                     $5409 = $i_0_i_i3884; //@line 62465
                     break;
                    }
                   }
                   HEAP32[$1 >> 2] = $storemerge4160_in + 2; //@line 62472
                   if ((_cmd_match_expr_cmp($cmd, $val2_i2006, $base) | 0) == 0) {
                    label = 17027; //@line 62477
                    break L21699;
                   }
                   if (($op_0_i2007 | 0) == 1) {
                    HEAP32[$val2_i117 >> 2] = (HEAP32[$val2_i117 >> 2] | 0) == (HEAP32[$val2_i2006 >> 2] | 0); //@line 62485
                    continue;
                   } else if (($op_0_i2007 | 0) == 2) {
                    HEAP32[$val2_i117 >> 2] = (HEAP32[$val2_i117 >> 2] | 0) != (HEAP32[$val2_i2006 >> 2] | 0); //@line 62493
                    continue;
                   } else {
                    continue;
                   }
                  }
                  while (1) {
                   $5411 = $5409; //@line 62503
                   while (1) {
                    $5412 = $cmd + 4 + $5411 | 0; //@line 62506
                    $5413 = HEAP8[$5412] | 0; //@line 62507
                    if (!(($5413 << 24 >> 24 | 0) == 13 | ($5413 << 24 >> 24 | 0) == 32 | ($5413 << 24 >> 24 | 0) == 9 | ($5413 << 24 >> 24 | 0) == 10)) {
                     break;
                    }
                    $5411 = $5411 + 1 | 0; //@line 62513
                   }
                   HEAP32[$1 >> 2] = $5411; //@line 62515
                   $5416 = HEAP8[$5412] | 0; //@line 62516
                   if ($5416 << 24 >> 24 == 38) {
                    if ((HEAP8[$5411 + 1 + ($cmd + 4) | 0] | 0) == 38) {
                     label = 17214; //@line 62524
                     break;
                    } else {
                     $i_0_i_i2019 = $5411;
                     $5423 = 38;
                    }
                   } else {
                    $i_0_i_i2019 = $5411;
                    $5423 = $5416;
                   }
                   while (1) {
                    if (!(($5423 << 24 >> 24 | 0) == 13 | ($5423 << 24 >> 24 | 0) == 32 | ($5423 << 24 >> 24 | 0) == 9 | ($5423 << 24 >> 24 | 0) == 10)) {
                     break;
                    }
                    $5424 = $i_0_i_i2019 + 1 | 0; //@line 62538
                    $i_0_i_i2019 = $5424;
                    $5423 = HEAP8[$cmd + 4 + $5424 | 0] | 0;
                   }
                   HEAP32[$1 >> 2] = $i_0_i_i2019; //@line 62545
                   if ((HEAP8[$cmd + 4 + $i_0_i_i2019 | 0] | 0) != 38) {
                    $i_0_i_i_i635 = $i_0_i_i2019; //@line 62549
                    break;
                   }
                   $5429 = $i_0_i_i2019 + 1 | 0; //@line 62552
                   HEAP32[$1 >> 2] = $5429; //@line 62553
                   if ((_cmd_match_expr_cmp($cmd, $val2_i808, $base) | 0) == 0) {
                    label = 17054; //@line 62558
                    break L21699;
                   }
                   while (1) {
                    $5434 = HEAP32[$1 >> 2] | 0; //@line 62564
                    while (1) {
                     $5435 = $cmd + 4 + $5434 | 0; //@line 62567
                     $5436 = HEAP8[$5435] | 0; //@line 62568
                     if (!(($5436 << 24 >> 24 | 0) == 13 | ($5436 << 24 >> 24 | 0) == 32 | ($5436 << 24 >> 24 | 0) == 9 | ($5436 << 24 >> 24 | 0) == 10)) {
                      break;
                     }
                     $5434 = $5434 + 1 | 0; //@line 62574
                    }
                    HEAP32[$1 >> 2] = $5434; //@line 62576
                    $5439 = HEAP8[$5435] | 0; //@line 62577
                    if ($5439 << 24 >> 24 == 61) {
                     if ((HEAP8[$5434 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                      $op_0_i2030 = 1;
                      $storemerge4159_in = $5434;
                     } else {
                      $i_0_i_i3904 = $5434;
                      $5446 = 61;
                      label = 17045; //@line 62588
                     }
                    } else {
                     $i_0_i_i3904 = $5434;
                     $5446 = $5439;
                     label = 17045; //@line 62592
                    }
                    if ((label | 0) == 17045) {
                     while (1) {
                      label = 0; //@line 62596
                      if (!(($5446 << 24 >> 24 | 0) == 13 | ($5446 << 24 >> 24 | 0) == 32 | ($5446 << 24 >> 24 | 0) == 9 | ($5446 << 24 >> 24 | 0) == 10)) {
                       break;
                      }
                      $5447 = $i_0_i_i3904 + 1 | 0; //@line 62602
                      $i_0_i_i3904 = $5447;
                      $5446 = HEAP8[$cmd + 4 + $5447 | 0] | 0;
                      label = 17045; //@line 62607
                     }
                     HEAP32[$1 >> 2] = $i_0_i_i3904; //@line 62610
                     if ((HEAP8[$cmd + 4 + $i_0_i_i3904 | 0] | 0) != 33) {
                      break;
                     }
                     if ((HEAP8[$i_0_i_i3904 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                      $op_0_i2030 = 2;
                      $storemerge4159_in = $i_0_i_i3904;
                     } else {
                      break;
                     }
                    }
                    HEAP32[$1 >> 2] = $storemerge4159_in + 2; //@line 62629
                    if ((_cmd_match_expr_cmp($cmd, $val2_i2029, $base) | 0) == 0) {
                     label = 17050; //@line 62634
                     break L21699;
                    }
                    if (($op_0_i2030 | 0) == 1) {
                     HEAP32[$val2_i808 >> 2] = (HEAP32[$val2_i808 >> 2] | 0) == (HEAP32[$val2_i2029 >> 2] | 0); //@line 62642
                     continue;
                    } else if (($op_0_i2030 | 0) == 2) {
                     HEAP32[$val2_i808 >> 2] = (HEAP32[$val2_i808 >> 2] | 0) != (HEAP32[$val2_i2029 >> 2] | 0); //@line 62650
                     continue;
                    } else {
                     continue;
                    }
                   }
                   HEAP32[$val2_i117 >> 2] = HEAP32[$val2_i808 >> 2] & HEAP32[$val2_i117 >> 2]; //@line 62660
                   $5409 = $i_0_i_i3904; //@line 62662
                  }
                  if ((label | 0) == 17214) {
                   label = 0; //@line 62665
                   HEAP32[$1 >> 2] = $5409; //@line 62666
                   $i_0_i_i_i635 = $5409; //@line 62668
                  }
                  while (1) {
                   $5472 = $cmd + 4 + $i_0_i_i_i635 | 0; //@line 62672
                   $5473 = HEAP8[$5472] | 0; //@line 62673
                   if (($5473 << 24 >> 24 | 0) == 13 | ($5473 << 24 >> 24 | 0) == 32 | ($5473 << 24 >> 24 | 0) == 9 | ($5473 << 24 >> 24 | 0) == 10) {
                    $i_0_i_i_i635 = $i_0_i_i_i635 + 1 | 0; //@line 62677
                    continue;
                   }
                   HEAP32[$1 >> 2] = $i_0_i_i_i635; //@line 62680
                   if ((HEAP8[$5472] | 0) != 94) {
                    $5586 = $i_0_i_i_i635; //@line 62684
                    break;
                   }
                   $5479 = $i_0_i_i_i635 + 1 | 0; //@line 62687
                   HEAP32[$1 >> 2] = $5479; //@line 62688
                   if ((_cmd_match_expr_cmp($cmd, $val2_i634, $base) | 0) == 0) {
                    label = 17099; //@line 62693
                    break L21699;
                   }
                   while (1) {
                    $5484 = HEAP32[$1 >> 2] | 0; //@line 62699
                    while (1) {
                     $5485 = $cmd + 4 + $5484 | 0; //@line 62702
                     $5486 = HEAP8[$5485] | 0; //@line 62703
                     if (!(($5486 << 24 >> 24 | 0) == 13 | ($5486 << 24 >> 24 | 0) == 32 | ($5486 << 24 >> 24 | 0) == 9 | ($5486 << 24 >> 24 | 0) == 10)) {
                      break;
                     }
                     $5484 = $5484 + 1 | 0; //@line 62709
                    }
                    HEAP32[$1 >> 2] = $5484; //@line 62711
                    $5489 = HEAP8[$5485] | 0; //@line 62712
                    if ($5489 << 24 >> 24 == 61) {
                     if ((HEAP8[$5484 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                      $op_0_i2034 = 1;
                      $storemerge4158_in = $5484;
                     } else {
                      $i_0_i_i3924 = $5484;
                      $5496 = 61;
                      label = 17065; //@line 62723
                     }
                    } else {
                     $i_0_i_i3924 = $5484;
                     $5496 = $5489;
                     label = 17065; //@line 62727
                    }
                    if ((label | 0) == 17065) {
                     while (1) {
                      label = 0; //@line 62731
                      if (!(($5496 << 24 >> 24 | 0) == 13 | ($5496 << 24 >> 24 | 0) == 32 | ($5496 << 24 >> 24 | 0) == 9 | ($5496 << 24 >> 24 | 0) == 10)) {
                       break;
                      }
                      $5497 = $i_0_i_i3924 + 1 | 0; //@line 62737
                      $i_0_i_i3924 = $5497;
                      $5496 = HEAP8[$cmd + 4 + $5497 | 0] | 0;
                      label = 17065; //@line 62742
                     }
                     HEAP32[$1 >> 2] = $i_0_i_i3924; //@line 62745
                     if ((HEAP8[$cmd + 4 + $i_0_i_i3924 | 0] | 0) != 33) {
                      $5519 = $i_0_i_i3924; //@line 62749
                      break;
                     }
                     if ((HEAP8[$i_0_i_i3924 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                      $op_0_i2034 = 2;
                      $storemerge4158_in = $i_0_i_i3924;
                     } else {
                      $5519 = $i_0_i_i3924; //@line 62759
                      break;
                     }
                    }
                    HEAP32[$1 >> 2] = $storemerge4158_in + 2; //@line 62766
                    if ((_cmd_match_expr_cmp($cmd, $val2_i2033, $base) | 0) == 0) {
                     label = 17070; //@line 62771
                     break L21699;
                    }
                    if (($op_0_i2034 | 0) == 1) {
                     HEAP32[$val2_i634 >> 2] = (HEAP32[$val2_i634 >> 2] | 0) == (HEAP32[$val2_i2033 >> 2] | 0); //@line 62779
                     continue;
                    } else if (($op_0_i2034 | 0) == 2) {
                     HEAP32[$val2_i634 >> 2] = (HEAP32[$val2_i634 >> 2] | 0) != (HEAP32[$val2_i2033 >> 2] | 0); //@line 62787
                     continue;
                    } else {
                     continue;
                    }
                   }
                   while (1) {
                    $5521 = $5519; //@line 62797
                    while (1) {
                     $5522 = $cmd + 4 + $5521 | 0; //@line 62800
                     $5523 = HEAP8[$5522] | 0; //@line 62801
                     if (!(($5523 << 24 >> 24 | 0) == 13 | ($5523 << 24 >> 24 | 0) == 32 | ($5523 << 24 >> 24 | 0) == 9 | ($5523 << 24 >> 24 | 0) == 10)) {
                      break;
                     }
                     $5521 = $5521 + 1 | 0; //@line 62807
                    }
                    HEAP32[$1 >> 2] = $5521; //@line 62809
                    $5526 = HEAP8[$5522] | 0; //@line 62810
                    if ($5526 << 24 >> 24 == 38) {
                     if ((HEAP8[$5521 + 1 + ($cmd + 4) | 0] | 0) == 38) {
                      label = 17215; //@line 62818
                      break;
                     } else {
                      $i_0_i_i2046 = $5521;
                      $5533 = 38;
                     }
                    } else {
                     $i_0_i_i2046 = $5521;
                     $5533 = $5526;
                    }
                    while (1) {
                     if (!(($5533 << 24 >> 24 | 0) == 13 | ($5533 << 24 >> 24 | 0) == 32 | ($5533 << 24 >> 24 | 0) == 9 | ($5533 << 24 >> 24 | 0) == 10)) {
                      break;
                     }
                     $5534 = $i_0_i_i2046 + 1 | 0; //@line 62832
                     $i_0_i_i2046 = $5534;
                     $5533 = HEAP8[$cmd + 4 + $5534 | 0] | 0;
                    }
                    HEAP32[$1 >> 2] = $i_0_i_i2046; //@line 62839
                    if ((HEAP8[$cmd + 4 + $i_0_i_i2046 | 0] | 0) != 38) {
                     $5582 = $i_0_i_i2046; //@line 62843
                     break;
                    }
                    $5539 = $i_0_i_i2046 + 1 | 0; //@line 62846
                    HEAP32[$1 >> 2] = $5539; //@line 62847
                    if ((_cmd_match_expr_cmp($cmd, $val2_i811, $base) | 0) == 0) {
                     label = 17097; //@line 62852
                     break L21699;
                    }
                    while (1) {
                     $5544 = HEAP32[$1 >> 2] | 0; //@line 62858
                     while (1) {
                      $5545 = $cmd + 4 + $5544 | 0; //@line 62861
                      $5546 = HEAP8[$5545] | 0; //@line 62862
                      if (!(($5546 << 24 >> 24 | 0) == 13 | ($5546 << 24 >> 24 | 0) == 32 | ($5546 << 24 >> 24 | 0) == 9 | ($5546 << 24 >> 24 | 0) == 10)) {
                       break;
                      }
                      $5544 = $5544 + 1 | 0; //@line 62868
                     }
                     HEAP32[$1 >> 2] = $5544; //@line 62870
                     $5549 = HEAP8[$5545] | 0; //@line 62871
                     if ($5549 << 24 >> 24 == 61) {
                      if ((HEAP8[$5544 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                       $op_0_i2057 = 1;
                       $storemerge4157_in = $5544;
                      } else {
                       $i_0_i_i3944 = $5544;
                       $5556 = 61;
                       label = 17088; //@line 62882
                      }
                     } else {
                      $i_0_i_i3944 = $5544;
                      $5556 = $5549;
                      label = 17088; //@line 62886
                     }
                     if ((label | 0) == 17088) {
                      while (1) {
                       label = 0; //@line 62890
                       if (!(($5556 << 24 >> 24 | 0) == 13 | ($5556 << 24 >> 24 | 0) == 32 | ($5556 << 24 >> 24 | 0) == 9 | ($5556 << 24 >> 24 | 0) == 10)) {
                        break;
                       }
                       $5557 = $i_0_i_i3944 + 1 | 0; //@line 62896
                       $i_0_i_i3944 = $5557;
                       $5556 = HEAP8[$cmd + 4 + $5557 | 0] | 0;
                       label = 17088; //@line 62901
                      }
                      HEAP32[$1 >> 2] = $i_0_i_i3944; //@line 62904
                      if ((HEAP8[$cmd + 4 + $i_0_i_i3944 | 0] | 0) != 33) {
                       break;
                      }
                      if ((HEAP8[$i_0_i_i3944 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                       $op_0_i2057 = 2;
                       $storemerge4157_in = $i_0_i_i3944;
                      } else {
                       break;
                      }
                     }
                     HEAP32[$1 >> 2] = $storemerge4157_in + 2; //@line 62923
                     if ((_cmd_match_expr_cmp($cmd, $val2_i2056, $base) | 0) == 0) {
                      label = 17093; //@line 62928
                      break L21699;
                     }
                     if (($op_0_i2057 | 0) == 1) {
                      HEAP32[$val2_i811 >> 2] = (HEAP32[$val2_i811 >> 2] | 0) == (HEAP32[$val2_i2056 >> 2] | 0); //@line 62936
                      continue;
                     } else if (($op_0_i2057 | 0) == 2) {
                      HEAP32[$val2_i811 >> 2] = (HEAP32[$val2_i811 >> 2] | 0) != (HEAP32[$val2_i2056 >> 2] | 0); //@line 62944
                      continue;
                     } else {
                      continue;
                     }
                    }
                    HEAP32[$val2_i634 >> 2] = HEAP32[$val2_i811 >> 2] & HEAP32[$val2_i634 >> 2]; //@line 62954
                    $5519 = $i_0_i_i3944; //@line 62956
                   }
                   if ((label | 0) == 17215) {
                    label = 0; //@line 62959
                    HEAP32[$1 >> 2] = $5519; //@line 62960
                    $5582 = $5519; //@line 62962
                   }
                   HEAP32[$val2_i117 >> 2] = HEAP32[$val2_i634 >> 2] ^ HEAP32[$val2_i117 >> 2]; //@line 62968
                   $i_0_i_i_i635 = $5582; //@line 62970
                  }
                  while (1) {
                   $5588 = $5586; //@line 62975
                   while (1) {
                    $5589 = $cmd + 4 + $5588 | 0; //@line 62978
                    $5590 = HEAP8[$5589] | 0; //@line 62979
                    if (!(($5590 << 24 >> 24 | 0) == 13 | ($5590 << 24 >> 24 | 0) == 32 | ($5590 << 24 >> 24 | 0) == 9 | ($5590 << 24 >> 24 | 0) == 10)) {
                     break;
                    }
                    $5588 = $5588 + 1 | 0; //@line 62985
                   }
                   HEAP32[$1 >> 2] = $5588; //@line 62987
                   $5593 = HEAP8[$5589] | 0; //@line 62988
                   if ($5593 << 24 >> 24 == 124) {
                    if ((HEAP8[$5588 + 1 + ($cmd + 4) | 0] | 0) == 124) {
                     label = 17216; //@line 62996
                     break;
                    } else {
                     $i_0_i_i655 = $5588;
                     $5600 = 124;
                    }
                   } else {
                    $i_0_i_i655 = $5588;
                    $5600 = $5593;
                   }
                   while (1) {
                    if (!(($5600 << 24 >> 24 | 0) == 13 | ($5600 << 24 >> 24 | 0) == 32 | ($5600 << 24 >> 24 | 0) == 9 | ($5600 << 24 >> 24 | 0) == 10)) {
                     break;
                    }
                    $5601 = $i_0_i_i655 + 1 | 0; //@line 63010
                    $i_0_i_i655 = $5601;
                    $5600 = HEAP8[$cmd + 4 + $5601 | 0] | 0;
                   }
                   HEAP32[$1 >> 2] = $i_0_i_i655; //@line 63017
                   if ((HEAP8[$cmd + 4 + $i_0_i_i655 | 0] | 0) != 124) {
                    $5827 = $i_0_i_i655; //@line 63021
                    break;
                   }
                   $5606 = $i_0_i_i655 + 1 | 0; //@line 63024
                   HEAP32[$1 >> 2] = $5606; //@line 63025
                   if ((_cmd_match_expr_cmp($cmd, $val2_i162, $base) | 0) == 0) {
                    label = 17194; //@line 63030
                    break L21699;
                   }
                   while (1) {
                    $5611 = HEAP32[$1 >> 2] | 0; //@line 63036
                    while (1) {
                     $5612 = $cmd + 4 + $5611 | 0; //@line 63039
                     $5613 = HEAP8[$5612] | 0; //@line 63040
                     if (!(($5613 << 24 >> 24 | 0) == 13 | ($5613 << 24 >> 24 | 0) == 32 | ($5613 << 24 >> 24 | 0) == 9 | ($5613 << 24 >> 24 | 0) == 10)) {
                      break;
                     }
                     $5611 = $5611 + 1 | 0; //@line 63046
                    }
                    HEAP32[$1 >> 2] = $5611; //@line 63048
                    $5616 = HEAP8[$5612] | 0; //@line 63049
                    if ($5616 << 24 >> 24 == 61) {
                     if ((HEAP8[$5611 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                      $op_0_i2061 = 1;
                      $storemerge4156_in = $5611;
                     } else {
                      $i_0_i_i3964 = $5611;
                      $5623 = 61;
                      label = 17115; //@line 63060
                     }
                    } else {
                     $i_0_i_i3964 = $5611;
                     $5623 = $5616;
                     label = 17115; //@line 63064
                    }
                    if ((label | 0) == 17115) {
                     while (1) {
                      label = 0; //@line 63068
                      if (!(($5623 << 24 >> 24 | 0) == 13 | ($5623 << 24 >> 24 | 0) == 32 | ($5623 << 24 >> 24 | 0) == 9 | ($5623 << 24 >> 24 | 0) == 10)) {
                       break;
                      }
                      $5624 = $i_0_i_i3964 + 1 | 0; //@line 63074
                      $i_0_i_i3964 = $5624;
                      $5623 = HEAP8[$cmd + 4 + $5624 | 0] | 0;
                      label = 17115; //@line 63079
                     }
                     HEAP32[$1 >> 2] = $i_0_i_i3964; //@line 63082
                     if ((HEAP8[$cmd + 4 + $i_0_i_i3964 | 0] | 0) != 33) {
                      $5646 = $i_0_i_i3964; //@line 63086
                      break;
                     }
                     if ((HEAP8[$i_0_i_i3964 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                      $op_0_i2061 = 2;
                      $storemerge4156_in = $i_0_i_i3964;
                     } else {
                      $5646 = $i_0_i_i3964; //@line 63096
                      break;
                     }
                    }
                    HEAP32[$1 >> 2] = $storemerge4156_in + 2; //@line 63103
                    if ((_cmd_match_expr_cmp($cmd, $val2_i2060, $base) | 0) == 0) {
                     label = 17120; //@line 63108
                     break L21699;
                    }
                    if (($op_0_i2061 | 0) == 1) {
                     HEAP32[$val2_i162 >> 2] = (HEAP32[$val2_i162 >> 2] | 0) == (HEAP32[$val2_i2060 >> 2] | 0); //@line 63116
                     continue;
                    } else if (($op_0_i2061 | 0) == 2) {
                     HEAP32[$val2_i162 >> 2] = (HEAP32[$val2_i162 >> 2] | 0) != (HEAP32[$val2_i2060 >> 2] | 0); //@line 63124
                     continue;
                    } else {
                     continue;
                    }
                   }
                   while (1) {
                    $5648 = $5646; //@line 63134
                    while (1) {
                     $5649 = $cmd + 4 + $5648 | 0; //@line 63137
                     $5650 = HEAP8[$5649] | 0; //@line 63138
                     if (!(($5650 << 24 >> 24 | 0) == 13 | ($5650 << 24 >> 24 | 0) == 32 | ($5650 << 24 >> 24 | 0) == 9 | ($5650 << 24 >> 24 | 0) == 10)) {
                      break;
                     }
                     $5648 = $5648 + 1 | 0; //@line 63144
                    }
                    HEAP32[$1 >> 2] = $5648; //@line 63146
                    $5653 = HEAP8[$5649] | 0; //@line 63147
                    if ($5653 << 24 >> 24 == 38) {
                     if ((HEAP8[$5648 + 1 + ($cmd + 4) | 0] | 0) == 38) {
                      label = 17217; //@line 63155
                      break;
                     } else {
                      $i_0_i_i2073 = $5648;
                      $5660 = 38;
                     }
                    } else {
                     $i_0_i_i2073 = $5648;
                     $5660 = $5653;
                    }
                    while (1) {
                     if (!(($5660 << 24 >> 24 | 0) == 13 | ($5660 << 24 >> 24 | 0) == 32 | ($5660 << 24 >> 24 | 0) == 9 | ($5660 << 24 >> 24 | 0) == 10)) {
                      break;
                     }
                     $5661 = $i_0_i_i2073 + 1 | 0; //@line 63169
                     $i_0_i_i2073 = $5661;
                     $5660 = HEAP8[$cmd + 4 + $5661 | 0] | 0;
                    }
                    HEAP32[$1 >> 2] = $i_0_i_i2073; //@line 63176
                    if ((HEAP8[$cmd + 4 + $i_0_i_i2073 | 0] | 0) != 38) {
                     $i_0_i_i_i666 = $i_0_i_i2073; //@line 63180
                     break;
                    }
                    $5666 = $i_0_i_i2073 + 1 | 0; //@line 63183
                    HEAP32[$1 >> 2] = $5666; //@line 63184
                    if ((_cmd_match_expr_cmp($cmd, $val2_i814, $base) | 0) == 0) {
                     label = 17147; //@line 63189
                     break L21699;
                    }
                    while (1) {
                     $5671 = HEAP32[$1 >> 2] | 0; //@line 63195
                     while (1) {
                      $5672 = $cmd + 4 + $5671 | 0; //@line 63198
                      $5673 = HEAP8[$5672] | 0; //@line 63199
                      if (!(($5673 << 24 >> 24 | 0) == 13 | ($5673 << 24 >> 24 | 0) == 32 | ($5673 << 24 >> 24 | 0) == 9 | ($5673 << 24 >> 24 | 0) == 10)) {
                       break;
                      }
                      $5671 = $5671 + 1 | 0; //@line 63205
                     }
                     HEAP32[$1 >> 2] = $5671; //@line 63207
                     $5676 = HEAP8[$5672] | 0; //@line 63208
                     if ($5676 << 24 >> 24 == 61) {
                      if ((HEAP8[$5671 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                       $op_0_i2084 = 1;
                       $storemerge4155_in = $5671;
                      } else {
                       $i_0_i_i3984 = $5671;
                       $5683 = 61;
                       label = 17138; //@line 63219
                      }
                     } else {
                      $i_0_i_i3984 = $5671;
                      $5683 = $5676;
                      label = 17138; //@line 63223
                     }
                     if ((label | 0) == 17138) {
                      while (1) {
                       label = 0; //@line 63227
                       if (!(($5683 << 24 >> 24 | 0) == 13 | ($5683 << 24 >> 24 | 0) == 32 | ($5683 << 24 >> 24 | 0) == 9 | ($5683 << 24 >> 24 | 0) == 10)) {
                        break;
                       }
                       $5684 = $i_0_i_i3984 + 1 | 0; //@line 63233
                       $i_0_i_i3984 = $5684;
                       $5683 = HEAP8[$cmd + 4 + $5684 | 0] | 0;
                       label = 17138; //@line 63238
                      }
                      HEAP32[$1 >> 2] = $i_0_i_i3984; //@line 63241
                      if ((HEAP8[$cmd + 4 + $i_0_i_i3984 | 0] | 0) != 33) {
                       break;
                      }
                      if ((HEAP8[$i_0_i_i3984 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                       $op_0_i2084 = 2;
                       $storemerge4155_in = $i_0_i_i3984;
                      } else {
                       break;
                      }
                     }
                     HEAP32[$1 >> 2] = $storemerge4155_in + 2; //@line 63260
                     if ((_cmd_match_expr_cmp($cmd, $val2_i2083, $base) | 0) == 0) {
                      label = 17143; //@line 63265
                      break L21699;
                     }
                     if (($op_0_i2084 | 0) == 1) {
                      HEAP32[$val2_i814 >> 2] = (HEAP32[$val2_i814 >> 2] | 0) == (HEAP32[$val2_i2083 >> 2] | 0); //@line 63273
                      continue;
                     } else if (($op_0_i2084 | 0) == 2) {
                      HEAP32[$val2_i814 >> 2] = (HEAP32[$val2_i814 >> 2] | 0) != (HEAP32[$val2_i2083 >> 2] | 0); //@line 63281
                      continue;
                     } else {
                      continue;
                     }
                    }
                    HEAP32[$val2_i162 >> 2] = HEAP32[$val2_i814 >> 2] & HEAP32[$val2_i162 >> 2]; //@line 63291
                    $5646 = $i_0_i_i3984; //@line 63293
                   }
                   if ((label | 0) == 17217) {
                    label = 0; //@line 63296
                    HEAP32[$1 >> 2] = $5646; //@line 63297
                    $i_0_i_i_i666 = $5646; //@line 63299
                   }
                   while (1) {
                    $5709 = $cmd + 4 + $i_0_i_i_i666 | 0; //@line 63303
                    $5710 = HEAP8[$5709] | 0; //@line 63304
                    if (($5710 << 24 >> 24 | 0) == 13 | ($5710 << 24 >> 24 | 0) == 32 | ($5710 << 24 >> 24 | 0) == 9 | ($5710 << 24 >> 24 | 0) == 10) {
                     $i_0_i_i_i666 = $i_0_i_i_i666 + 1 | 0; //@line 63308
                     continue;
                    }
                    HEAP32[$1 >> 2] = $i_0_i_i_i666; //@line 63311
                    if ((HEAP8[$5709] | 0) != 94) {
                     break;
                    }
                    $5716 = $i_0_i_i_i666 + 1 | 0; //@line 63317
                    HEAP32[$1 >> 2] = $5716; //@line 63318
                    if ((_cmd_match_expr_cmp($cmd, $val2_i665, $base) | 0) == 0) {
                     label = 17192; //@line 63323
                     break L21699;
                    }
                    while (1) {
                     $5721 = HEAP32[$1 >> 2] | 0; //@line 63329
                     while (1) {
                      $5722 = $cmd + 4 + $5721 | 0; //@line 63332
                      $5723 = HEAP8[$5722] | 0; //@line 63333
                      if (!(($5723 << 24 >> 24 | 0) == 13 | ($5723 << 24 >> 24 | 0) == 32 | ($5723 << 24 >> 24 | 0) == 9 | ($5723 << 24 >> 24 | 0) == 10)) {
                       break;
                      }
                      $5721 = $5721 + 1 | 0; //@line 63339
                     }
                     HEAP32[$1 >> 2] = $5721; //@line 63341
                     $5726 = HEAP8[$5722] | 0; //@line 63342
                     if ($5726 << 24 >> 24 == 61) {
                      if ((HEAP8[$5721 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                       $op_0_i2088 = 1;
                       $storemerge4154_in = $5721;
                      } else {
                       $i_0_i_i4004 = $5721;
                       $5733 = 61;
                       label = 17158; //@line 63353
                      }
                     } else {
                      $i_0_i_i4004 = $5721;
                      $5733 = $5726;
                      label = 17158; //@line 63357
                     }
                     if ((label | 0) == 17158) {
                      while (1) {
                       label = 0; //@line 63361
                       if (!(($5733 << 24 >> 24 | 0) == 13 | ($5733 << 24 >> 24 | 0) == 32 | ($5733 << 24 >> 24 | 0) == 9 | ($5733 << 24 >> 24 | 0) == 10)) {
                        break;
                       }
                       $5734 = $i_0_i_i4004 + 1 | 0; //@line 63367
                       $i_0_i_i4004 = $5734;
                       $5733 = HEAP8[$cmd + 4 + $5734 | 0] | 0;
                       label = 17158; //@line 63372
                      }
                      HEAP32[$1 >> 2] = $i_0_i_i4004; //@line 63375
                      if ((HEAP8[$cmd + 4 + $i_0_i_i4004 | 0] | 0) != 33) {
                       $5756 = $i_0_i_i4004; //@line 63379
                       break;
                      }
                      if ((HEAP8[$i_0_i_i4004 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                       $op_0_i2088 = 2;
                       $storemerge4154_in = $i_0_i_i4004;
                      } else {
                       $5756 = $i_0_i_i4004; //@line 63389
                       break;
                      }
                     }
                     HEAP32[$1 >> 2] = $storemerge4154_in + 2; //@line 63396
                     if ((_cmd_match_expr_cmp($cmd, $val2_i2087, $base) | 0) == 0) {
                      label = 17163; //@line 63401
                      break L21699;
                     }
                     if (($op_0_i2088 | 0) == 1) {
                      HEAP32[$val2_i665 >> 2] = (HEAP32[$val2_i665 >> 2] | 0) == (HEAP32[$val2_i2087 >> 2] | 0); //@line 63409
                      continue;
                     } else if (($op_0_i2088 | 0) == 2) {
                      HEAP32[$val2_i665 >> 2] = (HEAP32[$val2_i665 >> 2] | 0) != (HEAP32[$val2_i2087 >> 2] | 0); //@line 63417
                      continue;
                     } else {
                      continue;
                     }
                    }
                    while (1) {
                     $5758 = $5756; //@line 63427
                     while (1) {
                      $5759 = $cmd + 4 + $5758 | 0; //@line 63430
                      $5760 = HEAP8[$5759] | 0; //@line 63431
                      if (!(($5760 << 24 >> 24 | 0) == 13 | ($5760 << 24 >> 24 | 0) == 32 | ($5760 << 24 >> 24 | 0) == 9 | ($5760 << 24 >> 24 | 0) == 10)) {
                       break;
                      }
                      $5758 = $5758 + 1 | 0; //@line 63437
                     }
                     HEAP32[$1 >> 2] = $5758; //@line 63439
                     $5763 = HEAP8[$5759] | 0; //@line 63440
                     if ($5763 << 24 >> 24 == 38) {
                      if ((HEAP8[$5758 + 1 + ($cmd + 4) | 0] | 0) == 38) {
                       label = 17218; //@line 63448
                       break;
                      } else {
                       $i_0_i_i2100 = $5758;
                       $5770 = 38;
                      }
                     } else {
                      $i_0_i_i2100 = $5758;
                      $5770 = $5763;
                     }
                     while (1) {
                      if (!(($5770 << 24 >> 24 | 0) == 13 | ($5770 << 24 >> 24 | 0) == 32 | ($5770 << 24 >> 24 | 0) == 9 | ($5770 << 24 >> 24 | 0) == 10)) {
                       break;
                      }
                      $5771 = $i_0_i_i2100 + 1 | 0; //@line 63462
                      $i_0_i_i2100 = $5771;
                      $5770 = HEAP8[$cmd + 4 + $5771 | 0] | 0;
                     }
                     HEAP32[$1 >> 2] = $i_0_i_i2100; //@line 63469
                     if ((HEAP8[$cmd + 4 + $i_0_i_i2100 | 0] | 0) != 38) {
                      $5819 = $i_0_i_i2100; //@line 63473
                      break;
                     }
                     $5776 = $i_0_i_i2100 + 1 | 0; //@line 63476
                     HEAP32[$1 >> 2] = $5776; //@line 63477
                     if ((_cmd_match_expr_cmp($cmd, $val2_i817, $base) | 0) == 0) {
                      label = 17190; //@line 63482
                      break L21699;
                     }
                     while (1) {
                      $5781 = HEAP32[$1 >> 2] | 0; //@line 63488
                      while (1) {
                       $5782 = $cmd + 4 + $5781 | 0; //@line 63491
                       $5783 = HEAP8[$5782] | 0; //@line 63492
                       if (!(($5783 << 24 >> 24 | 0) == 13 | ($5783 << 24 >> 24 | 0) == 32 | ($5783 << 24 >> 24 | 0) == 9 | ($5783 << 24 >> 24 | 0) == 10)) {
                        break;
                       }
                       $5781 = $5781 + 1 | 0; //@line 63498
                      }
                      HEAP32[$1 >> 2] = $5781; //@line 63500
                      $5786 = HEAP8[$5782] | 0; //@line 63501
                      if ($5786 << 24 >> 24 == 61) {
                       if ((HEAP8[$5781 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                        $op_0_i2111 = 1;
                        $storemerge_in = $5781;
                       } else {
                        $i_0_i_i4024 = $5781;
                        $5793 = 61;
                        label = 17181; //@line 63512
                       }
                      } else {
                       $i_0_i_i4024 = $5781;
                       $5793 = $5786;
                       label = 17181; //@line 63516
                      }
                      if ((label | 0) == 17181) {
                       while (1) {
                        label = 0; //@line 63520
                        if (!(($5793 << 24 >> 24 | 0) == 13 | ($5793 << 24 >> 24 | 0) == 32 | ($5793 << 24 >> 24 | 0) == 9 | ($5793 << 24 >> 24 | 0) == 10)) {
                         break;
                        }
                        $5794 = $i_0_i_i4024 + 1 | 0; //@line 63526
                        $i_0_i_i4024 = $5794;
                        $5793 = HEAP8[$cmd + 4 + $5794 | 0] | 0;
                        label = 17181; //@line 63531
                       }
                       HEAP32[$1 >> 2] = $i_0_i_i4024; //@line 63534
                       if ((HEAP8[$cmd + 4 + $i_0_i_i4024 | 0] | 0) != 33) {
                        break;
                       }
                       if ((HEAP8[$i_0_i_i4024 + 1 + ($cmd + 4) | 0] | 0) == 61) {
                        $op_0_i2111 = 2;
                        $storemerge_in = $i_0_i_i4024;
                       } else {
                        break;
                       }
                      }
                      HEAP32[$1 >> 2] = $storemerge_in + 2; //@line 63553
                      if ((_cmd_match_expr_cmp($cmd, $val2_i2110, $base) | 0) == 0) {
                       label = 17186; //@line 63558
                       break L21699;
                      }
                      if (($op_0_i2111 | 0) == 1) {
                       HEAP32[$val2_i817 >> 2] = (HEAP32[$val2_i817 >> 2] | 0) == (HEAP32[$val2_i2110 >> 2] | 0); //@line 63566
                       continue;
                      } else if (($op_0_i2111 | 0) == 2) {
                       HEAP32[$val2_i817 >> 2] = (HEAP32[$val2_i817 >> 2] | 0) != (HEAP32[$val2_i2110 >> 2] | 0); //@line 63574
                       continue;
                      } else {
                       continue;
                      }
                     }
                     HEAP32[$val2_i665 >> 2] = HEAP32[$val2_i817 >> 2] & HEAP32[$val2_i665 >> 2]; //@line 63584
                     $5756 = $i_0_i_i4024; //@line 63586
                    }
                    if ((label | 0) == 17218) {
                     label = 0; //@line 63589
                     HEAP32[$1 >> 2] = $5756; //@line 63590
                     $5819 = $5756; //@line 63592
                    }
                    HEAP32[$val2_i162 >> 2] = HEAP32[$val2_i665 >> 2] ^ HEAP32[$val2_i162 >> 2]; //@line 63598
                    $i_0_i_i_i666 = $5819; //@line 63600
                   }
                   HEAP32[$val2_i117 >> 2] = HEAP32[$val2_i162 >> 2] | HEAP32[$val2_i117 >> 2]; //@line 63605
                   $5586 = $i_0_i_i_i666; //@line 63607
                  }
                  if ((label | 0) == 17216) {
                   label = 0; //@line 63610
                   HEAP32[$1 >> 2] = $5586; //@line 63611
                   $5827 = $5586; //@line 63613
                  }
                  if ((HEAP32[$val2_i40 >> 2] | 0) == 0) {
                   $5834 = 0; //@line 63620
                  } else {
                   $5834 = (HEAP32[$val2_i117 >> 2] | 0) != 0 | 0; //@line 63625
                  }
                  HEAP32[$val2_i40 >> 2] = $5834; //@line 63628
                  $i_0_i_i_i118 = $5827; //@line 63630
                 }
                 if ((HEAP32[$val3 >> 2] | 0) == 0) {
                  $5842 = (HEAP32[$val2_i40 >> 2] | 0) != 0 | 0; //@line 63640
                 } else {
                  $5842 = 1; //@line 63642
                 }
                 HEAP32[$val3 >> 2] = $5842; //@line 63645
                 $i_0_i_i_i41 = $i_0_i_i_i118; //@line 63647
                }
                if ((label | 0) == 16844) {
                 HEAP32[$1 >> 2] = $5849; //@line 63650
                } else if ((label | 0) == 16867) {
                 HEAP32[$1 >> 2] = $4964; //@line 63654
                 label = 16871; //@line 63656
                } else if ((label | 0) == 16887) {
                 HEAP32[$1 >> 2] = $5014; //@line 63659
                 label = 16916; //@line 63661
                } else if ((label | 0) == 16910) {
                 HEAP32[$1 >> 2] = $5074; //@line 63664
                 label = 16914; //@line 63666
                } else if ((label | 0) == 16937) {
                 HEAP32[$1 >> 2] = $5141; //@line 63669
                 label = 17011; //@line 63671
                } else if ((label | 0) == 16960) {
                 HEAP32[$1 >> 2] = $5201; //@line 63674
                 label = 16964; //@line 63676
                } else if ((label | 0) == 16980) {
                 HEAP32[$1 >> 2] = $5251; //@line 63679
                 label = 17009; //@line 63681
                } else if ((label | 0) == 17003) {
                 HEAP32[$1 >> 2] = $5311; //@line 63684
                 label = 17007; //@line 63686
                } else if ((label | 0) == 17027) {
                 HEAP32[$1 >> 2] = $5853; //@line 63689
                 label = 17196; //@line 63691
                } else if ((label | 0) == 17050) {
                 HEAP32[$1 >> 2] = $5429; //@line 63694
                 label = 17054; //@line 63696
                } else if ((label | 0) == 17070) {
                 HEAP32[$1 >> 2] = $5479; //@line 63699
                 label = 17099; //@line 63701
                } else if ((label | 0) == 17093) {
                 HEAP32[$1 >> 2] = $5539; //@line 63704
                 label = 17097; //@line 63706
                } else if ((label | 0) == 17120) {
                 HEAP32[$1 >> 2] = $5606; //@line 63709
                 label = 17194; //@line 63711
                } else if ((label | 0) == 17143) {
                 HEAP32[$1 >> 2] = $5666; //@line 63714
                 label = 17147; //@line 63716
                } else if ((label | 0) == 17163) {
                 HEAP32[$1 >> 2] = $5716; //@line 63719
                 label = 17192; //@line 63721
                } else if ((label | 0) == 17186) {
                 HEAP32[$1 >> 2] = $5776; //@line 63724
                 label = 17190; //@line 63726
                } else if ((label | 0) == 17205) {
                 HEAP32[$val >> 2] = (HEAP32[$val >> 2] | 0) != 0 ? HEAP32[$val2 >> 2] | 0 : HEAP32[$val3 >> 2] | 0; //@line 63734
                 $_0 = 1; //@line 63736
                 STACKTOP = sp; //@line 63738
                 return $_0 | 0; //@line 63739
                }
                if ((label | 0) == 16871) {
                 HEAP32[$1 >> 2] = $5849; //@line 63742
                } else if ((label | 0) == 16914) {
                 HEAP32[$1 >> 2] = $5014; //@line 63746
                 label = 16916; //@line 63748
                } else if ((label | 0) == 16964) {
                 HEAP32[$1 >> 2] = $5141; //@line 63751
                 label = 17011; //@line 63753
                } else if ((label | 0) == 17007) {
                 HEAP32[$1 >> 2] = $5251; //@line 63756
                 label = 17009; //@line 63758
                } else if ((label | 0) == 17054) {
                 HEAP32[$1 >> 2] = $5853; //@line 63761
                 label = 17196; //@line 63763
                } else if ((label | 0) == 17097) {
                 HEAP32[$1 >> 2] = $5479; //@line 63766
                 label = 17099; //@line 63768
                } else if ((label | 0) == 17147) {
                 HEAP32[$1 >> 2] = $5606; //@line 63771
                 label = 17194; //@line 63773
                } else if ((label | 0) == 17190) {
                 HEAP32[$1 >> 2] = $5716; //@line 63776
                 label = 17192; //@line 63778
                }
                if ((label | 0) == 16916) {
                 HEAP32[$1 >> 2] = $5849; //@line 63781
                } else if ((label | 0) == 17009) {
                 HEAP32[$1 >> 2] = $5141; //@line 63785
                 label = 17011; //@line 63787
                } else if ((label | 0) == 17099) {
                 HEAP32[$1 >> 2] = $5853; //@line 63790
                 label = 17196; //@line 63792
                } else if ((label | 0) == 17192) {
                 HEAP32[$1 >> 2] = $5606; //@line 63795
                 label = 17194; //@line 63797
                }
                if ((label | 0) == 17011) {
                 HEAP32[$1 >> 2] = $5849; //@line 63800
                } else if ((label | 0) == 17194) {
                 HEAP32[$1 >> 2] = $5853; //@line 63804
                 label = 17196; //@line 63806
                }
                if ((label | 0) == 17196) {
                 HEAP32[$1 >> 2] = $5849; //@line 63809
                }
                HEAP32[$1 >> 2] = $3900; //@line 63812
                break;
               } else if ((label | 0) == 16657) {
                HEAP32[$1 >> 2] = $5857; //@line 63817
               } else if ((label | 0) == 16680) {
                HEAP32[$1 >> 2] = $4491; //@line 63821
                label = 16684; //@line 63823
               } else if ((label | 0) == 16700) {
                HEAP32[$1 >> 2] = $4541; //@line 63826
                label = 16729; //@line 63828
               } else if ((label | 0) == 16723) {
                HEAP32[$1 >> 2] = $4601; //@line 63831
                label = 16727; //@line 63833
               } else if ((label | 0) == 16750) {
                HEAP32[$1 >> 2] = $4668; //@line 63836
                label = 16824; //@line 63838
               } else if ((label | 0) == 16773) {
                HEAP32[$1 >> 2] = $4728; //@line 63841
                label = 16777; //@line 63843
               } else if ((label | 0) == 16793) {
                HEAP32[$1 >> 2] = $4778; //@line 63846
                label = 16822; //@line 63848
               } else if ((label | 0) == 16816) {
                HEAP32[$1 >> 2] = $4838; //@line 63851
                label = 16820; //@line 63853
               }
               if ((label | 0) == 16684) {
                HEAP32[$1 >> 2] = $5857; //@line 63856
               } else if ((label | 0) == 16727) {
                HEAP32[$1 >> 2] = $4541; //@line 63860
                label = 16729; //@line 63862
               } else if ((label | 0) == 16777) {
                HEAP32[$1 >> 2] = $4668; //@line 63865
                label = 16824; //@line 63867
               } else if ((label | 0) == 16820) {
                HEAP32[$1 >> 2] = $4778; //@line 63870
                label = 16822; //@line 63872
               }
               if ((label | 0) == 16729) {
                HEAP32[$1 >> 2] = $5857; //@line 63875
               } else if ((label | 0) == 16822) {
                HEAP32[$1 >> 2] = $4668; //@line 63879
                label = 16824; //@line 63881
               }
               if ((label | 0) == 16824) {
                HEAP32[$1 >> 2] = $5857; //@line 63884
               }
               HEAP32[$1 >> 2] = $3900; //@line 63887
               break;
              } else if ((label | 0) == 16593) {
               HEAP32[$1 >> 2] = $4172; //@line 63892
              } else if ((label | 0) == 16636) {
               HEAP32[$1 >> 2] = $4282; //@line 63896
               label = 16638; //@line 63898
              }
              if ((label | 0) == 16638) {
               HEAP32[$1 >> 2] = $4172; //@line 63901
              }
              HEAP32[$1 >> 2] = $3900; //@line 63904
              break;
             } else if ((label | 0) == 16515) {
              HEAP32[$1 >> 2] = $4029; //@line 63909
             } else if ((label | 0) == 16538) {
              HEAP32[$1 >> 2] = $4089; //@line 63913
              label = 16542; //@line 63915
             }
             if ((label | 0) == 16542) {
              HEAP32[$1 >> 2] = $4029; //@line 63918
             }
             HEAP32[$1 >> 2] = $3900; //@line 63921
            }
           } while (0);
           HEAP32[$1 >> 2] = $2; //@line 63925
           $_0 = 0; //@line 63927
           STACKTOP = sp; //@line 63929
           return $_0 | 0; //@line 63930
          }
          if ((label | 0) == 16120) {
           HEAP32[$1 >> 2] = $5861; //@line 63933
          } else if ((label | 0) == 16163) {
           HEAP32[$1 >> 2] = $3064; //@line 63937
           label = 16165; //@line 63939
          } else if ((label | 0) == 16213) {
           HEAP32[$1 >> 2] = $3191; //@line 63942
           label = 16260; //@line 63944
          } else if ((label | 0) == 16256) {
           HEAP32[$1 >> 2] = $3301; //@line 63947
           label = 16258; //@line 63949
          } else if ((label | 0) == 16303) {
           HEAP32[$1 >> 2] = $5865; //@line 63952
           label = 16445; //@line 63954
          } else if ((label | 0) == 16346) {
           HEAP32[$1 >> 2] = $3529; //@line 63957
           label = 16348; //@line 63959
          } else if ((label | 0) == 16396) {
           HEAP32[$1 >> 2] = $3656; //@line 63962
           label = 16443; //@line 63964
          } else if ((label | 0) == 16439) {
           HEAP32[$1 >> 2] = $3766; //@line 63967
           label = 16441; //@line 63969
          }
          if ((label | 0) == 16165) {
           HEAP32[$1 >> 2] = $5861; //@line 63972
          } else if ((label | 0) == 16258) {
           HEAP32[$1 >> 2] = $3191; //@line 63976
           label = 16260; //@line 63978
          } else if ((label | 0) == 16348) {
           HEAP32[$1 >> 2] = $5865; //@line 63981
           label = 16445; //@line 63983
          } else if ((label | 0) == 16441) {
           HEAP32[$1 >> 2] = $3656; //@line 63986
           label = 16443; //@line 63988
          }
          if ((label | 0) == 16260) {
           HEAP32[$1 >> 2] = $5861; //@line 63991
          } else if ((label | 0) == 16443) {
           HEAP32[$1 >> 2] = $5865; //@line 63995
           label = 16445; //@line 63997
          }
          if ((label | 0) == 16445) {
           HEAP32[$1 >> 2] = $5861; //@line 64000
          }
          HEAP32[$1 >> 2] = $1950; //@line 64003
          break;
         } else if ((label | 0) == 15906) {
          HEAP32[$1 >> 2] = $5869; //@line 64008
         } else if ((label | 0) == 15929) {
          HEAP32[$1 >> 2] = $2540; //@line 64012
          label = 15933; //@line 64014
         } else if ((label | 0) == 15949) {
          HEAP32[$1 >> 2] = $2590; //@line 64017
          label = 15978; //@line 64019
         } else if ((label | 0) == 15972) {
          HEAP32[$1 >> 2] = $2650; //@line 64022
          label = 15976; //@line 64024
         } else if ((label | 0) == 15999) {
          HEAP32[$1 >> 2] = $2717; //@line 64027
          label = 16073; //@line 64029
         } else if ((label | 0) == 16022) {
          HEAP32[$1 >> 2] = $2777; //@line 64032
          label = 16026; //@line 64034
         } else if ((label | 0) == 16042) {
          HEAP32[$1 >> 2] = $2827; //@line 64037
          label = 16071; //@line 64039
         } else if ((label | 0) == 16065) {
          HEAP32[$1 >> 2] = $2887; //@line 64042
          label = 16069; //@line 64044
         }
         if ((label | 0) == 15933) {
          HEAP32[$1 >> 2] = $5869; //@line 64047
         } else if ((label | 0) == 15976) {
          HEAP32[$1 >> 2] = $2590; //@line 64051
          label = 15978; //@line 64053
         } else if ((label | 0) == 16026) {
          HEAP32[$1 >> 2] = $2717; //@line 64056
          label = 16073; //@line 64058
         } else if ((label | 0) == 16069) {
          HEAP32[$1 >> 2] = $2827; //@line 64061
          label = 16071; //@line 64063
         }
         if ((label | 0) == 15978) {
          HEAP32[$1 >> 2] = $5869; //@line 64066
         } else if ((label | 0) == 16071) {
          HEAP32[$1 >> 2] = $2717; //@line 64070
          label = 16073; //@line 64072
         }
         if ((label | 0) == 16073) {
          HEAP32[$1 >> 2] = $5869; //@line 64075
         }
         HEAP32[$1 >> 2] = $1950; //@line 64078
         break;
        } else if ((label | 0) == 15842) {
         HEAP32[$1 >> 2] = $2221; //@line 64083
        } else if ((label | 0) == 15885) {
         HEAP32[$1 >> 2] = $2331; //@line 64087
         label = 15887; //@line 64089
        }
        if ((label | 0) == 15887) {
         HEAP32[$1 >> 2] = $2221; //@line 64092
        }
        HEAP32[$1 >> 2] = $1950; //@line 64095
        break;
       } else if ((label | 0) == 15764) {
        HEAP32[$1 >> 2] = $2078; //@line 64100
       } else if ((label | 0) == 15787) {
        HEAP32[$1 >> 2] = $2138; //@line 64104
        label = 15791; //@line 64106
       }
       if ((label | 0) == 15791) {
        HEAP32[$1 >> 2] = $2078; //@line 64109
       }
       HEAP32[$1 >> 2] = $1950; //@line 64112
      }
     } while (0);
     HEAP32[$1 >> 2] = $2; //@line 64116
     $_0 = 0; //@line 64118
     STACKTOP = sp; //@line 64120
     return $_0 | 0; //@line 64121
    }
    if ((label | 0) == 15371) {
     HEAP32[$1 >> 2] = $5873; //@line 64124
    } else if ((label | 0) == 15414) {
     HEAP32[$1 >> 2] = $1114; //@line 64128
     label = 15416; //@line 64130
    } else if ((label | 0) == 15464) {
     HEAP32[$1 >> 2] = $1241; //@line 64133
     label = 15511; //@line 64135
    } else if ((label | 0) == 15507) {
     HEAP32[$1 >> 2] = $1351; //@line 64138
     label = 15509; //@line 64140
    } else if ((label | 0) == 15554) {
     HEAP32[$1 >> 2] = $5877; //@line 64143
     label = 15696; //@line 64145
    } else if ((label | 0) == 15597) {
     HEAP32[$1 >> 2] = $1579; //@line 64148
     label = 15599; //@line 64150
    } else if ((label | 0) == 15647) {
     HEAP32[$1 >> 2] = $1706; //@line 64153
     label = 15694; //@line 64155
    } else if ((label | 0) == 15690) {
     HEAP32[$1 >> 2] = $1816; //@line 64158
     label = 15692; //@line 64160
    }
    if ((label | 0) == 15416) {
     HEAP32[$1 >> 2] = $5873; //@line 64163
    } else if ((label | 0) == 15509) {
     HEAP32[$1 >> 2] = $1241; //@line 64167
     label = 15511; //@line 64169
    } else if ((label | 0) == 15599) {
     HEAP32[$1 >> 2] = $5877; //@line 64172
     label = 15696; //@line 64174
    } else if ((label | 0) == 15692) {
     HEAP32[$1 >> 2] = $1706; //@line 64177
     label = 15694; //@line 64179
    }
    if ((label | 0) == 15511) {
     HEAP32[$1 >> 2] = $5873; //@line 64182
    } else if ((label | 0) == 15694) {
     HEAP32[$1 >> 2] = $5877; //@line 64186
     label = 15696; //@line 64188
    }
    if ((label | 0) == 15696) {
     HEAP32[$1 >> 2] = $5873; //@line 64191
    }
    HEAP32[$1 >> 2] = $2; //@line 64194
    $_0 = 0; //@line 64196
    STACKTOP = sp; //@line 64198
    return $_0 | 0; //@line 64199
   } else if ((label | 0) == 15200) {
    HEAP32[$1 >> 2] = $641; //@line 64202
    label = 15229; //@line 64204
   } else if ((label | 0) == 15273) {
    HEAP32[$1 >> 2] = $828; //@line 64207
    label = 15277; //@line 64209
   } else if ((label | 0) == 15293) {
    HEAP32[$1 >> 2] = $878; //@line 64212
    label = 15322; //@line 64214
   } else if ((label | 0) == 15316) {
    HEAP32[$1 >> 2] = $938; //@line 64217
    label = 15320; //@line 64219
   }
   if ((label | 0) == 15227) {
    HEAP32[$1 >> 2] = $641; //@line 64222
    label = 15229; //@line 64224
   } else if ((label | 0) == 15184) {
    HEAP32[$1 >> 2] = $5881; //@line 64227
   } else if ((label | 0) == 15277) {
    HEAP32[$1 >> 2] = $768; //@line 64231
    label = 15324; //@line 64233
   } else if ((label | 0) == 15320) {
    HEAP32[$1 >> 2] = $878; //@line 64236
    label = 15322; //@line 64238
   }
   if ((label | 0) == 15229) {
    HEAP32[$1 >> 2] = $5881; //@line 64241
   } else if ((label | 0) == 15322) {
    HEAP32[$1 >> 2] = $768; //@line 64245
    label = 15324; //@line 64247
   }
   if ((label | 0) == 15324) {
    HEAP32[$1 >> 2] = $5881; //@line 64250
   }
   HEAP32[$1 >> 2] = $2; //@line 64253
   $_0 = 0; //@line 64255
   STACKTOP = sp; //@line 64257
   return $_0 | 0; //@line 64258
  }
  if ((label | 0) == 15138) {
   HEAP32[$1 >> 2] = $272; //@line 64261
  }
  HEAP32[$1 >> 2] = $2; //@line 64264
  $_0 = 0; //@line 64266
  STACKTOP = sp; //@line 64268
  return $_0 | 0; //@line 64269
 }
 if ((label | 0) == 15042) {
  HEAP32[$1 >> 2] = $130; //@line 64272
 }
 HEAP32[$1 >> 2] = $2; //@line 64275
 $_0 = 0; //@line 64277
 STACKTOP = sp; //@line 64279
 return $_0 | 0; //@line 64280
}
function _cmd_match_expr_cmp($cmd, $val, $base) {
 $cmd = $cmd | 0;
 $val = $val | 0;
 $base = $base | 0;
 var $val2 = 0, $1 = 0, $2 = 0, $7 = 0, $8 = 0, $9 = 0, $12 = 0, $19 = 0, $20 = 0, $21 = 0, $23 = 0, $27 = 0, $28 = 0, $30 = 0, $32 = 0, $39 = 0, $i_0_i_i41 = 0, $40 = 0, $op_0 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 64298
 STACKTOP = STACKTOP + 8 | 0; //@line 64298
 $val2 = sp | 0; //@line 64299
 $1 = $cmd | 0; //@line 64300
 $2 = HEAP32[$1 >> 2] | 0; //@line 64301
 if ((_cmd_match_expr_shift($cmd, $val, $base) | 0) == 0) {
  $_0 = 0; //@line 64306
  STACKTOP = sp; //@line 64308
  return $_0 | 0; //@line 64309
 }
 L22382 : while (1) {
  $7 = HEAP32[$1 >> 2] | 0; //@line 64314
  while (1) {
   $8 = $cmd + 4 + $7 | 0; //@line 64317
   $9 = HEAP8[$8] | 0; //@line 64318
   if (!(($9 << 24 >> 24 | 0) == 13 | ($9 << 24 >> 24 | 0) == 32 | ($9 << 24 >> 24 | 0) == 9 | ($9 << 24 >> 24 | 0) == 10)) {
    break;
   }
   $7 = $7 + 1 | 0; //@line 64324
  }
  HEAP32[$1 >> 2] = $7; //@line 64326
  $12 = HEAP8[$8] | 0; //@line 64327
  do {
   if ($12 << 24 >> 24 == 60) {
    if ((HEAP8[$7 + 1 + ($cmd + 4) | 0] | 0) != 61) {
     $20 = $7;
     $19 = 60;
     label = 17294; //@line 64337
     break;
    }
    HEAP32[$1 >> 2] = $7 + 2; //@line 64341
    $op_0 = 1; //@line 64343
   } else {
    $20 = $7;
    $19 = $12;
    label = 17294; //@line 64346
   }
  } while (0);
  L22391 : do {
   if ((label | 0) == 17294) {
    while (1) {
     label = 0; //@line 64352
     if (!(($19 << 24 >> 24 | 0) == 13 | ($19 << 24 >> 24 | 0) == 32 | ($19 << 24 >> 24 | 0) == 9 | ($19 << 24 >> 24 | 0) == 10)) {
      break;
     }
     $21 = $20 + 1 | 0; //@line 64358
     $20 = $21;
     $19 = HEAP8[$cmd + 4 + $21 | 0] | 0;
     label = 17294; //@line 64363
    }
    HEAP32[$1 >> 2] = $20; //@line 64366
    $23 = HEAP8[$cmd + 4 + $20 | 0] | 0; //@line 64367
    if ($23 << 24 >> 24 == 60) {
     HEAP32[$1 >> 2] = $20 + 1; //@line 64371
     $op_0 = 2; //@line 64373
     break;
    } else {
     $28 = $20;
     $27 = $23;
    }
    while (1) {
     if (!(($27 << 24 >> 24 | 0) == 13 | ($27 << 24 >> 24 | 0) == 32 | ($27 << 24 >> 24 | 0) == 9 | ($27 << 24 >> 24 | 0) == 10)) {
      break;
     }
     $30 = $28 + 1 | 0; //@line 64384
     $28 = $30;
     $27 = HEAP8[$cmd + 4 + $30 | 0] | 0;
    }
    HEAP32[$1 >> 2] = $28; //@line 64391
    $32 = HEAP8[$cmd + 4 + $28 | 0] | 0; //@line 64392
    do {
     if ($32 << 24 >> 24 == 62) {
      if ((HEAP8[$28 + 1 + ($cmd + 4) | 0] | 0) != 61) {
       $i_0_i_i41 = $28;
       $39 = 62;
       break;
      }
      HEAP32[$1 >> 2] = $28 + 2; //@line 64405
      $op_0 = 3; //@line 64407
      break L22391;
     } else {
      $i_0_i_i41 = $28;
      $39 = $32;
     }
    } while (0);
    while (1) {
     if (!(($39 << 24 >> 24 | 0) == 13 | ($39 << 24 >> 24 | 0) == 32 | ($39 << 24 >> 24 | 0) == 9 | ($39 << 24 >> 24 | 0) == 10)) {
      break;
     }
     $40 = $i_0_i_i41 + 1 | 0; //@line 64419
     $i_0_i_i41 = $40;
     $39 = HEAP8[$cmd + 4 + $40 | 0] | 0;
    }
    HEAP32[$1 >> 2] = $i_0_i_i41; //@line 64426
    if ((HEAP8[$cmd + 4 + $i_0_i_i41 | 0] | 0) != 62) {
     $_0 = 1; //@line 64430
     label = 17317; //@line 64431
     break L22382;
    }
    HEAP32[$1 >> 2] = $i_0_i_i41 + 1; //@line 64435
    $op_0 = 4; //@line 64437
   }
  } while (0);
  if ((_cmd_match_expr_shift($cmd, $val2, $base) | 0) == 0) {
   break;
  }
  if (($op_0 | 0) == 4) {
   HEAP32[$val >> 2] = (HEAP32[$val >> 2] | 0) >>> 0 > (HEAP32[$val2 >> 2] | 0) >>> 0; //@line 64452
   continue;
  } else if (($op_0 | 0) == 3) {
   HEAP32[$val >> 2] = (HEAP32[$val >> 2] | 0) >>> 0 >= (HEAP32[$val2 >> 2] | 0) >>> 0; //@line 64460
   continue;
  } else if (($op_0 | 0) == 1) {
   HEAP32[$val >> 2] = (HEAP32[$val >> 2] | 0) >>> 0 <= (HEAP32[$val2 >> 2] | 0) >>> 0; //@line 64468
   continue;
  } else if (($op_0 | 0) == 2) {
   HEAP32[$val >> 2] = (HEAP32[$val >> 2] | 0) >>> 0 < (HEAP32[$val2 >> 2] | 0) >>> 0; //@line 64476
   continue;
  } else {
   continue;
  }
 }
 if ((label | 0) == 17317) {
  STACKTOP = sp; //@line 64485
  return $_0 | 0; //@line 64486
 }
 HEAP32[$1 >> 2] = $2; //@line 64488
 $_0 = 0; //@line 64490
 STACKTOP = sp; //@line 64492
 return $_0 | 0; //@line 64493
}
function _cmd_match_expr_shift($cmd, $val, $base) {
 $cmd = $cmd | 0;
 $val = $val | 0;
 $base = $base | 0;
 var $val2_i53 = 0, $val2_i = 0, $val2 = 0, $1 = 0, $2 = 0, $8 = 0, $9 = 0, $10 = 0, $13 = 0, $16 = 0, $i_0_i_i84 = 0, $18 = 0, $storemerge93_in = 0, $op_0_i54 = 0, $28 = 0, $30 = 0, $31 = 0, $32 = 0, $35 = 0, $42 = 0, $43 = 0, $44 = 0, $46 = 0, $53 = 0, $54 = 0, $55 = 0, $57 = 0, $64 = 0, $i_0_i_i44 = 0, $65 = 0, $74 = 0, $op_0 = 0, $79 = 0, $80 = 0, $81 = 0, $84 = 0, $87 = 0, $i_0_i_i66 = 0, $89 = 0, $storemerge_in = 0, $op_0_i = 0, $98 = 0, $102 = 0, $104 = 0, $110 = 0, $_0 = 0, $125 = 0, $130 = 0, $131 = 0, $132 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 64520
 STACKTOP = STACKTOP + 24 | 0; //@line 64520
 $val2_i53 = sp | 0; //@line 64521
 $val2_i = sp + 8 | 0; //@line 64522
 $val2 = sp + 16 | 0; //@line 64523
 $1 = $cmd | 0; //@line 64524
 $2 = HEAP32[$1 >> 2] | 0; //@line 64525
 if ((_cmd_match_expr_product($cmd, $val, $base) | 0) == 0) {
  $_0 = 0; //@line 64531
  STACKTOP = sp; //@line 64533
  return $_0 | 0; //@line 64534
 }
 while (1) {
  $8 = HEAP32[$1 >> 2] | 0; //@line 64539
  while (1) {
   $9 = $cmd + 4 + $8 | 0; //@line 64542
   $10 = HEAP8[$9] | 0; //@line 64543
   if (!(($10 << 24 >> 24 | 0) == 13 | ($10 << 24 >> 24 | 0) == 32 | ($10 << 24 >> 24 | 0) == 9 | ($10 << 24 >> 24 | 0) == 10)) {
    break;
   }
   $8 = $8 + 1 | 0; //@line 64549
  }
  HEAP32[$1 >> 2] = $8; //@line 64551
  $13 = HEAP8[$9] | 0; //@line 64552
  if ($13 << 24 >> 24 == 43) {
   $op_0_i54 = 1;
   $storemerge93_in = $8;
  } else {
   $i_0_i_i84 = $8;
   $16 = $13;
   while (1) {
    if (!(($16 << 24 >> 24 | 0) == 13 | ($16 << 24 >> 24 | 0) == 32 | ($16 << 24 >> 24 | 0) == 9 | ($16 << 24 >> 24 | 0) == 10)) {
     break;
    }
    $18 = $i_0_i_i84 + 1 | 0; //@line 64564
    $i_0_i_i84 = $18;
    $16 = HEAP8[$cmd + 4 + $18 | 0] | 0;
   }
   HEAP32[$1 >> 2] = $i_0_i_i84; //@line 64571
   if ((HEAP8[$cmd + 4 + $i_0_i_i84 | 0] | 0) == 45) {
    $op_0_i54 = 2;
    $storemerge93_in = $i_0_i_i84;
   } else {
    break;
   }
  }
  HEAP32[$1 >> 2] = $storemerge93_in + 1; //@line 64583
  if ((_cmd_match_expr_product($cmd, $val2_i53, $base) | 0) == 0) {
   label = 17329; //@line 64588
   break;
  }
  $28 = HEAP32[$val2_i53 >> 2] | 0; //@line 64593
  HEAP32[$val >> 2] = (HEAP32[$val >> 2] | 0) + (($op_0_i54 | 0) == 1 ? $28 : -$28 | 0); //@line 64597
 }
 if ((label | 0) == 17329) {
  HEAP32[$1 >> 2] = $2; //@line 64600
  $_0 = 0; //@line 64602
  STACKTOP = sp; //@line 64604
  return $_0 | 0; //@line 64605
 }
 $30 = $i_0_i_i84; //@line 64609
 L22441 : while (1) {
  $31 = $cmd + 4 + $30 | 0; //@line 64612
  $32 = HEAP8[$31] | 0; //@line 64613
  if (($32 << 24 >> 24 | 0) == 13 | ($32 << 24 >> 24 | 0) == 32 | ($32 << 24 >> 24 | 0) == 9 | ($32 << 24 >> 24 | 0) == 10) {
   $30 = $30 + 1 | 0; //@line 64617
   continue;
  }
  HEAP32[$1 >> 2] = $30; //@line 64620
  $35 = HEAP8[$31] | 0; //@line 64621
  do {
   if ($35 << 24 >> 24 == 60) {
    if ((HEAP8[$30 + 1 + ($cmd + 4) | 0] | 0) != 60) {
     $43 = $30;
     $42 = 60;
     label = 17335; //@line 64631
     break;
    }
    if ((HEAP8[$30 + 2 + ($cmd + 4) | 0] | 0) != 60) {
     $43 = $30;
     $42 = $35;
     label = 17335; //@line 64640
     break;
    }
    $125 = $30 + 3 | 0; //@line 64643
    HEAP32[$1 >> 2] = $125; //@line 64644
    $op_0 = 1;
    $74 = $125;
   } else {
    $43 = $30;
    $42 = $35;
    label = 17335; //@line 64649
   }
  } while (0);
  L22450 : do {
   if ((label | 0) == 17335) {
    while (1) {
     label = 0; //@line 64655
     if (!(($42 << 24 >> 24 | 0) == 13 | ($42 << 24 >> 24 | 0) == 32 | ($42 << 24 >> 24 | 0) == 9 | ($42 << 24 >> 24 | 0) == 10)) {
      break;
     }
     $44 = $43 + 1 | 0; //@line 64661
     $43 = $44;
     $42 = HEAP8[$cmd + 4 + $44 | 0] | 0;
     label = 17335; //@line 64666
    }
    HEAP32[$1 >> 2] = $43; //@line 64669
    $46 = HEAP8[$cmd + 4 + $43 | 0] | 0; //@line 64670
    do {
     if ($46 << 24 >> 24 == 62) {
      if ((HEAP8[$43 + 1 + ($cmd + 4) | 0] | 0) != 62) {
       $54 = $43;
       $53 = 62;
       break;
      }
      if ((HEAP8[$43 + 2 + ($cmd + 4) | 0] | 0) != 62) {
       $54 = $43;
       $53 = $46;
       break;
      }
      $130 = $43 + 3 | 0; //@line 64690
      HEAP32[$1 >> 2] = $130; //@line 64691
      $op_0 = 2;
      $74 = $130;
      break L22450;
     } else {
      $54 = $43;
      $53 = $46;
     }
    } while (0);
    while (1) {
     if (!(($53 << 24 >> 24 | 0) == 13 | ($53 << 24 >> 24 | 0) == 32 | ($53 << 24 >> 24 | 0) == 9 | ($53 << 24 >> 24 | 0) == 10)) {
      break;
     }
     $55 = $54 + 1 | 0; //@line 64705
     $54 = $55;
     $53 = HEAP8[$cmd + 4 + $55 | 0] | 0;
    }
    HEAP32[$1 >> 2] = $54; //@line 64712
    $57 = HEAP8[$cmd + 4 + $54 | 0] | 0; //@line 64713
    do {
     if ($57 << 24 >> 24 == 60) {
      if ((HEAP8[$54 + 1 + ($cmd + 4) | 0] | 0) != 60) {
       $i_0_i_i44 = $54;
       $64 = 60;
       break;
      }
      $131 = $54 + 2 | 0; //@line 64725
      HEAP32[$1 >> 2] = $131; //@line 64726
      $op_0 = 3;
      $74 = $131;
      break L22450;
     } else {
      $i_0_i_i44 = $54;
      $64 = $57;
     }
    } while (0);
    while (1) {
     if (!(($64 << 24 >> 24 | 0) == 13 | ($64 << 24 >> 24 | 0) == 32 | ($64 << 24 >> 24 | 0) == 9 | ($64 << 24 >> 24 | 0) == 10)) {
      break;
     }
     $65 = $i_0_i_i44 + 1 | 0; //@line 64740
     $i_0_i_i44 = $65;
     $64 = HEAP8[$cmd + 4 + $65 | 0] | 0;
    }
    HEAP32[$1 >> 2] = $i_0_i_i44; //@line 64747
    if ((HEAP8[$cmd + 4 + $i_0_i_i44 | 0] | 0) != 62) {
     $_0 = 1; //@line 64751
     label = 17376; //@line 64752
     break L22441;
    }
    if ((HEAP8[$i_0_i_i44 + 1 + ($cmd + 4) | 0] | 0) != 62) {
     $_0 = 1; //@line 64760
     label = 17372; //@line 64761
     break L22441;
    }
    $132 = $i_0_i_i44 + 2 | 0; //@line 64764
    HEAP32[$1 >> 2] = $132; //@line 64765
    $op_0 = 4;
    $74 = $132;
   }
  } while (0);
  if ((_cmd_match_expr_product($cmd, $val2, $base) | 0) == 0) {
   break;
  }
  while (1) {
   $79 = HEAP32[$1 >> 2] | 0; //@line 64781
   while (1) {
    $80 = $cmd + 4 + $79 | 0; //@line 64784
    $81 = HEAP8[$80] | 0; //@line 64785
    if (!(($81 << 24 >> 24 | 0) == 13 | ($81 << 24 >> 24 | 0) == 32 | ($81 << 24 >> 24 | 0) == 9 | ($81 << 24 >> 24 | 0) == 10)) {
     break;
    }
    $79 = $79 + 1 | 0; //@line 64791
   }
   HEAP32[$1 >> 2] = $79; //@line 64793
   $84 = HEAP8[$80] | 0; //@line 64794
   if ($84 << 24 >> 24 == 43) {
    $op_0_i = 1;
    $storemerge_in = $79;
   } else {
    $i_0_i_i66 = $79;
    $87 = $84;
    while (1) {
     if (!(($87 << 24 >> 24 | 0) == 13 | ($87 << 24 >> 24 | 0) == 32 | ($87 << 24 >> 24 | 0) == 9 | ($87 << 24 >> 24 | 0) == 10)) {
      break;
     }
     $89 = $i_0_i_i66 + 1 | 0; //@line 64806
     $i_0_i_i66 = $89;
     $87 = HEAP8[$cmd + 4 + $89 | 0] | 0;
    }
    HEAP32[$1 >> 2] = $i_0_i_i66; //@line 64813
    if ((HEAP8[$cmd + 4 + $i_0_i_i66 | 0] | 0) == 45) {
     $op_0_i = 2;
     $storemerge_in = $i_0_i_i66;
    } else {
     break;
    }
   }
   HEAP32[$1 >> 2] = $storemerge_in + 1; //@line 64825
   if ((_cmd_match_expr_product($cmd, $val2_i, $base) | 0) == 0) {
    label = 17356; //@line 64830
    break L22441;
   }
   $98 = HEAP32[$val2_i >> 2] | 0; //@line 64835
   HEAP32[$val2 >> 2] = (HEAP32[$val2 >> 2] | 0) + (($op_0_i | 0) == 1 ? $98 : -$98 | 0); //@line 64839
  }
  $102 = HEAP32[$val2 >> 2] & 31; //@line 64842
  HEAP32[$val2 >> 2] = $102; //@line 64843
  if (($op_0 | 0) == 1) {
   $104 = HEAP32[$val >> 2] | 0; //@line 64845
   HEAP32[$val >> 2] = $104 << $102 | $104 >>> ((32 - $102 | 0) >>> 0); //@line 64850
  } else if (($op_0 | 0) == 2) {
   $110 = HEAP32[$val >> 2] | 0; //@line 64853
   HEAP32[$val >> 2] = $110 >>> ($102 >>> 0) | $110 << 32 - $102; //@line 64858
  } else if (($op_0 | 0) == 3) {
   HEAP32[$val >> 2] = HEAP32[$val >> 2] << $102; //@line 64863
  } else if (($op_0 | 0) == 4) {
   HEAP32[$val >> 2] = (HEAP32[$val >> 2] | 0) >>> ($102 >>> 0); //@line 64868
  }
  $30 = HEAP32[$1 >> 2] | 0; //@line 64872
 }
 if ((label | 0) == 17376) {
  STACKTOP = sp; //@line 64876
  return $_0 | 0; //@line 64877
 } else if ((label | 0) == 17372) {
  STACKTOP = sp; //@line 64881
  return $_0 | 0; //@line 64882
 } else if ((label | 0) == 17356) {
  HEAP32[$1 >> 2] = $74; //@line 64885
 }
 HEAP32[$1 >> 2] = $2; //@line 64888
 $_0 = 0; //@line 64890
 STACKTOP = sp; //@line 64892
 return $_0 | 0; //@line 64893
}
function _cmd_match_expr_product($cmd, $val, $base) {
 $cmd = $cmd | 0;
 $val = $val | 0;
 $base = $base | 0;
 var $val2 = 0, $1 = 0, $2 = 0, $7 = 0, $8 = 0, $9 = 0, $12 = 0, $16 = 0, $17 = 0, $19 = 0, $21 = 0, $25 = 0, $i_0_i_i26 = 0, $27 = 0, $op_0 = 0, $44 = 0, $45 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 64908
 STACKTOP = STACKTOP + 8 | 0; //@line 64908
 $val2 = sp | 0; //@line 64909
 $1 = $cmd | 0; //@line 64910
 $2 = HEAP32[$1 >> 2] | 0; //@line 64911
 if ((_cmd_match_expr_neg($cmd, $val, $base) | 0) == 0) {
  $_0 = 0; //@line 64916
  STACKTOP = sp; //@line 64918
  return $_0 | 0; //@line 64919
 }
 L22502 : while (1) {
  $7 = HEAP32[$1 >> 2] | 0; //@line 64924
  while (1) {
   $8 = $cmd + 4 + $7 | 0; //@line 64927
   $9 = HEAP8[$8] | 0; //@line 64928
   if (!(($9 << 24 >> 24 | 0) == 13 | ($9 << 24 >> 24 | 0) == 32 | ($9 << 24 >> 24 | 0) == 9 | ($9 << 24 >> 24 | 0) == 10)) {
    break;
   }
   $7 = $7 + 1 | 0; //@line 64934
  }
  HEAP32[$1 >> 2] = $7; //@line 64936
  $12 = HEAP8[$8] | 0; //@line 64937
  do {
   if ($12 << 24 >> 24 == 42) {
    HEAP32[$1 >> 2] = $7 + 1; //@line 64942
    $op_0 = 1; //@line 64944
   } else {
    $17 = $7;
    $16 = $12;
    while (1) {
     if (!(($16 << 24 >> 24 | 0) == 13 | ($16 << 24 >> 24 | 0) == 32 | ($16 << 24 >> 24 | 0) == 9 | ($16 << 24 >> 24 | 0) == 10)) {
      break;
     }
     $19 = $17 + 1 | 0; //@line 64953
     $17 = $19;
     $16 = HEAP8[$cmd + 4 + $19 | 0] | 0;
    }
    HEAP32[$1 >> 2] = $17; //@line 64960
    $21 = HEAP8[$cmd + 4 + $17 | 0] | 0; //@line 64961
    if ($21 << 24 >> 24 == 47) {
     HEAP32[$1 >> 2] = $17 + 1; //@line 64965
     $op_0 = 2; //@line 64967
     break;
    } else {
     $i_0_i_i26 = $17;
     $25 = $21;
    }
    while (1) {
     if (!(($25 << 24 >> 24 | 0) == 13 | ($25 << 24 >> 24 | 0) == 32 | ($25 << 24 >> 24 | 0) == 9 | ($25 << 24 >> 24 | 0) == 10)) {
      break;
     }
     $27 = $i_0_i_i26 + 1 | 0; //@line 64978
     $i_0_i_i26 = $27;
     $25 = HEAP8[$cmd + 4 + $27 | 0] | 0;
    }
    HEAP32[$1 >> 2] = $i_0_i_i26; //@line 64985
    if ((HEAP8[$cmd + 4 + $i_0_i_i26 | 0] | 0) != 37) {
     $_0 = 1; //@line 64989
     label = 17404; //@line 64990
     break L22502;
    }
    HEAP32[$1 >> 2] = $i_0_i_i26 + 1; //@line 64994
    $op_0 = 3; //@line 64996
   }
  } while (0);
  if ((_cmd_match_expr_neg($cmd, $val2, $base) | 0) == 0) {
   break;
  }
  if (($op_0 | 0) == 1) {
   HEAP32[$val >> 2] = Math_imul(HEAP32[$val2 >> 2] | 0, HEAP32[$val >> 2] | 0) | 0; //@line 65012
   continue;
  }
  $44 = HEAP32[$val2 >> 2] | 0; //@line 65017
  $45 = ($44 | 0) != 0; //@line 65018
  if (($op_0 | 0) == 2) {
   if ($45) {
    HEAP32[$val >> 2] = ((HEAP32[$val >> 2] | 0) >>> 0) / ($44 >>> 0) | 0; //@line 65025
    continue;
   } else {
    HEAP32[$val >> 2] = -1; //@line 65029
    continue;
   }
  } else {
   if ($45) {
    HEAP32[$val >> 2] = ((HEAP32[$val >> 2] | 0) >>> 0) % ($44 >>> 0) | 0; //@line 65037
    continue;
   } else {
    HEAP32[$val >> 2] = 0; //@line 65041
    continue;
   }
  }
 }
 if ((label | 0) == 17404) {
  STACKTOP = sp; //@line 65048
  return $_0 | 0; //@line 65049
 }
 HEAP32[$1 >> 2] = $2; //@line 65051
 $_0 = 0; //@line 65053
 STACKTOP = sp; //@line 65055
 return $_0 | 0; //@line 65056
}
function _pce_console_init($inp, $out) {
 $inp = $inp | 0;
 $out = $out | 0;
 HEAP32[15328] = $inp; //@line 65065
 HEAP32[15326] = $out; //@line 65066
 return;
}
function _cmd_match_expr_neg($cmd, $val, $base) {
 $cmd = $cmd | 0;
 $val = $val | 0;
 $base = $base | 0;
 var $str_i = 0, $1 = 0, $2 = 0, $4 = 0, $5 = 0, $6 = 0, $9 = 0, $11 = 0, $13 = 0, $14 = 0, $16 = 0, $18 = 0, $20 = 0, $22 = 0, $23 = 0, $25 = 0, $27 = 0, $29 = 0, $31 = 0, $i_0_i_i38 = 0, $33 = 0, $37 = 0, $38 = 0, $op_0 = 0, $39 = 0, $i_0_i_i47 = 0, $42 = 0, $i_0_i_i_i = 0, $46 = 0, $47 = 0, $50 = 0, $_024_i_i = 0, $55 = 0, $n_0_i_i = 0, $57 = 0, $66 = 0, $69 = 0, $72 = 0, $switch_i = 0, $i_0_i_i24_i = 0, $75 = 0, $76 = 0, $79 = 0, $_in_i_i = 0, $ret_037_i_i = 0, $cnt_036_i_i = 0, $i_035_i_i = 0, $81 = 0, $dig_0_i_i = 0, $97 = 0, $98 = 0, $99 = 0, $101 = 0, $ret_0_lcssa_i_i = 0, $cnt_0_lcssa_i_i = 0, $i_0_lcssa_i_i = 0, $_sym_i_i = 0, $111 = 0, $118 = 0, $120 = 0, $121 = 0, $i_0_i31_i = 0, $134 = 0, $135 = 0, $136 = 0, $139 = 0, $i_0_i_i36_i = 0, $148 = 0, $149 = 0, $156 = 0, $i_0_i_i45_i = 0, $158 = 0, $160 = 0, $_in_i47_i = 0, $ret_037_i48_i = 0, $cnt_036_i49_i = 0, $i_035_i50_i = 0, $162 = 0, $dig_0_i55_i = 0, $178 = 0, $179 = 0, $180 = 0, $182 = 0, $ret_0_lcssa_i56_i = 0, $cnt_0_lcssa_i57_i = 0, $i_0_lcssa_i58_i = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 65102
 STACKTOP = STACKTOP + 256 | 0; //@line 65102
 $str_i = sp | 0; //@line 65103
 $1 = $cmd | 0; //@line 65104
 $2 = HEAP32[$1 >> 2] | 0; //@line 65105
 $4 = $2; //@line 65107
 while (1) {
  $5 = $cmd + 4 + $4 | 0; //@line 65110
  $6 = HEAP8[$5] | 0; //@line 65111
  if (!(($6 << 24 >> 24 | 0) == 13 | ($6 << 24 >> 24 | 0) == 32 | ($6 << 24 >> 24 | 0) == 9 | ($6 << 24 >> 24 | 0) == 10)) {
   break;
  }
  $4 = $4 + 1 | 0; //@line 65117
 }
 HEAP32[$1 >> 2] = $4; //@line 65119
 $9 = HEAP8[$5] | 0; //@line 65120
 do {
  if ($9 << 24 >> 24 == 33) {
   $11 = $4 + 1 | 0; //@line 65124
   HEAP32[$1 >> 2] = $11; //@line 65125
   $op_0 = 1;
   $38 = $11;
  } else {
   $14 = $4;
   $13 = $9;
   while (1) {
    if (!(($13 << 24 >> 24 | 0) == 13 | ($13 << 24 >> 24 | 0) == 32 | ($13 << 24 >> 24 | 0) == 9 | ($13 << 24 >> 24 | 0) == 10)) {
     break;
    }
    $16 = $14 + 1 | 0; //@line 65136
    $14 = $16;
    $13 = HEAP8[$cmd + 4 + $16 | 0] | 0;
   }
   HEAP32[$1 >> 2] = $14; //@line 65143
   $18 = HEAP8[$cmd + 4 + $14 | 0] | 0; //@line 65144
   if ($18 << 24 >> 24 == 126) {
    $20 = $14 + 1 | 0; //@line 65147
    HEAP32[$1 >> 2] = $20; //@line 65148
    $op_0 = 2;
    $38 = $20;
    break;
   } else {
    $23 = $14;
    $22 = $18;
   }
   while (1) {
    if (!(($22 << 24 >> 24 | 0) == 13 | ($22 << 24 >> 24 | 0) == 32 | ($22 << 24 >> 24 | 0) == 9 | ($22 << 24 >> 24 | 0) == 10)) {
     break;
    }
    $25 = $23 + 1 | 0; //@line 65161
    $23 = $25;
    $22 = HEAP8[$cmd + 4 + $25 | 0] | 0;
   }
   HEAP32[$1 >> 2] = $23; //@line 65168
   $27 = HEAP8[$cmd + 4 + $23 | 0] | 0; //@line 65169
   if ($27 << 24 >> 24 == 43) {
    $29 = $23 + 1 | 0; //@line 65172
    HEAP32[$1 >> 2] = $29; //@line 65173
    $op_0 = 3;
    $38 = $29;
    break;
   } else {
    $i_0_i_i38 = $23;
    $31 = $27;
   }
   while (1) {
    if (!(($31 << 24 >> 24 | 0) == 13 | ($31 << 24 >> 24 | 0) == 32 | ($31 << 24 >> 24 | 0) == 9 | ($31 << 24 >> 24 | 0) == 10)) {
     break;
    }
    $33 = $i_0_i_i38 + 1 | 0; //@line 65186
    $i_0_i_i38 = $33;
    $31 = HEAP8[$cmd + 4 + $33 | 0] | 0;
   }
   HEAP32[$1 >> 2] = $i_0_i_i38; //@line 65193
   if ((HEAP8[$cmd + 4 + $i_0_i_i38 | 0] | 0) != 45) {
    $op_0 = 0;
    $38 = $i_0_i_i38;
    break;
   }
   $37 = $i_0_i_i38 + 1 | 0; //@line 65200
   HEAP32[$1 >> 2] = $37; //@line 65201
   $op_0 = 4;
   $38 = $37;
  }
 } while (0);
 $39 = $str_i | 0; //@line 65208
 $i_0_i_i47 = $38; //@line 65210
 while (1) {
  $42 = HEAP8[$cmd + 4 + $i_0_i_i47 | 0] | 0; //@line 65214
  if (!(($42 << 24 >> 24 | 0) == 13 | ($42 << 24 >> 24 | 0) == 32 | ($42 << 24 >> 24 | 0) == 9 | ($42 << 24 >> 24 | 0) == 10)) {
   break;
  }
  $i_0_i_i47 = $i_0_i_i47 + 1 | 0; //@line 65220
 }
 HEAP32[$1 >> 2] = $i_0_i_i47; //@line 65222
 $i_0_i_i_i = $i_0_i_i47; //@line 65224
 while (1) {
  $46 = $cmd + 4 + $i_0_i_i_i | 0; //@line 65227
  $47 = HEAP8[$46] | 0; //@line 65228
  if (!(($47 << 24 >> 24 | 0) == 13 | ($47 << 24 >> 24 | 0) == 32 | ($47 << 24 >> 24 | 0) == 9 | ($47 << 24 >> 24 | 0) == 10)) {
   break;
  }
  $i_0_i_i_i = $i_0_i_i_i + 1 | 0; //@line 65234
 }
 HEAP32[$1 >> 2] = $i_0_i_i_i; //@line 65236
 $50 = HEAP8[$46] | 0; //@line 65237
 if ((($50 << 24 >> 24) - 36 | 0) >>> 0 < 2) {
  HEAP8[$39] = $50; //@line 65244
  $n_0_i_i = 1;
  $55 = $i_0_i_i_i + 1 | 0;
  $_024_i_i = $str_i + 1 | 0;
 } else {
  $n_0_i_i = 0;
  $55 = $i_0_i_i_i;
  $_024_i_i = $39;
 }
 while (1) {
  $57 = HEAP8[$cmd + 4 + $55 | 0] | 0; //@line 65256
  if ($57 << 24 >> 24 == 0) {
   label = 17436; //@line 65260
   break;
  }
  if (!(($57 - 48 & 255) < 10 | ($57 - 97 & 255) < 26 | ($57 - 65 & 255) < 26 | $57 << 24 >> 24 == 95)) {
   label = 17436; //@line 65275
   break;
  }
  HEAP8[$_024_i_i] = $57; //@line 65279
  $66 = $n_0_i_i + 1 | 0; //@line 65281
  if ($66 >>> 0 < 256) {
   $n_0_i_i = $66;
   $55 = $55 + 1 | 0;
   $_024_i_i = $_024_i_i + 1 | 0;
  } else {
   label = 17435; //@line 65287
   break;
  }
 }
 L22579 : do {
  if ((label | 0) == 17435) {
   $69 = (HEAP32[$1 >> 2] | 0) + ($cmd + 4) | 0; //@line 65294
   _pce_printf(42512, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = 39432, HEAP32[tempInt + 8 >> 2] = $69, tempInt) | 0); //@line 65295
   $134 = HEAP32[$1 >> 2] | 0; //@line 65298
   label = 17463; //@line 65299
  } else if ((label | 0) == 17436) {
   HEAP8[$_024_i_i] = 0; //@line 65302
   HEAP32[$1 >> 2] = $55; //@line 65303
   if (($n_0_i_i | 0) == 0) {
    $134 = $55; //@line 65307
    label = 17463; //@line 65308
    break;
   }
   $72 = HEAP8[$39] | 0; //@line 65311
   $switch_i = ($72 - 36 & 255) < 2; //@line 65313
   if (!$switch_i) {
    HEAP32[$1 >> 2] = $i_0_i_i47; //@line 65316
    $i_0_i_i24_i = $i_0_i_i47; //@line 65318
    while (1) {
     $75 = $cmd + 4 + $i_0_i_i24_i | 0; //@line 65321
     $76 = HEAP8[$75] | 0; //@line 65322
     if (!(($76 << 24 >> 24 | 0) == 13 | ($76 << 24 >> 24 | 0) == 32 | ($76 << 24 >> 24 | 0) == 9 | ($76 << 24 >> 24 | 0) == 10)) {
      break;
     }
     $i_0_i_i24_i = $i_0_i_i24_i + 1 | 0; //@line 65328
    }
    HEAP32[$1 >> 2] = $i_0_i_i24_i; //@line 65330
    $79 = HEAP8[$75] | 0; //@line 65331
    do {
     if ($79 << 24 >> 24 != 0) {
      $i_035_i_i = $i_0_i_i24_i;
      $cnt_036_i_i = 0;
      $ret_037_i_i = 0;
      $_in_i_i = $79;
      L22590 : while (1) {
       $81 = $_in_i_i << 24 >> 24; //@line 65342
       do {
        if (($_in_i_i - 48 & 255) < 10) {
         $dig_0_i_i = $81 - 48 | 0; //@line 65350
        } else {
         if (($_in_i_i - 97 & 255) < 6) {
          $dig_0_i_i = $81 - 87 | 0; //@line 65358
          break;
         }
         if (($_in_i_i - 65 & 255) >= 6) {
          $i_0_lcssa_i_i = $i_035_i_i;
          $cnt_0_lcssa_i_i = $cnt_036_i_i;
          $ret_0_lcssa_i_i = $ret_037_i_i;
          break L22590;
         }
         $dig_0_i_i = $81 - 55 | 0; //@line 65369
        }
       } while (0);
       if ($dig_0_i_i >>> 0 >= $base >>> 0) {
        $i_0_lcssa_i_i = $i_035_i_i;
        $cnt_0_lcssa_i_i = $cnt_036_i_i;
        $ret_0_lcssa_i_i = $ret_037_i_i;
        break;
       }
       $97 = $dig_0_i_i + (Math_imul($ret_037_i_i, $base) | 0) | 0; //@line 65380
       $98 = $cnt_036_i_i + 1 | 0; //@line 65381
       $99 = $i_035_i_i + 1 | 0; //@line 65382
       $101 = HEAP8[$cmd + 4 + $99 | 0] | 0; //@line 65384
       if ($101 << 24 >> 24 == 0) {
        $i_0_lcssa_i_i = $99;
        $cnt_0_lcssa_i_i = $98;
        $ret_0_lcssa_i_i = $97;
        break;
       } else {
        $i_035_i_i = $99;
        $cnt_036_i_i = $98;
        $ret_037_i_i = $97;
        $_in_i_i = $101;
       }
      }
      if (($cnt_0_lcssa_i_i | 0) == 0) {
       break;
      }
      HEAP32[$1 >> 2] = $i_0_lcssa_i_i; //@line 65402
      HEAP32[$val >> 2] = $ret_0_lcssa_i_i; //@line 65403
      if ((HEAP32[$1 >> 2] | 0) >>> 0 >= $55 >>> 0) {
       break L22579;
      }
     }
    } while (0);
    HEAP32[$1 >> 2] = $55; //@line 65412
   }
   $_sym_i_i = $switch_i ? $str_i + 1 | 0 : $39; //@line 65416
   if ($72 << 24 >> 24 == 36) {
    label = 17458; //@line 65420
   } else {
    $111 = HEAP32[15704] | 0; //@line 65422
    if (($111 | 0) == 0) {
     $118 = $72; //@line 65426
    } else {
     if ((FUNCTION_TABLE_iiii[$111 & 127](HEAP32[15706] | 0, $_sym_i_i, $val) | 0) == 0) {
      break;
     }
     $118 = HEAP8[$39] | 0; //@line 65437
    }
    if ($118 << 24 >> 24 != 37) {
     label = 17458; //@line 65443
    }
   }
   L22611 : do {
    if ((label | 0) == 17458) {
     $120 = HEAP32[15696] | 0; //@line 65448
     $121 = HEAP32[15698] | 0; //@line 65449
     $i_0_i31_i = 0; //@line 65451
     while (1) {
      if ($i_0_i31_i >>> 0 >= $120 >>> 0) {
       break L22611;
      }
      if ((_strcmp(HEAP32[$121 + ($i_0_i31_i << 3) >> 2] | 0, $_sym_i_i | 0) | 0) == 0) {
       break;
      } else {
       $i_0_i31_i = $i_0_i31_i + 1 | 0; //@line 65468
      }
     }
     HEAP32[$val >> 2] = HEAP32[$121 + ($i_0_i31_i << 3) + 4 >> 2]; //@line 65473
     break L22579;
    }
   } while (0);
   HEAP32[$1 >> 2] = $i_0_i_i47; //@line 65478
   $134 = $i_0_i_i47; //@line 65480
   label = 17463; //@line 65481
  }
 } while (0);
 L22618 : do {
  if ((label | 0) == 17463) {
   while (1) {
    label = 0; //@line 65487
    $135 = $cmd + 4 + $134 | 0; //@line 65489
    $136 = HEAP8[$135] | 0; //@line 65490
    if (!(($136 << 24 >> 24 | 0) == 13 | ($136 << 24 >> 24 | 0) == 32 | ($136 << 24 >> 24 | 0) == 9 | ($136 << 24 >> 24 | 0) == 10)) {
     break;
    }
    $134 = $134 + 1 | 0; //@line 65496
    label = 17463; //@line 65497
   }
   HEAP32[$1 >> 2] = $134; //@line 65499
   $139 = HEAP8[$135] | 0; //@line 65500
   do {
    if ($139 << 24 >> 24 == 40) {
     HEAP32[$1 >> 2] = $134 + 1; //@line 65505
     do {
      if ((_cmd_match_expr($cmd, $val, $base) | 0) != 0) {
       $i_0_i_i36_i = HEAP32[$1 >> 2] | 0; //@line 65513
       while (1) {
        $148 = $cmd + 4 + $i_0_i_i36_i | 0; //@line 65516
        $149 = HEAP8[$148] | 0; //@line 65517
        if (!(($149 << 24 >> 24 | 0) == 13 | ($149 << 24 >> 24 | 0) == 32 | ($149 << 24 >> 24 | 0) == 9 | ($149 << 24 >> 24 | 0) == 10)) {
         break;
        }
        $i_0_i_i36_i = $i_0_i_i36_i + 1 | 0; //@line 65523
       }
       HEAP32[$1 >> 2] = $i_0_i_i36_i; //@line 65525
       if ((HEAP8[$148] | 0) != 41) {
        break;
       }
       HEAP32[$1 >> 2] = $i_0_i_i36_i + 1; //@line 65532
       break L22618;
      }
     } while (0);
     HEAP32[$1 >> 2] = $i_0_i_i47; //@line 65537
    } else {
     $i_0_i_i45_i = $134;
     $156 = $139;
     while (1) {
      if (!(($156 << 24 >> 24 | 0) == 13 | ($156 << 24 >> 24 | 0) == 32 | ($156 << 24 >> 24 | 0) == 9 | ($156 << 24 >> 24 | 0) == 10)) {
       break;
      }
      $158 = $i_0_i_i45_i + 1 | 0; //@line 65547
      $i_0_i_i45_i = $158;
      $156 = HEAP8[$cmd + 4 + $158 | 0] | 0;
     }
     HEAP32[$1 >> 2] = $i_0_i_i45_i; //@line 65554
     $160 = HEAP8[$cmd + 4 + $i_0_i_i45_i | 0] | 0; //@line 65555
     if ($160 << 24 >> 24 == 0) {
      break;
     } else {
      $i_035_i50_i = $i_0_i_i45_i;
      $cnt_036_i49_i = 0;
      $ret_037_i48_i = 0;
      $_in_i47_i = $160;
     }
     L22637 : while (1) {
      $162 = $_in_i47_i << 24 >> 24; //@line 65568
      do {
       if (($_in_i47_i - 48 & 255) < 10) {
        $dig_0_i55_i = $162 - 48 | 0; //@line 65576
       } else {
        if (($_in_i47_i - 97 & 255) < 6) {
         $dig_0_i55_i = $162 - 87 | 0; //@line 65584
         break;
        }
        if (($_in_i47_i - 65 & 255) >= 6) {
         $i_0_lcssa_i58_i = $i_035_i50_i;
         $cnt_0_lcssa_i57_i = $cnt_036_i49_i;
         $ret_0_lcssa_i56_i = $ret_037_i48_i;
         break L22637;
        }
        $dig_0_i55_i = $162 - 55 | 0; //@line 65595
       }
      } while (0);
      if ($dig_0_i55_i >>> 0 >= $base >>> 0) {
       $i_0_lcssa_i58_i = $i_035_i50_i;
       $cnt_0_lcssa_i57_i = $cnt_036_i49_i;
       $ret_0_lcssa_i56_i = $ret_037_i48_i;
       break;
      }
      $178 = $dig_0_i55_i + (Math_imul($ret_037_i48_i, $base) | 0) | 0; //@line 65606
      $179 = $cnt_036_i49_i + 1 | 0; //@line 65607
      $180 = $i_035_i50_i + 1 | 0; //@line 65608
      $182 = HEAP8[$cmd + 4 + $180 | 0] | 0; //@line 65610
      if ($182 << 24 >> 24 == 0) {
       $i_0_lcssa_i58_i = $180;
       $cnt_0_lcssa_i57_i = $179;
       $ret_0_lcssa_i56_i = $178;
       break;
      } else {
       $i_035_i50_i = $180;
       $cnt_036_i49_i = $179;
       $ret_037_i48_i = $178;
       $_in_i47_i = $182;
      }
     }
     if (($cnt_0_lcssa_i57_i | 0) == 0) {
      break;
     }
     HEAP32[$1 >> 2] = $i_0_lcssa_i58_i; //@line 65628
     HEAP32[$val >> 2] = $ret_0_lcssa_i56_i; //@line 65629
     break L22618;
    }
   } while (0);
   HEAP32[$1 >> 2] = $2; //@line 65634
   $_0 = 0; //@line 65636
   STACKTOP = sp; //@line 65638
   return $_0 | 0; //@line 65639
  }
 } while (0);
 if (($op_0 | 0) == 1) {
  HEAP32[$val >> 2] = (HEAP32[$val >> 2] | 0) == 0; //@line 65646
  $_0 = 1; //@line 65648
  STACKTOP = sp; //@line 65650
  return $_0 | 0; //@line 65651
 } else if (($op_0 | 0) == 2) {
  HEAP32[$val >> 2] = ~HEAP32[$val >> 2]; //@line 65655
  $_0 = 1; //@line 65657
  STACKTOP = sp; //@line 65659
  return $_0 | 0; //@line 65660
 } else if (($op_0 | 0) == 4) {
  HEAP32[$val >> 2] = -(HEAP32[$val >> 2] | 0); //@line 65664
  $_0 = 1; //@line 65666
  STACKTOP = sp; //@line 65668
  return $_0 | 0; //@line 65669
 } else {
  $_0 = 1; //@line 65671
  STACKTOP = sp; //@line 65673
  return $_0 | 0; //@line 65674
 }
 return 0;
}
function _pce_printf($msg, varrp) {
 $msg = $msg | 0;
 varrp = varrp | 0;
 var $va = 0, $6 = 0, $7 = 0, $12 = 0, sp = 0;
 sp = STACKTOP; //@line 65685
 STACKTOP = STACKTOP + 16 | 0; //@line 65685
 $va = sp | 0; //@line 65686
 if ((HEAP32[15326] | 0) == 0) {
  HEAP32[15326] = HEAP32[_stdout >> 2]; //@line 65692
 }
 $6 = $va | 0; //@line 65695
 $7 = $va; //@line 65696
 HEAP32[$7 >> 2] = varrp; //@line 65697
 HEAP32[$7 + 4 >> 2] = 0; //@line 65697
 _vfprintf(HEAP32[15326] | 0, $msg | 0, $6 | 0) | 0; //@line 65699
 _fflush(HEAP32[15326] | 0) | 0; //@line 65701
 $12 = HEAP32[15322] | 0; //@line 65702
 if (($12 | 0) == 0) {
  STACKTOP = sp; //@line 65707
  return;
 }
 _vfprintf($12 | 0, $msg | 0, $6 | 0) | 0; //@line 65710
 _fflush(HEAP32[15322] | 0) | 0; //@line 65712
 STACKTOP = sp; //@line 65715
 return;
}
function _pce_prt_sep($str) {
 $str = $str | 0;
 var $1 = 0, $2 = 0, $5 = 0, $7 = 0, $10 = 0, $13 = 0, $15 = 0, $18 = 0, $20 = 0, $24 = 0, $28 = 0, $i_022 = 0, $31 = 0, $32 = 0, $33 = 0, $35 = 0, $36 = 0, $i_023 = 0, $39 = 0, $42 = 0, $i_0 = 0, $45 = 0, $46 = 0, $48 = 0, $_lcssa21 = 0, $_lcssa = 0, $51 = 0, $53 = 0, $56 = 0;
 $1 = _strlen($str | 0) | 0; //@line 65732
 $2 = HEAP32[15326] | 0; //@line 65733
 if (($2 | 0) == 0) {
  $5 = HEAP32[_stdout >> 2] | 0; //@line 65737
  HEAP32[15326] = $5; //@line 65738
  $7 = $5; //@line 65740
 } else {
  $7 = $2; //@line 65742
 }
 _fputc(45, $7 | 0) | 0; //@line 65745
 _fflush(HEAP32[15326] | 0) | 0; //@line 65747
 $10 = HEAP32[15322] | 0; //@line 65748
 if (($10 | 0) != 0) {
  _fputc(45, $10 | 0) | 0; //@line 65752
  $13 = HEAP32[15322] | 0; //@line 65753
  _fflush($13 | 0) | 0; //@line 65754
 }
 $15 = HEAP32[15326] | 0; //@line 65757
 if (($15 | 0) == 0) {
  $18 = HEAP32[_stdout >> 2] | 0; //@line 65761
  HEAP32[15326] = $18; //@line 65762
  $20 = $18; //@line 65764
 } else {
  $20 = $15; //@line 65766
 }
 _fputs($str | 0, $20 | 0) | 0; //@line 65769
 _fflush(HEAP32[15326] | 0) | 0; //@line 65771
 $24 = HEAP32[15322] | 0; //@line 65772
 if (($24 | 0) != 0) {
  _fputs($str | 0, $24 | 0) | 0; //@line 65776
  $28 = HEAP32[15322] | 0; //@line 65777
  _fflush($28 | 0) | 0; //@line 65778
 }
 $i_022 = $1 + 1 | 0; //@line 65781
 $31 = HEAP32[15326] | 0; //@line 65783
 $32 = ($31 | 0) == 0; //@line 65784
 if ($i_022 >>> 0 < 78) {
  $33 = HEAP32[_stdout >> 2] | 0; //@line 65787
  $i_023 = $i_022;
  $36 = $31;
  $35 = $32;
  while (1) {
   if ($35) {
    HEAP32[15326] = $33; //@line 65796
    $39 = $33; //@line 65798
   } else {
    $39 = $36; //@line 65800
   }
   _fputc(45, $39 | 0) | 0; //@line 65803
   _fflush(HEAP32[15326] | 0) | 0; //@line 65805
   $42 = HEAP32[15322] | 0; //@line 65806
   if (($42 | 0) != 0) {
    _fputc(45, $42 | 0) | 0; //@line 65810
    $48 = HEAP32[15322] | 0; //@line 65811
    _fflush($48 | 0) | 0; //@line 65812
   }
   $i_0 = $i_023 + 1 | 0; //@line 65815
   $45 = HEAP32[15326] | 0; //@line 65817
   $46 = ($45 | 0) == 0; //@line 65818
   if ($i_0 >>> 0 < 78) {
    $i_023 = $i_0;
    $36 = $45;
    $35 = $46;
   } else {
    $_lcssa = $45;
    $_lcssa21 = $46;
    break;
   }
  }
 } else {
  $_lcssa = $31;
  $_lcssa21 = $32;
 }
 if ($_lcssa21) {
  $51 = HEAP32[_stdout >> 2] | 0; //@line 65834
  HEAP32[15326] = $51; //@line 65835
  $53 = $51; //@line 65837
 } else {
  $53 = $_lcssa; //@line 65839
 }
 _fputc(10, $53 | 0) | 0; //@line 65842
 _fflush(HEAP32[15326] | 0) | 0; //@line 65844
 $56 = HEAP32[15322] | 0; //@line 65845
 if (($56 | 0) == 0) {
  return;
 }
 _fputc(10, $56 | 0) | 0; //@line 65852
 _fflush(HEAP32[15322] | 0) | 0; //@line 65854
 return;
}
function _pce_getopt_help($tag, $usage, $opt) {
 $tag = $tag | 0;
 $usage = $usage | 0;
 $opt = $opt | 0;
 var $tmp_sroa_1_i_0_idx14 = 0, $1 = 0, $2 = 0, $4 = 0, $5 = 0, $7 = 0, $8 = 0, $i_037_i = 0, $9 = 0, $10 = 0, $11 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $23 = 0, $28 = 0, $tmp_sroa_0_0_copyload26_i = 0, $34 = 0, $tmp_sroa_1_2__cast28_i = 0, $35 = 0, $37 = 0, $j_035_us_i = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $48 = 0, $53 = 0, $57 = 0, $60 = 0, $62 = 0, $63 = 0, $j_035_i = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $73 = 0, $79 = 0, $j_0_lcssa33_i = 0, $84 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $tmp_sroa_1_2__cast_i = 0, $_pre = 0, $93 = 0, $w_08_i = 0, $i_06_i = 0, $100 = 0, $n_0_i_i = 0, $n_1_i_i = 0, $110 = 0, $_0_i_i = 0, $w_0_lcssa_i = 0, $127 = 0, $129 = 0, $131 = 0, $_015 = 0, $134 = 0, $136 = 0, $_pre_phi_i = 0, $n_0_i = 0, $144 = 0, $n_1_i = 0, $153 = 0, $154 = 0, $n_2_ph_i = 0, $n_216_i = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 65888
 STACKTOP = STACKTOP + 16 | 0; //@line 65888
 $tmp_sroa_1_i_0_idx14 = sp | 0; //@line 65890
 $1 = $opt | 0; //@line 65894
 $2 = HEAP16[$1 >> 1] | 0; //@line 65895
 do {
  if ($2 << 16 >> 16 < 0) {
   $w_0_lcssa_i = 2; //@line 65900
  } else {
   $4 = $opt + 16 | 0; //@line 65902
   $5 = HEAP16[$4 >> 1] | 0; //@line 65903
   if ($5 << 16 >> 16 > -1) {
    $i_037_i = 1;
    $8 = $4;
    $7 = $5;
    do {
     $9 = $i_037_i - 1 | 0; //@line 65912
     $10 = $opt + ($9 << 4) | 0; //@line 65913
     $11 = $7 << 16 >> 16; //@line 65914
     if ($7 << 16 >> 16 < 256) {
      $15 = _tolower($11 | 0) | 0; //@line 65920
     } else {
      $15 = $11; //@line 65922
     }
     $16 = $10 | 0; //@line 65925
     $17 = HEAP16[$16 >> 1] | 0; //@line 65926
     $18 = $17 << 16 >> 16; //@line 65927
     if ($17 << 16 >> 16 < 256) {
      $23 = _tolower($18 | 0) | 0; //@line 65933
     } else {
      $23 = $18; //@line 65935
     }
     do {
      if (($15 | 0) < ($23 | 0)) {
       $tmp_sroa_0_0_copyload26_i = HEAP16[$8 >> 1] | 0; //@line 65944
       label = 17537; //@line 65945
      } else {
       if (($15 | 0) > ($23 | 0)) {
        break;
       }
       $28 = HEAP16[$8 >> 1] | 0; //@line 65952
       if ($28 << 16 >> 16 > (HEAP16[$16 >> 1] | 0)) {
        $tmp_sroa_0_0_copyload26_i = $28; //@line 65957
        label = 17537; //@line 65958
       }
      }
     } while (0);
     if ((label | 0) == 17537) {
      label = 0; //@line 65963
      $34 = $8; //@line 65965
      $tmp_sroa_1_2__cast28_i = $opt + ($i_037_i << 4) + 2 | 0; //@line 65967
      HEAP16[$tmp_sroa_1_i_0_idx14 >> 1] = HEAP16[$tmp_sroa_1_2__cast28_i >> 1] | 0; //@line 65968
      HEAP16[$tmp_sroa_1_i_0_idx14 + 2 >> 1] = HEAP16[$tmp_sroa_1_2__cast28_i + 2 >> 1] | 0; //@line 65968
      HEAP16[$tmp_sroa_1_i_0_idx14 + 4 >> 1] = HEAP16[$tmp_sroa_1_2__cast28_i + 4 >> 1] | 0; //@line 65968
      HEAP16[$tmp_sroa_1_i_0_idx14 + 6 >> 1] = HEAP16[$tmp_sroa_1_2__cast28_i + 6 >> 1] | 0; //@line 65968
      HEAP16[$tmp_sroa_1_i_0_idx14 + 8 >> 1] = HEAP16[$tmp_sroa_1_2__cast28_i + 8 >> 1] | 0; //@line 65968
      HEAP16[$tmp_sroa_1_i_0_idx14 + 10 >> 1] = HEAP16[$tmp_sroa_1_2__cast28_i + 10 >> 1] | 0; //@line 65968
      HEAP16[$tmp_sroa_1_i_0_idx14 + 12 >> 1] = HEAP16[$tmp_sroa_1_2__cast28_i + 12 >> 1] | 0; //@line 65968
      $35 = $10; //@line 65969
      HEAP32[$34 >> 2] = HEAP32[$35 >> 2]; //@line 65970
      HEAP32[$34 + 4 >> 2] = HEAP32[$35 + 4 >> 2]; //@line 65970
      HEAP32[$34 + 8 >> 2] = HEAP32[$35 + 8 >> 2]; //@line 65970
      HEAP32[$34 + 12 >> 2] = HEAP32[$35 + 12 >> 2]; //@line 65970
      L22718 : do {
       if (($9 | 0) == 0) {
        $91 = $opt; //@line 65975
       } else {
        $37 = $tmp_sroa_0_0_copyload26_i << 16 >> 16; //@line 65977
        L22720 : do {
         if ($tmp_sroa_0_0_copyload26_i << 16 >> 16 < 256) {
          $j_035_us_i = $9; //@line 65981
          while (1) {
           $39 = $j_035_us_i - 1 | 0; //@line 65984
           $40 = _tolower($37 | 0) | 0; //@line 65985
           $41 = $opt + ($39 << 4) | 0; //@line 65986
           $42 = HEAP16[$41 >> 1] | 0; //@line 65987
           $43 = $42 << 16 >> 16; //@line 65988
           if ($42 << 16 >> 16 < 256) {
            $48 = _tolower($43 | 0) | 0; //@line 65994
           } else {
            $48 = $43; //@line 65996
           }
           if (($40 | 0) < ($48 | 0)) {
            $60 = $opt + ($j_035_us_i << 4) | 0; //@line 66003
           } else {
            if (($40 | 0) > ($48 | 0)) {
             $j_0_lcssa33_i = $j_035_us_i; //@line 66008
             break L22720;
            }
            $53 = HEAP16[$41 >> 1] | 0; //@line 66011
            if ($tmp_sroa_0_0_copyload26_i << 16 >> 16 < $53 << 16 >> 16) {
             $j_0_lcssa33_i = $j_035_us_i; //@line 66015
             break L22720;
            }
            $57 = $opt + ($j_035_us_i << 4) | 0; //@line 66019
            if ($tmp_sroa_0_0_copyload26_i << 16 >> 16 > $53 << 16 >> 16) {
             $60 = $57; //@line 66021
            } else {
             $91 = $57; //@line 66023
             break L22718;
            }
           }
           $62 = $60; //@line 66029
           $63 = $opt + ($39 << 4) | 0; //@line 66030
           HEAP32[$62 >> 2] = HEAP32[$63 >> 2]; //@line 66031
           HEAP32[$62 + 4 >> 2] = HEAP32[$63 + 4 >> 2]; //@line 66031
           HEAP32[$62 + 8 >> 2] = HEAP32[$63 + 8 >> 2]; //@line 66031
           HEAP32[$62 + 12 >> 2] = HEAP32[$63 + 12 >> 2]; //@line 66031
           if (($39 | 0) == 0) {
            $91 = $opt; //@line 66035
            break L22718;
           } else {
            $j_035_us_i = $39; //@line 66038
           }
          }
         } else {
          $j_035_i = $9; //@line 66042
          while (1) {
           $65 = $j_035_i - 1 | 0; //@line 66045
           $66 = $opt + ($65 << 4) | 0; //@line 66046
           $67 = HEAP16[$66 >> 1] | 0; //@line 66047
           $68 = $67 << 16 >> 16; //@line 66048
           if ($67 << 16 >> 16 < 256) {
            $73 = _tolower($68 | 0) | 0; //@line 66054
           } else {
            $73 = $68; //@line 66056
           }
           if (($37 | 0) < ($73 | 0)) {
            $86 = $opt + ($j_035_i << 4) | 0; //@line 66063
           } else {
            if (($37 | 0) > ($73 | 0)) {
             $j_0_lcssa33_i = $j_035_i; //@line 66068
             break L22720;
            }
            $79 = HEAP16[$66 >> 1] | 0; //@line 66071
            if ($tmp_sroa_0_0_copyload26_i << 16 >> 16 < $79 << 16 >> 16) {
             $j_0_lcssa33_i = $j_035_i; //@line 66075
             break L22720;
            }
            $84 = $opt + ($j_035_i << 4) | 0; //@line 66079
            if ($tmp_sroa_0_0_copyload26_i << 16 >> 16 > $79 << 16 >> 16) {
             $86 = $84; //@line 66081
            } else {
             $91 = $84; //@line 66083
             break L22718;
            }
           }
           $88 = $86; //@line 66089
           $89 = $opt + ($65 << 4) | 0; //@line 66090
           HEAP32[$88 >> 2] = HEAP32[$89 >> 2]; //@line 66091
           HEAP32[$88 + 4 >> 2] = HEAP32[$89 + 4 >> 2]; //@line 66091
           HEAP32[$88 + 8 >> 2] = HEAP32[$89 + 8 >> 2]; //@line 66091
           HEAP32[$88 + 12 >> 2] = HEAP32[$89 + 12 >> 2]; //@line 66091
           if (($65 | 0) == 0) {
            $91 = $opt; //@line 66095
            break L22718;
           } else {
            $j_035_i = $65; //@line 66098
           }
          }
         }
        } while (0);
        $91 = $opt + ($j_0_lcssa33_i << 4) | 0; //@line 66105
       }
      } while (0);
      HEAP16[$91 >> 1] = $tmp_sroa_0_0_copyload26_i; //@line 66110
      $tmp_sroa_1_2__cast_i = $91 + 2 | 0; //@line 66112
      HEAP16[$tmp_sroa_1_2__cast_i >> 1] = HEAP16[$tmp_sroa_1_i_0_idx14 >> 1] | 0; //@line 66113
      HEAP16[$tmp_sroa_1_2__cast_i + 2 >> 1] = HEAP16[$tmp_sroa_1_i_0_idx14 + 2 >> 1] | 0; //@line 66113
      HEAP16[$tmp_sroa_1_2__cast_i + 4 >> 1] = HEAP16[$tmp_sroa_1_i_0_idx14 + 4 >> 1] | 0; //@line 66113
      HEAP16[$tmp_sroa_1_2__cast_i + 6 >> 1] = HEAP16[$tmp_sroa_1_i_0_idx14 + 6 >> 1] | 0; //@line 66113
      HEAP16[$tmp_sroa_1_2__cast_i + 8 >> 1] = HEAP16[$tmp_sroa_1_i_0_idx14 + 8 >> 1] | 0; //@line 66113
      HEAP16[$tmp_sroa_1_2__cast_i + 10 >> 1] = HEAP16[$tmp_sroa_1_i_0_idx14 + 10 >> 1] | 0; //@line 66113
      HEAP16[$tmp_sroa_1_2__cast_i + 12 >> 1] = HEAP16[$tmp_sroa_1_i_0_idx14 + 12 >> 1] | 0; //@line 66113
     }
     $i_037_i = $i_037_i + 1 | 0; //@line 66116
     $8 = $opt + ($i_037_i << 4) | 0; //@line 66117
     $7 = HEAP16[$8 >> 1] | 0; //@line 66118
    } while ($7 << 16 >> 16 > -1);
    $_pre = HEAP16[$1 >> 1] | 0; //@line 66127
    if ($_pre << 16 >> 16 > -1) {
     $i_06_i = 0;
     $w_08_i = 0;
     $93 = $_pre;
    } else {
     $w_0_lcssa_i = 2; //@line 66136
     break;
    }
   } else {
    $i_06_i = 0;
    $w_08_i = 0;
    $93 = $2;
   }
   do {
    do {
     if ((HEAP32[$opt + ($i_06_i << 4) + 12 >> 2] | 0) == 0) {
      $_0_i_i = 0; //@line 66152
     } else {
      $100 = HEAP32[$opt + ($i_06_i << 4) + 4 >> 2] | 0; //@line 66156
      if ($93 << 16 >> 16 < 256) {
       $n_0_i_i = ($100 | 0) == 0 ? 2 : 4; //@line 66162
      } else {
       $n_0_i_i = 0; //@line 66164
      }
      if (($100 | 0) == 0) {
       $n_1_i_i = $n_0_i_i; //@line 66170
      } else {
       $n_1_i_i = $n_0_i_i + 2 + (_strlen($100 | 0) | 0) | 0; //@line 66176
      }
      $110 = HEAP32[$opt + ($i_06_i << 4) + 8 >> 2] | 0; //@line 66180
      if (($110 | 0) == 0) {
       $_0_i_i = $n_1_i_i; //@line 66184
       break;
      }
      $_0_i_i = $n_1_i_i + 1 + (_strlen($110 | 0) | 0) | 0; //@line 66191
     }
    } while (0);
    $w_08_i = $_0_i_i >>> 0 > $w_08_i >>> 0 ? $_0_i_i : $w_08_i; //@line 66196
    $i_06_i = $i_06_i + 1 | 0; //@line 66197
    $93 = HEAP16[$opt + ($i_06_i << 4) >> 1] | 0; //@line 66199
   } while ($93 << 16 >> 16 > -1);
   $w_0_lcssa_i = $w_08_i + 2 | 0; //@line 66209
  }
 } while (0);
 if (($tag | 0) != 0) {
  _printf(51504, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $tag, tempInt) | 0) | 0; //@line 66216
 }
 if (($usage | 0) != 0) {
  _puts($usage | 0) | 0; //@line 66222
 }
 $127 = HEAP16[$1 >> 1] | 0; //@line 66225
 if ($127 << 16 >> 16 <= -1) {
  STACKTOP = sp; //@line 66229
  return;
 }
 $129 = HEAP32[_stdout >> 2] | 0; //@line 66232
 $_015 = $opt;
 $131 = $127;
 do {
  do {
   if ($131 << 16 >> 16 < 256) {
    $134 = $131 << 16 >> 16; //@line 66242
    _printf(36472, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $134, tempInt) | 0) | 0; //@line 66243
    $136 = $_015 + 4 | 0; //@line 66244
    if ((HEAP32[$136 >> 2] | 0) == 0) {
     $n_0_i = 2;
     $_pre_phi_i = $136;
     break;
    }
    _printf(33512, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0) | 0; //@line 66252
    $n_0_i = 4;
    $_pre_phi_i = $136;
   } else {
    _printf(31712, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0) | 0; //@line 66256
    $n_0_i = 0;
    $_pre_phi_i = $_015 + 4 | 0;
   }
  } while (0);
  $144 = HEAP32[$_pre_phi_i >> 2] | 0; //@line 66263
  if (($144 | 0) == 0) {
   $n_1_i = $n_0_i; //@line 66267
  } else {
   _printf(30768, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $144, tempInt) | 0) | 0; //@line 66269
   $n_1_i = $n_0_i + 2 + (_strlen(HEAP32[$_pre_phi_i >> 2] | 0) | 0) | 0; //@line 66275
  }
  $153 = $_015 + 8 | 0; //@line 66278
  $154 = HEAP32[$153 >> 2] | 0; //@line 66279
  if (($154 | 0) == 0) {
   $n_2_ph_i = $n_1_i; //@line 66283
  } else {
   _printf(57944, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $154, tempInt) | 0) | 0; //@line 66285
   $n_2_ph_i = $n_1_i + 1 + (_strlen(HEAP32[$153 >> 2] | 0) | 0) | 0; //@line 66291
  }
  if ($n_2_ph_i >>> 0 < $w_0_lcssa_i >>> 0) {
   $n_216_i = $n_2_ph_i; //@line 66297
   do {
    _fputc(32, $129 | 0) | 0; //@line 66300
    $n_216_i = $n_216_i + 1 | 0; //@line 66301
   } while ($n_216_i >>> 0 < $w_0_lcssa_i >>> 0);
  }
  _puts(HEAP32[$_015 + 12 >> 2] | 0) | 0; //@line 66313
  $_015 = $_015 + 16 | 0; //@line 66314
  $131 = HEAP16[$_015 >> 1] | 0; //@line 66316
 } while ($131 << 16 >> 16 > -1);
 STACKTOP = sp; //@line 66325
 return;
}
function _pce_getopt($argc, $argv, $optarg, $opt) {
 $argc = $argc | 0;
 $argv = $argv | 0;
 $optarg = $optarg | 0;
 $opt = $opt | 0;
 var $_b = 0, $11 = 0, $17 = 0, $20 = 0, $22 = 0, $25 = 0, $26 = 0, $27 = 0, $31 = 0, $32 = 0, $35 = 0, $_05_i = 0, $43 = 0, $57 = 0, $63 = 0, $64 = 0, $76 = 0, $77 = 0, $_05_i34 = 0, $79 = 0, $80 = 0, $91 = 0, $92 = 0, $98 = 0, $99 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 66348
 if (($argc | 0) == 0 & ($argv | 0) == 0) {
  HEAP32[1672] = -1; //@line 66354
  $_0 = 0; //@line 66356
  STACKTOP = sp; //@line 66358
  return $_0 | 0; //@line 66359
 }
 if ((HEAP32[1672] | 0) < 0) {
  HEAP8[6696] = 0; //@line 66365
  HEAP32[1672] = 0; //@line 66366
  HEAP32[1670] = 1; //@line 66367
  HEAP32[15324] = 0; //@line 66368
  $_b = 0; //@line 66370
 } else {
  $_b = HEAP8[6696] | 0; //@line 66374
 }
 if ($_b | ($opt | 0) == 0) {
  $11 = HEAP32[1670] | 0; //@line 66381
  if (($11 | 0) >= ($argc | 0)) {
   $_0 = -1; //@line 66385
   STACKTOP = sp; //@line 66387
   return $_0 | 0; //@line 66388
  }
  HEAP32[1672] = $11; //@line 66390
  HEAP32[1670] = $11 + 1; //@line 66392
  HEAP32[$optarg >> 2] = $argv + ($11 << 2); //@line 66394
  $_0 = 0; //@line 66396
  STACKTOP = sp; //@line 66398
  return $_0 | 0; //@line 66399
 }
 $17 = HEAP32[15324] | 0; //@line 66401
 if (($17 | 0) == 0) {
  label = 17597; //@line 66405
 } else {
  $20 = HEAP8[$17] | 0; //@line 66407
  if ($20 << 24 >> 24 == 0) {
   label = 17597; //@line 66411
  } else {
   $76 = $20; //@line 66413
  }
 }
 L22806 : do {
  if ((label | 0) == 17597) {
   $22 = HEAP32[1670] | 0; //@line 66418
   if (($22 | 0) >= ($argc | 0)) {
    $_0 = -1; //@line 66422
    STACKTOP = sp; //@line 66424
    return $_0 | 0; //@line 66425
   }
   HEAP32[1672] = $22; //@line 66427
   $25 = $22 + 1 | 0; //@line 66428
   HEAP32[1670] = $25; //@line 66429
   $26 = $argv + ($22 << 2) | 0; //@line 66430
   $27 = HEAP32[$26 >> 2] | 0; //@line 66431
   HEAP32[15324] = $27; //@line 66432
   do {
    if ((HEAP8[$27] | 0) == 45) {
     $31 = $27 + 1 | 0; //@line 66438
     $32 = HEAP8[$31] | 0; //@line 66439
     if (($32 << 24 >> 24 | 0) == 0) {
      break;
     } else if (($32 << 24 >> 24 | 0) != 45) {
      HEAP32[15324] = $31; //@line 66443
      $76 = HEAP8[$31] | 0; //@line 66446
      break L22806;
     }
     $35 = $27 + 2 | 0; //@line 66449
     if ((HEAP8[$35] | 0) == 0) {
      HEAP8[6696] = 1; //@line 66454
      if (($25 | 0) >= ($argc | 0)) {
       $_0 = -1; //@line 66458
       STACKTOP = sp; //@line 66460
       return $_0 | 0; //@line 66461
      }
      HEAP32[1672] = $25; //@line 66463
      HEAP32[1670] = $22 + 2; //@line 66465
      HEAP32[$optarg >> 2] = $argv + ($25 << 2); //@line 66467
      $_0 = 0; //@line 66469
      STACKTOP = sp; //@line 66471
      return $_0 | 0; //@line 66472
     } else {
      $_05_i = $opt; //@line 66474
     }
     while (1) {
      $43 = $_05_i | 0; //@line 66478
      if ((HEAP16[$43 >> 1] | 0) <= -1) {
       break;
      }
      if ((_strcmp(HEAP32[$_05_i + 4 >> 2] | 0, $35 | 0) | 0) == 0) {
       label = 17606; //@line 66492
       break;
      } else {
       $_05_i = $_05_i + 16 | 0; //@line 66495
      }
     }
     do {
      if ((label | 0) == 17606) {
       if (($_05_i | 0) == 0) {
        break;
       }
       $57 = $_05_i + 2 | 0; //@line 66505
       if (((HEAPU16[$57 >> 1] | 0) + $25 | 0) > ($argc | 0)) {
        $63 = HEAP32[_stderr >> 2] | 0; //@line 66512
        $64 = HEAP32[$argv >> 2] | 0; //@line 66513
        _fprintf($63 | 0, 45944, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $64, HEAP32[tempInt + 8 >> 2] = $27, tempInt) | 0) | 0; //@line 66514
        $_0 = -3; //@line 66516
        STACKTOP = sp; //@line 66518
        return $_0 | 0; //@line 66519
       } else {
        HEAP32[$optarg >> 2] = $argv + ($25 << 2); //@line 66522
        HEAP32[1670] = (HEAP32[1670] | 0) + (HEAPU16[$57 >> 1] | 0); //@line 66527
        HEAP32[15324] = 0; //@line 66528
        $_0 = HEAP16[$43 >> 1] | 0; //@line 66532
        STACKTOP = sp; //@line 66534
        return $_0 | 0; //@line 66535
       }
      }
     } while (0);
     _fprintf(HEAP32[_stderr >> 2] | 0, 49752, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = HEAP32[$argv >> 2], HEAP32[tempInt + 8 >> 2] = $27, tempInt) | 0) | 0; //@line 66541
     $_0 = -2; //@line 66543
     STACKTOP = sp; //@line 66545
     return $_0 | 0; //@line 66546
    }
   } while (0);
   HEAP32[$optarg >> 2] = $26; //@line 66549
   HEAP32[15324] = 0; //@line 66550
   $_0 = 0; //@line 66552
   STACKTOP = sp; //@line 66554
   return $_0 | 0; //@line 66555
  }
 } while (0);
 $77 = $76 << 24 >> 24; //@line 66559
 $_05_i34 = $opt; //@line 66561
 while (1) {
  $79 = $_05_i34 | 0; //@line 66564
  $80 = HEAP16[$79 >> 1] | 0; //@line 66565
  if ($80 << 16 >> 16 <= -1) {
   break;
  }
  if (($80 << 16 >> 16 | 0) == ($77 | 0)) {
   label = 17615; //@line 66576
   break;
  } else {
   $_05_i34 = $_05_i34 + 16 | 0; //@line 66579
  }
 }
 do {
  if ((label | 0) == 17615) {
   if (($_05_i34 | 0) == 0) {
    break;
   }
   $91 = HEAP32[1670] | 0; //@line 66589
   $92 = $_05_i34 + 2 | 0; //@line 66590
   if (((HEAPU16[$92 >> 1] | 0) + $91 | 0) > ($argc | 0)) {
    $98 = HEAP32[_stderr >> 2] | 0; //@line 66597
    $99 = HEAP32[$argv >> 2] | 0; //@line 66598
    _fprintf($98 | 0, 39392, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $99, HEAP32[tempInt + 8 >> 2] = $77, tempInt) | 0) | 0; //@line 66599
    $_0 = -3; //@line 66601
    STACKTOP = sp; //@line 66603
    return $_0 | 0; //@line 66604
   } else {
    HEAP32[$optarg >> 2] = $argv + ($91 << 2); //@line 66607
    HEAP32[1670] = (HEAP32[1670] | 0) + (HEAPU16[$92 >> 1] | 0); //@line 66612
    HEAP32[15324] = (HEAP32[15324] | 0) + 1; //@line 66615
    $_0 = HEAP16[$79 >> 1] | 0; //@line 66619
    STACKTOP = sp; //@line 66621
    return $_0 | 0; //@line 66622
   }
  }
 } while (0);
 _fprintf(HEAP32[_stderr >> 2] | 0, 42480, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = HEAP32[$argv >> 2], HEAP32[tempInt + 8 >> 2] = $77, tempInt) | 0) | 0; //@line 66628
 $_0 = -2; //@line 66630
 STACKTOP = sp; //@line 66632
 return $_0 | 0; //@line 66633
}
function _dsk_insert($dsks, $str, $eject) {
 $dsks = $dsks | 0;
 $str = $str | 0;
 $eject = $eject | 0;
 var $buf = 0, $1 = 0, $6 = 0, $i_032_lcssa33_ph = 0, $i_0323537 = 0, $13 = 0, $15 = 0, $16 = 0, $21 = 0, $_0 = 0, $32 = 0, $36 = 0, $40 = 0, $44 = 0, $48 = 0, $52 = 0, $56 = 0, $60 = 0, $64 = 0, $68 = 0, $72 = 0, $76 = 0, $80 = 0, $84 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 66651
 STACKTOP = STACKTOP + 16 | 0; //@line 66651
 $buf = sp | 0; //@line 66652
 $1 = HEAP8[$str] | 0; //@line 66653
 if (($1 << 24 >> 24 | 0) == 58) {
  HEAP8[$buf | 0] = 0; //@line 66656
  $_0 = 1; //@line 66658
  STACKTOP = sp; //@line 66660
  return $_0 | 0; //@line 66661
 } else if (($1 << 24 >> 24 | 0) == 0) {
  $_0 = 1; //@line 66663
  STACKTOP = sp; //@line 66665
  return $_0 | 0; //@line 66666
 } else {
  HEAP8[$buf | 0] = $1; //@line 66669
  $6 = HEAP8[$str + 1 | 0] | 0; //@line 66671
  do {
   if (($6 << 24 >> 24 | 0) == 58) {
    $i_032_lcssa33_ph = 1; //@line 66674
    label = 17637; //@line 66675
   } else if (($6 << 24 >> 24 | 0) == 0) {
    $i_0323537 = 1; //@line 66677
   } else {
    HEAP8[$buf + 1 | 0] = $6; //@line 66680
    $32 = HEAP8[$str + 2 | 0] | 0; //@line 66682
    if (($32 << 24 >> 24 | 0) == 58) {
     $i_032_lcssa33_ph = 2; //@line 66684
     label = 17637; //@line 66685
     break;
    } else if (($32 << 24 >> 24 | 0) == 0) {
     $i_0323537 = 2; //@line 66688
     break;
    }
    HEAP8[$buf + 2 | 0] = $32; //@line 66692
    $36 = HEAP8[$str + 3 | 0] | 0; //@line 66694
    if (($36 << 24 >> 24 | 0) == 58) {
     $i_032_lcssa33_ph = 3; //@line 66696
     label = 17637; //@line 66697
     break;
    } else if (($36 << 24 >> 24 | 0) == 0) {
     $i_0323537 = 3; //@line 66700
     break;
    }
    HEAP8[$buf + 3 | 0] = $36; //@line 66704
    $40 = HEAP8[$str + 4 | 0] | 0; //@line 66706
    if (($40 << 24 >> 24 | 0) == 58) {
     $i_032_lcssa33_ph = 4; //@line 66708
     label = 17637; //@line 66709
     break;
    } else if (($40 << 24 >> 24 | 0) == 0) {
     $i_0323537 = 4; //@line 66712
     break;
    }
    HEAP8[$buf + 4 | 0] = $40; //@line 66716
    $44 = HEAP8[$str + 5 | 0] | 0; //@line 66718
    if (($44 << 24 >> 24 | 0) == 58) {
     $i_032_lcssa33_ph = 5; //@line 66720
     label = 17637; //@line 66721
     break;
    } else if (($44 << 24 >> 24 | 0) == 0) {
     $i_0323537 = 5; //@line 66724
     break;
    }
    HEAP8[$buf + 5 | 0] = $44; //@line 66728
    $48 = HEAP8[$str + 6 | 0] | 0; //@line 66730
    if (($48 << 24 >> 24 | 0) == 58) {
     $i_032_lcssa33_ph = 6; //@line 66732
     label = 17637; //@line 66733
     break;
    } else if (($48 << 24 >> 24 | 0) == 0) {
     $i_0323537 = 6; //@line 66736
     break;
    }
    HEAP8[$buf + 6 | 0] = $48; //@line 66740
    $52 = HEAP8[$str + 7 | 0] | 0; //@line 66742
    if (($52 << 24 >> 24 | 0) == 58) {
     $i_032_lcssa33_ph = 7; //@line 66744
     label = 17637; //@line 66745
     break;
    } else if (($52 << 24 >> 24 | 0) == 0) {
     $i_0323537 = 7; //@line 66748
     break;
    }
    HEAP8[$buf + 7 | 0] = $52; //@line 66752
    $56 = HEAP8[$str + 8 | 0] | 0; //@line 66754
    if (($56 << 24 >> 24 | 0) == 58) {
     $i_032_lcssa33_ph = 8; //@line 66756
     label = 17637; //@line 66757
     break;
    } else if (($56 << 24 >> 24 | 0) == 0) {
     $i_0323537 = 8; //@line 66760
     break;
    }
    HEAP8[$buf + 8 | 0] = $56; //@line 66764
    $60 = HEAP8[$str + 9 | 0] | 0; //@line 66766
    if (($60 << 24 >> 24 | 0) == 58) {
     $i_032_lcssa33_ph = 9; //@line 66768
     label = 17637; //@line 66769
     break;
    } else if (($60 << 24 >> 24 | 0) == 0) {
     $i_0323537 = 9; //@line 66772
     break;
    }
    HEAP8[$buf + 9 | 0] = $60; //@line 66776
    $64 = HEAP8[$str + 10 | 0] | 0; //@line 66778
    if (($64 << 24 >> 24 | 0) == 58) {
     $i_032_lcssa33_ph = 10; //@line 66780
     label = 17637; //@line 66781
     break;
    } else if (($64 << 24 >> 24 | 0) == 0) {
     $i_0323537 = 10; //@line 66784
     break;
    }
    HEAP8[$buf + 10 | 0] = $64; //@line 66788
    $68 = HEAP8[$str + 11 | 0] | 0; //@line 66790
    if (($68 << 24 >> 24 | 0) == 58) {
     $i_032_lcssa33_ph = 11; //@line 66792
     label = 17637; //@line 66793
     break;
    } else if (($68 << 24 >> 24 | 0) == 0) {
     $i_0323537 = 11; //@line 66796
     break;
    }
    HEAP8[$buf + 11 | 0] = $68; //@line 66800
    $72 = HEAP8[$str + 12 | 0] | 0; //@line 66802
    if (($72 << 24 >> 24 | 0) == 58) {
     $i_032_lcssa33_ph = 12; //@line 66804
     label = 17637; //@line 66805
     break;
    } else if (($72 << 24 >> 24 | 0) == 0) {
     $i_0323537 = 12; //@line 66808
     break;
    }
    HEAP8[$buf + 12 | 0] = $72; //@line 66812
    $76 = HEAP8[$str + 13 | 0] | 0; //@line 66814
    if (($76 << 24 >> 24 | 0) == 58) {
     $i_032_lcssa33_ph = 13; //@line 66816
     label = 17637; //@line 66817
     break;
    } else if (($76 << 24 >> 24 | 0) == 0) {
     $i_0323537 = 13; //@line 66820
     break;
    }
    HEAP8[$buf + 13 | 0] = $76; //@line 66824
    $80 = HEAP8[$str + 14 | 0] | 0; //@line 66826
    if (($80 << 24 >> 24 | 0) == 58) {
     $i_032_lcssa33_ph = 14; //@line 66828
     label = 17637; //@line 66829
     break;
    } else if (($80 << 24 >> 24 | 0) == 0) {
     $i_0323537 = 14; //@line 66832
     break;
    }
    HEAP8[$buf + 14 | 0] = $80; //@line 66836
    $84 = HEAP8[$str + 15 | 0] | 0; //@line 66838
    if (($84 << 24 >> 24 | 0) == 58) {
     $i_032_lcssa33_ph = 15; //@line 66840
     label = 17637; //@line 66841
     break;
    } else if (($84 << 24 >> 24 | 0) == 0) {
     $i_0323537 = 15; //@line 66844
     break;
    }
    HEAP8[$buf + 15 | 0] = $84; //@line 66848
    $_0 = 1; //@line 66849
    STACKTOP = sp; //@line 66851
    return $_0 | 0; //@line 66852
   }
  } while (0);
  if ((label | 0) == 17637) {
   HEAP8[$buf + $i_032_lcssa33_ph | 0] = 0; //@line 66858
   $i_0323537 = $i_032_lcssa33_ph; //@line 66860
  }
  if ((HEAP8[$str + $i_0323537 | 0] | 0) == 0) {
   $_0 = 1; //@line 66868
   STACKTOP = sp; //@line 66870
   return $_0 | 0; //@line 66871
  }
  $13 = _strtoul($buf | 0, 0, 0) | 0; //@line 66874
  $15 = _pce_path_get($str + ($i_0323537 + 1) | 0) | 0; //@line 66877
  $16 = _dsk_auto_open($15, 0, 0, 0) | 0; //@line 66880
  _free($15); //@line 66882
  if (($16 | 0) == 0) {
   $_0 = 1; //@line 66885
   STACKTOP = sp; //@line 66887
   return $_0 | 0; //@line 66888
  }
  _dsk_set_drive($16, $13); //@line 66890
  do {
   if (($eject | 0) != 0) {
    $21 = _dsks_get_disk($dsks, $13) | 0; //@line 66895
    if (($21 | 0) == 0) {
     break;
    }
    _dsks_rmv_disk($dsks, $21) | 0; //@line 66901
    _dsk_del($21); //@line 66902
   }
  } while (0);
  if ((_dsks_add_disk($dsks, $16) | 0) == 0) {
   $_0 = 0; //@line 66910
   STACKTOP = sp; //@line 66912
   return $_0 | 0; //@line 66913
  }
  _dsk_del($16); //@line 66915
  $_0 = 1; //@line 66917
  STACKTOP = sp; //@line 66919
  return $_0 | 0; //@line 66920
 }
 return 0;
}
function _ini_get_cow($sct, $dsk) {
 $sct = $sct | 0;
 $dsk = $dsk | 0;
 var $1 = 0, $3 = 0, $_01621 = 0, $4 = 0, $8 = 0, $11 = 0, $14 = 0, $cow_017 = 0, $15 = 0, $16 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 66931
 $1 = _ini_next_val($sct, 0, 51456) | 0; //@line 66932
 if (($1 | 0) == 0) {
  $_0 = $dsk; //@line 66936
  STACKTOP = sp; //@line 66938
  return $_0 | 0; //@line 66939
 } else {
  $_01621 = $dsk;
  $3 = $1;
 }
 while (1) {
  $4 = _ini_val_get_str($3) | 0; //@line 66946
  if (($4 | 0) == 0) {
   label = 17670; //@line 66950
   break;
  }
  $8 = _dsk_qed_cow_new($_01621, $4) | 0; //@line 66953
  if (($8 | 0) == 0) {
   $11 = _dsk_cow_new($_01621, $4) | 0; //@line 66957
   if (($11 | 0) == 0) {
    label = 17673; //@line 66961
    break;
   } else {
    $cow_017 = $11; //@line 66964
   }
  } else {
   $cow_017 = $8; //@line 66967
  }
  _dsk_set_readonly($cow_017, 0); //@line 66970
  $15 = _dsk_get_drive($cow_017) | 0; //@line 66971
  _pce_log_tag(2, 56224, 45896, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $15, HEAP32[tempInt + 8 >> 2] = $4, tempInt) | 0); //@line 66972
  $16 = _ini_next_val($sct, $3, 51456) | 0; //@line 66973
  if (($16 | 0) == 0) {
   $_0 = $cow_017; //@line 66977
   label = 17677; //@line 66978
   break;
  } else {
   $_01621 = $cow_017;
   $3 = $16;
  }
 }
 if ((label | 0) == 17670) {
  _dsk_del($_01621); //@line 66985
  $_0 = 0; //@line 66987
  STACKTOP = sp; //@line 66989
  return $_0 | 0; //@line 66990
 } else if ((label | 0) == 17673) {
  $14 = _dsk_get_drive($_01621) | 0; //@line 66993
  _pce_log_tag(0, 56224, 49712, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $14, HEAP32[tempInt + 8 >> 2] = $4, tempInt) | 0); //@line 66994
  _dsk_del($_01621); //@line 66995
  $_0 = 0; //@line 66997
  STACKTOP = sp; //@line 66999
  return $_0 | 0; //@line 67000
 } else if ((label | 0) == 17677) {
  STACKTOP = sp; //@line 67004
  return $_0 | 0; //@line 67005
 }
 return 0;
}
function _ini_get_disk($sct, $ret) {
 $sct = $sct | 0;
 $ret = $ret | 0;
 var $vc_i = 0, $vh_i = 0, $vs_i = 0, $1 = 0, $start_i = 0, $blk_i_i = 0, $blk_n_i = 0, $fname_i = 0, $drive = 0, $c = 0, $h = 0, $s = 0, $n = 0, $ofs = 0, $ro = 0, $optional = 0, $type = 0, $val_0_ph = 0, $path_0_ph = 0, $val_0 = 0, $47 = 0, $50 = 0, $53 = 0, $57 = 0, $97 = 0, $98 = 0, $99 = 0, $100 = 0, $101 = 0, $p_0_i = 0, $103 = 0, $111 = 0, $115 = 0, $122 = 0, $dsk_1 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $209 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $220 = 0, $227 = 0, $232 = 0, $233 = 0, $238 = 0, $239 = 0, $244 = 0, $257 = 0, $259 = 0, $261 = 0, $263 = 0, $264 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 67043
 STACKTOP = STACKTOP + 136 | 0; //@line 67043
 $vc_i = sp | 0; //@line 67044
 $vh_i = sp + 8 | 0; //@line 67045
 $vs_i = sp + 16 | 0; //@line 67046
 $1 = sp + 24 | 0; //@line 67047
 $start_i = sp + 32 | 0; //@line 67048
 $blk_i_i = sp + 40 | 0; //@line 67049
 $blk_n_i = sp + 48 | 0; //@line 67050
 $fname_i = sp + 56 | 0; //@line 67051
 $drive = sp + 64 | 0; //@line 67052
 $c = sp + 72 | 0; //@line 67053
 $h = sp + 80 | 0; //@line 67054
 $s = sp + 88 | 0; //@line 67055
 $n = sp + 96 | 0; //@line 67056
 $ofs = sp + 104 | 0; //@line 67057
 $ro = sp + 112 | 0; //@line 67058
 $optional = sp + 120 | 0; //@line 67059
 $type = sp + 128 | 0; //@line 67060
 _ini_get_uint16($sct, 42448, $drive, 0) | 0; //@line 67061
 _ini_get_string($sct, 39384, $type, 36464) | 0; //@line 67062
 _ini_get_uint32($sct, 33504, $ofs, 0) | 0; //@line 67063
 _ini_get_uint32($sct, 31704, $c, 0) | 0; //@line 67064
 _ini_get_uint32($sct, 30760, $h, 0) | 0; //@line 67065
 _ini_get_uint32($sct, 57936, $s, 0) | 0; //@line 67066
 do {
  if ((_ini_get_uint32($sct, 57144, $n, 0) | 0) != 0) {
   if ((_ini_get_uint32($sct, 55952, $n, 0) | 0) == 0) {
    HEAP32[$n >> 2] = HEAP32[$n >> 2] & -512; //@line 67078
    break;
   }
   if ((_ini_get_uint32($sct, 55264, $n, 0) | 0) == 0) {
    HEAP32[$n >> 2] = HEAP32[$n >> 2] << 1; //@line 67088
    break;
   }
   if ((_ini_get_uint32($sct, 54600, $n, 0) | 0) == 0) {
    HEAP32[$n >> 2] = HEAP32[$n >> 2] << 11; //@line 67098
    break;
   }
   if ((_ini_get_uint32($sct, 53904, $n, 0) | 0) == 0) {
    HEAP32[$n >> 2] = HEAP32[$n >> 2] << 21; //@line 67108
    break;
   } else {
    HEAP32[$n >> 2] = 0; //@line 67112
    break;
   }
  }
 } while (0);
 _ini_get_bool($sct, 53296, $ro, 0) | 0; //@line 67117
 _ini_get_bool($sct, 52464, $optional, 0) | 0; //@line 67118
 $path_0_ph = 0;
 $val_0_ph = 0;
 L22922 : while (1) {
  $val_0 = $val_0_ph; //@line 67129
  do {
   $val_0 = _ini_next_val($sct, $val_0, 51832) | 0; //@line 67132
   if (($val_0 | 0) == 0) {
    label = 17734; //@line 67136
    break L22922;
   }
   $47 = _ini_val_get_str($val_0) | 0; //@line 67139
  } while (($47 | 0) == 0);
  _free($path_0_ph); //@line 67148
  $50 = _pce_path_get($47) | 0; //@line 67149
  if (($50 | 0) == 0) {
   $path_0_ph = 0;
   $val_0_ph = $val_0;
   continue;
  }
  $53 = _fopen($50 | 0, 51304) | 0; //@line 67156
  if (($53 | 0) == 0) {
   $path_0_ph = $50;
   $val_0_ph = $val_0;
   continue;
  }
  _fclose($53 | 0) | 0; //@line 67163
  $57 = HEAP32[$type >> 2] | 0; //@line 67164
  L22930 : do {
   if ((_strcmp($57 | 0, 50800) | 0) == 0) {
    $dsk_1 = _dsk_ram_open($50, HEAP32[$n >> 2] | 0, HEAP32[$c >> 2] | 0, HEAP32[$h >> 2] | 0, HEAP32[$s >> 2] | 0, HEAP32[$ro >> 2] | 0) | 0; //@line 67177
   } else {
    if ((_strcmp($57 | 0, 50472) | 0) == 0) {
     $dsk_1 = _dsk_img_open($50, HEAP32[$ofs >> 2] | 0, 0, HEAP32[$ro >> 2] | 0) | 0; //@line 67189
     break;
    }
    if ((_strcmp($57 | 0, 49520) | 0) == 0) {
     $dsk_1 = _dsk_dosemu_open($50, HEAP32[$ro >> 2] | 0) | 0; //@line 67199
     break;
    }
    if ((_strcmp($57 | 0, 49056) | 0) == 0) {
     $dsk_1 = _dsk_pce_open($50, HEAP32[$ro >> 2] | 0) | 0; //@line 67209
     break;
    }
    if ((_strcmp($57 | 0, 48664) | 0) == 0) {
     $dsk_1 = _dsk_qed_open($50, HEAP32[$ro >> 2] | 0) | 0; //@line 67219
     break;
    }
    if ((_strcmp($57 | 0, 48264) | 0) == 0) {
     $97 = HEAP32[$c >> 2] | 0; //@line 67226
     $98 = HEAP32[$h >> 2] | 0; //@line 67227
     $99 = HEAP32[$s >> 2] | 0; //@line 67228
     $100 = HEAP32[$ro >> 2] | 0; //@line 67229
     HEAP32[$1 >> 2] = $100; //@line 67230
     $101 = _dsk_part_open($97, $98, $99, $100) | 0; //@line 67231
     if (($101 | 0) == 0) {
      $path_0_ph = $50;
      $val_0_ph = $val_0;
      continue L22922;
     } else {
      $p_0_i = 0; //@line 67238
     }
     while (1) {
      $103 = _ini_next_sct($sct, $p_0_i, 48264) | 0; //@line 67242
      if (($103 | 0) == 0) {
       $dsk_1 = $101; //@line 67246
       break L22930;
      }
      _ini_get_uint32($103, 33504, $start_i, 0) | 0; //@line 67249
      _ini_get_uint32($103, 41e3, $blk_i_i, 0) | 0; //@line 67250
      _ini_get_uint32($103, 40768, $blk_n_i, 0) | 0; //@line 67251
      _ini_get_string($103, 51832, $fname_i, 0) | 0; //@line 67252
      _ini_get_bool($103, 53296, $1, 0) | 0; //@line 67253
      $111 = HEAP32[$fname_i >> 2] | 0; //@line 67254
      if (($111 | 0) == 0) {
       label = 17710; //@line 67258
       break;
      }
      $115 = _pce_path_get($111) | 0; //@line 67261
      $122 = (_dsk_part_add_partition($101, $115, HEAP32[$start_i >> 2] | 0, 0, HEAP32[$blk_i_i >> 2] | 0, HEAP32[$blk_n_i >> 2] | 0, HEAP32[$1 >> 2] | 0) | 0) == 0; //@line 67269
      _free($115); //@line 67270
      if ($122) {
       $p_0_i = $103; //@line 67273
      } else {
       label = 17712; //@line 67275
       break;
      }
     }
     if ((label | 0) == 17710) {
      label = 0; //@line 67280
      _dsk_del($101); //@line 67281
      $path_0_ph = $50;
      $val_0_ph = $val_0;
      continue L22922;
     } else if ((label | 0) == 17712) {
      label = 0; //@line 67287
      _dsk_del($101); //@line 67288
      $path_0_ph = $50;
      $val_0_ph = $val_0;
      continue L22922;
     }
    }
    if ((_strcmp($57 | 0, 47888) | 0) == 0) {
     $dsk_1 = _dsk_psi_open($50, 1, HEAP32[$ro >> 2] | 0) | 0; //@line 67301
     break;
    }
    if ((_strcmp($57 | 0, 47584) | 0) == 0) {
     $dsk_1 = _dsk_psi_open($50, 2, HEAP32[$ro >> 2] | 0) | 0; //@line 67311
     break;
    }
    if ((_strcmp($57 | 0, 47296) | 0) == 0) {
     $dsk_1 = _dsk_psi_open($50, 3, HEAP32[$ro >> 2] | 0) | 0; //@line 67321
     break;
    }
    if ((_strcmp($57 | 0, 47008) | 0) == 0) {
     $dsk_1 = _dsk_psi_open($50, 4, HEAP32[$ro >> 2] | 0) | 0; //@line 67331
     break;
    }
    if ((_strcmp($57 | 0, 46712) | 0) == 0) {
     $dsk_1 = _dsk_psi_open($50, 4, HEAP32[$ro >> 2] | 0) | 0; //@line 67341
     break;
    }
    if ((_strcmp($57 | 0, 46456) | 0) == 0) {
     $dsk_1 = _dsk_psi_open($50, 6, HEAP32[$ro >> 2] | 0) | 0; //@line 67351
     break;
    }
    if ((_strcmp($57 | 0, 45744) | 0) == 0) {
     $dsk_1 = _dsk_psi_open($50, 0, HEAP32[$ro >> 2] | 0) | 0; //@line 67361
     break;
    }
    if ((_strcmp($57 | 0, 45440) | 0) == 0) {
     $dsk_1 = _dsk_psi_open($50, 11, HEAP32[$ro >> 2] | 0) | 0; //@line 67371
     break;
    }
    if ((_strcmp($57 | 0, 45096) | 0) == 0) {
     $dsk_1 = _dsk_psi_open($50, 16, HEAP32[$ro >> 2] | 0) | 0; //@line 67381
     break;
    }
    if ((_strcmp($57 | 0, 36464) | 0) != 0) {
     $path_0_ph = $50;
     $val_0_ph = $val_0;
     continue L22922;
    }
    $dsk_1 = _dsk_auto_open($50, HEAP32[$ofs >> 2] | 0, 0, HEAP32[$ro >> 2] | 0) | 0; //@line 67397
   }
  } while (0);
  if (($dsk_1 | 0) == 0) {
   $path_0_ph = $50;
   $val_0_ph = $val_0;
  } else {
   break;
  }
 }
 if ((label | 0) == 17734) {
  HEAP32[$ret >> 2] = 0; //@line 67410
  _free($path_0_ph); //@line 67411
  if ((HEAP32[$optional >> 2] | 0) != 0) {
   $_0 = 0; //@line 67416
   STACKTOP = sp; //@line 67418
   return $_0 | 0; //@line 67419
  }
  _pce_log(0, 44752, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP32[$drive >> 2], tempInt) | 0); //@line 67422
  $_0 = 1; //@line 67424
  STACKTOP = sp; //@line 67426
  return $_0 | 0; //@line 67427
 }
 _dsk_set_drive($dsk_1, HEAP32[$drive >> 2] | 0); //@line 67430
 do {
  if ((HEAP32[$c >> 2] | 0) == 0) {
   if ((HEAP32[$h >> 2] | 0) != 0) {
    label = 17739; //@line 67440
    break;
   }
   if ((HEAP32[$s >> 2] | 0) != 0) {
    label = 17739; //@line 67447
   }
  } else {
   label = 17739; //@line 67450
  }
 } while (0);
 if ((label | 0) == 17739) {
  $202 = _dsk_get_block_cnt($dsk_1) | 0; //@line 67454
  $203 = HEAP32[$c >> 2] | 0; //@line 67455
  $204 = HEAP32[$h >> 2] | 0; //@line 67456
  $205 = HEAP32[$s >> 2] | 0; //@line 67457
  _dsk_set_geometry($dsk_1, $202, $203, $204, $205) | 0; //@line 67458
 }
 $209 = HEAP32[$type >> 2] | 0; //@line 67462
 $211 = HEAP32[$dsk_1 + 28 >> 2] | 0; //@line 67464
 $212 = $dsk_1 + 32 | 0; //@line 67465
 $213 = HEAP32[$212 >> 2] | 0; //@line 67466
 $214 = $dsk_1 + 36 | 0; //@line 67467
 $215 = HEAP32[$214 >> 2] | 0; //@line 67468
 $216 = $dsk_1 + 40 | 0; //@line 67469
 $217 = HEAP32[$216 >> 2] | 0; //@line 67470
 $220 = (HEAP32[$ro >> 2] | 0) != 0 ? 44128 : 43808; //@line 67473
 _pce_log_tag(2, 56224, 44384, (tempInt = STACKTOP, STACKTOP = STACKTOP + 64 | 0, HEAP32[tempInt >> 2] = HEAP32[$drive >> 2], HEAP32[tempInt + 8 >> 2] = $209, HEAP32[tempInt + 16 >> 2] = $211, HEAP32[tempInt + 24 >> 2] = $213, HEAP32[tempInt + 32 >> 2] = $215, HEAP32[tempInt + 40 >> 2] = $217, HEAP32[tempInt + 48 >> 2] = $220, HEAP32[tempInt + 56 >> 2] = $50, tempInt) | 0); //@line 67474
 _free($50); //@line 67475
 _ini_get_uint32($sct, 42280, $vc_i, 0) | 0; //@line 67479
 _ini_get_uint32($sct, 41944, $vh_i, 0) | 0; //@line 67480
 _ini_get_uint32($sct, 41568, $vs_i, 0) | 0; //@line 67481
 $227 = HEAP32[$vc_i >> 2] | 0; //@line 67482
 if (($227 | 0) == 0) {
  $232 = HEAP32[$212 >> 2] | 0; //@line 67488
 } else {
  $232 = $227; //@line 67490
 }
 HEAP32[$vc_i >> 2] = $232; //@line 67493
 $233 = HEAP32[$vh_i >> 2] | 0; //@line 67494
 if (($233 | 0) == 0) {
  $238 = HEAP32[$214 >> 2] | 0; //@line 67500
 } else {
  $238 = $233; //@line 67502
 }
 HEAP32[$vh_i >> 2] = $238; //@line 67505
 $239 = HEAP32[$vs_i >> 2] | 0; //@line 67506
 if (($239 | 0) == 0) {
  $244 = HEAP32[$216 >> 2] | 0; //@line 67512
 } else {
  $244 = $239; //@line 67514
 }
 HEAP32[$vs_i >> 2] = $244; //@line 67517
 _dsk_set_visible_chs($dsk_1, $232, $238, $244); //@line 67518
 do {
  if ((HEAP32[$212 >> 2] | 0) == (HEAP32[$vc_i >> 2] | 0)) {
   if ((HEAP32[$214 >> 2] | 0) != (HEAP32[$vh_i >> 2] | 0)) {
    label = 17749; //@line 67530
    break;
   }
   if ((HEAP32[$216 >> 2] | 0) != (HEAP32[$vs_i >> 2] | 0)) {
    label = 17749; //@line 67538
   }
  } else {
   label = 17749; //@line 67541
  }
 } while (0);
 if ((label | 0) == 17749) {
  $257 = _dsk_get_drive($dsk_1) | 0; //@line 67545
  $259 = HEAP32[$dsk_1 + 44 >> 2] | 0; //@line 67547
  $261 = HEAP32[$dsk_1 + 48 >> 2] | 0; //@line 67549
  $263 = HEAP32[$dsk_1 + 52 >> 2] | 0; //@line 67551
  _pce_log_tag(2, 56224, 41232, (tempInt = STACKTOP, STACKTOP = STACKTOP + 32 | 0, HEAP32[tempInt >> 2] = $257, HEAP32[tempInt + 8 >> 2] = $259, HEAP32[tempInt + 16 >> 2] = $261, HEAP32[tempInt + 24 >> 2] = $263, tempInt) | 0); //@line 67552
 }
 $264 = _ini_get_cow($sct, $dsk_1) | 0; //@line 67555
 if (($264 | 0) != 0) {
  HEAP32[$ret >> 2] = $264; //@line 67559
  $_0 = 0; //@line 67561
  STACKTOP = sp; //@line 67563
  return $_0 | 0; //@line 67564
 }
 HEAP32[$ret >> 2] = 0; //@line 67566
 if ((HEAP32[$optional >> 2] | 0) != 0) {
  $_0 = 0; //@line 67571
  STACKTOP = sp; //@line 67573
  return $_0 | 0; //@line 67574
 }
 _pce_log(0, 43184, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP32[$drive >> 2], tempInt) | 0); //@line 67577
 $_0 = 1; //@line 67579
 STACKTOP = sp; //@line 67581
 return $_0 | 0; //@line 67582
}
function _ini_get_disks($ini) {
 $ini = $ini | 0;
 var $dsk = 0, $drive = 0, $1 = 0, $2 = 0, $4 = 0, $11 = 0, $12 = 0, sp = 0;
 sp = STACKTOP; //@line 67592
 STACKTOP = STACKTOP + 16 | 0; //@line 67592
 $dsk = sp | 0; //@line 67593
 $drive = sp + 8 | 0; //@line 67594
 $1 = _dsks_new() | 0; //@line 67595
 $2 = _ini_next_sct($ini, 0, 42920) | 0; //@line 67596
 if (($2 | 0) == 0) {
  STACKTOP = sp; //@line 67600
  return $1 | 0; //@line 67601
 } else {
  $4 = $2; //@line 67603
 }
 do {
  _ini_get_uint16($4, 42448, $drive, 0) | 0; //@line 67607
  do {
   if ((_dsks_get_disk($1, HEAP32[$drive >> 2] | 0) | 0) == 0) {
    $11 = (_ini_get_disk($4, $dsk) | 0) == 0; //@line 67615
    $12 = HEAP32[$dsk >> 2] | 0; //@line 67616
    if (!($11 & ($12 | 0) != 0)) {
     break;
    }
    _dsks_add_disk($1, $12) | 0; //@line 67623
   }
  } while (0);
  $4 = _ini_next_sct($ini, $4, 42920) | 0; //@line 67627
 } while (($4 | 0) != 0);
 STACKTOP = sp; //@line 67636
 return $1 | 0; //@line 67637
}
function _ini_get_ram($mem, $ini, $addr0) {
 $mem = $mem | 0;
 $ini = $ini | 0;
 $addr0 = $addr0 | 0;
 var $fname = 0, $val = 0, $base = 0, $size = 0, $1 = 0, $3 = 0, $5 = 0, $28 = 0, $30 = 0, $31 = 0, $35 = 0, $48 = 0, $50 = 0, $73 = 0, $75 = 0, $76 = 0, $80 = 0, $_lcssa = 0, $_lcssa26 = 0, $89 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 67656
 STACKTOP = STACKTOP + 32 | 0; //@line 67656
 $fname = sp | 0; //@line 67657
 $val = sp + 8 | 0; //@line 67658
 $base = sp + 16 | 0; //@line 67659
 $size = sp + 24 | 0; //@line 67660
 $1 = ($addr0 | 0) != 0; //@line 67661
 if ($1) {
  HEAP32[$addr0 >> 2] = 0; //@line 67664
 }
 $3 = _ini_next_sct($ini, 0, 51096) | 0; //@line 67667
 if (($3 | 0) == 0) {
  $_0 = 0; //@line 67671
  STACKTOP = sp; //@line 67673
  return $_0 | 0; //@line 67674
 }
 L23037 : do {
  if ($1) {
   $5 = $3; //@line 67678
   while (1) {
    _ini_get_string($5, 56184, $fname, 0) | 0; //@line 67681
    if ((_ini_get_uint32($5, 49680, $base, 0) | 0) != 0) {
     _ini_get_uint32($5, 45872, $base, 0) | 0; //@line 67686
    }
    do {
     if ((_ini_get_uint32($5, 42424, $size, 0) | 0) == 0) {
      HEAP32[$size >> 2] = HEAP32[$size >> 2] << 20; //@line 67696
     } else {
      if ((_ini_get_uint32($5, 39328, $size, 0) | 0) == 0) {
       HEAP32[$size >> 2] = HEAP32[$size >> 2] << 10; //@line 67705
       break;
      } else {
       _ini_get_uint32($5, 36400, $size, 65536) | 0; //@line 67709
       break;
      }
     }
    } while (0);
    _ini_get_uint16($5, 33472, $val, 0) | 0; //@line 67714
    $28 = _pce_path_get(HEAP32[$fname >> 2] | 0) | 0; //@line 67716
    $30 = HEAP32[$size >> 2] | 0; //@line 67718
    $31 = ($28 | 0) == 0; //@line 67719
    _pce_log_tag(2, 31696, 30728, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = HEAP32[$base >> 2], HEAP32[tempInt + 8 >> 2] = $30, HEAP32[tempInt + 16 >> 2] = $31 ? 57928 : $28, tempInt) | 0); //@line 67721
    $35 = _mem_blk_new(HEAP32[$base >> 2] | 0, HEAP32[$size >> 2] | 0, 1) | 0; //@line 67724
    if (($35 | 0) == 0) {
     $_lcssa = $28; //@line 67728
     label = 17793; //@line 67729
     break L23037;
    }
    _mem_blk_clear($35, HEAP32[$val >> 2] & 255); //@line 67734
    _mem_blk_set_readonly($35, 0); //@line 67735
    _mem_add_blk($mem, $35, 1); //@line 67736
    if ((HEAP32[$base >> 2] | 0) == 0) {
     HEAP32[$addr0 >> 2] = $35; //@line 67741
    }
    if (!$31) {
     if ((_pce_load_blk_bin($35, $28) | 0) != 0) {
      $_lcssa26 = $28; //@line 67750
      label = 17796; //@line 67751
      break L23037;
     }
    }
    _free($28); //@line 67755
    $48 = _ini_next_sct($ini, $5, 51096) | 0; //@line 67756
    if (($48 | 0) == 0) {
     $_0 = 0; //@line 67760
     break;
    } else {
     $5 = $48; //@line 67763
    }
   }
   STACKTOP = sp; //@line 67767
   return $_0 | 0; //@line 67768
  } else {
   $50 = $3; //@line 67770
   while (1) {
    _ini_get_string($50, 56184, $fname, 0) | 0; //@line 67773
    if ((_ini_get_uint32($50, 49680, $base, 0) | 0) != 0) {
     _ini_get_uint32($50, 45872, $base, 0) | 0; //@line 67778
    }
    do {
     if ((_ini_get_uint32($50, 42424, $size, 0) | 0) == 0) {
      HEAP32[$size >> 2] = HEAP32[$size >> 2] << 20; //@line 67788
     } else {
      if ((_ini_get_uint32($50, 39328, $size, 0) | 0) == 0) {
       HEAP32[$size >> 2] = HEAP32[$size >> 2] << 10; //@line 67797
       break;
      } else {
       _ini_get_uint32($50, 36400, $size, 65536) | 0; //@line 67801
       break;
      }
     }
    } while (0);
    _ini_get_uint16($50, 33472, $val, 0) | 0; //@line 67806
    $73 = _pce_path_get(HEAP32[$fname >> 2] | 0) | 0; //@line 67808
    $75 = HEAP32[$size >> 2] | 0; //@line 67810
    $76 = ($73 | 0) == 0; //@line 67811
    _pce_log_tag(2, 31696, 30728, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = HEAP32[$base >> 2], HEAP32[tempInt + 8 >> 2] = $75, HEAP32[tempInt + 16 >> 2] = $76 ? 57928 : $73, tempInt) | 0); //@line 67813
    $80 = _mem_blk_new(HEAP32[$base >> 2] | 0, HEAP32[$size >> 2] | 0, 1) | 0; //@line 67816
    if (($80 | 0) == 0) {
     $_lcssa = $73; //@line 67820
     label = 17793; //@line 67821
     break L23037;
    }
    _mem_blk_clear($80, HEAP32[$val >> 2] & 255); //@line 67826
    _mem_blk_set_readonly($80, 0); //@line 67827
    _mem_add_blk($mem, $80, 1); //@line 67828
    if (!$76) {
     if ((_pce_load_blk_bin($80, $73) | 0) != 0) {
      $_lcssa26 = $73; //@line 67835
      label = 17796; //@line 67836
      break L23037;
     }
    }
    _free($73); //@line 67840
    $89 = _ini_next_sct($ini, $50, 51096) | 0; //@line 67841
    if (($89 | 0) == 0) {
     $_0 = 0; //@line 67845
     break;
    } else {
     $50 = $89; //@line 67848
    }
   }
   STACKTOP = sp; //@line 67852
   return $_0 | 0; //@line 67853
  }
 } while (0);
 if ((label | 0) == 17796) {
  _pce_log(0, 55920, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $_lcssa26, tempInt) | 0); //@line 67858
  _free($_lcssa26); //@line 67859
  $_0 = 1; //@line 67861
  STACKTOP = sp; //@line 67863
  return $_0 | 0; //@line 67864
 } else if ((label | 0) == 17793) {
  _pce_log(0, 57104, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 67868
  _free($_lcssa); //@line 67869
  $_0 = 1; //@line 67871
  STACKTOP = sp; //@line 67873
  return $_0 | 0; //@line 67874
 }
 return 0;
}
function _ini_get_rom($mem, $ini) {
 $mem = $mem | 0;
 $ini = $ini | 0;
 var $fname = 0, $val = 0, $base = 0, $size = 0, $1 = 0, $3 = 0, $26 = 0, $28 = 0, $29 = 0, $33 = 0, $44 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 67888
 STACKTOP = STACKTOP + 32 | 0; //@line 67888
 $fname = sp | 0; //@line 67889
 $val = sp + 8 | 0; //@line 67890
 $base = sp + 16 | 0; //@line 67891
 $size = sp + 24 | 0; //@line 67892
 $1 = _ini_next_sct($ini, 0, 55256) | 0; //@line 67893
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 67897
  STACKTOP = sp; //@line 67899
  return $_0 | 0; //@line 67900
 } else {
  $3 = $1; //@line 67902
 }
 while (1) {
  _ini_get_string($3, 56184, $fname, 0) | 0; //@line 67906
  if ((_ini_get_uint32($3, 49680, $base, 0) | 0) != 0) {
   _ini_get_uint32($3, 45872, $base, 0) | 0; //@line 67911
  }
  do {
   if ((_ini_get_uint32($3, 42424, $size, 0) | 0) == 0) {
    HEAP32[$size >> 2] = HEAP32[$size >> 2] << 20; //@line 67921
   } else {
    if ((_ini_get_uint32($3, 39328, $size, 0) | 0) == 0) {
     HEAP32[$size >> 2] = HEAP32[$size >> 2] << 10; //@line 67930
     break;
    } else {
     _ini_get_uint32($3, 36400, $size, 65536) | 0; //@line 67934
     break;
    }
   }
  } while (0);
  _ini_get_uint16($3, 33472, $val, 0) | 0; //@line 67939
  $26 = _pce_path_get(HEAP32[$fname >> 2] | 0) | 0; //@line 67941
  $28 = HEAP32[$size >> 2] | 0; //@line 67943
  $29 = ($26 | 0) != 0; //@line 67944
  _pce_log_tag(2, 54592, 30728, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = HEAP32[$base >> 2], HEAP32[tempInt + 8 >> 2] = $28, HEAP32[tempInt + 16 >> 2] = $29 ? $26 : 57928, tempInt) | 0); //@line 67946
  $33 = _mem_blk_new(HEAP32[$base >> 2] | 0, HEAP32[$size >> 2] | 0, 1) | 0; //@line 67949
  if (($33 | 0) == 0) {
   label = 17813; //@line 67953
   break;
  }
  _mem_blk_clear($33, HEAP32[$val >> 2] & 255); //@line 67958
  _mem_blk_set_readonly($33, 1); //@line 67959
  _mem_add_blk($mem, $33, 1); //@line 67960
  if ($29) {
   if ((_pce_load_blk_bin($33, $26) | 0) != 0) {
    label = 17816; //@line 67967
    break;
   }
  }
  _free($26); //@line 67971
  $44 = _ini_next_sct($ini, $3, 55256) | 0; //@line 67972
  if (($44 | 0) == 0) {
   $_0 = 0; //@line 67976
   label = 17820; //@line 67977
   break;
  } else {
   $3 = $44; //@line 67980
  }
 }
 if ((label | 0) == 17820) {
  STACKTOP = sp; //@line 67985
  return $_0 | 0; //@line 67986
 } else if ((label | 0) == 17813) {
  _pce_log(0, 57104, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 67989
  _free($26); //@line 67990
  $_0 = 1; //@line 67992
  STACKTOP = sp; //@line 67994
  return $_0 | 0; //@line 67995
 } else if ((label | 0) == 17816) {
  _pce_log(0, 53872, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $26, tempInt) | 0); //@line 67998
  _free($26); //@line 67999
  $_0 = 1; //@line 68001
  STACKTOP = sp; //@line 68003
  return $_0 | 0; //@line 68004
 }
 return 0;
}
function _ini_get_terminal($ini, $def) {
 $ini = $ini | 0;
 $def = $def | 0;
 var $scale = 0, $min_w = 0, $min_h = 0, $aspect_x = 0, $aspect_y = 0, $mouse_x = 0, $mouse_y = 0, $driver = 0, $esc = 0, $1 = 0, $cond40 = 0, $sct_043 = 0, $8 = 0, $sct_0_lcssa = 0, $sct_141 = 0, $11 = 0, $17 = 0, $sct_2 = 0, $26 = 0, $28 = 0, $30 = 0, $32 = 0, $35 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $55 = 0, $62 = 0, $trm_0_ph = 0, $68 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 68024
 STACKTOP = STACKTOP + 72 | 0; //@line 68024
 $scale = sp | 0; //@line 68025
 $min_w = sp + 8 | 0; //@line 68026
 $min_h = sp + 16 | 0; //@line 68027
 $aspect_x = sp + 24 | 0; //@line 68028
 $aspect_y = sp + 32 | 0; //@line 68029
 $mouse_x = sp + 40 | 0; //@line 68030
 $mouse_y = sp + 48 | 0; //@line 68031
 $driver = sp + 56 | 0; //@line 68032
 $esc = sp + 64 | 0; //@line 68033
 $1 = _ini_next_sct($ini, 0, 51032) | 0; //@line 68034
 _ini_get_string($1, 56176, $driver, 49672) | 0; //@line 68035
 $cond40 = ($1 | 0) == 0; //@line 68037
 L23106 : do {
  if (($def | 0) == 0) {
   L23108 : do {
    if (!$cond40) {
     $sct_141 = $1; //@line 68044
     while (1) {
      $11 = HEAP32[$driver >> 2] | 0; //@line 68047
      if ((_strcmp($11 | 0, 49672) | 0) == 0) {
       $sct_2 = $sct_141; //@line 68052
       break L23106;
      }
      if ((_strcmp($11 | 0, 51816) | 0) == 0) {
       break;
      }
      $17 = _ini_next_sct($ini, $sct_141, 51032) | 0; //@line 68060
      _ini_get_string($17, 56176, $driver, 49672) | 0; //@line 68061
      if (($17 | 0) == 0) {
       break L23108;
      } else {
       $sct_141 = $17; //@line 68067
      }
     }
     if (($sct_141 | 0) != 0) {
      $sct_2 = $sct_141; //@line 68073
      break L23106;
     }
    }
   } while (0);
   HEAP32[$driver >> 2] = 49672; //@line 68078
   $sct_2 = 0; //@line 68080
  } else {
   L23116 : do {
    if ($cond40) {
     $sct_0_lcssa = 0; //@line 68085
    } else {
     $sct_043 = $1; //@line 68087
     while (1) {
      if ((_strcmp($def | 0, HEAP32[$driver >> 2] | 0) | 0) == 0) {
       $sct_0_lcssa = $sct_043; //@line 68094
       break L23116;
      }
      $8 = _ini_next_sct($ini, $sct_043, 51032) | 0; //@line 68097
      _ini_get_string($8, 56176, $driver, 49672) | 0; //@line 68098
      if (($8 | 0) == 0) {
       $sct_0_lcssa = 0; //@line 68102
       break;
      } else {
       $sct_043 = $8; //@line 68105
      }
     }
    }
   } while (0);
   HEAP32[$driver >> 2] = $def; //@line 68111
   $sct_2 = $sct_0_lcssa; //@line 68113
  }
 } while (0);
 _ini_get_string($sct_2, 45864, $esc, 0) | 0; //@line 68117
 _ini_get_uint16($sct_2, 42408, $aspect_x, 4) | 0; //@line 68118
 _ini_get_uint16($sct_2, 39312, $aspect_y, 3) | 0; //@line 68119
 _ini_get_uint16($sct_2, 36392, $min_w, 512) | 0; //@line 68120
 _ini_get_uint16($sct_2, 33464, $min_h, 384) | 0; //@line 68121
 _ini_get_uint16($sct_2, 31672, $scale, 1) | 0; //@line 68122
 $26 = $mouse_x | 0; //@line 68123
 _ini_get_sint16($sct_2, 30704, $26, 1) | 0; //@line 68124
 $28 = $mouse_x + 4 | 0; //@line 68125
 _ini_get_sint16($sct_2, 57896, $28, 1) | 0; //@line 68126
 $30 = $mouse_y | 0; //@line 68127
 _ini_get_sint16($sct_2, 57088, $30, 1) | 0; //@line 68128
 $32 = $mouse_y + 4 | 0; //@line 68129
 _ini_get_sint16($sct_2, 55904, $32, 1) | 0; //@line 68130
 $35 = HEAP32[$esc >> 2] | 0; //@line 68132
 $38 = HEAP32[$aspect_x >> 2] | 0; //@line 68135
 $39 = HEAP32[$aspect_y >> 2] | 0; //@line 68136
 $40 = HEAP32[$min_w >> 2] | 0; //@line 68137
 $41 = HEAP32[$min_h >> 2] | 0; //@line 68138
 $42 = HEAP32[$scale >> 2] | 0; //@line 68139
 $43 = HEAP32[$26 >> 2] | 0; //@line 68140
 $44 = HEAP32[$28 >> 2] | 0; //@line 68141
 $45 = HEAP32[$30 >> 2] | 0; //@line 68142
 $46 = HEAP32[$32 >> 2] | 0; //@line 68143
 _pce_log_tag(2, 55248, 54512, (tempInt = STACKTOP, STACKTOP = STACKTOP + 88 | 0, HEAP32[tempInt >> 2] = HEAP32[$driver >> 2], HEAP32[tempInt + 8 >> 2] = ($35 | 0) != 0 ? $35 : 53864, HEAP32[tempInt + 16 >> 2] = $38, HEAP32[tempInt + 24 >> 2] = $39, HEAP32[tempInt + 32 >> 2] = $40, HEAP32[tempInt + 40 >> 2] = $41, HEAP32[tempInt + 48 >> 2] = $42, HEAP32[tempInt + 56 >> 2] = $43, HEAP32[tempInt + 64 >> 2] = $44, HEAP32[tempInt + 72 >> 2] = $45, HEAP32[tempInt + 80 >> 2] = $46, tempInt) | 0); //@line 68144
 $47 = HEAP32[$driver >> 2] | 0; //@line 68145
 L23122 : do {
  if ((_strcmp($47 | 0, 53280) | 0) == 0) {
   _pce_log(0, 52408, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 68151
  } else {
   do {
    if ((_strcmp($47 | 0, 51816) | 0) == 0) {
     $55 = _sdl_new($sct_2) | 0; //@line 68159
     if (($55 | 0) != 0) {
      $trm_0_ph = $55; //@line 68163
      break;
     }
     _pce_log(0, 51256, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 68166
     break L23122;
    } else {
     if ((_strcmp($47 | 0, 49672) | 0) != 0) {
      _pce_log(0, 50424, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $47, tempInt) | 0); //@line 68174
      break L23122;
     }
     $62 = _null_new($sct_2) | 0; //@line 68177
     if (($62 | 0) != 0) {
      $trm_0_ph = $62; //@line 68181
      break;
     }
     _pce_log(0, 50752, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 68184
     break L23122;
    }
   } while (0);
   $68 = HEAP32[$esc >> 2] | 0; //@line 68190
   if (($68 | 0) != 0) {
    _trm_set_escape_str($trm_0_ph, $68) | 0; //@line 68194
   }
   _trm_set_scale($trm_0_ph, HEAP32[$scale >> 2] | 0); //@line 68198
   _trm_set_min_size($trm_0_ph, HEAP32[$min_w >> 2] | 0, HEAP32[$min_h >> 2] | 0); //@line 68201
   _trm_set_aspect_ratio($trm_0_ph, HEAP32[$aspect_x >> 2] | 0, HEAP32[$aspect_y >> 2] | 0); //@line 68204
   _trm_set_mouse_scale($trm_0_ph, HEAP32[$26 >> 2] | 0, HEAP32[$28 >> 2] | 0, HEAP32[$30 >> 2] | 0, HEAP32[$32 >> 2] | 0); //@line 68209
   $_0 = $trm_0_ph; //@line 68211
   STACKTOP = sp; //@line 68213
   return $_0 | 0; //@line 68214
  }
 } while (0);
 _pce_log(0, 49488, (tempInt = STACKTOP, STACKTOP = STACKTOP + 1 | 0, STACKTOP = STACKTOP + 7 >> 3 << 3, HEAP32[tempInt >> 2] = 0, tempInt) | 0); //@line 68217
 $_0 = 0; //@line 68219
 STACKTOP = sp; //@line 68221
 return $_0 | 0; //@line 68222
}
function _ihex_load_fp($fp, $ext, $set) {
 $fp = $fp | 0;
 $ext = $ext | 0;
 $set = $set | 0;
 var $a1_i = 0, $a2_i = 0, $rec = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $mode_0_ph = 0, $ulba_0_ph = 0, $7 = 0, $8 = 0, $i_0_i = 0, $38 = 0, $40 = 0, $41 = 0, $43 = 0, $44 = 0, $48 = 0, $51 = 0, $52 = 0, $ck_014_i = 0, $i_013_i = 0, $55 = 0, $56 = 0, $ck_0_lcssa_i = 0, $i_014_us = 0, $66 = 0, $i_014 = 0, $94 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 68243
 STACKTOP = STACKTOP + 280 | 0; //@line 68243
 $a1_i = sp | 0; //@line 68244
 $a2_i = sp + 8 | 0; //@line 68245
 $rec = sp + 16 | 0; //@line 68246
 $1 = $rec + 1 | 0; //@line 68247
 $2 = $rec + 2 | 0; //@line 68248
 $3 = $rec | 0; //@line 68249
 $4 = $rec + 260 | 0; //@line 68250
 $5 = $rec + 4 | 0; //@line 68251
 $6 = $rec + 5 | 0; //@line 68252
 $ulba_0_ph = 0;
 $mode_0_ph = 1;
 L23141 : while (1) {
  L23143 : while (1) {
   $7 = _fgetc($fp | 0) | 0; //@line 68259
   if (($7 | 0) == 13 | ($7 | 0) == 10) {
    continue;
   } else if (($7 | 0) == (-1 | 0)) {
    $_0 = 0; //@line 68263
    label = 17875; //@line 68264
    break L23141;
   } else if (($7 | 0) != 58) {
    while (1) {
     $8 = _fgetc($fp | 0) | 0; //@line 68268
     if (($8 | 0) == (-1 | 0) | ($8 | 0) == 13 | ($8 | 0) == 10) {
      continue L23143;
     }
    }
   }
   if ((_ihex_get_hex8($fp, $1) | 0) != 0) {
    $_0 = 0; //@line 68278
    label = 17877; //@line 68279
    break L23141;
   }
   if ((_ihex_get_hex8($fp, $a1_i) | 0) != 0) {
    $_0 = 0; //@line 68286
    label = 17880; //@line 68287
    break L23141;
   }
   if ((_ihex_get_hex8($fp, $a2_i) | 0) != 0) {
    $_0 = 0; //@line 68294
    label = 17876; //@line 68295
    break L23141;
   }
   HEAP16[$2 >> 1] = (HEAPU8[$a1_i] | 0) << 8 | (HEAPU8[$a2_i] | 0); //@line 68304
   if ((_ihex_get_hex8($fp, $3) | 0) == 0) {
    $i_0_i = 0; //@line 68309
   } else {
    $_0 = 0; //@line 68311
    label = 17881; //@line 68312
    break L23141;
   }
   while (1) {
    if ($i_0_i >>> 0 >= (HEAPU8[$1] | 0) >>> 0) {
     break;
    }
    if ((_ihex_get_hex8($fp, $rec + 4 + $i_0_i | 0) | 0) == 0) {
     $i_0_i = $i_0_i + 1 | 0; //@line 68330
    } else {
     $_0 = 0; //@line 68332
     label = 17883; //@line 68333
     break L23141;
    }
   }
   if ((_ihex_get_hex8($fp, $4) | 0) != 0) {
    $_0 = 0; //@line 68341
    label = 17885; //@line 68342
    break L23141;
   }
   do {
    $38 = _fgetc($fp | 0) | 0; //@line 68346
   } while (!(($38 | 0) == (-1 | 0) | ($38 | 0) == 13 | ($38 | 0) == 10));
   $40 = HEAP8[$4] | 0; //@line 68351
   $41 = HEAP8[$1] | 0; //@line 68352
   $43 = HEAPU16[$2 >> 1] | 0; //@line 68354
   $44 = $41 & 255; //@line 68355
   $48 = HEAP8[$3] | 0; //@line 68359
   $51 = $43 + $44 + ($43 >>> 8) + ($48 & 255) & 255; //@line 68362
   $52 = $41 << 24 >> 24 == 0; //@line 68363
   if ($52) {
    $ck_0_lcssa_i = $51; //@line 68366
   } else {
    $i_013_i = 0;
    $ck_014_i = $51;
    while (1) {
     $55 = (HEAP8[$rec + 4 + $i_013_i | 0] | 0) + $ck_014_i & 255; //@line 68374
     $56 = $i_013_i + 1 | 0; //@line 68375
     if ($56 >>> 0 < $44 >>> 0) {
      $i_013_i = $56;
      $ck_014_i = $55;
     } else {
      $ck_0_lcssa_i = $55; //@line 68381
      break;
     }
    }
   }
   if ($40 << 24 >> 24 != (-$ck_0_lcssa_i & 255) << 24 >> 24) {
    $_0 = 1; //@line 68391
    label = 17884; //@line 68392
    break L23141;
   }
   if (($48 << 24 >> 24 | 0) == 1) {
    $_0 = 0; //@line 68396
    label = 17878; //@line 68397
    break L23141;
   } else if (($48 << 24 >> 24 | 0) == 2) {
    label = 17871; //@line 68400
    break;
   } else if (($48 << 24 >> 24 | 0) == 4) {
    label = 17869; //@line 68403
    break;
   } else if (($48 << 24 >> 24 | 0) != 0) {
    continue;
   }
   if ($52) {
    continue;
   }
   if ($mode_0_ph) {
    $i_014_us = 0; //@line 68413
    while (1) {
     FUNCTION_TABLE_viii[$set & 63]($ext, $i_014_us + $ulba_0_ph + $43 | 0, HEAP8[$rec + 4 + $i_014_us | 0] | 0); //@line 68420
     $66 = $i_014_us + 1 | 0; //@line 68421
     if ($66 >>> 0 < $44 >>> 0) {
      $i_014_us = $66; //@line 68425
     } else {
      continue L23143;
     }
    }
   } else {
    $i_014 = 0; //@line 68431
    while (1) {
     FUNCTION_TABLE_viii[$set & 63]($ext, ($43 + $i_014 & 65535) + $ulba_0_ph | 0, HEAP8[$rec + 4 + $i_014 | 0] | 0); //@line 68439
     $94 = $i_014 + 1 | 0; //@line 68440
     if ($94 >>> 0 < $44 >>> 0) {
      $i_014 = $94; //@line 68444
     } else {
      continue L23143;
     }
    }
   }
  }
  if ((label | 0) == 17871) {
   label = 0; //@line 68452
   if ($41 << 24 >> 24 != 2) {
    $_0 = 1; //@line 68456
    label = 17879; //@line 68457
    break;
   }
   $ulba_0_ph = ((HEAPU8[$5] | 0) << 8 | (HEAPU8[$6] | 0)) << 4;
   $mode_0_ph = 0;
   continue;
  } else if ((label | 0) == 17869) {
   label = 0; //@line 68472
   if ($41 << 24 >> 24 != 2) {
    $_0 = 1; //@line 68476
    label = 17882; //@line 68477
    break;
   }
   $ulba_0_ph = ((HEAPU8[$5] | 0) << 8 | (HEAPU8[$6] | 0)) << 16;
   $mode_0_ph = 1;
   continue;
  }
 }
 if ((label | 0) == 17876) {
  STACKTOP = sp; //@line 68494
  return $_0 | 0; //@line 68495
 } else if ((label | 0) == 17884) {
  STACKTOP = sp; //@line 68499
  return $_0 | 0; //@line 68500
 } else if ((label | 0) == 17885) {
  STACKTOP = sp; //@line 68504
  return $_0 | 0; //@line 68505
 } else if ((label | 0) == 17875) {
  STACKTOP = sp; //@line 68509
  return $_0 | 0; //@line 68510
 } else if ((label | 0) == 17883) {
  STACKTOP = sp; //@line 68514
  return $_0 | 0; //@line 68515
 } else if ((label | 0) == 17877) {
  STACKTOP = sp; //@line 68519
  return $_0 | 0; //@line 68520
 } else if ((label | 0) == 17878) {
  STACKTOP = sp; //@line 68524
  return $_0 | 0; //@line 68525
 } else if ((label | 0) == 17880) {
  STACKTOP = sp; //@line 68529
  return $_0 | 0; //@line 68530
 } else if ((label | 0) == 17881) {
  STACKTOP = sp; //@line 68534
  return $_0 | 0; //@line 68535
 } else if ((label | 0) == 17882) {
  STACKTOP = sp; //@line 68539
  return $_0 | 0; //@line 68540
 } else if ((label | 0) == 17879) {
  STACKTOP = sp; //@line 68544
  return $_0 | 0; //@line 68545
 }
 return 0;
}
function _pce_log_init() {
 HEAP32[15612] = 0; //@line 68553
 return;
}
function _ihex_get_hex8($fp, $val) {
 $fp = $fp | 0;
 $val = $val | 0;
 var $1 = 0, $29 = 0, $_0 = 0;
 HEAP8[$val] = 0; //@line 68571
 $1 = _fgetc($fp | 0) | 0; //@line 68572
 do {
  if (($1 - 48 | 0) >>> 0 < 10) {
   HEAP8[$val] = ((HEAPU8[$val] | 0) << 4 | $1 + 208) & 255; //@line 68584
  } else {
   if (($1 - 65 | 0) >>> 0 < 6) {
    HEAP8[$val] = ((HEAPU8[$val] | 0) << 4 | $1 + 201) & 255; //@line 68597
    break;
   }
   if (($1 - 97 | 0) >>> 0 < 6) {
    HEAP8[$val] = ((HEAPU8[$val] | 0) << 4 | $1 + 169) & 255; //@line 68611
    break;
   } else {
    $_0 = 1; //@line 68614
    return $_0 | 0; //@line 68617
   }
  }
 } while (0);
 $29 = _fgetc($fp | 0) | 0; //@line 68621
 if (($29 - 48 | 0) >>> 0 < 10) {
  HEAP8[$val] = ((HEAPU8[$val] | 0) << 4 | $29 + 208) & 255; //@line 68632
  $_0 = 0; //@line 68634
  return $_0 | 0; //@line 68637
 }
 if (($29 - 65 | 0) >>> 0 < 6) {
  HEAP8[$val] = ((HEAPU8[$val] | 0) << 4 | $29 + 201) & 255; //@line 68649
  $_0 = 0; //@line 68651
  return $_0 | 0; //@line 68654
 }
 if (($29 - 97 | 0) >>> 0 >= 6) {
  $_0 = 1; //@line 68660
  return $_0 | 0; //@line 68663
 }
 HEAP8[$val] = ((HEAPU8[$val] | 0) << 4 | $29 + 169) & 255; //@line 68671
 $_0 = 0; //@line 68672
 return $_0 | 0; //@line 68675
}
function _srec_load_fp($fp, $ext, $set) {
 $fp = $fp | 0;
 $ext = $ext | 0;
 $set = $set | 0;
 var $rec = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, $23 = 0, $type_0_load7376_ph_i = 0, $27 = 0, $28 = 0, $v1_0_load4_ph_i_i = 0, $44 = 0, $v2_i_0_load79_ph_i = 0, $62 = 0, $63 = 0, $64 = 0, $67 = 0, $69 = 0, $i_0101_i = 0, $70 = 0, $v1_0_load4_ph_i40_i = 0, $86 = 0, $v2_i36_0_load82_ph_i = 0, $i_199_i = 0, $110 = 0, $111 = 0, $v1_0_load4_ph_i52_i = 0, $127 = 0, $v2_i48_0_load85_ph_i = 0, $146 = 0, $147 = 0, $150 = 0, $151 = 0, $v1_0_load4_ph_i64_i = 0, $167 = 0, $v2_i60_0_load86_ph_i = 0, $185 = 0, $187 = 0, $188 = 0, $190 = 0, $200 = 0, $201 = 0, $ck_017_i = 0, $i_016_i = 0, $204 = 0, $205 = 0, $ck_0_lcssa_i = 0, $210 = 0, $i_012 = 0, $214 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 68710
 STACKTOP = STACKTOP + 272 | 0; //@line 68710
 $rec = sp | 0; //@line 68711
 $1 = $rec | 0; //@line 68712
 $2 = $rec + 8 | 0; //@line 68713
 $3 = $rec + 1 | 0; //@line 68714
 $4 = $rec + 4 | 0; //@line 68715
 $5 = $rec + 268 | 0; //@line 68716
 L23213 : while (1) {
  $6 = _fgetc($fp | 0) | 0; //@line 68719
  L23215 : do {
   if (($6 | 0) == (-1 | 0)) {
    $_0 = 0; //@line 68722
    label = 17986; //@line 68723
    break L23213;
   } else if (($6 | 0) == 13 | ($6 | 0) == 10) {
    continue L23213;
   } else if (($6 | 0) == 83) {
    $8 = _fgetc($fp | 0) | 0; //@line 68728
    do {
     if (($8 - 48 | 0) >>> 0 < 10) {
      $type_0_load7376_ph_i = $8 + 208 & 255; //@line 68737
     } else {
      if (($8 - 65 | 0) >>> 0 < 6) {
       $type_0_load7376_ph_i = $8 + 201 & 255; //@line 68746
       break;
      }
      if (($8 - 97 | 0) >>> 0 >= 6) {
       break L23215;
      }
      $type_0_load7376_ph_i = $8 + 169 & 255; //@line 68757
     }
    } while (0);
    HEAP8[$1] = $type_0_load7376_ph_i; //@line 68761
    $27 = HEAP32[6336 + (($type_0_load7376_ph_i & 255) << 2) >> 2] | 0; //@line 68764
    HEAP32[$2 >> 2] = $27; //@line 68765
    $28 = _fgetc($fp | 0) | 0; //@line 68766
    do {
     if (($28 - 48 | 0) >>> 0 < 10) {
      $v1_0_load4_ph_i_i = $28 + 208 & 255; //@line 68775
     } else {
      if (($28 - 65 | 0) >>> 0 < 6) {
       $v1_0_load4_ph_i_i = $28 + 201 & 255; //@line 68784
       break;
      }
      if (($28 - 97 | 0) >>> 0 >= 6) {
       $_0 = 0; //@line 68791
       label = 17984; //@line 68792
       break L23213;
      }
      $v1_0_load4_ph_i_i = $28 + 169 & 255; //@line 68797
     }
    } while (0);
    $44 = _fgetc($fp | 0) | 0; //@line 68801
    do {
     if (($44 - 48 | 0) >>> 0 < 10) {
      $v2_i_0_load79_ph_i = $44 + 208 & 255; //@line 68810
     } else {
      if (($44 - 65 | 0) >>> 0 < 6) {
       $v2_i_0_load79_ph_i = $44 + 201 & 255; //@line 68819
       break;
      }
      if (($44 - 97 | 0) >>> 0 >= 6) {
       $_0 = 0; //@line 68826
       label = 17985; //@line 68827
       break L23213;
      }
      $v2_i_0_load79_ph_i = $44 + 169 & 255; //@line 68832
     }
    } while (0);
    $62 = $v2_i_0_load79_ph_i & 15 | $v1_0_load4_ph_i_i << 4; //@line 68838
    HEAP8[$3] = $62; //@line 68839
    $63 = $62 & 255; //@line 68840
    $64 = $27 + 1 | 0; //@line 68841
    if ($63 >>> 0 < $64 >>> 0) {
     $_0 = 0; //@line 68845
     label = 17979; //@line 68846
     break L23213;
    }
    $67 = $63 - $64 & 255; //@line 68850
    HEAP8[$3] = $67; //@line 68851
    HEAP32[$4 >> 2] = 0; //@line 68852
    $i_0101_i = 0;
    $69 = 0;
    do {
     $70 = _fgetc($fp | 0) | 0; //@line 68858
     do {
      if (($70 - 48 | 0) >>> 0 < 10) {
       $v1_0_load4_ph_i40_i = $70 + 208 & 255; //@line 68867
      } else {
       if (($70 - 65 | 0) >>> 0 < 6) {
        $v1_0_load4_ph_i40_i = $70 + 201 & 255; //@line 68876
        break;
       }
       if (($70 - 97 | 0) >>> 0 >= 6) {
        $_0 = 0; //@line 68883
        label = 17976; //@line 68884
        break L23213;
       }
       $v1_0_load4_ph_i40_i = $70 + 169 & 255; //@line 68889
      }
     } while (0);
     $86 = _fgetc($fp | 0) | 0; //@line 68893
     do {
      if (($86 - 48 | 0) >>> 0 < 10) {
       $v2_i36_0_load82_ph_i = $86 + 208 & 255; //@line 68902
      } else {
       if (($86 - 65 | 0) >>> 0 < 6) {
        $v2_i36_0_load82_ph_i = $86 + 201 & 255; //@line 68911
        break;
       }
       if (($86 - 97 | 0) >>> 0 >= 6) {
        $_0 = 0; //@line 68918
        label = 17977; //@line 68919
        break L23213;
       }
       $v2_i36_0_load82_ph_i = $86 + 169 & 255; //@line 68924
      }
     } while (0);
     $69 = ($v2_i36_0_load82_ph_i & 15 | $v1_0_load4_ph_i40_i << 4) & 255 | $69 << 8; //@line 68933
     HEAP32[$4 >> 2] = $69; //@line 68934
     $i_0101_i = $i_0101_i + 1 | 0; //@line 68935
    } while ($i_0101_i >>> 0 < $27 >>> 0);
    if ($67 << 24 >> 24 == 0) {
     $150 = 0; //@line 68947
    } else {
     $i_199_i = 0; //@line 68949
     while (1) {
      $110 = $rec + 12 + $i_199_i | 0; //@line 68952
      $111 = _fgetc($fp | 0) | 0; //@line 68953
      do {
       if (($111 - 48 | 0) >>> 0 < 10) {
        $v1_0_load4_ph_i52_i = $111 + 208 & 255; //@line 68962
       } else {
        if (($111 - 65 | 0) >>> 0 < 6) {
         $v1_0_load4_ph_i52_i = $111 + 201 & 255; //@line 68971
         break;
        }
        if (($111 - 97 | 0) >>> 0 >= 6) {
         $_0 = 0; //@line 68978
         label = 17978; //@line 68979
         break L23213;
        }
        $v1_0_load4_ph_i52_i = $111 + 169 & 255; //@line 68984
       }
      } while (0);
      $127 = _fgetc($fp | 0) | 0; //@line 68988
      do {
       if (($127 - 48 | 0) >>> 0 < 10) {
        $v2_i48_0_load85_ph_i = $127 + 208 & 255; //@line 68997
       } else {
        if (($127 - 65 | 0) >>> 0 < 6) {
         $v2_i48_0_load85_ph_i = $127 + 201 & 255; //@line 69006
         break;
        }
        if (($127 - 97 | 0) >>> 0 >= 6) {
         $_0 = 0; //@line 69013
         label = 17982; //@line 69014
         break L23213;
        }
        $v2_i48_0_load85_ph_i = $127 + 169 & 255; //@line 69019
       }
      } while (0);
      HEAP8[$110] = $v2_i48_0_load85_ph_i & 15 | $v1_0_load4_ph_i52_i << 4; //@line 69026
      $146 = $i_199_i + 1 | 0; //@line 69027
      $147 = HEAP8[$3] | 0; //@line 69028
      if ($146 >>> 0 < ($147 & 255) >>> 0) {
       $i_199_i = $146; //@line 69033
      } else {
       $150 = $147; //@line 69035
       break;
      }
     }
    }
    $151 = _fgetc($fp | 0) | 0; //@line 69041
    do {
     if (($151 - 48 | 0) >>> 0 < 10) {
      $v1_0_load4_ph_i64_i = $151 + 208 & 255; //@line 69050
     } else {
      if (($151 - 65 | 0) >>> 0 < 6) {
       $v1_0_load4_ph_i64_i = $151 + 201 & 255; //@line 69059
       break;
      }
      if (($151 - 97 | 0) >>> 0 >= 6) {
       $_0 = 0; //@line 69066
       label = 17981; //@line 69067
       break L23213;
      }
      $v1_0_load4_ph_i64_i = $151 + 169 & 255; //@line 69072
     }
    } while (0);
    $167 = _fgetc($fp | 0) | 0; //@line 69076
    do {
     if (($167 - 48 | 0) >>> 0 < 10) {
      $v2_i60_0_load86_ph_i = $167 + 208 & 255; //@line 69085
     } else {
      if (($167 - 65 | 0) >>> 0 < 6) {
       $v2_i60_0_load86_ph_i = $167 + 201 & 255; //@line 69094
       break;
      }
      if (($167 - 97 | 0) >>> 0 >= 6) {
       $_0 = 0; //@line 69101
       label = 17983; //@line 69102
       break L23213;
      }
      $v2_i60_0_load86_ph_i = $167 + 169 & 255; //@line 69107
     }
    } while (0);
    $185 = $v2_i60_0_load86_ph_i & 15 | $v1_0_load4_ph_i64_i << 4; //@line 69113
    HEAP8[$5] = $185; //@line 69114
    do {
     $187 = _fgetc($fp | 0) | 0; //@line 69117
    } while (!(($187 | 0) == (-1 | 0) | ($187 | 0) == 13 | ($187 | 0) == 10));
    $188 = $150 & 255; //@line 69122
    $190 = HEAP32[$4 >> 2] | 0; //@line 69124
    $200 = (HEAP32[$2 >> 2] | 0) + 1 + $188 + $190 + ($190 >>> 8) + ($190 >>> 16) + ($190 >>> 24) & 255; //@line 69134
    $201 = $150 << 24 >> 24 == 0; //@line 69135
    if ($201) {
     $ck_0_lcssa_i = $200; //@line 69138
    } else {
     $i_016_i = 0;
     $ck_017_i = $200;
     while (1) {
      $204 = (HEAP8[$rec + 12 + $i_016_i | 0] | 0) + $ck_017_i & 255; //@line 69146
      $205 = $i_016_i + 1 | 0; //@line 69147
      if ($205 >>> 0 < $188 >>> 0) {
       $i_016_i = $205;
       $ck_017_i = $204;
      } else {
       $ck_0_lcssa_i = $204; //@line 69153
       break;
      }
     }
    }
    if ($185 << 24 >> 24 != ~$ck_0_lcssa_i << 24 >> 24) {
     $_0 = 1; //@line 69163
     label = 17987; //@line 69164
     break L23213;
    }
    $210 = HEAP8[$1] | 0; //@line 69167
    if (($210 << 24 >> 24 | 0) == 9 | ($210 << 24 >> 24 | 0) == 8 | ($210 << 24 >> 24 | 0) == 7) {
     $_0 = 0;
     label = 17980; //@line 69170
     break L23213;
    } else if (!(($210 << 24 >> 24 | 0) == 1 | ($210 << 24 >> 24 | 0) == 2 | ($210 << 24 >> 24 | 0) == 3)) {
     continue L23213;
    }
    if ($201) {
     continue L23213;
    } else {
     $i_012 = 0; //@line 69179
    }
    while (1) {
     FUNCTION_TABLE_viii[$set & 63]($ext, $190 + $i_012 | 0, HEAP8[$rec + 12 + $i_012 | 0] | 0); //@line 69186
     $214 = $i_012 + 1 | 0; //@line 69187
     if ($214 >>> 0 < $188 >>> 0) {
      $i_012 = $214; //@line 69191
     } else {
      continue L23213;
     }
    }
   }
  } while (0);
  while (1) {
   $23 = _fgetc($fp | 0) | 0; //@line 69199
   if (($23 | 0) == (-1 | 0) | ($23 | 0) == 13 | ($23 | 0) == 10) {
    continue L23213;
   }
  }
 }
 if ((label | 0) == 17986) {
  STACKTOP = sp; //@line 69207
  return $_0 | 0; //@line 69208
 } else if ((label | 0) == 17987) {
  STACKTOP = sp; //@line 69212
  return $_0 | 0; //@line 69213
 } else if ((label | 0) == 17976) {
  STACKTOP = sp; //@line 69217
  return $_0 | 0; //@line 69218
 } else if ((label | 0) == 17983) {
  STACKTOP = sp; //@line 69222
  return $_0 | 0; //@line 69223
 } else if ((label | 0) == 17984) {
  STACKTOP = sp; //@line 69227
  return $_0 | 0; //@line 69228
 } else if ((label | 0) == 17985) {
  STACKTOP = sp; //@line 69232
  return $_0 | 0; //@line 69233
 } else if ((label | 0) == 17980) {
  STACKTOP = sp; //@line 69237
  return $_0 | 0; //@line 69238
 } else if ((label | 0) == 17981) {
  STACKTOP = sp; //@line 69242
  return $_0 | 0; //@line 69243
 } else if ((label | 0) == 17982) {
  STACKTOP = sp; //@line 69247
  return $_0 | 0; //@line 69248
 } else if ((label | 0) == 17977) {
  STACKTOP = sp; //@line 69252
  return $_0 | 0; //@line 69253
 } else if ((label | 0) == 17978) {
  STACKTOP = sp; //@line 69257
  return $_0 | 0; //@line 69258
 } else if ((label | 0) == 17979) {
  STACKTOP = sp; //@line 69262
  return $_0 | 0; //@line 69263
 }
 return 0;
}
function _pce_load_blk_bin($blk, $fname) {
 $blk = $blk | 0;
 $fname = $fname | 0;
 var $1 = 0, $_0 = 0;
 $1 = _fopen($fname | 0, 50976) | 0; //@line 69275
 if (($1 | 0) == 0) {
  $_0 = 1; //@line 69279
  return $_0 | 0; //@line 69282
 }
 _fread(HEAP32[$blk + 44 >> 2] | 0, 1, HEAP32[$blk + 40 >> 2] | 0, $1 | 0) | 0; //@line 69288
 _fclose($1 | 0) | 0; //@line 69289
 $_0 = 0; //@line 69291
 return $_0 | 0; //@line 69294
}
function _pce_load_mem_bin($mem, $fname, $base) {
 $mem = $mem | 0;
 $fname = $fname | 0;
 $base = $base | 0;
 var $1 = 0, $4 = 0, $c_013_off0 = 0, $_01112 = 0, $8 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 69305
 _pce_log_tag(2, 56168, 42368, (tempInt = STACKTOP, STACKTOP = STACKTOP + 16 | 0, HEAP32[tempInt >> 2] = $fname, HEAP32[tempInt + 8 >> 2] = $base, tempInt) | 0); //@line 69306
 $1 = _fopen($fname | 0, 50976 | 0) | 0; //@line 69307
 if (($1 | 0) == 0) {
  $_0 = 1; //@line 69311
  STACKTOP = sp; //@line 69313
  return $_0 | 0; //@line 69314
 }
 $4 = _fgetc($1 | 0) | 0; //@line 69316
 if (($4 | 0) != -1) {
  $_01112 = $base;
  $c_013_off0 = $4 & 255;
  while (1) {
   _mem_set_uint8_rw($mem, $_01112, $c_013_off0); //@line 69326
   $8 = _fgetc($1 | 0) | 0; //@line 69328
   if (($8 | 0) == -1) {
    break;
   } else {
    $_01112 = $_01112 + 1 | 0;
    $c_013_off0 = $8 & 255;
   }
  }
 }
 _fclose($1 | 0) | 0; //@line 69339
 $_0 = 0; //@line 69341
 STACKTOP = sp; //@line 69343
 return $_0 | 0; //@line 69344
}
function _pce_load_mem($mem, $fname, $fmt, $addr) {
 $mem = $mem | 0;
 $fname = $fname | 0;
 $fmt = $fmt | 0;
 $addr = $addr | 0;
 var $i_0 = 0, $ext_0 = 0, $8 = 0, $_sum = 0, $_024 = 0, $32 = 0, $36 = 0, $42 = 0, $46 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 69359
 if (($fname | 0) == 0) {
  $_0 = 1; //@line 69363
  STACKTOP = sp; //@line 69365
  return $_0 | 0; //@line 69366
 }
 if (($fmt | 0) == 0) {
  $ext_0 = $fname;
  $i_0 = 0;
  label = 18004; //@line 69372
 } else {
  if ((_strcmp($fmt | 0, 39304) | 0) == 0) {
   $ext_0 = $fname;
   $i_0 = 0;
   label = 18004; //@line 69379
  } else {
   $_024 = $fmt; //@line 69381
  }
 }
 do {
  if ((label | 0) == 18004) {
   while (1) {
    label = 0; //@line 69387
    $8 = HEAP8[$fname + $i_0 | 0] | 0; //@line 69391
    if (($8 << 24 >> 24 | 0) == 0) {
     break;
    } else if (($8 << 24 >> 24 | 0) == 46) {
     $_sum = $i_0 + 1 | 0; //@line 69395
     $ext_0 = $fname + $_sum | 0;
     $i_0 = $_sum;
     label = 18004; //@line 69399
     continue;
    } else {
     $ext_0 = $ext_0;
     $i_0 = $i_0 + 1 | 0;
     label = 18004; //@line 69405
     continue;
    }
   }
   if ((_strcasecmp($ext_0 | 0, 36384) | 0) == 0) {
    $_024 = 36384; //@line 69413
    break;
   }
   if ((_strcasecmp($ext_0 | 0, 33456) | 0) == 0) {
    $_024 = 36384; //@line 69420
    break;
   }
   if ((_strcasecmp($ext_0 | 0, 31664) | 0) == 0) {
    $_024 = 31664; //@line 69427
    break;
   }
   if ((_strcasecmp($ext_0 | 0, 30696) | 0) == 0) {
    $_024 = 57888; //@line 69434
    break;
   } else {
    $_0 = 1; //@line 69437
   }
   STACKTOP = sp; //@line 69440
   return $_0 | 0; //@line 69441
  }
 } while (0);
 if ((_strcmp($_024 | 0, 57888) | 0) == 0) {
  $_0 = _pce_load_mem_bin($mem, $fname, $addr) | 0; //@line 69451
  STACKTOP = sp; //@line 69453
  return $_0 | 0; //@line 69454
 }
 if ((_strcmp($_024 | 0, 36384) | 0) == 0) {
  _pce_log_tag(2, 56168, 49648, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $fname, tempInt) | 0); //@line 69460
  $32 = _fopen($fname | 0, 50976) | 0; //@line 69461
  if (($32 | 0) == 0) {
   $_0 = 1; //@line 69465
   STACKTOP = sp; //@line 69467
   return $_0 | 0; //@line 69468
  }
  $36 = _ihex_load_fp($32, $mem, 40) | 0; //@line 69471
  _fclose($32 | 0) | 0; //@line 69472
  $_0 = $36; //@line 69474
  STACKTOP = sp; //@line 69476
  return $_0 | 0; //@line 69477
 }
 if ((_strcmp($_024 | 0, 31664) | 0) != 0) {
  $_0 = 1; //@line 69483
  STACKTOP = sp; //@line 69485
  return $_0 | 0; //@line 69486
 }
 _pce_log_tag(2, 56168, 45840, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $fname, tempInt) | 0); //@line 69488
 $42 = _fopen($fname | 0, 50976) | 0; //@line 69489
 if (($42 | 0) == 0) {
  $_0 = 1; //@line 69493
  STACKTOP = sp; //@line 69495
  return $_0 | 0; //@line 69496
 }
 $46 = _srec_load_fp($42, $mem, 40) | 0; //@line 69499
 _fclose($42 | 0) | 0; //@line 69500
 $_0 = $46; //@line 69502
 STACKTOP = sp; //@line 69504
 return $_0 | 0; //@line 69505
}
function _pce_load_mem_ini($mem, $ini) {
 $mem = $mem | 0;
 $ini = $ini | 0;
 var $fmt = 0, $fname = 0, $addr = 0, $r_0_ph = 0, $sct_0_ph = 0, $sct_0 = 0, $12 = 0, $15 = 0, $r_1 = 0, sp = 0;
 sp = STACKTOP; //@line 69516
 STACKTOP = STACKTOP + 24 | 0; //@line 69516
 $fmt = sp | 0; //@line 69517
 $fname = sp + 8 | 0; //@line 69518
 $addr = sp + 16 | 0; //@line 69519
 $sct_0_ph = 0;
 $r_0_ph = 0;
 L23375 : while (1) {
  $sct_0 = $sct_0_ph; //@line 69525
  do {
   $sct_0 = _ini_next_sct($ini, $sct_0, 57048) | 0; //@line 69528
   if (($sct_0 | 0) == 0) {
    break L23375;
   }
   _ini_get_string($sct_0, 55888, $fmt, 57888) | 0; //@line 69534
   _ini_get_string($sct_0, 55240, $fname, 0) | 0; //@line 69535
   if ((_ini_get_uint32($sct_0, 54496, $addr, 0) | 0) != 0) {
    _ini_get_uint32($sct_0, 53856, $addr, 0) | 0; //@line 69540
   }
   $12 = HEAP32[$fname >> 2] | 0; //@line 69543
  } while (($12 | 0) == 0);
  $15 = _pce_path_get($12) | 0; //@line 69552
  if ((_pce_load_mem($mem, $15, HEAP32[$fmt >> 2] | 0, HEAP32[$addr >> 2] | 0) | 0) == 0) {
   $r_1 = $r_0_ph; //@line 69559
  } else {
   _pce_log(0, 53248, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $15, tempInt) | 0); //@line 69561
   $r_1 = 1; //@line 69563
  }
  _free($15); //@line 69566
  $sct_0_ph = $sct_0;
  $r_0_ph = $r_1;
 }
 STACKTOP = sp; //@line 69570
 return $r_0_ph | 0; //@line 69571
}
function _pce_log_add_fp($fp, $close, $level) {
 $fp = $fp | 0;
 $close = $close | 0;
 $level = $level | 0;
 var $1 = 0, $_0 = 0;
 $1 = HEAP32[15612] | 0; //@line 69583
 if ($1 >>> 0 > 15) {
  $_0 = 1; //@line 69587
  return $_0 | 0; //@line 69590
 }
 HEAP32[62456 + ($1 * 12 | 0) >> 2] = $fp; //@line 69593
 HEAP32[62460 + ($1 * 12 | 0) >> 2] = ($close | 0) != 0; //@line 69597
 HEAP32[62464 + ($1 * 12 | 0) >> 2] = $level; //@line 69599
 HEAP32[15612] = $1 + 1; //@line 69601
 $_0 = 0; //@line 69603
 return $_0 | 0; //@line 69606
}
function _pce_log_set_level($fp, $level) {
 $fp = $fp | 0;
 $level = $level | 0;
 var $1 = 0, $i_0 = 0, label = 0;
 $1 = HEAP32[15612] | 0; //@line 69616
 $i_0 = 0; //@line 69618
 while (1) {
  if ($i_0 >>> 0 >= $1 >>> 0) {
   label = 18048; //@line 69624
   break;
  }
  if ((HEAP32[62456 + ($i_0 * 12 | 0) >> 2] | 0) == ($fp | 0)) {
   break;
  } else {
   $i_0 = $i_0 + 1 | 0; //@line 69635
  }
 }
 if ((label | 0) == 18048) {
  return;
 }
 HEAP32[62464 + ($i_0 * 12 | 0) >> 2] = $level; //@line 69643
 return;
}
function _mon_set_cmd_fct($mon, $fct, $ext) {
 $mon = $mon | 0;
 $fct = $fct | 0;
 $ext = $ext | 0;
 HEAP32[$mon >> 2] = $ext; //@line 69658
 HEAP32[$mon + 4 >> 2] = $fct; //@line 69661
 return;
}
function _mon_set_msg_fct($mon, $fct, $ext) {
 $mon = $mon | 0;
 $fct = $fct | 0;
 $ext = $ext | 0;
 HEAP32[$mon + 8 >> 2] = $ext; //@line 69675
 HEAP32[$mon + 12 >> 2] = $fct; //@line 69678
 return;
}
function _mon_set_get_mem_fct($mon, $ext, $fct) {
 $mon = $mon | 0;
 $ext = $ext | 0;
 $fct = $fct | 0;
 HEAP32[$mon + 16 >> 2] = $ext; //@line 69692
 HEAP32[$mon + 20 >> 2] = $fct; //@line 69695
 return;
}
function _mon_set_set_mem_fct($mon, $ext, $fct) {
 $mon = $mon | 0;
 $ext = $ext | 0;
 $fct = $fct | 0;
 HEAP32[$mon + 24 >> 2] = $ext; //@line 69709
 HEAP32[$mon + 28 >> 2] = $fct; //@line 69712
 return;
}
function _mon_set_memory_mode($mon, $mode) {
 $mon = $mon | 0;
 $mode = $mode | 0;
 HEAP32[$mon + 32 >> 2] = $mode; //@line 69725
 return;
}
function _mon_set_terminate($mon, $val) {
 $mon = $mon | 0;
 $val = $val | 0;
 HEAP8[$mon + 56 | 0] = ($val | 0) != 0 | 0; //@line 69740
 return;
}
function _pce_log_add_fname($fname, $level) {
 $fname = $fname | 0;
 $level = $level | 0;
 var $1 = 0, $4 = 0, $_0 = 0;
 $1 = _fopen($fname | 0, 50912) | 0; //@line 69753
 if (($1 | 0) == 0) {
  $_0 = 1; //@line 69757
  return $_0 | 0; //@line 69760
 }
 $4 = HEAP32[15612] | 0; //@line 69762
 if ($4 >>> 0 > 15) {
  _fclose($1 | 0) | 0; //@line 69766
  $_0 = 1; //@line 69768
  return $_0 | 0; //@line 69771
 } else {
  HEAP32[62456 + ($4 * 12 | 0) >> 2] = $1; //@line 69774
  HEAP32[62460 + ($4 * 12 | 0) >> 2] = 1; //@line 69776
  HEAP32[62464 + ($4 * 12 | 0) >> 2] = $level; //@line 69778
  HEAP32[15612] = $4 + 1; //@line 69780
  $_0 = 0; //@line 69782
  return $_0 | 0; //@line 69785
 }
 return 0;
}
function _pce_log($level, $msg, varrp) {
 $level = $level | 0;
 $msg = $msg | 0;
 varrp = varrp | 0;
 var $va = 0, $1 = 0, $3 = 0, $4 = 0, $6 = 0, $i_06 = 0, $11 = 0, $12 = 0, $14 = 0, $17 = 0, $18 = 0, sp = 0;
 sp = STACKTOP; //@line 69798
 STACKTOP = STACKTOP + 16 | 0; //@line 69798
 $va = sp | 0; //@line 69799
 $1 = HEAP32[15612] | 0; //@line 69800
 if (($1 | 0) == 0) {
  STACKTOP = sp; //@line 69804
  return;
 }
 $3 = $va | 0; //@line 69807
 $4 = $va; //@line 69808
 $i_06 = 0;
 $6 = $1;
 while (1) {
  if ((HEAP32[62464 + ($i_06 * 12 | 0) >> 2] | 0) >>> 0 < $level >>> 0) {
   $17 = $6; //@line 69819
  } else {
   HEAP32[$4 >> 2] = varrp; //@line 69821
   HEAP32[$4 + 4 >> 2] = 0; //@line 69821
   $11 = 62456 + ($i_06 * 12 | 0) | 0; //@line 69822
   $12 = HEAP32[$11 >> 2] | 0; //@line 69823
   _vfprintf($12 | 0, $msg | 0, $3 | 0) | 0; //@line 69824
   $14 = HEAP32[$11 >> 2] | 0; //@line 69826
   _fflush($14 | 0) | 0; //@line 69827
   $17 = HEAP32[15612] | 0; //@line 69830
  }
  $18 = $i_06 + 1 | 0; //@line 69833
  if ($18 >>> 0 < $17 >>> 0) {
   $i_06 = $18;
   $6 = $17;
  } else {
   break;
  }
 }
 STACKTOP = sp; //@line 69842
 return;
}
function _pce_log_va($level, $msg, $va) {
 $level = $level | 0;
 $msg = $msg | 0;
 $va = $va | 0;
 var $1 = 0, $3 = 0, $i_07 = 0, $8 = 0, $9 = 0, $11 = 0, $14 = 0, $15 = 0;
 $1 = HEAP32[15612] | 0; //@line 69855
 if (($1 | 0) == 0) {
  return;
 } else {
  $i_07 = 0;
  $3 = $1;
 }
 while (1) {
  if ((HEAP32[62464 + ($i_07 * 12 | 0) >> 2] | 0) >>> 0 < $level >>> 0) {
   $14 = $3; //@line 69872
  } else {
   $8 = 62456 + ($i_07 * 12 | 0) | 0; //@line 69874
   $9 = HEAP32[$8 >> 2] | 0; //@line 69875
   _vfprintf($9 | 0, $msg | 0, $va | 0) | 0; //@line 69876
   $11 = HEAP32[$8 >> 2] | 0; //@line 69877
   _fflush($11 | 0) | 0; //@line 69878
   $14 = HEAP32[15612] | 0; //@line 69881
  }
  $15 = $i_07 + 1 | 0; //@line 69884
  if ($15 >>> 0 < $14 >>> 0) {
   $i_07 = $15;
   $3 = $14;
  } else {
   break;
  }
 }
 return;
}
function _pce_log_tag($level, $tag, $msg, varrp) {
 $level = $level | 0;
 $tag = $tag | 0;
 $msg = $msg | 0;
 varrp = varrp | 0;
 var $va = 0, $_tag = 0, $2 = 0, $4 = 0, $5 = 0, $7 = 0, $i_09 = 0, $12 = 0, $13 = 0, $15 = 0, $17 = 0, $20 = 0, $21 = 0, sp = 0;
 sp = STACKTOP; //@line 69907
 STACKTOP = STACKTOP + 16 | 0; //@line 69907
 $va = sp | 0; //@line 69908
 $_tag = ($tag | 0) == 0 ? 62896 : $tag; //@line 69910
 $2 = HEAP32[15612] | 0; //@line 69911
 if (($2 | 0) == 0) {
  STACKTOP = sp; //@line 69915
  return;
 }
 $4 = $va | 0; //@line 69918
 $5 = $va; //@line 69919
 $i_09 = 0;
 $7 = $2;
 while (1) {
  if ((HEAP32[62464 + ($i_09 * 12 | 0) >> 2] | 0) >>> 0 < $level >>> 0) {
   $20 = $7; //@line 69930
  } else {
   HEAP32[$5 >> 2] = varrp; //@line 69932
   HEAP32[$5 + 4 >> 2] = 0; //@line 69932
   $12 = 62456 + ($i_09 * 12 | 0) | 0; //@line 69933
   $13 = HEAP32[$12 >> 2] | 0; //@line 69934
   _fprintf($13 | 0, 49592, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $_tag, tempInt) | 0) | 0; //@line 69935
   $15 = HEAP32[$12 >> 2] | 0; //@line 69936
   _vfprintf($15 | 0, $msg | 0, $4 | 0) | 0; //@line 69937
   $17 = HEAP32[$12 >> 2] | 0; //@line 69939
   _fflush($17 | 0) | 0; //@line 69940
   $20 = HEAP32[15612] | 0; //@line 69943
  }
  $21 = $i_09 + 1 | 0; //@line 69946
  if ($21 >>> 0 < $20 >>> 0) {
   $i_09 = $21;
   $7 = $20;
  } else {
   break;
  }
 }
 STACKTOP = sp; //@line 69955
 return;
}
function _mon_init($mon) {
 $mon = $mon | 0;
 var $3 = 0, $4 = 0, $8 = 0, $9 = 0, $13 = 0, $_02227_i = 0, $_02326_i = 0, $14 = 0, $i_024_i = 0, $17 = 0, $18 = 0, $25 = 0, $26 = 0, $i_0_lcssa_i = 0, $29 = 0, $30 = 0, $31 = 0, $33 = 0;
 HEAP32[$mon + 40 >> 2] = 0; //@line 69970
 HEAP16[$mon + 44 >> 1] = 0; //@line 69972
 $3 = $mon + 48 | 0; //@line 69973
 HEAP32[$3 >> 2] = 0; //@line 69974
 $4 = $mon + 52 | 0; //@line 69975
 HEAP32[$4 >> 2] = 0; //@line 69976
 HEAP8[$mon + 56 | 0] = 0; //@line 69978
 HEAP32[$mon + 60 >> 2] = 0; //@line 69980
 _memset($mon | 0, 0, 38); //@line 69982
 $8 = _realloc(0, 120) | 0; //@line 69983
 $9 = $8; //@line 69984
 if (($8 | 0) == 0) {
  return;
 }
 HEAP32[$4 >> 2] = $9; //@line 69991
 $_02326_i = 6800;
 $_02227_i = 10;
 $13 = HEAP32[$3 >> 2] | 0;
 while (1) {
  $14 = $_02326_i | 0; //@line 69999
  L23451 : do {
   if (($13 | 0) == 0) {
    $i_0_lcssa_i = 0; //@line 70004
   } else {
    $i_024_i = $13; //@line 70006
    while (1) {
     $17 = $i_024_i - 1 | 0; //@line 70010
     $18 = $9 + ($17 * 12 | 0) | 0; //@line 70011
     if ((_strcmp(HEAP32[$14 >> 2] | 0, HEAP32[$18 >> 2] | 0) | 0) > -1) {
      $i_0_lcssa_i = $i_024_i; //@line 70018
      break L23451;
     }
     $25 = $9 + ($i_024_i * 12 | 0) | 0; //@line 70022
     $26 = $18; //@line 70023
     HEAP32[$25 >> 2] = HEAP32[$26 >> 2]; //@line 70024
     HEAP32[$25 + 4 >> 2] = HEAP32[$26 + 4 >> 2]; //@line 70024
     HEAP32[$25 + 8 >> 2] = HEAP32[$26 + 8 >> 2]; //@line 70024
     if (($17 | 0) == 0) {
      $i_0_lcssa_i = 0; //@line 70028
      break;
     } else {
      $i_024_i = $17; //@line 70031
     }
    }
   }
  } while (0);
  $29 = $9 + ($i_0_lcssa_i * 12 | 0) | 0; //@line 70038
  $30 = $_02326_i; //@line 70039
  HEAP32[$29 >> 2] = HEAP32[$30 >> 2]; //@line 70040
  HEAP32[$29 + 4 >> 2] = HEAP32[$30 + 4 >> 2]; //@line 70040
  HEAP32[$29 + 8 >> 2] = HEAP32[$30 + 8 >> 2]; //@line 70040
  $31 = $13 + 1 | 0; //@line 70041
  HEAP32[$3 >> 2] = $31; //@line 70042
  $33 = $_02227_i - 1 | 0; //@line 70044
  if (($33 | 0) == 0) {
   break;
  } else {
   $_02326_i = $_02326_i + 12 | 0;
   $_02227_i = $33;
   $13 = $31;
  }
 }
 return;
}
function _mon_cmd_add($mon, $cmd, $cnt) {
 $mon = $mon | 0;
 $cmd = $cmd | 0;
 $cnt = $cnt | 0;
 var $1 = 0, $4 = 0, $8 = 0, $9 = 0, $14 = 0, $_02227 = 0, $_02326 = 0, $15 = 0, $i_024 = 0, $18 = 0, $19 = 0, $26 = 0, $27 = 0, $i_0_lcssa = 0, $30 = 0, $31 = 0, $32 = 0, $34 = 0, $_0 = 0;
 $1 = $mon + 52 | 0; //@line 70069
 $4 = $mon + 48 | 0; //@line 70072
 $8 = _realloc(HEAP32[$1 >> 2] | 0, ((HEAP32[$4 >> 2] | 0) + $cnt | 0) * 12 | 0) | 0; //@line 70076
 $9 = $8; //@line 70077
 if (($8 | 0) == 0) {
  $_0 = 1; //@line 70081
  return $_0 | 0; //@line 70084
 }
 HEAP32[$1 >> 2] = $9; //@line 70086
 if (($cnt | 0) == 0) {
  $_0 = 0; //@line 70090
  return $_0 | 0; //@line 70093
 }
 $_02326 = $cmd;
 $_02227 = $cnt;
 $14 = HEAP32[$4 >> 2] | 0;
 while (1) {
  $15 = $_02326 | 0; //@line 70102
  L23466 : do {
   if (($14 | 0) == 0) {
    $i_0_lcssa = 0; //@line 70107
   } else {
    $i_024 = $14; //@line 70109
    while (1) {
     $18 = $i_024 - 1 | 0; //@line 70113
     $19 = $9 + ($18 * 12 | 0) | 0; //@line 70114
     if ((_strcmp(HEAP32[$15 >> 2] | 0, HEAP32[$19 >> 2] | 0) | 0) > -1) {
      $i_0_lcssa = $i_024; //@line 70121
      break L23466;
     }
     $26 = $9 + ($i_024 * 12 | 0) | 0; //@line 70125
     $27 = $19; //@line 70126
     HEAP32[$26 >> 2] = HEAP32[$27 >> 2]; //@line 70127
     HEAP32[$26 + 4 >> 2] = HEAP32[$27 + 4 >> 2]; //@line 70127
     HEAP32[$26 + 8 >> 2] = HEAP32[$27 + 8 >> 2]; //@line 70127
     if (($18 | 0) == 0) {
      $i_0_lcssa = 0; //@line 70131
      break;
     } else {
      $i_024 = $18; //@line 70134
     }
    }
   }
  } while (0);
  $30 = $9 + ($i_0_lcssa * 12 | 0) | 0; //@line 70141
  $31 = $_02326; //@line 70142
  HEAP32[$30 >> 2] = HEAP32[$31 >> 2]; //@line 70143
  HEAP32[$30 + 4 >> 2] = HEAP32[$31 + 4 >> 2]; //@line 70143
  HEAP32[$30 + 8 >> 2] = HEAP32[$31 + 8 >> 2]; //@line 70143
  $32 = $14 + 1 | 0; //@line 70144
  HEAP32[$4 >> 2] = $32; //@line 70145
  $34 = $_02227 - 1 | 0; //@line 70147
  if (($34 | 0) == 0) {
   $_0 = 0; //@line 70151
   break;
  } else {
   $_02326 = $_02326 + 12 | 0;
   $_02227 = $34;
   $14 = $32;
  }
 }
 return $_0 | 0; //@line 70159
}
function _mon_cmd_add_bp($mon) {
 $mon = $mon | 0;
 var $1 = 0, $4 = 0, $8 = 0, $9 = 0, $_pre_i = 0, $13 = 0, $_pre3 = 0, $i_024_i = 0, $14 = 0, $15 = 0, $22 = 0, $23 = 0, $i_0_lcssa_i = 0, $26 = 0, $27 = 0, $_0_i = 0, $29 = 0, $_pre2 = 0, $i_024_i_1 = 0, $30 = 0, $31 = 0, $38 = 0, $39 = 0, $i_0_lcssa_i_1 = 0, $42 = 0, $43 = 0, $_pre1 = 0, $i_024_i_2 = 0, $45 = 0, $46 = 0, $53 = 0, $54 = 0, $i_0_lcssa_i_2 = 0, $57 = 0, $58 = 0, $_pre = 0, $i_024_i_3 = 0, $60 = 0, $61 = 0, $68 = 0, $69 = 0, $i_0_lcssa_i_3 = 0, $72 = 0, label = 0;
 $1 = $mon + 52 | 0; //@line 70178
 $4 = $mon + 48 | 0; //@line 70181
 $8 = _realloc(HEAP32[$1 >> 2] | 0, ((HEAP32[$4 >> 2] | 0) * 12 | 0) + 48 | 0) | 0; //@line 70185
 $9 = $8; //@line 70186
 if (($8 | 0) == 0) {
  $_0_i = 1; //@line 70190
  return $_0_i | 0; //@line 70193
 }
 HEAP32[$1 >> 2] = $9; //@line 70195
 $_pre_i = HEAP32[$4 >> 2] | 0; //@line 70196
 if (($_pre_i | 0) == 0) {
  HEAP32[$8 >> 2] = HEAP32[1688]; //@line 70200
  HEAP32[$8 + 4 >> 2] = HEAP32[1689]; //@line 70200
  HEAP32[$8 + 8 >> 2] = HEAP32[1690]; //@line 70200
  $13 = $_pre_i + 1 | 0; //@line 70201
  HEAP32[$4 >> 2] = $13; //@line 70202
  $29 = $13; //@line 70204
  label = 18115; //@line 70205
 } else {
  $_pre3 = HEAP32[1688] | 0; //@line 70207
  $i_024_i = $_pre_i; //@line 70209
  while (1) {
   $14 = $i_024_i - 1 | 0; //@line 70212
   $15 = $9 + ($14 * 12 | 0) | 0; //@line 70213
   if ((_strcmp($_pre3 | 0, HEAP32[$15 >> 2] | 0) | 0) > -1) {
    $i_0_lcssa_i = $i_024_i; //@line 70220
    break;
   }
   $22 = $9 + ($i_024_i * 12 | 0) | 0; //@line 70224
   $23 = $15; //@line 70225
   HEAP32[$22 >> 2] = HEAP32[$23 >> 2]; //@line 70226
   HEAP32[$22 + 4 >> 2] = HEAP32[$23 + 4 >> 2]; //@line 70226
   HEAP32[$22 + 8 >> 2] = HEAP32[$23 + 8 >> 2]; //@line 70226
   if (($14 | 0) == 0) {
    $i_0_lcssa_i = 0; //@line 70230
    break;
   } else {
    $i_024_i = $14; //@line 70233
   }
  }
  $26 = $9 + ($i_0_lcssa_i * 12 | 0) | 0; //@line 70238
  HEAP32[$26 >> 2] = HEAP32[1688]; //@line 70239
  HEAP32[$26 + 4 >> 2] = HEAP32[1689]; //@line 70239
  HEAP32[$26 + 8 >> 2] = HEAP32[1690]; //@line 70239
  $27 = $_pre_i + 1 | 0; //@line 70240
  HEAP32[$4 >> 2] = $27; //@line 70241
  if (($27 | 0) == 0) {
   $i_0_lcssa_i_1 = 0; //@line 70245
  } else {
   $29 = $27; //@line 70247
   label = 18115; //@line 70248
  }
 }
 L23483 : do {
  if ((label | 0) == 18115) {
   $_pre2 = HEAP32[1691] | 0; //@line 70254
   $i_024_i_1 = $29; //@line 70256
   while (1) {
    $30 = $i_024_i_1 - 1 | 0; //@line 70259
    $31 = $9 + ($30 * 12 | 0) | 0; //@line 70260
    if ((_strcmp($_pre2 | 0, HEAP32[$31 >> 2] | 0) | 0) > -1) {
     $i_0_lcssa_i_1 = $i_024_i_1; //@line 70267
     break L23483;
    }
    $38 = $9 + ($i_024_i_1 * 12 | 0) | 0; //@line 70271
    $39 = $31; //@line 70272
    HEAP32[$38 >> 2] = HEAP32[$39 >> 2]; //@line 70273
    HEAP32[$38 + 4 >> 2] = HEAP32[$39 + 4 >> 2]; //@line 70273
    HEAP32[$38 + 8 >> 2] = HEAP32[$39 + 8 >> 2]; //@line 70273
    if (($30 | 0) == 0) {
     $i_0_lcssa_i_1 = 0; //@line 70277
     break;
    } else {
     $i_024_i_1 = $30; //@line 70280
    }
   }
  }
 } while (0);
 $42 = $9 + ($i_0_lcssa_i_1 * 12 | 0) | 0; //@line 70287
 HEAP32[$42 >> 2] = HEAP32[1691]; //@line 70288
 HEAP32[$42 + 4 >> 2] = HEAP32[6768 >> 2]; //@line 70288
 HEAP32[$42 + 8 >> 2] = HEAP32[6772 >> 2]; //@line 70288
 $43 = $_pre_i + 2 | 0; //@line 70289
 HEAP32[$4 >> 2] = $43; //@line 70290
 L23489 : do {
  if (($43 | 0) == 0) {
   $i_0_lcssa_i_2 = 0; //@line 70295
  } else {
   $_pre1 = HEAP32[1694] | 0; //@line 70297
   $i_024_i_2 = $43; //@line 70299
   while (1) {
    $45 = $i_024_i_2 - 1 | 0; //@line 70302
    $46 = $9 + ($45 * 12 | 0) | 0; //@line 70303
    if ((_strcmp($_pre1 | 0, HEAP32[$46 >> 2] | 0) | 0) > -1) {
     $i_0_lcssa_i_2 = $i_024_i_2; //@line 70310
     break L23489;
    }
    $53 = $9 + ($i_024_i_2 * 12 | 0) | 0; //@line 70314
    $54 = $46; //@line 70315
    HEAP32[$53 >> 2] = HEAP32[$54 >> 2]; //@line 70316
    HEAP32[$53 + 4 >> 2] = HEAP32[$54 + 4 >> 2]; //@line 70316
    HEAP32[$53 + 8 >> 2] = HEAP32[$54 + 8 >> 2]; //@line 70316
    if (($45 | 0) == 0) {
     $i_0_lcssa_i_2 = 0; //@line 70320
     break;
    } else {
     $i_024_i_2 = $45; //@line 70323
    }
   }
  }
 } while (0);
 $57 = $9 + ($i_0_lcssa_i_2 * 12 | 0) | 0; //@line 70330
 HEAP32[$57 >> 2] = HEAP32[1694]; //@line 70331
 HEAP32[$57 + 4 >> 2] = HEAP32[6780 >> 2]; //@line 70331
 HEAP32[$57 + 8 >> 2] = HEAP32[6784 >> 2]; //@line 70331
 $58 = $_pre_i + 3 | 0; //@line 70332
 HEAP32[$4 >> 2] = $58; //@line 70333
 L23495 : do {
  if (($58 | 0) == 0) {
   $i_0_lcssa_i_3 = 0; //@line 70338
  } else {
   $_pre = HEAP32[1697] | 0; //@line 70340
   $i_024_i_3 = $58; //@line 70342
   while (1) {
    $60 = $i_024_i_3 - 1 | 0; //@line 70345
    $61 = $9 + ($60 * 12 | 0) | 0; //@line 70346
    if ((_strcmp($_pre | 0, HEAP32[$61 >> 2] | 0) | 0) > -1) {
     $i_0_lcssa_i_3 = $i_024_i_3; //@line 70353
     break L23495;
    }
    $68 = $9 + ($i_024_i_3 * 12 | 0) | 0; //@line 70357
    $69 = $61; //@line 70358
    HEAP32[$68 >> 2] = HEAP32[$69 >> 2]; //@line 70359
    HEAP32[$68 + 4 >> 2] = HEAP32[$69 + 4 >> 2]; //@line 70359
    HEAP32[$68 + 8 >> 2] = HEAP32[$69 + 8 >> 2]; //@line 70359
    if (($60 | 0) == 0) {
     $i_0_lcssa_i_3 = 0; //@line 70363
     break;
    } else {
     $i_024_i_3 = $60; //@line 70366
    }
   }
  }
 } while (0);
 $72 = $9 + ($i_0_lcssa_i_3 * 12 | 0) | 0; //@line 70373
 HEAP32[$72 >> 2] = HEAP32[1697]; //@line 70374
 HEAP32[$72 + 4 >> 2] = HEAP32[6792 >> 2]; //@line 70374
 HEAP32[$72 + 8 >> 2] = HEAP32[6796 >> 2]; //@line 70374
 HEAP32[$4 >> 2] = $_pre_i + 4; //@line 70376
 $_0_i = 0; //@line 70377
 return $_0_i | 0; //@line 70380
}
function _msg_is_message($msg, $val) {
 $msg = $msg | 0;
 $val = $val | 0;
 var $1 = 0, $3 = 0, $_089 = 0, $6 = 0, $_1 = 0, $8 = 0, $__1 = 0, $12 = 0, $_0 = 0, label = 0;
 $1 = HEAP8[$msg] | 0; //@line 70391
 if ($1 << 24 >> 24 == 0) {
  $_0 = 0; //@line 70395
  return $_0 | 0; //@line 70398
 } else {
  $_089 = $msg;
  $3 = $1;
 }
 while (1) {
  if ((_strcmp($_089 | 0, $val | 0) | 0) == 0) {
   $_0 = 1; //@line 70409
   label = 18135; //@line 70410
   break;
  } else {
   $_1 = $_089;
   $6 = $3;
  }
  while (1) {
   if (($6 << 24 >> 24 | 0) == 46 | ($6 << 24 >> 24 | 0) == 0) {
    break;
   }
   $8 = $_1 + 1 | 0; //@line 70421
   $_1 = $8;
   $6 = HEAP8[$8] | 0;
  }
  $__1 = $6 << 24 >> 24 == 46 ? $_1 + 1 | 0 : $_1; //@line 70428
  $12 = HEAP8[$__1] | 0; //@line 70429
  if ($12 << 24 >> 24 == 0) {
   $_0 = 0; //@line 70433
   label = 18136; //@line 70434
   break;
  } else {
   $_089 = $__1;
   $3 = $12;
  }
 }
 if ((label | 0) == 18136) {
  return $_0 | 0; //@line 70443
 } else if ((label | 0) == 18135) {
  return $_0 | 0; //@line 70448
 }
 return 0;
}
function _msg_get_uint($str, $val) {
 $str = $str | 0;
 $val = $val | 0;
 var $end_i = 0, $2 = 0, $3 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 70458
 STACKTOP = STACKTOP + 8 | 0; //@line 70458
 $end_i = sp | 0; //@line 70459
 $2 = _strtoul($str | 0, $end_i | 0, 0) | 0; //@line 70461
 $3 = HEAP32[$end_i >> 2] | 0; //@line 70462
 do {
  if (($3 | 0) == ($str | 0)) {
   $_0 = 1; //@line 70467
  } else {
   if ((HEAP8[$3] | 0) != 0) {
    $_0 = 1; //@line 70473
    break;
   }
   HEAP32[$val >> 2] = $2; //@line 70476
   $_0 = 0; //@line 70478
  }
 } while (0);
 STACKTOP = sp; //@line 70482
 return $_0 | 0; //@line 70483
}
function _msg_get_sint($str, $val) {
 $str = $str | 0;
 $val = $val | 0;
 var $end_i = 0, $2 = 0, $3 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 70492
 STACKTOP = STACKTOP + 8 | 0; //@line 70492
 $end_i = sp | 0; //@line 70493
 $2 = _strtol($str | 0, $end_i | 0, 0) | 0; //@line 70495
 $3 = HEAP32[$end_i >> 2] | 0; //@line 70496
 do {
  if (($3 | 0) == ($str | 0)) {
   $_0 = 1; //@line 70501
  } else {
   if ((HEAP8[$3] | 0) != 0) {
    $_0 = 1; //@line 70507
    break;
   }
   HEAP32[$val >> 2] = $2; //@line 70510
   $_0 = 0; //@line 70512
  }
 } while (0);
 STACKTOP = sp; //@line 70516
 return $_0 | 0; //@line 70517
}
function _msg_get_bool($str, $val) {
 $str = $str | 0;
 $val = $val | 0;
 var $end_i = 0, $16 = 0, $17 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 70528
 STACKTOP = STACKTOP + 8 | 0; //@line 70528
 $end_i = sp | 0; //@line 70529
 do {
  if (($str | 0) == 0) {
   label = 18148; //@line 70534
  } else {
   if ((HEAP8[$str] | 0) == 0) {
    label = 18148; //@line 70540
    break;
   }
   if ((_strcmp($str | 0, 50480) | 0) == 0) {
    HEAP32[$val >> 2] = 1; //@line 70547
    $_0 = 0; //@line 70549
    break;
   }
   if ((_strcmp($str | 0, 56056) | 0) == 0) {
    HEAP32[$val >> 2] = 0; //@line 70556
    $_0 = 0; //@line 70558
    break;
   }
   $16 = _strtoul($str | 0, $end_i | 0, 0) | 0; //@line 70562
   $17 = HEAP32[$end_i >> 2] | 0; //@line 70563
   if (($17 | 0) == ($str | 0)) {
    $_0 = 1; //@line 70567
    break;
   }
   if ((HEAP8[$17] | 0) != 0) {
    $_0 = 1; //@line 70574
    break;
   }
   HEAP32[$val >> 2] = ($16 | 0) != 0; //@line 70579
   $_0 = 0; //@line 70581
  }
 } while (0);
 if ((label | 0) == 18148) {
  HEAP32[$val >> 2] = 0; //@line 70585
  $_0 = 0; //@line 70587
 }
 STACKTOP = sp; //@line 70590
 return $_0 | 0; //@line 70591
}
function _msg_get_prefix_ulng($str, $val, $sep, $trim) {
 $str = $str | 0;
 $val = $val | 0;
 $sep = $sep | 0;
 $trim = $trim | 0;
 var $end_i = 0, $tmp = 0, $1 = 0, $2 = 0, $3 = 0, $5 = 0, $6 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 70603
 STACKTOP = STACKTOP + 16 | 0; //@line 70603
 $end_i = sp | 0; //@line 70604
 $tmp = sp + 8 | 0; //@line 70605
 $1 = HEAP32[$str >> 2] | 0; //@line 70606
 HEAP32[$tmp >> 2] = $1; //@line 70607
 $2 = _str_extract_alloc($1, $sep, $tmp) | 0; //@line 70608
 $3 = _str_trim($2, 49544, 49544) | 0; //@line 70609
 $5 = _strtoul($3 | 0, $end_i | 0, 0) | 0; //@line 70611
 $6 = HEAP32[$end_i >> 2] | 0; //@line 70612
 do {
  if (($6 | 0) != ($3 | 0)) {
   if ((HEAP8[$6] | 0) != 0) {
    break;
   }
   HEAP32[$val >> 2] = $5; //@line 70623
   _free($2); //@line 70624
   HEAP32[$str >> 2] = _str_ltrim(HEAP32[$tmp >> 2] | 0, $trim) | 0; //@line 70627
   $_0 = 0; //@line 70629
   STACKTOP = sp; //@line 70631
   return $_0 | 0; //@line 70632
  }
 } while (0);
 _free($2); //@line 70635
 $_0 = 1; //@line 70637
 STACKTOP = sp; //@line 70639
 return $_0 | 0; //@line 70640
}
function _msg_get_prefix_uint($str, $val, $sep, $trim) {
 $str = $str | 0;
 $val = $val | 0;
 $sep = $sep | 0;
 $trim = $trim | 0;
 var $tmp = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 70651
 STACKTOP = STACKTOP + 8 | 0; //@line 70651
 $tmp = sp | 0; //@line 70652
 if ((_msg_get_prefix_ulng($str, $tmp, $sep, $trim) | 0) != 0) {
  $_0 = 1; //@line 70657
  STACKTOP = sp; //@line 70659
  return $_0 | 0; //@line 70660
 }
 HEAP32[$val >> 2] = HEAP32[$tmp >> 2]; //@line 70663
 $_0 = 0; //@line 70665
 STACKTOP = sp; //@line 70667
 return $_0 | 0; //@line 70668
}
function _pce_path_add($dir, $atend) {
 $dir = $dir | 0;
 $atend = $atend | 0;
 var $n_0 = 0, $4 = 0, $13 = 0, $str_0 = 0, $22 = 0, $23 = 0, $28 = 0, $i_025 = 0, $32 = 0, $_0 = 0, label = 0;
 $n_0 = _strlen($dir | 0) | 0; //@line 70684
 while (1) {
  if (($n_0 | 0) == 0) {
   $str_0 = 0; //@line 70690
   break;
  }
  $4 = $n_0 - 1 | 0; //@line 70693
  if ((HEAP8[$dir + $4 | 0] | 0) == 47) {
   $n_0 = $4; //@line 70698
  } else {
   label = 18172; //@line 70700
   break;
  }
 }
 do {
  if ((label | 0) == 18172) {
   if (($n_0 | 0) == 0) {
    $str_0 = 0; //@line 70707
    break;
   } else if (($n_0 | 0) == 1) {
    if ((HEAP8[$dir] | 0) == 46) {
     $str_0 = 0; //@line 70714
     break;
    }
   }
   $13 = _malloc($n_0 + 1 | 0) | 0; //@line 70719
   if (($13 | 0) == 0) {
    $_0 = 1; //@line 70723
    return $_0 | 0; //@line 70726
   } else {
    _memcpy($13 | 0, $dir | 0, $n_0) | 0; //@line 70728
    HEAP8[$13 + $n_0 | 0] = 0; //@line 70730
    $str_0 = $13; //@line 70731
    break;
   }
  }
 } while (0);
 $22 = _realloc(HEAP32[15592] | 0, (HEAP32[15594] << 2) + 4 | 0) | 0; //@line 70742
 $23 = $22; //@line 70743
 if (($22 | 0) == 0) {
  _free($str_0); //@line 70747
  $_0 = 1; //@line 70749
  return $_0 | 0; //@line 70752
 }
 $28 = HEAP32[15594] | 0; //@line 70755
 if (($atend | 0) == 0) {
  if (($28 | 0) != 0) {
   $i_025 = $28; //@line 70761
   while (1) {
    $32 = $i_025 - 1 | 0; //@line 70764
    HEAP32[$23 + ($i_025 << 2) >> 2] = HEAP32[$23 + ($32 << 2) >> 2]; //@line 70768
    if (($32 | 0) == 0) {
     break;
    } else {
     $i_025 = $32; //@line 70774
    }
   }
  }
  HEAP32[$23 >> 2] = $str_0; //@line 70778
 } else {
  HEAP32[$23 + ($28 << 2) >> 2] = $str_0; //@line 70781
 }
 HEAP32[15594] = $28 + 1; //@line 70785
 HEAP32[15592] = $23; //@line 70786
 $_0 = 0; //@line 70788
 return $_0 | 0; //@line 70791
}
function _pce_set_fd_interactive($fd, $interactive) {
 $fd = $fd | 0;
 $interactive = $interactive | 0;
 if (!(HEAP8[6672] | 0)) {
  HEAP8[6672] = 1; //@line 70804
 }
 return;
}
function _pce_stop() {
 if (!(HEAP8[6672] | 0)) {
  HEAP8[6672] = 1; //@line 70819
 }
 return;
}
function _pce_start($brk) {
 $brk = $brk | 0;
 if (($brk | 0) != 0) {
  HEAP32[$brk >> 2] = 0; //@line 70835
 }
 if (HEAP8[6672] | 0) {
  return;
 }
 HEAP8[6672] = 1; //@line 70844
 return;
}
function _pce_path_set($dir) {
 $dir = $dir | 0;
 var $1 = 0, $7 = 0, $10 = 0, $11 = 0, $i_03_i = 0, $14 = 0, $17 = 0, $_lcssa_i = 0, $_0 = 0, $atend_0 = 0;
 $1 = HEAP8[$dir] | 0; //@line 70858
 if (($1 << 24 >> 24 | 0) == 45) {
  $atend_0 = 0;
  $_0 = $dir + 1 | 0;
 } else if (($1 << 24 >> 24 | 0) == 61) {
  $7 = $dir + 1 | 0; //@line 70864
  $10 = HEAP32[15592] | 0; //@line 70867
  if ((HEAP32[15594] | 0) == 0) {
   $_lcssa_i = $10; //@line 70870
  } else {
   $i_03_i = 0;
   $11 = $10;
   while (1) {
    _free(HEAP32[$11 + ($i_03_i << 2) >> 2] | 0); //@line 70878
    $14 = $i_03_i + 1 | 0; //@line 70879
    $17 = HEAP32[15592] | 0; //@line 70882
    if ($14 >>> 0 < (HEAP32[15594] | 0) >>> 0) {
     $i_03_i = $14;
     $11 = $17;
    } else {
     $_lcssa_i = $17; //@line 70887
     break;
    }
   }
  }
  _free($_lcssa_i); //@line 70894
  HEAP32[15594] = 0; //@line 70895
  HEAP32[15592] = 0; //@line 70896
  $atend_0 = 1;
  $_0 = $7;
 } else if (($1 << 24 >> 24 | 0) == 43) {
  $atend_0 = 1;
  $_0 = $dir + 1 | 0;
 } else {
  $atend_0 = 1;
  $_0 = $dir;
 }
 return _pce_path_add($_0, $atend_0) | 0; //@line 70910
}
function _pce_path_get($fname) {
 $fname = $fname | 0;
 var $3 = 0, $5 = 0, $i_021 = 0, $14 = 0, $17 = 0, $19 = 0, $24 = 0, $25 = 0, $26 = 0, $28 = 0, $32 = 0, $_0_i15_ph = 0, $37 = 0, $42 = 0, $_0 = 0, label = 0;
 if (($fname | 0) == 0) {
  $_0 = 0; //@line 70926
  return $_0 | 0; //@line 70929
 }
 $3 = _strlen($fname | 0) | 0; //@line 70931
 $5 = _malloc($3 + 1 | 0) | 0; //@line 70933
 if (($5 | 0) == 0) {
  $_0 = 0; //@line 70937
  return $_0 | 0; //@line 70940
 }
 _memcpy($5 | 0, $fname | 0, $3) | 0; //@line 70942
 HEAP8[$5 + $3 | 0] = 0; //@line 70944
 if ((HEAP8[$5] | 0) == 47 | (HEAP32[15594] | 0) == 0) {
  $_0 = $5; //@line 70952
  return $_0 | 0; //@line 70955
 } else {
  $i_021 = 0; //@line 70957
 }
 while (1) {
  $14 = HEAP32[(HEAP32[15592] | 0) + ($i_021 << 2) >> 2] | 0; //@line 70963
  if (($14 | 0) == 0) {
   $17 = _strlen($5 | 0) | 0; //@line 70967
   $19 = _malloc($17 + 1 | 0) | 0; //@line 70969
   if (($19 | 0) == 0) {
    label = 18216; //@line 70973
    break;
   }
   _memcpy($19 | 0, $5 | 0, $17) | 0; //@line 70976
   HEAP8[$19 + $17 | 0] = 0; //@line 70978
   $_0_i15_ph = $19; //@line 70980
  } else {
   $24 = _strlen($14 | 0) | 0; //@line 70982
   $25 = _strlen($5 | 0) | 0; //@line 70983
   $26 = $25 + $24 | 0; //@line 70984
   $28 = _malloc($26 + 2 | 0) | 0; //@line 70986
   if (($28 | 0) == 0) {
    label = 18216; //@line 70990
    break;
   }
   _memcpy($28 | 0, $14 | 0, $24) | 0; //@line 70993
   HEAP8[$28 + $24 | 0] = 47; //@line 70995
   $32 = $28 + ($24 + 1) | 0; //@line 70997
   _memcpy($32 | 0, $5 | 0, $25) | 0; //@line 70998
   HEAP8[$28 + ($26 + 1) | 0] = 0; //@line 71001
   $_0_i15_ph = $28; //@line 71003
  }
  $37 = _fopen($_0_i15_ph | 0, 50336) | 0; //@line 71006
  if (($37 | 0) != 0) {
   label = 18218; //@line 71010
   break;
  }
  _free($_0_i15_ph); //@line 71013
  $42 = $i_021 + 1 | 0; //@line 71014
  if ($42 >>> 0 < (HEAP32[15594] | 0) >>> 0) {
   $i_021 = $42; //@line 71019
  } else {
   $_0 = $5; //@line 71021
   label = 18225; //@line 71022
   break;
  }
 }
 if ((label | 0) == 18218) {
  _fclose($37 | 0) | 0; //@line 71027
  _free($5); //@line 71028
  $_0 = $_0_i15_ph; //@line 71030
  return $_0 | 0; //@line 71033
 } else if ((label | 0) == 18225) {
  return $_0 | 0; //@line 71038
 } else if ((label | 0) == 18216) {
  _free($5); //@line 71041
  $_0 = 0; //@line 71043
  return $_0 | 0; //@line 71046
 }
 return 0;
}
function _pce_path_ini($sct) {
 $sct = $sct | 0;
 var $val_0 = 0, $2 = 0, $5 = 0, $8 = 0, $14 = 0, $17 = 0, $18 = 0, $i_03_i_i = 0, $21 = 0, $24 = 0, $_lcssa_i_i = 0, $_0_i = 0, $atend_0_i = 0, $_0 = 0, label = 0;
 $val_0 = 0; //@line 71060
 while (1) {
  $2 = _ini_next_val($sct, $val_0, 56040) | 0; //@line 71063
  if (($2 | 0) == 0) {
   $_0 = 0; //@line 71067
   label = 18240; //@line 71068
   break;
  }
  $5 = _ini_val_get_str($2) | 0; //@line 71071
  if (($5 | 0) == 0) {
   $_0 = 1; //@line 71075
   label = 18239; //@line 71076
   break;
  }
  $8 = HEAP8[$5] | 0; //@line 71079
  if (($8 << 24 >> 24 | 0) == 43) {
   $atend_0_i = 1;
   $_0_i = $5 + 1 | 0;
  } else if (($8 << 24 >> 24 | 0) == 61) {
   $14 = $5 + 1 | 0; //@line 71085
   $17 = HEAP32[15592] | 0; //@line 71088
   if ((HEAP32[15594] | 0) == 0) {
    $_lcssa_i_i = $17; //@line 71091
   } else {
    $i_03_i_i = 0;
    $18 = $17;
    while (1) {
     _free(HEAP32[$18 + ($i_03_i_i << 2) >> 2] | 0); //@line 71099
     $21 = $i_03_i_i + 1 | 0; //@line 71100
     $24 = HEAP32[15592] | 0; //@line 71103
     if ($21 >>> 0 < (HEAP32[15594] | 0) >>> 0) {
      $i_03_i_i = $21;
      $18 = $24;
     } else {
      $_lcssa_i_i = $24; //@line 71108
      break;
     }
    }
   }
   _free($_lcssa_i_i); //@line 71115
   HEAP32[15594] = 0; //@line 71116
   HEAP32[15592] = 0; //@line 71117
   $atend_0_i = 1;
   $_0_i = $14;
  } else if (($8 << 24 >> 24 | 0) == 45) {
   $atend_0_i = 0;
   $_0_i = $5 + 1 | 0;
  } else {
   $atend_0_i = 1;
   $_0_i = $5;
  }
  if ((_pce_path_add($_0_i, $atend_0_i) | 0) == 0) {
   $val_0 = $2; //@line 71133
  } else {
   $_0 = 1; //@line 71135
   label = 18238; //@line 71136
   break;
  }
 }
 if ((label | 0) == 18238) {
  return $_0 | 0; //@line 71143
 } else if ((label | 0) == 18239) {
  return $_0 | 0; //@line 71148
 } else if ((label | 0) == 18240) {
  return $_0 | 0; //@line 71153
 }
 return 0;
}
function _str_cat_alloc($str1, $str2) {
 $str1 = $str1 | 0;
 $str2 = $str2 | 0;
 var $5 = 0, $10 = 0, $11 = 0, $13 = 0, $21 = 0, $_0 = 0;
 if (($str1 | 0) == 0) {
  $5 = 0; //@line 71168
 } else {
  $5 = _strlen($str1 | 0) | 0; //@line 71172
 }
 if (($str2 | 0) == 0) {
  $10 = 0; //@line 71178
 } else {
  $10 = _strlen($str2 | 0) | 0; //@line 71182
 }
 $11 = $10 + $5 | 0; //@line 71185
 $13 = _malloc($11 + 1 | 0) | 0; //@line 71187
 if (($13 | 0) == 0) {
  $_0 = 0; //@line 71191
  return $_0 | 0; //@line 71194
 }
 if (($5 | 0) != 0) {
  _memcpy($13 | 0, $str1 | 0, $5) | 0; //@line 71199
 }
 if (($10 | 0) != 0) {
  $21 = $13 + $5 | 0; //@line 71205
  _memcpy($21 | 0, $str2 | 0, $10) | 0; //@line 71206
 }
 HEAP8[$13 + $11 | 0] = 0; //@line 71210
 $_0 = $13; //@line 71212
 return $_0 | 0; //@line 71215
}
function _str_trim($str, $left, $right) {
 $str = $str | 0;
 $left = $left | 0;
 $right = $right | 0;
 var $_016 = 0, $4 = 0, $_1 = 0, $i_0 = 0, $17 = 0, $i_0_lcssa = 0, $_0 = 0;
 if (($str | 0) == 0) {
  $_0 = 0; //@line 71231
  return $_0 | 0; //@line 71234
 }
 L23666 : do {
  if (($left | 0) == 0) {
   $_1 = $str; //@line 71240
  } else {
   $_016 = $str; //@line 71242
   while (1) {
    $4 = HEAP8[$_016] | 0; //@line 71245
    if ($4 << 24 >> 24 == 0) {
     $_1 = $_016; //@line 71249
     break L23666;
    }
    if ((_strchr($left | 0, $4 << 24 >> 24 | 0) | 0) == 0) {
     $_1 = $_016; //@line 71258
     break;
    } else {
     $_016 = $_016 + 1 | 0; //@line 71261
    }
   }
  }
 } while (0);
 if (($right | 0) == 0) {
  $_0 = $_1; //@line 71270
  return $_0 | 0; //@line 71273
 }
 $i_0 = _strlen($_1 | 0) | 0; //@line 71277
 while (1) {
  if (($i_0 | 0) == 0) {
   $i_0_lcssa = 0; //@line 71283
   break;
  }
  $17 = $i_0 - 1 | 0; //@line 71286
  if ((_strchr($right | 0, HEAP8[$_1 + $17 | 0] | 0) | 0) == 0) {
   $i_0_lcssa = $i_0; //@line 71294
   break;
  } else {
   $i_0 = $17; //@line 71297
  }
 }
 HEAP8[$_1 + $i_0_lcssa | 0] = 0; //@line 71302
 $_0 = $_1; //@line 71304
 return $_0 | 0; //@line 71307
}
function _str_ltrim($str, $left) {
 $str = $str | 0;
 $left = $left | 0;
 var $_08 = 0, $4 = 0, $_0 = 0;
 L23680 : do {
  if (($str | 0) == 0) {
   $_0 = 0; //@line 71322
  } else {
   if (($left | 0) == 0) {
    $_0 = $str; //@line 71327
    break;
   } else {
    $_08 = $str; //@line 71330
   }
   while (1) {
    $4 = HEAP8[$_08] | 0; //@line 71334
    if ($4 << 24 >> 24 == 0) {
     $_0 = $_08; //@line 71338
     break L23680;
    }
    if ((_strchr($left | 0, $4 << 24 >> 24 | 0) | 0) == 0) {
     $_0 = $_08; //@line 71346
     break;
    } else {
     $_08 = $_08 + 1 | 0; //@line 71349
    }
   }
  }
 } while (0);
 return $_0 | 0; //@line 71356
}
function _str_extract_alloc($str, $sep, $rest) {
 $str = $str | 0;
 $sep = $sep | 0;
 $rest = $rest | 0;
 var $i_0 = 0, $3 = 0, $4 = 0, $9 = 0, $_pre_phi = 0, $10 = 0, $i_012_i = 0, $14 = 0, $18 = 0, $i_0_lcssa_i = 0, $_0_i = 0, $_0 = 0, label = 0;
 if (($str | 0) == 0) {
  $_0 = 0; //@line 71373
  return $_0 | 0; //@line 71376
 } else {
  $i_0 = 0; //@line 71378
 }
 while (1) {
  $3 = HEAP8[$str + $i_0 | 0] | 0; //@line 71383
  $4 = $3 << 24 >> 24 == 0; //@line 71384
  if ($4) {
   label = 18274; //@line 71387
   break;
  }
  $9 = $i_0 + 1 | 0; //@line 71393
  if ((_strchr($sep | 0, $3 << 24 >> 24 | 0) | 0) == 0) {
   $i_0 = $9; //@line 71395
  } else {
   $_pre_phi = $9; //@line 71397
   break;
  }
 }
 if ((label | 0) == 18274) {
  $_pre_phi = $i_0 + 1 | 0; //@line 71404
 }
 $10 = _malloc($_pre_phi) | 0; //@line 71407
 if (($10 | 0) == 0) {
  $_0_i = 0; //@line 71411
 } else {
  L23697 : do {
   if (($i_0 | 0) == 0) {
    $i_0_lcssa_i = 0; //@line 71417
   } else {
    $i_012_i = 0; //@line 71419
    while (1) {
     $14 = HEAP8[$str + $i_012_i | 0] | 0; //@line 71423
     if ($14 << 24 >> 24 == 0) {
      $i_0_lcssa_i = $i_012_i; //@line 71426
      break L23697;
     }
     HEAP8[$10 + $i_012_i | 0] = $14; //@line 71430
     $18 = $i_012_i + 1 | 0; //@line 71431
     if ($18 >>> 0 < $i_0 >>> 0) {
      $i_012_i = $18; //@line 71435
     } else {
      $i_0_lcssa_i = $18; //@line 71437
      break;
     }
    }
   }
  } while (0);
  HEAP8[$10 + $i_0_lcssa_i | 0] = 0; //@line 71445
  $_0_i = $10; //@line 71447
 }
 if ((HEAP32[$rest >> 2] | 0) == 0) {
  $_0 = $_0_i; //@line 71454
  return $_0 | 0; //@line 71457
 }
 HEAP32[$rest >> 2] = $str + ($4 ? $i_0 : $_pre_phi); //@line 71461
 $_0 = $_0_i; //@line 71463
 return $_0 | 0; //@line 71466
}
function _pce_usleep($usec) {
 $usec = $usec | 0;
 var $t = 0, $6 = 0, sp = 0;
 sp = STACKTOP; //@line 71474
 STACKTOP = STACKTOP + 8 | 0; //@line 71474
 $t = sp | 0; //@line 71475
 HEAP32[$t >> 2] = ($usec >>> 0) / 1e6 | 0; //@line 71478
 HEAP32[$t + 4 >> 2] = (($usec >>> 0) % 1e6 | 0) * 1e3 | 0; //@line 71482
 $6 = _nanosleep($t | 0, 0) | 0; //@line 71483
 STACKTOP = sp; //@line 71484
 return $6 | 0; //@line 71485
}
function _pce_get_interval_us($val) {
 $val = $val | 0;
 var $tv = 0, $9 = 0, $11 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 71494
 STACKTOP = STACKTOP + 8 | 0; //@line 71494
 $tv = sp | 0; //@line 71495
 if ((_gettimeofday($tv | 0, 0) | 0) != 0) {
  $_0 = 0; //@line 71500
  STACKTOP = sp; //@line 71502
  return $_0 | 0; //@line 71503
 }
 $9 = ((HEAP32[$tv >> 2] | 0) * 1e6 | 0) + (HEAP32[$tv + 4 >> 2] | 0) | 0; //@line 71510
 $11 = $9 - (HEAP32[$val >> 2] | 0) | 0; //@line 71512
 HEAP32[$val >> 2] = $9; //@line 71513
 $_0 = $11; //@line 71515
 STACKTOP = sp; //@line 71517
 return $_0 | 0; //@line 71518
}
function _ini_read_str($sct, $str) {
 $sct = $sct | 0;
 $str = $str | 0;
 var $scn = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 71527
 STACKTOP = STACKTOP + 1304 | 0; //@line 71527
 $scn = sp | 0; //@line 71528
 _scn_init($scn); //@line 71530
 _scn_set_str($scn, $str); //@line 71531
 if ((_parse_section($scn, $sct, sp + 1048 | 0) | 0) != 0) {
  _parse_error($scn, 50088, 1); //@line 71537
  _scn_free($scn); //@line 71538
  $_0 = 1; //@line 71540
  STACKTOP = sp; //@line 71542
  return $_0 | 0; //@line 71543
 }
 if ((_scn_get_chr($scn, 0) | 0) << 24 >> 24 == 0) {
  _scn_free($scn); //@line 71549
  $_0 = 0; //@line 71551
  STACKTOP = sp; //@line 71553
  return $_0 | 0; //@line 71554
 } else {
  _parse_error($scn, 50088, 1); //@line 71556
  _scn_free($scn); //@line 71557
  $_0 = 1; //@line 71559
  STACKTOP = sp; //@line 71561
  return $_0 | 0; //@line 71562
 }
 return 0;
}
function _parse_section($scn, $sct, $buf) {
 $scn = $scn | 0;
 $sct = $sct | 0;
 $buf = $buf | 0;
 var $val_i = 0, $tmp = 0, $4 = 0, $6 = 0, $7 = 0, $18 = 0, $39 = 0, $46 = 0, $done_0_i = 0, $skip_0_i = 0, $done_1_i = 0, $88 = 0, $done_2_i = 0, $skip_1_i = 0, $100 = 0, $107 = 0, $108 = 0, $name_0_i39 = 0, $114 = 0, $115 = 0, $117 = 0, $119 = 0, $name_0_i = 0, $126 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 71586
 STACKTOP = STACKTOP + 32 | 0; //@line 71586
 $val_i = sp | 0; //@line 71587
 $tmp = sp + 16 | 0; //@line 71588
 if ((_scn_match_name($scn, $buf, 256) | 0) == 0) {
  $_0 = 0; //@line 71593
  STACKTOP = sp; //@line 71595
  return $_0 | 0; //@line 71596
 }
 $4 = $val_i + 8 | 0; //@line 71599
 $6 = $val_i + 12 | 0; //@line 71601
 $7 = $tmp + 8 | 0; //@line 71602
 L23727 : while (1) {
  if ((_strcmp($buf | 0, 31640) | 0) == 0) {
   if ((_scn_match_name($scn, $buf, 256) | 0) == 0) {
    $_0 = 1; //@line 71613
    label = 18359; //@line 71614
    break;
   }
  }
  L23732 : do {
   if ((_scn_match($scn, 30656) | 0) == 0) {
    if ((_scn_match($scn, 57016) | 0) != 0) {
     _ini_val_init($tmp, 0); //@line 71627
     if ((_ini_eval($scn, $sct, $tmp) | 0) != 0) {
      label = 18316; //@line 71632
      break L23727;
     }
     if ((HEAP32[$7 >> 2] | 0) == 0) {
      label = 18316; //@line 71639
      break L23727;
     }
     if ((_ini_get_val($sct, $buf, 0) | 0) == 0) {
      $39 = _ini_get_val($sct, $buf, 1) | 0; //@line 71646
      if (($39 | 0) == 0) {
       label = 18316; //@line 71650
       break L23727;
      }
      _ini_val_copy($39, $tmp); //@line 71653
     }
     _ini_val_free($tmp); //@line 71656
     break;
    }
    if ((_scn_match($scn, 55856) | 0) != 0) {
     $46 = _ini_get_val($sct, $buf, 1) | 0; //@line 71664
     if (($46 | 0) == 0) {
      $_0 = 1; //@line 71668
      label = 18364; //@line 71669
      break L23727;
     }
     if ((_ini_eval($scn, $sct, $46) | 0) != 0) {
      $_0 = 1; //@line 71676
      label = 18357; //@line 71677
      break L23727;
     }
     if ((HEAP32[$46 + 8 >> 2] | 0) == 0) {
      $_0 = 1; //@line 71685
      label = 18350; //@line 71686
      break L23727;
     } else {
      break;
     }
    }
    if ((_strcmp($buf | 0, 55216) | 0) != 0) {
     if ((_strcmp($buf | 0, 54472) | 0) != 0) {
      $_0 = 1; //@line 71700
      label = 18365; //@line 71701
      break L23727;
     }
     $100 = _scn_match($scn, 53816) | 0; //@line 71704
     if ((_scn_match_string($scn, $buf, 256) | 0) == 0) {
      $_0 = 1; //@line 71709
      label = 18362; //@line 71710
      break L23727;
     }
     if ((_scn_add_file($scn, $buf, 0, 1) | 0) == 0 | ($100 | 0) != 0) {
      break;
     } else {
      label = 18341; //@line 71721
      break L23727;
     }
    }
    _ini_val_init($val_i, 0); //@line 71725
    if ((_ini_eval($scn, $sct, $val_i) | 0) != 0) {
     label = 18324; //@line 71730
     break L23727;
    }
    if ((HEAP32[$4 >> 2] | 0) == 1) {
     if ((HEAP32[$6 >> 2] | 0) == 0) {
      label = 18327; //@line 71741
     } else {
      $skip_0_i = 0;
      $done_0_i = 1;
     }
    } else {
     label = 18327; //@line 71746
    }
    if ((label | 0) == 18327) {
     label = 0; //@line 71749
     $skip_0_i = 1;
     $done_0_i = 0;
    }
    _ini_val_free($val_i); //@line 71754
    if ((_parse_block($scn, $sct, $buf, $skip_0_i) | 0) == 0) {
     $done_1_i = $done_0_i; //@line 71759
    } else {
     $_0 = 1; //@line 71761
     label = 18349; //@line 71762
     break L23727;
    }
    while (1) {
     if ((_scn_match_ident($scn, 51704) | 0) == 0) {
      break L23732;
     }
     if ((_scn_match_ident($scn, 55216) | 0) == 0) {
      break;
     }
     _ini_val_init($val_i, 0); //@line 71779
     if ((_ini_eval($scn, $sct, $val_i) | 0) != 0) {
      label = 18332; //@line 71784
      break L23727;
     }
     do {
      if (($done_1_i | 0) == 0) {
       if ((HEAP32[$4 >> 2] | 0) != 1) {
        $skip_1_i = 1;
        $done_2_i = 0;
        break;
       }
       $88 = (HEAP32[$6 >> 2] | 0) == 0; //@line 71799
       $skip_1_i = $88 & 1;
       $done_2_i = $88 & 1 ^ 1;
      } else {
       $skip_1_i = 1;
       $done_2_i = $done_1_i;
      }
     } while (0);
     _ini_val_free($val_i); //@line 71811
     if ((_parse_block($scn, $sct, $buf, $skip_1_i) | 0) == 0) {
      $done_1_i = $done_2_i; //@line 71816
     } else {
      $_0 = 1; //@line 71818
      label = 18355; //@line 71819
      break L23727;
     }
    }
    if ((_parse_block($scn, $sct, $buf, $done_1_i) | 0) != 0) {
     $_0 = 1; //@line 71827
     label = 18356; //@line 71828
     break L23727;
    }
   } else {
    $18 = _ini_get_sct($sct, $buf, 1) | 0; //@line 71832
    if (($18 | 0) == 0) {
     $_0 = 1; //@line 71836
     label = 18351; //@line 71837
     break L23727;
    }
    if ((_parse_section($scn, $18, $buf) | 0) != 0) {
     $_0 = 1; //@line 71844
     label = 18360; //@line 71845
     break L23727;
    }
    if ((_scn_match($scn, 57864) | 0) == 0) {
     $_0 = 1; //@line 71852
     label = 18363; //@line 71853
     break L23727;
    }
   }
  } while (0);
  _scn_match($scn, 52288) | 0; //@line 71858
  if ((_scn_match_name($scn, $buf, 256) | 0) == 0) {
   $_0 = 0; //@line 71863
   label = 18354; //@line 71864
   break;
  }
 }
 if ((label | 0) == 18359) {
  STACKTOP = sp; //@line 71870
  return $_0 | 0; //@line 71871
 } else if ((label | 0) == 18360) {
  STACKTOP = sp; //@line 71875
  return $_0 | 0; //@line 71876
 } else if ((label | 0) == 18349) {
  STACKTOP = sp; //@line 71880
  return $_0 | 0; //@line 71881
 } else if ((label | 0) == 18350) {
  STACKTOP = sp; //@line 71885
  return $_0 | 0; //@line 71886
 } else if ((label | 0) == 18324) {
  _ini_val_free($val_i); //@line 71889
  $_0 = 1; //@line 71891
  STACKTOP = sp; //@line 71893
  return $_0 | 0; //@line 71894
 } else if ((label | 0) == 18354) {
  STACKTOP = sp; //@line 71898
  return $_0 | 0; //@line 71899
 } else if ((label | 0) == 18355) {
  STACKTOP = sp; //@line 71903
  return $_0 | 0; //@line 71904
 } else if ((label | 0) == 18356) {
  STACKTOP = sp; //@line 71908
  return $_0 | 0; //@line 71909
 } else if ((label | 0) == 18357) {
  STACKTOP = sp; //@line 71913
  return $_0 | 0; //@line 71914
 } else if ((label | 0) == 18316) {
  _ini_val_free($tmp); //@line 71917
  $_0 = 1; //@line 71919
  STACKTOP = sp; //@line 71921
  return $_0 | 0; //@line 71922
 } else if ((label | 0) == 18351) {
  STACKTOP = sp; //@line 71926
  return $_0 | 0; //@line 71927
 } else if ((label | 0) == 18364) {
  STACKTOP = sp; //@line 71931
  return $_0 | 0; //@line 71932
 } else if ((label | 0) == 18365) {
  STACKTOP = sp; //@line 71936
  return $_0 | 0; //@line 71937
 } else if ((label | 0) == 18332) {
  _ini_val_free($val_i); //@line 71940
  $_0 = 1; //@line 71942
  STACKTOP = sp; //@line 71944
  return $_0 | 0; //@line 71945
 } else if ((label | 0) == 18341) {
  $107 = $scn + 1040 | 0; //@line 71948
  $108 = HEAP32[$107 >> 2] | 0; //@line 71949
  if (($108 | 0) == 0) {
   $name_0_i39 = 0; //@line 71953
  } else {
   $name_0_i39 = HEAP32[$108 + 4 >> 2] | 0; //@line 71958
  }
  $114 = HEAP32[_stderr >> 2] | 0; //@line 71963
  $115 = $scn + 1028 | 0; //@line 71964
  $117 = (HEAP32[$115 >> 2] | 0) + 1 | 0; //@line 71966
  _fprintf($114 | 0, 45760, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = ($name_0_i39 | 0) == 0 ? 49528 : $name_0_i39, HEAP32[tempInt + 8 >> 2] = $117, HEAP32[tempInt + 16 >> 2] = 53176, tempInt) | 0) | 0; //@line 71967
  _fputc(10, $114 | 0) | 0; //@line 71968
  $119 = HEAP32[$107 >> 2] | 0; //@line 71969
  if (($119 | 0) == 0) {
   $name_0_i = 0; //@line 71973
  } else {
   $name_0_i = HEAP32[$119 + 4 >> 2] | 0; //@line 71978
  }
  $126 = (HEAP32[$115 >> 2] | 0) + 1 | 0; //@line 71984
  _fprintf($114 | 0, 45760, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = ($name_0_i | 0) == 0 ? 49528 : $name_0_i, HEAP32[tempInt + 8 >> 2] = $126, HEAP32[tempInt + 16 >> 2] = $buf, tempInt) | 0) | 0; //@line 71985
  _fputc(10, $114 | 0) | 0; //@line 71986
  $_0 = 1; //@line 71988
  STACKTOP = sp; //@line 71990
  return $_0 | 0; //@line 71991
 } else if ((label | 0) == 18362) {
  STACKTOP = sp; //@line 71995
  return $_0 | 0; //@line 71996
 } else if ((label | 0) == 18363) {
  STACKTOP = sp; //@line 72000
  return $_0 | 0; //@line 72001
 }
 return 0;
}
function _parse_error($scn, $text, $src) {
 $scn = $scn | 0;
 $text = $text | 0;
 $src = $src | 0;
 var $2 = 0, $name_0 = 0, $9 = 0, $12 = 0, $i_012 = 0, $18 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 72014
 $2 = HEAP32[$scn + 1040 >> 2] | 0; //@line 72016
 if (($2 | 0) == 0) {
  $name_0 = 0; //@line 72020
 } else {
  $name_0 = HEAP32[$2 + 4 >> 2] | 0; //@line 72025
 }
 $9 = HEAP32[_stderr >> 2] | 0; //@line 72030
 $12 = (HEAP32[$scn + 1028 >> 2] | 0) + 1 | 0; //@line 72033
 _fprintf($9 | 0, 45760, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = ($name_0 | 0) == 0 ? 49528 : $name_0, HEAP32[tempInt + 8 >> 2] = $12, HEAP32[tempInt + 16 >> 2] = $text, tempInt) | 0) | 0; //@line 72034
 L23805 : do {
  if (($src | 0) != 0) {
   _fwrite(42296, 2, 1, $9 | 0) | 0; //@line 72039
   $i_012 = 0; //@line 72041
   while (1) {
    $18 = _scn_get_chr($scn, $i_012) | 0; //@line 72044
    if (($18 << 24 >> 24 | 0) == 0) {
     label = 18371; //@line 72046
     break;
    } else if (($18 << 24 >> 24 | 0) == 13 | ($18 << 24 >> 24 | 0) == 10) {
     label = 18372; //@line 72049
     break;
    }
    _fputc($18 << 24 >> 24 | 0, $9 | 0) | 0; //@line 72053
    $i_012 = $i_012 + 1 | 0; //@line 72054
    if ($i_012 >>> 0 >= 64) {
     break L23805;
    }
   }
   if ((label | 0) == 18371) {
    _fwrite(39224, 5, 1, $9 | 0) | 0; //@line 72064
    break;
   } else if ((label | 0) == 18372) {
    _fwrite(36272, 4, 1, $9 | 0) | 0; //@line 72069
    break;
   }
  }
 } while (0);
 _fputc(10, $9 | 0) | 0; //@line 72075
 STACKTOP = sp; //@line 72076
 return;
}
function _ini_read_fp($sct, $fp, $fname) {
 $sct = $sct | 0;
 $fp = $fp | 0;
 $fname = $fname | 0;
 var $scn = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 72088
 STACKTOP = STACKTOP + 1304 | 0; //@line 72088
 $scn = sp | 0; //@line 72089
 _scn_init($scn); //@line 72091
 if ((_scn_add_file($scn, $fname, $fp, 0) | 0) != 0) {
  _ini_sct_del($sct); //@line 72096
  $_0 = 1; //@line 72098
  STACKTOP = sp; //@line 72100
  return $_0 | 0; //@line 72101
 }
 if ((_parse_section($scn, $sct, sp + 1048 | 0) | 0) != 0) {
  _parse_error($scn, 50088, 1); //@line 72108
  _scn_free($scn); //@line 72109
  $_0 = 1; //@line 72111
  STACKTOP = sp; //@line 72113
  return $_0 | 0; //@line 72114
 }
 if ((_scn_get_chr($scn, 0) | 0) << 24 >> 24 == 0) {
  _scn_free($scn); //@line 72120
  $_0 = 0; //@line 72122
  STACKTOP = sp; //@line 72124
  return $_0 | 0; //@line 72125
 } else {
  _parse_error($scn, 50088, 1); //@line 72127
  _scn_free($scn); //@line 72128
  $_0 = 1; //@line 72130
  STACKTOP = sp; //@line 72132
  return $_0 | 0; //@line 72133
 }
 return 0;
}
function _scn_init($scn) {
 $scn = $scn | 0;
 HEAP32[$scn >> 2] = 0; //@line 72144
 HEAP32[$scn + 1028 >> 2] = 0; //@line 72146
 HEAP32[$scn + 1032 >> 2] = 0; //@line 72148
 HEAP32[$scn + 1040 >> 2] = 0; //@line 72150
 HEAP32[$scn + 1044 >> 2] = 0; //@line 72152
 return;
}
function _scn_set_str($scn, $str) {
 $scn = $scn | 0;
 $str = $str | 0;
 HEAP32[$scn + 1044 >> 2] = $str; //@line 72165
 return;
}
function _ini_read($sct, $fname) {
 $sct = $sct | 0;
 $fname = $fname | 0;
 var $1 = 0, $4 = 0, $_0 = 0;
 $1 = _fopen($fname | 0, 56008 | 0) | 0; //@line 72177
 if (($1 | 0) == 0) {
  $_0 = 1; //@line 72181
  return $_0 | 0; //@line 72184
 }
 $4 = _ini_read_fp($sct, $1, $fname) | 0; //@line 72186
 _fclose($1 | 0) | 0; //@line 72187
 $_0 = $4; //@line 72189
 return $_0 | 0; //@line 72192
}
function _parse_block($scn, $sct, $buf, $skip) {
 $scn = $scn | 0;
 $sct = $sct | 0;
 $buf = $buf | 0;
 $skip = $skip | 0;
 var $cnt_0_ph_i = 0, $6 = 0, $12 = 0, $_0 = 0, label = 0;
 if ((_scn_match($scn, 30656) | 0) == 0) {
  $_0 = 1; //@line 72209
  return $_0 | 0; //@line 72212
 }
 if (($skip | 0) == 0) {
  if ((_parse_section($scn, $sct, $buf) | 0) != 0) {
   $_0 = 1; //@line 72221
   return $_0 | 0; //@line 72224
  }
  $_0 = (_scn_match($scn, 57864) | 0) == 0 | 0; //@line 72230
  return $_0 | 0; //@line 72233
 } else {
  $cnt_0_ph_i = 1; //@line 72235
 }
 L23845 : while (1) {
  while (1) {
   $6 = _scn_get_chr($scn, 0) | 0; //@line 72240
   if ($6 << 24 >> 24 == 0) {
    $_0 = 1; //@line 72244
    label = 18406; //@line 72245
    break L23845;
   }
   _scn_rmv_chr($scn, 1); //@line 72248
   if (($6 << 24 >> 24 | 0) == 125) {
    label = 18400; //@line 72250
    break;
   } else if (($6 << 24 >> 24 | 0) == 123) {
    label = 18399; //@line 72253
    break;
   }
  }
  if ((label | 0) == 18400) {
   label = 0; //@line 72258
   $12 = $cnt_0_ph_i - 1 | 0; //@line 72259
   if (($12 | 0) == 0) {
    $_0 = 0; //@line 72263
    label = 18407; //@line 72264
    break;
   } else {
    $cnt_0_ph_i = $12; //@line 72267
    continue;
   }
  } else if ((label | 0) == 18399) {
   label = 0; //@line 72272
   $cnt_0_ph_i = $cnt_0_ph_i + 1 | 0; //@line 72275
   continue;
  }
 }
 if ((label | 0) == 18407) {
  return $_0 | 0; //@line 72282
 } else if ((label | 0) == 18406) {
  return $_0 | 0; //@line 72287
 }
 return 0;
}
function _scn_free($scn) {
 $scn = $scn | 0;
 var $4 = 0, $_06_i = 0, $7 = 0, $13 = 0;
 if (($scn | 0) == 0) {
  return;
 }
 $4 = HEAP32[$scn + 1040 >> 2] | 0; //@line 72306
 if (($4 | 0) == 0) {
  return;
 } else {
  $_06_i = $4; //@line 72313
 }
 while (1) {
  $7 = HEAP32[$_06_i >> 2] | 0; //@line 72318
  if ((HEAP32[$_06_i + 12 >> 2] | 0) != 0) {
   $13 = HEAP32[$_06_i + 8 >> 2] | 0; //@line 72325
   _fclose($13 | 0) | 0; //@line 72326
  }
  _free(HEAP32[$_06_i + 4 >> 2] | 0); //@line 72331
  _free($_06_i); //@line 72333
  if (($7 | 0) == 0) {
   break;
  } else {
   $_06_i = $7; //@line 72339
  }
 }
 return;
}
function _scn_add_file($scn, $fname, $fp, $del) {
 $scn = $scn | 0;
 $fname = $fname | 0;
 $fp = $fp | 0;
 $del = $del | 0;
 var $1 = 0, $4 = 0, $5 = 0, $6 = 0, $9 = 0, $11 = 0, $16 = 0, $n1_0_i = 0, $25 = 0, $n1_1_i = 0, $31 = 0, $n1_2_i = 0, $35 = 0, $36 = 0, $38 = 0, $44 = 0, $_0_i29 = 0, $_06_i = 0, $55 = 0, $61 = 0, $name_035 = 0, $73 = 0, $_06_i31 = 0, $78 = 0, $84 = 0, $95 = 0, $_0 = 0, label = 0;
 $1 = _malloc(24) | 0; //@line 72366
 if (($1 | 0) == 0) {
  $_0 = 1; //@line 72370
  return $_0 | 0; //@line 72373
 }
 $4 = $1; //@line 72375
 _memset($1 | 0, 0, 16); //@line 72376
 $5 = $scn + 1040 | 0; //@line 72377
 $6 = HEAP32[$5 >> 2] | 0; //@line 72378
 do {
  if (($6 | 0) == 0) {
   $9 = _strlen($fname | 0) | 0; //@line 72383
   $11 = _malloc($9 + 1 | 0) | 0; //@line 72385
   if (($11 | 0) == 0) {
    $_06_i = $4; //@line 72389
    label = 18433; //@line 72390
    break;
   }
   _memcpy($11 | 0, $fname | 0, $9) | 0; //@line 72393
   HEAP8[$11 + $9 | 0] = 0; //@line 72395
   $name_035 = $11; //@line 72397
  } else {
   $16 = HEAP32[$6 + 4 >> 2] | 0; //@line 72400
   L23876 : do {
    if ((HEAP8[$fname] | 0) == 47 | ($16 | 0) == 0) {
     $n1_2_i = 0; //@line 72408
    } else {
     $n1_0_i = _strlen($16 | 0) | 0; //@line 72412
     while (1) {
      if (($n1_0_i | 0) == 0) {
       $n1_1_i = 0; //@line 72418
       break;
      }
      $25 = $n1_0_i - 1 | 0; //@line 72421
      if ((HEAP8[$16 + $25 | 0] | 0) == 47) {
       $n1_0_i = $25; //@line 72426
      } else {
       $n1_1_i = $n1_0_i; //@line 72428
       break;
      }
     }
     while (1) {
      if (($n1_1_i | 0) == 0) {
       $n1_2_i = 0; //@line 72437
       break L23876;
      }
      $31 = $n1_1_i - 1 | 0; //@line 72440
      if ((HEAP8[$16 + $31 | 0] | 0) == 47) {
       $n1_2_i = $n1_1_i; //@line 72445
       break;
      } else {
       $n1_1_i = $31; //@line 72448
      }
     }
    }
   } while (0);
   $35 = _strlen($fname | 0) | 0; //@line 72454
   $36 = $35 + $n1_2_i | 0; //@line 72455
   $38 = _malloc($36 + 1 | 0) | 0; //@line 72457
   if (($38 | 0) == 0) {
    $_0_i29 = 0; //@line 72461
   } else {
    if (($n1_2_i | 0) != 0) {
     _memcpy($38 | 0, $16 | 0, $n1_2_i) | 0; //@line 72466
    }
    $44 = $38 + $n1_2_i | 0; //@line 72469
    _memcpy($44 | 0, $fname | 0, $35) | 0; //@line 72470
    HEAP8[$38 + $36 | 0] = 0; //@line 72472
    $_0_i29 = $38; //@line 72474
   }
   HEAP32[$6 + 16 >> 2] = HEAP32[$scn + 1028 >> 2]; //@line 72480
   HEAP32[(HEAP32[$5 >> 2] | 0) + 20 >> 2] = HEAP32[$scn + 1032 >> 2]; //@line 72485
   if (($_0_i29 | 0) == 0) {
    $_06_i = $4; //@line 72489
    label = 18433; //@line 72490
   } else {
    $name_035 = $_0_i29; //@line 72492
   }
  }
 } while (0);
 if ((label | 0) == 18433) {
  while (1) {
   label = 0; //@line 72498
   $55 = HEAP32[$_06_i >> 2] | 0; //@line 72501
   if ((HEAP32[$_06_i + 12 >> 2] | 0) != 0) {
    $61 = HEAP32[$_06_i + 8 >> 2] | 0; //@line 72508
    _fclose($61 | 0) | 0; //@line 72509
   }
   _free(HEAP32[$_06_i + 4 >> 2] | 0); //@line 72514
   _free($_06_i); //@line 72516
   if (($55 | 0) == 0) {
    $_0 = 1; //@line 72520
    break;
   } else {
    $_06_i = $55; //@line 72523
    label = 18433; //@line 72524
   }
  }
  return $_0 | 0; //@line 72529
 }
 HEAP32[$1 + 4 >> 2] = $name_035; //@line 72534
 do {
  if (($fp | 0) == 0) {
   $73 = _fopen($name_035 | 0, 49856) | 0; //@line 72539
   HEAP32[$1 + 8 >> 2] = $73; //@line 72542
   if (($73 | 0) == 0) {
    $_06_i31 = $4; //@line 72546
   } else {
    $95 = 0; //@line 72548
    break;
   }
   while (1) {
    $78 = HEAP32[$_06_i31 >> 2] | 0; //@line 72554
    if ((HEAP32[$_06_i31 + 12 >> 2] | 0) != 0) {
     $84 = HEAP32[$_06_i31 + 8 >> 2] | 0; //@line 72561
     _fclose($84 | 0) | 0; //@line 72562
    }
    _free(HEAP32[$_06_i31 + 4 >> 2] | 0); //@line 72567
    _free($_06_i31); //@line 72569
    if (($78 | 0) == 0) {
     $_0 = 1; //@line 72573
     break;
    } else {
     $_06_i31 = $78; //@line 72576
    }
   }
   return $_0 | 0; //@line 72581
  } else {
   HEAP32[$1 + 8 >> 2] = $fp; //@line 72585
   $95 = ($del | 0) != 0 | 0; //@line 72588
  }
 } while (0);
 HEAP32[$1 + 12 >> 2] = $95; //@line 72594
 HEAP32[$1 >> 2] = HEAP32[$5 >> 2]; //@line 72597
 HEAP32[$5 >> 2] = $4; //@line 72598
 HEAP32[$scn + 1028 >> 2] = 0; //@line 72600
 HEAP32[$scn + 1032 >> 2] = 0; //@line 72602
 $_0 = 0; //@line 72604
 return $_0 | 0; //@line 72607
}
function _scn_get_chr($scn, $idx) {
 $scn = $scn | 0;
 $idx = $idx | 0;
 var $2 = 0, $6 = 0, $9 = 0, $14 = 0, $_0 = 0;
 if ($idx >>> 0 > 255) {
  $_0 = 0; //@line 72622
  return $_0 | 0; //@line 72625
 }
 $2 = $scn | 0; //@line 72627
 L23914 : do {
  if ((HEAP32[$2 >> 2] | 0) >>> 0 <= $idx >>> 0) {
   while (1) {
    $6 = (_scn_next_char($scn) | 0) << 24 >> 24; //@line 72635
    HEAP32[$scn + 4 + (HEAP32[$2 >> 2] << 2) >> 2] = $6; //@line 72638
    $9 = HEAP32[$2 >> 2] | 0; //@line 72639
    if ((HEAP32[$scn + 4 + ($9 << 2) >> 2] | 0) == 0) {
     $_0 = 0; //@line 72645
     break;
    }
    $14 = $9 + 1 | 0; //@line 72648
    HEAP32[$2 >> 2] = $14; //@line 72649
    if ($14 >>> 0 > $idx >>> 0) {
     break L23914;
    }
   }
   return $_0 | 0; //@line 72658
  }
 } while (0);
 $_0 = HEAP32[$scn + 4 + ($idx << 2) >> 2] & 255; //@line 72665
 return $_0 | 0; //@line 72668
}
function _scn_next_char($scn) {
 $scn = $scn | 0;
 var $1 = 0, $2 = 0, $4 = 0, $5 = 0, $7 = 0, $10 = 0, $15 = 0, $17 = 0, $24 = 0, $29 = 0, $36 = 0, $37 = 0, $40 = 0, $_0 = 0, label = 0;
 $1 = $scn + 1040 | 0; //@line 72681
 $2 = HEAP32[$1 >> 2] | 0; //@line 72682
 if (($2 | 0) == 0) {
  $36 = $scn + 1044 | 0; //@line 72686
  $37 = HEAP32[$36 >> 2] | 0; //@line 72687
  if (($37 | 0) == 0) {
   $_0 = 0; //@line 72691
   return $_0 | 0; //@line 72694
  }
  $40 = HEAP8[$37] | 0; //@line 72696
  if ($40 << 24 >> 24 == 0) {
   $_0 = 0; //@line 72700
   return $_0 | 0; //@line 72703
  }
  HEAP32[$36 >> 2] = $37 + 1; //@line 72706
  $_0 = $40; //@line 72708
  return $_0 | 0; //@line 72711
 }
 $4 = $scn + 1028 | 0; //@line 72713
 $5 = $scn + 1032 | 0; //@line 72714
 $7 = $2; //@line 72716
 while (1) {
  $10 = _fgetc(HEAP32[$7 + 8 >> 2] | 0) | 0; //@line 72721
  if (($10 | 0) != -1) {
   label = 18460; //@line 72725
   break;
  }
  $15 = HEAP32[$1 >> 2] | 0; //@line 72728
  if (($15 | 0) == 0) {
   $_0 = 0; //@line 72732
   label = 18472; //@line 72733
   break;
  }
  $17 = $15 | 0; //@line 72736
  HEAP32[$1 >> 2] = HEAP32[$17 >> 2]; //@line 72738
  HEAP32[$17 >> 2] = 0; //@line 72739
  if ((HEAP32[$15 + 12 >> 2] | 0) != 0) {
   $24 = HEAP32[$15 + 8 >> 2] | 0; //@line 72746
   _fclose($24 | 0) | 0; //@line 72747
  }
  _free(HEAP32[$15 + 4 >> 2] | 0); //@line 72752
  _free($15); //@line 72754
  $29 = HEAP32[$1 >> 2] | 0; //@line 72755
  if (($29 | 0) == 0) {
   $_0 = 0; //@line 72759
   label = 18471; //@line 72760
   break;
  }
  HEAP32[$4 >> 2] = HEAP32[$29 + 16 >> 2]; //@line 72765
  HEAP32[$5 >> 2] = HEAP32[$29 + 20 >> 2]; //@line 72768
  $7 = $29; //@line 72769
 }
 if ((label | 0) == 18460) {
  $_0 = $10 & 255; //@line 72774
  return $_0 | 0; //@line 72777
 } else if ((label | 0) == 18471) {
  return $_0 | 0; //@line 72782
 } else if ((label | 0) == 18472) {
  return $_0 | 0; //@line 72787
 }
 return 0;
}
function _scn_rmv_chr($scn, $cnt) {
 $scn = $scn | 0;
 $cnt = $cnt | 0;
 var $1 = 0, $2 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0, $10 = 0, $11 = 0, $i_034 = 0, $15 = 0, $31 = 0, $i_132 = 0, $38 = 0, $i_241 = 0, $44 = 0, $60 = 0, $_lcssa40 = 0, $64 = 0, $65 = 0, $66 = 0, $_036 = 0, $68 = 0;
 $1 = $scn | 0; //@line 72806
 $2 = HEAP32[$1 >> 2] | 0; //@line 72807
 if ($2 >>> 0 > $cnt >>> 0) {
  if (($cnt | 0) == 0) {
   $i_132 = 0; //@line 72814
  } else {
   $9 = $scn + 1032 | 0; //@line 72816
   $10 = $scn + 1028 | 0; //@line 72817
   $11 = $scn + 1036 | 0; //@line 72818
   $i_034 = 0; //@line 72820
   while (1) {
    $15 = HEAP32[$scn + 4 + ($i_034 << 2) >> 2] & 255; //@line 72825
    do {
     if ($15 << 24 >> 24 != 0) {
      HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + 1; //@line 72832
      if (($15 << 24 >> 24 | 0) == 10) {
       if ((HEAP32[$11 >> 2] | 0) == 0) {
        HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 1; //@line 72840
       }
       HEAP32[$11 >> 2] = 0; //@line 72843
       break;
      } else if (($15 << 24 >> 24 | 0) == 13) {
       HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 1; //@line 72849
       HEAP32[$11 >> 2] = 1; //@line 72850
       break;
      } else {
       HEAP32[$11 >> 2] = 0; //@line 72854
       break;
      }
     }
    } while (0);
    $31 = $i_034 + 1 | 0; //@line 72859
    if ($31 >>> 0 < $cnt >>> 0) {
     $i_034 = $31; //@line 72863
    } else {
     $i_132 = $cnt; //@line 72865
     break;
    }
   }
  }
  do {
   HEAP32[$scn + 4 + ($i_132 - $cnt << 2) >> 2] = HEAP32[$scn + 4 + ($i_132 << 2) >> 2]; //@line 72876
   $i_132 = $i_132 + 1 | 0; //@line 72877
   $38 = HEAP32[$1 >> 2] | 0; //@line 72878
  } while ($i_132 >>> 0 < $38 >>> 0);
  HEAP32[$1 >> 2] = $38 - $cnt; //@line 72888
  return;
 }
 if (($2 | 0) == 0) {
  $_lcssa40 = 0; //@line 72896
 } else {
  $5 = $scn + 1032 | 0; //@line 72898
  $6 = $scn + 1028 | 0; //@line 72899
  $7 = $scn + 1036 | 0; //@line 72900
  $i_241 = 0; //@line 72902
  while (1) {
   $44 = HEAP32[$scn + 4 + ($i_241 << 2) >> 2] & 255; //@line 72907
   do {
    if ($44 << 24 >> 24 != 0) {
     HEAP32[$5 >> 2] = (HEAP32[$5 >> 2] | 0) + 1; //@line 72914
     if (($44 << 24 >> 24 | 0) == 10) {
      if ((HEAP32[$7 >> 2] | 0) == 0) {
       HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 1; //@line 72922
      }
      HEAP32[$7 >> 2] = 0; //@line 72925
      break;
     } else if (($44 << 24 >> 24 | 0) == 13) {
      HEAP32[$6 >> 2] = (HEAP32[$6 >> 2] | 0) + 1; //@line 72931
      HEAP32[$7 >> 2] = 1; //@line 72932
      break;
     } else {
      HEAP32[$7 >> 2] = 0; //@line 72936
      break;
     }
    }
   } while (0);
   $60 = $i_241 + 1 | 0; //@line 72941
   if ($60 >>> 0 < $2 >>> 0) {
    $i_241 = $60; //@line 72945
   } else {
    $_lcssa40 = $2; //@line 72947
    break;
   }
  }
 }
 HEAP32[$1 >> 2] = 0; //@line 72953
 if (($_lcssa40 | 0) == ($cnt | 0)) {
  return;
 }
 $64 = $scn + 1032 | 0; //@line 72961
 $65 = $scn + 1028 | 0; //@line 72962
 $66 = $scn + 1036 | 0; //@line 72963
 $_036 = $cnt - $_lcssa40 | 0; //@line 72965
 do {
  $68 = _scn_next_char($scn) | 0; //@line 72968
  do {
   if ($68 << 24 >> 24 != 0) {
    HEAP32[$64 >> 2] = (HEAP32[$64 >> 2] | 0) + 1; //@line 72975
    if (($68 << 24 >> 24 | 0) == 13) {
     HEAP32[$65 >> 2] = (HEAP32[$65 >> 2] | 0) + 1; //@line 72979
     HEAP32[$66 >> 2] = 1; //@line 72980
     break;
    } else if (($68 << 24 >> 24 | 0) == 10) {
     if ((HEAP32[$66 >> 2] | 0) == 0) {
      HEAP32[$65 >> 2] = (HEAP32[$65 >> 2] | 0) + 1; //@line 72990
     }
     HEAP32[$66 >> 2] = 0; //@line 72993
     break;
    } else {
     HEAP32[$66 >> 2] = 0; //@line 72997
     break;
    }
   }
  } while (0);
  $_036 = $_036 - 1 | 0; //@line 73002
 } while (($_036 | 0) != 0);
 return;
}
function _scn_match_space($scn) {
 $scn = $scn | 0;
 var $1 = 0, $2 = 0, $3 = 0, $r_0_ph = 0, $4 = 0, $r_0 = 0, $7 = 0, $10 = 0, $15 = 0, $17 = 0, $19 = 0, $22 = 0, $25 = 0, $28 = 0, $33 = 0, $36 = 0, $43 = 0, $46 = 0, $51 = 0, $60 = 0, $63 = 0, $68 = 0, $level_0_i = 0, $buf_sroa_1_0_i = 0, $77 = 0, $80 = 0, $85 = 0, $88 = 0, $or_cond8_i = 0, label = 0;
 $1 = $scn | 0; //@line 73032
 $2 = $scn + 4 | 0; //@line 73033
 $3 = $scn + 8 | 0; //@line 73034
 $r_0_ph = 0; //@line 73036
 L23999 : while (1) {
  $r_0 = $r_0_ph;
  $4 = HEAP32[$1 >> 2] | 0;
  L24001 : while (1) {
   if (($4 | 0) == 0) {
    while (1) {
     $7 = (_scn_next_char($scn) | 0) << 24 >> 24; //@line 73049
     HEAP32[$scn + 4 + (HEAP32[$1 >> 2] << 2) >> 2] = $7; //@line 73052
     $10 = HEAP32[$1 >> 2] | 0; //@line 73053
     if ((HEAP32[$scn + 4 + ($10 << 2) >> 2] | 0) == 0) {
      label = 18546; //@line 73059
      break L23999;
     }
     $15 = $10 + 1 | 0; //@line 73062
     HEAP32[$1 >> 2] = $15; //@line 73063
     if (($15 | 0) != 0) {
      $17 = $15; //@line 73067
      break;
     }
    }
   } else {
    $17 = $4; //@line 73072
   }
   $19 = HEAP32[$2 >> 2] & 255; //@line 73076
   if (($19 << 24 >> 24 | 0) == 32 | ($19 << 24 >> 24 | 0) == 9 | ($19 << 24 >> 24 | 0) == 13 | ($19 << 24 >> 24 | 0) == 10) {
    label = 18519; //@line 73078
    break;
   } else if (($19 << 24 >> 24 | 0) == 35) {
    $22 = $17; //@line 73081
    while (1) {
     if (($22 | 0) == 0) {
      while (1) {
       $25 = (_scn_next_char($scn) | 0) << 24 >> 24; //@line 73089
       HEAP32[$scn + 4 + (HEAP32[$1 >> 2] << 2) >> 2] = $25; //@line 73092
       $28 = HEAP32[$1 >> 2] | 0; //@line 73093
       if ((HEAP32[$scn + 4 + ($28 << 2) >> 2] | 0) == 0) {
        $r_0 = 1;
        $4 = $28;
        continue L24001;
       }
       $33 = $28 + 1 | 0; //@line 73102
       HEAP32[$1 >> 2] = $33; //@line 73103
       if (($33 | 0) != 0) {
        break;
       }
      }
     }
     $36 = HEAP32[$2 >> 2] & 255; //@line 73112
     if ($36 << 24 >> 24 == 0) {
      $r_0_ph = 1; //@line 73116
      continue L23999;
     }
     _scn_rmv_chr($scn, 1); //@line 73119
     if (($36 << 24 >> 24 | 0) == 10) {
      $r_0_ph = 1; //@line 73121
      continue L23999;
     } else if (($36 << 24 >> 24 | 0) == 13) {
      break;
     }
     $22 = HEAP32[$1 >> 2] | 0; //@line 73128
    }
    if ((HEAP32[$1 >> 2] | 0) != 0) {
     break;
    }
    while (1) {
     $43 = (_scn_next_char($scn) | 0) << 24 >> 24; //@line 73138
     HEAP32[$scn + 4 + (HEAP32[$1 >> 2] << 2) >> 2] = $43; //@line 73141
     $46 = HEAP32[$1 >> 2] | 0; //@line 73142
     if ((HEAP32[$scn + 4 + ($46 << 2) >> 2] | 0) == 0) {
      $r_0 = 1;
      $4 = $46;
      continue L24001;
     }
     $51 = $46 + 1 | 0; //@line 73151
     HEAP32[$1 >> 2] = $51; //@line 73152
     if (($51 | 0) != 0) {
      break L24001;
     }
    }
   } else if (($19 << 24 >> 24 | 0) != 47) {
    label = 18548; //@line 73160
    break L23999;
   }
   if ($17 >>> 0 <= 1) {
    do {
     $60 = (_scn_next_char($scn) | 0) << 24 >> 24; //@line 73168
     HEAP32[$scn + 4 + (HEAP32[$1 >> 2] << 2) >> 2] = $60; //@line 73171
     $63 = HEAP32[$1 >> 2] | 0; //@line 73172
     if ((HEAP32[$scn + 4 + ($63 << 2) >> 2] | 0) == 0) {
      label = 18547; //@line 73178
      break L23999;
     }
     $68 = $63 + 1 | 0; //@line 73181
     HEAP32[$1 >> 2] = $68; //@line 73182
    } while ($68 >>> 0 <= 1);
   }
   if ((HEAP32[$3 >> 2] & 255) << 24 >> 24 != 42) {
    label = 18545; //@line 73195
    break L23999;
   }
   _scn_rmv_chr($scn, 2); //@line 73198
   $buf_sroa_1_0_i = 0;
   $level_0_i = 0;
   while (1) {
    if ((HEAP32[$1 >> 2] | 0) == 0) {
     while (1) {
      $77 = (_scn_next_char($scn) | 0) << 24 >> 24; //@line 73210
      HEAP32[$scn + 4 + (HEAP32[$1 >> 2] << 2) >> 2] = $77; //@line 73213
      $80 = HEAP32[$1 >> 2] | 0; //@line 73214
      if ((HEAP32[$scn + 4 + ($80 << 2) >> 2] | 0) == 0) {
       $r_0 = 1;
       $4 = $80;
       continue L24001;
      }
      $85 = $80 + 1 | 0; //@line 73223
      HEAP32[$1 >> 2] = $85; //@line 73224
      if (($85 | 0) != 0) {
       break;
      }
     }
    }
    $88 = HEAP32[$2 >> 2] & 255; //@line 73233
    if ($88 << 24 >> 24 == 0) {
     $r_0_ph = 1; //@line 73237
     continue L23999;
    }
    _scn_rmv_chr($scn, 1); //@line 73240
    if (!($buf_sroa_1_0_i << 24 >> 24 == 42 & $88 << 24 >> 24 == 47)) {
     $or_cond8_i = $buf_sroa_1_0_i << 24 >> 24 == 47 & $88 << 24 >> 24 == 42; //@line 73248
     $buf_sroa_1_0_i = $or_cond8_i ? 0 : $88;
     $level_0_i = ($or_cond8_i & 1) + $level_0_i | 0;
     continue;
    }
    if (($level_0_i | 0) == 0) {
     $r_0_ph = 1; //@line 73259
     continue L23999;
    }
    $buf_sroa_1_0_i = 0;
    $level_0_i = $level_0_i - 1 | 0;
   }
  }
  if ((label | 0) == 18519) {
   label = 0; //@line 73268
   _scn_rmv_chr($scn, 1); //@line 73269
   $r_0_ph = 1; //@line 73271
   continue;
  }
  if ((HEAP32[$2 >> 2] & 255) << 24 >> 24 != 10) {
   $r_0_ph = 1; //@line 73279
   continue;
  }
  _scn_rmv_chr($scn, 1); //@line 73282
  $r_0_ph = 1; //@line 73284
 }
 if ((label | 0) == 18547) {
  return $r_0 | 0; //@line 73288
 } else if ((label | 0) == 18548) {
  return $r_0 | 0; //@line 73292
 } else if ((label | 0) == 18545) {
  return $r_0 | 0; //@line 73296
 } else if ((label | 0) == 18546) {
  return $r_0 | 0; //@line 73300
 }
 return 0;
}
function _scn_match_name($scn, $str, $max) {
 $scn = $scn | 0;
 $str = $str | 0;
 $max = $max | 0;
 var $2 = 0, $6 = 0, $9 = 0, $14 = 0, $_0_i = 0, $c_051 = 0, $i_050 = 0, $22 = 0, $23 = 0, $28 = 0, $31 = 0, $36 = 0, $_0_i37 = 0, $i_1 = 0, $_0 = 0, label = 0;
 _scn_match_space($scn) | 0; //@line 73320
 $2 = $scn | 0; //@line 73321
 L24051 : do {
  if ((HEAP32[$2 >> 2] | 0) == 0) {
   while (1) {
    $6 = (_scn_next_char($scn) | 0) << 24 >> 24; //@line 73329
    HEAP32[$scn + 4 + (HEAP32[$2 >> 2] << 2) >> 2] = $6; //@line 73332
    $9 = HEAP32[$2 >> 2] | 0; //@line 73333
    if ((HEAP32[$scn + 4 + ($9 << 2) >> 2] | 0) == 0) {
     $_0_i = 0; //@line 73339
     break L24051;
    }
    $14 = $9 + 1 | 0; //@line 73342
    HEAP32[$2 >> 2] = $14; //@line 73343
    if (($14 | 0) != 0) {
     label = 18552; //@line 73347
     break;
    }
   }
  } else {
   label = 18552; //@line 73352
  }
 } while (0);
 if ((label | 0) == 18552) {
  $_0_i = HEAP32[$scn + 4 >> 2] & 255; //@line 73360
 }
 do {
  if (!(($_0_i - 97 & 255) < 26 | ($_0_i - 65 & 255) < 26)) {
   if (($_0_i << 24 >> 24 | 0) == 95 | ($_0_i << 24 >> 24 | 0) == 36) {
    break;
   } else {
    $_0 = 0; //@line 73374
   }
   return $_0 | 0; //@line 73378
  }
 } while (0);
 L24062 : do {
  if (($max | 0) == 0) {
   $i_1 = 0; //@line 73385
  } else {
   $i_050 = 0;
   $c_051 = $_0_i;
   L24063 : while (1) {
    $22 = $i_050 + 1 | 0; //@line 73391
    $23 = $str + $i_050 | 0; //@line 73392
    HEAP8[$23] = $c_051; //@line 73393
    L24065 : do {
     if ($22 >>> 0 > 255) {
      $_0_i37 = 0; //@line 73398
     } else {
      if ((HEAP32[$2 >> 2] | 0) >>> 0 <= $22 >>> 0) {
       do {
        $28 = (_scn_next_char($scn) | 0) << 24 >> 24; //@line 73406
        HEAP32[$scn + 4 + (HEAP32[$2 >> 2] << 2) >> 2] = $28; //@line 73409
        $31 = HEAP32[$2 >> 2] | 0; //@line 73410
        if ((HEAP32[$scn + 4 + ($31 << 2) >> 2] | 0) == 0) {
         $_0_i37 = 0; //@line 73416
         break L24065;
        }
        $36 = $31 + 1 | 0; //@line 73419
        HEAP32[$2 >> 2] = $36; //@line 73420
       } while ($36 >>> 0 <= $22 >>> 0);
      }
      $_0_i37 = HEAP32[$scn + 4 + ($22 << 2) >> 2] & 255; //@line 73432
     }
    } while (0);
    do {
     if (!(($_0_i37 - 97 & 255) < 26 | ($_0_i37 - 65 & 255) < 26 | $_0_i37 << 24 >> 24 == 95 | ($_0_i37 - 48 & 255) < 10)) {
      if (($_0_i37 << 24 >> 24 | 0) == 43) {
       if ((HEAP8[$23] | 0) == 91 & $22 >>> 0 < $max >>> 0) {
        $i_050 = $22;
        $c_051 = $_0_i37;
        continue L24063;
       } else {
        $i_1 = $22; //@line 73459
        break L24062;
       }
      } else if (($_0_i37 << 24 >> 24 | 0) == 93 | ($_0_i37 << 24 >> 24 | 0) == 91 | ($_0_i37 << 24 >> 24 | 0) == 46) {
       break;
      } else if (($_0_i37 << 24 >> 24 | 0) == 45) {
       if ((HEAP8[$23] | 0) == 91 & $22 >>> 0 < $max >>> 0) {
        $i_050 = $22;
        $c_051 = $_0_i37;
        continue L24063;
       } else {
        $i_1 = $22; //@line 73474
        break L24062;
       }
      } else {
       $i_1 = $22; //@line 73478
       break L24062;
      }
     }
    } while (0);
    if ($22 >>> 0 < $max >>> 0) {
     $i_050 = $22;
     $c_051 = $_0_i37;
    } else {
     $i_1 = $22; //@line 73488
     break;
    }
   }
  }
 } while (0);
 if ($i_1 >>> 0 >= $max >>> 0) {
  $_0 = 0; //@line 73498
  return $_0 | 0; //@line 73501
 }
 HEAP8[$str + $i_1 | 0] = 0; //@line 73504
 _scn_rmv_chr($scn, $i_1); //@line 73505
 $_0 = 1; //@line 73507
 return $_0 | 0; //@line 73510
}
function _scn_match_string($scn, $str, $max) {
 $scn = $scn | 0;
 $str = $str | 0;
 $max = $max | 0;
 var $2 = 0, $6 = 0, $9 = 0, $14 = 0, $j_057 = 0, $i_056 = 0, $22 = 0, $25 = 0, $28 = 0, $33 = 0, $35 = 0, $38 = 0, $40 = 0, $44 = 0, $47 = 0, $52 = 0, $54 = 0, $phitmp = 0, $66 = 0, $70 = 0, $73 = 0, $78 = 0, $80 = 0, $83 = 0, $_off_i = 0, $d_0_i = 0, $94 = 0, $98 = 0, $101 = 0, $106 = 0, $110 = 0, $_off_1_i = 0, $d_0_1_i = 0, $_0_i37 = 0, $i_1 = 0, $123 = 0, $_0 = 0, label = 0;
 _scn_match_space($scn) | 0; //@line 73535
 $2 = $scn | 0; //@line 73536
 L24085 : do {
  if ((HEAP32[$2 >> 2] | 0) == 0) {
   while (1) {
    $6 = (_scn_next_char($scn) | 0) << 24 >> 24; //@line 73544
    HEAP32[$scn + 4 + (HEAP32[$2 >> 2] << 2) >> 2] = $6; //@line 73547
    $9 = HEAP32[$2 >> 2] | 0; //@line 73548
    if ((HEAP32[$scn + 4 + ($9 << 2) >> 2] | 0) == 0) {
     $_0 = 0; //@line 73554
     break;
    }
    $14 = $9 + 1 | 0; //@line 73557
    HEAP32[$2 >> 2] = $14; //@line 73558
    if (($14 | 0) != 0) {
     break L24085;
    }
   }
   return $_0 | 0; //@line 73567
  }
 } while (0);
 if ((HEAP32[$scn + 4 >> 2] & 255) << 24 >> 24 != 34 | ($max | 0) == 0) {
  $_0 = 0; //@line 73578
  return $_0 | 0; //@line 73581
 } else {
  $i_056 = 1;
  $j_057 = 0;
 }
 L24093 : while (1) {
  if ($i_056 >>> 0 > 255) {
   $_0 = 1; //@line 73591
   label = 18623; //@line 73592
   break;
  }
  $22 = HEAP32[$2 >> 2] | 0; //@line 73595
  if ($22 >>> 0 > $i_056 >>> 0) {
   $35 = $22; //@line 73599
  } else {
   while (1) {
    $25 = (_scn_next_char($scn) | 0) << 24 >> 24; //@line 73603
    HEAP32[$scn + 4 + (HEAP32[$2 >> 2] << 2) >> 2] = $25; //@line 73606
    $28 = HEAP32[$2 >> 2] | 0; //@line 73607
    if ((HEAP32[$scn + 4 + ($28 << 2) >> 2] | 0) == 0) {
     $_0 = 1; //@line 73613
     label = 18628; //@line 73614
     break L24093;
    }
    $33 = $28 + 1 | 0; //@line 73617
    HEAP32[$2 >> 2] = $33; //@line 73618
    if ($33 >>> 0 > $i_056 >>> 0) {
     $35 = $33; //@line 73622
     break;
    }
   }
  }
  $38 = HEAP32[$scn + 4 + ($i_056 << 2) >> 2] & 255; //@line 73630
  L24101 : do {
   if (($38 << 24 >> 24 | 0) == 0) {
    $_0 = 1; //@line 73633
    label = 18622; //@line 73634
    break L24093;
   } else if (($38 << 24 >> 24 | 0) == 92) {
    $40 = $i_056 + 1 | 0; //@line 73637
    if ($40 >>> 0 > 255) {
     $i_1 = $i_056;
     $_0_i37 = 92;
     break;
    }
    if ($35 >>> 0 > $40 >>> 0) {
     $54 = $35; //@line 73647
    } else {
     while (1) {
      $44 = (_scn_next_char($scn) | 0) << 24 >> 24; //@line 73651
      HEAP32[$scn + 4 + (HEAP32[$2 >> 2] << 2) >> 2] = $44; //@line 73654
      $47 = HEAP32[$2 >> 2] | 0; //@line 73655
      if ((HEAP32[$scn + 4 + ($47 << 2) >> 2] | 0) == 0) {
       $i_1 = $i_056;
       $_0_i37 = 92;
       break L24101;
      }
      $52 = $47 + 1 | 0; //@line 73664
      HEAP32[$2 >> 2] = $52; //@line 73665
      if ($52 >>> 0 > $40 >>> 0) {
       $54 = $52; //@line 73669
       break;
      }
     }
    }
    $phitmp = HEAP32[$scn + 4 + ($40 << 2) >> 2] << 24 >> 24; //@line 73678
    if (($phitmp | 0) == 92) {
     $i_1 = $40;
     $_0_i37 = 92;
     break;
    } else if (($phitmp | 0) == 120) {
     $66 = $i_056 + 2 | 0; //@line 73684
     if ($66 >>> 0 > 255) {
      $_0 = 0; //@line 73688
      label = 18618; //@line 73689
      break L24093;
     }
     if ($54 >>> 0 > $66 >>> 0) {
      $80 = $54; //@line 73695
     } else {
      while (1) {
       $70 = (_scn_next_char($scn) | 0) << 24 >> 24; //@line 73699
       HEAP32[$scn + 4 + (HEAP32[$2 >> 2] << 2) >> 2] = $70; //@line 73702
       $73 = HEAP32[$2 >> 2] | 0; //@line 73703
       if ((HEAP32[$scn + 4 + ($73 << 2) >> 2] | 0) == 0) {
        $_0 = 0; //@line 73709
        label = 18621; //@line 73710
        break L24093;
       }
       $78 = $73 + 1 | 0; //@line 73713
       HEAP32[$2 >> 2] = $78; //@line 73714
       if ($78 >>> 0 > $66 >>> 0) {
        $80 = $78; //@line 73718
        break;
       }
      }
     }
     $83 = HEAP32[$scn + 4 + ($66 << 2) >> 2] & 255; //@line 73726
     $_off_i = $83 - 48 & 255; //@line 73727
     do {
      if (($_off_i & 255) < 10) {
       $d_0_i = $_off_i; //@line 73732
      } else {
       if (($83 - 97 & 255) < 6) {
        $d_0_i = $83 - 87 & 255; //@line 73740
        break;
       }
       if (($83 - 65 & 255) >= 6) {
        $_0 = 0; //@line 73747
        label = 18616; //@line 73748
        break L24093;
       }
       $d_0_i = $83 - 55 & 255; //@line 73752
      }
     } while (0);
     $94 = $i_056 + 3 | 0; //@line 73756
     if ($94 >>> 0 > 255) {
      $_0 = 0; //@line 73760
      label = 18620; //@line 73761
      break L24093;
     }
     if ($80 >>> 0 <= $94 >>> 0) {
      do {
       $98 = (_scn_next_char($scn) | 0) << 24 >> 24; //@line 73769
       HEAP32[$scn + 4 + (HEAP32[$2 >> 2] << 2) >> 2] = $98; //@line 73772
       $101 = HEAP32[$2 >> 2] | 0; //@line 73773
       if ((HEAP32[$scn + 4 + ($101 << 2) >> 2] | 0) == 0) {
        $_0 = 0; //@line 73779
        label = 18624; //@line 73780
        break L24093;
       }
       $106 = $101 + 1 | 0; //@line 73783
       HEAP32[$2 >> 2] = $106; //@line 73784
      } while ($106 >>> 0 <= $94 >>> 0);
     }
     $110 = HEAP32[$scn + 4 + ($94 << 2) >> 2] & 255; //@line 73794
     $_off_1_i = $110 - 48 & 255; //@line 73795
     do {
      if (($_off_1_i & 255) < 10) {
       $d_0_1_i = $_off_1_i; //@line 73800
      } else {
       if (($110 - 97 & 255) < 6) {
        $d_0_1_i = $110 - 87 & 255; //@line 73808
        break;
       }
       if (($110 - 65 & 255) >= 6) {
        $_0 = 0; //@line 73815
        label = 18625; //@line 73816
        break L24093;
       }
       $d_0_1_i = $110 - 55 & 255; //@line 73820
      }
     } while (0);
     $i_1 = $94;
     $_0_i37 = $d_0_1_i + ($d_0_i << 4) & 255;
     break;
    } else if (($phitmp | 0) == 114) {
     $i_1 = $40;
     $_0_i37 = 13;
     break;
    } else if (($phitmp | 0) == 118) {
     $i_1 = $40;
     $_0_i37 = 11;
     break;
    } else if (($phitmp | 0) == 97) {
     $i_1 = $40;
     $_0_i37 = 7;
     break;
    } else if (($phitmp | 0) == 98) {
     $i_1 = $40;
     $_0_i37 = 8;
     break;
    } else if (($phitmp | 0) == 110) {
     $i_1 = $40;
     $_0_i37 = 10;
     break;
    } else if (($phitmp | 0) == 102) {
     $i_1 = $40;
     $_0_i37 = 12;
     break;
    } else if (($phitmp | 0) == 34) {
     $i_1 = $40;
     $_0_i37 = 34;
     break;
    } else {
     $i_1 = $i_056;
     $_0_i37 = 92;
     break;
    }
   } else if (($38 << 24 >> 24 | 0) == 34) {
    label = 18614; //@line 73862
    break L24093;
   } else {
    $i_1 = $i_056;
    $_0_i37 = $38;
   }
  } while (0);
  $123 = $j_057 + 1 | 0; //@line 73870
  HEAP8[$str + $j_057 | 0] = $_0_i37; //@line 73872
  if ($123 >>> 0 < $max >>> 0) {
   $i_056 = $i_1 + 1 | 0;
   $j_057 = $123;
  } else {
   $_0 = 0; //@line 73879
   label = 18626; //@line 73880
   break;
  }
 }
 if ((label | 0) == 18620) {
  return $_0 | 0; //@line 73887
 } else if ((label | 0) == 18621) {
  return $_0 | 0; //@line 73892
 } else if ((label | 0) == 18622) {
  return $_0 | 0; //@line 73897
 } else if ((label | 0) == 18623) {
  return $_0 | 0; //@line 73902
 } else if ((label | 0) == 18624) {
  return $_0 | 0; //@line 73907
 } else if ((label | 0) == 18625) {
  return $_0 | 0; //@line 73912
 } else if ((label | 0) == 18626) {
  return $_0 | 0; //@line 73917
 } else if ((label | 0) == 18628) {
  return $_0 | 0; //@line 73922
 } else if ((label | 0) == 18616) {
  return $_0 | 0; //@line 73927
 } else if ((label | 0) == 18618) {
  return $_0 | 0; //@line 73932
 } else if ((label | 0) == 18614) {
  HEAP8[$str + $j_057 | 0] = 0; //@line 73936
  _scn_rmv_chr($scn, $i_056 + 1 | 0); //@line 73938
  $_0 = 1; //@line 73940
  return $_0 | 0; //@line 73943
 }
 return 0;
}
function _scn_peek($scn, $str) {
 $scn = $scn | 0;
 $str = $str | 0;
 var $2 = 0, $cnt_0 = 0, $4 = 0, $12 = 0, $15 = 0, $20 = 0, $_0_i = 0, $_0 = 0, label = 0;
 _scn_match_space($scn) | 0; //@line 73957
 $2 = $scn | 0; //@line 73958
 $cnt_0 = 0; //@line 73960
 while (1) {
  $4 = $str + $cnt_0 | 0; //@line 73963
  if ((HEAP8[$4] | 0) == 0) {
   $_0 = 1; //@line 73968
   label = 18638; //@line 73969
   break;
  }
  L24163 : do {
   if ($cnt_0 >>> 0 > 255) {
    $_0_i = 0; //@line 73976
   } else {
    if ((HEAP32[$2 >> 2] | 0) >>> 0 <= $cnt_0 >>> 0) {
     do {
      $12 = (_scn_next_char($scn) | 0) << 24 >> 24; //@line 73984
      HEAP32[$scn + 4 + (HEAP32[$2 >> 2] << 2) >> 2] = $12; //@line 73987
      $15 = HEAP32[$2 >> 2] | 0; //@line 73988
      if ((HEAP32[$scn + 4 + ($15 << 2) >> 2] | 0) == 0) {
       $_0_i = 0; //@line 73994
       break L24163;
      }
      $20 = $15 + 1 | 0; //@line 73997
      HEAP32[$2 >> 2] = $20; //@line 73998
     } while ($20 >>> 0 <= $cnt_0 >>> 0);
    }
    $_0_i = HEAP32[$scn + 4 + ($cnt_0 << 2) >> 2] & 255; //@line 74010
   }
  } while (0);
  if ($_0_i << 24 >> 24 == (HEAP8[$4] | 0)) {
   $cnt_0 = $cnt_0 + 1 | 0; //@line 74019
  } else {
   $_0 = 0; //@line 74021
   label = 18639; //@line 74022
   break;
  }
 }
 if ((label | 0) == 18639) {
  return $_0 | 0; //@line 74029
 } else if ((label | 0) == 18638) {
  return $_0 | 0; //@line 74034
 }
 return 0;
}
function _scn_match_ident($scn, $str) {
 $scn = $scn | 0;
 $str = $str | 0;
 var $2 = 0, $cnt_0 = 0, $4 = 0, $6 = 0, $11 = 0, $14 = 0, $19 = 0, $_0_i = 0, $_0 = 0, label = 0;
 _scn_match_space($scn) | 0; //@line 74049
 $2 = $scn | 0; //@line 74050
 $cnt_0 = 0; //@line 74052
 while (1) {
  $4 = $str + $cnt_0 | 0; //@line 74055
  $6 = (HEAP8[$4] | 0) == 0; //@line 74057
  L24177 : do {
   if ($cnt_0 >>> 0 > 255) {
    $_0_i = 0; //@line 74062
   } else {
    if ((HEAP32[$2 >> 2] | 0) >>> 0 <= $cnt_0 >>> 0) {
     do {
      $11 = (_scn_next_char($scn) | 0) << 24 >> 24; //@line 74070
      HEAP32[$scn + 4 + (HEAP32[$2 >> 2] << 2) >> 2] = $11; //@line 74073
      $14 = HEAP32[$2 >> 2] | 0; //@line 74074
      if ((HEAP32[$scn + 4 + ($14 << 2) >> 2] | 0) == 0) {
       $_0_i = 0; //@line 74080
       break L24177;
      }
      $19 = $14 + 1 | 0; //@line 74083
      HEAP32[$2 >> 2] = $19; //@line 74084
     } while ($19 >>> 0 <= $cnt_0 >>> 0);
    }
    $_0_i = HEAP32[$scn + 4 + ($cnt_0 << 2) >> 2] & 255; //@line 74096
   }
  } while (0);
  if ($6) {
   break;
  }
  if ($_0_i << 24 >> 24 == (HEAP8[$4] | 0)) {
   $cnt_0 = $cnt_0 + 1 | 0; //@line 74109
  } else {
   $_0 = 0; //@line 74111
   label = 18651; //@line 74112
   break;
  }
 }
 if ((label | 0) == 18651) {
  return $_0 | 0; //@line 74119
 }
 if (($_0_i - 97 & 255) < 26 | ($_0_i - 65 & 255) < 26 | $_0_i << 24 >> 24 == 95 | ($_0_i - 48 & 255) < 10) {
  $_0 = 0; //@line 74133
  return $_0 | 0; //@line 74136
 }
 _scn_rmv_chr($scn, $cnt_0); //@line 74138
 $_0 = 1; //@line 74140
 return $_0 | 0; //@line 74143
}
function _scn_match($scn, $str) {
 $scn = $scn | 0;
 $str = $str | 0;
 var $2 = 0, $cnt_0 = 0, $4 = 0, $12 = 0, $15 = 0, $20 = 0, $_0_i = 0, $_0 = 0, label = 0;
 _scn_match_space($scn) | 0; //@line 74156
 $2 = $scn | 0; //@line 74157
 $cnt_0 = 0; //@line 74159
 while (1) {
  $4 = $str + $cnt_0 | 0; //@line 74162
  if ((HEAP8[$4] | 0) == 0) {
   break;
  }
  L24197 : do {
   if ($cnt_0 >>> 0 > 255) {
    $_0_i = 0; //@line 74173
   } else {
    if ((HEAP32[$2 >> 2] | 0) >>> 0 <= $cnt_0 >>> 0) {
     do {
      $12 = (_scn_next_char($scn) | 0) << 24 >> 24; //@line 74181
      HEAP32[$scn + 4 + (HEAP32[$2 >> 2] << 2) >> 2] = $12; //@line 74184
      $15 = HEAP32[$2 >> 2] | 0; //@line 74185
      if ((HEAP32[$scn + 4 + ($15 << 2) >> 2] | 0) == 0) {
       $_0_i = 0; //@line 74191
       break L24197;
      }
      $20 = $15 + 1 | 0; //@line 74194
      HEAP32[$2 >> 2] = $20; //@line 74195
     } while ($20 >>> 0 <= $cnt_0 >>> 0);
    }
    $_0_i = HEAP32[$scn + 4 + ($cnt_0 << 2) >> 2] & 255; //@line 74207
   }
  } while (0);
  if ($_0_i << 24 >> 24 == (HEAP8[$4] | 0)) {
   $cnt_0 = $cnt_0 + 1 | 0; //@line 74216
  } else {
   $_0 = 0; //@line 74218
   label = 18665; //@line 74219
   break;
  }
 }
 if ((label | 0) == 18665) {
  return $_0 | 0; //@line 74226
 }
 _scn_rmv_chr($scn, $cnt_0); //@line 74228
 $_0 = 1; //@line 74230
 return $_0 | 0; //@line 74233
}
function _ini_sct_new($name) {
 $name = $name | 0;
 var $1 = 0, $_0 = 0;
 $1 = _malloc(28) | 0; //@line 74243
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 74247
  return $_0 | 0; //@line 74250
 }
 HEAP32[$1 >> 2] = 0; //@line 74254
 HEAP32[$1 + 4 >> 2] = 0; //@line 74257
 HEAP32[$1 + 8 >> 2] = _strdup((($name | 0) == 0 ? 62864 : $name) | 0) | 0; //@line 74263
 _memset($1 + 12 | 0, 0, 16); //@line 74265
 $_0 = $1; //@line 74267
 return $_0 | 0; //@line 74270
}
function _ini_sct_del($sct) {
 $sct = $sct | 0;
 var $_06 = 0, $3 = 0;
 if (($sct | 0) == 0) {
  return;
 } else {
  $_06 = $sct; //@line 74286
 }
 while (1) {
  $3 = HEAP32[$_06 >> 2] | 0; //@line 74291
  _ini_val_del(HEAP32[$_06 + 20 >> 2] | 0); //@line 74294
  _ini_sct_del(HEAP32[$_06 + 12 >> 2] | 0); //@line 74297
  _free(HEAP32[$_06 + 8 >> 2] | 0); //@line 74300
  _free($_06); //@line 74302
  if (($3 | 0) == 0) {
   break;
  } else {
   $_06 = $3; //@line 74308
  }
 }
 return;
}
function _ini_next_sct($sct, $val, $name) {
 $sct = $sct | 0;
 $val = $val | 0;
 $name = $name | 0;
 var $_012_in = 0, $_012 = 0, $_113 = 0, $18 = 0, $_0 = 0, label = 0;
 do {
  if (($val | 0) == 0) {
   if (($sct | 0) == 0) {
    $_0 = 0; //@line 74332
    return $_0 | 0; //@line 74335
   } else {
    $_012_in = $sct + 12 | 0; //@line 74339
    break;
   }
  } else {
   $_012_in = $val | 0; //@line 74344
  }
 } while (0);
 $_012 = HEAP32[$_012_in >> 2] | 0; //@line 74348
 if (($_012 | 0) == 0) {
  $_0 = 0; //@line 74352
  return $_0 | 0; //@line 74355
 }
 if (($name | 0) == 0) {
  $_0 = $_012; //@line 74360
  return $_0 | 0; //@line 74363
 } else {
  $_113 = $_012; //@line 74365
 }
 while (1) {
  if ((_strcmp(HEAP32[$_113 + 8 >> 2] | 0, $name | 0) | 0) == 0) {
   $_0 = $_113; //@line 74375
   label = 18686; //@line 74376
   break;
  }
  $18 = HEAP32[$_113 >> 2] | 0; //@line 74380
  if (($18 | 0) == 0) {
   $_0 = 0; //@line 74384
   label = 18687; //@line 74385
   break;
  } else {
   $_113 = $18; //@line 74388
  }
 }
 if ((label | 0) == 18687) {
  return $_0 | 0; //@line 74394
 } else if ((label | 0) == 18686) {
  return $_0 | 0; //@line 74399
 }
 return 0;
}
function _ini_next_val($sct, $val, $name) {
 $sct = $sct | 0;
 $val = $val | 0;
 $name = $name | 0;
 var $_011_in = 0, $_011 = 0, $_112 = 0, $17 = 0, $_0 = 0, label = 0;
 do {
  if (($val | 0) == 0) {
   if (($sct | 0) == 0) {
    $_0 = 0; //@line 74420
    return $_0 | 0; //@line 74423
   } else {
    $_011_in = $sct + 20 | 0; //@line 74427
    break;
   }
  } else {
   $_011_in = $val | 0; //@line 74432
  }
 } while (0);
 $_011 = HEAP32[$_011_in >> 2] | 0; //@line 74436
 if (($_011 | 0) == 0 | ($name | 0) == 0) {
  $_0 = 0; //@line 74442
  return $_0 | 0; //@line 74445
 } else {
  $_112 = $_011; //@line 74447
 }
 while (1) {
  if ((_strcmp(HEAP32[$_112 + 4 >> 2] | 0, $name | 0) | 0) == 0) {
   $_0 = $_112; //@line 74457
   label = 18701; //@line 74458
   break;
  }
  $17 = HEAP32[$_112 >> 2] | 0; //@line 74462
  if (($17 | 0) == 0) {
   $_0 = 0; //@line 74466
   label = 18698; //@line 74467
   break;
  } else {
   $_112 = $17; //@line 74470
  }
 }
 if ((label | 0) == 18701) {
  return $_0 | 0; //@line 74476
 } else if ((label | 0) == 18698) {
  return $_0 | 0; //@line 74481
 }
 return 0;
}
function _ini_get_name_and_index($str, $name, $idx, $noidx, $addnew, $last) {
 $str = $str | 0;
 $name = $name | 0;
 $idx = $idx | 0;
 $noidx = $noidx | 0;
 $addnew = $addnew | 0;
 $last = $last | 0;
 var $1 = 0, $2 = 0, $s_015 = 0, $7 = 0, $9 = 0, $s_018 = 0, $_pn17 = 0, $i_016 = 0, $15 = 0, $s_0 = 0, $17 = 0, $s_0_lcssa = 0, $_pn_lcssa = 0, $i_0_lcssa = 0, $i_0_lcssa30 = 0, $_pn_lcssa29 = 0, $s_0_lcssa28 = 0, $22 = 0, $27 = 0, $28 = 0, $36 = 0, $37 = 0, $s_114 = 0, $41 = 0, $42 = 0, $43 = 0, $s_2 = 0, $48 = 0, $_0 = 0;
 $1 = HEAP32[$str >> 2] | 0; //@line 74504
 HEAP32[$idx >> 2] = 0; //@line 74505
 HEAP32[$noidx >> 2] = 1; //@line 74506
 HEAP32[$addnew >> 2] = 0; //@line 74507
 HEAP32[$last >> 2] = 0; //@line 74508
 $2 = HEAP8[$1] | 0; //@line 74509
 do {
  if (($2 - 97 & 255) >= 26) {
   if (($2 - 65 & 255) < 26 | $2 << 24 >> 24 == 95) {
    break;
   } else {
    $_0 = 1; //@line 74523
   }
   return $_0 | 0; //@line 74527
  }
 } while (0);
 HEAP8[$name] = $2; //@line 74530
 $s_015 = $1 + 1 | 0; //@line 74531
 $7 = HEAP8[$s_015] | 0; //@line 74532
 do {
  if ($7 << 24 >> 24 == 0) {
   $s_0_lcssa28 = $s_015;
   $_pn_lcssa29 = $1;
   $i_0_lcssa30 = 1;
  } else {
   $i_016 = 1;
   $_pn17 = $1;
   $s_018 = $s_015;
   $9 = $7;
   while (1) {
    if (($9 - 97 & 255) >= 26) {
     if (!(($9 - 65 & 255) < 26 | $9 << 24 >> 24 == 95 | ($9 - 48 & 255) < 10)) {
      $i_0_lcssa = $i_016;
      $_pn_lcssa = $_pn17;
      $s_0_lcssa = $s_018;
      break;
     }
    }
    $15 = $i_016 + 1 | 0; //@line 74562
    HEAP8[$name + $i_016 | 0] = $9; //@line 74564
    $s_0 = $s_018 + 1 | 0; //@line 74565
    $17 = HEAP8[$s_0] | 0; //@line 74566
    if ($17 << 24 >> 24 != 0 & $15 >>> 0 < 256) {
     $i_016 = $15;
     $_pn17 = $s_018;
     $s_018 = $s_0;
     $9 = $17;
    } else {
     $i_0_lcssa = $15;
     $_pn_lcssa = $s_018;
     $s_0_lcssa = $s_0;
     break;
    }
   }
   if ($i_0_lcssa >>> 0 > 255) {
    $_0 = 1; //@line 74584
   } else {
    $s_0_lcssa28 = $s_0_lcssa;
    $_pn_lcssa29 = $_pn_lcssa;
    $i_0_lcssa30 = $i_0_lcssa;
    break;
   }
   return $_0 | 0; //@line 74591
  }
 } while (0);
 HEAP8[$name + $i_0_lcssa30 | 0] = 0; //@line 74598
 $22 = HEAP8[$s_0_lcssa28] | 0; //@line 74599
 if (($22 << 24 >> 24 | 0) == 91) {
  $27 = $_pn_lcssa29 + 2 | 0; //@line 74601
  $28 = HEAP8[$27] | 0; //@line 74602
  if (($28 << 24 >> 24 | 0) == 43) {
   HEAP32[$addnew >> 2] = 1; //@line 74604
   $s_2 = $_pn_lcssa29 + 3 | 0; //@line 74607
  } else if (($28 << 24 >> 24 | 0) == 45) {
   HEAP32[$last >> 2] = 1; //@line 74609
   $s_2 = $_pn_lcssa29 + 3 | 0; //@line 74612
  } else {
   if (($28 - 48 & 255) >= 10) {
    $_0 = 1; //@line 74618
    return $_0 | 0; //@line 74621
   }
   $s_114 = $27;
   $37 = $28;
   $36 = HEAP32[$idx >> 2] | 0;
   while (1) {
    $41 = ($37 << 24 >> 24) - 48 + ($36 * 10 | 0) | 0; //@line 74633
    HEAP32[$idx >> 2] = $41; //@line 74634
    $42 = $s_114 + 1 | 0; //@line 74635
    $43 = HEAP8[$42] | 0; //@line 74636
    if (($43 - 48 & 255) < 10) {
     $s_114 = $42;
     $37 = $43;
     $36 = $41;
    } else {
     $s_2 = $42; //@line 74643
     break;
    }
   }
  }
  if ((HEAP8[$s_2] | 0) != 93) {
   $_0 = 1; //@line 74653
   return $_0 | 0; //@line 74656
  }
  $48 = $s_2 + 1 | 0; //@line 74658
  HEAP32[$str >> 2] = (HEAP8[$48] | 0) == 46 ? $s_2 + 2 | 0 : $48; //@line 74663
  HEAP32[$noidx >> 2] = 0; //@line 74664
  $_0 = 0; //@line 74666
  return $_0 | 0; //@line 74669
 } else if (($22 << 24 >> 24 | 0) == 0) {
  HEAP32[$str >> 2] = $s_0_lcssa28; //@line 74671
  $_0 = 0; //@line 74673
  return $_0 | 0; //@line 74676
 } else if (($22 << 24 >> 24 | 0) == 46) {
  HEAP32[$str >> 2] = $_pn_lcssa29 + 2; //@line 74679
  $_0 = 0; //@line 74681
  return $_0 | 0; //@line 74684
 } else {
  $_0 = 1; //@line 74686
  return $_0 | 0; //@line 74689
 }
 return 0;
}
function _ini_get_sct($sct, $name, $add) {
 $sct = $sct | 0;
 $name = $name | 0;
 $add = $add | 0;
 var $1 = 0, $noidx = 0, $addnew = 0, $last = 0, $index = 0, $3 = 0, $4 = 0, $5 = 0, $7 = 0, $_09 = 0, $simple_0 = 0, $simple_0_ = 0, $25 = 0, $27 = 0, $30 = 0, $37 = 0, $42 = 0, $_pre_phi_i = 0, $50 = 0, $sub_010_i = 0, $sub_012_i = 0, $ret_011_i = 0, $sub_0_ret_0_i = 0, $sub_0_i = 0, $ret_0_lcssa_i = 0, $60 = 0, $62 = 0, $65 = 0, $76 = 0, $_pre_phi_i_i = 0, $81 = 0, $82 = 0, $sub_017_i = 0, $sub_019_i = 0, $_01318_i = 0, $_1_i = 0, $sub_0_i12 = 0, $_013_lcssa_i = 0, $_pre_i16 = 0, $_2_i_us = 0, $97 = 0, $_0_i18_us = 0, $_2_i = 0, $110 = 0, $111 = 0, $114 = 0, $117 = 0, $_0_i18 = 0, $_1 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 74717
 STACKTOP = STACKTOP + 296 | 0; //@line 74717
 $1 = sp | 0; //@line 74718
 $noidx = sp + 8 | 0; //@line 74719
 $addnew = sp + 16 | 0; //@line 74720
 $last = sp + 24 | 0; //@line 74721
 $index = sp + 32 | 0; //@line 74722
 HEAP32[$1 >> 2] = $name; //@line 74724
 if (($sct | 0) == 0) {
  $_0 = 0; //@line 74728
  STACKTOP = sp; //@line 74730
  return $_0 | 0; //@line 74731
 }
 $3 = sp + 40 | 0; //@line 74733
 $4 = ($add | 0) == 0; //@line 74734
 $5 = ($add | 0) != 0; //@line 74735
 $simple_0 = 1;
 $_09 = $sct;
 $7 = $name;
 L24294 : while (1) {
  if ((HEAP8[$7] | 0) == 0) {
   $_0 = $_09; //@line 74746
   label = 18779; //@line 74747
   break;
  }
  if ((_ini_get_name_and_index($1, $3, $index, $noidx, $addnew, $last) | 0) != 0) {
   $_0 = 0; //@line 74754
   label = 18777; //@line 74755
   break;
  }
  $simple_0_ = (HEAP8[HEAP32[$1 >> 2] | 0] | 0) == 0 ? $simple_0 : 0; //@line 74761
  L24298 : do {
   if ((HEAP32[$addnew >> 2] | 0) == 0) {
    if (!(($simple_0_ | 0) == 0 | $4)) {
     if ((HEAP32[$noidx >> 2] | 0) != 0) {
      label = 18736; //@line 74775
      break;
     }
    }
    if ((HEAP32[$last >> 2] | 0) != 0) {
     $50 = $_09 + 12 | 0; //@line 74783
     $sub_010_i = HEAP32[$50 >> 2] | 0; //@line 74784
     if (($sub_010_i | 0) == 0) {
      $ret_0_lcssa_i = 0; //@line 74788
     } else {
      $ret_011_i = 0;
      $sub_012_i = $sub_010_i;
      while (1) {
       $sub_0_ret_0_i = (_strcmp(HEAP32[$sub_012_i + 8 >> 2] | 0, $3 | 0) | 0) == 0 ? $sub_012_i : $ret_011_i; //@line 74798
       $sub_0_i = HEAP32[$sub_012_i >> 2] | 0; //@line 74800
       if (($sub_0_i | 0) == 0) {
        $ret_0_lcssa_i = $sub_0_ret_0_i; //@line 74804
        break;
       } else {
        $ret_011_i = $sub_0_ret_0_i;
        $sub_012_i = $sub_0_i;
       }
      }
     }
     if (!($5 & ($ret_0_lcssa_i | 0) == 0)) {
      $_1 = $ret_0_lcssa_i; //@line 74816
      break;
     }
     $60 = _malloc(28) | 0; //@line 74819
     if (($60 | 0) == 0) {
      $_0 = 0; //@line 74823
      label = 18773; //@line 74824
      break L24294;
     }
     $62 = $60; //@line 74827
     HEAP32[$60 >> 2] = 0; //@line 74829
     $65 = $60 + 4 | 0; //@line 74831
     HEAP32[$65 >> 2] = 0; //@line 74832
     HEAP32[$60 + 8 >> 2] = _strdup($3 | 0) | 0; //@line 74836
     _memset($60 + 12 | 0, 0, 16); //@line 74838
     if (($_09 | 0) == 0) {
      $_1 = $62; //@line 74842
      break;
     }
     HEAP32[$65 >> 2] = $_09; //@line 74845
     if ((HEAP32[$50 >> 2] | 0) == 0) {
      HEAP32[$50 >> 2] = $62; //@line 74850
      $_pre_phi_i_i = $_09 + 16 | 0; //@line 74853
     } else {
      $76 = $_09 + 16 | 0; //@line 74855
      HEAP32[HEAP32[$76 >> 2] >> 2] = $62; //@line 74858
      $_pre_phi_i_i = $76; //@line 74859
     }
     HEAP32[$_pre_phi_i_i >> 2] = $62; //@line 74862
     $_1 = $62; //@line 74864
     break;
    }
    $81 = HEAP32[$index >> 2] | 0; //@line 74867
    $82 = $_09 + 12 | 0; //@line 74868
    $sub_017_i = HEAP32[$82 >> 2] | 0; //@line 74869
    if (($sub_017_i | 0) == 0) {
     $_013_lcssa_i = $81; //@line 74873
    } else {
     $_01318_i = $81;
     $sub_019_i = $sub_017_i;
     while (1) {
      if ((_strcmp(HEAP32[$sub_019_i + 8 >> 2] | 0, $3 | 0) | 0) == 0) {
       if (($_01318_i | 0) == 0) {
        $_1 = $sub_019_i; //@line 74888
        break L24298;
       }
       $_1_i = $_01318_i - 1 | 0; //@line 74893
      } else {
       $_1_i = $_01318_i; //@line 74895
      }
      $sub_0_i12 = HEAP32[$sub_019_i >> 2] | 0; //@line 74899
      if (($sub_0_i12 | 0) == 0) {
       $_013_lcssa_i = $_1_i; //@line 74903
       break;
      } else {
       $_01318_i = $_1_i;
       $sub_019_i = $sub_0_i12;
      }
     }
    }
    if ($4) {
     $_0 = 0; //@line 74913
     label = 18776; //@line 74914
     break L24294;
    }
    $_pre_i16 = $_09 + 16 | 0; //@line 74918
    if (($_09 | 0) == 0) {
     $_2_i_us = $_013_lcssa_i; //@line 74920
     while (1) {
      $97 = _malloc(28) | 0; //@line 74924
      if (($97 | 0) == 0) {
       $_0_i18_us = 0; //@line 74928
      } else {
       HEAP32[$97 >> 2] = 0; //@line 74932
       HEAP32[$97 + 4 >> 2] = 0; //@line 74935
       HEAP32[$97 + 8 >> 2] = _strdup($3 | 0) | 0; //@line 74939
       _memset($97 + 12 | 0, 0, 16); //@line 74941
       $_0_i18_us = $97; //@line 74943
      }
      if (($_2_i_us | 0) == 0) {
       $_1 = $_0_i18_us; //@line 74948
       break L24298;
      }
      if (($_0_i18_us | 0) == 0) {
       $_0 = 0; //@line 74955
       label = 18775; //@line 74956
       break L24294;
      } else {
       $_2_i_us = $_2_i_us - 1 | 0; //@line 74959
      }
     }
    } else {
     $_2_i = $_013_lcssa_i; //@line 74963
    }
    while (1) {
     $110 = ($_2_i | 0) == 0; //@line 74967
     $111 = _malloc(28) | 0; //@line 74968
     if (($111 | 0) == 0) {
      $_0_i18 = 0; //@line 74972
     } else {
      $114 = $111; //@line 74974
      HEAP32[$111 >> 2] = 0; //@line 74976
      $117 = $111 + 4 | 0; //@line 74978
      HEAP32[$117 >> 2] = 0; //@line 74979
      HEAP32[$111 + 8 >> 2] = _strdup($3 | 0) | 0; //@line 74983
      _memset($111 + 12 | 0, 0, 16); //@line 74985
      HEAP32[$117 >> 2] = $_09; //@line 74986
      if ((HEAP32[$82 >> 2] | 0) == 0) {
       HEAP32[$82 >> 2] = $114; //@line 74991
      } else {
       HEAP32[HEAP32[$_pre_i16 >> 2] >> 2] = $114; //@line 74996
      }
      HEAP32[$_pre_i16 >> 2] = $114; //@line 74998
      $_0_i18 = $114; //@line 75000
     }
     if ($110) {
      $_1 = $_0_i18; //@line 75005
      break L24298;
     }
     if (($_0_i18 | 0) == 0) {
      $_0 = 0; //@line 75012
      label = 18774; //@line 75013
      break L24294;
     } else {
      $_2_i = $_2_i - 1 | 0; //@line 75016
     }
    }
   } else {
    label = 18736; //@line 75020
   }
  } while (0);
  do {
   if ((label | 0) == 18736) {
    label = 0; //@line 75025
    $25 = _malloc(28) | 0; //@line 75026
    if (($25 | 0) == 0) {
     $_0 = 0; //@line 75030
     label = 18780; //@line 75031
     break L24294;
    }
    $27 = $25; //@line 75034
    HEAP32[$25 >> 2] = 0; //@line 75036
    $30 = $25 + 4 | 0; //@line 75038
    HEAP32[$30 >> 2] = 0; //@line 75039
    HEAP32[$25 + 8 >> 2] = _strdup($3 | 0) | 0; //@line 75043
    _memset($25 + 12 | 0, 0, 16); //@line 75045
    if (($_09 | 0) == 0) {
     $_1 = $27; //@line 75049
     break;
    }
    HEAP32[$30 >> 2] = $_09; //@line 75052
    $37 = $_09 + 12 | 0; //@line 75053
    if ((HEAP32[$37 >> 2] | 0) == 0) {
     HEAP32[$37 >> 2] = $27; //@line 75058
     $_pre_phi_i = $_09 + 16 | 0; //@line 75061
    } else {
     $42 = $_09 + 16 | 0; //@line 75063
     HEAP32[HEAP32[$42 >> 2] >> 2] = $27; //@line 75066
     $_pre_phi_i = $42; //@line 75067
    }
    HEAP32[$_pre_phi_i >> 2] = $27; //@line 75070
    $_1 = $27; //@line 75072
   }
  } while (0);
  if (($_1 | 0) == 0) {
   $_0 = 0; //@line 75079
   label = 18781; //@line 75080
   break;
  }
  $simple_0 = $simple_0_;
  $_09 = $_1;
  $7 = HEAP32[$1 >> 2] | 0;
 }
 if ((label | 0) == 18780) {
  STACKTOP = sp; //@line 75089
  return $_0 | 0; //@line 75090
 } else if ((label | 0) == 18781) {
  STACKTOP = sp; //@line 75094
  return $_0 | 0; //@line 75095
 } else if ((label | 0) == 18773) {
  STACKTOP = sp; //@line 75099
  return $_0 | 0; //@line 75100
 } else if ((label | 0) == 18779) {
  STACKTOP = sp; //@line 75104
  return $_0 | 0; //@line 75105
 } else if ((label | 0) == 18774) {
  STACKTOP = sp; //@line 75109
  return $_0 | 0; //@line 75110
 } else if ((label | 0) == 18775) {
  STACKTOP = sp; //@line 75114
  return $_0 | 0; //@line 75115
 } else if ((label | 0) == 18776) {
  STACKTOP = sp; //@line 75119
  return $_0 | 0; //@line 75120
 } else if ((label | 0) == 18777) {
  STACKTOP = sp; //@line 75124
  return $_0 | 0; //@line 75125
 }
 return 0;
}
function _ini_str_init($is) {
 $is = $is | 0;
 HEAP32[$is >> 2] = 0; //@line 75136
 HEAP32[$is + 4 >> 2] = 0; //@line 75138
 HEAP32[$is + 8 >> 2] = 0; //@line 75140
 return;
}
function _ini_get_val($sct, $name, $add) {
 $sct = $sct | 0;
 $name = $name | 0;
 $add = $add | 0;
 var $1 = 0, $noidx = 0, $addnew = 0, $last = 0, $index = 0, $3 = 0, $4 = 0, $5 = 0, $7 = 0, $_014 = 0, $simple_0 = 0, $18 = 0, $26 = 0, $31 = 0, $36 = 0, $_pre_phi_i = 0, $44 = 0, $val_010_i = 0, $val_012_i = 0, $ret_011_i = 0, $val_0_ret_0_i = 0, $val_0_i = 0, $ret_0_lcssa_i = 0, $54 = 0, $63 = 0, $_pre_phi_i_i = 0, $68 = 0, $69 = 0, $val_017_i = 0, $val_019_i = 0, $_01318_i = 0, $_1_i = 0, $val_0_i17 = 0, $_013_lcssa_i = 0, $_pre_i_i19 = 0, $_2_us_i = 0, $84 = 0, $_2_i = 0, $88 = 0, $89 = 0, $_0_i_i = 0, $104 = 0, $106 = 0, $109 = 0, $116 = 0, $121 = 0, $_pre_phi_i22 = 0, $129 = 0, $sub_010_i = 0, $sub_012_i = 0, $ret_011_i24 = 0, $sub_0_ret_0_i = 0, $sub_0_i = 0, $ret_0_lcssa_i26 = 0, $139 = 0, $141 = 0, $144 = 0, $155 = 0, $_pre_phi_i_i30 = 0, $160 = 0, $161 = 0, $sub_017_i = 0, $sub_019_i = 0, $_01318_i32 = 0, $_1_i34 = 0, $sub_0_i35 = 0, $_013_lcssa_i36 = 0, $_pre_i42 = 0, $_2_i38_us = 0, $176 = 0, $_0_i44_us = 0, $_2_i38 = 0, $189 = 0, $190 = 0, $193 = 0, $196 = 0, $_0_i44 = 0, $_1 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 75178
 STACKTOP = STACKTOP + 296 | 0; //@line 75178
 $1 = sp | 0; //@line 75179
 $noidx = sp + 8 | 0; //@line 75180
 $addnew = sp + 16 | 0; //@line 75181
 $last = sp + 24 | 0; //@line 75182
 $index = sp + 32 | 0; //@line 75183
 HEAP32[$1 >> 2] = $name; //@line 75185
 if (($sct | 0) == 0) {
  $_0 = 0; //@line 75189
  STACKTOP = sp; //@line 75191
  return $_0 | 0; //@line 75192
 }
 $3 = sp + 40 | 0; //@line 75194
 $4 = ($add | 0) == 0; //@line 75195
 $5 = ($add | 0) != 0; //@line 75196
 $simple_0 = 1;
 $_014 = $sct;
 $7 = $name;
 L24367 : while (1) {
  if ((HEAP8[$7] | 0) == 0) {
   $_0 = 0; //@line 75207
   label = 18864; //@line 75208
   break;
  }
  if ((_ini_get_name_and_index($1, $3, $index, $noidx, $addnew, $last) | 0) != 0) {
   $_0 = 0; //@line 75215
   label = 18865; //@line 75216
   break;
  }
  $18 = (HEAP32[$addnew >> 2] | 0) == 0; //@line 75223
  if ((HEAP8[HEAP32[$1 >> 2] | 0] | 0) == 0) {
   label = 18788; //@line 75226
   break;
  }
  L24372 : do {
   if ($18) {
    if ((HEAP32[$last >> 2] | 0) != 0) {
     $129 = $_014 + 12 | 0; //@line 75236
     $sub_010_i = HEAP32[$129 >> 2] | 0; //@line 75237
     if (($sub_010_i | 0) == 0) {
      $ret_0_lcssa_i26 = 0; //@line 75241
     } else {
      $ret_011_i24 = 0;
      $sub_012_i = $sub_010_i;
      while (1) {
       $sub_0_ret_0_i = (_strcmp(HEAP32[$sub_012_i + 8 >> 2] | 0, $3 | 0) | 0) == 0 ? $sub_012_i : $ret_011_i24; //@line 75251
       $sub_0_i = HEAP32[$sub_012_i >> 2] | 0; //@line 75253
       if (($sub_0_i | 0) == 0) {
        $ret_0_lcssa_i26 = $sub_0_ret_0_i; //@line 75257
        break;
       } else {
        $ret_011_i24 = $sub_0_ret_0_i;
        $sub_012_i = $sub_0_i;
       }
      }
     }
     if (!($5 & ($ret_0_lcssa_i26 | 0) == 0)) {
      $_1 = $ret_0_lcssa_i26; //@line 75269
      break;
     }
     $139 = _malloc(28) | 0; //@line 75272
     if (($139 | 0) == 0) {
      $_0 = 0; //@line 75276
      label = 18866; //@line 75277
      break L24367;
     }
     $141 = $139; //@line 75280
     HEAP32[$139 >> 2] = 0; //@line 75282
     $144 = $139 + 4 | 0; //@line 75284
     HEAP32[$144 >> 2] = 0; //@line 75285
     HEAP32[$139 + 8 >> 2] = _strdup($3 | 0) | 0; //@line 75289
     _memset($139 + 12 | 0, 0, 16); //@line 75291
     if (($_014 | 0) == 0) {
      $_1 = $141; //@line 75295
      break;
     }
     HEAP32[$144 >> 2] = $_014; //@line 75298
     if ((HEAP32[$129 >> 2] | 0) == 0) {
      HEAP32[$129 >> 2] = $141; //@line 75303
      $_pre_phi_i_i30 = $_014 + 16 | 0; //@line 75306
     } else {
      $155 = $_014 + 16 | 0; //@line 75308
      HEAP32[HEAP32[$155 >> 2] >> 2] = $141; //@line 75311
      $_pre_phi_i_i30 = $155; //@line 75312
     }
     HEAP32[$_pre_phi_i_i30 >> 2] = $141; //@line 75315
     $_1 = $141; //@line 75317
     break;
    }
    $160 = HEAP32[$index >> 2] | 0; //@line 75320
    $161 = $_014 + 12 | 0; //@line 75321
    $sub_017_i = HEAP32[$161 >> 2] | 0; //@line 75322
    if (($sub_017_i | 0) == 0) {
     $_013_lcssa_i36 = $160; //@line 75326
    } else {
     $_01318_i32 = $160;
     $sub_019_i = $sub_017_i;
     while (1) {
      if ((_strcmp(HEAP32[$sub_019_i + 8 >> 2] | 0, $3 | 0) | 0) == 0) {
       if (($_01318_i32 | 0) == 0) {
        $_1 = $sub_019_i; //@line 75341
        break L24372;
       }
       $_1_i34 = $_01318_i32 - 1 | 0; //@line 75346
      } else {
       $_1_i34 = $_01318_i32; //@line 75348
      }
      $sub_0_i35 = HEAP32[$sub_019_i >> 2] | 0; //@line 75352
      if (($sub_0_i35 | 0) == 0) {
       $_013_lcssa_i36 = $_1_i34; //@line 75356
       break;
      } else {
       $_01318_i32 = $_1_i34;
       $sub_019_i = $sub_0_i35;
      }
     }
    }
    if ($4) {
     $_0 = 0; //@line 75366
     label = 18863; //@line 75367
     break L24367;
    }
    $_pre_i42 = $_014 + 16 | 0; //@line 75371
    if (($_014 | 0) == 0) {
     $_2_i38_us = $_013_lcssa_i36; //@line 75373
     while (1) {
      $176 = _malloc(28) | 0; //@line 75377
      if (($176 | 0) == 0) {
       $_0_i44_us = 0; //@line 75381
      } else {
       HEAP32[$176 >> 2] = 0; //@line 75385
       HEAP32[$176 + 4 >> 2] = 0; //@line 75388
       HEAP32[$176 + 8 >> 2] = _strdup($3 | 0) | 0; //@line 75392
       _memset($176 + 12 | 0, 0, 16); //@line 75394
       $_0_i44_us = $176; //@line 75396
      }
      if (($_2_i38_us | 0) == 0) {
       $_1 = $_0_i44_us; //@line 75401
       break L24372;
      }
      if (($_0_i44_us | 0) == 0) {
       $_0 = 0; //@line 75408
       label = 18876; //@line 75409
       break L24367;
      } else {
       $_2_i38_us = $_2_i38_us - 1 | 0; //@line 75412
      }
     }
    } else {
     $_2_i38 = $_013_lcssa_i36; //@line 75416
    }
    while (1) {
     $189 = ($_2_i38 | 0) == 0; //@line 75420
     $190 = _malloc(28) | 0; //@line 75421
     if (($190 | 0) == 0) {
      $_0_i44 = 0; //@line 75425
     } else {
      $193 = $190; //@line 75427
      HEAP32[$190 >> 2] = 0; //@line 75429
      $196 = $190 + 4 | 0; //@line 75431
      HEAP32[$196 >> 2] = 0; //@line 75432
      HEAP32[$190 + 8 >> 2] = _strdup($3 | 0) | 0; //@line 75436
      _memset($190 + 12 | 0, 0, 16); //@line 75438
      HEAP32[$196 >> 2] = $_014; //@line 75439
      if ((HEAP32[$161 >> 2] | 0) == 0) {
       HEAP32[$161 >> 2] = $193; //@line 75444
      } else {
       HEAP32[HEAP32[$_pre_i42 >> 2] >> 2] = $193; //@line 75449
      }
      HEAP32[$_pre_i42 >> 2] = $193; //@line 75451
      $_0_i44 = $193; //@line 75453
     }
     if ($189) {
      $_1 = $_0_i44; //@line 75458
      break L24372;
     }
     if (($_0_i44 | 0) == 0) {
      $_0 = 0; //@line 75465
      label = 18881; //@line 75466
      break L24367;
     } else {
      $_2_i38 = $_2_i38 - 1 | 0; //@line 75469
     }
    }
   } else {
    $104 = _malloc(28) | 0; //@line 75473
    if (($104 | 0) == 0) {
     $_0 = 0; //@line 75477
     label = 18871; //@line 75478
     break L24367;
    }
    $106 = $104; //@line 75481
    HEAP32[$104 >> 2] = 0; //@line 75483
    $109 = $104 + 4 | 0; //@line 75485
    HEAP32[$109 >> 2] = 0; //@line 75486
    HEAP32[$104 + 8 >> 2] = _strdup($3 | 0) | 0; //@line 75490
    _memset($104 + 12 | 0, 0, 16); //@line 75492
    if (($_014 | 0) == 0) {
     $_1 = $106; //@line 75496
     break;
    }
    HEAP32[$109 >> 2] = $_014; //@line 75499
    $116 = $_014 + 12 | 0; //@line 75500
    if ((HEAP32[$116 >> 2] | 0) == 0) {
     HEAP32[$116 >> 2] = $106; //@line 75505
     $_pre_phi_i22 = $_014 + 16 | 0; //@line 75508
    } else {
     $121 = $_014 + 16 | 0; //@line 75510
     HEAP32[HEAP32[$121 >> 2] >> 2] = $106; //@line 75513
     $_pre_phi_i22 = $121; //@line 75514
    }
    HEAP32[$_pre_phi_i22 >> 2] = $106; //@line 75517
    $_1 = $106; //@line 75519
   }
  } while (0);
  if (($_1 | 0) == 0) {
   $_0 = 0; //@line 75526
   label = 18882; //@line 75527
   break;
  }
  $simple_0 = 0;
  $_014 = $_1;
  $7 = HEAP32[$1 >> 2] | 0;
 }
 if ((label | 0) == 18863) {
  STACKTOP = sp; //@line 75536
  return $_0 | 0; //@line 75537
 } else if ((label | 0) == 18864) {
  STACKTOP = sp; //@line 75541
  return $_0 | 0; //@line 75542
 } else if ((label | 0) == 18865) {
  STACKTOP = sp; //@line 75546
  return $_0 | 0; //@line 75547
 } else if ((label | 0) == 18788) {
  do {
   if ($18) {
    if (!(($simple_0 | 0) == 0 | $4)) {
     if ((HEAP32[$noidx >> 2] | 0) != 0) {
      break;
     }
    }
    if ((HEAP32[$last >> 2] | 0) != 0) {
     $44 = $_014 + 20 | 0; //@line 75568
     $val_010_i = HEAP32[$44 >> 2] | 0; //@line 75569
     if (($val_010_i | 0) == 0) {
      $ret_0_lcssa_i = 0; //@line 75573
     } else {
      $ret_011_i = 0;
      $val_012_i = $val_010_i;
      while (1) {
       $val_0_ret_0_i = (_strcmp(HEAP32[$val_012_i + 4 >> 2] | 0, $3 | 0) | 0) == 0 ? $val_012_i : $ret_011_i; //@line 75583
       $val_0_i = HEAP32[$val_012_i >> 2] | 0; //@line 75585
       if (($val_0_i | 0) == 0) {
        $ret_0_lcssa_i = $val_0_ret_0_i; //@line 75589
        break;
       } else {
        $ret_011_i = $val_0_ret_0_i;
        $val_012_i = $val_0_i;
       }
      }
     }
     if (!($5 & ($ret_0_lcssa_i | 0) == 0)) {
      $_0 = $ret_0_lcssa_i; //@line 75601
      STACKTOP = sp; //@line 75603
      return $_0 | 0; //@line 75604
     }
     $54 = _ini_val_new($3) | 0; //@line 75606
     if (($54 | 0) == 0) {
      $_0 = 0; //@line 75610
      STACKTOP = sp; //@line 75612
      return $_0 | 0; //@line 75613
     }
     if (($_014 | 0) == 0) {
      $_0 = $54; //@line 75618
      STACKTOP = sp; //@line 75620
      return $_0 | 0; //@line 75621
     }
     if ((HEAP32[$44 >> 2] | 0) == 0) {
      HEAP32[$44 >> 2] = $54; //@line 75627
      $_pre_phi_i_i = $_014 + 24 | 0; //@line 75630
     } else {
      $63 = $_014 + 24 | 0; //@line 75632
      HEAP32[HEAP32[$63 >> 2] >> 2] = $54; //@line 75635
      $_pre_phi_i_i = $63; //@line 75636
     }
     HEAP32[$_pre_phi_i_i >> 2] = $54; //@line 75639
     $_0 = $54; //@line 75641
     STACKTOP = sp; //@line 75643
     return $_0 | 0; //@line 75644
    }
    $68 = HEAP32[$index >> 2] | 0; //@line 75646
    $69 = $_014 + 20 | 0; //@line 75647
    $val_017_i = HEAP32[$69 >> 2] | 0; //@line 75648
    L24454 : do {
     if (($val_017_i | 0) == 0) {
      $_013_lcssa_i = $68; //@line 75653
     } else {
      $_01318_i = $68;
      $val_019_i = $val_017_i;
      while (1) {
       if ((_strcmp(HEAP32[$val_019_i + 4 >> 2] | 0, $3 | 0) | 0) == 0) {
        if (($_01318_i | 0) == 0) {
         $_0 = $val_019_i; //@line 75668
         break;
        }
        $_1_i = $_01318_i - 1 | 0; //@line 75673
       } else {
        $_1_i = $_01318_i; //@line 75675
       }
       $val_0_i17 = HEAP32[$val_019_i >> 2] | 0; //@line 75679
       if (($val_0_i17 | 0) == 0) {
        $_013_lcssa_i = $_1_i; //@line 75683
        break L24454;
       } else {
        $_01318_i = $_1_i;
        $val_019_i = $val_0_i17;
       }
      }
      STACKTOP = sp; //@line 75690
      return $_0 | 0; //@line 75691
     }
    } while (0);
    if ($4) {
     $_0 = 0; //@line 75697
     STACKTOP = sp; //@line 75699
     return $_0 | 0; //@line 75700
    }
    $_pre_i_i19 = $_014 + 24 | 0; //@line 75703
    if (($_014 | 0) == 0) {
     $_2_us_i = $_013_lcssa_i; //@line 75705
     while (1) {
      $84 = _ini_val_new($3) | 0; //@line 75709
      if (($_2_us_i | 0) == 0) {
       $_0 = $84; //@line 75712
       label = 18879; //@line 75713
       break;
      }
      if (($84 | 0) == 0) {
       $_0 = 0; //@line 75720
       label = 18880; //@line 75721
       break;
      } else {
       $_2_us_i = $_2_us_i - 1 | 0; //@line 75724
      }
     }
     if ((label | 0) == 18879) {
      STACKTOP = sp; //@line 75729
      return $_0 | 0; //@line 75730
     } else if ((label | 0) == 18880) {
      STACKTOP = sp; //@line 75734
      return $_0 | 0; //@line 75735
     }
    } else {
     $_2_i = $_013_lcssa_i; //@line 75738
    }
    while (1) {
     $88 = ($_2_i | 0) == 0; //@line 75742
     $89 = _ini_val_new($3) | 0; //@line 75743
     if (($89 | 0) == 0) {
      $_0_i_i = 0; //@line 75747
     } else {
      if ((HEAP32[$69 >> 2] | 0) == 0) {
       HEAP32[$69 >> 2] = $89; //@line 75753
      } else {
       HEAP32[HEAP32[$_pre_i_i19 >> 2] >> 2] = $89; //@line 75758
      }
      HEAP32[$_pre_i_i19 >> 2] = $89; //@line 75760
      $_0_i_i = $89; //@line 75762
     }
     if ($88) {
      $_0 = $_0_i_i; //@line 75767
      label = 18861; //@line 75768
      break;
     }
     if (($_0_i_i | 0) == 0) {
      $_0 = 0; //@line 75775
      label = 18872; //@line 75776
      break;
     } else {
      $_2_i = $_2_i - 1 | 0; //@line 75779
     }
    }
    if ((label | 0) == 18861) {
     STACKTOP = sp; //@line 75784
     return $_0 | 0; //@line 75785
    } else if ((label | 0) == 18872) {
     STACKTOP = sp; //@line 75789
     return $_0 | 0; //@line 75790
    }
   }
  } while (0);
  $26 = _ini_val_new($3) | 0; //@line 75794
  if (($26 | 0) == 0) {
   $_0 = 0; //@line 75798
   STACKTOP = sp; //@line 75800
   return $_0 | 0; //@line 75801
  }
  if (($_014 | 0) == 0) {
   $_0 = $26; //@line 75806
   STACKTOP = sp; //@line 75808
   return $_0 | 0; //@line 75809
  }
  $31 = $_014 + 20 | 0; //@line 75811
  if ((HEAP32[$31 >> 2] | 0) == 0) {
   HEAP32[$31 >> 2] = $26; //@line 75816
   $_pre_phi_i = $_014 + 24 | 0; //@line 75819
  } else {
   $36 = $_014 + 24 | 0; //@line 75821
   HEAP32[HEAP32[$36 >> 2] >> 2] = $26; //@line 75824
   $_pre_phi_i = $36; //@line 75825
  }
  HEAP32[$_pre_phi_i >> 2] = $26; //@line 75828
  $_0 = $26; //@line 75830
  STACKTOP = sp; //@line 75832
  return $_0 | 0; //@line 75833
 } else if ((label | 0) == 18876) {
  STACKTOP = sp; //@line 75837
  return $_0 | 0; //@line 75838
 } else if ((label | 0) == 18881) {
  STACKTOP = sp; //@line 75842
  return $_0 | 0; //@line 75843
 } else if ((label | 0) == 18882) {
  STACKTOP = sp; //@line 75847
  return $_0 | 0; //@line 75848
 } else if ((label | 0) == 18866) {
  STACKTOP = sp; //@line 75852
  return $_0 | 0; //@line 75853
 } else if ((label | 0) == 18871) {
  STACKTOP = sp; //@line 75857
  return $_0 | 0; //@line 75858
 }
 return 0;
}
function _ini_get_uint32($sct, $name, $ret, $def) {
 $sct = $sct | 0;
 $name = $name | 0;
 $ret = $ret | 0;
 $def = $def | 0;
 var $1 = 0, $_0 = 0;
 HEAP32[$ret >> 2] = $def; //@line 75871
 $1 = _ini_get_val($sct, $name, 0) | 0; //@line 75872
 if (($1 | 0) == 0) {
  $_0 = 1; //@line 75876
  return $_0 | 0; //@line 75879
 }
 $_0 = (_ini_val_get_uint32($1, $ret) | 0) != 0 | 0; //@line 75885
 return $_0 | 0; //@line 75888
}
function _ini_get_uint16($sct, $name, $ret, $def) {
 $sct = $sct | 0;
 $name = $name | 0;
 $ret = $ret | 0;
 $def = $def | 0;
 var $1 = 0, $_0 = 0;
 HEAP32[$ret >> 2] = $def; //@line 75900
 $1 = _ini_get_val($sct, $name, 0) | 0; //@line 75901
 if (($1 | 0) == 0) {
  $_0 = 1; //@line 75905
  return $_0 | 0; //@line 75908
 }
 $_0 = (_ini_val_get_uint16($1, $ret) | 0) != 0 | 0; //@line 75914
 return $_0 | 0; //@line 75917
}
function _ini_get_sint16($sct, $name, $ret, $def) {
 $sct = $sct | 0;
 $name = $name | 0;
 $ret = $ret | 0;
 $def = $def | 0;
 var $1 = 0, $_0 = 0;
 HEAP32[$ret >> 2] = $def; //@line 75929
 $1 = _ini_get_val($sct, $name, 0) | 0; //@line 75930
 if (($1 | 0) == 0) {
  $_0 = 1; //@line 75934
  return $_0 | 0; //@line 75937
 }
 $_0 = (_ini_val_get_sint16($1, $ret) | 0) != 0 | 0; //@line 75943
 return $_0 | 0; //@line 75946
}
function _ini_get_bool($sct, $name, $ret, $def) {
 $sct = $sct | 0;
 $name = $name | 0;
 $ret = $ret | 0;
 $def = $def | 0;
 var $3 = 0, $_0 = 0;
 HEAP32[$ret >> 2] = ($def | 0) != 0; //@line 75960
 $3 = _ini_get_val($sct, $name, 0) | 0; //@line 75961
 if (($3 | 0) == 0) {
  $_0 = 1; //@line 75965
  return $_0 | 0; //@line 75968
 }
 $_0 = (_ini_val_get_bool($3, $ret) | 0) != 0 | 0; //@line 75974
 return $_0 | 0; //@line 75977
}
function _ini_get_string($sct, $name, $ret, $def) {
 $sct = $sct | 0;
 $name = $name | 0;
 $ret = $ret | 0;
 $def = $def | 0;
 var $1 = 0, $4 = 0, $_0 = 0;
 HEAP32[$ret >> 2] = $def; //@line 75989
 $1 = _ini_get_val($sct, $name, 0) | 0; //@line 75990
 do {
  if (($1 | 0) == 0) {
   $_0 = 1; //@line 75995
  } else {
   $4 = _ini_val_get_str($1) | 0; //@line 75997
   if (($4 | 0) == 0) {
    $_0 = 0; //@line 76001
    break;
   }
   HEAP32[$ret >> 2] = $4; //@line 76004
   $_0 = 0; //@line 76006
  }
 } while (0);
 return $_0 | 0; //@line 76011
}
function _ini_str_add($is, $s1, $s2, $s3) {
 $is = $is | 0;
 $s1 = $s1 | 0;
 $s2 = $s2 | 0;
 $s3 = $s3 | 0;
 var $1 = 0, $5 = 0, $6 = 0, $10 = 0, $11 = 0, $15 = 0, $16 = 0, $21 = 0, $22 = 0, $23 = 0, $max_0 = 0, $31 = 0, $33 = 0, $41 = 0, $47 = 0, $50 = 0, $_sum = 0, $53 = 0, $_pre_phi46 = 0, $_pre_phi = 0, $57 = 0, $_0 = 0;
 $1 = ($s1 | 0) != 0; //@line 76029
 if ($1) {
  $5 = _strlen($s1 | 0) | 0; //@line 76034
 } else {
  $5 = 0; //@line 76036
 }
 $6 = ($s2 | 0) != 0; //@line 76039
 if ($6) {
  $10 = _strlen($s2 | 0) | 0; //@line 76044
 } else {
  $10 = 0; //@line 76046
 }
 $11 = ($s3 | 0) != 0; //@line 76049
 if ($11) {
  $15 = _strlen($s3 | 0) | 0; //@line 76054
 } else {
  $15 = 0; //@line 76056
 }
 $16 = $is | 0; //@line 76059
 $21 = $5 + 1 + $10 + $15 + (HEAP32[$16 >> 2] | 0) | 0; //@line 76064
 $22 = $is + 4 | 0; //@line 76065
 $23 = HEAP32[$22 >> 2] | 0; //@line 76066
 do {
  if ($21 >>> 0 >= $23 >>> 0) {
   $max_0 = ($23 | 0) == 0 ? 256 : $23; //@line 76074
   while (1) {
    if ($21 >>> 0 < $max_0 >>> 0) {
     break;
    } else {
     $max_0 = $max_0 << 1; //@line 76083
    }
   }
   $31 = $is + 8 | 0; //@line 76086
   $33 = _realloc(HEAP32[$31 >> 2] | 0, $max_0) | 0; //@line 76088
   if (($33 | 0) == 0) {
    $_0 = 1; //@line 76092
    return $_0 | 0; //@line 76095
   } else {
    HEAP32[$22 >> 2] = $max_0; //@line 76097
    HEAP32[$31 >> 2] = $33; //@line 76098
    break;
   }
  }
 } while (0);
 if ($1) {
  $41 = (HEAP32[$is + 8 >> 2] | 0) + (HEAP32[$16 >> 2] | 0) | 0; //@line 76109
  _memcpy($41 | 0, $s1 | 0, $5) | 0; //@line 76110
 }
 if ($6) {
  $47 = (HEAP32[$is + 8 >> 2] | 0) + ((HEAP32[$16 >> 2] | 0) + $5) | 0; //@line 76119
  _memcpy($47 | 0, $s2 | 0, $10) | 0; //@line 76120
 }
 if ($11) {
  $50 = $is + 8 | 0; //@line 76125
  $_sum = $10 + $5 | 0; //@line 76128
  $53 = (HEAP32[$50 >> 2] | 0) + ($_sum + (HEAP32[$16 >> 2] | 0)) | 0; //@line 76130
  _memcpy($53 | 0, $s3 | 0, $15) | 0; //@line 76131
  $_pre_phi = $_sum;
  $_pre_phi46 = $50;
 } else {
  $_pre_phi = $10 + $5 | 0;
  $_pre_phi46 = $is + 8 | 0;
 }
 $57 = $_pre_phi + $15 + (HEAP32[$16 >> 2] | 0) | 0; //@line 76144
 HEAP32[$16 >> 2] = $57; //@line 76145
 HEAP8[(HEAP32[$_pre_phi46 >> 2] | 0) + $57 | 0] = 0; //@line 76148
 $_0 = 0; //@line 76150
 return $_0 | 0; //@line 76153
}
function _ini_str_eval($is, $sct, $free) {
 $is = $is | 0;
 $sct = $sct | 0;
 $free = $free | 0;
 var $1 = 0, $3 = 0;
 $1 = $is + 8 | 0; //@line 76164
 $3 = _ini_read_str($sct, HEAP32[$1 >> 2] | 0) | 0; //@line 76166
 if (($free | 0) == 0) {
  return $3 | 0; //@line 76171
 }
 _free(HEAP32[$1 >> 2] | 0); //@line 76174
 return $3 | 0; //@line 76177
}
function _ini_val_init($val, $name) {
 $val = $val | 0;
 $name = $name | 0;
 var $2 = 0;
 HEAP32[$val >> 2] = 0; //@line 76188
 $2 = $val + 4 | 0; //@line 76189
 HEAP32[$2 >> 2] = 0; //@line 76190
 HEAP32[$val + 8 >> 2] = 0; //@line 76192
 if (($name | 0) == 0) {
  return;
 }
 HEAP32[$2 >> 2] = _strdup($name | 0) | 0; //@line 76200
 return;
}
function _ini_val_free($val) {
 $val = $val | 0;
 var $3 = 0;
 if (($val | 0) == 0) {
  return;
 }
 $3 = $val + 8 | 0; //@line 76218
 if ((HEAP32[$3 >> 2] | 0) == 2) {
  _free(HEAP32[$val + 12 >> 2] | 0); //@line 76225
 }
 HEAP32[$3 >> 2] = 0; //@line 76228
 _free(HEAP32[$val + 4 >> 2] | 0); //@line 76231
 return;
}
function _ini_val_set_none($val) {
 $val = $val | 0;
 var $1 = 0;
 $1 = $val + 8 | 0; //@line 76243
 if ((HEAP32[$1 >> 2] | 0) != 2) {
  HEAP32[$1 >> 2] = 0; //@line 76248
  return;
 }
 _free(HEAP32[$val + 12 >> 2] | 0); //@line 76254
 HEAP32[$1 >> 2] = 0; //@line 76256
 return;
}
function _ini_val_new($name) {
 $name = $name | 0;
 var $1 = 0, $2 = 0, $7 = 0, $_0 = 0;
 $1 = _malloc(16) | 0; //@line 76268
 $2 = $1; //@line 76269
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 76273
  return $_0 | 0; //@line 76276
 }
 HEAP32[$1 >> 2] = 0; //@line 76279
 $7 = $1 + 4 | 0; //@line 76281
 HEAP32[$7 >> 2] = 0; //@line 76282
 HEAP32[$1 + 8 >> 2] = 0; //@line 76285
 if (($name | 0) == 0) {
  $_0 = $2; //@line 76289
  return $_0 | 0; //@line 76292
 }
 HEAP32[$7 >> 2] = _strdup($name | 0) | 0; //@line 76295
 $_0 = $2; //@line 76297
 return $_0 | 0; //@line 76300
}
function _ini_val_del($val) {
 $val = $val | 0;
 var $_04 = 0, $3 = 0, $4 = 0;
 if (($val | 0) == 0) {
  return;
 } else {
  $_04 = $val; //@line 76316
 }
 while (1) {
  $3 = HEAP32[$_04 >> 2] | 0; //@line 76321
  $4 = $_04 + 8 | 0; //@line 76322
  if ((HEAP32[$4 >> 2] | 0) == 2) {
   _free(HEAP32[$_04 + 12 >> 2] | 0); //@line 76329
  }
  HEAP32[$4 >> 2] = 0; //@line 76332
  _free(HEAP32[$_04 + 4 >> 2] | 0); //@line 76335
  _free($_04); //@line 76337
  if (($3 | 0) == 0) {
   break;
  } else {
   $_04 = $3; //@line 76343
  }
 }
 return;
}
function _ini_val_get_uint32($val, $v) {
 $val = $val | 0;
 $v = $v | 0;
 var $_0 = 0;
 if ((HEAP32[$val + 8 >> 2] | 0) != 1) {
  $_0 = 1; //@line 76362
  return $_0 | 0; //@line 76365
 }
 HEAP32[$v >> 2] = HEAP32[$val + 12 >> 2]; //@line 76370
 $_0 = 0; //@line 76372
 return $_0 | 0; //@line 76375
}
function _ini_val_get_uint16($val, $v) {
 $val = $val | 0;
 $v = $v | 0;
 var $_0 = 0;
 if ((HEAP32[$val + 8 >> 2] | 0) != 1) {
  $_0 = 1; //@line 76390
  return $_0 | 0; //@line 76393
 }
 HEAP32[$v >> 2] = HEAP32[$val + 12 >> 2] & 65535; //@line 76399
 $_0 = 0; //@line 76401
 return $_0 | 0; //@line 76404
}
function _ini_val_get_sint16($val, $v) {
 $val = $val | 0;
 $v = $v | 0;
 var $7 = 0, $tmp_0_load4_ph = 0, $_0 = 0;
 if ((HEAP32[$val + 8 >> 2] | 0) != 1) {
  $_0 = 1; //@line 76420
  return $_0 | 0; //@line 76423
 }
 $7 = HEAP32[$val + 12 >> 2] | 0; //@line 76427
 if (($7 | 0) < 0) {
  $tmp_0_load4_ph = -(-$7 & 2147483647) | 0; //@line 76435
 } else {
  $tmp_0_load4_ph = $7; //@line 76437
 }
 if (($tmp_0_load4_ph + 32767 | 0) >>> 0 > 65534) {
  $_0 = 1; //@line 76444
  return $_0 | 0; //@line 76447
 }
 HEAP32[$v >> 2] = $tmp_0_load4_ph; //@line 76449
 $_0 = 0; //@line 76451
 return $_0 | 0; //@line 76454
}
function _ini_val_get_bool($val, $v) {
 $val = $val | 0;
 $v = $v | 0;
 var $_0 = 0;
 if ((HEAP32[$val + 8 >> 2] | 0) != 1) {
  $_0 = 1; //@line 76470
  return $_0 | 0; //@line 76473
 }
 HEAP32[$v >> 2] = (HEAP32[$val + 12 >> 2] | 0) != 0; //@line 76480
 $_0 = 0; //@line 76482
 return $_0 | 0; //@line 76485
}
function _ini_val_get_str($val) {
 $val = $val | 0;
 var $_0 = 0;
 if ((HEAP32[$val + 8 >> 2] | 0) != 2) {
  $_0 = 0; //@line 76499
  return $_0 | 0; //@line 76502
 }
 $_0 = HEAP32[$val + 12 >> 2] | 0; //@line 76507
 return $_0 | 0; //@line 76510
}
function _ini_val_copy($dst, $src) {
 $dst = $dst | 0;
 $src = $src | 0;
 var $2 = 0, $6 = 0, $7 = 0, $10 = 0, $15 = 0, $16 = 0, $19 = 0, $24 = 0;
 $2 = HEAP32[$src + 8 >> 2] | 0; //@line 76523
 if (($2 | 0) == 1) {
  $6 = HEAP32[$src + 12 >> 2] | 0; //@line 76527
  $7 = $dst + 8 | 0; //@line 76528
  $10 = $dst + 12 | 0; //@line 76531
  if ((HEAP32[$7 >> 2] | 0) == 2) {
   _free(HEAP32[$10 >> 2] | 0); //@line 76535
  }
  HEAP32[$7 >> 2] = 1; //@line 76538
  HEAP32[$10 >> 2] = $6; //@line 76540
  return;
 } else if (($2 | 0) == 2) {
  $15 = HEAP32[$src + 12 >> 2] | 0; //@line 76546
  $16 = $dst + 8 | 0; //@line 76547
  $19 = $dst + 12 | 0; //@line 76550
  if ((HEAP32[$16 >> 2] | 0) == 2) {
   _free(HEAP32[$19 >> 2] | 0); //@line 76554
  }
  HEAP32[$16 >> 2] = 2; //@line 76557
  HEAP32[$19 >> 2] = _strdup($15 | 0) | 0; //@line 76559
  return;
 } else {
  $24 = $dst + 8 | 0; //@line 76564
  if ((HEAP32[$24 >> 2] | 0) == 2) {
   _free(HEAP32[$dst + 12 >> 2] | 0); //@line 76571
  }
  HEAP32[$24 >> 2] = 0; //@line 76574
  return;
 }
}
function _ini_val_set_uint32($val, $v) {
 $val = $val | 0;
 $v = $v | 0;
 var $1 = 0, $4 = 0;
 $1 = $val + 8 | 0; //@line 76588
 $4 = $val + 12 | 0; //@line 76591
 if ((HEAP32[$1 >> 2] | 0) == 2) {
  _free(HEAP32[$4 >> 2] | 0); //@line 76595
 }
 HEAP32[$1 >> 2] = 1; //@line 76598
 HEAP32[$4 >> 2] = $v; //@line 76600
 return;
}
function _ini_val_set_str($val, $v) {
 $val = $val | 0;
 $v = $v | 0;
 var $1 = 0, $4 = 0;
 $1 = $val + 8 | 0; //@line 76612
 $4 = $val + 12 | 0; //@line 76615
 if ((HEAP32[$1 >> 2] | 0) == 2) {
  _free(HEAP32[$4 >> 2] | 0); //@line 76619
 }
 HEAP32[$1 >> 2] = 2; //@line 76622
 HEAP32[$4 >> 2] = _strdup($v | 0) | 0; //@line 76624
 return;
}
function _ini_eval($scn, $sct, $val) {
 $scn = $scn | 0;
 $sct = $sct | 0;
 $val = $val | 0;
 var $val2_i = 0, $v1_0_i = 0, $v2_0_i = 0, $27 = 0, $_0_i = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 76638
 STACKTOP = STACKTOP + 16 | 0; //@line 76638
 $val2_i = sp | 0; //@line 76639
 if ((_ini_eval_lor($scn, $sct, $val) | 0) != 0) {
  $_0_i = 1; //@line 76645
  STACKTOP = sp; //@line 76647
  return $_0_i | 0; //@line 76648
 }
 if ((_scn_match($scn, 49264) | 0) == 0) {
  $_0_i = 0; //@line 76654
  STACKTOP = sp; //@line 76656
  return $_0_i | 0; //@line 76657
 }
 _ini_val_init($val2_i, 0); //@line 76659
 if ((HEAP32[$val + 8 >> 2] | 0) == 1) {
  if ((HEAP32[$val + 12 >> 2] | 0) == 0) {
   label = 19018; //@line 76671
  } else {
   $v2_0_i = $val2_i;
   $v1_0_i = $val;
  }
 } else {
  label = 19018; //@line 76676
 }
 if ((label | 0) == 19018) {
  $v2_0_i = $val;
  $v1_0_i = $val2_i;
 }
 if ((_ini_eval_lor($scn, $sct, $v1_0_i) | 0) != 0) {
  _ini_val_free($val2_i); //@line 76687
  $_0_i = 1; //@line 76689
  STACKTOP = sp; //@line 76691
  return $_0_i | 0; //@line 76692
 }
 if ((_scn_match($scn, 55800) | 0) == 0) {
  _ini_val_free($val2_i); //@line 76698
  $_0_i = 1; //@line 76700
  STACKTOP = sp; //@line 76702
  return $_0_i | 0; //@line 76703
 } else {
  $27 = (_ini_eval_lor($scn, $sct, $v2_0_i) | 0) != 0; //@line 76706
  _ini_val_free($val2_i); //@line 76707
  $_0_i = $27 & 1; //@line 76710
  STACKTOP = sp; //@line 76712
  return $_0_i | 0; //@line 76713
 }
 return 0;
}
function _ini_eval_lor($scn, $sct, $val) {
 $scn = $scn | 0;
 $sct = $sct | 0;
 $val = $val | 0;
 var $val2 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $10 = 0, $11 = 0, $17 = 0, $27 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 76727
 STACKTOP = STACKTOP + 16 | 0; //@line 76727
 $val2 = sp | 0; //@line 76728
 if ((_ini_eval_land($scn, $sct, $val) | 0) != 0) {
  $_0 = 1; //@line 76733
  STACKTOP = sp; //@line 76735
  return $_0 | 0; //@line 76736
 }
 if ((_scn_match($scn, 49400) | 0) == 0) {
  $_0 = 0; //@line 76742
  STACKTOP = sp; //@line 76744
  return $_0 | 0; //@line 76745
 }
 $5 = $val + 8 | 0; //@line 76747
 $6 = $val2 + 8 | 0; //@line 76748
 $7 = $val + 12 | 0; //@line 76749
 $8 = $7; //@line 76750
 $10 = $val2 + 12 | 0; //@line 76752
 $11 = $7 | 0; //@line 76753
 while (1) {
  _ini_val_init($val2, 0); //@line 76756
  if ((_ini_eval_land($scn, $sct, $val2) | 0) != 0) {
   label = 19034; //@line 76761
   break;
  }
  $17 = HEAP32[$5 >> 2] | 0; //@line 76764
  if (!(($17 | 0) == (HEAP32[$6 >> 2] | 0) & ($17 | 0) == 1)) {
   label = 19036; //@line 76771
   break;
  }
  if ((HEAP32[$8 >> 2] | 0) == 0) {
   $27 = (HEAP32[$10 >> 2] | 0) != 0 | 0; //@line 76783
  } else {
   $27 = 1; //@line 76785
  }
  HEAP32[$11 >> 2] = $27; //@line 76788
  _ini_val_free($val2); //@line 76789
  if ((_scn_match($scn, 49400) | 0) == 0) {
   $_0 = 0; //@line 76794
   label = 19043; //@line 76795
   break;
  }
 }
 if ((label | 0) == 19036) {
  _ini_val_free($val2); //@line 76800
  $_0 = 1; //@line 76802
  STACKTOP = sp; //@line 76804
  return $_0 | 0; //@line 76805
 } else if ((label | 0) == 19043) {
  STACKTOP = sp; //@line 76809
  return $_0 | 0; //@line 76810
 } else if ((label | 0) == 19034) {
  _ini_val_free($val2); //@line 76813
  $_0 = 1; //@line 76815
  STACKTOP = sp; //@line 76817
  return $_0 | 0; //@line 76818
 }
 return 0;
}
function _ini_eval_land($scn, $sct, $val) {
 $scn = $scn | 0;
 $sct = $sct | 0;
 $val = $val | 0;
 var $val2 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $11 = 0, $17 = 0, $27 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 76832
 STACKTOP = STACKTOP + 16 | 0; //@line 76832
 $val2 = sp | 0; //@line 76833
 if ((_ini_eval_bor($scn, $sct, $val) | 0) != 0) {
  $_0 = 1; //@line 76838
  STACKTOP = sp; //@line 76840
  return $_0 | 0; //@line 76841
 }
 if ((_scn_match($scn, 45704) | 0) == 0) {
  $_0 = 0; //@line 76847
  STACKTOP = sp; //@line 76849
  return $_0 | 0; //@line 76850
 }
 $5 = $val + 8 | 0; //@line 76852
 $6 = $val2 + 8 | 0; //@line 76853
 $7 = $val + 12 | 0; //@line 76854
 $8 = $7; //@line 76855
 $9 = $7 | 0; //@line 76856
 $11 = $val2 + 12 | 0; //@line 76858
 while (1) {
  _ini_val_init($val2, 0); //@line 76861
  if ((_ini_eval_bor($scn, $sct, $val2) | 0) != 0) {
   label = 19050; //@line 76866
   break;
  }
  $17 = HEAP32[$5 >> 2] | 0; //@line 76869
  if (!(($17 | 0) == (HEAP32[$6 >> 2] | 0) & ($17 | 0) == 1)) {
   label = 19052; //@line 76876
   break;
  }
  if ((HEAP32[$8 >> 2] | 0) == 0) {
   $27 = 0; //@line 76883
  } else {
   $27 = (HEAP32[$11 >> 2] | 0) != 0 | 0; //@line 76889
  }
  HEAP32[$9 >> 2] = $27; //@line 76892
  _ini_val_free($val2); //@line 76893
  if ((_scn_match($scn, 45704) | 0) == 0) {
   $_0 = 0; //@line 76898
   label = 19060; //@line 76899
   break;
  }
 }
 if ((label | 0) == 19050) {
  _ini_val_free($val2); //@line 76904
  $_0 = 1; //@line 76906
  STACKTOP = sp; //@line 76908
  return $_0 | 0; //@line 76909
 } else if ((label | 0) == 19060) {
  STACKTOP = sp; //@line 76913
  return $_0 | 0; //@line 76914
 } else if ((label | 0) == 19052) {
  _ini_val_free($val2); //@line 76917
  $_0 = 1; //@line 76919
  STACKTOP = sp; //@line 76921
  return $_0 | 0; //@line 76922
 }
 return 0;
}
function _ini_eval_bor($scn, $sct, $val) {
 $scn = $scn | 0;
 $sct = $sct | 0;
 $val = $val | 0;
 var $val2 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $10 = 0, $11 = 0, $20 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 76936
 STACKTOP = STACKTOP + 16 | 0; //@line 76936
 $val2 = sp | 0; //@line 76937
 if ((_ini_eval_bxor($scn, $sct, $val) | 0) != 0) {
  $_0 = 1; //@line 76942
  STACKTOP = sp; //@line 76944
  return $_0 | 0; //@line 76945
 }
 if ((_scn_peek($scn, 49400) | 0) != 0) {
  $_0 = 0; //@line 76951
  STACKTOP = sp; //@line 76953
  return $_0 | 0; //@line 76954
 }
 $5 = $val + 8 | 0; //@line 76956
 $6 = $val2 + 8 | 0; //@line 76957
 $7 = $val + 12 | 0; //@line 76958
 $8 = $7; //@line 76959
 $10 = $val2 + 12 | 0; //@line 76961
 $11 = $7 | 0; //@line 76962
 while (1) {
  if ((_scn_match($scn, 42216) | 0) == 0) {
   $_0 = 0; //@line 76969
   label = 19077; //@line 76970
   break;
  }
  _ini_val_init($val2, 0); //@line 76973
  if ((_ini_eval_bxor($scn, $sct, $val2) | 0) != 0) {
   label = 19067; //@line 76978
   break;
  }
  $20 = HEAP32[$5 >> 2] | 0; //@line 76981
  if (!(($20 | 0) == (HEAP32[$6 >> 2] | 0) & ($20 | 0) == 1)) {
   label = 19069; //@line 76988
   break;
  }
  HEAP32[$11 >> 2] = HEAP32[$10 >> 2] | HEAP32[$8 >> 2]; //@line 76995
  _ini_val_free($val2); //@line 76996
  if ((_scn_peek($scn, 49400) | 0) != 0) {
   $_0 = 0; //@line 77001
   label = 19072; //@line 77002
   break;
  }
 }
 if ((label | 0) == 19072) {
  STACKTOP = sp; //@line 77008
  return $_0 | 0; //@line 77009
 } else if ((label | 0) == 19069) {
  _ini_val_free($val2); //@line 77012
  $_0 = 1; //@line 77014
  STACKTOP = sp; //@line 77016
  return $_0 | 0; //@line 77017
 } else if ((label | 0) == 19067) {
  _ini_val_free($val2); //@line 77020
  $_0 = 1; //@line 77022
  STACKTOP = sp; //@line 77024
  return $_0 | 0; //@line 77025
 } else if ((label | 0) == 19077) {
  STACKTOP = sp; //@line 77029
  return $_0 | 0; //@line 77030
 }
 return 0;
}
function _ini_eval_bxor($scn, $sct, $val) {
 $scn = $scn | 0;
 $sct = $sct | 0;
 $val = $val | 0;
 var $val2 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $10 = 0, $11 = 0, $20 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 77044
 STACKTOP = STACKTOP + 16 | 0; //@line 77044
 $val2 = sp | 0; //@line 77045
 if ((_ini_eval_band($scn, $sct, $val) | 0) != 0) {
  $_0 = 1; //@line 77050
  STACKTOP = sp; //@line 77052
  return $_0 | 0; //@line 77053
 }
 if ((_scn_peek($scn, 39176) | 0) != 0) {
  $_0 = 0; //@line 77059
  STACKTOP = sp; //@line 77061
  return $_0 | 0; //@line 77062
 }
 $5 = $val + 8 | 0; //@line 77064
 $6 = $val2 + 8 | 0; //@line 77065
 $7 = $val + 12 | 0; //@line 77066
 $8 = $7; //@line 77067
 $10 = $val2 + 12 | 0; //@line 77069
 $11 = $7 | 0; //@line 77070
 while (1) {
  if ((_scn_match($scn, 36224) | 0) == 0) {
   $_0 = 0; //@line 77077
   label = 19092; //@line 77078
   break;
  }
  _ini_val_init($val2, 0); //@line 77081
  if ((_ini_eval_band($scn, $sct, $val2) | 0) != 0) {
   label = 19083; //@line 77086
   break;
  }
  $20 = HEAP32[$5 >> 2] | 0; //@line 77089
  if (!(($20 | 0) == (HEAP32[$6 >> 2] | 0) & ($20 | 0) == 1)) {
   label = 19085; //@line 77096
   break;
  }
  HEAP32[$11 >> 2] = HEAP32[$10 >> 2] ^ HEAP32[$8 >> 2]; //@line 77103
  _ini_val_free($val2); //@line 77104
  if ((_scn_peek($scn, 39176) | 0) != 0) {
   $_0 = 0; //@line 77109
   label = 19093; //@line 77110
   break;
  }
 }
 if ((label | 0) == 19093) {
  STACKTOP = sp; //@line 77116
  return $_0 | 0; //@line 77117
 } else if ((label | 0) == 19083) {
  _ini_val_free($val2); //@line 77120
  $_0 = 1; //@line 77122
  STACKTOP = sp; //@line 77124
  return $_0 | 0; //@line 77125
 } else if ((label | 0) == 19085) {
  _ini_val_free($val2); //@line 77128
  $_0 = 1; //@line 77130
  STACKTOP = sp; //@line 77132
  return $_0 | 0; //@line 77133
 } else if ((label | 0) == 19092) {
  STACKTOP = sp; //@line 77137
  return $_0 | 0; //@line 77138
 }
 return 0;
}
function _ini_eval_band($scn, $sct, $val) {
 $scn = $scn | 0;
 $sct = $sct | 0;
 $val = $val | 0;
 var $val2 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $10 = 0, $11 = 0, $20 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 77152
 STACKTOP = STACKTOP + 16 | 0; //@line 77152
 $val2 = sp | 0; //@line 77153
 if ((_ini_eval_equ($scn, $sct, $val) | 0) != 0) {
  $_0 = 1; //@line 77158
  STACKTOP = sp; //@line 77160
  return $_0 | 0; //@line 77161
 }
 if ((_scn_peek($scn, 45704) | 0) != 0) {
  $_0 = 0; //@line 77167
  STACKTOP = sp; //@line 77169
  return $_0 | 0; //@line 77170
 }
 $5 = $val + 8 | 0; //@line 77172
 $6 = $val2 + 8 | 0; //@line 77173
 $7 = $val + 12 | 0; //@line 77174
 $8 = $7; //@line 77175
 $10 = $val2 + 12 | 0; //@line 77177
 $11 = $7 | 0; //@line 77178
 while (1) {
  if ((_scn_match($scn, 33288) | 0) == 0) {
   $_0 = 0; //@line 77185
   label = 19107; //@line 77186
   break;
  }
  _ini_val_init($val2, 0); //@line 77189
  if ((_ini_eval_equ($scn, $sct, $val2) | 0) != 0) {
   label = 19099; //@line 77194
   break;
  }
  $20 = HEAP32[$5 >> 2] | 0; //@line 77197
  if (!(($20 | 0) == (HEAP32[$6 >> 2] | 0) & ($20 | 0) == 1)) {
   label = 19101; //@line 77204
   break;
  }
  HEAP32[$11 >> 2] = HEAP32[$10 >> 2] & HEAP32[$8 >> 2]; //@line 77211
  _ini_val_free($val2); //@line 77212
  if ((_scn_peek($scn, 45704) | 0) != 0) {
   $_0 = 0; //@line 77217
   label = 19105; //@line 77218
   break;
  }
 }
 if ((label | 0) == 19107) {
  STACKTOP = sp; //@line 77224
  return $_0 | 0; //@line 77225
 } else if ((label | 0) == 19099) {
  _ini_val_free($val2); //@line 77228
  $_0 = 1; //@line 77230
  STACKTOP = sp; //@line 77232
  return $_0 | 0; //@line 77233
 } else if ((label | 0) == 19101) {
  _ini_val_free($val2); //@line 77236
  $_0 = 1; //@line 77238
  STACKTOP = sp; //@line 77240
  return $_0 | 0; //@line 77241
 } else if ((label | 0) == 19105) {
  STACKTOP = sp; //@line 77245
  return $_0 | 0; //@line 77246
 }
 return 0;
}
function _ini_eval_equ($scn, $sct, $val) {
 $scn = $scn | 0;
 $sct = $sct | 0;
 $val = $val | 0;
 var $val2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $op_0 = 0, $24 = 0, $40 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 77262
 STACKTOP = STACKTOP + 16 | 0; //@line 77262
 $val2 = sp | 0; //@line 77263
 if ((_ini_eval_cmp($scn, $sct, $val) | 0) != 0) {
  $_0 = 1; //@line 77268
  STACKTOP = sp; //@line 77270
  return $_0 | 0; //@line 77271
 }
 $3 = $val + 8 | 0; //@line 77273
 $4 = $val2 + 8 | 0; //@line 77274
 $5 = $val + 12 | 0; //@line 77275
 $6 = $5; //@line 77276
 $8 = $val2 + 12 | 0; //@line 77278
 $9 = $5 | 0; //@line 77279
 $10 = $val + 12 | 0; //@line 77280
 $11 = $val2 + 12 | 0; //@line 77281
 L24776 : while (1) {
  if ((_scn_match($scn, 31624) | 0) == 0) {
   if ((_scn_match($scn, 30640) | 0) == 0) {
    $_0 = 0; //@line 77292
    label = 19131; //@line 77293
    break;
   } else {
    $op_0 = 2; //@line 77296
   }
  } else {
   $op_0 = 1; //@line 77299
  }
  _ini_val_init($val2, 0); //@line 77302
  if ((_ini_eval_cmp($scn, $sct, $val2) | 0) != 0) {
   label = 19115; //@line 77307
   break;
  }
  do {
   if (($op_0 | 0) == 2) {
    $40 = HEAP32[$3 >> 2] | 0; //@line 77312
    if (($40 | 0) != (HEAP32[$4 >> 2] | 0)) {
     label = 19125; //@line 77317
     break L24776;
    }
    if (($40 | 0) == 1) {
     HEAP32[$9 >> 2] = (HEAP32[$6 >> 2] | 0) != (HEAP32[$8 >> 2] | 0); //@line 77326
     break;
    } else if (($40 | 0) == 2) {
     _ini_val_set_uint32($val, (_strcmp(HEAP32[$10 >> 2] | 0, HEAP32[$11 >> 2] | 0) | 0) != 0 | 0); //@line 77335
     break;
    } else {
     label = 19125; //@line 77339
     break L24776;
    }
   } else if (($op_0 | 0) == 1) {
    $24 = HEAP32[$3 >> 2] | 0; //@line 77343
    if (($24 | 0) != (HEAP32[$4 >> 2] | 0)) {
     label = 19125; //@line 77348
     break L24776;
    }
    if (($24 | 0) == 2) {
     _ini_val_set_uint32($val, (_strcmp(HEAP32[$10 >> 2] | 0, HEAP32[$11 >> 2] | 0) | 0) == 0 | 0); //@line 77357
     break;
    } else if (($24 | 0) == 1) {
     HEAP32[$9 >> 2] = (HEAP32[$6 >> 2] | 0) == (HEAP32[$8 >> 2] | 0); //@line 77366
     break;
    } else {
     label = 19125; //@line 77370
     break L24776;
    }
   } else {
    label = 19125; //@line 77374
    break L24776;
   }
  } while (0);
  _ini_val_free($val2); //@line 77378
 }
 if ((label | 0) == 19125) {
  _ini_val_free($val2); //@line 77382
  $_0 = 1; //@line 77384
  STACKTOP = sp; //@line 77386
  return $_0 | 0; //@line 77387
 } else if ((label | 0) == 19131) {
  STACKTOP = sp; //@line 77391
  return $_0 | 0; //@line 77392
 } else if ((label | 0) == 19115) {
  _ini_val_free($val2); //@line 77395
  $_0 = 1; //@line 77397
  STACKTOP = sp; //@line 77399
  return $_0 | 0; //@line 77400
 }
 return 0;
}
function _ini_eval_cmp($scn, $sct, $val) {
 $scn = $scn | 0;
 $sct = $sct | 0;
 $val = $val | 0;
 var $val2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, $10 = 0, $11 = 0, $op_0 = 0, $30 = 0, $44 = 0, $60 = 0, $76 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 77420
 STACKTOP = STACKTOP + 16 | 0; //@line 77420
 $val2 = sp | 0; //@line 77421
 if ((_ini_eval_shift($scn, $sct, $val) | 0) != 0) {
  $_0 = 1; //@line 77426
  STACKTOP = sp; //@line 77428
  return $_0 | 0; //@line 77429
 }
 $3 = $val + 8 | 0; //@line 77431
 $4 = $val2 + 8 | 0; //@line 77432
 $5 = $val + 12 | 0; //@line 77433
 $6 = $5; //@line 77434
 $8 = $val2 + 12 | 0; //@line 77436
 $9 = $5 | 0; //@line 77437
 $10 = $val + 12 | 0; //@line 77438
 $11 = $val2 + 12 | 0; //@line 77439
 L24804 : while (1) {
  do {
   if ((_scn_match($scn, 57840) | 0) == 0) {
    if ((_scn_match($scn, 57e3) | 0) != 0) {
     $op_0 = 4; //@line 77451
     break;
    }
    if ((_scn_match($scn, 55840) | 0) != 0) {
     $op_0 = 1; //@line 77458
     break;
    }
    if ((_scn_match($scn, 55200) | 0) == 0) {
     $_0 = 0; //@line 77465
     label = 19162; //@line 77466
     break L24804;
    } else {
     $op_0 = 3; //@line 77469
    }
   } else {
    $op_0 = 2; //@line 77472
   }
  } while (0);
  _ini_val_init($val2, 0); //@line 77476
  if ((_ini_eval_shift($scn, $sct, $val2) | 0) != 0) {
   label = 19139; //@line 77481
   break;
  }
  do {
   if (($op_0 | 0) == 4) {
    $76 = HEAP32[$3 >> 2] | 0; //@line 77486
    if (($76 | 0) != (HEAP32[$4 >> 2] | 0)) {
     label = 19157; //@line 77491
     break L24804;
    }
    if (($76 | 0) == 1) {
     HEAP32[$9 >> 2] = (HEAP32[$6 >> 2] | 0) >>> 0 >= (HEAP32[$8 >> 2] | 0) >>> 0; //@line 77500
     break;
    } else if (($76 | 0) == 2) {
     _ini_val_set_uint32($val, (_strcmp(HEAP32[$10 >> 2] | 0, HEAP32[$11 >> 2] | 0) | 0) >>> 31 ^ 1); //@line 77509
     break;
    } else {
     label = 19157; //@line 77513
     break L24804;
    }
   } else if (($op_0 | 0) == 2) {
    $44 = HEAP32[$3 >> 2] | 0; //@line 77517
    if (($44 | 0) != (HEAP32[$4 >> 2] | 0)) {
     label = 19157; //@line 77522
     break L24804;
    }
    if (($44 | 0) == 1) {
     HEAP32[$9 >> 2] = (HEAP32[$6 >> 2] | 0) >>> 0 <= (HEAP32[$8 >> 2] | 0) >>> 0; //@line 77531
     break;
    } else if (($44 | 0) == 2) {
     _ini_val_set_uint32($val, (_strcmp(HEAP32[$10 >> 2] | 0, HEAP32[$11 >> 2] | 0) | 0) < 1 | 0); //@line 77540
     break;
    } else {
     label = 19157; //@line 77544
     break L24804;
    }
   } else if (($op_0 | 0) == 1) {
    $30 = HEAP32[$3 >> 2] | 0; //@line 77548
    if (($30 | 0) != (HEAP32[$4 >> 2] | 0)) {
     label = 19157; //@line 77553
     break L24804;
    }
    if (($30 | 0) == 1) {
     HEAP32[$9 >> 2] = (HEAP32[$6 >> 2] | 0) >>> 0 < (HEAP32[$8 >> 2] | 0) >>> 0; //@line 77562
     break;
    } else if (($30 | 0) == 2) {
     _ini_val_set_uint32($val, (_strcmp(HEAP32[$10 >> 2] | 0, HEAP32[$11 >> 2] | 0) | 0) >>> 31); //@line 77570
     break;
    } else {
     label = 19157; //@line 77574
     break L24804;
    }
   } else if (($op_0 | 0) == 3) {
    $60 = HEAP32[$3 >> 2] | 0; //@line 77578
    if (($60 | 0) != (HEAP32[$4 >> 2] | 0)) {
     label = 19157; //@line 77583
     break L24804;
    }
    if (($60 | 0) == 1) {
     HEAP32[$9 >> 2] = (HEAP32[$6 >> 2] | 0) >>> 0 > (HEAP32[$8 >> 2] | 0) >>> 0; //@line 77592
     break;
    } else if (($60 | 0) == 2) {
     _ini_val_set_uint32($val, (_strcmp(HEAP32[$10 >> 2] | 0, HEAP32[$11 >> 2] | 0) | 0) > 0 | 0); //@line 77601
     break;
    } else {
     label = 19157; //@line 77605
     break L24804;
    }
   } else {
    label = 19157; //@line 77609
    break L24804;
   }
  } while (0);
  _ini_val_free($val2); //@line 77613
 }
 if ((label | 0) == 19157) {
  _ini_val_free($val2); //@line 77617
  $_0 = 1; //@line 77619
  STACKTOP = sp; //@line 77621
  return $_0 | 0; //@line 77622
 } else if ((label | 0) == 19139) {
  _ini_val_free($val2); //@line 77625
  $_0 = 1; //@line 77627
  STACKTOP = sp; //@line 77629
  return $_0 | 0; //@line 77630
 } else if ((label | 0) == 19162) {
  STACKTOP = sp; //@line 77634
  return $_0 | 0; //@line 77635
 }
 return 0;
}
function _ini_eval_shift($scn, $sct, $val) {
 $scn = $scn | 0;
 $sct = $sct | 0;
 $val = $val | 0;
 var $val2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, $op_0 = 0, $22 = 0, $32 = 0, $storemerge_in = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 77650
 STACKTOP = STACKTOP + 16 | 0; //@line 77650
 $val2 = sp | 0; //@line 77651
 if ((_ini_eval_add($scn, $sct, $val) | 0) != 0) {
  $_0 = 1; //@line 77656
  STACKTOP = sp; //@line 77658
  return $_0 | 0; //@line 77659
 }
 $3 = $val + 8 | 0; //@line 77661
 $4 = $val2 + 8 | 0; //@line 77662
 $5 = $val + 12 | 0; //@line 77663
 $6 = $5; //@line 77664
 $8 = $val2 + 12 | 0; //@line 77666
 $9 = $5 | 0; //@line 77667
 while (1) {
  if ((_scn_match($scn, 54456) | 0) == 0) {
   if ((_scn_match($scn, 53808) | 0) == 0) {
    $_0 = 0; //@line 77678
    label = 19181; //@line 77679
    break;
   } else {
    $op_0 = 2; //@line 77682
   }
  } else {
   $op_0 = 1; //@line 77685
  }
  _ini_val_init($val2, 0); //@line 77688
  if ((_ini_eval_add($scn, $sct, $val2) | 0) != 0) {
   label = 19169; //@line 77693
   break;
  }
  if (($op_0 | 0) == 1) {
   $22 = HEAP32[$3 >> 2] | 0; //@line 77697
   if (!(($22 | 0) == (HEAP32[$4 >> 2] | 0) & ($22 | 0) == 1)) {
    label = 19175; //@line 77704
    break;
   }
   $storemerge_in = HEAP32[$6 >> 2] << (HEAP32[$8 >> 2] & 31); //@line 77712
  } else if (($op_0 | 0) == 2) {
   $32 = HEAP32[$3 >> 2] | 0; //@line 77714
   if (!(($32 | 0) == (HEAP32[$4 >> 2] | 0) & ($32 | 0) == 1)) {
    label = 19175; //@line 77721
    break;
   }
   $storemerge_in = (HEAP32[$6 >> 2] | 0) >>> ((HEAP32[$8 >> 2] & 31) >>> 0); //@line 77729
  } else {
   label = 19175; //@line 77731
   break;
  }
  HEAP32[$9 >> 2] = $storemerge_in; //@line 77736
  _ini_val_free($val2); //@line 77737
 }
 if ((label | 0) == 19181) {
  STACKTOP = sp; //@line 77742
  return $_0 | 0; //@line 77743
 } else if ((label | 0) == 19169) {
  _ini_val_free($val2); //@line 77746
  $_0 = 1; //@line 77748
  STACKTOP = sp; //@line 77750
  return $_0 | 0; //@line 77751
 } else if ((label | 0) == 19175) {
  _ini_val_free($val2); //@line 77754
  $_0 = 1; //@line 77756
  STACKTOP = sp; //@line 77758
  return $_0 | 0; //@line 77759
 }
 return 0;
}
function _ini_eval_add($scn, $sct, $val) {
 $scn = $scn | 0;
 $sct = $sct | 0;
 $val = $val | 0;
 var $val2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $9 = 0, $10 = 0, $11 = 0, $12 = 0, $op_0 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $32 = 0, $33 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $41 = 0, $49 = 0, $53 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $60 = 0, $68 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $79 = 0, $87 = 0, $90 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 77780
 STACKTOP = STACKTOP + 48 | 0; //@line 77780
 $val2 = sp + 32 | 0; //@line 77782
 if ((_ini_eval_mul($scn, $sct, $val) | 0) != 0) {
  $_0 = 1; //@line 77787
  STACKTOP = sp; //@line 77789
  return $_0 | 0; //@line 77790
 }
 $3 = sp | 0; //@line 77792
 $4 = $val + 8 | 0; //@line 77793
 $5 = $val2 + 8 | 0; //@line 77794
 $6 = $val + 12 | 0; //@line 77795
 $7 = $6; //@line 77796
 $9 = $val2 + 12 | 0; //@line 77798
 $10 = $6 | 0; //@line 77799
 $11 = $val + 12 | 0; //@line 77800
 $12 = $val2 + 12 | 0; //@line 77801
 while (1) {
  if ((_scn_match($scn, 53168) | 0) == 0) {
   if ((_scn_match($scn, 52280) | 0) == 0) {
    $_0 = 0; //@line 77812
    label = 19226; //@line 77813
    break;
   } else {
    $op_0 = 2; //@line 77816
   }
  } else {
   $op_0 = 1; //@line 77819
  }
  _ini_val_init($val2, 0); //@line 77822
  if ((_ini_eval_mul($scn, $sct, $val2) | 0) != 0) {
   label = 19187; //@line 77827
   break;
  }
  if (($op_0 | 0) == 2) {
   $90 = HEAP32[$4 >> 2] | 0; //@line 77831
   if (!(($90 | 0) == (HEAP32[$5 >> 2] | 0) & ($90 | 0) == 1)) {
    label = 19214; //@line 77838
    break;
   }
   HEAP32[$10 >> 2] = (HEAP32[$7 >> 2] | 0) - (HEAP32[$9 >> 2] | 0); //@line 77845
   _ini_val_free($val2); //@line 77846
   continue;
  } else if (($op_0 | 0) != 1) {
   label = 19214; //@line 77850
   break;
  }
  $24 = HEAP32[$4 >> 2] | 0; //@line 77853
  $25 = HEAP32[$5 >> 2] | 0; //@line 77854
  $26 = ($24 | 0) == 1; //@line 77855
  $27 = ($25 | 0) == 1; //@line 77856
  if ($26 & $27) {
   HEAP32[$10 >> 2] = (HEAP32[$9 >> 2] | 0) + (HEAP32[$7 >> 2] | 0); //@line 77864
   _ini_val_free($val2); //@line 77865
   continue;
  }
  $32 = ($24 | 0) == 2; //@line 77868
  $33 = ($25 | 0) == 2; //@line 77869
  if ($32 & $33) {
   $35 = HEAP32[$11 >> 2] | 0; //@line 77873
   $36 = HEAP32[$12 >> 2] | 0; //@line 77874
   $37 = _strlen($35 | 0) | 0; //@line 77875
   $38 = _strlen($36 | 0) | 0; //@line 77876
   $39 = $38 + $37 | 0; //@line 77877
   $41 = _malloc($39 + 1 | 0) | 0; //@line 77879
   if (($41 | 0) == 0) {
    label = 19217; //@line 77883
    break;
   }
   if (($37 | 0) != 0) {
    _memcpy($41 | 0, $35 | 0, $37) | 0; //@line 77889
   }
   if (($38 | 0) != 0) {
    $49 = $41 + $37 | 0; //@line 77895
    _memcpy($49 | 0, $36 | 0, $38) | 0; //@line 77896
   }
   HEAP8[$41 + $39 | 0] = 0; //@line 77900
   _ini_val_set_str($val, $41); //@line 77901
   _free($41); //@line 77902
   _ini_val_free($val2); //@line 77903
   continue;
  }
  if ($32 & $27) {
   $53 = HEAP32[$9 >> 2] | 0; //@line 77909
   _sprintf($3 | 0, 51696, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $53, tempInt) | 0) | 0; //@line 77910
   $55 = HEAP32[$11 >> 2] | 0; //@line 77911
   $56 = _strlen($55 | 0) | 0; //@line 77912
   $57 = _strlen($3 | 0) | 0; //@line 77913
   $58 = $57 + $56 | 0; //@line 77914
   $60 = _malloc($58 + 1 | 0) | 0; //@line 77916
   if (($60 | 0) == 0) {
    label = 19218; //@line 77920
    break;
   }
   if (($56 | 0) != 0) {
    _memcpy($60 | 0, $55 | 0, $56) | 0; //@line 77926
   }
   if (($57 | 0) != 0) {
    $68 = $60 + $56 | 0; //@line 77932
    _memcpy($68 | 0, $3 | 0, $57) | 0; //@line 77933
   }
   HEAP8[$60 + $58 | 0] = 0; //@line 77937
   _ini_val_set_str($val, $60); //@line 77938
   _free($60); //@line 77939
   _ini_val_free($val2); //@line 77940
   continue;
  }
  if (!($26 & $33)) {
   label = 19216; //@line 77946
   break;
  }
  _sprintf($3 | 0, 51696, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = HEAP32[$7 >> 2], tempInt) | 0) | 0; //@line 77950
  $74 = HEAP32[$12 >> 2] | 0; //@line 77951
  $75 = _strlen($3 | 0) | 0; //@line 77952
  $76 = _strlen($74 | 0) | 0; //@line 77953
  $77 = $76 + $75 | 0; //@line 77954
  $79 = _malloc($77 + 1 | 0) | 0; //@line 77956
  if (($79 | 0) == 0) {
   label = 19215; //@line 77960
   break;
  }
  if (($75 | 0) != 0) {
   _memcpy($79 | 0, $3 | 0, $75) | 0; //@line 77966
  }
  if (($76 | 0) != 0) {
   $87 = $79 + $75 | 0; //@line 77972
   _memcpy($87 | 0, $74 | 0, $76) | 0; //@line 77973
  }
  HEAP8[$79 + $77 | 0] = 0; //@line 77977
  _ini_val_set_str($val, $79); //@line 77978
  _free($79); //@line 77979
  _ini_val_free($val2); //@line 77980
 }
 if ((label | 0) == 19215) {
  _ini_val_free($val2); //@line 77983
  $_0 = 1; //@line 77985
  STACKTOP = sp; //@line 77987
  return $_0 | 0; //@line 77988
 } else if ((label | 0) == 19187) {
  _ini_val_free($val2); //@line 77991
  $_0 = 1; //@line 77993
  STACKTOP = sp; //@line 77995
  return $_0 | 0; //@line 77996
 } else if ((label | 0) == 19216) {
  _ini_val_free($val2); //@line 77999
  $_0 = 1; //@line 78000
  STACKTOP = sp; //@line 78002
  return $_0 | 0; //@line 78003
 } else if ((label | 0) == 19217) {
  _ini_val_free($val2); //@line 78006
  $_0 = 1; //@line 78007
  STACKTOP = sp; //@line 78009
  return $_0 | 0; //@line 78010
 } else if ((label | 0) == 19218) {
  _ini_val_free($val2); //@line 78013
  $_0 = 1; //@line 78014
  STACKTOP = sp; //@line 78016
  return $_0 | 0; //@line 78017
 } else if ((label | 0) == 19226) {
  STACKTOP = sp; //@line 78021
  return $_0 | 0; //@line 78022
 } else if ((label | 0) == 19214) {
  _ini_val_free($val2); //@line 78025
  $_0 = 1; //@line 78027
  STACKTOP = sp; //@line 78029
  return $_0 | 0; //@line 78030
 }
 return 0;
}
function _ini_eval_mul($scn, $sct, $val) {
 $scn = $scn | 0;
 $sct = $sct | 0;
 $val = $val | 0;
 var $val2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, $op_0 = 0, $25 = 0, $34 = 0, $39 = 0, $45 = 0, $50 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 78047
 STACKTOP = STACKTOP + 16 | 0; //@line 78047
 $val2 = sp | 0; //@line 78048
 if ((_ini_eval_neg($scn, $sct, $val) | 0) != 0) {
  $_0 = 1; //@line 78053
  STACKTOP = sp; //@line 78055
  return $_0 | 0; //@line 78056
 }
 $3 = $val + 8 | 0; //@line 78058
 $4 = $val2 + 8 | 0; //@line 78059
 $5 = $val + 12 | 0; //@line 78060
 $6 = $5; //@line 78061
 $8 = $val2 + 12 | 0; //@line 78063
 $9 = $5 | 0; //@line 78064
 L24925 : while (1) {
  do {
   if ((_scn_match($scn, 51192) | 0) == 0) {
    if ((_scn_match($scn, 50696) | 0) != 0) {
     $op_0 = 2; //@line 78076
     break;
    }
    if ((_scn_match($scn, 50392) | 0) == 0) {
     $_0 = 0; //@line 78083
     label = 19249; //@line 78084
     break L24925;
    } else {
     $op_0 = 3; //@line 78087
    }
   } else {
    $op_0 = 1; //@line 78090
   }
  } while (0);
  _ini_val_init($val2, 0); //@line 78094
  if ((_ini_eval_neg($scn, $sct, $val2) | 0) != 0) {
   label = 19234; //@line 78099
   break;
  }
  if (($op_0 | 0) == 2) {
   $34 = HEAP32[$3 >> 2] | 0; //@line 78103
   if (!(($34 | 0) == (HEAP32[$4 >> 2] | 0) & ($34 | 0) == 1)) {
    label = 19244; //@line 78110
    break;
   }
   $39 = HEAP32[$8 >> 2] | 0; //@line 78113
   if (($39 | 0) == 0) {
    label = 19244; //@line 78117
    break;
   }
   HEAP32[$9 >> 2] = ((HEAP32[$6 >> 2] | 0) >>> 0) / ($39 >>> 0) | 0; //@line 78123
  } else if (($op_0 | 0) == 1) {
   $25 = HEAP32[$3 >> 2] | 0; //@line 78126
   if (!(($25 | 0) == (HEAP32[$4 >> 2] | 0) & ($25 | 0) == 1)) {
    label = 19244; //@line 78133
    break;
   }
   HEAP32[$9 >> 2] = Math_imul(HEAP32[$8 >> 2] | 0, HEAP32[$6 >> 2] | 0) | 0; //@line 78140
  } else if (($op_0 | 0) == 3) {
   $45 = HEAP32[$3 >> 2] | 0; //@line 78143
   if (!(($45 | 0) == (HEAP32[$4 >> 2] | 0) & ($45 | 0) == 1)) {
    label = 19244; //@line 78150
    break;
   }
   $50 = HEAP32[$8 >> 2] | 0; //@line 78153
   if (($50 | 0) == 0) {
    label = 19244; //@line 78157
    break;
   }
   HEAP32[$9 >> 2] = ((HEAP32[$6 >> 2] | 0) >>> 0) % ($50 >>> 0) | 0; //@line 78163
  } else {
   label = 19244; //@line 78166
   break;
  }
  _ini_val_free($val2); //@line 78169
 }
 if ((label | 0) == 19249) {
  STACKTOP = sp; //@line 78174
  return $_0 | 0; //@line 78175
 } else if ((label | 0) == 19234) {
  _ini_val_free($val2); //@line 78178
  $_0 = 1; //@line 78180
  STACKTOP = sp; //@line 78182
  return $_0 | 0; //@line 78183
 } else if ((label | 0) == 19244) {
  _ini_val_free($val2); //@line 78186
  $_0 = 1; //@line 78188
  STACKTOP = sp; //@line 78190
  return $_0 | 0; //@line 78191
 }
 return 0;
}
function _ini_eval_neg($scn, $sct, $val) {
 $scn = $scn | 0;
 $sct = $sct | 0;
 $val = $val | 0;
 var $op_0 = 0, $22 = 0, $32 = 0, $39 = 0, $41 = 0, $_0 = 0;
 do {
  if ((_scn_match($scn, 53168) | 0) == 0) {
   if ((_scn_match($scn, 52280) | 0) != 0) {
    $op_0 = 2; //@line 78218
    break;
   }
   if ((_scn_match($scn, 49440) | 0) != 0) {
    $op_0 = 3; //@line 78225
    break;
   }
   $op_0 = (_scn_match($scn, 49016) | 0) == 0 ? 0 : 4; //@line 78231
  } else {
   $op_0 = 1; //@line 78233
  }
 } while (0);
 if ((_ini_eval_literal($scn, $sct, $val) | 0) != 0) {
  $_0 = 1; //@line 78241
  return $_0 | 0; //@line 78244
 }
 if (($op_0 | 0) == 3) {
  if ((HEAP32[$val + 8 >> 2] | 0) != 1) {
   $_0 = 1; //@line 78252
   return $_0 | 0; //@line 78255
  }
  $32 = $val + 12 | 0; //@line 78257
  HEAP32[$32 >> 2] = ~HEAP32[$32 >> 2]; //@line 78263
  $_0 = 0; //@line 78265
  return $_0 | 0; //@line 78268
 } else if (($op_0 | 0) == 2) {
  if ((HEAP32[$val + 8 >> 2] | 0) != 1) {
   $_0 = 1; //@line 78275
   return $_0 | 0; //@line 78278
  }
  $22 = $val + 12 | 0; //@line 78280
  HEAP32[$22 >> 2] = -(HEAP32[$22 >> 2] | 0); //@line 78286
  $_0 = 0; //@line 78288
  return $_0 | 0; //@line 78291
 } else if (($op_0 | 0) == 4) {
  $39 = HEAP32[$val + 8 >> 2] | 0; //@line 78294
  if (($39 | 0) == 1) {
   $41 = $val + 12 | 0; //@line 78296
   HEAP32[$41 >> 2] = (HEAP32[$41 >> 2] | 0) == 0; //@line 78303
   $_0 = 0; //@line 78305
   return $_0 | 0; //@line 78308
  } else if (($39 | 0) == 2) {
   _ini_val_set_uint32($val, (HEAP8[HEAP32[$val + 12 >> 2] | 0] | 0) == 0 | 0); //@line 78315
   $_0 = 0; //@line 78317
   return $_0 | 0; //@line 78320
  } else {
   $_0 = 1; //@line 78322
   return $_0 | 0; //@line 78325
  }
 } else if (($op_0 | 0) == 1) {
  $_0 = (HEAP32[$val + 8 >> 2] | 0) != 1 | 0; //@line 78333
  return $_0 | 0; //@line 78336
 } else {
  $_0 = 0; //@line 78338
  return $_0 | 0; //@line 78341
 }
 return 0;
}
function _ini_eval_literal($scn, $sct, $val) {
 $scn = $scn | 0;
 $sct = $sct | 0;
 $val = $val | 0;
 var $str = 0, $11 = 0, $42 = 0, $tmp_030 = 0, $44 = 0, $base_0_i = 0, $57 = 0, $_in_i = 0, $v_035_i = 0, $r_034_i = 0, $59 = 0, $d_0_i = 0, $75 = 0, $76 = 0, $v_1_i = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 78360
 STACKTOP = STACKTOP + 256 | 0; //@line 78360
 $str = sp | 0; //@line 78361
 if ((_scn_match($scn, 48192) | 0) != 0) {
  if ((_ini_eval($scn, $sct, $val) | 0) != 0) {
   $_0 = 1; //@line 78370
   STACKTOP = sp; //@line 78372
   return $_0 | 0; //@line 78373
  }
  _scn_match_space($scn) | 0; //@line 78375
  $_0 = (_scn_match($scn, 47848) | 0) == 0 | 0; //@line 78380
  STACKTOP = sp; //@line 78382
  return $_0 | 0; //@line 78383
 }
 $11 = $str | 0; //@line 78385
 if ((_scn_match_string($scn, $11, 256) | 0) != 0) {
  _ini_val_set_str($val, $11); //@line 78390
  $_0 = 0; //@line 78392
  STACKTOP = sp; //@line 78394
  return $_0 | 0; //@line 78395
 }
 if ((_scn_match_name($scn, $11, 256) | 0) != 0) {
  if ((_strcmp($11 | 0, 47544) | 0) == 0) {
   if ((_ini_eval_literal($scn, $sct, $val) | 0) != 0) {
    $_0 = 1; //@line 78409
    STACKTOP = sp; //@line 78411
    return $_0 | 0; //@line 78412
   }
   _ini_val_set_uint32($val, (HEAP32[$val + 8 >> 2] | 0) != 0 | 0); //@line 78418
   $_0 = 0; //@line 78420
   STACKTOP = sp; //@line 78422
   return $_0 | 0; //@line 78423
  }
  if ((_strcmp($11 | 0, 47256) | 0) == 0) {
   _ini_val_set_uint32($val, 1); //@line 78429
   $_0 = 0; //@line 78431
   STACKTOP = sp; //@line 78433
   return $_0 | 0; //@line 78434
  }
  if ((_strcmp($11 | 0, 46984) | 0) == 0) {
   _ini_val_set_uint32($val, 0); //@line 78440
   $_0 = 0; //@line 78442
   STACKTOP = sp; //@line 78444
   return $_0 | 0; //@line 78445
  }
  L25007 : do {
   if (($sct | 0) != 0) {
    $42 = $str + ((HEAP8[$11] | 0) == 36) | 0; //@line 78454
    $tmp_030 = $sct; //@line 78456
    while (1) {
     $44 = _ini_get_val($tmp_030, $42, 0) | 0; //@line 78459
     if (($44 | 0) != 0) {
      break;
     }
     $tmp_030 = HEAP32[$tmp_030 + 4 >> 2] | 0; //@line 78466
     if (($tmp_030 | 0) == 0) {
      break L25007;
     }
    }
    _ini_val_copy($val, $44); //@line 78475
    $_0 = 0; //@line 78477
    STACKTOP = sp; //@line 78479
    return $_0 | 0; //@line 78480
   }
  } while (0);
  _ini_val_set_none($val); //@line 78483
  $_0 = 0; //@line 78485
  STACKTOP = sp; //@line 78487
  return $_0 | 0; //@line 78488
 }
 if ((_scn_match($scn, 46680) | 0) == 0) {
  $base_0_i = (_scn_match($scn, 46400) | 0) == 0 ? 10 : 2; //@line 78497
 } else {
  $base_0_i = 16; //@line 78499
 }
 $57 = _scn_get_chr($scn, 0) | 0; //@line 78502
 if ($57 << 24 >> 24 == 0) {
  $_0 = 1; //@line 78506
  STACKTOP = sp; //@line 78508
  return $_0 | 0; //@line 78509
 } else {
  $r_034_i = 1;
  $v_035_i = 0;
  $_in_i = $57;
 }
 L25022 : while (1) {
  $59 = $_in_i << 24 >> 24; //@line 78517
  do {
   if (($_in_i - 48 & 255) < 10) {
    $d_0_i = $59 - 48 | 0; //@line 78525
   } else {
    if (($_in_i - 97 & 255) < 6) {
     $d_0_i = $59 - 87 | 0; //@line 78533
     break;
    }
    if (($_in_i - 65 & 255) >= 6) {
     label = 19306; //@line 78540
     break L25022;
    }
    $d_0_i = $59 - 55 | 0; //@line 78544
   }
  } while (0);
  if ($d_0_i >>> 0 >= $base_0_i >>> 0) {
   label = 19306; //@line 78551
   break;
  }
  $75 = $d_0_i + (Math_imul($v_035_i, $base_0_i) | 0) | 0; //@line 78555
  _scn_rmv_chr($scn, 1); //@line 78556
  $76 = _scn_get_chr($scn, 0) | 0; //@line 78557
  if ($76 << 24 >> 24 == 0) {
   $v_1_i = $75; //@line 78561
   break;
  } else {
   $r_034_i = 0;
   $v_035_i = $75;
   $_in_i = $76;
  }
 }
 do {
  if ((label | 0) == 19306) {
   if (($r_034_i | 0) != 0) {
    $_0 = 1; //@line 78572
    STACKTOP = sp; //@line 78574
    return $_0 | 0; //@line 78575
   }
   if (($_in_i << 24 >> 24 | 0) == 107 | ($_in_i << 24 >> 24 | 0) == 75) {
    _scn_rmv_chr($scn, 1); //@line 78578
    $v_1_i = $v_035_i << 10; //@line 78581
    break;
   } else if (($_in_i << 24 >> 24 | 0) == 103 | ($_in_i << 24 >> 24 | 0) == 71) {
    _scn_rmv_chr($scn, 1); //@line 78584
    $v_1_i = $v_035_i << 30; //@line 78587
    break;
   } else if (($_in_i << 24 >> 24 | 0) == 109 | ($_in_i << 24 >> 24 | 0) == 77) {
    _scn_rmv_chr($scn, 1); //@line 78590
    $v_1_i = $v_035_i << 20; //@line 78593
    break;
   } else {
    $v_1_i = $v_035_i; //@line 78596
    break;
   }
  }
 } while (0);
 _ini_val_set_uint32($val, $v_1_i); //@line 78602
 $_0 = 0; //@line 78604
 STACKTOP = sp; //@line 78606
 return $_0 | 0; //@line 78607
}
function _dsk_cow_get_msg($dsk, $msg, $val, $max) {
 $dsk = $dsk | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 $max = $max | 0;
 return 1; //@line 78619
}
function _dsk_cow_new($dsk, $fname) {
 $dsk = $dsk | 0;
 $fname = $fname | 0;
 var $buf_i_i = 0, $1 = 0, $4 = 0, $5 = 0, $23 = 0, $26 = 0, $28 = 0, $29 = 0, $31 = 0, $35 = 0, $37 = 0, $40 = 0, $50 = 0, $56 = 0, $60 = 0, $67 = 0, $70 = 0, $73 = 0, $76 = 0, $78 = 0, $83 = 0, $102 = 0, $105 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 78644
 STACKTOP = STACKTOP + 32 | 0; //@line 78644
 $buf_i_i = sp | 0; //@line 78645
 $1 = _malloc(104) | 0; //@line 78646
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 78650
  STACKTOP = sp; //@line 78652
  return $_0 | 0; //@line 78653
 }
 $4 = $1; //@line 78655
 $5 = $dsk; //@line 78656
 _memcpy($1 | 0, $5 | 0, 68) | 0; //@line 78657
 _dsk_set_type($4, 5); //@line 78658
 HEAP32[$1 + 4 >> 2] = 478; //@line 78661
 HEAP32[$1 + 8 >> 2] = 20; //@line 78664
 HEAP32[$1 + 12 >> 2] = 64; //@line 78667
 HEAP32[$1 + 16 >> 2] = 14; //@line 78670
 HEAP32[$1 + 20 >> 2] = 54; //@line 78673
 HEAP32[$1 + 60 >> 2] = 0; //@line 78676
 HEAP32[$1 + 64 >> 2] = $1; //@line 78679
 HEAP32[$1 + 68 >> 2] = $dsk; //@line 78682
 $23 = $1 + 28 | 0; //@line 78684
 $26 = ((HEAP32[$23 >> 2] | 0) + 7 | 0) >>> 3; //@line 78687
 $28 = $1 + 100 | 0; //@line 78689
 HEAP32[$28 >> 2] = $26; //@line 78690
 $29 = _malloc($26) | 0; //@line 78691
 $31 = $1 + 96 | 0; //@line 78693
 HEAP32[$31 >> 2] = $29; //@line 78694
 if (($29 | 0) == 0) {
  _free($1); //@line 78698
  $_0 = 0; //@line 78700
  STACKTOP = sp; //@line 78702
  return $_0 | 0; //@line 78703
 }
 $35 = _fopen($fname | 0, 49184) | 0; //@line 78705
 $37 = $1 + 72 | 0; //@line 78707
 HEAP32[$37 >> 2] = $35; //@line 78708
 L25053 : do {
  if (($35 | 0) == 0) {
   $70 = _fopen($fname | 0, 55768) | 0; //@line 78713
   HEAP32[$37 >> 2] = $70; //@line 78714
   if (($70 | 0) == 0) {
    label = 19341; //@line 78718
    break;
   }
   $73 = $buf_i_i | 0; //@line 78721
   $76 = ((HEAP32[$23 >> 2] | 0) + 7 | 0) >>> 3; //@line 78724
   HEAP32[$28 >> 2] = $76; //@line 78725
   $78 = $1 + 80 | 0; //@line 78727
   HEAP32[$78 >> 2] = 20; //@line 78731
   HEAP32[$78 + 4 >> 2] = 0; //@line 78733
   $83 = $1 + 88 | 0; //@line 78739
   HEAP32[$83 >> 2] = $76 + 531 & 1073741312; //@line 78741
   HEAP32[$83 + 4 >> 2] = 0; //@line 78743
   _dsk_set_uint32_be($73, 0, 1129273120); //@line 78744
   _dsk_set_uint32_be($73, 4, 0); //@line 78745
   _dsk_set_uint32_be($73, 8, HEAP32[$23 >> 2] | 0); //@line 78747
   _dsk_set_uint32_be($73, 12, HEAP32[$78 >> 2] | 0); //@line 78754
   _dsk_set_uint32_be($73, 16, HEAP32[$83 >> 2] | 0); //@line 78761
   do {
    if ((_dsk_write(HEAP32[$37 >> 2] | 0, $73, 0, 0, 20, 0) | 0) == 0) {
     _memset(HEAP32[$31 >> 2] | 0, 0, HEAP32[$28 >> 2] | 0); //@line 78774
     if ((_dsk_write(HEAP32[$37 >> 2] | 0, HEAP32[$31 >> 2] | 0, HEAP32[$78 >> 2] | 0, HEAP32[$78 + 4 >> 2] | 0, HEAP32[$28 >> 2] | 0, 0) | 0) != 0) {
      break;
     }
     $102 = HEAP32[$37 >> 2] | 0; //@line 78790
     _fflush($102 | 0) | 0; //@line 78791
     label = 19342; //@line 78793
     break L25053;
    }
   } while (0);
   $105 = HEAP32[$37 >> 2] | 0; //@line 78797
   _fclose($105 | 0) | 0; //@line 78798
   label = 19341; //@line 78800
  } else {
   $40 = $buf_i_i | 0; //@line 78802
   do {
    if ((_dsk_read($35, $40, 0, 0, 20, 0) | 0) == 0) {
     if ((_dsk_get_uint32_be($40, 0) | 0) != 1129273120) {
      break;
     }
     if ((_dsk_get_uint32_be($40, 4) | 0) != 0) {
      break;
     }
     $50 = _dsk_get_uint32_be($40, 8) | 0; //@line 78824
     if (($50 | 0) != (HEAP32[$23 >> 2] | 0)) {
      break;
     }
     $56 = $1 + 80 | 0; //@line 78835
     HEAP32[$56 >> 2] = _dsk_get_uint32_be($40, 12) | 0; //@line 78837
     HEAP32[$56 + 4 >> 2] = 0; //@line 78839
     $60 = $1 + 88 | 0; //@line 78844
     HEAP32[$60 >> 2] = _dsk_get_uint32_be($40, 16) | 0; //@line 78846
     HEAP32[$60 + 4 >> 2] = 0; //@line 78848
     if ((_dsk_read(HEAP32[$37 >> 2] | 0, HEAP32[$31 >> 2] | 0, HEAP32[$56 >> 2] | 0, HEAP32[$56 + 4 >> 2] | 0, HEAP32[$28 >> 2] | 0, 0) | 0) == 0) {
      label = 19342; //@line 78862
      break L25053;
     }
    }
   } while (0);
   $67 = HEAP32[$37 >> 2] | 0; //@line 78867
   _fclose($67 | 0) | 0; //@line 78868
   label = 19341; //@line 78870
  }
 } while (0);
 if ((label | 0) == 19342) {
  _dsk_set_fname($4, $fname); //@line 78874
  $_0 = $4; //@line 78876
  STACKTOP = sp; //@line 78878
  return $_0 | 0; //@line 78879
 } else if ((label | 0) == 19341) {
  _free(HEAP32[$31 >> 2] | 0); //@line 78883
  _free($1); //@line 78884
  $_0 = 0; //@line 78886
  STACKTOP = sp; //@line 78888
  return $_0 | 0; //@line 78889
 }
 return 0;
}
function _dsk_cow_del($dsk) {
 $dsk = $dsk | 0;
 var $2 = 0;
 $2 = HEAP32[$dsk + 64 >> 2] | 0; //@line 78901
 _dsk_del(HEAP32[$2 + 68 >> 2] | 0); //@line 78905
 _fclose(HEAP32[$2 + 72 >> 2] | 0) | 0; //@line 78909
 _free(HEAP32[$2 + 96 >> 2] | 0); //@line 78913
 _free($2); //@line 78914
 return;
}
function _dsk_cow_read($dsk, $buf, $i, $n) {
 $dsk = $dsk | 0;
 $buf = $buf | 0;
 $i = $i | 0;
 $n = $n | 0;
 var $2 = 0, $3 = 0, $5 = 0, $7 = 0, $10$0 = 0, $11 = 0, $14$0 = 0, $16 = 0, $ofs_031$0 = 0, $ofs_031$1 = 0, $tmp_030 = 0, $_01729 = 0, $_01828 = 0, $21 = 0, $23 = 0, $24 = 0, $29 = 0, $32 = 0, $n_034_i = 0, $36 = 0, $n_037_i = 0, $m_036_i = 0, $i_035_i = 0, $i_130_i = 0, $39 = 0, $i_132_i = 0, $n_131_i = 0, $44 = 0, $45 = 0, $i_1_i = 0, $47 = 0, $i_1_lcssa_i = 0, $n_1_lcssa_i = 0, $51 = 0, $i_2_i = 0, $n_2_i = 0, $m_1_i = 0, $58 = 0, $n_0_i = 0, $_01722 = 0, $62 = 0, $63$0 = 0, $63$1 = 0, $_pre = 0, $_pre_phi40$0 = 0, $_pre_phi40$1 = 0, $_pre_phi = 0, $74$0 = 0, $_0 = 0, label = 0;
 $2 = HEAP32[$dsk + 64 >> 2] | 0; //@line 78941
 $3 = $dsk + 28 | 0; //@line 78942
 $5 = $2 + 68 | 0; //@line 78944
 $7 = $2 + 72 | 0; //@line 78946
 if (($n | 0) == 0) {
  $_0 = 0; //@line 78950
  return $_0 | 0; //@line 78953
 }
 $10$0 = $i; //@line 78956
 $11 = $2 + 88 | 0; //@line 78958
 $14$0 = _i64Add(HEAP32[$11 >> 2] | 0, HEAP32[$11 + 4 >> 2] | 0, $10$0 << 9 | 0 >>> 23, 0 << 9 | $10$0 >>> 23) | 0;
 $16 = $2 + 96 | 0; //@line 78967
 $_01828 = $i;
 $_01729 = $n;
 $tmp_030 = $buf;
 $ofs_031$1 = tempRet0;
 $ofs_031$0 = $14$0;
 while (1) {
  if ($_01828 >>> 0 >= (HEAP32[$3 >> 2] | 0) >>> 0) {
   $_0 = 1; //@line 78980
   label = 19373; //@line 78981
   break;
  }
  $21 = $_01828 >>> 3; //@line 78984
  $23 = 128 >>> (($_01828 & 7) >>> 0); //@line 78986
  $24 = HEAP32[$16 >> 2] | 0; //@line 78987
  $29 = (HEAPU8[$24 + $21 | 0] & $23 | 0) != 0; //@line 78992
  L25080 : do {
   if ($_01729 >>> 0 < 2) {
    $_01722 = 1; //@line 78997
   } else {
    $32 = $29 << 31 >> 31; //@line 78999
    $n_034_i = $_01729 - 1 | 0; //@line 79000
    if (($n_034_i | 0) == 0) {
     $_01722 = 1; //@line 79004
     break;
    }
    $i_035_i = $21;
    $m_036_i = $23 & 255;
    $n_037_i = $n_034_i;
    $36 = 1;
    while (1) {
     L25085 : do {
      if ($m_036_i << 24 >> 24 == 1) {
       $i_130_i = $i_035_i + 1 | 0; //@line 79019
       if ($n_037_i >>> 0 > 7) {
        $n_131_i = $n_037_i;
        $i_132_i = $i_130_i;
        $39 = $36;
        while (1) {
         if ((HEAP8[$24 + $i_132_i | 0] | 0) != $32 << 24 >> 24) {
          $m_1_i = -128;
          $n_2_i = $n_131_i;
          $i_2_i = $i_132_i;
          $51 = $39;
          break L25085;
         }
         $44 = $n_131_i - 8 | 0; //@line 79035
         $45 = $39 + 8 | 0; //@line 79036
         $i_1_i = $i_132_i + 1 | 0; //@line 79037
         if ($44 >>> 0 > 7) {
          $n_131_i = $44;
          $i_132_i = $i_1_i;
          $39 = $45;
         } else {
          $n_1_lcssa_i = $44;
          $i_1_lcssa_i = $i_1_i;
          $47 = $45;
          break;
         }
        }
       } else {
        $n_1_lcssa_i = $n_037_i;
        $i_1_lcssa_i = $i_130_i;
        $47 = $36;
       }
       if (($n_1_lcssa_i | 0) == 0) {
        $_01722 = $47; //@line 79056
        break L25080;
       } else {
        $m_1_i = -128;
        $n_2_i = $n_1_lcssa_i;
        $i_2_i = $i_1_lcssa_i;
        $51 = $47;
       }
      } else {
       $m_1_i = ($m_036_i & 255) >>> 1;
       $n_2_i = $n_037_i;
       $i_2_i = $i_035_i;
       $51 = $36;
      }
     } while (0);
     if ((HEAP8[$24 + $i_2_i | 0] & $m_1_i) << 24 >> 24 != 0 ^ $29) {
      $_01722 = $51; //@line 79077
      break L25080;
     }
     $58 = $51 + 1 | 0; //@line 79080
     $n_0_i = $n_2_i - 1 | 0; //@line 79081
     if (($n_0_i | 0) == 0) {
      $_01722 = $58; //@line 79085
      break;
     } else {
      $i_035_i = $i_2_i;
      $m_036_i = $m_1_i;
      $n_037_i = $n_0_i;
      $36 = $58;
     }
    }
   }
  } while (0);
  if ($29) {
   $62 = $_01722 << 9; //@line 79097
   $63$0 = $62; //@line 79098
   $63$1 = 0; //@line 79099
   if ((_dsk_read(HEAP32[$7 >> 2] | 0, $tmp_030, $ofs_031$0, $ofs_031$1, $63$0, $63$1) | 0) == 0) {
    $_pre_phi = $62;
    $_pre_phi40$1 = $63$1;
    $_pre_phi40$0 = $63$0;
   } else {
    $_0 = 1; //@line 79106
    label = 19372; //@line 79107
    break;
   }
  } else {
   if ((_dsk_read_lba(HEAP32[$5 >> 2] | 0, $tmp_030, $_01828, $_01722) | 0) != 0) {
    $_0 = 1; //@line 79116
    label = 19371; //@line 79117
    break;
   }
   $_pre = $_01722 << 9; //@line 79120
   $_pre_phi = $_pre;
   $_pre_phi40$1 = 0;
   $_pre_phi40$0 = $_pre;
  }
  $74$0 = _i64Add($_pre_phi40$0, $_pre_phi40$1, $ofs_031$0, $ofs_031$1) | 0;
  if (($_01729 | 0) == ($_01722 | 0)) {
   $_0 = 0; //@line 79136
   label = 19370; //@line 79137
   break;
  } else {
   $_01828 = $_01722 + $_01828 | 0;
   $_01729 = $_01729 - $_01722 | 0;
   $tmp_030 = $tmp_030 + $_pre_phi | 0;
   $ofs_031$1 = tempRet0;
   $ofs_031$0 = $74$0;
  }
 }
 if ((label | 0) == 19373) {
  return $_0 | 0; //@line 79146
 } else if ((label | 0) == 19370) {
  return $_0 | 0; //@line 79151
 } else if ((label | 0) == 19372) {
  return $_0 | 0; //@line 79156
 } else if ((label | 0) == 19371) {
  return $_0 | 0; //@line 79161
 }
 return 0;
}
function _dsk_cow_write($dsk, $buf, $i, $n) {
 $dsk = $dsk | 0;
 $buf = $buf | 0;
 $i = $i | 0;
 $n = $n | 0;
 var $6 = 0, $9$0 = 0, $10 = 0, $13$0 = 0, $14 = 0, $16 = 0, $18 = 0, $20 = 0, $ofs_034$0 = 0, $ofs_034$1 = 0, $tmp_033 = 0, $_01932 = 0, $_02031 = 0, $25 = 0, $27 = 0, $28 = 0, $29 = 0, $31 = 0, $33 = 0, $36 = 0, $n_034_i = 0, $40 = 0, $n_037_i = 0, $m_036_i = 0, $i_035_i = 0, $i_130_i = 0, $43 = 0, $i_132_i = 0, $n_131_i = 0, $48 = 0, $49 = 0, $i_1_i = 0, $51 = 0, $i_1_lcssa_i = 0, $n_1_lcssa_i = 0, $55 = 0, $i_2_i = 0, $n_2_i = 0, $m_1_i = 0, $62 = 0, $n_0_i = 0, $_01925 = 0, $66 = 0, $67 = 0, $69 = 0, $71 = 0, $74 = 0, $84 = 0, $i_01_i = 0, $i_02_i = 0, $95 = 0, $97 = 0, $100$0 = 0, $100$1 = 0, $101$0 = 0, $101$1 = 0, $105 = 0, $106$0 = 0, $106$1 = 0, $113$0 = 0, $_pre_phi42 = 0, $_0 = 0, label = 0;
 if ((HEAP8[$dsk + 56 | 0] | 0) != 0) {
  $_0 = 1; //@line 79196
  return $_0 | 0; //@line 79199
 }
 $6 = HEAP32[$dsk + 64 >> 2] | 0; //@line 79202
 L25110 : do {
  if (($n | 0) == 0) {
   $_pre_phi42 = $6 + 72 | 0; //@line 79210
  } else {
   $9$0 = $i; //@line 79213
   $10 = $6 + 88 | 0; //@line 79215
   $13$0 = _i64Add(HEAP32[$10 >> 2] | 0, HEAP32[$10 + 4 >> 2] | 0, $9$0 << 9 | 0 >>> 23, 0 << 9 | $9$0 >>> 23) | 0;
   $14 = $dsk + 28 | 0; //@line 79223
   $16 = $6 + 96 | 0; //@line 79225
   $18 = $6 + 72 | 0; //@line 79227
   $20 = $6 + 80 | 0; //@line 79229
   $_02031 = $i;
   $_01932 = $n;
   $tmp_033 = $buf;
   $ofs_034$1 = tempRet0;
   $ofs_034$0 = $13$0;
   while (1) {
    if ($_02031 >>> 0 >= (HEAP32[$14 >> 2] | 0) >>> 0) {
     $_0 = 1; //@line 79242
     label = 19402; //@line 79243
     break;
    }
    $25 = $_02031 >>> 3; //@line 79246
    $27 = 128 >>> (($_02031 & 7) >>> 0); //@line 79248
    $28 = HEAP32[$16 >> 2] | 0; //@line 79249
    $29 = $28 + $25 | 0; //@line 79250
    $31 = HEAPU8[$29] | 0; //@line 79252
    $33 = ($31 & $27 | 0) != 0; //@line 79254
    L25115 : do {
     if ($_01932 >>> 0 < 2) {
      $_01925 = 1; //@line 79259
     } else {
      $36 = $33 << 31 >> 31; //@line 79261
      $n_034_i = $_01932 - 1 | 0; //@line 79262
      if (($n_034_i | 0) == 0) {
       $_01925 = 1; //@line 79266
       break;
      }
      $i_035_i = $25;
      $m_036_i = $27 & 255;
      $n_037_i = $n_034_i;
      $40 = 1;
      while (1) {
       L25120 : do {
        if ($m_036_i << 24 >> 24 == 1) {
         $i_130_i = $i_035_i + 1 | 0; //@line 79281
         if ($n_037_i >>> 0 > 7) {
          $n_131_i = $n_037_i;
          $i_132_i = $i_130_i;
          $43 = $40;
          while (1) {
           if ((HEAP8[$28 + $i_132_i | 0] | 0) != $36 << 24 >> 24) {
            $m_1_i = -128;
            $n_2_i = $n_131_i;
            $i_2_i = $i_132_i;
            $55 = $43;
            break L25120;
           }
           $48 = $n_131_i - 8 | 0; //@line 79297
           $49 = $43 + 8 | 0; //@line 79298
           $i_1_i = $i_132_i + 1 | 0; //@line 79299
           if ($48 >>> 0 > 7) {
            $n_131_i = $48;
            $i_132_i = $i_1_i;
            $43 = $49;
           } else {
            $n_1_lcssa_i = $48;
            $i_1_lcssa_i = $i_1_i;
            $51 = $49;
            break;
           }
          }
         } else {
          $n_1_lcssa_i = $n_037_i;
          $i_1_lcssa_i = $i_130_i;
          $51 = $40;
         }
         if (($n_1_lcssa_i | 0) == 0) {
          $_01925 = $51; //@line 79318
          break L25115;
         } else {
          $m_1_i = -128;
          $n_2_i = $n_1_lcssa_i;
          $i_2_i = $i_1_lcssa_i;
          $55 = $51;
         }
        } else {
         $m_1_i = ($m_036_i & 255) >>> 1;
         $n_2_i = $n_037_i;
         $i_2_i = $i_035_i;
         $55 = $40;
        }
       } while (0);
       if ((HEAP8[$28 + $i_2_i | 0] & $m_1_i) << 24 >> 24 != 0 ^ $33) {
        $_01925 = $55; //@line 79339
        break L25115;
       }
       $62 = $55 + 1 | 0; //@line 79342
       $n_0_i = $n_2_i - 1 | 0; //@line 79343
       if (($n_0_i | 0) == 0) {
        $_01925 = $62; //@line 79347
        break;
       } else {
        $i_035_i = $i_2_i;
        $m_036_i = $m_1_i;
        $n_037_i = $n_0_i;
        $40 = $62;
       }
      }
     }
    } while (0);
    if (!$33) {
     $66 = $_02031 - 1 + $_01925 | 0; //@line 79359
     $67 = $66 >>> 3; //@line 79360
     $69 = 128 >>> (($66 & 7) >>> 0); //@line 79362
     $71 = $27 + 255 | $27; //@line 79364
     $74 = $69 + 255 ^ 255 | $69; //@line 79367
     do {
      if (($25 | 0) == ($67 | 0)) {
       HEAP8[$29] = ($31 | $74 & $71) & 255; //@line 79375
      } else {
       HEAP8[$29] = ($31 | $71) & 255; //@line 79380
       $84 = (HEAP32[$16 >> 2] | 0) + $67 | 0; //@line 79382
       HEAP8[$84] = (HEAPU8[$84] | $74) & 255; //@line 79387
       $i_01_i = $25 + 1 | 0; //@line 79388
       if ($i_01_i >>> 0 < $67 >>> 0) {
        $i_02_i = $i_01_i; //@line 79392
       } else {
        break;
       }
       do {
        HEAP8[(HEAP32[$16 >> 2] | 0) + $i_02_i | 0] = -1; //@line 79400
        $i_02_i = $i_02_i + 1 | 0; //@line 79401
       } while ($i_02_i >>> 0 < $67 >>> 0);
      }
     } while (0);
     $95 = HEAP32[$18 >> 2] | 0; //@line 79414
     $97 = (HEAP32[$16 >> 2] | 0) + $25 | 0; //@line 79416
     $100$0 = _i64Add(HEAP32[$20 >> 2] | 0, HEAP32[$20 + 4 >> 2] | 0, $25, 0) | 0;
     $100$1 = tempRet0;
     $101$0 = 1 - $25 + $67 | 0; //@line 79424
     $101$1 = 0; //@line 79425
     _dsk_write($95, $97, $100$0, $100$1, $101$0, $101$1) | 0; //@line 79426
    }
    $105 = $_01925 << 9; //@line 79430
    $106$0 = $105; //@line 79431
    $106$1 = 0; //@line 79432
    if ((_dsk_write(HEAP32[$18 >> 2] | 0, $tmp_033, $ofs_034$0, $ofs_034$1, $106$0, $106$1) | 0) != 0) {
     $_0 = 1; //@line 79437
     label = 19403; //@line 79438
     break;
    }
    $113$0 = _i64Add($106$0, $106$1, $ofs_034$0, $ofs_034$1) | 0;
    if (($_01932 | 0) == ($_01925 | 0)) {
     $_pre_phi42 = $18; //@line 79448
     break L25110;
    } else {
     $_02031 = $_01925 + $_02031 | 0;
     $_01932 = $_01932 - $_01925 | 0;
     $tmp_033 = $tmp_033 + $105 | 0;
     $ofs_034$1 = tempRet0;
     $ofs_034$0 = $113$0;
    }
   }
   if ((label | 0) == 19403) {
    return $_0 | 0; //@line 79457
   } else if ((label | 0) == 19402) {
    return $_0 | 0; //@line 79462
   }
  }
 } while (0);
 _fflush(HEAP32[$_pre_phi42 >> 2] | 0) | 0; //@line 79468
 $_0 = 0; //@line 79470
 return $_0 | 0; //@line 79473
}
function _dsk_cow_set_msg($dsk, $msg, $val) {
 $dsk = $dsk | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 var $dsk_idx_val = 0, $5 = 0, $6 = 0, $9 = 0, $10 = 0, $12 = 0, $14 = 0, $16 = 0, $17 = 0, $n_019_i = 0, $i_018_i = 0, $r_017_i = 0, $20 = 0, $msk_013_i = 0, $blk_012_i = 0, $n_111_i = 0, $r_110_i = 0, $msk_13_i = 0, $blk_12_i = 0, $24 = 0, $25 = 0, $msk_1_lcssa_ph_i = 0, $blk_1_lcssa_ph_i = 0, $msk_26_i = 0, $k_05_i = 0, $32$0 = 0, $35$0 = 0, $ofs_032_i_i$0 = 0, $ofs_032_i_i$1 = 0, $_02731_i_i = 0, $_02830_i_i = 0, $38 = 0, $40 = 0, $41$0 = 0, $41$1 = 0, $i_029_i_i = 0, $53 = 0, $59 = 0, $67$0 = 0, $_0_i_i = 0, $r_2_i = 0, $n_2_i = 0, $74 = 0, $n_1_lcssa_i = 0, $r_1_lcssa_i = 0, $75 = 0, $82 = 0, $87 = 0, $r_0_lcssa36_i = 0, $_pre_phi32_i = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 79498
 STACKTOP = STACKTOP + 4096 | 0; //@line 79498
 if ((_strcmp($msg | 0, 49376) | 0) != 0) {
  $_0 = 1; //@line 79504
  STACKTOP = sp; //@line 79506
  return $_0 | 0; //@line 79507
 }
 $dsk_idx_val = HEAP32[$dsk + 64 >> 2] | 0; //@line 79510
 $5 = $dsk_idx_val + 100 | 0; //@line 79512
 $6 = HEAP32[$5 >> 2] | 0; //@line 79513
 do {
  if (($6 | 0) == 0) {
   $_pre_phi32_i = $dsk_idx_val + 72 | 0;
   $r_0_lcssa36_i = 0;
  } else {
   $9 = $dsk_idx_val + 96 | 0; //@line 79524
   $10 = sp | 0; //@line 79525
   $12 = $dsk_idx_val + 68 | 0; //@line 79527
   $14 = $dsk_idx_val + 88 | 0; //@line 79529
   $16 = $dsk_idx_val + 72 | 0; //@line 79531
   $r_017_i = 0;
   $i_018_i = 0;
   $n_019_i = 0;
   $17 = $6;
   while (1) {
    $20 = HEAP8[(HEAP32[$9 >> 2] | 0) + $i_018_i | 0] | 0; //@line 79541
    if ($20 << 24 >> 24 == 0) {
     $r_1_lcssa_i = $r_017_i;
     $n_1_lcssa_i = $n_019_i;
     $74 = $17;
    } else {
     $r_110_i = $r_017_i;
     $n_111_i = $n_019_i;
     $blk_012_i = $i_018_i << 3;
     $msk_013_i = $20;
     while (1) {
      if ($msk_013_i << 24 >> 24 > -1) {
       $blk_12_i = $blk_012_i;
       $msk_13_i = $msk_013_i;
       while (1) {
        $24 = $msk_13_i << 1; //@line 79562
        $25 = $blk_12_i + 1 | 0; //@line 79563
        if ($24 << 24 >> 24 > -1) {
         $blk_12_i = $25;
         $msk_13_i = $24;
        } else {
         $blk_1_lcssa_ph_i = $25;
         $msk_1_lcssa_ph_i = $24;
         break;
        }
       }
      } else {
       $blk_1_lcssa_ph_i = $blk_012_i;
       $msk_1_lcssa_ph_i = $msk_013_i;
      }
      $k_05_i = 0;
      $msk_26_i = $msk_1_lcssa_ph_i;
      do {
       $k_05_i = $k_05_i + 1 | 0; //@line 79583
       $msk_26_i = $msk_26_i << 1; //@line 79584
      } while ($msk_26_i << 24 >> 24 <= -1);
      L25166 : do {
       if (($k_05_i | 0) == 0) {
        $_0_i_i = 1; //@line 79597
       } else {
        $32$0 = $blk_1_lcssa_ph_i; //@line 79599
        $35$0 = _i64Add(HEAP32[$14 >> 2] | 0, HEAP32[$14 + 4 >> 2] | 0, $32$0 << 9 | 0 >>> 23, 0 << 9 | $32$0 >>> 23) | 0;
        $_02830_i_i = $blk_1_lcssa_ph_i;
        $_02731_i_i = $k_05_i;
        $ofs_032_i_i$1 = tempRet0;
        $ofs_032_i_i$0 = $35$0;
        while (1) {
         $38 = $_02731_i_i >>> 0 > 8 ? 8 : $_02731_i_i; //@line 79616
         $40 = $38 << 9; //@line 79618
         $41$0 = $40; //@line 79619
         $41$1 = 0; //@line 79620
         if ((_dsk_read(HEAP32[$16 >> 2] | 0, $10, $ofs_032_i_i$0, $ofs_032_i_i$1, $41$0, $41$1) | 0) != 0) {
          $_0_i_i = 0; //@line 79625
          break L25166;
         }
         if ((_dsk_write_lba(HEAP32[$12 >> 2] | 0, $10, $_02830_i_i, $38) | 0) != 0) {
          $_0_i_i = 0; //@line 79633
          break L25166;
         }
         _memset($10 | 0, 0, $40 | 0); //@line 79636
         if ((_dsk_write(HEAP32[$16 >> 2] | 0, $10, $ofs_032_i_i$0, $ofs_032_i_i$1, $41$0, $41$1) | 0) != 0) {
          $_0_i_i = 0; //@line 79642
          break L25166;
         }
         if (($38 | 0) != 0) {
          $i_029_i_i = 0; //@line 79648
          do {
           $53 = $i_029_i_i + $_02830_i_i | 0; //@line 79651
           $59 = (HEAP32[$9 >> 2] | 0) + ($53 >>> 3) | 0; //@line 79657
           HEAP8[$59] = (128 >>> (($53 & 7) >>> 0) ^ 255) & (HEAPU8[$59] | 0) & 255; //@line 79662
           $i_029_i_i = $i_029_i_i + 1 | 0; //@line 79663
          } while ($i_029_i_i >>> 0 < $38 >>> 0);
         }
         $67$0 = _i64Add($41$0, $41$1, $ofs_032_i_i$0, $ofs_032_i_i$1) | 0;
         if (($_02731_i_i | 0) == ($38 | 0)) {
          $_0_i_i = 1; //@line 79679
          break;
         } else {
          $_02830_i_i = $38 + $_02830_i_i | 0;
          $_02731_i_i = $_02731_i_i - $38 | 0;
          $ofs_032_i_i$1 = tempRet0;
          $ofs_032_i_i$0 = $67$0;
         }
        }
       }
      } while (0);
      $r_2_i = $_0_i_i ? $r_110_i : 1; //@line 79688
      $n_2_i = ($_0_i_i ? $k_05_i : 0) + $n_111_i | 0; //@line 79690
      if ($msk_26_i << 24 >> 24 == 0) {
       break;
      } else {
       $r_110_i = $r_2_i;
       $n_111_i = $n_2_i;
       $blk_012_i = $k_05_i + $blk_1_lcssa_ph_i | 0;
       $msk_013_i = $msk_26_i;
      }
     }
     $r_1_lcssa_i = $r_2_i;
     $n_1_lcssa_i = $n_2_i;
     $74 = HEAP32[$5 >> 2] | 0;
    }
    $75 = $i_018_i + 1 | 0; //@line 79707
    if ($75 >>> 0 < $74 >>> 0) {
     $r_017_i = $r_1_lcssa_i;
     $i_018_i = $75;
     $n_019_i = $n_1_lcssa_i;
     $17 = $74;
    } else {
     break;
    }
   }
   if (($n_1_lcssa_i | 0) == 0) {
    $_pre_phi32_i = $16;
    $r_0_lcssa36_i = $r_1_lcssa_i;
    break;
   }
   $82 = $dsk_idx_val + 80 | 0; //@line 79725
   if ((_dsk_write(HEAP32[$16 >> 2] | 0, HEAP32[$9 >> 2] | 0, HEAP32[$82 >> 2] | 0, HEAP32[$82 + 4 >> 2] | 0, $74, 0) | 0) == 0) {
    $87 = HEAP32[$16 >> 2] | 0; //@line 79736
    _fflush($87 | 0) | 0; //@line 79737
    $_pre_phi32_i = $16;
    $r_0_lcssa36_i = $r_1_lcssa_i;
    break;
   } else {
    $_0 = 1; //@line 79742
    STACKTOP = sp; //@line 79744
    return $_0 | 0; //@line 79745
   }
  }
 } while (0);
 _fflush(HEAP32[$_pre_phi32_i >> 2] | 0) | 0; //@line 79752
 $_0 = $r_0_lcssa36_i; //@line 79754
 STACKTOP = sp; //@line 79756
 return $_0 | 0; //@line 79757
}
function _dsk_part_add_partition($dsk, $fname, $start$0, $start$1, $blk_i, $blk_n, $ro) {
 $dsk = $dsk | 0;
 $fname = $fname | 0;
 $start$0 = $start$0 | 0;
 $start$1 = $start$1 | 0;
 $blk_i = $blk_i | 0;
 $blk_n = $blk_n | 0;
 $ro = $ro | 0;
 var $fp_0 = 0, $10 = 0, $12 = 0, $13 = 0, $15 = 0, $18 = 0, $_0 = 0;
 if (($ro | 0) == 0) {
  $fp_0 = _fopen($fname | 0, 55760) | 0; //@line 79778
 } else {
  $fp_0 = _fopen($fname | 0, 49168) | 0; //@line 79782
 }
 if (($fp_0 | 0) == 0) {
  $_0 = 1; //@line 79788
  return $_0 | 0; //@line 79791
 }
 $10 = HEAP32[$dsk + 64 >> 2] | 0; //@line 79794
 $12 = $10 + 68 | 0; //@line 79796
 $13 = HEAP32[$12 >> 2] | 0; //@line 79797
 $15 = $10 + 72 | 0; //@line 79799
 HEAP32[$15 + ($13 << 5) >> 2] = $blk_i; //@line 79801
 HEAP32[$15 + ($13 << 5) + 4 >> 2] = $blk_n; //@line 79803
 $18 = $15 + ($13 << 5) + 8 | 0; //@line 79804
 HEAP32[$18 >> 2] = $start$0; //@line 79806
 HEAP32[$18 + 4 >> 2] = $start$1; //@line 79808
 HEAP32[$15 + ($13 << 5) + 16 >> 2] = $fp_0; //@line 79810
 HEAP32[$15 + ($13 << 5) + 20 >> 2] = 1; //@line 79812
 HEAP32[$15 + ($13 << 5) + 24 >> 2] = ($ro | 0) != 0; //@line 79816
 HEAP32[$12 >> 2] = $13 + 1; //@line 79818
 $_0 = 0; //@line 79820
 return $_0 | 0; //@line 79823
}
function _dsk_part_open($c, $h, $s, $ro) {
 $c = $c | 0;
 $h = $h | 0;
 $s = $s | 0;
 $ro = $ro | 0;
 var $1 = 0, $4 = 0, $_0 = 0;
 $1 = _malloc(584) | 0; //@line 79836
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 79840
  return $_0 | 0; //@line 79843
 }
 $4 = $1; //@line 79845
 _dsk_init($4, $1, 0, $c, $h, $s); //@line 79846
 _dsk_set_readonly($4, $ro); //@line 79847
 HEAP32[$1 + 4 >> 2] = 386; //@line 79850
 HEAP32[$1 + 8 >> 2] = 54; //@line 79853
 HEAP32[$1 + 12 >> 2] = 50; //@line 79856
 HEAP32[$1 + 68 >> 2] = 0; //@line 79859
 $_0 = $4; //@line 79861
 return $_0 | 0; //@line 79864
}
function _null_open($nt, $w, $h) {
 $nt = $nt | 0;
 $w = $w | 0;
 $h = $h | 0;
 return 0; //@line 79875
}
function _null_close($nt) {
 $nt = $nt | 0;
 return 0; //@line 79884
}
function _null_set_msg_trm($nt, $msg, $val) {
 $nt = $nt | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 return -1 | 0; //@line 79895
}
function _null_update($vt) {
 $vt = $vt | 0;
 return;
}
function _null_check($vt) {
 $vt = $vt | 0;
 return;
}
function _pce_key_to_string($key) {
 $key = $key | 0;
 var $el_0 = 0, $3 = 0, $_0 = 0, label = 0;
 $el_0 = 7760; //@line 79924
 while (1) {
  $3 = HEAP32[$el_0 + 4 >> 2] | 0; //@line 79928
  if (($3 | 0) == 0) {
   $_0 = 0; //@line 79932
   label = 19455; //@line 79933
   break;
  }
  if ((HEAP32[$el_0 >> 2] | 0) == ($key | 0)) {
   $_0 = $3; //@line 79942
   label = 19456; //@line 79943
   break;
  } else {
   $el_0 = $el_0 + 8 | 0; //@line 79946
  }
 }
 if ((label | 0) == 19456) {
  return $_0 | 0; //@line 79952
 } else if ((label | 0) == 19455) {
  return $_0 | 0; //@line 79957
 }
 return 0;
}
function _trm_set_msg_fct($trm, $ext, $fct) {
 $trm = $trm | 0;
 $ext = $ext | 0;
 $fct = $fct | 0;
 HEAP32[$trm + 4 >> 2] = $ext; //@line 79970
 HEAP32[$trm + 8 >> 2] = $fct; //@line 79973
 return;
}
function _trm_set_key_fct($trm, $ext, $fct) {
 $trm = $trm | 0;
 $ext = $ext | 0;
 $fct = $fct | 0;
 HEAP32[$trm + 12 >> 2] = $ext; //@line 79987
 HEAP32[$trm + 16 >> 2] = $fct; //@line 79990
 return;
}
function _trm_set_mouse_fct($trm, $ext, $fct) {
 $trm = $trm | 0;
 $ext = $ext | 0;
 $fct = $fct | 0;
 HEAP32[$trm + 20 >> 2] = $ext; //@line 80004
 HEAP32[$trm + 24 >> 2] = $fct; //@line 80007
 return;
}
function _trm_set_mouse_scale($trm, $mul_x, $div_x, $mul_y, $div_y) {
 $trm = $trm | 0;
 $mul_x = $mul_x | 0;
 $div_x = $div_x | 0;
 $mul_y = $mul_y | 0;
 $div_y = $div_y | 0;
 HEAP32[$trm + 100 >> 2] = $mul_x; //@line 80023
 HEAP32[$trm + 104 >> 2] = $div_x; //@line 80025
 HEAP32[$trm + 108 >> 2] = 0; //@line 80027
 HEAP32[$trm + 112 >> 2] = $mul_y; //@line 80029
 HEAP32[$trm + 116 >> 2] = $div_y; //@line 80031
 HEAP32[$trm + 120 >> 2] = 0; //@line 80033
 return;
}
function _dsk_part_del($dsk) {
 $dsk = $dsk | 0;
 var $2 = 0, $4 = 0, $5 = 0, $8 = 0, $10 = 0, $i_07 = 0, $16 = 0, $19 = 0, $20 = 0;
 $2 = HEAP32[$dsk + 64 >> 2] | 0; //@line 80047
 $4 = $2 + 68 | 0; //@line 80049
 $5 = HEAP32[$4 >> 2] | 0; //@line 80050
 if (($5 | 0) == 0) {
  _free($2); //@line 80054
  return;
 }
 $8 = $2 + 72 | 0; //@line 80059
 $i_07 = 0;
 $10 = $5;
 while (1) {
  if ((HEAP32[$8 + ($i_07 << 5) + 20 >> 2] | 0) == 0) {
   $19 = $10; //@line 80070
  } else {
   $16 = HEAP32[$8 + ($i_07 << 5) + 16 >> 2] | 0; //@line 80073
   _fclose($16 | 0) | 0; //@line 80074
   $19 = HEAP32[$4 >> 2] | 0; //@line 80077
  }
  $20 = $i_07 + 1 | 0; //@line 80080
  if ($20 >>> 0 < $19 >>> 0) {
   $i_07 = $20;
   $10 = $19;
  } else {
   break;
  }
 }
 _free($2); //@line 80089
 return;
}
function _dsk_part_read($dsk, $buf, $i, $n) {
 $dsk = $dsk | 0;
 $buf = $buf | 0;
 $i = $i | 0;
 $n = $n | 0;
 var $7 = 0, $8 = 0, $10 = 0, $dsk_idx_val = 0, $_03551 = 0, $_03650 = 0, $_03748 = 0, $14 = 0, $_pre6_i = 0, $17 = 0, $i_02_i = 0, $19 = 0, $31 = 0, $32 = 0, $pi_0_load404243 = 0, $38 = 0, $41 = 0, $44 = 0, $_037_ = 0, $46 = 0, $48$0 = 0, $50$0 = 0, $51$0 = 0, $52$0 = 0, $58 = 0, $_037_39 = 0, $60 = 0, $m_2 = 0, $cnt_0_off0 = 0, $_0 = 0, label = 0;
 if (($n + $i | 0) >>> 0 > (HEAP32[$dsk + 28 >> 2] | 0) >>> 0) {
  $_0 = 1; //@line 80119
  return $_0 | 0; //@line 80122
 }
 if (($n | 0) == 0) {
  $_0 = 0; //@line 80127
  return $_0 | 0; //@line 80130
 }
 $7 = $dsk + 64 | 0; //@line 80132
 $8 = HEAP32[$7 >> 2] | 0; //@line 80133
 $10 = $8 + 72 | 0; //@line 80135
 $_03748 = $n;
 $_03650 = $i;
 $_03551 = $buf;
 $dsk_idx_val = $8;
 while (1) {
  $14 = HEAP32[$dsk_idx_val + 68 >> 2] | 0; //@line 80145
  if (($14 | 0) == 0) {
   label = 19479; //@line 80149
   break;
  }
  $_pre6_i = $dsk_idx_val + 72 | 0; //@line 80153
  $i_02_i = 0;
  $17 = 0;
  while (1) {
   $19 = HEAP32[$_pre6_i + ($i_02_i << 5) >> 2] | 0; //@line 80159
   if ($19 >>> 0 > $_03650 >>> 0) {
    $31 = $19 >>> 0 < (HEAP32[$_pre6_i + ($17 << 5) >> 2] | 0) >>> 0 ? $i_02_i : $17; //@line 80168
   } else {
    if (($_03650 - $19 | 0) >>> 0 < (HEAP32[$_pre6_i + ($i_02_i << 5) + 4 >> 2] | 0) >>> 0) {
     $pi_0_load404243 = $i_02_i; //@line 80176
     break;
    } else {
     $31 = $17; //@line 80179
    }
   }
   $32 = $i_02_i + 1 | 0; //@line 80183
   if ($32 >>> 0 < $14 >>> 0) {
    $i_02_i = $32;
    $17 = $31;
   } else {
    label = 19478; //@line 80189
    break;
   }
  }
  if ((label | 0) == 19478) {
   label = 0; //@line 80194
   if ((HEAP32[$_pre6_i + ($31 << 5) >> 2] | 0) >>> 0 > $_03650 >>> 0) {
    $pi_0_load404243 = $31; //@line 80200
   } else {
    label = 19479; //@line 80202
    break;
   }
  }
  $38 = HEAP32[$10 + ($pi_0_load404243 << 5) >> 2] | 0; //@line 80208
  if ($38 >>> 0 > $_03650 >>> 0) {
   $58 = $38 - $_03650 | 0; //@line 80212
   $_037_39 = $58 >>> 0 > $_03748 >>> 0 ? $_03748 : $58; //@line 80214
   $60 = $_037_39 << 9; //@line 80215
   _memset($_03551 | 0, -2 | 0, $60 | 0); //@line 80216
   $cnt_0_off0 = $60;
   $m_2 = $_037_39;
  } else {
   $41 = $_03650 - $38 | 0; //@line 80219
   $44 = (HEAP32[$10 + ($pi_0_load404243 << 5) + 4 >> 2] | 0) - $41 | 0; //@line 80222
   $_037_ = $44 >>> 0 > $_03748 >>> 0 ? $_03748 : $44; //@line 80224
   $46 = $10 + ($pi_0_load404243 << 5) + 8 | 0; //@line 80225
   $48$0 = $41; //@line 80230
   $50$0 = _i64Add(HEAP32[$46 >> 2] | 0, HEAP32[$46 + 4 >> 2] | 0, $48$0 << 9 | 0 >>> 23, 0 << 9 | $48$0 >>> 23) | 0;
   $51$0 = $_037_; //@line 80235
   $52$0 = $51$0 << 9 | 0 >>> 23; //@line 80237
   if ((_dsk_read(HEAP32[$10 + ($pi_0_load404243 << 5) + 16 >> 2] | 0, $_03551, $50$0, tempRet0, $52$0, 0 << 9 | $51$0 >>> 23) | 0) == 0) {
    $cnt_0_off0 = $52$0;
    $m_2 = $_037_;
   } else {
    $_0 = 1; //@line 80249
    label = 19486; //@line 80250
    break;
   }
  }
  if (($_03748 | 0) == ($m_2 | 0)) {
   $_0 = 0; //@line 80259
   label = 19488; //@line 80260
   break;
  }
  $_03748 = $_03748 - $m_2 | 0;
  $_03650 = $m_2 + $_03650 | 0;
  $_03551 = $_03551 + $cnt_0_off0 | 0;
  $dsk_idx_val = HEAP32[$7 >> 2] | 0;
 }
 if ((label | 0) == 19488) {
  return $_0 | 0; //@line 80273
 } else if ((label | 0) == 19486) {
  return $_0 | 0; //@line 80278
 } else if ((label | 0) == 19479) {
  _memset($_03551 | 0, -2 | 0, $_03748 << 9 | 0); //@line 80282
  $_0 = 0; //@line 80284
  return $_0 | 0; //@line 80287
 }
 return 0;
}
function _dsk_part_write($dsk, $buf, $i, $n) {
 $dsk = $dsk | 0;
 $buf = $buf | 0;
 $i = $i | 0;
 $n = $n | 0;
 var $6 = 0, $7 = 0, $9 = 0, $dsk_idx_val = 0, $_03246 = 0, $_03345 = 0, $_03444 = 0, $13 = 0, $_pre6_i = 0, $16 = 0, $i_02_i = 0, $18 = 0, $30 = 0, $31 = 0, $pi_0_load384041 = 0, $36 = 0, $43 = 0, $46 = 0, $_034_ = 0, $48 = 0, $50$0 = 0, $52$0 = 0, $53$0 = 0, $54$0 = 0, $55 = 0, $60 = 0, $63 = 0, $_034_36 = 0, $m_2 = 0, $cnt_0_off0 = 0, $_0 = 0, label = 0;
 if (($n + $i | 0) >>> 0 > (HEAP32[$dsk + 28 >> 2] | 0) >>> 0) {
  $_0 = 1; //@line 80316
  return $_0 | 0; //@line 80319
 }
 $6 = $dsk + 64 | 0; //@line 80321
 $7 = HEAP32[$6 >> 2] | 0; //@line 80322
 $9 = $7 + 72 | 0; //@line 80324
 if (($n | 0) == 0) {
  $_0 = 0; //@line 80328
  return $_0 | 0; //@line 80331
 } else {
  $_03444 = $n;
  $_03345 = $i;
  $_03246 = $buf;
  $dsk_idx_val = $7;
 }
 while (1) {
  $13 = HEAP32[$dsk_idx_val + 68 >> 2] | 0; //@line 80342
  if (($13 | 0) == 0) {
   $_0 = 0; //@line 80346
   label = 19508; //@line 80347
   break;
  }
  $_pre6_i = $dsk_idx_val + 72 | 0; //@line 80351
  $i_02_i = 0;
  $16 = 0;
  while (1) {
   $18 = HEAP32[$_pre6_i + ($i_02_i << 5) >> 2] | 0; //@line 80357
   if ($18 >>> 0 > $_03345 >>> 0) {
    $30 = $18 >>> 0 < (HEAP32[$_pre6_i + ($16 << 5) >> 2] | 0) >>> 0 ? $i_02_i : $16; //@line 80366
   } else {
    if (($_03345 - $18 | 0) >>> 0 < (HEAP32[$_pre6_i + ($i_02_i << 5) + 4 >> 2] | 0) >>> 0) {
     $pi_0_load384041 = $i_02_i; //@line 80374
     break;
    } else {
     $30 = $16; //@line 80377
    }
   }
   $31 = $i_02_i + 1 | 0; //@line 80381
   if ($31 >>> 0 < $13 >>> 0) {
    $i_02_i = $31;
    $16 = $30;
   } else {
    label = 19499; //@line 80387
    break;
   }
  }
  if ((label | 0) == 19499) {
   label = 0; //@line 80392
   if ((HEAP32[$_pre6_i + ($30 << 5) >> 2] | 0) >>> 0 > $_03345 >>> 0) {
    $pi_0_load384041 = $30; //@line 80398
   } else {
    $_0 = 0; //@line 80400
    label = 19509; //@line 80401
    break;
   }
  }
  $36 = HEAP32[$9 + ($pi_0_load384041 << 5) >> 2] | 0; //@line 80407
  if ($36 >>> 0 > $_03345 >>> 0) {
   $63 = $36 - $_03345 | 0; //@line 80411
   $_034_36 = $63 >>> 0 > $_03444 >>> 0 ? $_03444 : $63; //@line 80413
   $cnt_0_off0 = $_034_36 << 9;
   $m_2 = $_034_36;
  } else {
   if ((HEAP32[$9 + ($pi_0_load384041 << 5) + 24 >> 2] | 0) != 0) {
    $_0 = 1; //@line 80422
    label = 19510; //@line 80423
    break;
   }
   $43 = $_03345 - $36 | 0; //@line 80426
   $46 = (HEAP32[$9 + ($pi_0_load384041 << 5) + 4 >> 2] | 0) - $43 | 0; //@line 80429
   $_034_ = $46 >>> 0 > $_03444 >>> 0 ? $_03444 : $46; //@line 80431
   $48 = $9 + ($pi_0_load384041 << 5) + 8 | 0; //@line 80432
   $50$0 = $43; //@line 80437
   $52$0 = _i64Add(HEAP32[$48 >> 2] | 0, HEAP32[$48 + 4 >> 2] | 0, $50$0 << 9 | 0 >>> 23, 0 << 9 | $50$0 >>> 23) | 0;
   $53$0 = $_034_; //@line 80442
   $54$0 = $53$0 << 9 | 0 >>> 23; //@line 80444
   $55 = $9 + ($pi_0_load384041 << 5) + 16 | 0; //@line 80446
   if ((_dsk_write(HEAP32[$55 >> 2] | 0, $_03246, $52$0, tempRet0, $54$0, 0 << 9 | $53$0 >>> 23) | 0) != 0) {
    $_0 = 1; //@line 80452
    label = 19512; //@line 80453
    break;
   }
   $60 = HEAP32[$55 >> 2] | 0; //@line 80456
   _fflush($60 | 0) | 0; //@line 80457
   $cnt_0_off0 = $54$0;
   $m_2 = $_034_;
  }
  if (($_03444 | 0) == ($m_2 | 0)) {
   $_0 = 0; //@line 80468
   label = 19514; //@line 80469
   break;
  }
  $_03444 = $_03444 - $m_2 | 0;
  $_03345 = $m_2 + $_03345 | 0;
  $_03246 = $_03246 + $cnt_0_off0 | 0;
  $dsk_idx_val = HEAP32[$6 >> 2] | 0;
 }
 if ((label | 0) == 19510) {
  return $_0 | 0; //@line 80482
 } else if ((label | 0) == 19509) {
  return $_0 | 0; //@line 80487
 } else if ((label | 0) == 19514) {
  return $_0 | 0; //@line 80492
 } else if ((label | 0) == 19512) {
  return $_0 | 0; //@line 80497
 } else if ((label | 0) == 19508) {
  return $_0 | 0; //@line 80502
 }
 return 0;
}
function _dsk_ram_open($fname, $n, $c, $h, $s, $ro) {
 $fname = $fname | 0;
 $n = $n | 0;
 $c = $c | 0;
 $h = $h | 0;
 $s = $s | 0;
 $ro = $ro | 0;
 var $1 = 0, $4 = 0, $12 = 0, $14 = 0, $15 = 0, $17 = 0, $23 = 0, $27$0 = 0, $29 = 0, $_0 = 0;
 $1 = _malloc(72) | 0; //@line 80521
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 80525
  return $_0 | 0; //@line 80528
 }
 $4 = $1; //@line 80530
 _dsk_init($4, $1, $n, $c, $h, $s); //@line 80531
 _dsk_set_type($4, 2); //@line 80532
 _dsk_set_readonly($4, $ro); //@line 80533
 HEAP32[$1 + 4 >> 2] = 378; //@line 80536
 HEAP32[$1 + 8 >> 2] = 52; //@line 80539
 HEAP32[$1 + 12 >> 2] = 2; //@line 80542
 $12 = $1 + 28 | 0; //@line 80544
 $14 = HEAP32[$12 >> 2] << 9; //@line 80546
 $15 = _malloc($14) | 0; //@line 80547
 $17 = $1 + 68 | 0; //@line 80549
 HEAP32[$17 >> 2] = $15; //@line 80550
 if (($15 | 0) == 0) {
  _free($1); //@line 80554
  $_0 = 0; //@line 80556
  return $_0 | 0; //@line 80559
 }
 _memset($15 | 0, 0, $14 | 0); //@line 80561
 if (($fname | 0) == 0) {
  $_0 = $4; //@line 80565
  return $_0 | 0; //@line 80568
 }
 $23 = _fopen($fname | 0, 49160) | 0; //@line 80570
 do {
  if (($23 | 0) != 0) {
   $27$0 = HEAP32[$12 >> 2] | 0; //@line 80577
   $29 = _dsk_read($23, HEAP32[$17 >> 2] | 0, 0, 0, $27$0 << 9 | 0 >>> 23, 0 << 9 | $27$0 >>> 23) | 0; //@line 80583
   _fclose($23 | 0) | 0; //@line 80584
   if (($29 | 0) != 0) {
    break;
   }
   _dsk_set_fname($4, $fname); //@line 80590
   $_0 = $4; //@line 80592
   return $_0 | 0; //@line 80595
  }
 } while (0);
 _free(HEAP32[$17 >> 2] | 0); //@line 80599
 _free($1); //@line 80600
 $_0 = 0; //@line 80602
 return $_0 | 0; //@line 80605
}
function _dsk_ram_del($dsk) {
 $dsk = $dsk | 0;
 var $2 = 0;
 $2 = HEAP32[$dsk + 64 >> 2] | 0; //@line 80615
 _free(HEAP32[$2 + 68 >> 2] | 0); //@line 80619
 _free($2); //@line 80620
 return;
}
function _dsk_ram_read($dsk, $buf, $i, $n) {
 $dsk = $dsk | 0;
 $buf = $buf | 0;
 $i = $i | 0;
 $n = $n | 0;
 var $12 = 0, $13 = 0, $_0 = 0;
 if (($n + $i | 0) >>> 0 > (HEAP32[$dsk + 28 >> 2] | 0) >>> 0) {
  $_0 = 1; //@line 80641
  return $_0 | 0; //@line 80644
 }
 $12 = (HEAP32[(HEAP32[$dsk + 64 >> 2] | 0) + 68 >> 2] | 0) + ($i << 9) | 0; //@line 80652
 $13 = $n << 9; //@line 80653
 _memcpy($buf | 0, $12 | 0, $13) | 0; //@line 80654
 $_0 = 0; //@line 80656
 return $_0 | 0; //@line 80659
}
function _dsk_ram_write($dsk, $buf, $i, $n) {
 $dsk = $dsk | 0;
 $buf = $buf | 0;
 $i = $i | 0;
 $n = $n | 0;
 var $16 = 0, $17 = 0, $_0 = 0;
 if ((HEAP8[$dsk + 56 | 0] | 0) != 0) {
  $_0 = 1; //@line 80677
  return $_0 | 0; //@line 80680
 }
 if (($n + $i | 0) >>> 0 > (HEAP32[$dsk + 28 >> 2] | 0) >>> 0) {
  $_0 = 1; //@line 80688
  return $_0 | 0; //@line 80691
 }
 $16 = (HEAP32[(HEAP32[$dsk + 64 >> 2] | 0) + 68 >> 2] | 0) + ($i << 9) | 0; //@line 80699
 $17 = $n << 9; //@line 80700
 _memcpy($16 | 0, $buf | 0, $17) | 0; //@line 80701
 $_0 = 0; //@line 80703
 return $_0 | 0; //@line 80706
}
function _pce_key_from_string($str) {
 $str = $str | 0;
 var $el_0 = 0, $3 = 0, $_0 = 0, label = 0;
 $el_0 = 7760; //@line 80717
 while (1) {
  $3 = HEAP32[$el_0 + 4 >> 2] | 0; //@line 80721
  if (($3 | 0) == 0) {
   $_0 = 0; //@line 80725
   label = 19548; //@line 80726
   break;
  }
  if ((_strcasecmp($3 | 0, $str | 0) | 0) == 0) {
   break;
  } else {
   $el_0 = $el_0 + 8 | 0; //@line 80736
  }
 }
 if ((label | 0) == 19548) {
  return $_0 | 0; //@line 80742
 }
 $_0 = HEAP32[$el_0 >> 2] | 0; //@line 80747
 return $_0 | 0; //@line 80750
}
function _pce_key_get_map($map, $src, $dst) {
 $map = $map | 0;
 $src = $src | 0;
 $dst = $dst | 0;
 var $val = 0, $_022 = 0, $2 = 0, $4 = 0, $i_030 = 0, $_129 = 0, $6 = 0, $7 = 0, $_2 = 0, $14 = 0, $_2_pn = 0, $_3 = 0, $_4 = 0, $el_0_i = 0, $23 = 0, $_0_i = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 80764
 STACKTOP = STACKTOP + 32 | 0; //@line 80764
 $val = sp | 0; //@line 80765
 $_022 = $map; //@line 80767
 while (1) {
  $2 = HEAP8[$_022] | 0; //@line 80770
  if (!(($2 << 24 >> 24 | 0) == 32 | ($2 << 24 >> 24 | 0) == 9)) {
   $_129 = $_022;
   $i_030 = 0;
   $4 = $2;
   break;
  }
  $_022 = $_022 + 1 | 0; //@line 80777
 }
 while (1) {
  if (($4 << 24 >> 24 | 0) == 0 | ($4 << 24 >> 24 | 0) == 61 | ($4 << 24 >> 24 | 0) == 32) {
   break;
  }
  $6 = $_129 + 1 | 0; //@line 80786
  $7 = $i_030 + 1 | 0; //@line 80787
  HEAP8[$val + $i_030 | 0] = $4; //@line 80789
  if ($7 >>> 0 >= 32) {
   $_0 = 1; //@line 80793
   label = 19566; //@line 80794
   break;
  }
  $_129 = $6;
  $i_030 = $7;
  $4 = HEAP8[$6] | 0;
 }
 if ((label | 0) == 19566) {
  STACKTOP = sp; //@line 80803
  return $_0 | 0; //@line 80804
 }
 if ($i_030 >>> 0 > 31) {
  $_0 = 1; //@line 80809
  STACKTOP = sp; //@line 80811
  return $_0 | 0; //@line 80812
 }
 HEAP8[$val + $i_030 | 0] = 0; //@line 80815
 $_2 = $_129; //@line 80817
 while (1) {
  $14 = HEAP8[$_2] | 0; //@line 80820
  if (($14 << 24 >> 24 | 0) == 61) {
   $_2_pn = $_2; //@line 80822
   label = 19559; //@line 80823
   break;
  } else if (($14 << 24 >> 24 | 0) != 32) {
   $_4 = $_2; //@line 80826
   break;
  }
  $_2 = $_2 + 1 | 0; //@line 80831
 }
 if ((label | 0) == 19559) {
  while (1) {
   label = 0; //@line 80835
   $_3 = $_2_pn + 1 | 0; //@line 80837
   if ((HEAP8[$_3] | 0) == 32) {
    $_2_pn = $_3; //@line 80842
    label = 19559; //@line 80843
   } else {
    $_4 = $_3; //@line 80845
    break;
   }
  }
 }
 HEAP32[$src >> 2] = _strtoul($val | 0, 0, 0) | 0; //@line 80853
 $el_0_i = 7760; //@line 80855
 while (1) {
  $23 = HEAP32[$el_0_i + 4 >> 2] | 0; //@line 80859
  if (($23 | 0) == 0) {
   $_0_i = 0; //@line 80863
   break;
  }
  if ((_strcasecmp($23 | 0, $_4 | 0) | 0) == 0) {
   label = 19563; //@line 80871
   break;
  } else {
   $el_0_i = $el_0_i + 8 | 0; //@line 80874
  }
 }
 if ((label | 0) == 19563) {
  $_0_i = HEAP32[$el_0_i >> 2] | 0; //@line 80881
 }
 HEAP32[$dst >> 2] = $_0_i; //@line 80884
 $_0 = 0; //@line 80886
 STACKTOP = sp; //@line 80888
 return $_0 | 0; //@line 80889
}
function _null_new($ini) {
 $ini = $ini | 0;
 var $1 = 0, $4 = 0, $_0 = 0;
 $1 = _malloc(152) | 0; //@line 80899
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 80903
  return $_0 | 0; //@line 80906
 }
 $4 = $1; //@line 80908
 _trm_init($4, $1); //@line 80909
 HEAP32[$1 + 28 >> 2] = 66; //@line 80912
 HEAP32[$1 + 32 >> 2] = 4; //@line 80915
 HEAP32[$1 + 36 >> 2] = 20; //@line 80918
 HEAP32[$1 + 40 >> 2] = 46; //@line 80921
 HEAP32[$1 + 44 >> 2] = 136; //@line 80924
 HEAP32[$1 + 48 >> 2] = 332; //@line 80927
 $_0 = $4; //@line 80929
 return $_0 | 0; //@line 80932
}
function _null_del($nt) {
 $nt = $nt | 0;
 if (($nt | 0) == 0) {
  return;
 }
 _free($nt); //@line 80948
 return;
}
function _trm_init($trm, $ext) {
 $trm = $trm | 0;
 $ext = $ext | 0;
 HEAP32[$trm >> 2] = $ext; //@line 80964
 _memset($trm + 4 | 0, 0, 28); //@line 80969
 _memset($trm + 40 | 0, 0, 16); //@line 80971
 HEAP32[$trm + 56 >> 2] = 1; //@line 80972
 _memset($trm + 60 | 0, 0, 20); //@line 80976
 HEAP32[$trm + 80 >> 2] = 1; //@line 80977
 HEAP32[$trm + 84 >> 2] = 4; //@line 80979
 HEAP32[$trm + 88 >> 2] = 3; //@line 80981
 HEAP32[$trm + 92 >> 2] = 320; //@line 80983
 HEAP32[$trm + 96 >> 2] = 240; //@line 80985
 HEAP32[$trm + 100 >> 2] = 1; //@line 80987
 HEAP32[$trm + 104 >> 2] = 1; //@line 80989
 HEAP32[$trm + 108 >> 2] = 0; //@line 80991
 HEAP32[$trm + 112 >> 2] = 1; //@line 80993
 HEAP32[$trm + 116 >> 2] = 1; //@line 80995
 _memset($trm + 120 | 0, 0, 32); //@line 80998
 return;
}
function _trm_open($trm, $w, $h) {
 $trm = $trm | 0;
 $w = $w | 0;
 $h = $h | 0;
 var $1 = 0, $6 = 0, $_0 = 0;
 $1 = $trm + 52 | 0; //@line 81012
 if ((HEAP32[$1 >> 2] | 0) != 0) {
  $_0 = 0; //@line 81017
  return $_0 | 0; //@line 81020
 }
 $6 = HEAP32[$trm + 32 >> 2] | 0; //@line 81023
 do {
  if (($6 | 0) != 0) {
   if ((FUNCTION_TABLE_iiii[$6 & 127](HEAP32[$trm >> 2] | 0, $w, $h) | 0) == 0) {
    break;
   } else {
    $_0 = 1; //@line 81036
   }
   return $_0 | 0; //@line 81040
  }
 } while (0);
 HEAP32[$1 >> 2] = 1; //@line 81043
 $_0 = 0; //@line 81045
 return $_0 | 0; //@line 81048
}
function _trm_screenshot($trm, $fname) {
 $trm = $trm | 0;
 $fname = $fname | 0;
 var $str = 0, $6 = 0, $7 = 0, $8 = 0, $_015 = 0, $13 = 0, $17 = 0, $20 = 0, $21 = 0, $25 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 81060
 STACKTOP = STACKTOP + 256 | 0; //@line 81060
 $str = sp | 0; //@line 81061
 if (($fname | 0) == 0) {
  label = 19590; //@line 81065
 } else {
  if ((HEAP8[$fname] | 0) == 0) {
   label = 19590; //@line 81071
  } else {
   $_015 = $fname; //@line 81073
  }
 }
 if ((label | 0) == 19590) {
  $6 = $str | 0; //@line 81077
  $7 = $trm + 148 | 0; //@line 81078
  $8 = HEAP32[$7 >> 2] | 0; //@line 81079
  _sprintf($6 | 0, 48496, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $8, tempInt) | 0) | 0; //@line 81080
  HEAP32[$7 >> 2] = (HEAP32[$7 >> 2] | 0) + 1; //@line 81083
  $_015 = $6; //@line 81085
 }
 $13 = _fopen($_015 | 0, 55624) | 0; //@line 81088
 if (($13 | 0) == 0) {
  $_0 = 1; //@line 81092
  STACKTOP = sp; //@line 81094
  return $_0 | 0; //@line 81095
 }
 $17 = HEAP32[$trm + 64 >> 2] | 0; //@line 81098
 $20 = HEAP32[$trm + 68 >> 2] | 0; //@line 81101
 $21 = Math_imul($17 * 3 | 0, $20) | 0; //@line 81102
 _fprintf($13 | 0, 49320, (tempInt = STACKTOP, STACKTOP = STACKTOP + 24 | 0, HEAP32[tempInt >> 2] = $17, HEAP32[tempInt + 8 >> 2] = $20, HEAP32[tempInt + 16 >> 2] = 255, tempInt) | 0) | 0; //@line 81103
 $25 = _fwrite(HEAP32[$trm + 76 >> 2] | 0, 1, $21 | 0, $13 | 0) | 0; //@line 81106
 _fclose($13 | 0) | 0; //@line 81107
 $_0 = ($25 | 0) != ($21 | 0) | 0; //@line 81111
 STACKTOP = sp; //@line 81113
 return $_0 | 0; //@line 81114
}
function _trm_set_msg_trm($trm, $msg, $val) {
 $trm = $trm | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 var $4 = 0, $15 = 0, $_0 = 0;
 if ((_strcmp($msg | 0, 45616) | 0) == 0) {
  $4 = _pce_key_from_string($val) | 0; //@line 81130
  if (($4 | 0) == 0) {
   $_0 = 0; //@line 81134
   return $_0 | 0; //@line 81137
  }
  HEAP32[$trm + 56 >> 2] = $4; //@line 81140
  $_0 = 0; //@line 81142
  return $_0 | 0; //@line 81145
 }
 if ((_strcmp($msg | 0, 42152) | 0) == 0) {
  _trm_screenshot($trm, $val) | 0; //@line 81151
  $_0 = 0; //@line 81153
  return $_0 | 0; //@line 81156
 }
 $15 = HEAP32[$trm + 40 >> 2] | 0; //@line 81159
 if (($15 | 0) == 0) {
  $_0 = -1; //@line 81163
  return $_0 | 0; //@line 81166
 }
 $_0 = FUNCTION_TABLE_iiii[$15 & 127](HEAP32[$trm >> 2] | 0, $msg, $val) | 0; //@line 81172
 return $_0 | 0; //@line 81175
}
function _trm_set_escape_str($trm, $str) {
 $trm = $trm | 0;
 $str = $str | 0;
 var $1 = 0, $_0 = 0;
 $1 = _pce_key_from_string($str) | 0; //@line 81185
 if (($1 | 0) == 0) {
  $_0 = 1; //@line 81189
  return $_0 | 0; //@line 81192
 }
 HEAP32[$trm + 56 >> 2] = $1; //@line 81195
 $_0 = 0; //@line 81197
 return $_0 | 0; //@line 81200
}
function _trm_set_min_size($trm, $w, $h) {
 $trm = $trm | 0;
 $w = $w | 0;
 $h = $h | 0;
 HEAP32[$trm + 92 >> 2] = $w; //@line 81212
 HEAP32[$trm + 96 >> 2] = $h; //@line 81214
 return;
}
function _trm_set_scale($trm, $v) {
 $trm = $trm | 0;
 $v = $v | 0;
 HEAP32[$trm + 80 >> 2] = ($v | 0) == 0 ? 1 : $v; //@line 81230
 HEAP32[$trm + 132 >> 2] = 0; //@line 81232
 HEAP32[$trm + 136 >> 2] = 0; //@line 81234
 HEAP32[$trm + 140 >> 2] = HEAP32[$trm + 64 >> 2]; //@line 81238
 HEAP32[$trm + 144 >> 2] = HEAP32[$trm + 68 >> 2]; //@line 81242
 return;
}
function _trm_set_aspect_ratio($trm, $x, $y) {
 $trm = $trm | 0;
 $x = $x | 0;
 $y = $y | 0;
 HEAP32[$trm + 84 >> 2] = $x; //@line 81256
 HEAP32[$trm + 88 >> 2] = $y; //@line 81258
 return;
}
function _trm_set_size($trm, $w, $h) {
 $trm = $trm | 0;
 $w = $w | 0;
 $h = $h | 0;
 var $9 = 0, $18 = 0, $19 = 0, $23 = 0, $25 = 0;
 if (($w | 0) == 0 | ($h | 0) == 0) {
  _free(HEAP32[$trm + 76 >> 2] | 0); //@line 81281
  _memset($trm + 64 | 0, 0, 16); //@line 81284
  return;
 }
 $9 = $trm + 64 | 0; //@line 81289
 do {
  if ((HEAP32[$9 >> 2] | 0) == ($w | 0)) {
   if ((HEAP32[$trm + 68 >> 2] | 0) != ($h | 0)) {
    break;
   }
   return;
  }
 } while (0);
 $18 = Math_imul($w * 3 | 0, $h) | 0; //@line 81307
 $19 = $trm + 72 | 0; //@line 81308
 do {
  if ((HEAP32[$19 >> 2] | 0) != ($18 | 0)) {
   $23 = $trm + 76 | 0; //@line 81314
   $25 = _realloc(HEAP32[$23 >> 2] | 0, $18) | 0; //@line 81316
   if (($25 | 0) == 0) {
    return;
   } else {
    HEAP32[$23 >> 2] = $25; //@line 81323
    HEAP32[$19 >> 2] = $18; //@line 81324
    break;
   }
  }
 } while (0);
 HEAP32[$9 >> 2] = $w; //@line 81330
 HEAP32[$trm + 68 >> 2] = $h; //@line 81332
 HEAP32[$trm + 132 >> 2] = 0; //@line 81334
 HEAP32[$trm + 136 >> 2] = 0; //@line 81336
 HEAP32[$trm + 140 >> 2] = $w; //@line 81338
 HEAP32[$trm + 144 >> 2] = $h; //@line 81340
 return;
}
function _trm_set_lines($trm, $buf, $y, $cnt) {
 $trm = $trm | 0;
 $buf = $buf | 0;
 $y = $y | 0;
 $cnt = $cnt | 0;
 var $1 = 0, $3 = 0, $5 = 0, $7 = 0, $dst_053 = 0, $src_052 = 0, $_051 = 0, $_04850 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $dst_0_lcssa = 0, $src_0_lcssa = 0, $_0_lcssa = 0, $_048_lcssa = 0, $_1 = 0, $tmp_0 = 0, $20 = 0, $27 = 0, $31 = 0, $32 = 0, $34 = 0, $37 = 0, $41 = 0, $43 = 0, $44 = 0, $45 = 0, label = 0;
 $1 = $trm + 64 | 0; //@line 81361
 $3 = (HEAP32[$1 >> 2] | 0) * 3 | 0; //@line 81363
 $5 = HEAP32[$trm + 76 >> 2] | 0; //@line 81365
 $7 = $5 + (Math_imul($3, $y) | 0) | 0; //@line 81367
 L25426 : do {
  if (($cnt | 0) == 0) {
   $_048_lcssa = 0;
   $_0_lcssa = $y;
   $src_0_lcssa = $buf;
   $dst_0_lcssa = $7;
  } else {
   $_04850 = $cnt;
   $_051 = $y;
   $src_052 = $buf;
   $dst_053 = $7;
   while (1) {
    if ((_memcmp($dst_053 | 0, $src_052 | 0, $3 | 0) | 0) != 0) {
     $_048_lcssa = $_04850;
     $_0_lcssa = $_051;
     $src_0_lcssa = $src_052;
     $dst_0_lcssa = $dst_053;
     break L25426;
    }
    $12 = $src_052 + $3 | 0; //@line 81387
    $13 = $dst_053 + $3 | 0; //@line 81388
    $14 = $_051 + 1 | 0; //@line 81389
    $15 = $_04850 - 1 | 0; //@line 81390
    if (($15 | 0) == 0) {
     $_048_lcssa = 0;
     $_0_lcssa = $14;
     $src_0_lcssa = $12;
     $dst_0_lcssa = $13;
     break;
    } else {
     $_04850 = $15;
     $_051 = $14;
     $src_052 = $12;
     $dst_053 = $13;
    }
   }
  }
 } while (0);
 $tmp_0 = Math_imul($_048_lcssa, $3) | 0;
 $_1 = $_048_lcssa;
 while (1) {
  if (($_1 | 0) == 0) {
   label = 19644; //@line 81415
   break;
  }
  $20 = $tmp_0 - $3 | 0; //@line 81418
  if ((_memcmp($dst_0_lcssa + $20 | 0, $src_0_lcssa + $20 | 0, $3 | 0) | 0) == 0) {
   $tmp_0 = $20;
   $_1 = $_1 - 1 | 0;
  } else {
   break;
  }
 }
 if ((label | 0) == 19644) {
  return;
 }
 $27 = Math_imul($_1, $3) | 0; //@line 81435
 _memcpy($dst_0_lcssa | 0, $src_0_lcssa | 0, $27) | 0; //@line 81436
 HEAP32[$trm + 132 >> 2] = 0; //@line 81438
 HEAP32[$trm + 140 >> 2] = HEAP32[$1 >> 2]; //@line 81441
 $31 = $trm + 144 | 0; //@line 81442
 $32 = HEAP32[$31 >> 2] | 0; //@line 81443
 $34 = $trm + 136 | 0; //@line 81445
 if (($32 | 0) == 0) {
  HEAP32[$34 >> 2] = $_0_lcssa; //@line 81448
  HEAP32[$31 >> 2] = $_1; //@line 81449
  return;
 }
 $37 = HEAP32[$34 >> 2] | 0; //@line 81454
 if ($_0_lcssa >>> 0 < $37 >>> 0) {
  $41 = $32 - $_0_lcssa + $37 | 0; //@line 81459
  HEAP32[$31 >> 2] = $41; //@line 81460
  HEAP32[$34 >> 2] = $_0_lcssa; //@line 81461
  $44 = $_0_lcssa;
  $43 = $41;
 } else {
  $44 = $37;
  $43 = $32;
 }
 $45 = $_1 + $_0_lcssa | 0; //@line 81469
 if ($45 >>> 0 <= ($43 + $44 | 0) >>> 0) {
  return;
 }
 HEAP32[$31 >> 2] = $45 - $44; //@line 81478
 return;
}
function _trm_update($trm) {
 $trm = $trm | 0;
 var $10 = 0;
 if ((HEAP32[$trm + 140 >> 2] | 0) == 0) {
  return;
 }
 if ((HEAP32[$trm + 144 >> 2] | 0) == 0) {
  return;
 }
 $10 = HEAP32[$trm + 44 >> 2] | 0; //@line 81508
 if (($10 | 0) != 0) {
  FUNCTION_TABLE_vi[$10 & 1023](HEAP32[$trm >> 2] | 0); //@line 81514
 }
 _memset($trm + 132 | 0, 0, 16); //@line 81519
 return;
}
function _trm_check($trm) {
 $trm = $trm | 0;
 var $2 = 0;
 $2 = HEAP32[$trm + 48 >> 2] | 0; //@line 81532
 if (($2 | 0) == 0) {
  return;
 }
 FUNCTION_TABLE_vi[$2 & 1023](HEAP32[$trm >> 2] | 0); //@line 81541
 return;
}
function _trm_set_msg_emu($trm, $msg, $val) {
 $trm = $trm | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 var $2 = 0, $_0 = 0;
 $2 = HEAP32[$trm + 8 >> 2] | 0; //@line 81556
 if (($2 | 0) == 0) {
  $_0 = 1; //@line 81560
  return $_0 | 0; //@line 81563
 }
 $_0 = FUNCTION_TABLE_iiii[$2 & 127](HEAP32[$trm + 4 >> 2] | 0, $msg, $val) | 0; //@line 81569
 return $_0 | 0; //@line 81572
}
function _trm_set_key($trm, $event, $key) {
 $trm = $trm | 0;
 $event = $event | 0;
 $key = $key | 0;
 var $4 = 0, $5 = 0, $6 = 0, $8 = 0, $9 = 0, $10 = 0, $17 = 0, $19 = 0, $24 = 0, $25 = 0, $28 = 0, $_pre37 = 0, $33 = 0, $36 = 0, $43 = 0, $48 = 0, $52 = 0, $54 = 0, $57 = 0, $58 = 0;
 do {
  if (($event | 0) == 2) {
   $57 = $trm + 60 | 0; //@line 81591
   $58 = HEAP32[$57 >> 2] | 0; //@line 81592
   if (($58 & 1 | 0) == 0) {
    if (($key | 0) == 16) {
     return;
    } else if (($key | 0) == 75) {
     HEAP32[$57 >> 2] = $58 & -5; //@line 81602
     break;
    } else if (($key | 0) == 71) {
     HEAP32[$57 >> 2] = $58 & -9; //@line 81607
     break;
    } else {
     break;
    }
   } else {
    if ((HEAP32[$trm + 56 >> 2] | 0) == ($key | 0)) {
     return;
    }
    HEAP32[$57 >> 2] = $58 & -2; //@line 81623
    return;
   }
  } else if (($event | 0) == 1) {
   $4 = (HEAP32[$trm + 56 >> 2] | 0) == ($key | 0); //@line 81631
   $5 = $trm + 60 | 0; //@line 81632
   $6 = HEAP32[$5 >> 2] | 0; //@line 81633
   if ($4) {
    $8 = $6 ^ 1; //@line 81636
    HEAP32[$5 >> 2] = $8; //@line 81637
    $9 = $8; //@line 81639
   } else {
    $9 = $6; //@line 81641
   }
   $10 = $trm + 60 | 0; //@line 81644
   if (($9 & 1 | 0) != 0) {
    if ($4) {
     return;
    }
    _trm_set_key_emu($trm, 3, $key); //@line 81654
    return;
   }
   do {
    if (($key | 0) == 75) {
     $17 = $9 | 4; //@line 81661
     HEAP32[$10 >> 2] = $17; //@line 81662
     $43 = $17; //@line 81664
    } else if (($key | 0) == 16) {
     if (($9 & 12 | 0) != 0) {
      $43 = $9; //@line 81670
      break;
     }
     $24 = $trm + 40 | 0; //@line 81673
     $25 = HEAP32[$24 >> 2] | 0; //@line 81674
     do {
      if (($25 | 0) != 0) {
       $28 = HEAP32[$trm >> 2] | 0; //@line 81680
       FUNCTION_TABLE_iiii[$25 & 127]($28, 39120, 62840) | 0; //@line 81681
       $_pre37 = HEAP32[$24 >> 2] | 0; //@line 81682
       if (($_pre37 | 0) == 0) {
        break;
       }
       $33 = HEAP32[$trm >> 2] | 0; //@line 81689
       FUNCTION_TABLE_iiii[$_pre37 & 127]($33, 33232, 31608) | 0; //@line 81690
      }
     } while (0);
     $36 = HEAP32[$trm + 8 >> 2] | 0; //@line 81695
     if (($36 | 0) == 0) {
      return;
     }
     FUNCTION_TABLE_iiii[$36 & 127](HEAP32[$trm + 4 >> 2] | 0, 30616, 57824) | 0; //@line 81704
     return;
    } else if (($key | 0) == 71) {
     $19 = $9 | 8; //@line 81709
     HEAP32[$10 >> 2] = $19; //@line 81710
     $43 = $19; //@line 81712
    } else {
     $43 = $9; //@line 81714
    }
   } while (0);
   if (($43 & 12 | 0) != 12) {
    break;
   }
   $48 = HEAP32[$trm + 40 >> 2] | 0; //@line 81725
   if (($48 | 0) == 0) {
    $54 = $43; //@line 81729
   } else {
    $52 = HEAP32[$trm >> 2] | 0; //@line 81732
    FUNCTION_TABLE_iiii[$48 & 127]($52, 39120, 62840) | 0; //@line 81733
    $54 = HEAP32[$10 >> 2] | 0; //@line 81736
   }
   HEAP32[$10 >> 2] = $54 & -13; //@line 81740
  }
 } while (0);
 _trm_set_key_emu($trm, $event, $key); //@line 81744
 return;
}
function _trm_set_key_emu($trm, $event, $key) {
 $trm = $trm | 0;
 $event = $event | 0;
 $key = $key | 0;
 var $5 = 0, $13 = 0, $21 = 0, $29 = 0, $37 = 0, $45 = 0, $53 = 0, $61 = 0, $69 = 0, $77 = 0, $85 = 0, $92 = 0, $93 = 0, $95 = 0, $96 = 0, $_pre_i = 0, $100 = 0, $103 = 0, $111 = 0, $118 = 0, $119 = 0, $121 = 0, $122 = 0, $_pre68_i = 0, $126 = 0, $129 = 0, $137 = 0, $141 = 0, $146 = 0, $148 = 0, $160 = 0, $161 = 0, $164 = 0, $177 = 0, $185 = 0, $192 = 0;
 do {
  if (($event | 0) == 3) {
   if (($key | 0) == 35) {
    $137 = HEAP32[$trm + 8 >> 2] | 0; //@line 81783
    if (($137 | 0) == 0) {
     return;
    }
    $141 = HEAP32[$trm + 4 >> 2] | 0; //@line 81791
    FUNCTION_TABLE_iiii[$137 & 127]($141, 48992, 57824) | 0; //@line 81792
    return;
   } else if (($key | 0) == 32) {
    $118 = $trm + 40 | 0; //@line 81797
    $119 = HEAP32[$118 >> 2] | 0; //@line 81798
    do {
     if (($119 | 0) != 0) {
      $121 = $trm | 0; //@line 81803
      $122 = HEAP32[$121 >> 2] | 0; //@line 81804
      FUNCTION_TABLE_iiii[$119 & 127]($122, 39120, 62840) | 0; //@line 81805
      $_pre68_i = HEAP32[$118 >> 2] | 0; //@line 81806
      if (($_pre68_i | 0) == 0) {
       break;
      }
      $126 = HEAP32[$121 >> 2] | 0; //@line 81812
      FUNCTION_TABLE_iiii[$_pre68_i & 127]($126, 33232, 31608) | 0; //@line 81813
     }
    } while (0);
    $129 = HEAP32[$trm + 8 >> 2] | 0; //@line 81818
    if (($129 | 0) == 0) {
     return;
    }
    FUNCTION_TABLE_iiii[$129 & 127](HEAP32[$trm + 4 >> 2] | 0, 30616, 57824) | 0; //@line 81827
    return;
   } else if (($key | 0) == 49) {
    $77 = HEAP32[$trm + 40 >> 2] | 0; //@line 81833
    if (($77 | 0) == 0) {
     return;
    }
    FUNCTION_TABLE_iiii[$77 & 127](HEAP32[$trm >> 2] | 0, 51160, 62840) | 0; //@line 81842
    return;
   } else if (($key | 0) == 25) {
    $69 = HEAP32[$trm + 8 >> 2] | 0; //@line 81848
    if (($69 | 0) == 0) {
     return;
    }
    FUNCTION_TABLE_iiii[$69 & 127](HEAP32[$trm + 4 >> 2] | 0, 56976, 51672) | 0; //@line 81857
    return;
   } else if (($key | 0) == 108 | ($key | 0) == 92) {
    $185 = HEAP32[$trm + 8 >> 2] | 0; //@line 81863
    if (($185 | 0) == 0) {
     return;
    }
    FUNCTION_TABLE_iiii[$185 & 127](HEAP32[$trm + 4 >> 2] | 0, 48608, 47832) | 0; //@line 81872
    return;
   } else if (($key | 0) == 21) {
    $37 = HEAP32[$trm + 8 >> 2] | 0; //@line 81878
    if (($37 | 0) == 0) {
     return;
    }
    FUNCTION_TABLE_iiii[$37 & 127](HEAP32[$trm + 4 >> 2] | 0, 56976, 54440) | 0; //@line 81887
    return;
   } else if (($key | 0) == 106 | ($key | 0) == 90) {
    $177 = HEAP32[$trm + 8 >> 2] | 0; //@line 81893
    if (($177 | 0) == 0) {
     return;
    }
    FUNCTION_TABLE_iiii[$177 & 127](HEAP32[$trm + 4 >> 2] | 0, 48608, 48176) | 0; //@line 81902
    return;
   } else if (($key | 0) == 50) {
    $85 = HEAP32[$trm + 40 >> 2] | 0; //@line 81908
    if (($85 | 0) == 0) {
     return;
    }
    FUNCTION_TABLE_iiii[$85 & 127](HEAP32[$trm >> 2] | 0, 50672, 62840) | 0; //@line 81917
    return;
   } else if (($key | 0) == 19) {
    $21 = HEAP32[$trm + 8 >> 2] | 0; //@line 81923
    if (($21 | 0) == 0) {
     return;
    }
    FUNCTION_TABLE_iiii[$21 & 127](HEAP32[$trm + 4 >> 2] | 0, 56976, 55824) | 0; //@line 81932
    return;
   } else if (($key | 0) == 23) {
    $53 = HEAP32[$trm + 8 >> 2] | 0; //@line 81938
    if (($53 | 0) == 0) {
     return;
    }
    FUNCTION_TABLE_iiii[$53 & 127](HEAP32[$trm + 4 >> 2] | 0, 56976, 53152) | 0; //@line 81947
    return;
   } else if (($key | 0) == 18) {
    $13 = HEAP32[$trm + 8 >> 2] | 0; //@line 81953
    if (($13 | 0) == 0) {
     return;
    }
    FUNCTION_TABLE_iiii[$13 & 127](HEAP32[$trm + 4 >> 2] | 0, 56976, 57824) | 0; //@line 81962
    return;
   } else if (($key | 0) == 27) {
    $5 = HEAP32[$trm + 8 >> 2] | 0; //@line 81968
    if (($5 | 0) == 0) {
     return;
    }
    FUNCTION_TABLE_iiii[$5 & 127](HEAP32[$trm + 4 >> 2] | 0, 56976, 31608) | 0; //@line 81977
    return;
   } else if (($key | 0) == 20) {
    $29 = HEAP32[$trm + 8 >> 2] | 0; //@line 81983
    if (($29 | 0) == 0) {
     return;
    }
    FUNCTION_TABLE_iiii[$29 & 127](HEAP32[$trm + 4 >> 2] | 0, 56976, 55176) | 0; //@line 81992
    return;
   } else if (($key | 0) == 107 | ($key | 0) == 94) {
    $160 = $trm + 80 | 0; //@line 81997
    $161 = HEAP32[$160 >> 2] | 0; //@line 81998
    if ($161 >>> 0 <= 1) {
     return;
    }
    $164 = $161 - 1 | 0; //@line 82005
    HEAP32[$160 >> 2] = ($164 | 0) == 0 ? 1 : $164; //@line 82008
    HEAP32[$trm + 132 >> 2] = 0; //@line 82010
    HEAP32[$trm + 136 >> 2] = 0; //@line 82012
    HEAP32[$trm + 140 >> 2] = HEAP32[$trm + 64 >> 2]; //@line 82016
    HEAP32[$trm + 144 >> 2] = HEAP32[$trm + 68 >> 2]; //@line 82020
    return;
   } else if (($key | 0) == 24) {
    $61 = HEAP32[$trm + 8 >> 2] | 0; //@line 82026
    if (($61 | 0) == 0) {
     return;
    }
    FUNCTION_TABLE_iiii[$61 & 127](HEAP32[$trm + 4 >> 2] | 0, 56976, 52264) | 0; //@line 82035
    return;
   } else if (($key | 0) == 47) {
    _trm_screenshot($trm, 0) | 0; //@line 82040
    return;
   } else if (($key | 0) == 105 | ($key | 0) == 87) {
    $146 = $trm + 80 | 0; //@line 82045
    $148 = (HEAP32[$146 >> 2] | 0) + 1 | 0; //@line 82047
    HEAP32[$146 >> 2] = ($148 | 0) == 0 ? 1 : $148; //@line 82050
    HEAP32[$trm + 132 >> 2] = 0; //@line 82052
    HEAP32[$trm + 136 >> 2] = 0; //@line 82054
    HEAP32[$trm + 140 >> 2] = HEAP32[$trm + 64 >> 2]; //@line 82058
    HEAP32[$trm + 144 >> 2] = HEAP32[$trm + 68 >> 2]; //@line 82062
    return;
   } else if (($key | 0) == 22) {
    $45 = HEAP32[$trm + 8 >> 2] | 0; //@line 82068
    if (($45 | 0) == 0) {
     return;
    }
    FUNCTION_TABLE_iiii[$45 & 127](HEAP32[$trm + 4 >> 2] | 0, 56976, 53784) | 0; //@line 82077
    return;
   } else if (($key | 0) == 65) {
    $92 = $trm + 40 | 0; //@line 82082
    $93 = HEAP32[$92 >> 2] | 0; //@line 82083
    do {
     if (($93 | 0) != 0) {
      $95 = $trm | 0; //@line 82088
      $96 = HEAP32[$95 >> 2] | 0; //@line 82089
      FUNCTION_TABLE_iiii[$93 & 127]($96, 39120, 62840) | 0; //@line 82090
      $_pre_i = HEAP32[$92 >> 2] | 0; //@line 82091
      if (($_pre_i | 0) == 0) {
       break;
      }
      $100 = HEAP32[$95 >> 2] | 0; //@line 82097
      FUNCTION_TABLE_iiii[$_pre_i & 127]($100, 33232, 31608) | 0; //@line 82098
     }
    } while (0);
    $103 = HEAP32[$trm + 8 >> 2] | 0; //@line 82103
    if (($103 | 0) == 0) {
     return;
    }
    FUNCTION_TABLE_iiii[$103 & 127](HEAP32[$trm + 4 >> 2] | 0, 50368, 57824) | 0; //@line 82112
    return;
   } else if (($key | 0) == 41) {
    $111 = HEAP32[$trm + 8 >> 2] | 0; //@line 82118
    if (($111 | 0) == 0) {
     return;
    }
    FUNCTION_TABLE_iiii[$111 & 127](HEAP32[$trm + 4 >> 2] | 0, 49408, 62840) | 0; //@line 82127
    return;
   } else {
    break;
   }
  }
 } while (0);
 $192 = HEAP32[$trm + 16 >> 2] | 0; //@line 82137
 if (($192 | 0) == 0) {
  return;
 }
 FUNCTION_TABLE_viii[$192 & 63](HEAP32[$trm + 12 >> 2] | 0, $event, $key); //@line 82146
 return;
}
function _trm_set_mouse($trm, $dx, $dy, $but) {
 $trm = $trm | 0;
 $dx = $dx | 0;
 $dy = $dy | 0;
 $but = $but | 0;
 var $3 = 0, $4 = 0, $6 = 0, $8 = 0, $9 = 0, $14 = 0, $15 = 0, $17 = 0, $19 = 0, $20 = 0, $24 = 0;
 $3 = Math_imul(HEAP32[$trm + 100 >> 2] | 0, $dx) | 0; //@line 82166
 $4 = $trm + 108 | 0; //@line 82167
 $6 = $3 + (HEAP32[$4 >> 2] | 0) | 0; //@line 82169
 $8 = HEAP32[$trm + 104 >> 2] | 0; //@line 82171
 $9 = ($6 | 0) / ($8 | 0) | 0; //@line 82172
 HEAP32[$4 >> 2] = $6 - (Math_imul($9, $8) | 0); //@line 82175
 $14 = Math_imul(HEAP32[$trm + 112 >> 2] | 0, $dy) | 0; //@line 82178
 $15 = $trm + 120 | 0; //@line 82179
 $17 = $14 + (HEAP32[$15 >> 2] | 0) | 0; //@line 82181
 $19 = HEAP32[$trm + 116 >> 2] | 0; //@line 82183
 $20 = ($17 | 0) / ($19 | 0) | 0; //@line 82184
 HEAP32[$15 >> 2] = $17 - (Math_imul($20, $19) | 0); //@line 82187
 $24 = HEAP32[$trm + 24 >> 2] | 0; //@line 82189
 if (($24 | 0) == 0) {
  return;
 }
 FUNCTION_TABLE_viiii[$24 & 7](HEAP32[$trm + 20 >> 2] | 0, $9, $20, $but); //@line 82198
 return;
}
function _trm_get_scale($trm, $w, $h, $fx, $fy) {
 $trm = $trm | 0;
 $w = $w | 0;
 $h = $h | 0;
 $fx = $fx | 0;
 $fy = $fy | 0;
 var $2 = 0, $3 = 0, $f_0 = 0, $8 = 0, $12 = 0, $14 = 0, $17 = 0, $18 = 0, $19 = 0, $22 = 0, $23 = 0, $27 = 0, $28 = 0, $30 = 0, $32 = 0, $33 = 0, $35 = 0, $37 = 0, $38 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $_lcssa = 0, $w2_0_lcssa = 0, $53 = 0;
 $2 = HEAP32[$trm + 92 >> 2] | 0; //@line 82221
 $3 = $trm + 96 | 0; //@line 82222
 $f_0 = 1; //@line 82224
 while (1) {
  if ((Math_imul($f_0, $w) | 0) >>> 0 >= $2 >>> 0) {
   break;
  }
  $8 = Math_imul($f_0, $h) | 0; //@line 82233
  if ($8 >>> 0 < (HEAP32[$3 >> 2] | 0) >>> 0) {
   $f_0 = $f_0 + 1 | 0; //@line 82238
  } else {
   break;
  }
 }
 $12 = $trm + 80 | 0; //@line 82243
 $14 = $f_0 - 1 | 0; //@line 82245
 HEAP32[$fx >> 2] = $14 + (HEAP32[$12 >> 2] | 0); //@line 82247
 $17 = $14 + (HEAP32[$12 >> 2] | 0) | 0; //@line 82249
 HEAP32[$fy >> 2] = $17; //@line 82250
 $18 = $trm + 84 | 0; //@line 82251
 $19 = HEAP32[$18 >> 2] | 0; //@line 82252
 if (($19 | 0) == 0) {
  return;
 }
 $22 = $trm + 88 | 0; //@line 82259
 $23 = HEAP32[$22 >> 2] | 0; //@line 82260
 if (($23 | 0) == 0) {
  return;
 }
 $27 = Math_imul(HEAP32[$fx >> 2] | 0, $w) | 0; //@line 82268
 $28 = Math_imul($17, $h) | 0; //@line 82269
 $30 = ((Math_imul($28, $19) | 0) >>> 0) / ($23 >>> 0) | 0; //@line 82271
 $32 = ((Math_imul($27, $23) | 0) >>> 0) / ($19 >>> 0) | 0; //@line 82273
 $33 = $28 + $h | 0; //@line 82274
 if ($33 >>> 0 <= $32 >>> 0) {
  $38 = $33;
  $37 = $17;
  do {
   $37 = $37 + 1 | 0; //@line 82282
   $38 = $38 + $h | 0; //@line 82283
  } while ($38 >>> 0 <= $32 >>> 0);
  HEAP32[$fy >> 2] = $37; //@line 82292
 }
 $35 = $27 + $w | 0; //@line 82295
 if ($35 >>> 0 > $30 >>> 0) {
  $w2_0_lcssa = $27;
  $_lcssa = $35;
 } else {
  $44 = $35;
  $43 = HEAP32[$fx >> 2] | 0;
  while (1) {
   $45 = $43 + 1 | 0; //@line 82307
   $46 = $44 + $w | 0; //@line 82308
   if ($46 >>> 0 > $30 >>> 0) {
    break;
   } else {
    $44 = $46;
    $43 = $45;
   }
  }
  HEAP32[$fx >> 2] = $45; //@line 82317
  $w2_0_lcssa = $44;
  $_lcssa = $46;
 }
 if ($w2_0_lcssa >>> 0 >= $30 >>> 0) {
  return;
 }
 $53 = Math_imul(HEAP32[$22 >> 2] | 0, $_lcssa - $30 | 0) | 0; //@line 82331
 if ($53 >>> 0 >= (Math_imul(HEAP32[$18 >> 2] | 0, $30 - $w2_0_lcssa | 0) | 0) >>> 0) {
  return;
 }
 HEAP32[$fx >> 2] = (HEAP32[$fx >> 2] | 0) + 1; //@line 82343
 return;
}
function _trm_scale($trm, $src, $w, $h, $fx, $fy) {
 $trm = $trm | 0;
 $src = $src | 0;
 $w = $w | 0;
 $h = $h | 0;
 $fx = $fx | 0;
 $fy = $fy | 0;
 var $1 = 0, $4 = 0, $7 = 0, $8 = 0, $11 = 0, $12 = 0, $14 = 0, $_0_i31 = 0, $19 = 0, $22 = 0, $25 = 0, $_023_us_pn_i = 0, $i_019_us_i = 0, $_121_us_i = 0, $28 = 0, $y_024_us_i = 0, $_023_us_i = 0, $_01722_us_i = 0, $y_024_i = 0, $_023_i = 0, $_01722_i = 0, $31 = 0, $36 = 0, $39 = 0, $40 = 0, $41 = 0, $scevgep61_sum_i = 0, $_2_lcssa_us_i = 0, $43 = 0, $_233_us_i = 0, $i_032_us_i = 0, $45 = 0, $47 = 0, $x_030_us_i26 = 0, $_129_us_i27 = 0, $_12728_us_i = 0, $51 = 0, $54 = 0, $65 = 0, $scevgep_i28 = 0, $scevgep61_i = 0, $y_038_us_i = 0, $_037_us_i = 0, $_02636_us_i = 0, $67 = 0, $_233_us45_i = 0, $i_032_us46_i = 0, $70 = 0, $72 = 0, $y_038_us41_i = 0, $75 = 0, $76 = 0, $78 = 0, $79 = 0, $80 = 0, $81 = 0, $84 = 0, $85 = 0, $86 = 0, $y_040_i = 0, $_039_i = 0, $_02238_i = 0, $89 = 0, $_225_us_i = 0, $i_024_us_i = 0, $98 = 0, $x_030_us_i = 0, $_129_us_i = 0, $_12327_us_i = 0, $100 = 0, $101 = 0, $split31_i = 0, $_1_lcssa_i = 0, $_123_lcssa_i = 0, $_334_i = 0, $j_033_i = 0, $102 = 0, $104 = 0, $_3_lcssa_i = 0, $107 = 0, $_0 = 0;
 $1 = ($fx | 0) == 1; //@line 82377
 if ($1 & ($fy | 0) == 1) {
  $_0 = $src; //@line 82382
  return $_0 | 0; //@line 82385
 }
 $4 = Math_imul($fx, $w) | 0; //@line 82387
 $7 = Math_imul(Math_imul($h * 3 | 0, $4) | 0, $fy) | 0; //@line 82390
 $8 = $trm + 124 | 0; //@line 82391
 $11 = $trm + 128 | 0; //@line 82394
 $12 = HEAP32[$11 >> 2] | 0; //@line 82395
 do {
  if ($7 >>> 0 > (HEAP32[$8 >> 2] | 0) >>> 0) {
   $14 = _realloc($12, $7) | 0; //@line 82399
   if (($14 | 0) == 0) {
    $_0 = 0; //@line 82403
    return $_0 | 0; //@line 82406
   } else {
    HEAP32[$11 >> 2] = $14; //@line 82408
    HEAP32[$8 >> 2] = $7; //@line 82409
    $_0_i31 = $14; //@line 82411
    break;
   }
  } else {
   if (($12 | 0) == 0) {
    $_0 = 0; //@line 82418
   } else {
    $_0_i31 = $12; //@line 82420
    break;
   }
   return $_0 | 0; //@line 82425
  }
 } while (0);
 if ($1) {
  $19 = $w * 3 | 0; //@line 82431
  if (($h | 0) == 0) {
   $_0 = $_0_i31; //@line 82435
   return $_0 | 0; //@line 82438
  }
  if ($fy >>> 0 <= 1) {
   $_01722_i = $src;
   $_023_i = $_0_i31;
   $y_024_i = 0;
   while (1) {
    _memcpy($_023_i | 0, $_01722_i | 0, $19) | 0; //@line 82447
    $31 = $y_024_i + 1 | 0; //@line 82450
    if ($31 >>> 0 < $h >>> 0) {
     $_01722_i = $_01722_i + $19 | 0;
     $_023_i = $_023_i + $19 | 0;
     $y_024_i = $31;
    } else {
     $_0 = $_0_i31; //@line 82456
     break;
    }
   }
   return $_0 | 0; //@line 82462
  }
  $22 = Math_imul($19, $fy) | 0; //@line 82464
  $_01722_us_i = $src;
  $_023_us_i = $_0_i31;
  $y_024_us_i = 0;
  while (1) {
   _memcpy($_023_us_i | 0, $_01722_us_i | 0, $19) | 0; //@line 82471
   $i_019_us_i = 1;
   $_023_us_pn_i = $_023_us_i;
   while (1) {
    $_121_us_i = $_023_us_pn_i + $19 | 0; //@line 82477
    _memcpy($_121_us_i | 0, $_023_us_pn_i | 0, $19) | 0; //@line 82478
    $28 = $i_019_us_i + 1 | 0; //@line 82479
    if ($28 >>> 0 < $fy >>> 0) {
     $i_019_us_i = $28;
     $_023_us_pn_i = $_121_us_i;
    } else {
     break;
    }
   }
   $25 = $y_024_us_i + 1 | 0; //@line 82490
   if ($25 >>> 0 < $h >>> 0) {
    $_01722_us_i = $_01722_us_i + $19 | 0;
    $_023_us_i = $_023_us_i + $22 | 0;
    $y_024_us_i = $25;
   } else {
    $_0 = $_0_i31; //@line 82496
    break;
   }
  }
  return $_0 | 0; //@line 82502
 }
 if (($fx | 0) != 2) {
  $75 = $w * 3 | 0; //@line 82507
  $76 = Math_imul($75, $fx) | 0; //@line 82508
  if (($h | 0) == 0) {
   $_0 = $_0_i31; //@line 82512
   return $_0 | 0; //@line 82515
  }
  $78 = ($w | 0) == 0; //@line 82517
  $79 = ($fx | 0) == 0; //@line 82518
  $80 = $fy >>> 0 > 1; //@line 82519
  $81 = -$76 | 0; //@line 82520
  $84 = Math_imul(($fy * 3 | 0) - 3 | 0, $4) | 0; //@line 82523
  $85 = $fx * 3 | 0; //@line 82524
  $86 = $4 * 3 | 0; //@line 82525
  $_02238_i = $src;
  $_039_i = $_0_i31;
  $y_040_i = 0;
  while (1) {
   if ($78) {
    $_123_lcssa_i = $_02238_i;
    $_1_lcssa_i = $_039_i;
   } else {
    if ($79) {
     $split31_i = $_039_i; //@line 82537
    } else {
     $_12327_us_i = $_02238_i;
     $_129_us_i = $_039_i;
     $x_030_us_i = 0;
     while (1) {
      $100 = $_12327_us_i + 1 | 0; //@line 82544
      $101 = $_12327_us_i + 2 | 0; //@line 82545
      $i_024_us_i = 0;
      $_225_us_i = $_129_us_i;
      while (1) {
       HEAP8[$_225_us_i] = HEAP8[$_12327_us_i] | 0; //@line 82552
       HEAP8[$_225_us_i + 1 | 0] = HEAP8[$100] | 0; //@line 82555
       HEAP8[$_225_us_i + 2 | 0] = HEAP8[$101] | 0; //@line 82558
       $98 = $i_024_us_i + 1 | 0; //@line 82560
       if ($98 >>> 0 < $fx >>> 0) {
        $i_024_us_i = $98;
        $_225_us_i = $_225_us_i + 3 | 0;
       } else {
        break;
       }
      }
      $89 = $x_030_us_i + 1 | 0; //@line 82571
      if ($89 >>> 0 < $w >>> 0) {
       $_12327_us_i = $_12327_us_i + 3 | 0;
       $_129_us_i = $_129_us_i + $85 | 0;
       $x_030_us_i = $89;
      } else {
       break;
      }
     }
     $split31_i = $_039_i + $86 | 0; //@line 82581
    }
    $_123_lcssa_i = $_02238_i + $75 | 0;
    $_1_lcssa_i = $split31_i;
   }
   if ($80) {
    $j_033_i = 1;
    $_334_i = $_1_lcssa_i;
    while (1) {
     $102 = $_334_i + $81 | 0; //@line 82596
     _memcpy($_334_i | 0, $102 | 0, $76) | 0; //@line 82597
     $104 = $j_033_i + 1 | 0; //@line 82599
     if ($104 >>> 0 < $fy >>> 0) {
      $j_033_i = $104;
      $_334_i = $_334_i + $76 | 0;
     } else {
      break;
     }
    }
    $_3_lcssa_i = $_1_lcssa_i + $84 | 0; //@line 82610
   } else {
    $_3_lcssa_i = $_1_lcssa_i; //@line 82612
   }
   $107 = $y_040_i + 1 | 0; //@line 82615
   if ($107 >>> 0 < $h >>> 0) {
    $_02238_i = $_123_lcssa_i;
    $_039_i = $_3_lcssa_i;
    $y_040_i = $107;
   } else {
    $_0 = $_0_i31; //@line 82621
    break;
   }
  }
  return $_0 | 0; //@line 82627
 }
 $36 = $w * 6 | 0; //@line 82629
 if (($h | 0) == 0) {
  $_0 = $_0_i31; //@line 82633
  return $_0 | 0; //@line 82636
 }
 $39 = $fy >>> 0 > 1; //@line 82639
 $40 = -$36 | 0; //@line 82640
 if (($w | 0) == 0) {
  if ($39) {
   $y_038_us41_i = 0; //@line 82643
  } else {
   $_0 = $_0_i31; //@line 82645
   return $_0 | 0; //@line 82648
  }
  while (1) {
   $i_032_us46_i = 1;
   $_233_us45_i = $_0_i31;
   while (1) {
    $70 = $_233_us45_i + $40 | 0; //@line 82657
    _memcpy($_233_us45_i | 0, $70 | 0, $36) | 0; //@line 82658
    $72 = $i_032_us46_i + 1 | 0; //@line 82660
    if ($72 >>> 0 < $fy >>> 0) {
     $i_032_us46_i = $72;
     $_233_us45_i = $_233_us45_i + $36 | 0;
    } else {
     break;
    }
   }
   $67 = $y_038_us41_i + 1 | 0; //@line 82669
   if ($67 >>> 0 < $h >>> 0) {
    $y_038_us41_i = $67; //@line 82673
   } else {
    $_0 = $_0_i31; //@line 82675
    break;
   }
  }
  return $_0 | 0; //@line 82681
 }
 $41 = $w * 3 | 0; //@line 82683
 $scevgep61_sum_i = Math_imul($36, $fy) | 0; //@line 82684
 $_02636_us_i = $src;
 $_037_us_i = $_0_i31;
 $y_038_us_i = 0;
 while (1) {
  $_12728_us_i = $_02636_us_i;
  $_129_us_i27 = $_037_us_i;
  $x_030_us_i26 = 0;
  while (1) {
   HEAP8[$_129_us_i27] = HEAP8[$_12728_us_i] | 0; //@line 82698
   $51 = $_12728_us_i + 1 | 0; //@line 82699
   HEAP8[$_129_us_i27 + 1 | 0] = HEAP8[$51] | 0; //@line 82702
   $54 = $_12728_us_i + 2 | 0; //@line 82703
   HEAP8[$_129_us_i27 + 2 | 0] = HEAP8[$54] | 0; //@line 82706
   HEAP8[$_129_us_i27 + 3 | 0] = HEAP8[$_12728_us_i] | 0; //@line 82709
   HEAP8[$_129_us_i27 + 4 | 0] = HEAP8[$51] | 0; //@line 82712
   HEAP8[$_129_us_i27 + 5 | 0] = HEAP8[$54] | 0; //@line 82715
   $65 = $x_030_us_i26 + 1 | 0; //@line 82718
   if ($65 >>> 0 < $w >>> 0) {
    $_12728_us_i = $_12728_us_i + 3 | 0;
    $_129_us_i27 = $_129_us_i27 + 6 | 0;
    $x_030_us_i26 = $65;
   } else {
    break;
   }
  }
  $scevgep_i28 = $_02636_us_i + $41 | 0; //@line 82727
  $scevgep61_i = $_037_us_i + $36 | 0; //@line 82728
  if ($39) {
   $i_032_us_i = 1;
   $_233_us_i = $scevgep61_i;
   while (1) {
    $45 = $_233_us_i + $40 | 0; //@line 82735
    _memcpy($_233_us_i | 0, $45 | 0, $36) | 0; //@line 82736
    $47 = $i_032_us_i + 1 | 0; //@line 82738
    if ($47 >>> 0 < $fy >>> 0) {
     $i_032_us_i = $47;
     $_233_us_i = $_233_us_i + $36 | 0;
    } else {
     break;
    }
   }
   $_2_lcssa_us_i = $_037_us_i + $scevgep61_sum_i | 0; //@line 82749
  } else {
   $_2_lcssa_us_i = $scevgep61_i; //@line 82751
  }
  $43 = $y_038_us_i + 1 | 0; //@line 82754
  if ($43 >>> 0 < $h >>> 0) {
   $_02636_us_i = $scevgep_i28;
   $_037_us_i = $_2_lcssa_us_i;
   $y_038_us_i = $43;
  } else {
   $_0 = $_0_i31; //@line 82760
   break;
  }
 }
 return $_0 | 0; //@line 82766
}
function _sdl_new($sct) {
 $sct = $sct | 0;
 var $sdlkey_i_i = 0, $pcekey_i_i = 0, $fs_i = 0, $rep_i = 0, $1 = 0, $6 = 0, $26 = 0, $28 = 0, $46 = 0, $48 = 0, $49 = 0, $50 = 0, $52 = 0, $54 = 0, $_pre_i_pre_i = 0, $55 = 0, $58 = 0, $59 = 0, $60$1 = 0, $61 = 0, $65 = 0, $67 = 0, $68 = 0, $70 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $i_0_i_i_i = 0, $93 = 0, $94 = 0, $97 = 0, $_0 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 82788
 STACKTOP = STACKTOP + 32 | 0; //@line 82788
 $sdlkey_i_i = sp | 0; //@line 82789
 $pcekey_i_i = sp + 8 | 0; //@line 82790
 $fs_i = sp + 16 | 0; //@line 82791
 $rep_i = sp + 24 | 0; //@line 82792
 $1 = _malloc(208) | 0; //@line 82793
 if (($1 | 0) == 0) {
  $_0 = 0; //@line 82797
  STACKTOP = sp; //@line 82799
  return $_0 | 0; //@line 82800
 }
 $6 = $1; //@line 82804
 _trm_init($6, $1); //@line 82805
 HEAP32[$1 + 28 >> 2] = 56; //@line 82808
 HEAP32[$1 + 32 >> 2] = 52; //@line 82811
 HEAP32[$1 + 36 >> 2] = 6; //@line 82814
 HEAP32[$1 + 40 >> 2] = 28; //@line 82817
 HEAP32[$1 + 44 >> 2] = 330; //@line 82820
 HEAP32[$1 + 48 >> 2] = 364; //@line 82823
 _memset($1 + 152 | 0, 0, 16); //@line 82825
 _ini_get_bool($sct, 48296, $fs_i, 0) | 0; //@line 82826
 HEAP8[$1 + 168 | 0] = (HEAP32[$fs_i >> 2] | 0) != 0 | 0; //@line 82831
 $26 = $1 + 180 | 0; //@line 82833
 _ini_get_uint16($sct, 55592, $26, 0) | 0; //@line 82834
 $28 = HEAP32[$26 >> 2] | 0; //@line 82835
 HEAP32[$1 + 184 >> 2] = $28; //@line 82838
 HEAP32[$1 + 188 >> 2] = $28; //@line 82841
 HEAP32[$1 + 192 >> 2] = $28; //@line 82844
 HEAP8[$1 + 196 | 0] = 0; //@line 82846
 HEAP32[$1 + 172 >> 2] = 0; //@line 82849
 HEAP32[$1 + 176 >> 2] = 0; //@line 82852
 _ini_get_bool($sct, 49272, $rep_i, 0) | 0; //@line 82853
 HEAP8[$1 + 197 | 0] = (HEAP32[$rep_i >> 2] | 0) != 0 | 0; //@line 82858
 $46 = $1 + 200 | 0; //@line 82860
 HEAP32[$46 >> 2] = 0; //@line 82861
 $48 = $1 + 204 | 0; //@line 82863
 $49 = _malloc(888) | 0; //@line 82864
 $50 = $49; //@line 82865
 HEAP32[$48 >> 2] = $50; //@line 82866
 if (($49 | 0) != 0) {
  $52 = $49; //@line 82870
  HEAP32[$52 >> 2] = 27; //@line 82874
  HEAP32[$52 + 4 >> 2] = 1; //@line 82876
  $54 = $49 + 8 | 0; //@line 82878
  HEAP32[$54 >> 2] = 1082; //@line 82882
  HEAP32[$54 + 4 >> 2] = 2; //@line 82884
  $55 = 2;
  $_pre_i_pre_i = $50;
  while (1) {
   $58 = 9952 + ($55 << 3) | 0; //@line 82892
   $59 = $_pre_i_pre_i + ($55 << 3) | 0; //@line 82893
   $60$1 = HEAP32[$58 + 4 >> 2] | 0; //@line 82897
   HEAP32[$59 >> 2] = HEAP32[$58 >> 2]; //@line 82899
   HEAP32[$59 + 4 >> 2] = $60$1; //@line 82901
   $61 = $55 + 1 | 0; //@line 82902
   if ($61 >>> 0 >= 111) {
    break;
   }
   $55 = $61;
   $_pre_i_pre_i = HEAP32[$48 >> 2] | 0;
  }
  HEAP32[$46 >> 2] = 111; //@line 82912
 }
 $65 = _ini_next_val($sct, 0, 45584) | 0; //@line 82917
 if (($65 | 0) == 0) {
  $_0 = $6; //@line 82921
  STACKTOP = sp; //@line 82923
  return $_0 | 0; //@line 82924
 } else {
  $67 = $65; //@line 82926
 }
 while (1) {
  $68 = _ini_val_get_str($67) | 0; //@line 82930
  do {
   if (($68 | 0) != 0) {
    if ((_pce_key_get_map($68, $sdlkey_i_i, $pcekey_i_i) | 0) != 0) {
     break;
    }
    $76 = HEAP32[$sdlkey_i_i >> 2] | 0; //@line 82941
    $77 = HEAP32[$pcekey_i_i >> 2] | 0; //@line 82942
    $78 = HEAP32[$46 >> 2] | 0; //@line 82943
    $79 = HEAP32[$48 >> 2] | 0; //@line 82944
    $i_0_i_i_i = 0; //@line 82946
    while (1) {
     if ($i_0_i_i_i >>> 0 >= $78 >>> 0) {
      break;
     }
     if ((HEAP32[$79 + ($i_0_i_i_i << 3) >> 2] | 0) == ($76 | 0)) {
      label = 19882; //@line 82960
      break;
     } else {
      $i_0_i_i_i = $i_0_i_i_i + 1 | 0; //@line 82963
     }
    }
    if ((label | 0) == 19882) {
     label = 0; //@line 82967
     HEAP32[$79 + ($i_0_i_i_i << 3) + 4 >> 2] = $77; //@line 82969
     break;
    }
    $93 = _realloc($79, ($78 << 3) + 8 | 0) | 0; //@line 82976
    $94 = $93; //@line 82977
    if (($93 | 0) == 0) {
     break;
    }
    $97 = HEAP32[$46 >> 2] | 0; //@line 82983
    HEAP32[$94 + ($97 << 3) >> 2] = $76; //@line 82985
    HEAP32[$94 + ($97 << 3) + 4 >> 2] = $77; //@line 82987
    HEAP32[$48 >> 2] = $94; //@line 82988
    HEAP32[$46 >> 2] = $97 + 1; //@line 82990
   }
  } while (0);
  $70 = _ini_next_val($sct, $67, 45584) | 0; //@line 82994
  if (($70 | 0) == 0) {
   $_0 = $6; //@line 82998
   break;
  } else {
   $67 = $70; //@line 83001
  }
 }
 STACKTOP = sp; //@line 83005
 return $_0 | 0; //@line 83006
}
function _sdl_del($sdl) {
 $sdl = $sdl | 0;
 _free($sdl); //@line 83016
 return;
}
function _sdl_open($sdl, $w, $h) {
 $sdl = $sdl | 0;
 $w = $w | 0;
 $h = $h | 0;
 var $fx = 0, $fy = 0, $or_cond = 0, $_016 = 0, $_015 = 0, $8 = 0, $13 = 0, $29 = 0, $32 = 0, $_0 = 0, sp = 0;
 sp = STACKTOP; //@line 83032
 STACKTOP = STACKTOP + 16 | 0; //@line 83032
 $fx = sp | 0; //@line 83033
 $fy = sp + 8 | 0; //@line 83034
 $or_cond = ($w | 0) == 0 | ($h | 0) == 0; //@line 83037
 $_016 = $or_cond ? 480 : $h; //@line 83038
 $_015 = $or_cond ? 640 : $w; //@line 83039
 _trm_get_scale($sdl | 0, $_015, $_016, $fx, $fy); //@line 83041
 $8 = (HEAP32[$sdl + 188 >> 2] | 0) + (HEAP32[$sdl + 180 >> 2] | 0) | 0; //@line 83046
 $13 = (HEAP32[$sdl + 192 >> 2] | 0) + (HEAP32[$sdl + 184 >> 2] | 0) | 0; //@line 83051
 do {
  if ((_SDL_WasInit(32) | 0) == 0) {
   if ((_SDL_InitSubSystem(32) | 0) < 0) {
    $_0 = 1; //@line 83061
   } else {
    break;
   }
   STACKTOP = sp; //@line 83066
   return $_0 | 0; //@line 83067
  }
 } while (0);
 HEAP32[$sdl + 172 >> 2] = HEAPU8[(HEAP32[(_SDL_GetVideoInfo() | 0) + 8 >> 2] | 0) + 9 | 0] | 0; //@line 83077
 HEAP32[$sdl + 176 >> 2] = 0; //@line 83079
 _SDL_WM_SetCaption(52256, 52256); //@line 83080
 _SDL_EnableKeyRepeat(500, 30) | 0; //@line 83081
 $29;
 $32 = $8 + (Math_imul(HEAP32[$fx >> 2] | 0, $_015) | 0) | 0; //@line 83085
 _sdl_set_window_size($sdl, $32, $13 + (Math_imul(HEAP32[$fy >> 2] | 0, $_016) | 0) | 0) | 0; //@line 83089
 $_0 = 0; //@line 83091
 STACKTOP = sp; //@line 83093
 return $_0 | 0; //@line 83094
}
function _sdl_close($sdl) {
 $sdl = $sdl | 0;
 var $3 = 0, $4 = 0, $5 = 0;
 HEAP8[$sdl + 196 | 0] = 0; //@line 83104
 _SDL_ShowCursor(1) | 0; //@line 83105
 $3;
 $4 = $sdl + 152 | 0; //@line 83107
 $5 = HEAP32[$4 >> 2] | 0; //@line 83108
 if (($5 | 0) == 0) {
  return 0; //@line 83113
 }
 _SDL_FreeSurface($5 | 0); //@line 83115
 HEAP32[$4 >> 2] = 0; //@line 83116
 return 0; //@line 83119
}
function _sdl_set_msg_trm($sdl, $msg, $val) {
 $sdl = $sdl | 0;
 $msg = $msg | 0;
 $val = $val | 0;
 var $_val = 0, $7 = 0, $14 = 0, $23 = 0, $39 = 0, $41 = 0, $43 = 0, $54 = 0, $55 = 0, $60 = 0, $_0 = 0;
 $_val = ($val | 0) == 0 ? 62832 : $val; //@line 83137
 if ((_strcmp($msg | 0, 57808) | 0) == 0) {
  HEAP8[$sdl + 196 | 0] = 1; //@line 83143
  _SDL_ShowCursor(0) | 0; //@line 83144
  $7;
  $_0 = 0; //@line 83147
  return $_0 | 0; //@line 83150
 }
 if ((_strcmp($msg | 0, 56960) | 0) == 0) {
  HEAP8[$sdl + 196 | 0] = 0; //@line 83157
  _SDL_ShowCursor(1) | 0; //@line 83158
  $14;
  $_0 = 0; //@line 83161
  return $_0 | 0; //@line 83164
 }
 if ((_strcmp($msg | 0, 55808) | 0) == 0) {
  _SDL_WM_SetCaption($_val | 0, $_val | 0); //@line 83170
  $_0 = 0; //@line 83172
  return $_0 | 0; //@line 83175
 }
 if ((_strcmp($msg | 0, 55152) | 0) == 0) {
  $23 = _strtoul($_val | 0, 0, 0) | 0; //@line 83181
  HEAP32[$sdl + 180 >> 2] = $23; //@line 83183
  HEAP32[$sdl + 188 >> 2] = $23; //@line 83185
  _sdl_update($sdl); //@line 83186
  $_0 = 0; //@line 83188
  return $_0 | 0; //@line 83191
 }
 if ((_strcmp($msg | 0, 54416) | 0) == 0) {
  HEAP32[$sdl + 184 >> 2] = _strtoul($_val | 0, 0, 0) | 0; //@line 83199
  HEAP32[$sdl + 192 >> 2] = HEAP32[$sdl + 180 >> 2]; //@line 83203
  _sdl_update($sdl); //@line 83204
  $_0 = 0; //@line 83206
  return $_0 | 0; //@line 83209
 }
 if ((_strcmp($msg | 0, 53760) | 0) == 0) {
  $39 = $sdl + 168 | 0; //@line 83215
  $41 = (HEAP8[$39] | 0) == 0; //@line 83217
  $43 = HEAP32[$sdl + 152 >> 2] | 0; //@line 83219
  if (($43 | 0) != 0) {
   _SDL_WM_ToggleFullScreen($43 | 0) | 0; //@line 83223
  }
  HEAP8[$39] = $41 & 1; //@line 83227
  $_0 = 0; //@line 83229
  return $_0 | 0; //@line 83232
 }
 if ((_strcmp($msg | 0, 53136) | 0) != 0) {
  $_0 = -1; //@line 83238
  return $_0 | 0; //@line 83241
 }
 $54 = (_strtol($_val | 0, 0, 0) | 0) != 0; //@line 83244
 $55 = $sdl + 168 | 0; //@line 83245
 if (!($54 ^ (HEAP8[$55] | 0) != 0)) {
  $_0 = 0; //@line 83251
  return $_0 | 0; //@line 83254
 }
 $60 = HEAP32[$sdl + 152 >> 2] | 0; //@line 83257
 if (($60 | 0) != 0) {
  _SDL_WM_ToggleFullScreen($60 | 0) | 0; //@line 83261
 }
 HEAP8[$55] = $54 & 1; //@line 83265
 $_0 = 0; //@line 83267
 return $_0 | 0; //@line 83270
}
function _sdl_update($sdl) {
 $sdl = $sdl | 0;
 var $dst = 0, $fx = 0, $fy = 0, $1 = 0, $2 = 0, $4 = 0, $8 = 0, $11 = 0, $12 = 0, $16 = 0, $33 = 0, $34 = 0, $37 = 0, $38 = 0, $41 = 0, $44 = 0, $47 = 0, $53 = 0, $62 = 0, $67 = 0, sp = 0;
 sp = STACKTOP; //@line 83286
 STACKTOP = STACKTOP + 32 | 0; //@line 83286
 $dst = sp | 0; //@line 83287
 $fx = sp + 16 | 0; //@line 83288
 $fy = sp + 24 | 0; //@line 83289
 $1 = $sdl | 0; //@line 83290
 $2 = $sdl + 64 | 0; //@line 83291
 $4 = $sdl + 68 | 0; //@line 83293
 _trm_get_scale($1, HEAP32[$2 >> 2] | 0, HEAP32[$4 >> 2] | 0, $fx, $fy); //@line 83295
 $8 = Math_imul(HEAP32[$2 >> 2] | 0, HEAP32[$fx >> 2] | 0) | 0; //@line 83298
 $11 = Math_imul(HEAP32[$4 >> 2] | 0, HEAP32[$fy >> 2] | 0) | 0; //@line 83301
 $12 = $sdl + 180 | 0; //@line 83302
 $16 = $sdl + 184 | 0; //@line 83306
 if ((_sdl_set_window_size($sdl, (HEAP32[$12 >> 2] | 0) + $8 + (HEAP32[$sdl + 188 >> 2] | 0) | 0, (HEAP32[$16 >> 2] | 0) + $11 + (HEAP32[$sdl + 192 >> 2] | 0) | 0) | 0) != 0) {
  STACKTOP = sp; //@line 83318
  return;
 }
 $33 = _trm_scale($1, HEAP32[$sdl + 76 >> 2] | 0, HEAP32[$2 >> 2] | 0, HEAP32[$4 >> 2] | 0, HEAP32[$fx >> 2] | 0, HEAP32[$fy >> 2] | 0) | 0; //@line 83327
 $34 = HEAP32[$fx >> 2] | 0; //@line 83328
 $37 = Math_imul(HEAP32[$sdl + 132 >> 2] | 0, $34) | 0; //@line 83331
 $38 = HEAP32[$fy >> 2] | 0; //@line 83332
 $41 = Math_imul(HEAP32[$sdl + 136 >> 2] | 0, $38) | 0; //@line 83335
 $44 = Math_imul(HEAP32[$sdl + 140 >> 2] | 0, $34) | 0; //@line 83338
 $47 = Math_imul(HEAP32[$sdl + 144 >> 2] | 0, $38) | 0; //@line 83341
 $53 = _SDL_CreateRGBSurfaceFrom($33 + (((Math_imul($41, $8) | 0) + $37 | 0) * 3 | 0) | 0, $44 | 0, $47 | 0, 24, $8 * 3 | 0 | 0, 255, 65280, 16711680, 0) | 0; //@line 83347
 HEAP32[$dst >> 2] = (HEAP32[$12 >> 2] | 0) + $37; //@line 83351
 HEAP32[$dst + 4 >> 2] = (HEAP32[$16 >> 2] | 0) + $41; //@line 83355
 if (($53 | 0) == 0) {
  STACKTOP = sp; //@line 83359
  return;
 }
 $62 = $sdl + 152 | 0; //@line 83362
 if ((_SDL_UpperBlit($53 | 0, 0, HEAP32[$62 >> 2] | 0, $dst | 0) | 0) != 0) {
  $67 = HEAP32[_stderr >> 2] | 0; //@line 83368
  _fwrite(31568, 16, 1, $67 | 0) | 0; //@line 83369
 }
 _SDL_FreeSurface($53 | 0); //@line 83372
 _SDL_Flip(HEAP32[$62 >> 2] | 0) | 0; //@line 83374
 STACKTOP = sp; //@line 83376
 return;
}
function _sdl_check($sdl) {
 $sdl = $sdl | 0;
 var $evt = 0, $3 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $17 = 0, $18 = 0, $19 = 0, $21 = 0, $23 = 0, $i_019 = 0, $25 = 0, $27 = 0, $34 = 0, $38 = 0, $47 = 0, $i_0_i_i = 0, $52 = 0, $58 = 0, $61 = 0, $67 = 0, $68 = 0, $i_0_i_i8 = 0, $72 = 0, $78 = 0, $85 = 0, $86 = 0, $_0_i = 0, $92 = 0, $100 = 0, $101 = 0, $_0_i14 = 0, $108 = 0, $113 = 0, $119 = 0, $120 = 0, $128 = 0, $129 = 0, $135 = 0, label = 0, sp = 0;
 sp = STACKTOP; //@line 83400
 STACKTOP = STACKTOP + 48 | 0; //@line 83400
 $evt = sp | 0; //@line 83401
 if ((_SDL_PollEvent($evt | 0) | 0) == 0) {
  STACKTOP = sp; //@line 83406
  return;
 }
 $3 = $evt | 0; //@line 83409
 $5 = $evt + 16 | 0; //@line 83411
 $6 = $sdl + 200 | 0; //@line 83412
 $7 = $sdl + 204 | 0; //@line 83413
 $8 = $sdl + 197 | 0; //@line 83414
 $9 = HEAP32[_stderr >> 2] | 0; //@line 83415
 $10 = $sdl | 0; //@line 83416
 $12 = $evt + 20 | 0; //@line 83418
 $13 = $sdl + 196 | 0; //@line 83419
 $14 = $sdl + 168 | 0; //@line 83420
 $15 = $sdl + 152 | 0; //@line 83421
 $17 = $evt + 8 | 0; //@line 83423
 $18 = $sdl + 164 | 0; //@line 83424
 $19 = $sdl + 24 | 0; //@line 83425
 $21 = $evt + 20 | 0; //@line 83427
 $23 = $evt + 24 | 0; //@line 83429
 $i_019 = 0; //@line 83431
 do {
  $25 = HEAP32[$3 >> 2] | 0; //@line 83434
  L25832 : do {
   if (($25 | 0) == 1024) {
    $119 = HEAP32[$21 >> 2] | 0; //@line 83437
    $120 = HEAP32[$23 >> 2] | 0; //@line 83438
    if ((HEAP8[$13] | 0) == 0) {
     break;
    }
    if ((HEAP32[$19 >> 2] | 0) == 0) {
     break;
    }
    $128 = (_SDL_GetMouseState(0, 0) | 0) & 255; //@line 83452
    $129 = $128 & 1; //@line 83453
    _trm_set_mouse($10, $119, $120, ($128 & 4 | 0) == 0 ? $129 : $129 | 2); //@line 83458
   } else if (($25 | 0) == 256) {
    HEAP8[$13] = 0; //@line 83461
    _SDL_ShowCursor(1) | 0; //@line 83462
    $135;
    _trm_set_msg_emu($10, 42112, 39096) | 0; //@line 83464
   } else if (($25 | 0) == 1026) {
    $100 = HEAP8[$17] | 0; //@line 83467
    $101 = $100 & 255; //@line 83468
    if (($101 | 0) == 0) {
     break;
    } else if (($101 | 0) == 2) {
     $_0_i14 = 2; //@line 83472
    } else {
     $_0_i14 = $100 << 24 >> 24 == 3 ? 1 : $101 - 1 | 0; //@line 83478
    }
    $108 = HEAP32[$18 >> 2] & ~(1 << $_0_i14); //@line 83484
    HEAP32[$18 >> 2] = $108; //@line 83485
    if ((HEAP8[$13] | 0) == 0) {
     HEAP8[$13] = 1; //@line 83490
     _SDL_ShowCursor(0) | 0; //@line 83491
     $113;
     break;
    }
    if ((HEAP32[$19 >> 2] | 0) == 0) {
     break;
    }
    _trm_set_mouse($10, 0, 0, $108); //@line 83502
   } else if (($25 | 0) == 1025) {
    $85 = HEAP8[$17] | 0; //@line 83505
    $86 = $85 & 255; //@line 83506
    if (($86 | 0) == 0) {
     break;
    } else if (($86 | 0) == 2) {
     $_0_i = 2; //@line 83510
    } else {
     $_0_i = $85 << 24 >> 24 == 3 ? 1 : $86 - 1 | 0; //@line 83516
    }
    $92 = HEAP32[$18 >> 2] | 1 << $_0_i; //@line 83521
    HEAP32[$18 >> 2] = $92; //@line 83522
    if ((HEAP8[$13] | 0) == 0) {
     break;
    }
    if ((HEAP32[$19 >> 2] | 0) == 0) {
     break;
    }
    _trm_set_mouse($10, 0, 0, $92); //@line 83535
   } else if (($25 | 0) == 768) {
    $27 = HEAP32[$5 >> 2] | 0; //@line 83538
    if (($27 | 0) == 1094) {
     _trm_screenshot($10, 0) | 0; //@line 83540
     break;
    } else if (($27 | 0) == 96) {
     label = 19943; //@line 83544
    }
    do {
     if ((label | 0) == 19943) {
      label = 0; //@line 83548
      if ((HEAP16[$12 >> 1] & 64) == 0) {
       break;
      }
      HEAP8[$13] = 0; //@line 83556
      _SDL_ShowCursor(1) | 0; //@line 83557
      $34;
      if ((HEAP8[$14] | 0) != 0) {
       $38 = HEAP32[$15 >> 2] | 0; //@line 83563
       if (($38 | 0) != 0) {
        _SDL_WM_ToggleFullScreen($38 | 0) | 0; //@line 83567
       }
       HEAP8[$14] = 0; //@line 83570
      }
      _trm_set_msg_emu($10, 36160, 39096) | 0; //@line 83573
      break L25832;
     }
    } while (0);
    $47 = HEAP32[$6 >> 2] | 0; //@line 83578
    $i_0_i_i = 0; //@line 83580
    while (1) {
     if ($i_0_i_i >>> 0 >= $47 >>> 0) {
      label = 19952; //@line 83586
      break;
     }
     $52 = HEAP32[$7 >> 2] | 0; //@line 83589
     if ((HEAP32[$52 + ($i_0_i_i << 3) >> 2] | 0) == ($27 | 0)) {
      break;
     } else {
      $i_0_i_i = $i_0_i_i + 1 | 0; //@line 83598
     }
    }
    if ((label | 0) == 19952) {
     label = 0; //@line 83602
     _fprintf($9 | 0, 33192, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $27, tempInt) | 0) | 0; //@line 83603
     break;
    }
    $58 = HEAP32[$52 + ($i_0_i_i << 3) + 4 >> 2] | 0; //@line 83608
    $61 = ($58 | 0) == 0; //@line 83611
    if ((HEAP8[$8] | 0) != 0 | $61) {
     _fprintf($9 | 0, 33192, (tempInt = STACKTOP, STACKTOP = STACKTOP + 8 | 0, HEAP32[tempInt >> 2] = $27, tempInt) | 0) | 0; //@line 83615
     if ($61) {
      break;
     }
    }
    _trm_set_key($10, 1, $58); //@line 83621
    if (($27 | 0) != 1107) {
     break;
    }
    _trm_set_key($10, 2, $58); //@line 83627
   } else if (($25 | 0) == 769) {
    $67 = HEAP32[$5 >> 2] | 0; //@line 83630
    $68 = HEAP32[$6 >> 2] | 0; //@line 83631
    $i_0_i_i8 = 0; //@line 83633
    while (1) {
     if ($i_0_i_i8 >>> 0 >= $68 >>> 0) {
      break L25832;
     }
     $72 = HEAP32[$7 >> 2] | 0; //@line 83641
     if ((HEAP32[$72 + ($i_0_i_i8 << 3) >> 2] | 0) == ($67 | 0)) {
      break;
     } else {
      $i_0_i_i8 = $i_0_i_i8 + 1 | 0; //@line 83650
     }
    }
    $78 = HEAP32[$72 + ($i_0_i_i8 << 3) + 4 >> 2] | 0; //@line 83654
    if (($67 | 0) == 1094 | ($78 | 0) == 0) {
     break;
    }
    if (($67 | 0) == 1107) {
     _trm_set_key($10, 1, $78); //@line 83665
    }
    _trm_set_key($10, 2, $78); //@line 83668
   }
  } while (0);
  $i_019 = $i_019 + 1 | 0; //@line 83672
 } while ((_SDL_PollEvent($evt | 0) | 0) != 0 & $i_019 >>> 0 < 8);
 STACKTOP = sp; //@line 83684
 return;
}
function _sdl_set_window_size($sdl, $w, $h) {
 $sdl = $sdl | 0;
 $w = $w | 0;
 $h = $h | 0;
 var $1 = 0, $2 = 0, $_ = 0, $18 = 0, $20 = 0, $23 = 0, $26 = 0, $28 = 0, $_0 = 0, label = 0;
 $1 = $sdl + 152 | 0; //@line 83699
 $2 = HEAP32[$1 >> 2] | 0; //@line 83700
 if (($2 | 0) != 0) {
  do {
   if ((HEAP32[$sdl + 156 >> 2] | 0) == ($w | 0)) {
    if ((HEAP32[$sdl + 160 >> 2] | 0) == ($h | 0)) {
     $_0 = 0; //@line 83715
    } else {
     break;
    }
    return $_0 | 0; //@line 83721
   }
  } while (0);
  _SDL_FreeSurface($2 | 0); //@line 83724
 }
 HEAP32[$1 >> 2] = 0; //@line 83727
 $_ = (HEAP8[$sdl + 168 | 0] | 0) == 0 ? 134217729 : 142606337; //@line 83731
 $18 = HEAP32[$sdl + 172 >> 2] | 0; //@line 83733
 if (($18 | 0) == 2) {
  $20 = _SDL_SetVideoMode($w | 0, $h | 0, 16, $_ | 0) | 0; //@line 83735
  HEAP32[$1 >> 2] = $20; //@line 83736
  HEAP32[$sdl + 176 >> 2] = 2; //@line 83738
  $26 = $20; //@line 83740
  label = 19991; //@line 83741
 } else if (($18 | 0) == 4) {
  $23 = _SDL_SetVideoMode($w | 0, $h | 0, 32, $_ | 0) | 0; //@line 83743
  HEAP32[$1 >> 2] = $23; //@line 83744
  HEAP32[$sdl + 176 >> 2] = 4; //@line 83746
  $26 = $23; //@line 83748
  label = 19991; //@line 83749
 } else {
  label = 19992; //@line 83751
 }
 if ((label | 0) == 19991) {
  if (($26 | 0) == 0) {
   label = 19992; //@line 83758
  }
 }
 do {
  if ((label | 0) == 19992) {
   $28 = _SDL_SetVideoMode($w | 0, $h | 0, 16, $_ | 0) | 0; //@line 83763
   HEAP32[$1 >> 2] = $28; //@line 83764
   HEAP32[$sdl + 176 >> 2] = 2; //@line 83766
   if (($28 | 0) == 0) {
    $_0 = 1; //@line 83770
   } else {
    break;
   }
   return $_0 | 0; //@line 83776
  }
 } while (0);
 HEAP32[$sdl + 156 >> 2] = $w; //@line 83780
 HEAP32[$sdl + 160 >> 2] = $h; //@line 83782
 $_0 = 0; //@line 83784
 return $_0 | 0; //@line 83787
}
function _malloc($bytes) {
 $bytes = $bytes | 0;
 var $8 = 0, $9 = 0, $10 = 0, $11 = 0, $17 = 0, $18 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $35 = 0, $40 = 0, $45 = 0, $56 = 0, $59 = 0, $62 = 0, $64 = 0, $65 = 0, $67 = 0, $69 = 0, $71 = 0, $73 = 0, $75 = 0, $77 = 0, $79 = 0, $82 = 0, $83 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $100 = 0, $105 = 0, $106 = 0, $109 = 0, $111 = 0, $117 = 0, $120 = 0, $121 = 0, $122 = 0, $124 = 0, $125 = 0, $126 = 0, $132 = 0, $133 = 0, $_pre_phi = 0, $F4_0 = 0, $145 = 0, $150 = 0, $152 = 0, $153 = 0, $155 = 0, $157 = 0, $159 = 0, $161 = 0, $163 = 0, $165 = 0, $167 = 0, $172 = 0, $rsize_0_i = 0, $v_0_i = 0, $t_0_i = 0, $179 = 0, $183 = 0, $185 = 0, $189 = 0, $190 = 0, $192 = 0, $193 = 0, $196 = 0, $197 = 0, $201 = 0, $203 = 0, $207 = 0, $211 = 0, $215 = 0, $220 = 0, $221 = 0, $224 = 0, $225 = 0, $RP_0_i = 0, $R_0_i = 0, $227 = 0, $228 = 0, $231 = 0, $232 = 0, $R_1_i = 0, $242 = 0, $244 = 0, $258 = 0, $274 = 0, $286 = 0, $300 = 0, $304 = 0, $315 = 0, $318 = 0, $319 = 0, $320 = 0, $322 = 0, $323 = 0, $324 = 0, $330 = 0, $331 = 0, $_pre_phi_i = 0, $F1_0_i = 0, $342 = 0, $348 = 0, $349 = 0, $350 = 0, $353 = 0, $354 = 0, $361 = 0, $362 = 0, $365 = 0, $367 = 0, $370 = 0, $375 = 0, $idx_0_i = 0, $383 = 0, $391 = 0, $rst_0_i = 0, $sizebits_0_i = 0, $t_0_i116 = 0, $rsize_0_i117 = 0, $v_0_i118 = 0, $396 = 0, $397 = 0, $rsize_1_i = 0, $v_1_i = 0, $403 = 0, $406 = 0, $rst_1_i = 0, $t_1_i = 0, $rsize_2_i = 0, $v_2_i = 0, $414 = 0, $417 = 0, $422 = 0, $424 = 0, $425 = 0, $427 = 0, $429 = 0, $431 = 0, $433 = 0, $435 = 0, $437 = 0, $439 = 0, $t_2_ph_i = 0, $v_330_i = 0, $rsize_329_i = 0, $t_228_i = 0, $449 = 0, $450 = 0, $_rsize_3_i = 0, $t_2_v_3_i = 0, $452 = 0, $455 = 0, $v_3_lcssa_i = 0, $rsize_3_lcssa_i = 0, $463 = 0, $464 = 0, $467 = 0, $468 = 0, $472 = 0, $474 = 0, $478 = 0, $482 = 0, $486 = 0, $491 = 0, $492 = 0, $495 = 0, $496 = 0, $RP_0_i119 = 0, $R_0_i120 = 0, $498 = 0, $499 = 0, $502 = 0, $503 = 0, $R_1_i122 = 0, $513 = 0, $515 = 0, $529 = 0, $545 = 0, $557 = 0, $571 = 0, $575 = 0, $586 = 0, $589 = 0, $591 = 0, $592 = 0, $593 = 0, $599 = 0, $600 = 0, $_pre_phi_i128 = 0, $F5_0_i = 0, $612 = 0, $613 = 0, $620 = 0, $621 = 0, $624 = 0, $626 = 0, $629 = 0, $634 = 0, $I7_0_i = 0, $641 = 0, $648 = 0, $649 = 0, $668 = 0, $T_0_i = 0, $K12_0_i = 0, $677 = 0, $678 = 0, $694 = 0, $695 = 0, $697 = 0, $711 = 0, $nb_0 = 0, $714 = 0, $717 = 0, $718 = 0, $721 = 0, $736 = 0, $743 = 0, $746 = 0, $747 = 0, $748 = 0, $762 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $779 = 0, $782 = 0, $783 = 0, $791 = 0, $794 = 0, $sp_0_i_i = 0, $796 = 0, $797 = 0, $800 = 0, $806 = 0, $809 = 0, $812 = 0, $813 = 0, $814 = 0, $ssize_0_i = 0, $824 = 0, $825 = 0, $829 = 0, $835 = 0, $836 = 0, $840 = 0, $843 = 0, $847 = 0, $ssize_1_i = 0, $br_0_i = 0, $tsize_0_i = 0, $tbase_0_i = 0, $849 = 0, $856 = 0, $860 = 0, $ssize_2_i = 0, $tsize_0303639_i = 0, $tsize_1_i = 0, $876 = 0, $877 = 0, $881 = 0, $883 = 0, $_tbase_1_i = 0, $tbase_245_i = 0, $tsize_244_i = 0, $886 = 0, $890 = 0, $893 = 0, $i_02_i_i = 0, $899 = 0, $901 = 0, $908 = 0, $914 = 0, $917 = 0, $sp_067_i = 0, $925 = 0, $926 = 0, $927 = 0, $932 = 0, $939 = 0, $944 = 0, $946 = 0, $947 = 0, $949 = 0, $955 = 0, $958 = 0, $968 = 0, $sp_160_i = 0, $970 = 0, $975 = 0, $982 = 0, $986 = 0, $993 = 0, $996 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $_sum_i21_i = 0, $1009 = 0, $1010 = 0, $1011 = 0, $1019 = 0, $1028 = 0, $_sum2_i23_i = 0, $1037 = 0, $1041 = 0, $1042 = 0, $1047 = 0, $1050 = 0, $1053 = 0, $1076 = 0, $_pre_phi57_i_i = 0, $1081 = 0, $1084 = 0, $1087 = 0, $1092 = 0, $1097 = 0, $1101 = 0, $_sum67_i_i = 0, $1107 = 0, $1108 = 0, $1112 = 0, $1113 = 0, $RP_0_i_i = 0, $R_0_i_i = 0, $1115 = 0, $1116 = 0, $1119 = 0, $1120 = 0, $R_1_i_i = 0, $1132 = 0, $1134 = 0, $1148 = 0, $_sum3233_i_i = 0, $1165 = 0, $1178 = 0, $qsize_0_i_i = 0, $oldfirst_0_i_i = 0, $1194 = 0, $1202 = 0, $1205 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $1215 = 0, $1216 = 0, $_pre_phi_i25_i = 0, $F4_0_i_i = 0, $1228 = 0, $1229 = 0, $1236 = 0, $1237 = 0, $1240 = 0, $1242 = 0, $1245 = 0, $1250 = 0, $I7_0_i_i = 0, $1257 = 0, $1264 = 0, $1265 = 0, $1284 = 0, $T_0_i27_i = 0, $K8_0_i_i = 0, $1293 = 0, $1294 = 0, $1310 = 0, $1311 = 0, $1313 = 0, $1327 = 0, $sp_0_i_i_i = 0, $1330 = 0, $1334 = 0, $1335 = 0, $1341 = 0, $1348 = 0, $1349 = 0, $1353 = 0, $1354 = 0, $1358 = 0, $1364 = 0, $1367 = 0, $1377 = 0, $1380 = 0, $1381 = 0, $1389 = 0, $1392 = 0, $1398 = 0, $1401 = 0, $1403 = 0, $1404 = 0, $1405 = 0, $1411 = 0, $1412 = 0, $_pre_phi_i_i = 0, $F_0_i_i = 0, $1422 = 0, $1423 = 0, $1430 = 0, $1431 = 0, $1434 = 0, $1436 = 0, $1439 = 0, $1444 = 0, $I1_0_i_i = 0, $1451 = 0, $1455 = 0, $1456 = 0, $1471 = 0, $T_0_i_i = 0, $K2_0_i_i = 0, $1480 = 0, $1481 = 0, $1494 = 0, $1495 = 0, $1497 = 0, $1507 = 0, $1510 = 0, $1511 = 0, $1512 = 0, $mem_0 = 0, label = 0;
 do {
  if ($bytes >>> 0 < 245) {
   if ($bytes >>> 0 < 11) {
    $8 = 16; //@line 83980
   } else {
    $8 = $bytes + 11 & -8; //@line 83984
   }
   $9 = $8 >>> 3; //@line 83987
   $10 = HEAP32[15730] | 0; //@line 83988
   $11 = $10 >>> ($9 >>> 0); //@line 83989
   if (($11 & 3 | 0) != 0) {
    $17 = ($11 & 1 ^ 1) + $9 | 0; //@line 83995
    $18 = $17 << 1; //@line 83996
    $20 = 62960 + ($18 << 2) | 0; //@line 83998
    $21 = 62960 + ($18 + 2 << 2) | 0; //@line 84000
    $22 = HEAP32[$21 >> 2] | 0; //@line 84001
    $23 = $22 + 8 | 0; //@line 84002
    $24 = HEAP32[$23 >> 2] | 0; //@line 84003
    do {
     if (($20 | 0) == ($24 | 0)) {
      HEAP32[15730] = $10 & ~(1 << $17); //@line 84010
     } else {
      if ($24 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
       _abort(); //@line 84016
       return 0; //@line 84016
      }
      $35 = $24 + 12 | 0; //@line 84019
      if ((HEAP32[$35 >> 2] | 0) == ($22 | 0)) {
       HEAP32[$35 >> 2] = $20; //@line 84023
       HEAP32[$21 >> 2] = $24; //@line 84024
       break;
      } else {
       _abort(); //@line 84027
       return 0; //@line 84027
      }
     }
    } while (0);
    $40 = $17 << 3; //@line 84032
    HEAP32[$22 + 4 >> 2] = $40 | 3; //@line 84035
    $45 = $22 + ($40 | 4) | 0; //@line 84039
    HEAP32[$45 >> 2] = HEAP32[$45 >> 2] | 1; //@line 84042
    $mem_0 = $23; //@line 84044
    return $mem_0 | 0; //@line 84047
   }
   if ($8 >>> 0 <= (HEAP32[15732] | 0) >>> 0) {
    $nb_0 = $8; //@line 84052
    break;
   }
   if (($11 | 0) != 0) {
    $56 = 2 << $9; //@line 84058
    $59 = $11 << $9 & ($56 | -$56); //@line 84061
    $62 = ($59 & -$59) - 1 | 0; //@line 84064
    $64 = $62 >>> 12 & 16; //@line 84066
    $65 = $62 >>> ($64 >>> 0); //@line 84067
    $67 = $65 >>> 5 & 8; //@line 84069
    $69 = $65 >>> ($67 >>> 0); //@line 84071
    $71 = $69 >>> 2 & 4; //@line 84073
    $73 = $69 >>> ($71 >>> 0); //@line 84075
    $75 = $73 >>> 1 & 2; //@line 84077
    $77 = $73 >>> ($75 >>> 0); //@line 84079
    $79 = $77 >>> 1 & 1; //@line 84081
    $82 = ($67 | $64 | $71 | $75 | $79) + ($77 >>> ($79 >>> 0)) | 0; //@line 84084
    $83 = $82 << 1; //@line 84085
    $85 = 62960 + ($83 << 2) | 0; //@line 84087
    $86 = 62960 + ($83 + 2 << 2) | 0; //@line 84089
    $87 = HEAP32[$86 >> 2] | 0; //@line 84090
    $88 = $87 + 8 | 0; //@line 84091
    $89 = HEAP32[$88 >> 2] | 0; //@line 84092
    do {
     if (($85 | 0) == ($89 | 0)) {
      HEAP32[15730] = $10 & ~(1 << $82); //@line 84099
     } else {
      if ($89 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
       _abort(); //@line 84105
       return 0; //@line 84105
      }
      $100 = $89 + 12 | 0; //@line 84108
      if ((HEAP32[$100 >> 2] | 0) == ($87 | 0)) {
       HEAP32[$100 >> 2] = $85; //@line 84112
       HEAP32[$86 >> 2] = $89; //@line 84113
       break;
      } else {
       _abort(); //@line 84116
       return 0; //@line 84116
      }
     }
    } while (0);
    $105 = $82 << 3; //@line 84121
    $106 = $105 - $8 | 0; //@line 84122
    HEAP32[$87 + 4 >> 2] = $8 | 3; //@line 84125
    $109 = $87; //@line 84126
    $111 = $109 + $8 | 0; //@line 84128
    HEAP32[$109 + ($8 | 4) >> 2] = $106 | 1; //@line 84133
    HEAP32[$109 + $105 >> 2] = $106; //@line 84136
    $117 = HEAP32[15732] | 0; //@line 84137
    if (($117 | 0) != 0) {
     $120 = HEAP32[15735] | 0; //@line 84140
     $121 = $117 >>> 3; //@line 84141
     $122 = $121 << 1; //@line 84142
     $124 = 62960 + ($122 << 2) | 0; //@line 84144
     $125 = HEAP32[15730] | 0; //@line 84145
     $126 = 1 << $121; //@line 84146
     do {
      if (($125 & $126 | 0) == 0) {
       HEAP32[15730] = $125 | $126; //@line 84152
       $F4_0 = $124;
       $_pre_phi = 62960 + ($122 + 2 << 2) | 0;
      } else {
       $132 = 62960 + ($122 + 2 << 2) | 0; //@line 84158
       $133 = HEAP32[$132 >> 2] | 0; //@line 84159
       if ($133 >>> 0 >= (HEAP32[15734] | 0) >>> 0) {
        $F4_0 = $133;
        $_pre_phi = $132;
        break;
       }
       _abort(); //@line 84167
       return 0; //@line 84167
      }
     } while (0);
     HEAP32[$_pre_phi >> 2] = $120; //@line 84173
     HEAP32[$F4_0 + 12 >> 2] = $120; //@line 84175
     HEAP32[$120 + 8 >> 2] = $F4_0; //@line 84177
     HEAP32[$120 + 12 >> 2] = $124; //@line 84179
    }
    HEAP32[15732] = $106; //@line 84181
    HEAP32[15735] = $111; //@line 84182
    $mem_0 = $88; //@line 84184
    return $mem_0 | 0; //@line 84187
   }
   $145 = HEAP32[15731] | 0; //@line 84189
   if (($145 | 0) == 0) {
    $nb_0 = $8; //@line 84192
    break;
   }
   $150 = ($145 & -$145) - 1 | 0; //@line 84197
   $152 = $150 >>> 12 & 16; //@line 84199
   $153 = $150 >>> ($152 >>> 0); //@line 84200
   $155 = $153 >>> 5 & 8; //@line 84202
   $157 = $153 >>> ($155 >>> 0); //@line 84204
   $159 = $157 >>> 2 & 4; //@line 84206
   $161 = $157 >>> ($159 >>> 0); //@line 84208
   $163 = $161 >>> 1 & 2; //@line 84210
   $165 = $161 >>> ($163 >>> 0); //@line 84212
   $167 = $165 >>> 1 & 1; //@line 84214
   $172 = HEAP32[63224 + (($155 | $152 | $159 | $163 | $167) + ($165 >>> ($167 >>> 0)) << 2) >> 2] | 0; //@line 84219
   $t_0_i = $172;
   $v_0_i = $172;
   $rsize_0_i = (HEAP32[$172 + 4 >> 2] & -8) - $8 | 0;
   while (1) {
    $179 = HEAP32[$t_0_i + 16 >> 2] | 0; //@line 84230
    if (($179 | 0) == 0) {
     $183 = HEAP32[$t_0_i + 20 >> 2] | 0; //@line 84234
     if (($183 | 0) == 0) {
      break;
     } else {
      $185 = $183; //@line 84239
     }
    } else {
     $185 = $179; //@line 84242
    }
    $189 = (HEAP32[$185 + 4 >> 2] & -8) - $8 | 0; //@line 84248
    $190 = $189 >>> 0 < $rsize_0_i >>> 0; //@line 84249
    $t_0_i = $185;
    $v_0_i = $190 ? $185 : $v_0_i;
    $rsize_0_i = $190 ? $189 : $rsize_0_i;
   }
   $192 = $v_0_i; //@line 84254
   $193 = HEAP32[15734] | 0; //@line 84255
   if ($192 >>> 0 < $193 >>> 0) {
    _abort(); //@line 84258
    return 0; //@line 84258
   }
   $196 = $192 + $8 | 0; //@line 84261
   $197 = $196; //@line 84262
   if ($192 >>> 0 >= $196 >>> 0) {
    _abort(); //@line 84265
    return 0; //@line 84265
   }
   $201 = HEAP32[$v_0_i + 24 >> 2] | 0; //@line 84269
   $203 = HEAP32[$v_0_i + 12 >> 2] | 0; //@line 84271
   do {
    if (($203 | 0) == ($v_0_i | 0)) {
     $220 = $v_0_i + 20 | 0; //@line 84275
     $221 = HEAP32[$220 >> 2] | 0; //@line 84276
     if (($221 | 0) == 0) {
      $224 = $v_0_i + 16 | 0; //@line 84279
      $225 = HEAP32[$224 >> 2] | 0; //@line 84280
      if (($225 | 0) == 0) {
       $R_1_i = 0; //@line 84283
       break;
      } else {
       $R_0_i = $225;
       $RP_0_i = $224;
      }
     } else {
      $R_0_i = $221;
      $RP_0_i = $220;
     }
     while (1) {
      $227 = $R_0_i + 20 | 0; //@line 84294
      $228 = HEAP32[$227 >> 2] | 0; //@line 84295
      if (($228 | 0) != 0) {
       $R_0_i = $228;
       $RP_0_i = $227;
       continue;
      }
      $231 = $R_0_i + 16 | 0; //@line 84301
      $232 = HEAP32[$231 >> 2] | 0; //@line 84302
      if (($232 | 0) == 0) {
       break;
      } else {
       $R_0_i = $232;
       $RP_0_i = $231;
      }
     }
     if ($RP_0_i >>> 0 < $193 >>> 0) {
      _abort(); //@line 84313
      return 0; //@line 84313
     } else {
      HEAP32[$RP_0_i >> 2] = 0; //@line 84316
      $R_1_i = $R_0_i; //@line 84317
      break;
     }
    } else {
     $207 = HEAP32[$v_0_i + 8 >> 2] | 0; //@line 84322
     if ($207 >>> 0 < $193 >>> 0) {
      _abort(); //@line 84326
      return 0; //@line 84326
     }
     $211 = $207 + 12 | 0; //@line 84329
     if ((HEAP32[$211 >> 2] | 0) != ($v_0_i | 0)) {
      _abort(); //@line 84333
      return 0; //@line 84333
     }
     $215 = $203 + 8 | 0; //@line 84336
     if ((HEAP32[$215 >> 2] | 0) == ($v_0_i | 0)) {
      HEAP32[$211 >> 2] = $203; //@line 84340
      HEAP32[$215 >> 2] = $207; //@line 84341
      $R_1_i = $203; //@line 84342
      break;
     } else {
      _abort(); //@line 84345
      return 0; //@line 84345
     }
    }
   } while (0);
   L26104 : do {
    if (($201 | 0) != 0) {
     $242 = $v_0_i + 28 | 0; //@line 84354
     $244 = 63224 + (HEAP32[$242 >> 2] << 2) | 0; //@line 84356
     do {
      if (($v_0_i | 0) == (HEAP32[$244 >> 2] | 0)) {
       HEAP32[$244 >> 2] = $R_1_i; //@line 84361
       if (($R_1_i | 0) != 0) {
        break;
       }
       HEAP32[15731] = HEAP32[15731] & ~(1 << HEAP32[$242 >> 2]); //@line 84371
       break L26104;
      } else {
       if ($201 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
        _abort(); //@line 84378
        return 0; //@line 84378
       }
       $258 = $201 + 16 | 0; //@line 84381
       if ((HEAP32[$258 >> 2] | 0) == ($v_0_i | 0)) {
        HEAP32[$258 >> 2] = $R_1_i; //@line 84385
       } else {
        HEAP32[$201 + 20 >> 2] = $R_1_i; //@line 84388
       }
       if (($R_1_i | 0) == 0) {
        break L26104;
       }
      }
     } while (0);
     if ($R_1_i >>> 0 < (HEAP32[15734] | 0) >>> 0) {
      _abort(); //@line 84400
      return 0; //@line 84400
     }
     HEAP32[$R_1_i + 24 >> 2] = $201; //@line 84404
     $274 = HEAP32[$v_0_i + 16 >> 2] | 0; //@line 84406
     do {
      if (($274 | 0) != 0) {
       if ($274 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
        _abort(); //@line 84414
        return 0; //@line 84414
       } else {
        HEAP32[$R_1_i + 16 >> 2] = $274; //@line 84418
        HEAP32[$274 + 24 >> 2] = $R_1_i; //@line 84420
        break;
       }
      }
     } while (0);
     $286 = HEAP32[$v_0_i + 20 >> 2] | 0; //@line 84426
     if (($286 | 0) == 0) {
      break;
     }
     if ($286 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
      _abort(); //@line 84435
      return 0; //@line 84435
     } else {
      HEAP32[$R_1_i + 20 >> 2] = $286; //@line 84439
      HEAP32[$286 + 24 >> 2] = $R_1_i; //@line 84441
      break;
     }
    }
   } while (0);
   if ($rsize_0_i >>> 0 < 16) {
    $300 = $rsize_0_i + $8 | 0; //@line 84448
    HEAP32[$v_0_i + 4 >> 2] = $300 | 3; //@line 84451
    $304 = $192 + ($300 + 4) | 0; //@line 84454
    HEAP32[$304 >> 2] = HEAP32[$304 >> 2] | 1; //@line 84457
   } else {
    HEAP32[$v_0_i + 4 >> 2] = $8 | 3; //@line 84461
    HEAP32[$192 + ($8 | 4) >> 2] = $rsize_0_i | 1; //@line 84466
    HEAP32[$192 + ($rsize_0_i + $8) >> 2] = $rsize_0_i; //@line 84470
    $315 = HEAP32[15732] | 0; //@line 84471
    if (($315 | 0) != 0) {
     $318 = HEAP32[15735] | 0; //@line 84474
     $319 = $315 >>> 3; //@line 84475
     $320 = $319 << 1; //@line 84476
     $322 = 62960 + ($320 << 2) | 0; //@line 84478
     $323 = HEAP32[15730] | 0; //@line 84479
     $324 = 1 << $319; //@line 84480
     do {
      if (($323 & $324 | 0) == 0) {
       HEAP32[15730] = $323 | $324; //@line 84486
       $F1_0_i = $322;
       $_pre_phi_i = 62960 + ($320 + 2 << 2) | 0;
      } else {
       $330 = 62960 + ($320 + 2 << 2) | 0; //@line 84492
       $331 = HEAP32[$330 >> 2] | 0; //@line 84493
       if ($331 >>> 0 >= (HEAP32[15734] | 0) >>> 0) {
        $F1_0_i = $331;
        $_pre_phi_i = $330;
        break;
       }
       _abort(); //@line 84501
       return 0; //@line 84501
      }
     } while (0);
     HEAP32[$_pre_phi_i >> 2] = $318; //@line 84507
     HEAP32[$F1_0_i + 12 >> 2] = $318; //@line 84509
     HEAP32[$318 + 8 >> 2] = $F1_0_i; //@line 84511
     HEAP32[$318 + 12 >> 2] = $322; //@line 84513
    }
    HEAP32[15732] = $rsize_0_i; //@line 84515
    HEAP32[15735] = $197; //@line 84516
   }
   $342 = $v_0_i + 8 | 0; //@line 84518
   if (($342 | 0) == 0) {
    $nb_0 = $8; //@line 84522
    break;
   } else {
    $mem_0 = $342; //@line 84525
   }
   return $mem_0 | 0; //@line 84529
  } else {
   if ($bytes >>> 0 > 4294967231) {
    $nb_0 = -1; //@line 84533
    break;
   }
   $348 = $bytes + 11 | 0; //@line 84536
   $349 = $348 & -8; //@line 84537
   $350 = HEAP32[15731] | 0; //@line 84538
   if (($350 | 0) == 0) {
    $nb_0 = $349; //@line 84541
    break;
   }
   $353 = -$349 | 0; //@line 84544
   $354 = $348 >>> 8; //@line 84545
   do {
    if (($354 | 0) == 0) {
     $idx_0_i = 0; //@line 84549
    } else {
     if ($349 >>> 0 > 16777215) {
      $idx_0_i = 31; //@line 84553
      break;
     }
     $361 = ($354 + 1048320 | 0) >>> 16 & 8; //@line 84558
     $362 = $354 << $361; //@line 84559
     $365 = ($362 + 520192 | 0) >>> 16 & 4; //@line 84562
     $367 = $362 << $365; //@line 84564
     $370 = ($367 + 245760 | 0) >>> 16 & 2; //@line 84567
     $375 = 14 - ($365 | $361 | $370) + ($367 << $370 >>> 15) | 0; //@line 84572
     $idx_0_i = $349 >>> (($375 + 7 | 0) >>> 0) & 1 | $375 << 1; //@line 84578
    }
   } while (0);
   $383 = HEAP32[63224 + ($idx_0_i << 2) >> 2] | 0; //@line 84583
   L25912 : do {
    if (($383 | 0) == 0) {
     $v_2_i = 0;
     $rsize_2_i = $353;
     $t_1_i = 0;
    } else {
     if (($idx_0_i | 0) == 31) {
      $391 = 0; //@line 84591
     } else {
      $391 = 25 - ($idx_0_i >>> 1) | 0; //@line 84595
     }
     $v_0_i118 = 0;
     $rsize_0_i117 = $353;
     $t_0_i116 = $383;
     $sizebits_0_i = $349 << $391;
     $rst_0_i = 0;
     while (1) {
      $396 = HEAP32[$t_0_i116 + 4 >> 2] & -8; //@line 84608
      $397 = $396 - $349 | 0; //@line 84609
      if ($397 >>> 0 < $rsize_0_i117 >>> 0) {
       if (($396 | 0) == ($349 | 0)) {
        $v_2_i = $t_0_i116;
        $rsize_2_i = $397;
        $t_1_i = $t_0_i116;
        break L25912;
       } else {
        $v_1_i = $t_0_i116;
        $rsize_1_i = $397;
       }
      } else {
       $v_1_i = $v_0_i118;
       $rsize_1_i = $rsize_0_i117;
      }
      $403 = HEAP32[$t_0_i116 + 20 >> 2] | 0; //@line 84625
      $406 = HEAP32[$t_0_i116 + 16 + ($sizebits_0_i >>> 31 << 2) >> 2] | 0; //@line 84628
      $rst_1_i = ($403 | 0) == 0 | ($403 | 0) == ($406 | 0) ? $rst_0_i : $403; //@line 84632
      if (($406 | 0) == 0) {
       $v_2_i = $v_1_i;
       $rsize_2_i = $rsize_1_i;
       $t_1_i = $rst_1_i;
       break;
      } else {
       $v_0_i118 = $v_1_i;
       $rsize_0_i117 = $rsize_1_i;
       $t_0_i116 = $406;
       $sizebits_0_i = $sizebits_0_i << 1;
       $rst_0_i = $rst_1_i;
      }
     }
    }
   } while (0);
   if (($t_1_i | 0) == 0 & ($v_2_i | 0) == 0) {
    $414 = 2 << $idx_0_i; //@line 84651
    $417 = $350 & ($414 | -$414); //@line 84654
    if (($417 | 0) == 0) {
     $nb_0 = $349; //@line 84657
     break;
    }
    $422 = ($417 & -$417) - 1 | 0; //@line 84662
    $424 = $422 >>> 12 & 16; //@line 84664
    $425 = $422 >>> ($424 >>> 0); //@line 84665
    $427 = $425 >>> 5 & 8; //@line 84667
    $429 = $425 >>> ($427 >>> 0); //@line 84669
    $431 = $429 >>> 2 & 4; //@line 84671
    $433 = $429 >>> ($431 >>> 0); //@line 84673
    $435 = $433 >>> 1 & 2; //@line 84675
    $437 = $433 >>> ($435 >>> 0); //@line 84677
    $439 = $437 >>> 1 & 1; //@line 84679
    $t_2_ph_i = HEAP32[63224 + (($427 | $424 | $431 | $435 | $439) + ($437 >>> ($439 >>> 0)) << 2) >> 2] | 0; //@line 84685
   } else {
    $t_2_ph_i = $t_1_i; //@line 84687
   }
   if (($t_2_ph_i | 0) == 0) {
    $rsize_3_lcssa_i = $rsize_2_i;
    $v_3_lcssa_i = $v_2_i;
   } else {
    $t_228_i = $t_2_ph_i;
    $rsize_329_i = $rsize_2_i;
    $v_330_i = $v_2_i;
    while (1) {
     $449 = (HEAP32[$t_228_i + 4 >> 2] & -8) - $349 | 0; //@line 84702
     $450 = $449 >>> 0 < $rsize_329_i >>> 0; //@line 84703
     $_rsize_3_i = $450 ? $449 : $rsize_329_i; //@line 84704
     $t_2_v_3_i = $450 ? $t_228_i : $v_330_i; //@line 84705
     $452 = HEAP32[$t_228_i + 16 >> 2] | 0; //@line 84707
     if (($452 | 0) != 0) {
      $t_228_i = $452;
      $rsize_329_i = $_rsize_3_i;
      $v_330_i = $t_2_v_3_i;
      continue;
     }
     $455 = HEAP32[$t_228_i + 20 >> 2] | 0; //@line 84714
     if (($455 | 0) == 0) {
      $rsize_3_lcssa_i = $_rsize_3_i;
      $v_3_lcssa_i = $t_2_v_3_i;
      break;
     } else {
      $t_228_i = $455;
      $rsize_329_i = $_rsize_3_i;
      $v_330_i = $t_2_v_3_i;
     }
    }
   }
   if (($v_3_lcssa_i | 0) == 0) {
    $nb_0 = $349; //@line 84728
    break;
   }
   if ($rsize_3_lcssa_i >>> 0 >= ((HEAP32[15732] | 0) - $349 | 0) >>> 0) {
    $nb_0 = $349; //@line 84735
    break;
   }
   $463 = $v_3_lcssa_i; //@line 84738
   $464 = HEAP32[15734] | 0; //@line 84739
   if ($463 >>> 0 < $464 >>> 0) {
    _abort(); //@line 84742
    return 0; //@line 84742
   }
   $467 = $463 + $349 | 0; //@line 84745
   $468 = $467; //@line 84746
   if ($463 >>> 0 >= $467 >>> 0) {
    _abort(); //@line 84749
    return 0; //@line 84749
   }
   $472 = HEAP32[$v_3_lcssa_i + 24 >> 2] | 0; //@line 84753
   $474 = HEAP32[$v_3_lcssa_i + 12 >> 2] | 0; //@line 84755
   do {
    if (($474 | 0) == ($v_3_lcssa_i | 0)) {
     $491 = $v_3_lcssa_i + 20 | 0; //@line 84759
     $492 = HEAP32[$491 >> 2] | 0; //@line 84760
     if (($492 | 0) == 0) {
      $495 = $v_3_lcssa_i + 16 | 0; //@line 84763
      $496 = HEAP32[$495 >> 2] | 0; //@line 84764
      if (($496 | 0) == 0) {
       $R_1_i122 = 0; //@line 84767
       break;
      } else {
       $R_0_i120 = $496;
       $RP_0_i119 = $495;
      }
     } else {
      $R_0_i120 = $492;
      $RP_0_i119 = $491;
     }
     while (1) {
      $498 = $R_0_i120 + 20 | 0; //@line 84778
      $499 = HEAP32[$498 >> 2] | 0; //@line 84779
      if (($499 | 0) != 0) {
       $R_0_i120 = $499;
       $RP_0_i119 = $498;
       continue;
      }
      $502 = $R_0_i120 + 16 | 0; //@line 84785
      $503 = HEAP32[$502 >> 2] | 0; //@line 84786
      if (($503 | 0) == 0) {
       break;
      } else {
       $R_0_i120 = $503;
       $RP_0_i119 = $502;
      }
     }
     if ($RP_0_i119 >>> 0 < $464 >>> 0) {
      _abort(); //@line 84797
      return 0; //@line 84797
     } else {
      HEAP32[$RP_0_i119 >> 2] = 0; //@line 84800
      $R_1_i122 = $R_0_i120; //@line 84801
      break;
     }
    } else {
     $478 = HEAP32[$v_3_lcssa_i + 8 >> 2] | 0; //@line 84806
     if ($478 >>> 0 < $464 >>> 0) {
      _abort(); //@line 84810
      return 0; //@line 84810
     }
     $482 = $478 + 12 | 0; //@line 84813
     if ((HEAP32[$482 >> 2] | 0) != ($v_3_lcssa_i | 0)) {
      _abort(); //@line 84817
      return 0; //@line 84817
     }
     $486 = $474 + 8 | 0; //@line 84820
     if ((HEAP32[$486 >> 2] | 0) == ($v_3_lcssa_i | 0)) {
      HEAP32[$482 >> 2] = $474; //@line 84824
      HEAP32[$486 >> 2] = $478; //@line 84825
      $R_1_i122 = $474; //@line 84826
      break;
     } else {
      _abort(); //@line 84829
      return 0; //@line 84829
     }
    }
   } while (0);
   L25962 : do {
    if (($472 | 0) != 0) {
     $513 = $v_3_lcssa_i + 28 | 0; //@line 84838
     $515 = 63224 + (HEAP32[$513 >> 2] << 2) | 0; //@line 84840
     do {
      if (($v_3_lcssa_i | 0) == (HEAP32[$515 >> 2] | 0)) {
       HEAP32[$515 >> 2] = $R_1_i122; //@line 84845
       if (($R_1_i122 | 0) != 0) {
        break;
       }
       HEAP32[15731] = HEAP32[15731] & ~(1 << HEAP32[$513 >> 2]); //@line 84855
       break L25962;
      } else {
       if ($472 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
        _abort(); //@line 84862
        return 0; //@line 84862
       }
       $529 = $472 + 16 | 0; //@line 84865
       if ((HEAP32[$529 >> 2] | 0) == ($v_3_lcssa_i | 0)) {
        HEAP32[$529 >> 2] = $R_1_i122; //@line 84869
       } else {
        HEAP32[$472 + 20 >> 2] = $R_1_i122; //@line 84872
       }
       if (($R_1_i122 | 0) == 0) {
        break L25962;
       }
      }
     } while (0);
     if ($R_1_i122 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
      _abort(); //@line 84884
      return 0; //@line 84884
     }
     HEAP32[$R_1_i122 + 24 >> 2] = $472; //@line 84888
     $545 = HEAP32[$v_3_lcssa_i + 16 >> 2] | 0; //@line 84890
     do {
      if (($545 | 0) != 0) {
       if ($545 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
        _abort(); //@line 84898
        return 0; //@line 84898
       } else {
        HEAP32[$R_1_i122 + 16 >> 2] = $545; //@line 84902
        HEAP32[$545 + 24 >> 2] = $R_1_i122; //@line 84904
        break;
       }
      }
     } while (0);
     $557 = HEAP32[$v_3_lcssa_i + 20 >> 2] | 0; //@line 84910
     if (($557 | 0) == 0) {
      break;
     }
     if ($557 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
      _abort(); //@line 84919
      return 0; //@line 84919
     } else {
      HEAP32[$R_1_i122 + 20 >> 2] = $557; //@line 84923
      HEAP32[$557 + 24 >> 2] = $R_1_i122; //@line 84925
      break;
     }
    }
   } while (0);
   do {
    if ($rsize_3_lcssa_i >>> 0 < 16) {
     $571 = $rsize_3_lcssa_i + $349 | 0; //@line 84933
     HEAP32[$v_3_lcssa_i + 4 >> 2] = $571 | 3; //@line 84936
     $575 = $463 + ($571 + 4) | 0; //@line 84939
     HEAP32[$575 >> 2] = HEAP32[$575 >> 2] | 1; //@line 84942
    } else {
     HEAP32[$v_3_lcssa_i + 4 >> 2] = $349 | 3; //@line 84946
     HEAP32[$463 + ($349 | 4) >> 2] = $rsize_3_lcssa_i | 1; //@line 84951
     HEAP32[$463 + ($rsize_3_lcssa_i + $349) >> 2] = $rsize_3_lcssa_i; //@line 84955
     $586 = $rsize_3_lcssa_i >>> 3; //@line 84956
     if ($rsize_3_lcssa_i >>> 0 < 256) {
      $589 = $586 << 1; //@line 84959
      $591 = 62960 + ($589 << 2) | 0; //@line 84961
      $592 = HEAP32[15730] | 0; //@line 84962
      $593 = 1 << $586; //@line 84963
      do {
       if (($592 & $593 | 0) == 0) {
        HEAP32[15730] = $592 | $593; //@line 84969
        $F5_0_i = $591;
        $_pre_phi_i128 = 62960 + ($589 + 2 << 2) | 0;
       } else {
        $599 = 62960 + ($589 + 2 << 2) | 0; //@line 84975
        $600 = HEAP32[$599 >> 2] | 0; //@line 84976
        if ($600 >>> 0 >= (HEAP32[15734] | 0) >>> 0) {
         $F5_0_i = $600;
         $_pre_phi_i128 = $599;
         break;
        }
        _abort(); //@line 84984
        return 0; //@line 84984
       }
      } while (0);
      HEAP32[$_pre_phi_i128 >> 2] = $468; //@line 84990
      HEAP32[$F5_0_i + 12 >> 2] = $468; //@line 84992
      HEAP32[$463 + ($349 + 8) >> 2] = $F5_0_i; //@line 84996
      HEAP32[$463 + ($349 + 12) >> 2] = $591; //@line 85000
      break;
     }
     $612 = $467; //@line 85003
     $613 = $rsize_3_lcssa_i >>> 8; //@line 85004
     do {
      if (($613 | 0) == 0) {
       $I7_0_i = 0; //@line 85008
      } else {
       if ($rsize_3_lcssa_i >>> 0 > 16777215) {
        $I7_0_i = 31; //@line 85012
        break;
       }
       $620 = ($613 + 1048320 | 0) >>> 16 & 8; //@line 85017
       $621 = $613 << $620; //@line 85018
       $624 = ($621 + 520192 | 0) >>> 16 & 4; //@line 85021
       $626 = $621 << $624; //@line 85023
       $629 = ($626 + 245760 | 0) >>> 16 & 2; //@line 85026
       $634 = 14 - ($624 | $620 | $629) + ($626 << $629 >>> 15) | 0; //@line 85031
       $I7_0_i = $rsize_3_lcssa_i >>> (($634 + 7 | 0) >>> 0) & 1 | $634 << 1; //@line 85037
      }
     } while (0);
     $641 = 63224 + ($I7_0_i << 2) | 0; //@line 85041
     HEAP32[$463 + ($349 + 28) >> 2] = $I7_0_i; //@line 85045
     HEAP32[$463 + ($349 + 20) >> 2] = 0; //@line 85051
     HEAP32[$463 + ($349 + 16) >> 2] = 0; //@line 85053
     $648 = HEAP32[15731] | 0; //@line 85054
     $649 = 1 << $I7_0_i; //@line 85055
     if (($648 & $649 | 0) == 0) {
      HEAP32[15731] = $648 | $649; //@line 85060
      HEAP32[$641 >> 2] = $612; //@line 85061
      HEAP32[$463 + ($349 + 24) >> 2] = $641; //@line 85066
      HEAP32[$463 + ($349 + 12) >> 2] = $612; //@line 85070
      HEAP32[$463 + ($349 + 8) >> 2] = $612; //@line 85074
      break;
     }
     if (($I7_0_i | 0) == 31) {
      $668 = 0; //@line 85080
     } else {
      $668 = 25 - ($I7_0_i >>> 1) | 0; //@line 85084
     }
     $K12_0_i = $rsize_3_lcssa_i << $668;
     $T_0_i = HEAP32[$641 >> 2] | 0;
     while (1) {
      if ((HEAP32[$T_0_i + 4 >> 2] & -8 | 0) == ($rsize_3_lcssa_i | 0)) {
       break;
      }
      $677 = $T_0_i + 16 + ($K12_0_i >>> 31 << 2) | 0; //@line 85100
      $678 = HEAP32[$677 >> 2] | 0; //@line 85101
      if (($678 | 0) == 0) {
       label = 20148; //@line 85105
       break;
      } else {
       $K12_0_i = $K12_0_i << 1;
       $T_0_i = $678;
      }
     }
     if ((label | 0) == 20148) {
      if ($677 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
       _abort(); //@line 85116
       return 0; //@line 85116
      } else {
       HEAP32[$677 >> 2] = $612; //@line 85119
       HEAP32[$463 + ($349 + 24) >> 2] = $T_0_i; //@line 85123
       HEAP32[$463 + ($349 + 12) >> 2] = $612; //@line 85127
       HEAP32[$463 + ($349 + 8) >> 2] = $612; //@line 85131
       break;
      }
     }
     $694 = $T_0_i + 8 | 0; //@line 85135
     $695 = HEAP32[$694 >> 2] | 0; //@line 85136
     $697 = HEAP32[15734] | 0; //@line 85138
     if ($T_0_i >>> 0 < $697 >>> 0) {
      _abort(); //@line 85141
      return 0; //@line 85141
     }
     if ($695 >>> 0 < $697 >>> 0) {
      _abort(); //@line 85147
      return 0; //@line 85147
     } else {
      HEAP32[$695 + 12 >> 2] = $612; //@line 85151
      HEAP32[$694 >> 2] = $612; //@line 85152
      HEAP32[$463 + ($349 + 8) >> 2] = $695; //@line 85156
      HEAP32[$463 + ($349 + 12) >> 2] = $T_0_i; //@line 85160
      HEAP32[$463 + ($349 + 24) >> 2] = 0; //@line 85164
      break;
     }
    }
   } while (0);
   $711 = $v_3_lcssa_i + 8 | 0; //@line 85169
   if (($711 | 0) == 0) {
    $nb_0 = $349; //@line 85173
    break;
   } else {
    $mem_0 = $711; //@line 85176
   }
   return $mem_0 | 0; //@line 85180
  }
 } while (0);
 $714 = HEAP32[15732] | 0; //@line 85184
 if ($nb_0 >>> 0 <= $714 >>> 0) {
  $717 = $714 - $nb_0 | 0; //@line 85187
  $718 = HEAP32[15735] | 0; //@line 85188
  if ($717 >>> 0 > 15) {
   $721 = $718; //@line 85191
   HEAP32[15735] = $721 + $nb_0; //@line 85194
   HEAP32[15732] = $717; //@line 85195
   HEAP32[$721 + ($nb_0 + 4) >> 2] = $717 | 1; //@line 85200
   HEAP32[$721 + $714 >> 2] = $717; //@line 85203
   HEAP32[$718 + 4 >> 2] = $nb_0 | 3; //@line 85206
  } else {
   HEAP32[15732] = 0; //@line 85208
   HEAP32[15735] = 0; //@line 85209
   HEAP32[$718 + 4 >> 2] = $714 | 3; //@line 85212
   $736 = $718 + ($714 + 4) | 0; //@line 85216
   HEAP32[$736 >> 2] = HEAP32[$736 >> 2] | 1; //@line 85219
  }
  $mem_0 = $718 + 8 | 0; //@line 85223
  return $mem_0 | 0; //@line 85226
 }
 $743 = HEAP32[15733] | 0; //@line 85228
 if ($nb_0 >>> 0 < $743 >>> 0) {
  $746 = $743 - $nb_0 | 0; //@line 85231
  HEAP32[15733] = $746; //@line 85232
  $747 = HEAP32[15736] | 0; //@line 85233
  $748 = $747; //@line 85234
  HEAP32[15736] = $748 + $nb_0; //@line 85237
  HEAP32[$748 + ($nb_0 + 4) >> 2] = $746 | 1; //@line 85242
  HEAP32[$747 + 4 >> 2] = $nb_0 | 3; //@line 85245
  $mem_0 = $747 + 8 | 0; //@line 85248
  return $mem_0 | 0; //@line 85251
 }
 do {
  if ((HEAP32[15676] | 0) == 0) {
   $762 = _sysconf(8) | 0; //@line 85257
   if (($762 - 1 & $762 | 0) == 0) {
    HEAP32[15678] = $762; //@line 85262
    HEAP32[15677] = $762; //@line 85263
    HEAP32[15679] = -1; //@line 85264
    HEAP32[15680] = 2097152; //@line 85265
    HEAP32[15681] = 0; //@line 85266
    HEAP32[15841] = 0; //@line 85267
    HEAP32[15676] = (_time(0) | 0) & -16 ^ 1431655768; //@line 85271
    break;
   } else {
    _abort(); //@line 85274
    return 0; //@line 85274
   }
  }
 } while (0);
 $771 = $nb_0 + 48 | 0; //@line 85279
 $772 = HEAP32[15678] | 0; //@line 85280
 $773 = $nb_0 + 47 | 0; //@line 85281
 $774 = $772 + $773 | 0; //@line 85282
 $775 = -$772 | 0; //@line 85283
 $776 = $774 & $775; //@line 85284
 if ($776 >>> 0 <= $nb_0 >>> 0) {
  $mem_0 = 0; //@line 85287
  return $mem_0 | 0; //@line 85290
 }
 $779 = HEAP32[15840] | 0; //@line 85292
 do {
  if (($779 | 0) != 0) {
   $782 = HEAP32[15838] | 0; //@line 85296
   $783 = $782 + $776 | 0; //@line 85297
   if ($783 >>> 0 <= $782 >>> 0 | $783 >>> 0 > $779 >>> 0) {
    $mem_0 = 0; //@line 85302
   } else {
    break;
   }
   return $mem_0 | 0; //@line 85308
  }
 } while (0);
 L26171 : do {
  if ((HEAP32[15841] & 4 | 0) == 0) {
   $791 = HEAP32[15736] | 0; //@line 85316
   L26173 : do {
    if (($791 | 0) == 0) {
     label = 20178; //@line 85320
    } else {
     $794 = $791; //@line 85322
     $sp_0_i_i = 63368; //@line 85323
     while (1) {
      $796 = $sp_0_i_i | 0; //@line 85326
      $797 = HEAP32[$796 >> 2] | 0; //@line 85327
      if ($797 >>> 0 <= $794 >>> 0) {
       $800 = $sp_0_i_i + 4 | 0; //@line 85330
       if (($797 + (HEAP32[$800 >> 2] | 0) | 0) >>> 0 > $794 >>> 0) {
        break;
       }
      }
      $806 = HEAP32[$sp_0_i_i + 8 >> 2] | 0; //@line 85339
      if (($806 | 0) == 0) {
       label = 20178; //@line 85342
       break L26173;
      } else {
       $sp_0_i_i = $806; //@line 85345
      }
     }
     if (($sp_0_i_i | 0) == 0) {
      label = 20178; //@line 85350
      break;
     }
     $840 = $774 - (HEAP32[15733] | 0) & $775; //@line 85355
     if ($840 >>> 0 >= 2147483647) {
      $tsize_0303639_i = 0; //@line 85358
      break;
     }
     $843 = _sbrk($840 | 0) | 0; //@line 85361
     $847 = ($843 | 0) == ((HEAP32[$796 >> 2] | 0) + (HEAP32[$800 >> 2] | 0) | 0); //@line 85365
     $tbase_0_i = $847 ? $843 : -1;
     $tsize_0_i = $847 ? $840 : 0;
     $br_0_i = $843;
     $ssize_1_i = $840;
     label = 20187; //@line 85369
    }
   } while (0);
   do {
    if ((label | 0) == 20178) {
     $809 = _sbrk(0) | 0; //@line 85374
     if (($809 | 0) == -1) {
      $tsize_0303639_i = 0; //@line 85377
      break;
     }
     $812 = $809; //@line 85380
     $813 = HEAP32[15677] | 0; //@line 85381
     $814 = $813 - 1 | 0; //@line 85382
     if (($814 & $812 | 0) == 0) {
      $ssize_0_i = $776; //@line 85386
     } else {
      $ssize_0_i = $776 - $812 + ($814 + $812 & -$813) | 0; //@line 85393
     }
     $824 = HEAP32[15838] | 0; //@line 85396
     $825 = $824 + $ssize_0_i | 0; //@line 85397
     if (!($ssize_0_i >>> 0 > $nb_0 >>> 0 & $ssize_0_i >>> 0 < 2147483647)) {
      $tsize_0303639_i = 0; //@line 85402
      break;
     }
     $829 = HEAP32[15840] | 0; //@line 85405
     if (($829 | 0) != 0) {
      if ($825 >>> 0 <= $824 >>> 0 | $825 >>> 0 > $829 >>> 0) {
       $tsize_0303639_i = 0; //@line 85412
       break;
      }
     }
     $835 = _sbrk($ssize_0_i | 0) | 0; //@line 85416
     $836 = ($835 | 0) == ($809 | 0); //@line 85417
     $tbase_0_i = $836 ? $809 : -1;
     $tsize_0_i = $836 ? $ssize_0_i : 0;
     $br_0_i = $835;
     $ssize_1_i = $ssize_0_i;
     label = 20187; //@line 85421
    }
   } while (0);
   L26193 : do {
    if ((label | 0) == 20187) {
     $849 = -$ssize_1_i | 0; //@line 85430
     if (($tbase_0_i | 0) != -1) {
      $tsize_244_i = $tsize_0_i;
      $tbase_245_i = $tbase_0_i;
      label = 20198; //@line 85434
      break L26171;
     }
     do {
      if (($br_0_i | 0) != -1 & $ssize_1_i >>> 0 < 2147483647 & $ssize_1_i >>> 0 < $771 >>> 0) {
       $856 = HEAP32[15678] | 0; //@line 85444
       $860 = $773 - $ssize_1_i + $856 & -$856; //@line 85448
       if ($860 >>> 0 >= 2147483647) {
        $ssize_2_i = $ssize_1_i; //@line 85451
        break;
       }
       if ((_sbrk($860 | 0) | 0) == -1) {
        _sbrk($849 | 0) | 0; //@line 85457
        $tsize_0303639_i = $tsize_0_i; //@line 85458
        break L26193;
       } else {
        $ssize_2_i = $860 + $ssize_1_i | 0; //@line 85462
        break;
       }
      } else {
       $ssize_2_i = $ssize_1_i; //@line 85466
      }
     } while (0);
     if (($br_0_i | 0) == -1) {
      $tsize_0303639_i = $tsize_0_i; //@line 85472
     } else {
      $tsize_244_i = $ssize_2_i;
      $tbase_245_i = $br_0_i;
      label = 20198; //@line 85475
      break L26171;
     }
    }
   } while (0);
   HEAP32[15841] = HEAP32[15841] | 4; //@line 85483
   $tsize_1_i = $tsize_0303639_i; //@line 85484
   label = 20195; //@line 85485
  } else {
   $tsize_1_i = 0; //@line 85487
   label = 20195; //@line 85488
  }
 } while (0);
 do {
  if ((label | 0) == 20195) {
   if ($776 >>> 0 >= 2147483647) {
    break;
   }
   $876 = _sbrk($776 | 0) | 0; //@line 85498
   $877 = _sbrk(0) | 0; //@line 85499
   if (!(($877 | 0) != -1 & ($876 | 0) != -1 & $876 >>> 0 < $877 >>> 0)) {
    break;
   }
   $881 = $877 - $876 | 0; //@line 85510
   $883 = $881 >>> 0 > ($nb_0 + 40 | 0) >>> 0; //@line 85512
   $_tbase_1_i = $883 ? $876 : -1; //@line 85514
   if (($_tbase_1_i | 0) != -1) {
    $tsize_244_i = $883 ? $881 : $tsize_1_i;
    $tbase_245_i = $_tbase_1_i;
    label = 20198; //@line 85518
   }
  }
 } while (0);
 do {
  if ((label | 0) == 20198) {
   $886 = (HEAP32[15838] | 0) + $tsize_244_i | 0; //@line 85527
   HEAP32[15838] = $886; //@line 85528
   if ($886 >>> 0 > (HEAP32[15839] | 0) >>> 0) {
    HEAP32[15839] = $886; //@line 85532
   }
   $890 = HEAP32[15736] | 0; //@line 85534
   L26213 : do {
    if (($890 | 0) == 0) {
     $893 = HEAP32[15734] | 0; //@line 85538
     if (($893 | 0) == 0 | $tbase_245_i >>> 0 < $893 >>> 0) {
      HEAP32[15734] = $tbase_245_i; //@line 85543
     }
     HEAP32[15842] = $tbase_245_i; //@line 85545
     HEAP32[15843] = $tsize_244_i; //@line 85546
     HEAP32[15845] = 0; //@line 85547
     HEAP32[15739] = HEAP32[15676]; //@line 85549
     HEAP32[15738] = -1; //@line 85550
     $i_02_i_i = 0; //@line 85551
     do {
      $899 = $i_02_i_i << 1; //@line 85554
      $901 = 62960 + ($899 << 2) | 0; //@line 85556
      HEAP32[62960 + ($899 + 3 << 2) >> 2] = $901; //@line 85559
      HEAP32[62960 + ($899 + 2 << 2) >> 2] = $901; //@line 85562
      $i_02_i_i = $i_02_i_i + 1 | 0; //@line 85563
     } while ($i_02_i_i >>> 0 < 32);
     $908 = $tbase_245_i + 8 | 0; //@line 85573
     if (($908 & 7 | 0) == 0) {
      $914 = 0; //@line 85577
     } else {
      $914 = -$908 & 7; //@line 85581
     }
     $917 = $tsize_244_i - 40 - $914 | 0; //@line 85586
     HEAP32[15736] = $tbase_245_i + $914; //@line 85587
     HEAP32[15733] = $917; //@line 85588
     HEAP32[$tbase_245_i + ($914 + 4) >> 2] = $917 | 1; //@line 85593
     HEAP32[$tbase_245_i + ($tsize_244_i - 36) >> 2] = 40; //@line 85597
     HEAP32[15737] = HEAP32[15680]; //@line 85599
    } else {
     $sp_067_i = 63368; //@line 85601
     while (1) {
      $925 = HEAP32[$sp_067_i >> 2] | 0; //@line 85605
      $926 = $sp_067_i + 4 | 0; //@line 85606
      $927 = HEAP32[$926 >> 2] | 0; //@line 85607
      if (($tbase_245_i | 0) == ($925 + $927 | 0)) {
       label = 20210; //@line 85611
       break;
      }
      $932 = HEAP32[$sp_067_i + 8 >> 2] | 0; //@line 85615
      if (($932 | 0) == 0) {
       break;
      } else {
       $sp_067_i = $932; //@line 85620
      }
     }
     do {
      if ((label | 0) == 20210) {
       if ((HEAP32[$sp_067_i + 12 >> 2] & 8 | 0) != 0) {
        break;
       }
       $939 = $890; //@line 85632
       if (!($939 >>> 0 >= $925 >>> 0 & $939 >>> 0 < $tbase_245_i >>> 0)) {
        break;
       }
       HEAP32[$926 >> 2] = $927 + $tsize_244_i; //@line 85640
       $944 = HEAP32[15736] | 0; //@line 85641
       $946 = (HEAP32[15733] | 0) + $tsize_244_i | 0; //@line 85643
       $947 = $944; //@line 85644
       $949 = $944 + 8 | 0; //@line 85646
       if (($949 & 7 | 0) == 0) {
        $955 = 0; //@line 85650
       } else {
        $955 = -$949 & 7; //@line 85654
       }
       $958 = $946 - $955 | 0; //@line 85659
       HEAP32[15736] = $947 + $955; //@line 85660
       HEAP32[15733] = $958; //@line 85661
       HEAP32[$947 + ($955 + 4) >> 2] = $958 | 1; //@line 85666
       HEAP32[$947 + ($946 + 4) >> 2] = 40; //@line 85670
       HEAP32[15737] = HEAP32[15680]; //@line 85672
       break L26213;
      }
     } while (0);
     if ($tbase_245_i >>> 0 < (HEAP32[15734] | 0) >>> 0) {
      HEAP32[15734] = $tbase_245_i; //@line 85679
     }
     $968 = $tbase_245_i + $tsize_244_i | 0; //@line 85681
     $sp_160_i = 63368; //@line 85682
     while (1) {
      $970 = $sp_160_i | 0; //@line 85685
      if ((HEAP32[$970 >> 2] | 0) == ($968 | 0)) {
       label = 20220; //@line 85689
       break;
      }
      $975 = HEAP32[$sp_160_i + 8 >> 2] | 0; //@line 85693
      if (($975 | 0) == 0) {
       break;
      } else {
       $sp_160_i = $975; //@line 85698
      }
     }
     do {
      if ((label | 0) == 20220) {
       if ((HEAP32[$sp_160_i + 12 >> 2] & 8 | 0) != 0) {
        break;
       }
       HEAP32[$970 >> 2] = $tbase_245_i; //@line 85710
       $982 = $sp_160_i + 4 | 0; //@line 85711
       HEAP32[$982 >> 2] = (HEAP32[$982 >> 2] | 0) + $tsize_244_i; //@line 85714
       $986 = $tbase_245_i + 8 | 0; //@line 85716
       if (($986 & 7 | 0) == 0) {
        $993 = 0; //@line 85720
       } else {
        $993 = -$986 & 7; //@line 85724
       }
       $996 = $tbase_245_i + ($tsize_244_i + 8) | 0; //@line 85730
       if (($996 & 7 | 0) == 0) {
        $1003 = 0; //@line 85734
       } else {
        $1003 = -$996 & 7; //@line 85738
       }
       $1004 = $tbase_245_i + ($1003 + $tsize_244_i) | 0; //@line 85742
       $1005 = $1004; //@line 85743
       $_sum_i21_i = $993 + $nb_0 | 0; //@line 85747
       $1009 = $tbase_245_i + $_sum_i21_i | 0; //@line 85748
       $1010 = $1009; //@line 85749
       $1011 = $1004 - ($tbase_245_i + $993) - $nb_0 | 0; //@line 85750
       HEAP32[$tbase_245_i + ($993 + 4) >> 2] = $nb_0 | 3; //@line 85755
       do {
        if (($1005 | 0) == (HEAP32[15736] | 0)) {
         $1019 = (HEAP32[15733] | 0) + $1011 | 0; //@line 85761
         HEAP32[15733] = $1019; //@line 85762
         HEAP32[15736] = $1010; //@line 85763
         HEAP32[$tbase_245_i + ($_sum_i21_i + 4) >> 2] = $1019 | 1; //@line 85768
        } else {
         if (($1005 | 0) == (HEAP32[15735] | 0)) {
          $1028 = (HEAP32[15732] | 0) + $1011 | 0; //@line 85774
          HEAP32[15732] = $1028; //@line 85775
          HEAP32[15735] = $1010; //@line 85776
          HEAP32[$tbase_245_i + ($_sum_i21_i + 4) >> 2] = $1028 | 1; //@line 85781
          HEAP32[$tbase_245_i + ($1028 + $_sum_i21_i) >> 2] = $1028; //@line 85785
          break;
         }
         $_sum2_i23_i = $tsize_244_i + 4 | 0; //@line 85788
         $1037 = HEAP32[$tbase_245_i + ($_sum2_i23_i + $1003) >> 2] | 0; //@line 85792
         if (($1037 & 3 | 0) == 1) {
          $1041 = $1037 & -8; //@line 85796
          $1042 = $1037 >>> 3; //@line 85797
          L26258 : do {
           if ($1037 >>> 0 < 256) {
            $1047 = HEAP32[$tbase_245_i + (($1003 | 8) + $tsize_244_i) >> 2] | 0; //@line 85805
            $1050 = HEAP32[$tbase_245_i + ($tsize_244_i + 12 + $1003) >> 2] | 0; //@line 85810
            $1053 = 62960 + ($1042 << 1 << 2) | 0; //@line 85813
            do {
             if (($1047 | 0) != ($1053 | 0)) {
              if ($1047 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
               _abort(); //@line 85821
               return 0; //@line 85821
              }
              if ((HEAP32[$1047 + 12 >> 2] | 0) == ($1005 | 0)) {
               break;
              }
              _abort(); //@line 85830
              return 0; //@line 85830
             }
            } while (0);
            if (($1050 | 0) == ($1047 | 0)) {
             HEAP32[15730] = HEAP32[15730] & ~(1 << $1042); //@line 85840
             break;
            }
            do {
             if (($1050 | 0) == ($1053 | 0)) {
              $_pre_phi57_i_i = $1050 + 8 | 0; //@line 85847
             } else {
              if ($1050 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
               _abort(); //@line 85853
               return 0; //@line 85853
              }
              $1076 = $1050 + 8 | 0; //@line 85856
              if ((HEAP32[$1076 >> 2] | 0) == ($1005 | 0)) {
               $_pre_phi57_i_i = $1076; //@line 85860
               break;
              }
              _abort(); //@line 85863
              return 0; //@line 85863
             }
            } while (0);
            HEAP32[$1047 + 12 >> 2] = $1050; //@line 85869
            HEAP32[$_pre_phi57_i_i >> 2] = $1047; //@line 85870
           } else {
            $1081 = $1004; //@line 85872
            $1084 = HEAP32[$tbase_245_i + (($1003 | 24) + $tsize_244_i) >> 2] | 0; //@line 85877
            $1087 = HEAP32[$tbase_245_i + ($tsize_244_i + 12 + $1003) >> 2] | 0; //@line 85882
            do {
             if (($1087 | 0) == ($1081 | 0)) {
              $_sum67_i_i = $1003 | 16; //@line 85886
              $1107 = $tbase_245_i + ($_sum2_i23_i + $_sum67_i_i) | 0; //@line 85889
              $1108 = HEAP32[$1107 >> 2] | 0; //@line 85890
              if (($1108 | 0) == 0) {
               $1112 = $tbase_245_i + ($_sum67_i_i + $tsize_244_i) | 0; //@line 85895
               $1113 = HEAP32[$1112 >> 2] | 0; //@line 85896
               if (($1113 | 0) == 0) {
                $R_1_i_i = 0; //@line 85899
                break;
               } else {
                $R_0_i_i = $1113;
                $RP_0_i_i = $1112;
               }
              } else {
               $R_0_i_i = $1108;
               $RP_0_i_i = $1107;
              }
              while (1) {
               $1115 = $R_0_i_i + 20 | 0; //@line 85910
               $1116 = HEAP32[$1115 >> 2] | 0; //@line 85911
               if (($1116 | 0) != 0) {
                $R_0_i_i = $1116;
                $RP_0_i_i = $1115;
                continue;
               }
               $1119 = $R_0_i_i + 16 | 0; //@line 85917
               $1120 = HEAP32[$1119 >> 2] | 0; //@line 85918
               if (($1120 | 0) == 0) {
                break;
               } else {
                $R_0_i_i = $1120;
                $RP_0_i_i = $1119;
               }
              }
              if ($RP_0_i_i >>> 0 < (HEAP32[15734] | 0) >>> 0) {
               _abort(); //@line 85930
               return 0; //@line 85930
              } else {
               HEAP32[$RP_0_i_i >> 2] = 0; //@line 85933
               $R_1_i_i = $R_0_i_i; //@line 85934
               break;
              }
             } else {
              $1092 = HEAP32[$tbase_245_i + (($1003 | 8) + $tsize_244_i) >> 2] | 0; //@line 85942
              if ($1092 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
               _abort(); //@line 85947
               return 0; //@line 85947
              }
              $1097 = $1092 + 12 | 0; //@line 85950
              if ((HEAP32[$1097 >> 2] | 0) != ($1081 | 0)) {
               _abort(); //@line 85954
               return 0; //@line 85954
              }
              $1101 = $1087 + 8 | 0; //@line 85957
              if ((HEAP32[$1101 >> 2] | 0) == ($1081 | 0)) {
               HEAP32[$1097 >> 2] = $1087; //@line 85961
               HEAP32[$1101 >> 2] = $1092; //@line 85962
               $R_1_i_i = $1087; //@line 85963
               break;
              } else {
               _abort(); //@line 85966
               return 0; //@line 85966
              }
             }
            } while (0);
            if (($1084 | 0) == 0) {
             break;
            }
            $1132 = $tbase_245_i + ($tsize_244_i + 28 + $1003) | 0; //@line 85979
            $1134 = 63224 + (HEAP32[$1132 >> 2] << 2) | 0; //@line 85981
            do {
             if (($1081 | 0) == (HEAP32[$1134 >> 2] | 0)) {
              HEAP32[$1134 >> 2] = $R_1_i_i; //@line 85986
              if (($R_1_i_i | 0) != 0) {
               break;
              }
              HEAP32[15731] = HEAP32[15731] & ~(1 << HEAP32[$1132 >> 2]); //@line 85996
              break L26258;
             } else {
              if ($1084 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
               _abort(); //@line 86003
               return 0; //@line 86003
              }
              $1148 = $1084 + 16 | 0; //@line 86006
              if ((HEAP32[$1148 >> 2] | 0) == ($1081 | 0)) {
               HEAP32[$1148 >> 2] = $R_1_i_i; //@line 86010
              } else {
               HEAP32[$1084 + 20 >> 2] = $R_1_i_i; //@line 86013
              }
              if (($R_1_i_i | 0) == 0) {
               break L26258;
              }
             }
            } while (0);
            if ($R_1_i_i >>> 0 < (HEAP32[15734] | 0) >>> 0) {
             _abort(); //@line 86025
             return 0; //@line 86025
            }
            HEAP32[$R_1_i_i + 24 >> 2] = $1084; //@line 86029
            $_sum3233_i_i = $1003 | 16; //@line 86030
            $1165 = HEAP32[$tbase_245_i + ($_sum3233_i_i + $tsize_244_i) >> 2] | 0; //@line 86034
            do {
             if (($1165 | 0) != 0) {
              if ($1165 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
               _abort(); //@line 86042
               return 0; //@line 86042
              } else {
               HEAP32[$R_1_i_i + 16 >> 2] = $1165; //@line 86046
               HEAP32[$1165 + 24 >> 2] = $R_1_i_i; //@line 86048
               break;
              }
             }
            } while (0);
            $1178 = HEAP32[$tbase_245_i + ($_sum2_i23_i + $_sum3233_i_i) >> 2] | 0; //@line 86056
            if (($1178 | 0) == 0) {
             break;
            }
            if ($1178 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
             _abort(); //@line 86065
             return 0; //@line 86065
            } else {
             HEAP32[$R_1_i_i + 20 >> 2] = $1178; //@line 86069
             HEAP32[$1178 + 24 >> 2] = $R_1_i_i; //@line 86071
             break;
            }
           }
          } while (0);
          $oldfirst_0_i_i = $tbase_245_i + (($1041 | $1003) + $tsize_244_i) | 0;
          $qsize_0_i_i = $1041 + $1011 | 0;
         } else {
          $oldfirst_0_i_i = $1005;
          $qsize_0_i_i = $1011;
         }
         $1194 = $oldfirst_0_i_i + 4 | 0; //@line 86087
         HEAP32[$1194 >> 2] = HEAP32[$1194 >> 2] & -2; //@line 86090
         HEAP32[$tbase_245_i + ($_sum_i21_i + 4) >> 2] = $qsize_0_i_i | 1; //@line 86095
         HEAP32[$tbase_245_i + ($qsize_0_i_i + $_sum_i21_i) >> 2] = $qsize_0_i_i; //@line 86099
         $1202 = $qsize_0_i_i >>> 3; //@line 86100
         if ($qsize_0_i_i >>> 0 < 256) {
          $1205 = $1202 << 1; //@line 86103
          $1207 = 62960 + ($1205 << 2) | 0; //@line 86105
          $1208 = HEAP32[15730] | 0; //@line 86106
          $1209 = 1 << $1202; //@line 86107
          do {
           if (($1208 & $1209 | 0) == 0) {
            HEAP32[15730] = $1208 | $1209; //@line 86113
            $F4_0_i_i = $1207;
            $_pre_phi_i25_i = 62960 + ($1205 + 2 << 2) | 0;
           } else {
            $1215 = 62960 + ($1205 + 2 << 2) | 0; //@line 86119
            $1216 = HEAP32[$1215 >> 2] | 0; //@line 86120
            if ($1216 >>> 0 >= (HEAP32[15734] | 0) >>> 0) {
             $F4_0_i_i = $1216;
             $_pre_phi_i25_i = $1215;
             break;
            }
            _abort(); //@line 86128
            return 0; //@line 86128
           }
          } while (0);
          HEAP32[$_pre_phi_i25_i >> 2] = $1010; //@line 86134
          HEAP32[$F4_0_i_i + 12 >> 2] = $1010; //@line 86136
          HEAP32[$tbase_245_i + ($_sum_i21_i + 8) >> 2] = $F4_0_i_i; //@line 86140
          HEAP32[$tbase_245_i + ($_sum_i21_i + 12) >> 2] = $1207; //@line 86144
          break;
         }
         $1228 = $1009; //@line 86147
         $1229 = $qsize_0_i_i >>> 8; //@line 86148
         do {
          if (($1229 | 0) == 0) {
           $I7_0_i_i = 0; //@line 86152
          } else {
           if ($qsize_0_i_i >>> 0 > 16777215) {
            $I7_0_i_i = 31; //@line 86156
            break;
           }
           $1236 = ($1229 + 1048320 | 0) >>> 16 & 8; //@line 86161
           $1237 = $1229 << $1236; //@line 86162
           $1240 = ($1237 + 520192 | 0) >>> 16 & 4; //@line 86165
           $1242 = $1237 << $1240; //@line 86167
           $1245 = ($1242 + 245760 | 0) >>> 16 & 2; //@line 86170
           $1250 = 14 - ($1240 | $1236 | $1245) + ($1242 << $1245 >>> 15) | 0; //@line 86175
           $I7_0_i_i = $qsize_0_i_i >>> (($1250 + 7 | 0) >>> 0) & 1 | $1250 << 1; //@line 86181
          }
         } while (0);
         $1257 = 63224 + ($I7_0_i_i << 2) | 0; //@line 86185
         HEAP32[$tbase_245_i + ($_sum_i21_i + 28) >> 2] = $I7_0_i_i; //@line 86189
         HEAP32[$tbase_245_i + ($_sum_i21_i + 20) >> 2] = 0; //@line 86195
         HEAP32[$tbase_245_i + ($_sum_i21_i + 16) >> 2] = 0; //@line 86197
         $1264 = HEAP32[15731] | 0; //@line 86198
         $1265 = 1 << $I7_0_i_i; //@line 86199
         if (($1264 & $1265 | 0) == 0) {
          HEAP32[15731] = $1264 | $1265; //@line 86204
          HEAP32[$1257 >> 2] = $1228; //@line 86205
          HEAP32[$tbase_245_i + ($_sum_i21_i + 24) >> 2] = $1257; //@line 86210
          HEAP32[$tbase_245_i + ($_sum_i21_i + 12) >> 2] = $1228; //@line 86214
          HEAP32[$tbase_245_i + ($_sum_i21_i + 8) >> 2] = $1228; //@line 86218
          break;
         }
         if (($I7_0_i_i | 0) == 31) {
          $1284 = 0; //@line 86224
         } else {
          $1284 = 25 - ($I7_0_i_i >>> 1) | 0; //@line 86228
         }
         $K8_0_i_i = $qsize_0_i_i << $1284;
         $T_0_i27_i = HEAP32[$1257 >> 2] | 0;
         while (1) {
          if ((HEAP32[$T_0_i27_i + 4 >> 2] & -8 | 0) == ($qsize_0_i_i | 0)) {
           break;
          }
          $1293 = $T_0_i27_i + 16 + ($K8_0_i_i >>> 31 << 2) | 0; //@line 86244
          $1294 = HEAP32[$1293 >> 2] | 0; //@line 86245
          if (($1294 | 0) == 0) {
           label = 20293; //@line 86249
           break;
          } else {
           $K8_0_i_i = $K8_0_i_i << 1;
           $T_0_i27_i = $1294;
          }
         }
         if ((label | 0) == 20293) {
          if ($1293 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
           _abort(); //@line 86260
           return 0; //@line 86260
          } else {
           HEAP32[$1293 >> 2] = $1228; //@line 86263
           HEAP32[$tbase_245_i + ($_sum_i21_i + 24) >> 2] = $T_0_i27_i; //@line 86267
           HEAP32[$tbase_245_i + ($_sum_i21_i + 12) >> 2] = $1228; //@line 86271
           HEAP32[$tbase_245_i + ($_sum_i21_i + 8) >> 2] = $1228; //@line 86275
           break;
          }
         }
         $1310 = $T_0_i27_i + 8 | 0; //@line 86279
         $1311 = HEAP32[$1310 >> 2] | 0; //@line 86280
         $1313 = HEAP32[15734] | 0; //@line 86282
         if ($T_0_i27_i >>> 0 < $1313 >>> 0) {
          _abort(); //@line 86285
          return 0; //@line 86285
         }
         if ($1311 >>> 0 < $1313 >>> 0) {
          _abort(); //@line 86291
          return 0; //@line 86291
         } else {
          HEAP32[$1311 + 12 >> 2] = $1228; //@line 86295
          HEAP32[$1310 >> 2] = $1228; //@line 86296
          HEAP32[$tbase_245_i + ($_sum_i21_i + 8) >> 2] = $1311; //@line 86300
          HEAP32[$tbase_245_i + ($_sum_i21_i + 12) >> 2] = $T_0_i27_i; //@line 86304
          HEAP32[$tbase_245_i + ($_sum_i21_i + 24) >> 2] = 0; //@line 86308
          break;
         }
        }
       } while (0);
       $mem_0 = $tbase_245_i + ($993 | 8) | 0; //@line 86315
       return $mem_0 | 0; //@line 86318
      }
     } while (0);
     $1327 = $890; //@line 86321
     $sp_0_i_i_i = 63368; //@line 86322
     while (1) {
      $1330 = HEAP32[$sp_0_i_i_i >> 2] | 0; //@line 86326
      if ($1330 >>> 0 <= $1327 >>> 0) {
       $1334 = HEAP32[$sp_0_i_i_i + 4 >> 2] | 0; //@line 86330
       $1335 = $1330 + $1334 | 0; //@line 86331
       if ($1335 >>> 0 > $1327 >>> 0) {
        break;
       }
      }
      $sp_0_i_i_i = HEAP32[$sp_0_i_i_i + 8 >> 2] | 0; //@line 86339
     }
     $1341 = $1330 + ($1334 - 39) | 0; //@line 86344
     if (($1341 & 7 | 0) == 0) {
      $1348 = 0; //@line 86348
     } else {
      $1348 = -$1341 & 7; //@line 86352
     }
     $1349 = $1330 + ($1334 - 47 + $1348) | 0; //@line 86356
     $1353 = $1349 >>> 0 < ($890 + 16 | 0) >>> 0 ? $1327 : $1349; //@line 86360
     $1354 = $1353 + 8 | 0; //@line 86361
     $1358 = $tbase_245_i + 8 | 0; //@line 86365
     if (($1358 & 7 | 0) == 0) {
      $1364 = 0; //@line 86369
     } else {
      $1364 = -$1358 & 7; //@line 86373
     }
     $1367 = $tsize_244_i - 40 - $1364 | 0; //@line 86378
     HEAP32[15736] = $tbase_245_i + $1364; //@line 86379
     HEAP32[15733] = $1367; //@line 86380
     HEAP32[$tbase_245_i + ($1364 + 4) >> 2] = $1367 | 1; //@line 86385
     HEAP32[$tbase_245_i + ($tsize_244_i - 36) >> 2] = 40; //@line 86389
     HEAP32[15737] = HEAP32[15680]; //@line 86391
     HEAP32[$1353 + 4 >> 2] = 27; //@line 86394
     HEAP32[$1354 >> 2] = HEAP32[15842]; //@line 86395
     HEAP32[$1354 + 4 >> 2] = HEAP32[63372 >> 2]; //@line 86395
     HEAP32[$1354 + 8 >> 2] = HEAP32[63376 >> 2]; //@line 86395
     HEAP32[$1354 + 12 >> 2] = HEAP32[63380 >> 2]; //@line 86395
     HEAP32[15842] = $tbase_245_i; //@line 86396
     HEAP32[15843] = $tsize_244_i; //@line 86397
     HEAP32[15845] = 0; //@line 86398
     HEAP32[15844] = $1354; //@line 86399
     $1377 = $1353 + 28 | 0; //@line 86401
     HEAP32[$1377 >> 2] = 7; //@line 86402
     if (($1353 + 32 | 0) >>> 0 < $1335 >>> 0) {
      $1380 = $1377; //@line 86406
      while (1) {
       $1381 = $1380 + 4 | 0; //@line 86409
       HEAP32[$1381 >> 2] = 7; //@line 86410
       if (($1380 + 8 | 0) >>> 0 < $1335 >>> 0) {
        $1380 = $1381; //@line 86415
       } else {
        break;
       }
      }
     }
     if (($1353 | 0) == ($1327 | 0)) {
      break;
     }
     $1389 = $1353 - $890 | 0; //@line 86427
     $1392 = $1327 + ($1389 + 4) | 0; //@line 86431
     HEAP32[$1392 >> 2] = HEAP32[$1392 >> 2] & -2; //@line 86434
     HEAP32[$890 + 4 >> 2] = $1389 | 1; //@line 86437
     HEAP32[$1327 + $1389 >> 2] = $1389; //@line 86439
     $1398 = $1389 >>> 3; //@line 86440
     if ($1389 >>> 0 < 256) {
      $1401 = $1398 << 1; //@line 86443
      $1403 = 62960 + ($1401 << 2) | 0; //@line 86445
      $1404 = HEAP32[15730] | 0; //@line 86446
      $1405 = 1 << $1398; //@line 86447
      do {
       if (($1404 & $1405 | 0) == 0) {
        HEAP32[15730] = $1404 | $1405; //@line 86453
        $F_0_i_i = $1403;
        $_pre_phi_i_i = 62960 + ($1401 + 2 << 2) | 0;
       } else {
        $1411 = 62960 + ($1401 + 2 << 2) | 0; //@line 86459
        $1412 = HEAP32[$1411 >> 2] | 0; //@line 86460
        if ($1412 >>> 0 >= (HEAP32[15734] | 0) >>> 0) {
         $F_0_i_i = $1412;
         $_pre_phi_i_i = $1411;
         break;
        }
        _abort(); //@line 86468
        return 0; //@line 86468
       }
      } while (0);
      HEAP32[$_pre_phi_i_i >> 2] = $890; //@line 86474
      HEAP32[$F_0_i_i + 12 >> 2] = $890; //@line 86476
      HEAP32[$890 + 8 >> 2] = $F_0_i_i; //@line 86478
      HEAP32[$890 + 12 >> 2] = $1403; //@line 86480
      break;
     }
     $1422 = $890; //@line 86483
     $1423 = $1389 >>> 8; //@line 86484
     do {
      if (($1423 | 0) == 0) {
       $I1_0_i_i = 0; //@line 86488
      } else {
       if ($1389 >>> 0 > 16777215) {
        $I1_0_i_i = 31; //@line 86492
        break;
       }
       $1430 = ($1423 + 1048320 | 0) >>> 16 & 8; //@line 86497
       $1431 = $1423 << $1430; //@line 86498
       $1434 = ($1431 + 520192 | 0) >>> 16 & 4; //@line 86501
       $1436 = $1431 << $1434; //@line 86503
       $1439 = ($1436 + 245760 | 0) >>> 16 & 2; //@line 86506
       $1444 = 14 - ($1434 | $1430 | $1439) + ($1436 << $1439 >>> 15) | 0; //@line 86511
       $I1_0_i_i = $1389 >>> (($1444 + 7 | 0) >>> 0) & 1 | $1444 << 1; //@line 86517
      }
     } while (0);
     $1451 = 63224 + ($I1_0_i_i << 2) | 0; //@line 86521
     HEAP32[$890 + 28 >> 2] = $I1_0_i_i; //@line 86524
     HEAP32[$890 + 20 >> 2] = 0; //@line 86526
     HEAP32[$890 + 16 >> 2] = 0; //@line 86528
     $1455 = HEAP32[15731] | 0; //@line 86529
     $1456 = 1 << $I1_0_i_i; //@line 86530
     if (($1455 & $1456 | 0) == 0) {
      HEAP32[15731] = $1455 | $1456; //@line 86535
      HEAP32[$1451 >> 2] = $1422; //@line 86536
      HEAP32[$890 + 24 >> 2] = $1451; //@line 86539
      HEAP32[$890 + 12 >> 2] = $890; //@line 86541
      HEAP32[$890 + 8 >> 2] = $890; //@line 86543
      break;
     }
     if (($I1_0_i_i | 0) == 31) {
      $1471 = 0; //@line 86549
     } else {
      $1471 = 25 - ($I1_0_i_i >>> 1) | 0; //@line 86553
     }
     $K2_0_i_i = $1389 << $1471;
     $T_0_i_i = HEAP32[$1451 >> 2] | 0;
     while (1) {
      if ((HEAP32[$T_0_i_i + 4 >> 2] & -8 | 0) == ($1389 | 0)) {
       break;
      }
      $1480 = $T_0_i_i + 16 + ($K2_0_i_i >>> 31 << 2) | 0; //@line 86569
      $1481 = HEAP32[$1480 >> 2] | 0; //@line 86570
      if (($1481 | 0) == 0) {
       label = 20328; //@line 86574
       break;
      } else {
       $K2_0_i_i = $K2_0_i_i << 1;
       $T_0_i_i = $1481;
      }
     }
     if ((label | 0) == 20328) {
      if ($1480 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
       _abort(); //@line 86585
       return 0; //@line 86585
      } else {
       HEAP32[$1480 >> 2] = $1422; //@line 86588
       HEAP32[$890 + 24 >> 2] = $T_0_i_i; //@line 86591
       HEAP32[$890 + 12 >> 2] = $890; //@line 86593
       HEAP32[$890 + 8 >> 2] = $890; //@line 86595
       break;
      }
     }
     $1494 = $T_0_i_i + 8 | 0; //@line 86599
     $1495 = HEAP32[$1494 >> 2] | 0; //@line 86600
     $1497 = HEAP32[15734] | 0; //@line 86602
     if ($T_0_i_i >>> 0 < $1497 >>> 0) {
      _abort(); //@line 86605
      return 0; //@line 86605
     }
     if ($1495 >>> 0 < $1497 >>> 0) {
      _abort(); //@line 86611
      return 0; //@line 86611
     } else {
      HEAP32[$1495 + 12 >> 2] = $1422; //@line 86615
      HEAP32[$1494 >> 2] = $1422; //@line 86616
      HEAP32[$890 + 8 >> 2] = $1495; //@line 86619
      HEAP32[$890 + 12 >> 2] = $T_0_i_i; //@line 86622
      HEAP32[$890 + 24 >> 2] = 0; //@line 86624
      break;
     }
    }
   } while (0);
   $1507 = HEAP32[15733] | 0; //@line 86629
   if ($1507 >>> 0 <= $nb_0 >>> 0) {
    break;
   }
   $1510 = $1507 - $nb_0 | 0; //@line 86634
   HEAP32[15733] = $1510; //@line 86635
   $1511 = HEAP32[15736] | 0; //@line 86636
   $1512 = $1511; //@line 86637
   HEAP32[15736] = $1512 + $nb_0; //@line 86640
   HEAP32[$1512 + ($nb_0 + 4) >> 2] = $1510 | 1; //@line 86645
   HEAP32[$1511 + 4 >> 2] = $nb_0 | 3; //@line 86648
   $mem_0 = $1511 + 8 | 0; //@line 86651
   return $mem_0 | 0; //@line 86654
  }
 } while (0);
 HEAP32[(___errno_location() | 0) >> 2] = 12; //@line 86658
 $mem_0 = 0; //@line 86659
 return $mem_0 | 0; //@line 86662
}
function _free($mem) {
 $mem = $mem | 0;
 var $3 = 0, $4 = 0, $5 = 0, $10 = 0, $11 = 0, $14 = 0, $15 = 0, $16 = 0, $21 = 0, $_sum233 = 0, $24 = 0, $25 = 0, $26 = 0, $32 = 0, $37 = 0, $40 = 0, $43 = 0, $64 = 0, $_pre_phi307 = 0, $69 = 0, $72 = 0, $75 = 0, $80 = 0, $84 = 0, $88 = 0, $94 = 0, $95 = 0, $99 = 0, $100 = 0, $RP_0 = 0, $R_0 = 0, $102 = 0, $103 = 0, $106 = 0, $107 = 0, $R_1 = 0, $118 = 0, $120 = 0, $134 = 0, $151 = 0, $164 = 0, $177 = 0, $psize_0 = 0, $p_0 = 0, $189 = 0, $193 = 0, $194 = 0, $204 = 0, $220 = 0, $227 = 0, $228 = 0, $233 = 0, $236 = 0, $239 = 0, $262 = 0, $_pre_phi305 = 0, $267 = 0, $270 = 0, $273 = 0, $278 = 0, $283 = 0, $287 = 0, $293 = 0, $294 = 0, $298 = 0, $299 = 0, $RP9_0 = 0, $R7_0 = 0, $301 = 0, $302 = 0, $305 = 0, $306 = 0, $R7_1 = 0, $318 = 0, $320 = 0, $334 = 0, $351 = 0, $364 = 0, $psize_1 = 0, $390 = 0, $393 = 0, $395 = 0, $396 = 0, $397 = 0, $403 = 0, $404 = 0, $_pre_phi = 0, $F16_0 = 0, $414 = 0, $415 = 0, $422 = 0, $423 = 0, $426 = 0, $428 = 0, $431 = 0, $436 = 0, $I18_0 = 0, $443 = 0, $447 = 0, $448 = 0, $463 = 0, $T_0 = 0, $K19_0 = 0, $472 = 0, $473 = 0, $486 = 0, $487 = 0, $489 = 0, $501 = 0, $sp_0_in_i = 0, $sp_0_i = 0, label = 0;
 if (($mem | 0) == 0) {
  return;
 }
 $3 = $mem - 8 | 0; //@line 86730
 $4 = $3; //@line 86731
 $5 = HEAP32[15734] | 0; //@line 86732
 if ($3 >>> 0 < $5 >>> 0) {
  _abort(); //@line 86735
 }
 $10 = HEAP32[$mem - 4 >> 2] | 0; //@line 86740
 $11 = $10 & 3; //@line 86741
 if (($11 | 0) == 1) {
  _abort(); //@line 86744
 }
 $14 = $10 & -8; //@line 86747
 $15 = $mem + ($14 - 8) | 0; //@line 86749
 $16 = $15; //@line 86750
 L26430 : do {
  if (($10 & 1 | 0) == 0) {
   $21 = HEAP32[$3 >> 2] | 0; //@line 86756
   if (($11 | 0) == 0) {
    return;
   }
   $_sum233 = -8 - $21 | 0; //@line 86762
   $24 = $mem + $_sum233 | 0; //@line 86763
   $25 = $24; //@line 86764
   $26 = $21 + $14 | 0; //@line 86765
   if ($24 >>> 0 < $5 >>> 0) {
    _abort(); //@line 86768
   }
   if (($25 | 0) == (HEAP32[15735] | 0)) {
    $177 = $mem + ($14 - 4) | 0; //@line 86776
    if ((HEAP32[$177 >> 2] & 3 | 0) != 3) {
     $p_0 = $25;
     $psize_0 = $26;
     break;
    }
    HEAP32[15732] = $26; //@line 86784
    HEAP32[$177 >> 2] = HEAP32[$177 >> 2] & -2; //@line 86787
    HEAP32[$mem + ($_sum233 + 4) >> 2] = $26 | 1; //@line 86792
    HEAP32[$15 >> 2] = $26; //@line 86794
    return;
   }
   $32 = $21 >>> 3; //@line 86798
   if ($21 >>> 0 < 256) {
    $37 = HEAP32[$mem + ($_sum233 + 8) >> 2] | 0; //@line 86804
    $40 = HEAP32[$mem + ($_sum233 + 12) >> 2] | 0; //@line 86808
    $43 = 62960 + ($32 << 1 << 2) | 0; //@line 86811
    do {
     if (($37 | 0) != ($43 | 0)) {
      if ($37 >>> 0 < $5 >>> 0) {
       _abort(); //@line 86818
      }
      if ((HEAP32[$37 + 12 >> 2] | 0) == ($25 | 0)) {
       break;
      }
      _abort(); //@line 86827
     }
    } while (0);
    if (($40 | 0) == ($37 | 0)) {
     HEAP32[15730] = HEAP32[15730] & ~(1 << $32); //@line 86837
     $p_0 = $25;
     $psize_0 = $26;
     break;
    }
    do {
     if (($40 | 0) == ($43 | 0)) {
      $_pre_phi307 = $40 + 8 | 0; //@line 86845
     } else {
      if ($40 >>> 0 < $5 >>> 0) {
       _abort(); //@line 86850
      }
      $64 = $40 + 8 | 0; //@line 86853
      if ((HEAP32[$64 >> 2] | 0) == ($25 | 0)) {
       $_pre_phi307 = $64; //@line 86857
       break;
      }
      _abort(); //@line 86860
     }
    } while (0);
    HEAP32[$37 + 12 >> 2] = $40; //@line 86866
    HEAP32[$_pre_phi307 >> 2] = $37; //@line 86867
    $p_0 = $25;
    $psize_0 = $26;
    break;
   }
   $69 = $24; //@line 86871
   $72 = HEAP32[$mem + ($_sum233 + 24) >> 2] | 0; //@line 86875
   $75 = HEAP32[$mem + ($_sum233 + 12) >> 2] | 0; //@line 86879
   do {
    if (($75 | 0) == ($69 | 0)) {
     $94 = $mem + ($_sum233 + 20) | 0; //@line 86885
     $95 = HEAP32[$94 >> 2] | 0; //@line 86886
     if (($95 | 0) == 0) {
      $99 = $mem + ($_sum233 + 16) | 0; //@line 86891
      $100 = HEAP32[$99 >> 2] | 0; //@line 86892
      if (($100 | 0) == 0) {
       $R_1 = 0; //@line 86895
       break;
      } else {
       $R_0 = $100;
       $RP_0 = $99;
      }
     } else {
      $R_0 = $95;
      $RP_0 = $94;
     }
     while (1) {
      $102 = $R_0 + 20 | 0; //@line 86906
      $103 = HEAP32[$102 >> 2] | 0; //@line 86907
      if (($103 | 0) != 0) {
       $R_0 = $103;
       $RP_0 = $102;
       continue;
      }
      $106 = $R_0 + 16 | 0; //@line 86913
      $107 = HEAP32[$106 >> 2] | 0; //@line 86914
      if (($107 | 0) == 0) {
       break;
      } else {
       $R_0 = $107;
       $RP_0 = $106;
      }
     }
     if ($RP_0 >>> 0 < $5 >>> 0) {
      _abort(); //@line 86925
     } else {
      HEAP32[$RP_0 >> 2] = 0; //@line 86928
      $R_1 = $R_0; //@line 86929
      break;
     }
    } else {
     $80 = HEAP32[$mem + ($_sum233 + 8) >> 2] | 0; //@line 86936
     if ($80 >>> 0 < $5 >>> 0) {
      _abort(); //@line 86940
     }
     $84 = $80 + 12 | 0; //@line 86943
     if ((HEAP32[$84 >> 2] | 0) != ($69 | 0)) {
      _abort(); //@line 86947
     }
     $88 = $75 + 8 | 0; //@line 86950
     if ((HEAP32[$88 >> 2] | 0) == ($69 | 0)) {
      HEAP32[$84 >> 2] = $75; //@line 86954
      HEAP32[$88 >> 2] = $80; //@line 86955
      $R_1 = $75; //@line 86956
      break;
     } else {
      _abort(); //@line 86959
     }
    }
   } while (0);
   if (($72 | 0) == 0) {
    $p_0 = $25;
    $psize_0 = $26;
    break;
   }
   $118 = $mem + ($_sum233 + 28) | 0; //@line 86972
   $120 = 63224 + (HEAP32[$118 >> 2] << 2) | 0; //@line 86974
   do {
    if (($69 | 0) == (HEAP32[$120 >> 2] | 0)) {
     HEAP32[$120 >> 2] = $R_1; //@line 86979
     if (($R_1 | 0) != 0) {
      break;
     }
     HEAP32[15731] = HEAP32[15731] & ~(1 << HEAP32[$118 >> 2]); //@line 86989
     $p_0 = $25;
     $psize_0 = $26;
     break L26430;
    } else {
     if ($72 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
      _abort(); //@line 86997
     }
     $134 = $72 + 16 | 0; //@line 87000
     if ((HEAP32[$134 >> 2] | 0) == ($69 | 0)) {
      HEAP32[$134 >> 2] = $R_1; //@line 87004
     } else {
      HEAP32[$72 + 20 >> 2] = $R_1; //@line 87007
     }
     if (($R_1 | 0) == 0) {
      $p_0 = $25;
      $psize_0 = $26;
      break L26430;
     }
    }
   } while (0);
   if ($R_1 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
    _abort(); //@line 87020
   }
   HEAP32[$R_1 + 24 >> 2] = $72; //@line 87024
   $151 = HEAP32[$mem + ($_sum233 + 16) >> 2] | 0; //@line 87028
   do {
    if (($151 | 0) != 0) {
     if ($151 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
      _abort(); //@line 87036
     } else {
      HEAP32[$R_1 + 16 >> 2] = $151; //@line 87040
      HEAP32[$151 + 24 >> 2] = $R_1; //@line 87042
      break;
     }
    }
   } while (0);
   $164 = HEAP32[$mem + ($_sum233 + 20) >> 2] | 0; //@line 87050
   if (($164 | 0) == 0) {
    $p_0 = $25;
    $psize_0 = $26;
    break;
   }
   if ($164 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
    _abort(); //@line 87060
   } else {
    HEAP32[$R_1 + 20 >> 2] = $164; //@line 87064
    HEAP32[$164 + 24 >> 2] = $R_1; //@line 87066
    $p_0 = $25;
    $psize_0 = $26;
    break;
   }
  } else {
   $p_0 = $4;
   $psize_0 = $14;
  }
 } while (0);
 $189 = $p_0; //@line 87076
 if ($189 >>> 0 >= $15 >>> 0) {
  _abort(); //@line 87079
 }
 $193 = $mem + ($14 - 4) | 0; //@line 87084
 $194 = HEAP32[$193 >> 2] | 0; //@line 87085
 if (($194 & 1 | 0) == 0) {
  _abort(); //@line 87089
 }
 do {
  if (($194 & 2 | 0) == 0) {
   if (($16 | 0) == (HEAP32[15736] | 0)) {
    $204 = (HEAP32[15733] | 0) + $psize_0 | 0; //@line 87100
    HEAP32[15733] = $204; //@line 87101
    HEAP32[15736] = $p_0; //@line 87102
    HEAP32[$p_0 + 4 >> 2] = $204 | 1; //@line 87105
    if (($p_0 | 0) == (HEAP32[15735] | 0)) {
     HEAP32[15735] = 0; //@line 87109
     HEAP32[15732] = 0; //@line 87110
    }
    if ($204 >>> 0 <= (HEAP32[15737] | 0) >>> 0) {
     return;
    }
    _sys_trim(0) | 0; //@line 87118
    return;
   }
   if (($16 | 0) == (HEAP32[15735] | 0)) {
    $220 = (HEAP32[15732] | 0) + $psize_0 | 0; //@line 87126
    HEAP32[15732] = $220; //@line 87127
    HEAP32[15735] = $p_0; //@line 87128
    HEAP32[$p_0 + 4 >> 2] = $220 | 1; //@line 87131
    HEAP32[$189 + $220 >> 2] = $220; //@line 87134
    return;
   }
   $227 = ($194 & -8) + $psize_0 | 0; //@line 87139
   $228 = $194 >>> 3; //@line 87140
   L26535 : do {
    if ($194 >>> 0 < 256) {
     $233 = HEAP32[$mem + $14 >> 2] | 0; //@line 87146
     $236 = HEAP32[$mem + ($14 | 4) >> 2] | 0; //@line 87150
     $239 = 62960 + ($228 << 1 << 2) | 0; //@line 87153
     do {
      if (($233 | 0) != ($239 | 0)) {
       if ($233 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
        _abort(); //@line 87161
       }
       if ((HEAP32[$233 + 12 >> 2] | 0) == ($16 | 0)) {
        break;
       }
       _abort(); //@line 87170
      }
     } while (0);
     if (($236 | 0) == ($233 | 0)) {
      HEAP32[15730] = HEAP32[15730] & ~(1 << $228); //@line 87180
      break;
     }
     do {
      if (($236 | 0) == ($239 | 0)) {
       $_pre_phi305 = $236 + 8 | 0; //@line 87187
      } else {
       if ($236 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
        _abort(); //@line 87193
       }
       $262 = $236 + 8 | 0; //@line 87196
       if ((HEAP32[$262 >> 2] | 0) == ($16 | 0)) {
        $_pre_phi305 = $262; //@line 87200
        break;
       }
       _abort(); //@line 87203
      }
     } while (0);
     HEAP32[$233 + 12 >> 2] = $236; //@line 87209
     HEAP32[$_pre_phi305 >> 2] = $233; //@line 87210
    } else {
     $267 = $15; //@line 87212
     $270 = HEAP32[$mem + ($14 + 16) >> 2] | 0; //@line 87216
     $273 = HEAP32[$mem + ($14 | 4) >> 2] | 0; //@line 87220
     do {
      if (($273 | 0) == ($267 | 0)) {
       $293 = $mem + ($14 + 12) | 0; //@line 87226
       $294 = HEAP32[$293 >> 2] | 0; //@line 87227
       if (($294 | 0) == 0) {
        $298 = $mem + ($14 + 8) | 0; //@line 87232
        $299 = HEAP32[$298 >> 2] | 0; //@line 87233
        if (($299 | 0) == 0) {
         $R7_1 = 0; //@line 87236
         break;
        } else {
         $R7_0 = $299;
         $RP9_0 = $298;
        }
       } else {
        $R7_0 = $294;
        $RP9_0 = $293;
       }
       while (1) {
        $301 = $R7_0 + 20 | 0; //@line 87247
        $302 = HEAP32[$301 >> 2] | 0; //@line 87248
        if (($302 | 0) != 0) {
         $R7_0 = $302;
         $RP9_0 = $301;
         continue;
        }
        $305 = $R7_0 + 16 | 0; //@line 87254
        $306 = HEAP32[$305 >> 2] | 0; //@line 87255
        if (($306 | 0) == 0) {
         break;
        } else {
         $R7_0 = $306;
         $RP9_0 = $305;
        }
       }
       if ($RP9_0 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
        _abort(); //@line 87267
       } else {
        HEAP32[$RP9_0 >> 2] = 0; //@line 87270
        $R7_1 = $R7_0; //@line 87271
        break;
       }
      } else {
       $278 = HEAP32[$mem + $14 >> 2] | 0; //@line 87277
       if ($278 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
        _abort(); //@line 87282
       }
       $283 = $278 + 12 | 0; //@line 87285
       if ((HEAP32[$283 >> 2] | 0) != ($267 | 0)) {
        _abort(); //@line 87289
       }
       $287 = $273 + 8 | 0; //@line 87292
       if ((HEAP32[$287 >> 2] | 0) == ($267 | 0)) {
        HEAP32[$283 >> 2] = $273; //@line 87296
        HEAP32[$287 >> 2] = $278; //@line 87297
        $R7_1 = $273; //@line 87298
        break;
       } else {
        _abort(); //@line 87301
       }
      }
     } while (0);
     if (($270 | 0) == 0) {
      break;
     }
     $318 = $mem + ($14 + 20) | 0; //@line 87313
     $320 = 63224 + (HEAP32[$318 >> 2] << 2) | 0; //@line 87315
     do {
      if (($267 | 0) == (HEAP32[$320 >> 2] | 0)) {
       HEAP32[$320 >> 2] = $R7_1; //@line 87320
       if (($R7_1 | 0) != 0) {
        break;
       }
       HEAP32[15731] = HEAP32[15731] & ~(1 << HEAP32[$318 >> 2]); //@line 87330
       break L26535;
      } else {
       if ($270 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
        _abort(); //@line 87337
       }
       $334 = $270 + 16 | 0; //@line 87340
       if ((HEAP32[$334 >> 2] | 0) == ($267 | 0)) {
        HEAP32[$334 >> 2] = $R7_1; //@line 87344
       } else {
        HEAP32[$270 + 20 >> 2] = $R7_1; //@line 87347
       }
       if (($R7_1 | 0) == 0) {
        break L26535;
       }
      }
     } while (0);
     if ($R7_1 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
      _abort(); //@line 87359
     }
     HEAP32[$R7_1 + 24 >> 2] = $270; //@line 87363
     $351 = HEAP32[$mem + ($14 + 8) >> 2] | 0; //@line 87367
     do {
      if (($351 | 0) != 0) {
       if ($351 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
        _abort(); //@line 87375
       } else {
        HEAP32[$R7_1 + 16 >> 2] = $351; //@line 87379
        HEAP32[$351 + 24 >> 2] = $R7_1; //@line 87381
        break;
       }
      }
     } while (0);
     $364 = HEAP32[$mem + ($14 + 12) >> 2] | 0; //@line 87389
     if (($364 | 0) == 0) {
      break;
     }
     if ($364 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
      _abort(); //@line 87398
     } else {
      HEAP32[$R7_1 + 20 >> 2] = $364; //@line 87402
      HEAP32[$364 + 24 >> 2] = $R7_1; //@line 87404
      break;
     }
    }
   } while (0);
   HEAP32[$p_0 + 4 >> 2] = $227 | 1; //@line 87411
   HEAP32[$189 + $227 >> 2] = $227; //@line 87414
   if (($p_0 | 0) != (HEAP32[15735] | 0)) {
    $psize_1 = $227; //@line 87418
    break;
   }
   HEAP32[15732] = $227; //@line 87421
   return;
  } else {
   HEAP32[$193 >> 2] = $194 & -2; //@line 87426
   HEAP32[$p_0 + 4 >> 2] = $psize_0 | 1; //@line 87429
   HEAP32[$189 + $psize_0 >> 2] = $psize_0; //@line 87432
   $psize_1 = $psize_0; //@line 87433
  }
 } while (0);
 $390 = $psize_1 >>> 3; //@line 87437
 if ($psize_1 >>> 0 < 256) {
  $393 = $390 << 1; //@line 87440
  $395 = 62960 + ($393 << 2) | 0; //@line 87442
  $396 = HEAP32[15730] | 0; //@line 87443
  $397 = 1 << $390; //@line 87444
  do {
   if (($396 & $397 | 0) == 0) {
    HEAP32[15730] = $396 | $397; //@line 87450
    $F16_0 = $395;
    $_pre_phi = 62960 + ($393 + 2 << 2) | 0;
   } else {
    $403 = 62960 + ($393 + 2 << 2) | 0; //@line 87456
    $404 = HEAP32[$403 >> 2] | 0; //@line 87457
    if ($404 >>> 0 >= (HEAP32[15734] | 0) >>> 0) {
     $F16_0 = $404;
     $_pre_phi = $403;
     break;
    }
    _abort(); //@line 87465
   }
  } while (0);
  HEAP32[$_pre_phi >> 2] = $p_0; //@line 87471
  HEAP32[$F16_0 + 12 >> 2] = $p_0; //@line 87473
  HEAP32[$p_0 + 8 >> 2] = $F16_0; //@line 87475
  HEAP32[$p_0 + 12 >> 2] = $395; //@line 87477
  return;
 }
 $414 = $p_0; //@line 87481
 $415 = $psize_1 >>> 8; //@line 87482
 do {
  if (($415 | 0) == 0) {
   $I18_0 = 0; //@line 87486
  } else {
   if ($psize_1 >>> 0 > 16777215) {
    $I18_0 = 31; //@line 87490
    break;
   }
   $422 = ($415 + 1048320 | 0) >>> 16 & 8; //@line 87495
   $423 = $415 << $422; //@line 87496
   $426 = ($423 + 520192 | 0) >>> 16 & 4; //@line 87499
   $428 = $423 << $426; //@line 87501
   $431 = ($428 + 245760 | 0) >>> 16 & 2; //@line 87504
   $436 = 14 - ($426 | $422 | $431) + ($428 << $431 >>> 15) | 0; //@line 87509
   $I18_0 = $psize_1 >>> (($436 + 7 | 0) >>> 0) & 1 | $436 << 1; //@line 87515
  }
 } while (0);
 $443 = 63224 + ($I18_0 << 2) | 0; //@line 87519
 HEAP32[$p_0 + 28 >> 2] = $I18_0; //@line 87522
 HEAP32[$p_0 + 20 >> 2] = 0; //@line 87524
 HEAP32[$p_0 + 16 >> 2] = 0; //@line 87526
 $447 = HEAP32[15731] | 0; //@line 87527
 $448 = 1 << $I18_0; //@line 87528
 do {
  if (($447 & $448 | 0) == 0) {
   HEAP32[15731] = $447 | $448; //@line 87534
   HEAP32[$443 >> 2] = $414; //@line 87535
   HEAP32[$p_0 + 24 >> 2] = $443; //@line 87538
   HEAP32[$p_0 + 12 >> 2] = $p_0; //@line 87540
   HEAP32[$p_0 + 8 >> 2] = $p_0; //@line 87542
  } else {
   if (($I18_0 | 0) == 31) {
    $463 = 0; //@line 87547
   } else {
    $463 = 25 - ($I18_0 >>> 1) | 0; //@line 87551
   }
   $K19_0 = $psize_1 << $463;
   $T_0 = HEAP32[$443 >> 2] | 0;
   while (1) {
    if ((HEAP32[$T_0 + 4 >> 2] & -8 | 0) == ($psize_1 | 0)) {
     break;
    }
    $472 = $T_0 + 16 + ($K19_0 >>> 31 << 2) | 0; //@line 87567
    $473 = HEAP32[$472 >> 2] | 0; //@line 87568
    if (($473 | 0) == 0) {
     label = 20507; //@line 87572
     break;
    } else {
     $K19_0 = $K19_0 << 1;
     $T_0 = $473;
    }
   }
   if ((label | 0) == 20507) {
    if ($472 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
     _abort(); //@line 87583
    } else {
     HEAP32[$472 >> 2] = $414; //@line 87586
     HEAP32[$p_0 + 24 >> 2] = $T_0; //@line 87589
     HEAP32[$p_0 + 12 >> 2] = $p_0; //@line 87591
     HEAP32[$p_0 + 8 >> 2] = $p_0; //@line 87593
     break;
    }
   }
   $486 = $T_0 + 8 | 0; //@line 87597
   $487 = HEAP32[$486 >> 2] | 0; //@line 87598
   $489 = HEAP32[15734] | 0; //@line 87600
   if ($T_0 >>> 0 < $489 >>> 0) {
    _abort(); //@line 87603
   }
   if ($487 >>> 0 < $489 >>> 0) {
    _abort(); //@line 87609
   } else {
    HEAP32[$487 + 12 >> 2] = $414; //@line 87613
    HEAP32[$486 >> 2] = $414; //@line 87614
    HEAP32[$p_0 + 8 >> 2] = $487; //@line 87617
    HEAP32[$p_0 + 12 >> 2] = $T_0; //@line 87620
    HEAP32[$p_0 + 24 >> 2] = 0; //@line 87622
    break;
   }
  }
 } while (0);
 $501 = (HEAP32[15738] | 0) - 1 | 0; //@line 87628
 HEAP32[15738] = $501; //@line 87629
 if (($501 | 0) == 0) {
  $sp_0_in_i = 63376; //@line 87632
 } else {
  return;
 }
 while (1) {
  $sp_0_i = HEAP32[$sp_0_in_i >> 2] | 0; //@line 87639
  if (($sp_0_i | 0) == 0) {
   break;
  } else {
   $sp_0_in_i = $sp_0_i + 8 | 0; //@line 87645
  }
 }
 HEAP32[15738] = -1; //@line 87648
 return;
}
function _realloc($oldmem, $bytes) {
 $oldmem = $oldmem | 0;
 $bytes = $bytes | 0;
 var $14 = 0, $17 = 0, $23 = 0, $28 = 0, $33 = 0, $35 = 0, $mem_0 = 0;
 if (($oldmem | 0) == 0) {
  $mem_0 = _malloc($bytes) | 0; //@line 87666
  return $mem_0 | 0; //@line 87669
 }
 if ($bytes >>> 0 > 4294967231) {
  HEAP32[(___errno_location() | 0) >> 2] = 12; //@line 87674
  $mem_0 = 0; //@line 87675
  return $mem_0 | 0; //@line 87678
 }
 if ($bytes >>> 0 < 11) {
  $14 = 16; //@line 87682
 } else {
  $14 = $bytes + 11 & -8; //@line 87686
 }
 $17 = _try_realloc_chunk($oldmem - 8 | 0, $14) | 0; //@line 87691
 if (($17 | 0) != 0) {
  $mem_0 = $17 + 8 | 0; //@line 87696
  return $mem_0 | 0; //@line 87699
 }
 $23 = _malloc($bytes) | 0; //@line 87701
 if (($23 | 0) == 0) {
  $mem_0 = 0; //@line 87704
  return $mem_0 | 0; //@line 87707
 }
 $28 = HEAP32[$oldmem - 4 >> 2] | 0; //@line 87711
 $33 = ($28 & -8) - (($28 & 3 | 0) == 0 ? 8 : 4) | 0; //@line 87716
 $35 = $33 >>> 0 < $bytes >>> 0 ? $33 : $bytes; //@line 87718
 _memcpy($23 | 0, $oldmem | 0, $35) | 0; //@line 87719
 _free($oldmem); //@line 87720
 $mem_0 = $23; //@line 87721
 return $mem_0 | 0; //@line 87724
}
function _sys_trim($pad) {
 $pad = $pad | 0;
 var $4 = 0, $15 = 0, $19 = 0, $22 = 0, $28 = 0, $29 = 0, $sp_0_i = 0, $32 = 0, $41 = 0, $_0_i = 0, $48 = 0, $51 = 0, $59 = 0, $60 = 0, $66 = 0, $73 = 0, $75 = 0, $76 = 0, $78 = 0, $85 = 0, $88 = 0, $released_2 = 0;
 do {
  if ((HEAP32[15676] | 0) == 0) {
   $4 = _sysconf(8) | 0; //@line 87748
   if (($4 - 1 & $4 | 0) == 0) {
    HEAP32[15678] = $4; //@line 87753
    HEAP32[15677] = $4; //@line 87754
    HEAP32[15679] = -1; //@line 87755
    HEAP32[15680] = 2097152; //@line 87756
    HEAP32[15681] = 0; //@line 87757
    HEAP32[15841] = 0; //@line 87758
    HEAP32[15676] = (_time(0) | 0) & -16 ^ 1431655768; //@line 87762
    break;
   } else {
    _abort(); //@line 87765
    return 0; //@line 87765
   }
  }
 } while (0);
 if ($pad >>> 0 >= 4294967232) {
  $released_2 = 0; //@line 87772
  return $released_2 | 0; //@line 87775
 }
 $15 = HEAP32[15736] | 0; //@line 87777
 if (($15 | 0) == 0) {
  $released_2 = 0; //@line 87780
  return $released_2 | 0; //@line 87783
 }
 $19 = HEAP32[15733] | 0; //@line 87786
 do {
  if ($19 >>> 0 > ($pad + 40 | 0) >>> 0) {
   $22 = HEAP32[15678] | 0; //@line 87790
   $28 = Math_imul((((-40 - $pad - 1 + $19 + $22 | 0) >>> 0) / ($22 >>> 0) | 0) - 1 | 0, $22) | 0; //@line 87797
   $29 = $15; //@line 87798
   $sp_0_i = 63368; //@line 87799
   while (1) {
    $32 = HEAP32[$sp_0_i >> 2] | 0; //@line 87803
    if ($32 >>> 0 <= $29 >>> 0) {
     if (($32 + (HEAP32[$sp_0_i + 4 >> 2] | 0) | 0) >>> 0 > $29 >>> 0) {
      $_0_i = $sp_0_i; //@line 87811
      break;
     }
    }
    $41 = HEAP32[$sp_0_i + 8 >> 2] | 0; //@line 87816
    if (($41 | 0) == 0) {
     $_0_i = 0; //@line 87819
     break;
    } else {
     $sp_0_i = $41; //@line 87822
    }
   }
   if ((HEAP32[$_0_i + 12 >> 2] & 8 | 0) != 0) {
    break;
   }
   $48 = _sbrk(0) | 0; //@line 87833
   $51 = $_0_i + 4 | 0; //@line 87836
   if (($48 | 0) != ((HEAP32[$_0_i >> 2] | 0) + (HEAP32[$51 >> 2] | 0) | 0)) {
    break;
   }
   $59 = _sbrk(-($28 >>> 0 > 2147483646 ? -2147483648 - $22 | 0 : $28) | 0) | 0; //@line 87847
   $60 = _sbrk(0) | 0; //@line 87848
   if (!(($59 | 0) != -1 & $60 >>> 0 < $48 >>> 0)) {
    break;
   }
   $66 = $48 - $60 | 0; //@line 87857
   if (($48 | 0) == ($60 | 0)) {
    break;
   }
   HEAP32[$51 >> 2] = (HEAP32[$51 >> 2] | 0) - $66; //@line 87864
   HEAP32[15838] = (HEAP32[15838] | 0) - $66; //@line 87867
   $73 = HEAP32[15736] | 0; //@line 87868
   $75 = (HEAP32[15733] | 0) - $66 | 0; //@line 87870
   $76 = $73; //@line 87871
   $78 = $73 + 8 | 0; //@line 87873
   if (($78 & 7 | 0) == 0) {
    $85 = 0; //@line 87877
   } else {
    $85 = -$78 & 7; //@line 87881
   }
   $88 = $75 - $85 | 0; //@line 87886
   HEAP32[15736] = $76 + $85; //@line 87887
   HEAP32[15733] = $88; //@line 87888
   HEAP32[$76 + ($85 + 4) >> 2] = $88 | 1; //@line 87893
   HEAP32[$76 + ($75 + 4) >> 2] = 40; //@line 87897
   HEAP32[15737] = HEAP32[15680]; //@line 87899
   $released_2 = ($48 | 0) != ($60 | 0) | 0; //@line 87902
   return $released_2 | 0; //@line 87905
  }
 } while (0);
 if ((HEAP32[15733] | 0) >>> 0 <= (HEAP32[15737] | 0) >>> 0) {
  $released_2 = 0; //@line 87912
  return $released_2 | 0; //@line 87915
 }
 HEAP32[15737] = -1; //@line 87917
 $released_2 = 0; //@line 87918
 return $released_2 | 0; //@line 87921
}
function _try_realloc_chunk($p, $nb) {
 $p = $p | 0;
 $nb = $nb | 0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $10 = 0, $15 = 0, $16 = 0, $34 = 0, $52 = 0, $55 = 0, $69 = 0, $72 = 0, $86 = 0, $94 = 0, $storemerge27 = 0, $storemerge = 0, $103 = 0, $106 = 0, $107 = 0, $112 = 0, $115 = 0, $118 = 0, $139 = 0, $_pre_phi = 0, $144 = 0, $147 = 0, $150 = 0, $155 = 0, $159 = 0, $163 = 0, $169 = 0, $170 = 0, $174 = 0, $175 = 0, $RP_0 = 0, $R_0 = 0, $177 = 0, $178 = 0, $181 = 0, $182 = 0, $R_1 = 0, $193 = 0, $195 = 0, $209 = 0, $226 = 0, $239 = 0, $258 = 0, $272 = 0, $newp_0 = 0;
 $1 = $p + 4 | 0; //@line 87961
 $2 = HEAP32[$1 >> 2] | 0; //@line 87962
 $3 = $2 & -8; //@line 87963
 $4 = $p; //@line 87964
 $5 = $4 + $3 | 0; //@line 87965
 $6 = $5; //@line 87966
 $7 = HEAP32[15734] | 0; //@line 87967
 if ($4 >>> 0 < $7 >>> 0) {
  _abort(); //@line 87970
  return 0; //@line 87970
 }
 $10 = $2 & 3; //@line 87973
 if (!(($10 | 0) != 1 & $4 >>> 0 < $5 >>> 0)) {
  _abort(); //@line 87978
  return 0; //@line 87978
 }
 $15 = $4 + ($3 | 4) | 0; //@line 87983
 $16 = HEAP32[$15 >> 2] | 0; //@line 87984
 if (($16 & 1 | 0) == 0) {
  _abort(); //@line 87988
  return 0; //@line 87988
 }
 if (($10 | 0) == 0) {
  if ($nb >>> 0 < 256) {
   $newp_0 = 0; //@line 87995
   return $newp_0 | 0; //@line 87998
  }
  do {
   if ($3 >>> 0 >= ($nb + 4 | 0) >>> 0) {
    if (($3 - $nb | 0) >>> 0 > HEAP32[15678] << 1 >>> 0) {
     break;
    } else {
     $newp_0 = $p; //@line 88011
    }
    return $newp_0 | 0; //@line 88015
   }
  } while (0);
  $newp_0 = 0; //@line 88018
  return $newp_0 | 0; //@line 88021
 }
 if ($3 >>> 0 >= $nb >>> 0) {
  $34 = $3 - $nb | 0; //@line 88025
  if ($34 >>> 0 <= 15) {
   $newp_0 = $p; //@line 88028
   return $newp_0 | 0; //@line 88031
  }
  HEAP32[$1 >> 2] = $2 & 1 | $nb | 2; //@line 88038
  HEAP32[$4 + ($nb + 4) >> 2] = $34 | 3; //@line 88043
  HEAP32[$15 >> 2] = HEAP32[$15 >> 2] | 1; //@line 88046
  _dispose_chunk($4 + $nb | 0, $34); //@line 88047
  $newp_0 = $p; //@line 88048
  return $newp_0 | 0; //@line 88051
 }
 if (($6 | 0) == (HEAP32[15736] | 0)) {
  $52 = (HEAP32[15733] | 0) + $3 | 0; //@line 88057
  if ($52 >>> 0 <= $nb >>> 0) {
   $newp_0 = 0; //@line 88060
   return $newp_0 | 0; //@line 88063
  }
  $55 = $52 - $nb | 0; //@line 88065
  HEAP32[$1 >> 2] = $2 & 1 | $nb | 2; //@line 88071
  HEAP32[$4 + ($nb + 4) >> 2] = $55 | 1; //@line 88076
  HEAP32[15736] = $4 + $nb; //@line 88077
  HEAP32[15733] = $55; //@line 88078
  $newp_0 = $p; //@line 88079
  return $newp_0 | 0; //@line 88082
 }
 if (($6 | 0) == (HEAP32[15735] | 0)) {
  $69 = (HEAP32[15732] | 0) + $3 | 0; //@line 88088
  if ($69 >>> 0 < $nb >>> 0) {
   $newp_0 = 0; //@line 88091
   return $newp_0 | 0; //@line 88094
  }
  $72 = $69 - $nb | 0; //@line 88096
  if ($72 >>> 0 > 15) {
   HEAP32[$1 >> 2] = $2 & 1 | $nb | 2; //@line 88105
   HEAP32[$4 + ($nb + 4) >> 2] = $72 | 1; //@line 88110
   HEAP32[$4 + $69 >> 2] = $72; //@line 88112
   $86 = $4 + ($69 + 4) | 0; //@line 88115
   HEAP32[$86 >> 2] = HEAP32[$86 >> 2] & -2; //@line 88118
   $storemerge = $4 + $nb | 0;
   $storemerge27 = $72;
  } else {
   HEAP32[$1 >> 2] = $2 & 1 | $69 | 2; //@line 88124
   $94 = $4 + ($69 + 4) | 0; //@line 88127
   HEAP32[$94 >> 2] = HEAP32[$94 >> 2] | 1; //@line 88130
   $storemerge = 0;
   $storemerge27 = 0;
  }
  HEAP32[15732] = $storemerge27; //@line 88135
  HEAP32[15735] = $storemerge; //@line 88136
  $newp_0 = $p; //@line 88137
  return $newp_0 | 0; //@line 88140
 }
 if (($16 & 2 | 0) != 0) {
  $newp_0 = 0; //@line 88145
  return $newp_0 | 0; //@line 88148
 }
 $103 = ($16 & -8) + $3 | 0; //@line 88151
 if ($103 >>> 0 < $nb >>> 0) {
  $newp_0 = 0; //@line 88154
  return $newp_0 | 0; //@line 88157
 }
 $106 = $103 - $nb | 0; //@line 88159
 $107 = $16 >>> 3; //@line 88160
 L26756 : do {
  if ($16 >>> 0 < 256) {
   $112 = HEAP32[$4 + ($3 + 8) >> 2] | 0; //@line 88167
   $115 = HEAP32[$4 + ($3 + 12) >> 2] | 0; //@line 88171
   $118 = 62960 + ($107 << 1 << 2) | 0; //@line 88174
   do {
    if (($112 | 0) != ($118 | 0)) {
     if ($112 >>> 0 < $7 >>> 0) {
      _abort(); //@line 88181
      return 0; //@line 88181
     }
     if ((HEAP32[$112 + 12 >> 2] | 0) == ($6 | 0)) {
      break;
     }
     _abort(); //@line 88190
     return 0; //@line 88190
    }
   } while (0);
   if (($115 | 0) == ($112 | 0)) {
    HEAP32[15730] = HEAP32[15730] & ~(1 << $107); //@line 88200
    break;
   }
   do {
    if (($115 | 0) == ($118 | 0)) {
     $_pre_phi = $115 + 8 | 0; //@line 88207
    } else {
     if ($115 >>> 0 < $7 >>> 0) {
      _abort(); //@line 88212
      return 0; //@line 88212
     }
     $139 = $115 + 8 | 0; //@line 88215
     if ((HEAP32[$139 >> 2] | 0) == ($6 | 0)) {
      $_pre_phi = $139; //@line 88219
      break;
     }
     _abort(); //@line 88222
     return 0; //@line 88222
    }
   } while (0);
   HEAP32[$112 + 12 >> 2] = $115; //@line 88228
   HEAP32[$_pre_phi >> 2] = $112; //@line 88229
  } else {
   $144 = $5; //@line 88231
   $147 = HEAP32[$4 + ($3 + 24) >> 2] | 0; //@line 88235
   $150 = HEAP32[$4 + ($3 + 12) >> 2] | 0; //@line 88239
   do {
    if (($150 | 0) == ($144 | 0)) {
     $169 = $4 + ($3 + 20) | 0; //@line 88245
     $170 = HEAP32[$169 >> 2] | 0; //@line 88246
     if (($170 | 0) == 0) {
      $174 = $4 + ($3 + 16) | 0; //@line 88251
      $175 = HEAP32[$174 >> 2] | 0; //@line 88252
      if (($175 | 0) == 0) {
       $R_1 = 0; //@line 88255
       break;
      } else {
       $R_0 = $175;
       $RP_0 = $174;
      }
     } else {
      $R_0 = $170;
      $RP_0 = $169;
     }
     while (1) {
      $177 = $R_0 + 20 | 0; //@line 88266
      $178 = HEAP32[$177 >> 2] | 0; //@line 88267
      if (($178 | 0) != 0) {
       $R_0 = $178;
       $RP_0 = $177;
       continue;
      }
      $181 = $R_0 + 16 | 0; //@line 88273
      $182 = HEAP32[$181 >> 2] | 0; //@line 88274
      if (($182 | 0) == 0) {
       break;
      } else {
       $R_0 = $182;
       $RP_0 = $181;
      }
     }
     if ($RP_0 >>> 0 < $7 >>> 0) {
      _abort(); //@line 88285
      return 0; //@line 88285
     } else {
      HEAP32[$RP_0 >> 2] = 0; //@line 88288
      $R_1 = $R_0; //@line 88289
      break;
     }
    } else {
     $155 = HEAP32[$4 + ($3 + 8) >> 2] | 0; //@line 88296
     if ($155 >>> 0 < $7 >>> 0) {
      _abort(); //@line 88300
      return 0; //@line 88300
     }
     $159 = $155 + 12 | 0; //@line 88303
     if ((HEAP32[$159 >> 2] | 0) != ($144 | 0)) {
      _abort(); //@line 88307
      return 0; //@line 88307
     }
     $163 = $150 + 8 | 0; //@line 88310
     if ((HEAP32[$163 >> 2] | 0) == ($144 | 0)) {
      HEAP32[$159 >> 2] = $150; //@line 88314
      HEAP32[$163 >> 2] = $155; //@line 88315
      $R_1 = $150; //@line 88316
      break;
     } else {
      _abort(); //@line 88319
      return 0; //@line 88319
     }
    }
   } while (0);
   if (($147 | 0) == 0) {
    break;
   }
   $193 = $4 + ($3 + 28) | 0; //@line 88331
   $195 = 63224 + (HEAP32[$193 >> 2] << 2) | 0; //@line 88333
   do {
    if (($144 | 0) == (HEAP32[$195 >> 2] | 0)) {
     HEAP32[$195 >> 2] = $R_1; //@line 88338
     if (($R_1 | 0) != 0) {
      break;
     }
     HEAP32[15731] = HEAP32[15731] & ~(1 << HEAP32[$193 >> 2]); //@line 88348
     break L26756;
    } else {
     if ($147 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
      _abort(); //@line 88355
      return 0; //@line 88355
     }
     $209 = $147 + 16 | 0; //@line 88358
     if ((HEAP32[$209 >> 2] | 0) == ($144 | 0)) {
      HEAP32[$209 >> 2] = $R_1; //@line 88362
     } else {
      HEAP32[$147 + 20 >> 2] = $R_1; //@line 88365
     }
     if (($R_1 | 0) == 0) {
      break L26756;
     }
    }
   } while (0);
   if ($R_1 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
    _abort(); //@line 88377
    return 0; //@line 88377
   }
   HEAP32[$R_1 + 24 >> 2] = $147; //@line 88381
   $226 = HEAP32[$4 + ($3 + 16) >> 2] | 0; //@line 88385
   do {
    if (($226 | 0) != 0) {
     if ($226 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
      _abort(); //@line 88393
      return 0; //@line 88393
     } else {
      HEAP32[$R_1 + 16 >> 2] = $226; //@line 88397
      HEAP32[$226 + 24 >> 2] = $R_1; //@line 88399
      break;
     }
    }
   } while (0);
   $239 = HEAP32[$4 + ($3 + 20) >> 2] | 0; //@line 88407
   if (($239 | 0) == 0) {
    break;
   }
   if ($239 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
    _abort(); //@line 88416
    return 0; //@line 88416
   } else {
    HEAP32[$R_1 + 20 >> 2] = $239; //@line 88420
    HEAP32[$239 + 24 >> 2] = $R_1; //@line 88422
    break;
   }
  }
 } while (0);
 if ($106 >>> 0 < 16) {
  HEAP32[$1 >> 2] = $103 | HEAP32[$1 >> 2] & 1 | 2; //@line 88433
  $258 = $4 + ($103 | 4) | 0; //@line 88436
  HEAP32[$258 >> 2] = HEAP32[$258 >> 2] | 1; //@line 88439
  $newp_0 = $p; //@line 88440
  return $newp_0 | 0; //@line 88443
 } else {
  HEAP32[$1 >> 2] = HEAP32[$1 >> 2] & 1 | $nb | 2; //@line 88451
  HEAP32[$4 + ($nb + 4) >> 2] = $106 | 3; //@line 88456
  $272 = $4 + ($103 | 4) | 0; //@line 88459
  HEAP32[$272 >> 2] = HEAP32[$272 >> 2] | 1; //@line 88462
  _dispose_chunk($4 + $nb | 0, $106); //@line 88463
  $newp_0 = $p; //@line 88464
  return $newp_0 | 0; //@line 88467
 }
 return 0;
}
function _dispose_chunk($p, $psize) {
 $p = $p | 0;
 $psize = $psize | 0;
 var $1 = 0, $2 = 0, $3 = 0, $5 = 0, $10 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $24 = 0, $29 = 0, $32 = 0, $35 = 0, $56 = 0, $_pre_phi63 = 0, $61 = 0, $64 = 0, $67 = 0, $72 = 0, $76 = 0, $80 = 0, $_sum28 = 0, $86 = 0, $87 = 0, $91 = 0, $92 = 0, $RP_0 = 0, $R_0 = 0, $94 = 0, $95 = 0, $98 = 0, $99 = 0, $R_1 = 0, $110 = 0, $112 = 0, $126 = 0, $_sum31 = 0, $143 = 0, $156 = 0, $169 = 0, $_0277 = 0, $_0 = 0, $181 = 0, $185 = 0, $186 = 0, $194 = 0, $205 = 0, $213 = 0, $214 = 0, $219 = 0, $222 = 0, $225 = 0, $246 = 0, $_pre_phi61 = 0, $251 = 0, $254 = 0, $257 = 0, $262 = 0, $266 = 0, $270 = 0, $276 = 0, $277 = 0, $281 = 0, $282 = 0, $RP9_0 = 0, $R7_0 = 0, $284 = 0, $285 = 0, $288 = 0, $289 = 0, $R7_1 = 0, $300 = 0, $302 = 0, $316 = 0, $333 = 0, $346 = 0, $_1 = 0, $374 = 0, $377 = 0, $379 = 0, $380 = 0, $381 = 0, $387 = 0, $388 = 0, $_pre_phi = 0, $F16_0 = 0, $398 = 0, $399 = 0, $406 = 0, $407 = 0, $410 = 0, $412 = 0, $415 = 0, $420 = 0, $I19_0 = 0, $427 = 0, $431 = 0, $432 = 0, $447 = 0, $T_0 = 0, $K20_0 = 0, $456 = 0, $457 = 0, $470 = 0, $471 = 0, $473 = 0, label = 0;
 $1 = $p; //@line 88530
 $2 = $1 + $psize | 0; //@line 88531
 $3 = $2; //@line 88532
 $5 = HEAP32[$p + 4 >> 2] | 0; //@line 88534
 L26832 : do {
  if (($5 & 1 | 0) == 0) {
   $10 = HEAP32[$p >> 2] | 0; //@line 88540
   if (($5 & 3 | 0) == 0) {
    return;
   }
   $15 = $1 + (-$10 | 0) | 0; //@line 88548
   $16 = $15; //@line 88549
   $17 = $10 + $psize | 0; //@line 88550
   $18 = HEAP32[15734] | 0; //@line 88551
   if ($15 >>> 0 < $18 >>> 0) {
    _abort(); //@line 88554
   }
   if (($16 | 0) == (HEAP32[15735] | 0)) {
    $169 = $1 + ($psize + 4) | 0; //@line 88562
    if ((HEAP32[$169 >> 2] & 3 | 0) != 3) {
     $_0 = $16;
     $_0277 = $17;
     break;
    }
    HEAP32[15732] = $17; //@line 88570
    HEAP32[$169 >> 2] = HEAP32[$169 >> 2] & -2; //@line 88573
    HEAP32[$1 + (4 - $10) >> 2] = $17 | 1; //@line 88578
    HEAP32[$2 >> 2] = $17; //@line 88580
    return;
   }
   $24 = $10 >>> 3; //@line 88584
   if ($10 >>> 0 < 256) {
    $29 = HEAP32[$1 + (8 - $10) >> 2] | 0; //@line 88590
    $32 = HEAP32[$1 + (12 - $10) >> 2] | 0; //@line 88594
    $35 = 62960 + ($24 << 1 << 2) | 0; //@line 88597
    do {
     if (($29 | 0) != ($35 | 0)) {
      if ($29 >>> 0 < $18 >>> 0) {
       _abort(); //@line 88604
      }
      if ((HEAP32[$29 + 12 >> 2] | 0) == ($16 | 0)) {
       break;
      }
      _abort(); //@line 88613
     }
    } while (0);
    if (($32 | 0) == ($29 | 0)) {
     HEAP32[15730] = HEAP32[15730] & ~(1 << $24); //@line 88623
     $_0 = $16;
     $_0277 = $17;
     break;
    }
    do {
     if (($32 | 0) == ($35 | 0)) {
      $_pre_phi63 = $32 + 8 | 0; //@line 88631
     } else {
      if ($32 >>> 0 < $18 >>> 0) {
       _abort(); //@line 88636
      }
      $56 = $32 + 8 | 0; //@line 88639
      if ((HEAP32[$56 >> 2] | 0) == ($16 | 0)) {
       $_pre_phi63 = $56; //@line 88643
       break;
      }
      _abort(); //@line 88646
     }
    } while (0);
    HEAP32[$29 + 12 >> 2] = $32; //@line 88652
    HEAP32[$_pre_phi63 >> 2] = $29; //@line 88653
    $_0 = $16;
    $_0277 = $17;
    break;
   }
   $61 = $15; //@line 88657
   $64 = HEAP32[$1 + (24 - $10) >> 2] | 0; //@line 88661
   $67 = HEAP32[$1 + (12 - $10) >> 2] | 0; //@line 88665
   do {
    if (($67 | 0) == ($61 | 0)) {
     $_sum28 = 16 - $10 | 0; //@line 88669
     $86 = $1 + ($_sum28 + 4) | 0; //@line 88672
     $87 = HEAP32[$86 >> 2] | 0; //@line 88673
     if (($87 | 0) == 0) {
      $91 = $1 + $_sum28 | 0; //@line 88677
      $92 = HEAP32[$91 >> 2] | 0; //@line 88678
      if (($92 | 0) == 0) {
       $R_1 = 0; //@line 88681
       break;
      } else {
       $R_0 = $92;
       $RP_0 = $91;
      }
     } else {
      $R_0 = $87;
      $RP_0 = $86;
     }
     while (1) {
      $94 = $R_0 + 20 | 0; //@line 88692
      $95 = HEAP32[$94 >> 2] | 0; //@line 88693
      if (($95 | 0) != 0) {
       $R_0 = $95;
       $RP_0 = $94;
       continue;
      }
      $98 = $R_0 + 16 | 0; //@line 88699
      $99 = HEAP32[$98 >> 2] | 0; //@line 88700
      if (($99 | 0) == 0) {
       break;
      } else {
       $R_0 = $99;
       $RP_0 = $98;
      }
     }
     if ($RP_0 >>> 0 < $18 >>> 0) {
      _abort(); //@line 88711
     } else {
      HEAP32[$RP_0 >> 2] = 0; //@line 88714
      $R_1 = $R_0; //@line 88715
      break;
     }
    } else {
     $72 = HEAP32[$1 + (8 - $10) >> 2] | 0; //@line 88722
     if ($72 >>> 0 < $18 >>> 0) {
      _abort(); //@line 88726
     }
     $76 = $72 + 12 | 0; //@line 88729
     if ((HEAP32[$76 >> 2] | 0) != ($61 | 0)) {
      _abort(); //@line 88733
     }
     $80 = $67 + 8 | 0; //@line 88736
     if ((HEAP32[$80 >> 2] | 0) == ($61 | 0)) {
      HEAP32[$76 >> 2] = $67; //@line 88740
      HEAP32[$80 >> 2] = $72; //@line 88741
      $R_1 = $67; //@line 88742
      break;
     } else {
      _abort(); //@line 88745
     }
    }
   } while (0);
   if (($64 | 0) == 0) {
    $_0 = $16;
    $_0277 = $17;
    break;
   }
   $110 = $1 + (28 - $10) | 0; //@line 88758
   $112 = 63224 + (HEAP32[$110 >> 2] << 2) | 0; //@line 88760
   do {
    if (($61 | 0) == (HEAP32[$112 >> 2] | 0)) {
     HEAP32[$112 >> 2] = $R_1; //@line 88765
     if (($R_1 | 0) != 0) {
      break;
     }
     HEAP32[15731] = HEAP32[15731] & ~(1 << HEAP32[$110 >> 2]); //@line 88775
     $_0 = $16;
     $_0277 = $17;
     break L26832;
    } else {
     if ($64 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
      _abort(); //@line 88783
     }
     $126 = $64 + 16 | 0; //@line 88786
     if ((HEAP32[$126 >> 2] | 0) == ($61 | 0)) {
      HEAP32[$126 >> 2] = $R_1; //@line 88790
     } else {
      HEAP32[$64 + 20 >> 2] = $R_1; //@line 88793
     }
     if (($R_1 | 0) == 0) {
      $_0 = $16;
      $_0277 = $17;
      break L26832;
     }
    }
   } while (0);
   if ($R_1 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
    _abort(); //@line 88806
   }
   HEAP32[$R_1 + 24 >> 2] = $64; //@line 88810
   $_sum31 = 16 - $10 | 0; //@line 88811
   $143 = HEAP32[$1 + $_sum31 >> 2] | 0; //@line 88814
   do {
    if (($143 | 0) != 0) {
     if ($143 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
      _abort(); //@line 88822
     } else {
      HEAP32[$R_1 + 16 >> 2] = $143; //@line 88826
      HEAP32[$143 + 24 >> 2] = $R_1; //@line 88828
      break;
     }
    }
   } while (0);
   $156 = HEAP32[$1 + ($_sum31 + 4) >> 2] | 0; //@line 88836
   if (($156 | 0) == 0) {
    $_0 = $16;
    $_0277 = $17;
    break;
   }
   if ($156 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
    _abort(); //@line 88846
   } else {
    HEAP32[$R_1 + 20 >> 2] = $156; //@line 88850
    HEAP32[$156 + 24 >> 2] = $R_1; //@line 88852
    $_0 = $16;
    $_0277 = $17;
    break;
   }
  } else {
   $_0 = $p;
   $_0277 = $psize;
  }
 } while (0);
 $181 = HEAP32[15734] | 0; //@line 88862
 if ($2 >>> 0 < $181 >>> 0) {
  _abort(); //@line 88865
 }
 $185 = $1 + ($psize + 4) | 0; //@line 88870
 $186 = HEAP32[$185 >> 2] | 0; //@line 88871
 do {
  if (($186 & 2 | 0) == 0) {
   if (($3 | 0) == (HEAP32[15736] | 0)) {
    $194 = (HEAP32[15733] | 0) + $_0277 | 0; //@line 88880
    HEAP32[15733] = $194; //@line 88881
    HEAP32[15736] = $_0; //@line 88882
    HEAP32[$_0 + 4 >> 2] = $194 | 1; //@line 88885
    if (($_0 | 0) != (HEAP32[15735] | 0)) {
     return;
    }
    HEAP32[15735] = 0; //@line 88892
    HEAP32[15732] = 0; //@line 88893
    return;
   }
   if (($3 | 0) == (HEAP32[15735] | 0)) {
    $205 = (HEAP32[15732] | 0) + $_0277 | 0; //@line 88901
    HEAP32[15732] = $205; //@line 88902
    HEAP32[15735] = $_0; //@line 88903
    HEAP32[$_0 + 4 >> 2] = $205 | 1; //@line 88906
    HEAP32[$_0 + $205 >> 2] = $205; //@line 88910
    return;
   }
   $213 = ($186 & -8) + $_0277 | 0; //@line 88915
   $214 = $186 >>> 3; //@line 88916
   L26931 : do {
    if ($186 >>> 0 < 256) {
     $219 = HEAP32[$1 + ($psize + 8) >> 2] | 0; //@line 88923
     $222 = HEAP32[$1 + ($psize + 12) >> 2] | 0; //@line 88927
     $225 = 62960 + ($214 << 1 << 2) | 0; //@line 88930
     do {
      if (($219 | 0) != ($225 | 0)) {
       if ($219 >>> 0 < $181 >>> 0) {
        _abort(); //@line 88937
       }
       if ((HEAP32[$219 + 12 >> 2] | 0) == ($3 | 0)) {
        break;
       }
       _abort(); //@line 88946
      }
     } while (0);
     if (($222 | 0) == ($219 | 0)) {
      HEAP32[15730] = HEAP32[15730] & ~(1 << $214); //@line 88956
      break;
     }
     do {
      if (($222 | 0) == ($225 | 0)) {
       $_pre_phi61 = $222 + 8 | 0; //@line 88963
      } else {
       if ($222 >>> 0 < $181 >>> 0) {
        _abort(); //@line 88968
       }
       $246 = $222 + 8 | 0; //@line 88971
       if ((HEAP32[$246 >> 2] | 0) == ($3 | 0)) {
        $_pre_phi61 = $246; //@line 88975
        break;
       }
       _abort(); //@line 88978
      }
     } while (0);
     HEAP32[$219 + 12 >> 2] = $222; //@line 88984
     HEAP32[$_pre_phi61 >> 2] = $219; //@line 88985
    } else {
     $251 = $2; //@line 88987
     $254 = HEAP32[$1 + ($psize + 24) >> 2] | 0; //@line 88991
     $257 = HEAP32[$1 + ($psize + 12) >> 2] | 0; //@line 88995
     do {
      if (($257 | 0) == ($251 | 0)) {
       $276 = $1 + ($psize + 20) | 0; //@line 89001
       $277 = HEAP32[$276 >> 2] | 0; //@line 89002
       if (($277 | 0) == 0) {
        $281 = $1 + ($psize + 16) | 0; //@line 89007
        $282 = HEAP32[$281 >> 2] | 0; //@line 89008
        if (($282 | 0) == 0) {
         $R7_1 = 0; //@line 89011
         break;
        } else {
         $R7_0 = $282;
         $RP9_0 = $281;
        }
       } else {
        $R7_0 = $277;
        $RP9_0 = $276;
       }
       while (1) {
        $284 = $R7_0 + 20 | 0; //@line 89022
        $285 = HEAP32[$284 >> 2] | 0; //@line 89023
        if (($285 | 0) != 0) {
         $R7_0 = $285;
         $RP9_0 = $284;
         continue;
        }
        $288 = $R7_0 + 16 | 0; //@line 89029
        $289 = HEAP32[$288 >> 2] | 0; //@line 89030
        if (($289 | 0) == 0) {
         break;
        } else {
         $R7_0 = $289;
         $RP9_0 = $288;
        }
       }
       if ($RP9_0 >>> 0 < $181 >>> 0) {
        _abort(); //@line 89041
       } else {
        HEAP32[$RP9_0 >> 2] = 0; //@line 89044
        $R7_1 = $R7_0; //@line 89045
        break;
       }
      } else {
       $262 = HEAP32[$1 + ($psize + 8) >> 2] | 0; //@line 89052
       if ($262 >>> 0 < $181 >>> 0) {
        _abort(); //@line 89056
       }
       $266 = $262 + 12 | 0; //@line 89059
       if ((HEAP32[$266 >> 2] | 0) != ($251 | 0)) {
        _abort(); //@line 89063
       }
       $270 = $257 + 8 | 0; //@line 89066
       if ((HEAP32[$270 >> 2] | 0) == ($251 | 0)) {
        HEAP32[$266 >> 2] = $257; //@line 89070
        HEAP32[$270 >> 2] = $262; //@line 89071
        $R7_1 = $257; //@line 89072
        break;
       } else {
        _abort(); //@line 89075
       }
      }
     } while (0);
     if (($254 | 0) == 0) {
      break;
     }
     $300 = $1 + ($psize + 28) | 0; //@line 89087
     $302 = 63224 + (HEAP32[$300 >> 2] << 2) | 0; //@line 89089
     do {
      if (($251 | 0) == (HEAP32[$302 >> 2] | 0)) {
       HEAP32[$302 >> 2] = $R7_1; //@line 89094
       if (($R7_1 | 0) != 0) {
        break;
       }
       HEAP32[15731] = HEAP32[15731] & ~(1 << HEAP32[$300 >> 2]); //@line 89104
       break L26931;
      } else {
       if ($254 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
        _abort(); //@line 89111
       }
       $316 = $254 + 16 | 0; //@line 89114
       if ((HEAP32[$316 >> 2] | 0) == ($251 | 0)) {
        HEAP32[$316 >> 2] = $R7_1; //@line 89118
       } else {
        HEAP32[$254 + 20 >> 2] = $R7_1; //@line 89121
       }
       if (($R7_1 | 0) == 0) {
        break L26931;
       }
      }
     } while (0);
     if ($R7_1 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
      _abort(); //@line 89133
     }
     HEAP32[$R7_1 + 24 >> 2] = $254; //@line 89137
     $333 = HEAP32[$1 + ($psize + 16) >> 2] | 0; //@line 89141
     do {
      if (($333 | 0) != 0) {
       if ($333 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
        _abort(); //@line 89149
       } else {
        HEAP32[$R7_1 + 16 >> 2] = $333; //@line 89153
        HEAP32[$333 + 24 >> 2] = $R7_1; //@line 89155
        break;
       }
      }
     } while (0);
     $346 = HEAP32[$1 + ($psize + 20) >> 2] | 0; //@line 89163
     if (($346 | 0) == 0) {
      break;
     }
     if ($346 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
      _abort(); //@line 89172
     } else {
      HEAP32[$R7_1 + 20 >> 2] = $346; //@line 89176
      HEAP32[$346 + 24 >> 2] = $R7_1; //@line 89178
      break;
     }
    }
   } while (0);
   HEAP32[$_0 + 4 >> 2] = $213 | 1; //@line 89185
   HEAP32[$_0 + $213 >> 2] = $213; //@line 89189
   if (($_0 | 0) != (HEAP32[15735] | 0)) {
    $_1 = $213; //@line 89193
    break;
   }
   HEAP32[15732] = $213; //@line 89196
   return;
  } else {
   HEAP32[$185 >> 2] = $186 & -2; //@line 89201
   HEAP32[$_0 + 4 >> 2] = $_0277 | 1; //@line 89204
   HEAP32[$_0 + $_0277 >> 2] = $_0277; //@line 89208
   $_1 = $_0277; //@line 89209
  }
 } while (0);
 $374 = $_1 >>> 3; //@line 89213
 if ($_1 >>> 0 < 256) {
  $377 = $374 << 1; //@line 89216
  $379 = 62960 + ($377 << 2) | 0; //@line 89218
  $380 = HEAP32[15730] | 0; //@line 89219
  $381 = 1 << $374; //@line 89220
  do {
   if (($380 & $381 | 0) == 0) {
    HEAP32[15730] = $380 | $381; //@line 89226
    $F16_0 = $379;
    $_pre_phi = 62960 + ($377 + 2 << 2) | 0;
   } else {
    $387 = 62960 + ($377 + 2 << 2) | 0; //@line 89232
    $388 = HEAP32[$387 >> 2] | 0; //@line 89233
    if ($388 >>> 0 >= (HEAP32[15734] | 0) >>> 0) {
     $F16_0 = $388;
     $_pre_phi = $387;
     break;
    }
    _abort(); //@line 89241
   }
  } while (0);
  HEAP32[$_pre_phi >> 2] = $_0; //@line 89247
  HEAP32[$F16_0 + 12 >> 2] = $_0; //@line 89249
  HEAP32[$_0 + 8 >> 2] = $F16_0; //@line 89251
  HEAP32[$_0 + 12 >> 2] = $379; //@line 89253
  return;
 }
 $398 = $_0; //@line 89257
 $399 = $_1 >>> 8; //@line 89258
 do {
  if (($399 | 0) == 0) {
   $I19_0 = 0; //@line 89262
  } else {
   if ($_1 >>> 0 > 16777215) {
    $I19_0 = 31; //@line 89266
    break;
   }
   $406 = ($399 + 1048320 | 0) >>> 16 & 8; //@line 89271
   $407 = $399 << $406; //@line 89272
   $410 = ($407 + 520192 | 0) >>> 16 & 4; //@line 89275
   $412 = $407 << $410; //@line 89277
   $415 = ($412 + 245760 | 0) >>> 16 & 2; //@line 89280
   $420 = 14 - ($410 | $406 | $415) + ($412 << $415 >>> 15) | 0; //@line 89285
   $I19_0 = $_1 >>> (($420 + 7 | 0) >>> 0) & 1 | $420 << 1; //@line 89291
  }
 } while (0);
 $427 = 63224 + ($I19_0 << 2) | 0; //@line 89295
 HEAP32[$_0 + 28 >> 2] = $I19_0; //@line 89298
 HEAP32[$_0 + 20 >> 2] = 0; //@line 89300
 HEAP32[$_0 + 16 >> 2] = 0; //@line 89302
 $431 = HEAP32[15731] | 0; //@line 89303
 $432 = 1 << $I19_0; //@line 89304
 if (($431 & $432 | 0) == 0) {
  HEAP32[15731] = $431 | $432; //@line 89309
  HEAP32[$427 >> 2] = $398; //@line 89310
  HEAP32[$_0 + 24 >> 2] = $427; //@line 89313
  HEAP32[$_0 + 12 >> 2] = $_0; //@line 89315
  HEAP32[$_0 + 8 >> 2] = $_0; //@line 89317
  return;
 }
 if (($I19_0 | 0) == 31) {
  $447 = 0; //@line 89324
 } else {
  $447 = 25 - ($I19_0 >>> 1) | 0; //@line 89328
 }
 $K20_0 = $_1 << $447;
 $T_0 = HEAP32[$427 >> 2] | 0;
 while (1) {
  if ((HEAP32[$T_0 + 4 >> 2] & -8 | 0) == ($_1 | 0)) {
   break;
  }
  $456 = $T_0 + 16 + ($K20_0 >>> 31 << 2) | 0; //@line 89344
  $457 = HEAP32[$456 >> 2] | 0; //@line 89345
  if (($457 | 0) == 0) {
   label = 20813; //@line 89349
   break;
  } else {
   $K20_0 = $K20_0 << 1;
   $T_0 = $457;
  }
 }
 if ((label | 0) == 20813) {
  if ($456 >>> 0 < (HEAP32[15734] | 0) >>> 0) {
   _abort(); //@line 89360
  }
  HEAP32[$456 >> 2] = $398; //@line 89363
  HEAP32[$_0 + 24 >> 2] = $T_0; //@line 89366
  HEAP32[$_0 + 12 >> 2] = $_0; //@line 89368
  HEAP32[$_0 + 8 >> 2] = $_0; //@line 89370
  return;
 }
 $470 = $T_0 + 8 | 0; //@line 89374
 $471 = HEAP32[$470 >> 2] | 0; //@line 89375
 $473 = HEAP32[15734] | 0; //@line 89377
 if ($T_0 >>> 0 < $473 >>> 0) {
  _abort(); //@line 89380
 }
 if ($471 >>> 0 < $473 >>> 0) {
  _abort(); //@line 89386
 }
 HEAP32[$471 + 12 >> 2] = $398; //@line 89390
 HEAP32[$470 >> 2] = $398; //@line 89391
 HEAP32[$_0 + 8 >> 2] = $471; //@line 89394
 HEAP32[$_0 + 12 >> 2] = $T_0; //@line 89397
 HEAP32[$_0 + 24 >> 2] = 0; //@line 89399
 return;
}
function _memset(ptr, value, num) {
 ptr = ptr | 0;
 value = value | 0;
 num = num | 0;
 var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
 stop = ptr + num | 0; //@line 89408
 if ((num | 0) >= 20) {
  value = value & 255; //@line 89411
  unaligned = ptr & 3; //@line 89412
  value4 = value | value << 8 | value << 16 | value << 24; //@line 89413
  stop4 = stop & ~3; //@line 89414
  if (unaligned) {
   unaligned = ptr + 4 - unaligned | 0; //@line 89416
   while ((ptr | 0) < (unaligned | 0)) {
    HEAP8[ptr] = value; //@line 89418
    ptr = ptr + 1 | 0; //@line 89419
   }
  }
  while ((ptr | 0) < (stop4 | 0)) {
   HEAP32[ptr >> 2] = value4; //@line 89423
   ptr = ptr + 4 | 0; //@line 89424
  }
 }
 while ((ptr | 0) < (stop | 0)) {
  HEAP8[ptr] = value; //@line 89428
  ptr = ptr + 1 | 0; //@line 89429
 }
}
function _memcpy(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 var ret = 0;
 ret = dest | 0; //@line 89435
 if ((dest & 3) == (src & 3)) {
  while (dest & 3) {
   if ((num | 0) == 0) return ret | 0; //@line 89438
   HEAP8[dest] = HEAP8[src] | 0; //@line 89439
   dest = dest + 1 | 0; //@line 89440
   src = src + 1 | 0; //@line 89441
   num = num - 1 | 0; //@line 89442
  }
  while ((num | 0) >= 4) {
   HEAP32[dest >> 2] = HEAP32[src >> 2]; //@line 89445
   dest = dest + 4 | 0; //@line 89446
   src = src + 4 | 0; //@line 89447
   num = num - 4 | 0; //@line 89448
  }
 }
 while ((num | 0) > 0) {
  HEAP8[dest] = HEAP8[src] | 0; //@line 89452
  dest = dest + 1 | 0; //@line 89453
  src = src + 1 | 0; //@line 89454
  num = num - 1 | 0; //@line 89455
 }
 return ret | 0; //@line 89457
}
function _strlen(ptr) {
 ptr = ptr | 0;
 var curr = 0;
 curr = ptr; //@line 89462
 while (HEAP8[curr] | 0) {
  curr = curr + 1 | 0; //@line 89464
 }
 return curr - ptr | 0; //@line 89466
}
function _strcat(pdest, psrc) {
 pdest = pdest | 0;
 psrc = psrc | 0;
 var i = 0, pdestEnd = 0;
 pdestEnd = pdest + (_strlen(pdest) | 0) | 0; //@line 89472
 do {
  HEAP8[pdestEnd + i | 0] = HEAP8[psrc + i | 0]; //@line 89474
  i = i + 1 | 0; //@line 89475
 } while (HEAP8[psrc + (i - 1) | 0] | 0);
 return pdest | 0; //@line 89477
}
function _memcmp(p1, p2, num) {
 p1 = p1 | 0;
 p2 = p2 | 0;
 num = num | 0;
 var i = 0, v1 = 0, v2 = 0;
 while ((i | 0) < (num | 0)) {
  v1 = HEAPU8[p1 + i | 0] | 0;
  v2 = HEAPU8[p2 + i | 0] | 0;
  if ((v1 | 0) != (v2 | 0)) return ((v1 | 0) > (v2 | 0) ? 1 : -1) | 0; //@line 89485
  i = i + 1 | 0; //@line 89486
 }
 return 0; //@line 89488
}
function _strcpy(pdest, psrc) {
 pdest = pdest | 0;
 psrc = psrc | 0;
 var i = 0;
 do {
  HEAP8[pdest + i | 0] = HEAP8[psrc + i | 0]; //@line 89494
  i = i + 1 | 0; //@line 89495
 } while (HEAP8[psrc + (i - 1) | 0] | 0);
 return pdest | 0; //@line 89497
}
function _tolower(chr) {
 chr = chr | 0;
 if ((chr | 0) < 65) return chr | 0; //@line 89501
 if ((chr | 0) > 90) return chr | 0; //@line 89502
 return chr - 65 + 97 | 0; //@line 89503
}
function _strncasecmp(px, py, n) {
 px = px | 0;
 py = py | 0;
 n = n | 0;
 var i = 0, x = 0, y = 0;
 while (i >>> 0 < n >>> 0) {
  x = _tolower(HEAP8[px + i | 0] | 0) | 0; //@line 89509
  y = _tolower(HEAP8[py + i | 0] | 0) | 0; //@line 89510
  if ((x | 0) == (y | 0) & (x | 0) == 0) return 0; //@line 89511
  if ((x | 0) == 0) return -1;
  if ((y | 0) == 0) return 1; //@line 89513
  if ((x | 0) == (y | 0)) {
   i = i + 1 | 0; //@line 89515
   continue;
  } else {
   return (x >>> 0 > y >>> 0 ? 1 : -1) | 0; //@line 89518
  }
 }
 return 0; //@line 89521
}
function _strcasecmp(px, py) {
 px = px | 0;
 py = py | 0;
 return _strncasecmp(px, py, -1) | 0; //@line 89525
}
function _i64Add(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var l = 0;
 l = a + c >>> 0; //@line 89537
 return (tempRet0 = b + d + (l >>> 0 < a >>> 0 | 0) >>> 0, l | 0) | 0; //@line 89539
}
function _i64Subtract(a, b, c, d) {
 a = a | 0;
 b = b | 0;
 c = c | 0;
 d = d | 0;
 var h = 0;
 h = b - d >>> 0; //@line 89545
 h = b - d - (c >>> 0 > a >>> 0 | 0) >>> 0; //@line 89546
 return (tempRet0 = h, a - c >>> 0 | 0) | 0; //@line 89547
}
function _bitshift64Shl(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high << bits | (low & (1 << bits) - 1 << 32 - bits) >>> 32 - bits; //@line 89554
  return low << bits; //@line 89555
 }
 tempRet0 = low << bits - 32; //@line 89557
 return 0; //@line 89558
}
function _bitshift64Lshr(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high >>> bits; //@line 89565
  return low >>> bits | (high & (1 << bits) - 1) << 32 - bits; //@line 89566
 }
 tempRet0 = 0; //@line 89568
 return high >>> bits - 32 | 0; //@line 89569
}
function _bitshift64Ashr(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high >> bits; //@line 89576
  return low >>> bits | (high & (1 << bits) - 1) << 32 - bits; //@line 89577
 }
 tempRet0 = (high | 0) < 0 ? -1 : 0; //@line 89579
 return high >> bits - 32 | 0; //@line 89580
}
function _llvm_ctlz_i32(x) {
 x = x | 0;
 var ret = 0;
 ret = HEAP8[ctlz_i8 + (x >>> 24) | 0] | 0; //@line 89585
 if ((ret | 0) < 8) return ret | 0; //@line 89586
 ret = HEAP8[ctlz_i8 + (x >> 16 & 255) | 0] | 0;
 if ((ret | 0) < 8) return ret + 8 | 0; //@line 89588
 ret = HEAP8[ctlz_i8 + (x >> 8 & 255) | 0] | 0;
 if ((ret | 0) < 8) return ret + 16 | 0; //@line 89590
 return (HEAP8[ctlz_i8 + (x & 255) | 0] | 0) + 24 | 0; //@line 89591
}
function _llvm_cttz_i32(x) {
 x = x | 0;
 var ret = 0;
 ret = HEAP8[cttz_i8 + (x & 255) | 0] | 0; //@line 89597
 if ((ret | 0) < 8) return ret | 0; //@line 89598
 ret = HEAP8[cttz_i8 + (x >> 8 & 255) | 0] | 0;
 if ((ret | 0) < 8) return ret + 8 | 0; //@line 89600
 ret = HEAP8[cttz_i8 + (x >> 16 & 255) | 0] | 0;
 if ((ret | 0) < 8) return ret + 16 | 0; //@line 89602
 return (HEAP8[cttz_i8 + (x >>> 24) | 0] | 0) + 24 | 0; //@line 89603
}
function ___muldsi3($a, $b) {
 $a = $a | 0;
 $b = $b | 0;
 var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
 $1 = $a & 65535; //@line 89611
 $2 = $b & 65535; //@line 89612
 $3 = Math_imul($2, $1) | 0; //@line 89613
 $6 = $a >>> 16; //@line 89614
 $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0; //@line 89615
 $11 = $b >>> 16; //@line 89616
 $12 = Math_imul($11, $1) | 0; //@line 89617
 return (tempRet0 = ($8 >>> 16) + (Math_imul($11, $6) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, $8 + $12 << 16 | $3 & 65535 | 0) | 0; //@line 89618
}
function ___divdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $7$0 = 0, $7$1 = 0, $10$0 = 0;
 $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1; //@line 89626
 $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1; //@line 89627
 $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1; //@line 89628
 $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1; //@line 89629
 $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0; //@line 89630
 $4$1 = tempRet0; //@line 89631
 $7$0 = $2$0 ^ $1$0; //@line 89633
 $7$1 = $2$1 ^ $1$1; //@line 89634
 $10$0 = _i64Subtract((___udivmoddi4($4$0, $4$1, _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0, tempRet0, 0) | 0) ^ $7$0, tempRet0 ^ $7$1, $7$0, $7$1) | 0; //@line 89636
 return (tempRet0 = tempRet0, $10$0) | 0; //@line 89637
}
function ___remdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $rem = 0, $1$0 = 0, $1$1 = 0, $2$0 = 0, $2$1 = 0, $4$0 = 0, $4$1 = 0, $6$0 = 0, $10$0 = 0, $10$1 = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP; //@line 89645
 STACKTOP = STACKTOP + 8 | 0; //@line 89646
 $rem = __stackBase__ | 0; //@line 89647
 $1$0 = $a$1 >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1; //@line 89648
 $1$1 = (($a$1 | 0) < 0 ? -1 : 0) >> 31 | (($a$1 | 0) < 0 ? -1 : 0) << 1; //@line 89649
 $2$0 = $b$1 >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1; //@line 89650
 $2$1 = (($b$1 | 0) < 0 ? -1 : 0) >> 31 | (($b$1 | 0) < 0 ? -1 : 0) << 1; //@line 89651
 $4$0 = _i64Subtract($1$0 ^ $a$0, $1$1 ^ $a$1, $1$0, $1$1) | 0; //@line 89652
 $4$1 = tempRet0; //@line 89653
 $6$0 = _i64Subtract($2$0 ^ $b$0, $2$1 ^ $b$1, $2$0, $2$1) | 0; //@line 89654
 ___udivmoddi4($4$0, $4$1, $6$0, tempRet0, $rem) | 0; //@line 89655
 $10$0 = _i64Subtract(HEAP32[$rem >> 2] ^ $1$0, HEAP32[$rem + 4 >> 2] ^ $1$1, $1$0, $1$1) | 0; //@line 89656
 $10$1 = tempRet0; //@line 89657
 STACKTOP = __stackBase__; //@line 89658
 return (tempRet0 = $10$1, $10$0) | 0; //@line 89659
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0;
 $x_sroa_0_0_extract_trunc = $a$0; //@line 89667
 $y_sroa_0_0_extract_trunc = $b$0; //@line 89668
 $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0; //@line 89669
 $1$1 = tempRet0; //@line 89670
 return (tempRet0 = (Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0) + (Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $1$1 | $1$1 & 0, $1$0 | 0 | 0) | 0; //@line 89672
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $1$0 = 0;
 $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0; //@line 89680
 return (tempRet0 = tempRet0, $1$0) | 0; //@line 89681
}
function ___uremdi3($a$0, $a$1, $b$0, $b$1) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 var $rem = 0, __stackBase__ = 0;
 __stackBase__ = STACKTOP; //@line 89689
 STACKTOP = STACKTOP + 8 | 0; //@line 89690
 $rem = __stackBase__ | 0; //@line 89691
 ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) | 0; //@line 89692
 STACKTOP = __stackBase__; //@line 89693
 return (tempRet0 = HEAP32[$rem + 4 >> 2] | 0, HEAP32[$rem >> 2] | 0) | 0; //@line 89694
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
 $a$0 = $a$0 | 0;
 $a$1 = $a$1 | 0;
 $b$0 = $b$0 | 0;
 $b$1 = $b$1 | 0;
 $rem = $rem | 0;
 var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $_0$0 = 0, $_0$1 = 0;
 $n_sroa_0_0_extract_trunc = $a$0; //@line 7
 $n_sroa_1_4_extract_shift$0 = $a$1; //@line 8
 $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0; //@line 9
 $d_sroa_0_0_extract_trunc = $b$0; //@line 10
 $d_sroa_1_4_extract_shift$0 = $b$1; //@line 11
 $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0; //@line 12
 if (($n_sroa_1_4_extract_trunc | 0) == 0) {
  $4 = ($rem | 0) != 0; //@line 14
  if (($d_sroa_1_4_extract_trunc | 0) == 0) {
   if ($4) {
    HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0); //@line 17
    HEAP32[$rem + 4 >> 2] = 0; //@line 18
   }
   $_0$1 = 0; //@line 20
   $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0; //@line 21
   return (tempRet0 = $_0$1, $_0$0) | 0; //@line 22
  } else {
   if (!$4) {
    $_0$1 = 0; //@line 25
    $_0$0 = 0; //@line 26
    return (tempRet0 = $_0$1, $_0$0) | 0; //@line 27
   }
   HEAP32[$rem >> 2] = $a$0 | 0; //@line 29
   HEAP32[$rem + 4 >> 2] = $a$1 & 0; //@line 30
   $_0$1 = 0; //@line 31
   $_0$0 = 0; //@line 32
   return (tempRet0 = $_0$1, $_0$0) | 0; //@line 33
  }
 }
 $17 = ($d_sroa_1_4_extract_trunc | 0) == 0; //@line 36
 do {
  if (($d_sroa_0_0_extract_trunc | 0) == 0) {
   if ($17) {
    if (($rem | 0) != 0) {
     HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0); //@line 41
     HEAP32[$rem + 4 >> 2] = 0; //@line 42
    }
    $_0$1 = 0; //@line 44
    $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0; //@line 45
    return (tempRet0 = $_0$1, $_0$0) | 0; //@line 46
   }
   if (($n_sroa_0_0_extract_trunc | 0) == 0) {
    if (($rem | 0) != 0) {
     HEAP32[$rem >> 2] = 0; //@line 50
     HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0); //@line 51
    }
    $_0$1 = 0; //@line 53
    $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0; //@line 54
    return (tempRet0 = $_0$1, $_0$0) | 0; //@line 55
   }
   $37 = $d_sroa_1_4_extract_trunc - 1 | 0; //@line 57
   if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
    if (($rem | 0) != 0) {
     HEAP32[$rem >> 2] = $a$0 | 0; //@line 60
     HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0; //@line 61
    }
    $_0$1 = 0; //@line 63
    $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0); //@line 64
    return (tempRet0 = $_0$1, $_0$0) | 0; //@line 65
   }
   $51 = (_llvm_ctlz_i32($d_sroa_1_4_extract_trunc | 0) | 0) - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0; //@line 68
   if ($51 >>> 0 <= 30) {
    $57 = $51 + 1 | 0; //@line 70
    $58 = 31 - $51 | 0; //@line 71
    $sr_1_ph = $57; //@line 72
    $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0); //@line 73
    $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0); //@line 74
    $q_sroa_0_1_ph = 0; //@line 75
    $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58; //@line 76
    break;
   }
   if (($rem | 0) == 0) {
    $_0$1 = 0; //@line 80
    $_0$0 = 0; //@line 81
    return (tempRet0 = $_0$1, $_0$0) | 0; //@line 82
   }
   HEAP32[$rem >> 2] = $a$0 | 0; //@line 84
   HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0; //@line 85
   $_0$1 = 0; //@line 86
   $_0$0 = 0; //@line 87
   return (tempRet0 = $_0$1, $_0$0) | 0; //@line 88
  } else {
   if (!$17) {
    $119 = (_llvm_ctlz_i32($d_sroa_1_4_extract_trunc | 0) | 0) - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0; //@line 92
    if ($119 >>> 0 <= 31) {
     $125 = $119 + 1 | 0; //@line 94
     $126 = 31 - $119 | 0; //@line 95
     $130 = $119 - 31 >> 31; //@line 96
     $sr_1_ph = $125; //@line 97
     $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126; //@line 98
     $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130; //@line 99
     $q_sroa_0_1_ph = 0; //@line 100
     $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126; //@line 101
     break;
    }
    if (($rem | 0) == 0) {
     $_0$1 = 0; //@line 105
     $_0$0 = 0; //@line 106
     return (tempRet0 = $_0$1, $_0$0) | 0; //@line 107
    }
    HEAP32[$rem >> 2] = $a$0 | 0; //@line 109
    HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0; //@line 110
    $_0$1 = 0; //@line 111
    $_0$0 = 0; //@line 112
    return (tempRet0 = $_0$1, $_0$0) | 0; //@line 113
   }
   $66 = $d_sroa_0_0_extract_trunc - 1 | 0; //@line 115
   if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
    $88 = (_llvm_ctlz_i32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 - (_llvm_ctlz_i32($n_sroa_1_4_extract_trunc | 0) | 0) | 0; //@line 118
    $89 = 64 - $88 | 0; //@line 119
    $91 = 32 - $88 | 0; //@line 120
    $92 = $91 >> 31; //@line 121
    $95 = $88 - 32 | 0; //@line 122
    $105 = $95 >> 31; //@line 123
    $sr_1_ph = $88; //@line 124
    $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105; //@line 125
    $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0); //@line 126
    $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92; //@line 127
    $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31; //@line 128
    break;
   }
   if (($rem | 0) != 0) {
    HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc; //@line 132
    HEAP32[$rem + 4 >> 2] = 0; //@line 133
   }
   if (($d_sroa_0_0_extract_trunc | 0) == 1) {
    $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0; //@line 136
    $_0$0 = $a$0 | 0 | 0; //@line 137
    return (tempRet0 = $_0$1, $_0$0) | 0; //@line 138
   } else {
    $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0; //@line 140
    $_0$1 = $n_sroa_1_4_extract_trunc >>> ($78 >>> 0) | 0; //@line 141
    $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0; //@line 142
    return (tempRet0 = $_0$1, $_0$0) | 0; //@line 143
   }
  }
 } while (0);
 if (($sr_1_ph | 0) == 0) {
  $q_sroa_1_1_lcssa = $q_sroa_1_1_ph; //@line 148
  $q_sroa_0_1_lcssa = $q_sroa_0_1_ph; //@line 149
  $r_sroa_1_1_lcssa = $r_sroa_1_1_ph; //@line 150
  $r_sroa_0_1_lcssa = $r_sroa_0_1_ph; //@line 151
  $carry_0_lcssa$1 = 0; //@line 152
  $carry_0_lcssa$0 = 0; //@line 153
 } else {
  $d_sroa_0_0_insert_insert99$0 = $b$0 | 0 | 0; //@line 155
  $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0; //@line 156
  $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0, $d_sroa_0_0_insert_insert99$1, -1, -1) | 0; //@line 157
  $137$1 = tempRet0; //@line 158
  $q_sroa_1_1198 = $q_sroa_1_1_ph; //@line 159
  $q_sroa_0_1199 = $q_sroa_0_1_ph; //@line 160
  $r_sroa_1_1200 = $r_sroa_1_1_ph; //@line 161
  $r_sroa_0_1201 = $r_sroa_0_1_ph; //@line 162
  $sr_1202 = $sr_1_ph; //@line 163
  $carry_0203 = 0; //@line 164
  while (1) {
   $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1; //@line 166
   $149 = $carry_0203 | $q_sroa_0_1199 << 1; //@line 167
   $r_sroa_0_0_insert_insert42$0 = $r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31 | 0; //@line 168
   $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0; //@line 169
   _i64Subtract($137$0, $137$1, $r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1) | 0; //@line 170
   $150$1 = tempRet0; //@line 171
   $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1; //@line 172
   $152 = $151$0 & 1; //@line 173
   $r_sroa_0_0_extract_trunc = _i64Subtract($r_sroa_0_0_insert_insert42$0, $r_sroa_0_0_insert_insert42$1, $151$0 & $d_sroa_0_0_insert_insert99$0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1) | 0; //@line 175
   $r_sroa_1_4_extract_trunc = tempRet0; //@line 176
   $155 = $sr_1202 - 1 | 0; //@line 177
   if (($155 | 0) == 0) {
    break;
   } else {
    $q_sroa_1_1198 = $147; //@line 181
    $q_sroa_0_1199 = $149; //@line 182
    $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc; //@line 183
    $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc; //@line 184
    $sr_1202 = $155; //@line 185
    $carry_0203 = $152; //@line 186
   }
  }
  $q_sroa_1_1_lcssa = $147; //@line 189
  $q_sroa_0_1_lcssa = $149; //@line 190
  $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc; //@line 191
  $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc; //@line 192
  $carry_0_lcssa$1 = 0; //@line 193
  $carry_0_lcssa$0 = $152; //@line 194
 }
 $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa; //@line 196
 $q_sroa_0_0_insert_ext75$1 = 0; //@line 197
 if (($rem | 0) != 0) {
  HEAP32[$rem >> 2] = $r_sroa_0_1_lcssa; //@line 200
  HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa; //@line 201
 }
 $_0$1 = ($q_sroa_0_0_insert_ext75$0 | 0) >>> 31 | ($q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1) << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1; //@line 203
 $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0; //@line 204
 return (tempRet0 = $_0$1, $_0$0) | 0; //@line 205
}
function dynCall_ii(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 return FUNCTION_TABLE_ii[index & 31](a1 | 0) | 0; //@line 216
}
function dynCall_viiiii(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 FUNCTION_TABLE_viiiii[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0); //@line 223
}
function dynCall_vi(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 FUNCTION_TABLE_vi[index & 1023](a1 | 0); //@line 230
}
function dynCall_vii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 FUNCTION_TABLE_vii[index & 511](a1 | 0, a2 | 0); //@line 237
}
function dynCall_iiii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 return FUNCTION_TABLE_iiii[index & 127](a1 | 0, a2 | 0, a3 | 0) | 0; //@line 244
}
function dynCall_viii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 FUNCTION_TABLE_viii[index & 63](a1 | 0, a2 | 0, a3 | 0); //@line 251
}
function dynCall_v(index) {
 index = index | 0;
 FUNCTION_TABLE_v[index & 7](); //@line 258
}
function dynCall_iiiii(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 return FUNCTION_TABLE_iiiii[index & 127](a1 | 0, a2 | 0, a3 | 0, a4 | 0) | 0; //@line 265
}
function dynCall_iii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 return FUNCTION_TABLE_iii[index & 63](a1 | 0, a2 | 0) | 0; //@line 272
}
function dynCall_iiiiii(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 return FUNCTION_TABLE_iiiiii[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0) | 0; //@line 279
}
function dynCall_viiii(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 FUNCTION_TABLE_viiii[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0); //@line 286
}
function b0(p0) {
 p0 = p0 | 0;
 abort(0); //@line 289
 return 0; //@line 289
}
function b1(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 abort(1); //@line 290
}
function b2(p0) {
 p0 = p0 | 0;
 abort(2); //@line 291
}
function b3(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 abort(3); //@line 292
}
function b4(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(4); //@line 293
 return 0; //@line 293
}
function b5(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(5); //@line 294
}
function b6() {
 abort(6); //@line 295
}
function b7(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 abort(7); //@line 296
 return 0; //@line 296
}
function b8(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 abort(8); //@line 297
 return 0; //@line 297
}
function b9(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 abort(9); //@line 298
 return 0; //@line 298
}
function b10(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 abort(10); //@line 299
}
// EMSCRIPTEN_END_FUNCS
  var FUNCTION_TABLE_ii = [b0,b0,_snd_null_open,b0,_chr_stdio_open,b0,_sdl_close,b0,_snd_sdl_open,b0,_chr_posix_open
  ,b0,_chr_pty_open,b0,_chr_null_open,b0,_chr_mouse_open,b0,_e6522_shift_out,b0,_null_close,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0];
  var FUNCTION_TABLE_viiiii = [b1,b1,_mac_ser_set_comm,b1];
  var FUNCTION_TABLE_vi = [b2,b2,_adb_kbd_del,b2,_op6e00,b2,_snd_sdl_close,b2,_adb_kbd_flush,b2,_op00c0
  ,b2,_op4000,b2,_opd080,b2,_op0180,b2,_opf000,b2,_ope080
  ,b2,_mac_scsi_cmd_mode_select,b2,_op4a00,b2,_op8140,b2,_op4e80,b2,_opc080
  ,b2,_op01c0,b2,_opd0c0,b2,_ope100,b2,_chr_posix_close,b2,_ope0c0
  ,b2,_op4680,b2,_op9080,b2,_op0280,b2,_op53c0,b2,_op0c40
  ,b2,_ope3c0,b2,_op40c0,b2,_sdl_del,b2,_adb_dev_flush,b2,_op50c0
  ,b2,_opb1c0,b2,_opd1c0,b2,_null_del,b2,_op6900,b2,_op63001090
  ,b2,_op6d001100,b2,_op4440,b2,_ope5c0,b2,_op9100,b2,_op6400
  ,b2,_dsk_pce_del,b2,_op5ac0,b2,_op0800,b2,_op5080,b2,_op6700
  ,b2,_opebc0,b2,_op9040,b2,_op0240,b2,_op4880,b2,_op0c00
  ,b2,_op4a40,b2,_op42c0,b2,_ope040,b2,_bp_segofs_del,b2,_op0140
  ,b2,_op57c01078,b2,_op8080,b2,_op5dc0,b2,_op6200,b2,_op4080
  ,b2,_chr_null_close,b2,_op5ac01081,b2,_op0480,b2,_op4640,b2,_op6c00
  ,b2,_op5bc01082,b2,_op3040,b2,_null_update,b2,_op4cc0,b2,_op9140
  ,b2,_adb_kbd_reset,b2,_mac_scsi_cmd_write6_finish,b2,_op6a001097,b2,_op51c0,b2,_opc000
  ,b2,_op0840,b2,_op56c01077,b2,_mac_scsi_cmd_read10,b2,_dsk_img_del,b2,_op1000
  ,b2,_op6d00,b2,_adb_dev_reset,b2,_op4a001068,b2,_op54c01075,b2,_op55c01076
  ,b2,_ope4c0,b2,_opd180,b2,_op4840,b2,_mac_scsi_cmd_format_unit,b2,_op66001093
  ,b2,_op56c0,b2,_ope000,b2,_op0100,b2,_op59c01080,b2,_ope180
  ,b2,_op64001091,b2,_op4600,b2,_op51c01072,b2,_ope9c0,b2,_op0200
  ,b2,_op5cc0,b2,_op54c0,b2,_mac_scsi_cmd_read_capacity,b2,_op4180,b2,_opd100
  ,b2,_op91c0,b2,_op4a801070,b2,_sig_int,b2,_op52c01073,b2,_op6000
  ,b2,_opefc0,b2,_opb100,b2,_op9180,b2,_opc040,b2,_op58c01079
  ,b2,_mac_scsi_cmd_read6,b2,_op5bc0,b2,_adb_mouse_reset,b2,_op5ec0,b2,_op6800
  ,b2,_op0a40,b2,_op90c0,b2,_op7000,b2,_opeac0,b2,_op4800
  ,b2,_op5040,b2,_op6a00,b2,_op5ec01085,b2,_chr_mouse_close,b2,_ope140
  ,b2,_op8000,b2,_opc140,b2,_op5dc01084,b2,_opa000,b2,_op5fc01086
  ,b2,_ope8c0,b2,_op6b001098,b2,_opb140,b2,_op2000,b2,_ope2c0
  ,b2,_op41c0,b2,_op50c01071,b2,_op6600,b2,_ope7c0,b2,_op08c0
  ,b2,_op0e80,b2,_bp_addr_del,b2,_op4a80,b2,_op61001088,b2,_mac_scsi_cmd_verify10
  ,b2,_op6100,b2,_opd140,b2,_op65001092,b2,_op55c0,b2,_op69001096
  ,b2,_op4200,b2,_opd040,b2,_adb_mouse_del,b2,_op0600,b2,_op6b00
  ,b2,_op46c0,b2,_op5000,b2,_adb_mouse_flush,b2,_op60001087,b2,_sdl_update
  ,b2,_null_check,b2,_op5180,b2,_op8040,b2,_op48c0,b2,_op4e40
  ,b2,_op6e001101,b2,_op5cc01083,b2,_op2040,b2,_op4ec0,b2,_op52c0
  ,b2,_bp_expr_del,b2,_mac_scsi_cmd_mode_sense,b2,_mac_scsi_cmd_sense,b2,_op6f00,b2,_op4c00
  ,b2,_op58c0,b2,_sdl_check,b2,_mac_scsi_cmd_read_buffer,b2,_op4100,b2,_chr_pty_close
  ,b2,_opecc0,b2,_opd000,b2,_op4240,b2,_dsk_ram_del,b2,_dsk_dosemu_del
  ,b2,_op0640,b2,_opb000,b2,_dsk_part_del,b2,_op4400,b2,_opeec0
  ,b2,_op59c0,b2,_op6f001102,b2,_e68_op_undefined,b2,_op5fc0,b2,_op67001094
  ,b2,_mac_scsi_cmd_test_unit_ready,b2,_op53c01074,b2,_dsk_psi_del,b2,_op3000,b2,_op80c0
  ,b2,_chr_stdio_close,b2,_op6c001099,b2,_sig_term,b2,_opc100,b2,_op4c40
  ,b2,_op0a80,b2,_sig_segv,b2,_opc0c0,b2,_op57c0,b2,_op4040
  ,b2,_op44c0,b2,_op0680,b2,_op0440,b2,_op8100,b2,_ope6c0
  ,b2,_op6500,b2,_opb040,b2,_op0040,b2,_op5140,b2,_op0e00
  ,b2,_op9000,b2,_op4a401069,b2,_mac_scsi_cmd_start_stop,b2,_opc180,b2,_mac_scsi_cmd_inquiry
  ,b2,_dsk_qed_del,b2,_snd_null_close,b2,_op0a00,b2,_op4280,b2,_ope1c0
  ,b2,_opc1c0,b2,_op5100,b2,_op81c0,b2,_dsk_cow_del,b2,_op6300
  ,b2,_op62001089,b2,_opb0c0,b2,_opb180,b2,_op8180,b2,_op0880
  ,b2,_op0400,b2,_mac_scsi_cmd_write6,b2,_op49c0_00,b2,_op0000,b2,_op49c0
  ,b2,_op0080,b2,_op4ac0,b2,_opb080,b2,_op0e40,b2,_op4480
  ,b2,_op68001095,b2,_mac_scsi_cmd_write10,b2,_op0c80,b2,_op4c80,b2,_mac_scsi_cmd_write10_finish,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2,b2];
  var FUNCTION_TABLE_vii = [b3,b3,_d_b040,b3,_d_c100,b3,_d_9080,b3,_d_8000,b3,_d_0000
  ,b3,_d_0c00,b3,_d_0400,b3,_d_0e40,b3,_d_01c0,b3,_d_4280
  ,b3,_d_4e40,b3,_d_4600,b3,_d_b180,b3,_d_4040,b3,_d_0200
  ,b3,_d_9040,b3,_d_80c0,b3,_d_d180,b3,_d_d0c0,b3,_d_0840
  ,b3,_d_6000,b3,_d_ebc0,b3,_mac_interrupt_scc,b3,_d_90c0,b3,_d_0440
  ,b3,_d_e0c0,b3,_d_0e80,b3,_d_46c0,b3,_d_b000,b3,_d_4240
  ,b3,_d_4ac0,b3,_d_7000,b3,_d_4640,b3,_d_50c0,b3,_mac_log_undef
  ,b3,_d_0180,b3,_d_40c0,b3,_d_e7c0,b3,_d_e8c0,b3,_d_8140
  ,b3,_adb_mouse_talk_done,b3,_d_4a80,b3,_d_e9c0,b3,_d_00c0,b3,_d_8040
  ,b3,_d_0c80,b3,_d_e000,b3,_d_0800,b3,_mac_set_rtc_data,b3,_d_0480
  ,b3,_d_0640,b3,_d_c180,b3,_d_0240,b3,_d_9180,b3,_di_und
  ,b3,_d_8100,b3,_d_1000,b3,_d_e180,b3,_mac_interrupt_osi,b3,_d_4200
  ,b3,_d_d100,b3,_d_e040,b3,_d_4180,b3,_adb_kbd_talk_done,b3,_d_0140
  ,b3,_adb_dev_talk_done,b3,_d_4c80,b3,_d_41c0,b3,_d_e6c0,b3,_d_0a80
  ,b3,_mac_kbd_set_uint8,b3,_d_3040,b3,_d_0600,b3,_d_c1c0,b3,_d_d080
  ,b3,_d_c000,b3,_d_42c0,b3,_d_4a00,b3,_d_e4c0,b3,_bp_addr_print
  ,b3,_d_e140,b3,_d_e5c0,b3,_d_4800,b3,_mac_kbd_set_data,b3,_d_e3c0
  ,b3,_d_4e80,b3,_d_5000,b3,_d_d140,b3,_d_e080,b3,_d_0880
  ,b3,_d_04c0,b3,_mac_set_reset,b3,_d_0100,b3,_d_4440,b3,_d_a000
  ,b3,_d_0080,b3,_d_3000,b3,_d_0a40,b3,_d_efc0,b3,_d_9100
  ,b3,_d_c040,b3,_mac_set_adb_int,b3,_bp_expr_print,b3,_d_5180,b3,_d_4a40
  ,b3,_d_e100,b3,_d_4840,b3,_d_eec0,b3,_d_5040,b3,_d_e2c0
  ,b3,_mac_set_iwm_motor,b3,_d_8180,b3,_d_ecc0,b3,_d_4400,b3,_d_0040
  ,b3,_d_c0c0,b3,_d_0a00,b3,_d_b1c0,b3,_mac_interrupt_via,b3,_d_b0c0
  ,b3,_d_4080,b3,_d_b100,b3,_mac_interrupt_vbi,b3,_d_d000,b3,_d_0680
  ,b3,_e6522_shift_in,b3,_d_5140,b3,_mac_ser_set_out,b3,_d_91c0,b3,_d_4880
  ,b3,_d_4cc0,b3,_d_e1c0,b3,_d_08c0,b3,_d_9140,b3,_d_81c0
  ,b3,_d_0280,b3,_mac_ser_set_inp,b3,_d_02c0,b3,_d_4680,b3,_d_5080
  ,b3,_d_d040,b3,_d_4c00,b3,_d_9000,b3,_mac_set_via_port_a,b3,_mac_set_via_port_b
  ,b3,_d_f000,b3,_bp_segofs_print,b3,_d_2040,b3,_d_b080,b3,_d_c140
  ,b3,_d_0e00,b3,_d_49c0,b3,_d_4000,b3,_d_0c40,b3,_mac_ser_set_rts
  ,b3,_d_5100,b3,_d_eac0,b3,_d_b140,b3,_d_d1c0,b3,_d_48c0
  ,b3,_d_c080,b3,_d_4c40,b3,_mac_log_exception,b3,_d_44c0,b3,_d_4480,b3,_e6522_set_shift_inp,b3,_d_8080,b3,_d_4ec0,b3,_d_2000,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3,b3];
  var FUNCTION_TABLE_iiii = [b4,b4,_mac_set_msg_emu_pause,b4,_null_open,b4,_mac_set_msg_emu_iwm_ro,b4,_chr_stdio_read,b4,_mac_set_msg_emu_video_brightness
  ,b4,_mac_set_msg_emu_iwm_rw,b4,_dsk_qed_set_msg,b4,_mac_set_msg_emu_reset,b4,_mac_set_msg_emu_cpu_speed,b4,_cmd_get_sym1833
  ,b4,_chr_mouse_read,b4,_dsk_pce_set_msg,b4,_snd_null_write,b4,_sdl_set_msg_trm,b4,_mac_set_msg_emu_disk_eject
  ,b4,_dsk_psi_set_msg,b4,_mac_set_msg_emu_exit,b4,_chr_null_read,b4,_cmd_set_sym1835,b4,_bp_segofs_match
  ,b4,_mac_set_msg_emu_serport_file,b4,_mac_set_msg_emu_cpu_model,b4,_null_set_msg_trm,b4,_chr_null_write,b4,_mac_set_msg_emu_pause_toggle
  ,b4,_sdl_open,b4,_dsk_cow_set_msg,b4,_chr_posix_read,b4,_bp_expr_match,b4,_mac_set_msg_mac_insert
  ,b4,_mac_set_msg_emu_stop,b4,_chr_posix_write,b4,_mac_set_msg_emu_realtime_toggle,b4,_adb_kbd_talk,b4,_mac_set_msg
  ,b4,_chr_pty_write,b4,_adb_mouse_talk,b4,_mac_set_msg_emu_iwm_status,b4,_mac_set_msg_emu_cpu_speed_step,b4,_mac_set_msg_emu_serport_driver
  ,b4,_snd_sdl_write,b4,_mac_set_msg_emu_disk_insert,b4,_bp_addr_match,b4,_chr_pty_read,b4,_chr_stdio_write
  ,b4,_adb_dev_talk,b4,_mac_set_msg_emu_disk_commit,b4,_mac_set_msg_emu_disk_rw,b4,_mac_set_msg_emu_disk_ro,b4,_mac_set_msg_emu_realtime,b4,_chr_mouse_write,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4,b4];
  var FUNCTION_TABLE_viii = [b5,b5,_e6522_set_uint16,b5,_mac_mem_set_uint8,b5,_mem_blk_set_uint8_null,b5,_snd_sdl_callback,b5,_mac_mem_set_uint32
  ,b5,_mem_set_uint8,b5,_mac_log_mem,b5,_mem_set_uint32_be,b5,_e6522_set_uint32,b5,_mac_interrupt
  ,b5,_mem_set_uint16_be,b5,_e6522_set_uint8,b5,_mem_blk_set_uint32_null,b5,_mac_scc_set_uint8,b5,_mac_scsi_set_uint16
  ,b5,_mac_set_key,b5,_mem_blk_set_uint16_null,b5,_mac_scsi_set_uint8,b5,_mac_mem_set_uint16,b5,_mem_set_uint8_rw,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5,b5];
  var FUNCTION_TABLE_v = [b6,b6,_mac_atexit,b6,_mac_run_emscripten_step,b6,b6,b6];
  var FUNCTION_TABLE_iiiii = [b7,b7,_dsk_ram_write,b7,_snd_sdl_set_params,b7,_e68_ea_101_xxx,b7,_dsk_qed_get_msg,b7,_e68_ea_001_xxx
  ,b7,_dsk_qed_write,b7,_dsk_cow_get_msg,b7,_e68_ea_111_100,b7,_e68_ea_000_xxx,b7,_dsk_cow_read
  ,b7,_e68_ea_011_111,b7,_e68_ea_100_xxx,b7,_dsk_img_write,b7,_e68_ea_110_xxx,b7,_e68_ea_111_001
  ,b7,_e68_ea_111_000,b7,_e68_ea_011_xxx,b7,_e68_ea_111_xxx,b7,_dsk_psi_write,b7,_snd_null_set_params
  ,b7,_dsk_psi_read,b7,_dsk_pce_get_msg,b7,_e68_ea_100_111,b7,_dsk_pce_read,b7,_dsk_part_write
  ,b7,_dsk_ram_read,b7,_dsk_part_read,b7,_e68_ea_010_xxx,b7,_e68_ea_111_010,b7,_e68_ea_111_011
  ,b7,_dsk_qed_read,b7,_dsk_cow_write,b7,_dsk_img_read,b7,_dsk_dosemu_write,b7,_dsk_pce_write,b7,_dsk_dosemu_read,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7,b7];
  var FUNCTION_TABLE_iii = [b8,b8,_mac_mem_get_uint16,b8,_e6522_get_uint8,b8,_mem_blk_get_uint32_null,b8,_mac_scsi_get_uint16,b8,_e6522_get_uint32
  ,b8,_mem_get_uint16_be,b8,_mac_cmd,b8,_chr_null_get_ctl,b8,_mac_mem_get_uint32,b8,_mem_blk_get_uint8_null
  ,b8,_mem_get_uint32_be,b8,_mac_mem_get_uint8,b8,_mem_get_uint8,b8,_mac_scsi_get_uint8,b8,_mac_scc_get_uint8
  ,b8,_e6522_get_uint16,b8,_chr_null_set_ctl,b8,_mac_hook,b8,_chr_mouse_get_ctl,b8,_chr_mouse_set_ctl,b8,_mem_blk_get_uint16_null,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8,b8];
  var FUNCTION_TABLE_iiiiii = [b9,b9,_chr_null_set_params,b9,_chr_mouse_set_params,b9,b9,b9];
  var FUNCTION_TABLE_viiii = [b10,b10,_adb_dev_listen,b10,_mac_set_mouse,b10,_adb_kbd_listen,b10];
  return { _memcmp: _memcmp, _strncasecmp: _strncasecmp, _strcat: _strcat, _free: _free, _main: _main, _realloc: _realloc, _tolower: _tolower, _strlen: _strlen, _memset: _memset, _malloc: _malloc, _memcpy: _memcpy, _strcasecmp: _strcasecmp, _strcpy: _strcpy, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, setThrew: setThrew, setTempRet0: setTempRet0, setTempRet1: setTempRet1, setTempRet2: setTempRet2, setTempRet3: setTempRet3, setTempRet4: setTempRet4, setTempRet5: setTempRet5, setTempRet6: setTempRet6, setTempRet7: setTempRet7, setTempRet8: setTempRet8, setTempRet9: setTempRet9, dynCall_ii: dynCall_ii, dynCall_viiiii: dynCall_viiiii, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_iiii: dynCall_iiii, dynCall_viii: dynCall_viii, dynCall_v: dynCall_v, dynCall_iiiii: dynCall_iiiii, dynCall_iii: dynCall_iii, dynCall_iiiiii: dynCall_iiiiii, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
({ "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array }, { "abort": abort, "assert": assert, "asmPrintInt": asmPrintInt, "asmPrintFloat": asmPrintFloat, "min": Math_min, "invoke_ii": invoke_ii, "invoke_viiiii": invoke_viiiii, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_iiii": invoke_iiii, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_iiiii": invoke_iiiii, "invoke_iii": invoke_iii, "invoke_iiiiii": invoke_iiiiii, "invoke_viiii": invoke_viiii, "_llvm_lifetime_end": _llvm_lifetime_end, "_lseek": _lseek, "_llvm_dbg_value": _llvm_dbg_value, "_fclose": _fclose, "_SDL_EventState": _SDL_EventState, "_strtoul": _strtoul, "_fflush": _fflush, "_SDL_GetMouseState": _SDL_GetMouseState, "_strtol": _strtol, "_fputc": _fputc, "_fwrite": _fwrite, "_ptsname": _ptsname, "_send": _send, "_tcflush": _tcflush, "_fputs": _fputs, "_emscripten_cancel_main_loop": _emscripten_cancel_main_loop, "_SDL_UnlockAudio": _SDL_UnlockAudio, "_SDL_WasInit": _SDL_WasInit, "_read": _read, "_fileno": _fileno, "_fsync": _fsync, "_signal": _signal, "_SDL_PauseAudio": _SDL_PauseAudio, "_SDL_LockAudio": _SDL_LockAudio, "_strcmp": _strcmp, "_strncmp": _strncmp, "_snprintf": _snprintf, "_fgetc": _fgetc, "_atexit": _atexit, "_close": _close, "_tcsetattr": _tcsetattr, "_strchr": _strchr, "_tcgetattr": _tcgetattr, "_poll": _poll, "___setErrNo": ___setErrNo, "_grantpt": _grantpt, "_ftell": _ftell, "_exit": _exit, "_sprintf": _sprintf, "_fcntl": _fcntl, "_SDL_ShowCursor": _SDL_ShowCursor, "_gmtime": _gmtime, "_symlink": _symlink, "_localtime_r": _localtime_r, "_ftruncate": _ftruncate, "_recv": _recv, "_SDL_PollEvent": _SDL_PollEvent, "_SDL_Init": _SDL_Init, "__exit": __exit, "_SDL_WM_GrabInput": _SDL_WM_GrabInput, "_llvm_va_end": _llvm_va_end, "_tzset": _tzset, "_SDL_CreateRGBSurfaceFrom": _SDL_CreateRGBSurfaceFrom, "_printf": _printf, "_unlockpt": _unlockpt, "_pread": _pread, "_SDL_SetVideoMode": _SDL_SetVideoMode, "_fopen": _fopen, "_open": _open, "_usleep": _usleep, "_SDL_EnableKeyRepeat": _SDL_EnableKeyRepeat, "_puts": _puts, "_SDL_GetVideoInfo": _SDL_GetVideoInfo, "_nanosleep": _nanosleep, "_SDL_Flip": _SDL_Flip, "_SDL_InitSubSystem": _SDL_InitSubSystem, "_strdup": _strdup, "_SDL_GetError": _SDL_GetError, "__formatString": __formatString, "_gettimeofday": _gettimeofday, "_vfprintf": _vfprintf, "_SDL_WM_SetCaption": _SDL_WM_SetCaption, "_sbrk": _sbrk, "___errno_location": ___errno_location, "_SDL_CloseAudio": _SDL_CloseAudio, "_isspace": _isspace, "_llvm_lifetime_start": _llvm_lifetime_start, "__parseInt": __parseInt, "_SDL_OpenAudio": _SDL_OpenAudio, "_localtime": _localtime, "_gmtime_r": _gmtime_r, "_sysconf": _sysconf, "_fread": _fread, "_SDL_WM_ToggleFullScreen": _SDL_WM_ToggleFullScreen, "_abort": _abort, "_fprintf": _fprintf, "_tan": _tan, "__reallyNegative": __reallyNegative, "_posix_openpt": _posix_openpt, "_fseek": _fseek, "_write": _write, "_SDL_UpperBlit": _SDL_UpperBlit, "_truncate": _truncate, "_emscripten_set_main_loop": _emscripten_set_main_loop, "_unlink": _unlink, "_pwrite": _pwrite, "_SDL_FreeSurface": _SDL_FreeSurface, "_time": _time, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8, "ctlz_i8": ctlz_i8, "NaN": NaN, "Infinity": Infinity, "_stdout": _stdout, "_stdin": _stdin, "_stderr": _stderr }, buffer);
var _memcmp = Module["_memcmp"] = asm["_memcmp"];
var _strncasecmp = Module["_strncasecmp"] = asm["_strncasecmp"];
var _strcat = Module["_strcat"] = asm["_strcat"];
var _free = Module["_free"] = asm["_free"];
var _main = Module["_main"] = asm["_main"];
var _realloc = Module["_realloc"] = asm["_realloc"];
var _tolower = Module["_tolower"] = asm["_tolower"];
var _strlen = Module["_strlen"] = asm["_strlen"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _strcasecmp = Module["_strcasecmp"] = asm["_strcasecmp"];
var _strcpy = Module["_strcpy"] = asm["_strcpy"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_iiiiii = Module["dynCall_iiiiii"] = asm["dynCall_iiiiii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
Runtime.stackAlloc = function(size) { return asm['stackAlloc'](size) };
Runtime.stackSave = function() { return asm['stackSave']() };
Runtime.stackRestore = function(top) { asm['stackRestore'](top) };
// TODO: strip out parts of this we do not need
//======= begin closure i64 code =======
// Copyright 2009 The Closure Library Authors. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS-IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
/**
 * @fileoverview Defines a Long class for representing a 64-bit two's-complement
 * integer value, which faithfully simulates the behavior of a Java "long". This
 * implementation is derived from LongLib in GWT.
 *
 */
var i64Math = (function() { // Emscripten wrapper
  var goog = { math: {} };
  /**
   * Constructs a 64-bit two's-complement integer, given its low and high 32-bit
   * values as *signed* integers.  See the from* functions below for more
   * convenient ways of constructing Longs.
   *
   * The internal representation of a long is the two given signed, 32-bit values.
   * We use 32-bit pieces because these are the size of integers on which
   * Javascript performs bit-operations.  For operations like addition and
   * multiplication, we split each number into 16-bit pieces, which can easily be
   * multiplied within Javascript's floating-point representation without overflow
   * or change in sign.
   *
   * In the algorithms below, we frequently reduce the negative case to the
   * positive case by negating the input(s) and then post-processing the result.
   * Note that we must ALWAYS check specially whether those values are MIN_VALUE
   * (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as
   * a positive number, it overflows back into a negative).  Not handling this
   * case would often result in infinite recursion.
   *
   * @param {number} low  The low (signed) 32 bits of the long.
   * @param {number} high  The high (signed) 32 bits of the long.
   * @constructor
   */
  goog.math.Long = function(low, high) {
    /**
     * @type {number}
     * @private
     */
    this.low_ = low | 0;  // force into 32 signed bits.
    /**
     * @type {number}
     * @private
     */
    this.high_ = high | 0;  // force into 32 signed bits.
  };
  // NOTE: Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the
  // from* methods on which they depend.
  /**
   * A cache of the Long representations of small integer values.
   * @type {!Object}
   * @private
   */
  goog.math.Long.IntCache_ = {};
  /**
   * Returns a Long representing the given (32-bit) integer value.
   * @param {number} value The 32-bit integer in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromInt = function(value) {
    if (-128 <= value && value < 128) {
      var cachedObj = goog.math.Long.IntCache_[value];
      if (cachedObj) {
        return cachedObj;
      }
    }
    var obj = new goog.math.Long(value | 0, value < 0 ? -1 : 0);
    if (-128 <= value && value < 128) {
      goog.math.Long.IntCache_[value] = obj;
    }
    return obj;
  };
  /**
   * Returns a Long representing the given value, provided that it is a finite
   * number.  Otherwise, zero is returned.
   * @param {number} value The number in question.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromNumber = function(value) {
    if (isNaN(value) || !isFinite(value)) {
      return goog.math.Long.ZERO;
    } else if (value <= -goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MIN_VALUE;
    } else if (value + 1 >= goog.math.Long.TWO_PWR_63_DBL_) {
      return goog.math.Long.MAX_VALUE;
    } else if (value < 0) {
      return goog.math.Long.fromNumber(-value).negate();
    } else {
      return new goog.math.Long(
          (value % goog.math.Long.TWO_PWR_32_DBL_) | 0,
          (value / goog.math.Long.TWO_PWR_32_DBL_) | 0);
    }
  };
  /**
   * Returns a Long representing the 64-bit integer that comes by concatenating
   * the given high and low bits.  Each is assumed to use 32 bits.
   * @param {number} lowBits The low 32-bits.
   * @param {number} highBits The high 32-bits.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromBits = function(lowBits, highBits) {
    return new goog.math.Long(lowBits, highBits);
  };
  /**
   * Returns a Long representation of the given string, written using the given
   * radix.
   * @param {string} str The textual representation of the Long.
   * @param {number=} opt_radix The radix in which the text is written.
   * @return {!goog.math.Long} The corresponding Long value.
   */
  goog.math.Long.fromString = function(str, opt_radix) {
    if (str.length == 0) {
      throw Error('number format error: empty string');
    }
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }
    if (str.charAt(0) == '-') {
      return goog.math.Long.fromString(str.substring(1), radix).negate();
    } else if (str.indexOf('-') >= 0) {
      throw Error('number format error: interior "-" character: ' + str);
    }
    // Do several (8) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 8));
    var result = goog.math.Long.ZERO;
    for (var i = 0; i < str.length; i += 8) {
      var size = Math.min(8, str.length - i);
      var value = parseInt(str.substring(i, i + size), radix);
      if (size < 8) {
        var power = goog.math.Long.fromNumber(Math.pow(radix, size));
        result = result.multiply(power).add(goog.math.Long.fromNumber(value));
      } else {
        result = result.multiply(radixToPower);
        result = result.add(goog.math.Long.fromNumber(value));
      }
    }
    return result;
  };
  // NOTE: the compiler should inline these constant values below and then remove
  // these variables, so there should be no runtime penalty for these.
  /**
   * Number used repeated below in calculations.  This must appear before the
   * first call to any from* function below.
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_16_DBL_ = 1 << 16;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_24_DBL_ = 1 << 24;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_32_DBL_ =
      goog.math.Long.TWO_PWR_16_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_31_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ / 2;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_48_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_16_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_64_DBL_ =
      goog.math.Long.TWO_PWR_32_DBL_ * goog.math.Long.TWO_PWR_32_DBL_;
  /**
   * @type {number}
   * @private
   */
  goog.math.Long.TWO_PWR_63_DBL_ =
      goog.math.Long.TWO_PWR_64_DBL_ / 2;
  /** @type {!goog.math.Long} */
  goog.math.Long.ZERO = goog.math.Long.fromInt(0);
  /** @type {!goog.math.Long} */
  goog.math.Long.ONE = goog.math.Long.fromInt(1);
  /** @type {!goog.math.Long} */
  goog.math.Long.NEG_ONE = goog.math.Long.fromInt(-1);
  /** @type {!goog.math.Long} */
  goog.math.Long.MAX_VALUE =
      goog.math.Long.fromBits(0xFFFFFFFF | 0, 0x7FFFFFFF | 0);
  /** @type {!goog.math.Long} */
  goog.math.Long.MIN_VALUE = goog.math.Long.fromBits(0, 0x80000000 | 0);
  /**
   * @type {!goog.math.Long}
   * @private
   */
  goog.math.Long.TWO_PWR_24_ = goog.math.Long.fromInt(1 << 24);
  /** @return {number} The value, assuming it is a 32-bit integer. */
  goog.math.Long.prototype.toInt = function() {
    return this.low_;
  };
  /** @return {number} The closest floating-point representation to this value. */
  goog.math.Long.prototype.toNumber = function() {
    return this.high_ * goog.math.Long.TWO_PWR_32_DBL_ +
           this.getLowBitsUnsigned();
  };
  /**
   * @param {number=} opt_radix The radix in which the text should be written.
   * @return {string} The textual representation of this value.
   */
  goog.math.Long.prototype.toString = function(opt_radix) {
    var radix = opt_radix || 10;
    if (radix < 2 || 36 < radix) {
      throw Error('radix out of range: ' + radix);
    }
    if (this.isZero()) {
      return '0';
    }
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        // We need to change the Long value before it can be negated, so we remove
        // the bottom-most digit in this base and then recurse to do the rest.
        var radixLong = goog.math.Long.fromNumber(radix);
        var div = this.div(radixLong);
        var rem = div.multiply(radixLong).subtract(this);
        return div.toString(radix) + rem.toInt().toString(radix);
      } else {
        return '-' + this.negate().toString(radix);
      }
    }
    // Do several (6) digits each time through the loop, so as to
    // minimize the calls to the very expensive emulated div.
    var radixToPower = goog.math.Long.fromNumber(Math.pow(radix, 6));
    var rem = this;
    var result = '';
    while (true) {
      var remDiv = rem.div(radixToPower);
      var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt();
      var digits = intval.toString(radix);
      rem = remDiv;
      if (rem.isZero()) {
        return digits + result;
      } else {
        while (digits.length < 6) {
          digits = '0' + digits;
        }
        result = '' + digits + result;
      }
    }
  };
  /** @return {number} The high 32-bits as a signed value. */
  goog.math.Long.prototype.getHighBits = function() {
    return this.high_;
  };
  /** @return {number} The low 32-bits as a signed value. */
  goog.math.Long.prototype.getLowBits = function() {
    return this.low_;
  };
  /** @return {number} The low 32-bits as an unsigned value. */
  goog.math.Long.prototype.getLowBitsUnsigned = function() {
    return (this.low_ >= 0) ?
        this.low_ : goog.math.Long.TWO_PWR_32_DBL_ + this.low_;
  };
  /**
   * @return {number} Returns the number of bits needed to represent the absolute
   *     value of this Long.
   */
  goog.math.Long.prototype.getNumBitsAbs = function() {
    if (this.isNegative()) {
      if (this.equals(goog.math.Long.MIN_VALUE)) {
        return 64;
      } else {
        return this.negate().getNumBitsAbs();
      }
    } else {
      var val = this.high_ != 0 ? this.high_ : this.low_;
      for (var bit = 31; bit > 0; bit--) {
        if ((val & (1 << bit)) != 0) {
          break;
        }
      }
      return this.high_ != 0 ? bit + 33 : bit + 1;
    }
  };
  /** @return {boolean} Whether this value is zero. */
  goog.math.Long.prototype.isZero = function() {
    return this.high_ == 0 && this.low_ == 0;
  };
  /** @return {boolean} Whether this value is negative. */
  goog.math.Long.prototype.isNegative = function() {
    return this.high_ < 0;
  };
  /** @return {boolean} Whether this value is odd. */
  goog.math.Long.prototype.isOdd = function() {
    return (this.low_ & 1) == 1;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long equals the other.
   */
  goog.math.Long.prototype.equals = function(other) {
    return (this.high_ == other.high_) && (this.low_ == other.low_);
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long does not equal the other.
   */
  goog.math.Long.prototype.notEquals = function(other) {
    return (this.high_ != other.high_) || (this.low_ != other.low_);
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than the other.
   */
  goog.math.Long.prototype.lessThan = function(other) {
    return this.compare(other) < 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is less than or equal to the other.
   */
  goog.math.Long.prototype.lessThanOrEqual = function(other) {
    return this.compare(other) <= 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than the other.
   */
  goog.math.Long.prototype.greaterThan = function(other) {
    return this.compare(other) > 0;
  };
  /**
   * @param {goog.math.Long} other Long to compare against.
   * @return {boolean} Whether this Long is greater than or equal to the other.
   */
  goog.math.Long.prototype.greaterThanOrEqual = function(other) {
    return this.compare(other) >= 0;
  };
  /**
   * Compares this Long with the given one.
   * @param {goog.math.Long} other Long to compare against.
   * @return {number} 0 if they are the same, 1 if the this is greater, and -1
   *     if the given one is greater.
   */
  goog.math.Long.prototype.compare = function(other) {
    if (this.equals(other)) {
      return 0;
    }
    var thisNeg = this.isNegative();
    var otherNeg = other.isNegative();
    if (thisNeg && !otherNeg) {
      return -1;
    }
    if (!thisNeg && otherNeg) {
      return 1;
    }
    // at this point, the signs are the same, so subtraction will not overflow
    if (this.subtract(other).isNegative()) {
      return -1;
    } else {
      return 1;
    }
  };
  /** @return {!goog.math.Long} The negation of this value. */
  goog.math.Long.prototype.negate = function() {
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.MIN_VALUE;
    } else {
      return this.not().add(goog.math.Long.ONE);
    }
  };
  /**
   * Returns the sum of this and the given Long.
   * @param {goog.math.Long} other Long to add to this one.
   * @return {!goog.math.Long} The sum of this and the given Long.
   */
  goog.math.Long.prototype.add = function(other) {
    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.
    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;
    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;
    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 + b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 + b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 + b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 + b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };
  /**
   * Returns the difference of this and the given Long.
   * @param {goog.math.Long} other Long to subtract from this.
   * @return {!goog.math.Long} The difference of this and the given Long.
   */
  goog.math.Long.prototype.subtract = function(other) {
    return this.add(other.negate());
  };
  /**
   * Returns the product of this and the given long.
   * @param {goog.math.Long} other Long to multiply with this.
   * @return {!goog.math.Long} The product of this and the other.
   */
  goog.math.Long.prototype.multiply = function(other) {
    if (this.isZero()) {
      return goog.math.Long.ZERO;
    } else if (other.isZero()) {
      return goog.math.Long.ZERO;
    }
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      return other.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return this.isOdd() ? goog.math.Long.MIN_VALUE : goog.math.Long.ZERO;
    }
    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().multiply(other.negate());
      } else {
        return this.negate().multiply(other).negate();
      }
    } else if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
    // If both longs are small, use float multiplication
    if (this.lessThan(goog.math.Long.TWO_PWR_24_) &&
        other.lessThan(goog.math.Long.TWO_PWR_24_)) {
      return goog.math.Long.fromNumber(this.toNumber() * other.toNumber());
    }
    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.
    // We can skip products that would overflow.
    var a48 = this.high_ >>> 16;
    var a32 = this.high_ & 0xFFFF;
    var a16 = this.low_ >>> 16;
    var a00 = this.low_ & 0xFFFF;
    var b48 = other.high_ >>> 16;
    var b32 = other.high_ & 0xFFFF;
    var b16 = other.low_ >>> 16;
    var b00 = other.low_ & 0xFFFF;
    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
    c00 += a00 * b00;
    c16 += c00 >>> 16;
    c00 &= 0xFFFF;
    c16 += a16 * b00;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c16 += a00 * b16;
    c32 += c16 >>> 16;
    c16 &= 0xFFFF;
    c32 += a32 * b00;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a16 * b16;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c32 += a00 * b32;
    c48 += c32 >>> 16;
    c32 &= 0xFFFF;
    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
    c48 &= 0xFFFF;
    return goog.math.Long.fromBits((c16 << 16) | c00, (c48 << 16) | c32);
  };
  /**
   * Returns this Long divided by the given one.
   * @param {goog.math.Long} other Long by which to divide.
   * @return {!goog.math.Long} This Long divided by the given one.
   */
  goog.math.Long.prototype.div = function(other) {
    if (other.isZero()) {
      throw Error('division by zero');
    } else if (this.isZero()) {
      return goog.math.Long.ZERO;
    }
    if (this.equals(goog.math.Long.MIN_VALUE)) {
      if (other.equals(goog.math.Long.ONE) ||
          other.equals(goog.math.Long.NEG_ONE)) {
        return goog.math.Long.MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE
      } else if (other.equals(goog.math.Long.MIN_VALUE)) {
        return goog.math.Long.ONE;
      } else {
        // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.
        var halfThis = this.shiftRight(1);
        var approx = halfThis.div(other).shiftLeft(1);
        if (approx.equals(goog.math.Long.ZERO)) {
          return other.isNegative() ? goog.math.Long.ONE : goog.math.Long.NEG_ONE;
        } else {
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
      }
    } else if (other.equals(goog.math.Long.MIN_VALUE)) {
      return goog.math.Long.ZERO;
    }
    if (this.isNegative()) {
      if (other.isNegative()) {
        return this.negate().div(other.negate());
      } else {
        return this.negate().div(other).negate();
      }
    } else if (other.isNegative()) {
      return this.div(other.negate()).negate();
    }
    // Repeat the following until the remainder is less than other:  find a
    // floating-point that approximates remainder / other *from below*, add this
    // into the result, and subtract it from the remainder.  It is critical that
    // the approximate value is less than or equal to the real value so that the
    // remainder never becomes negative.
    var res = goog.math.Long.ZERO;
    var rem = this;
    while (rem.greaterThanOrEqual(other)) {
      // Approximate the result of division. This may be a little greater or
      // smaller than the actual value.
      var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
      // We will tweak the approximate result by changing it in the 48-th digit or
      // the smallest non-fractional digit, whichever is larger.
      var log2 = Math.ceil(Math.log(approx) / Math.LN2);
      var delta = (log2 <= 48) ? 1 : Math.pow(2, log2 - 48);
      // Decrease the approximation until it is smaller than the remainder.  Note
      // that if it is too large, the product overflows and is negative.
      var approxRes = goog.math.Long.fromNumber(approx);
      var approxRem = approxRes.multiply(other);
      while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
        approx -= delta;
        approxRes = goog.math.Long.fromNumber(approx);
        approxRem = approxRes.multiply(other);
      }
      // We know the answer can't be zero... and actually, zero would cause
      // infinite recursion since we would make no progress.
      if (approxRes.isZero()) {
        approxRes = goog.math.Long.ONE;
      }
      res = res.add(approxRes);
      rem = rem.subtract(approxRem);
    }
    return res;
  };
  /**
   * Returns this Long modulo the given one.
   * @param {goog.math.Long} other Long by which to mod.
   * @return {!goog.math.Long} This Long modulo the given one.
   */
  goog.math.Long.prototype.modulo = function(other) {
    return this.subtract(this.div(other).multiply(other));
  };
  /** @return {!goog.math.Long} The bitwise-NOT of this value. */
  goog.math.Long.prototype.not = function() {
    return goog.math.Long.fromBits(~this.low_, ~this.high_);
  };
  /**
   * Returns the bitwise-AND of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to AND.
   * @return {!goog.math.Long} The bitwise-AND of this and the other.
   */
  goog.math.Long.prototype.and = function(other) {
    return goog.math.Long.fromBits(this.low_ & other.low_,
                                   this.high_ & other.high_);
  };
  /**
   * Returns the bitwise-OR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to OR.
   * @return {!goog.math.Long} The bitwise-OR of this and the other.
   */
  goog.math.Long.prototype.or = function(other) {
    return goog.math.Long.fromBits(this.low_ | other.low_,
                                   this.high_ | other.high_);
  };
  /**
   * Returns the bitwise-XOR of this Long and the given one.
   * @param {goog.math.Long} other The Long with which to XOR.
   * @return {!goog.math.Long} The bitwise-XOR of this and the other.
   */
  goog.math.Long.prototype.xor = function(other) {
    return goog.math.Long.fromBits(this.low_ ^ other.low_,
                                   this.high_ ^ other.high_);
  };
  /**
   * Returns this Long with bits shifted to the left by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the left by the given amount.
   */
  goog.math.Long.prototype.shiftLeft = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var low = this.low_;
      if (numBits < 32) {
        var high = this.high_;
        return goog.math.Long.fromBits(
            low << numBits,
            (high << numBits) | (low >>> (32 - numBits)));
      } else {
        return goog.math.Long.fromBits(0, low << (numBits - 32));
      }
    }
  };
  /**
   * Returns this Long with bits shifted to the right by the given amount.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount.
   */
  goog.math.Long.prototype.shiftRight = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >> numBits);
      } else {
        return goog.math.Long.fromBits(
            high >> (numBits - 32),
            high >= 0 ? 0 : -1);
      }
    }
  };
  /**
   * Returns this Long with bits shifted to the right by the given amount, with
   * the new top bits matching the current sign bit.
   * @param {number} numBits The number of bits by which to shift.
   * @return {!goog.math.Long} This shifted to the right by the given amount, with
   *     zeros placed into the new leading bits.
   */
  goog.math.Long.prototype.shiftRightUnsigned = function(numBits) {
    numBits &= 63;
    if (numBits == 0) {
      return this;
    } else {
      var high = this.high_;
      if (numBits < 32) {
        var low = this.low_;
        return goog.math.Long.fromBits(
            (low >>> numBits) | (high << (32 - numBits)),
            high >>> numBits);
      } else if (numBits == 32) {
        return goog.math.Long.fromBits(high, 0);
      } else {
        return goog.math.Long.fromBits(high >>> (numBits - 32), 0);
      }
    }
  };
  //======= begin jsbn =======
  var navigator = { appName: 'Modern Browser' }; // polyfill a little
  // Copyright (c) 2005  Tom Wu
  // All Rights Reserved.
  // http://www-cs-students.stanford.edu/~tjw/jsbn/
  /*
   * Copyright (c) 2003-2005  Tom Wu
   * All Rights Reserved.
   *
   * Permission is hereby granted, free of charge, to any person obtaining
   * a copy of this software and associated documentation files (the
   * "Software"), to deal in the Software without restriction, including
   * without limitation the rights to use, copy, modify, merge, publish,
   * distribute, sublicense, and/or sell copies of the Software, and to
   * permit persons to whom the Software is furnished to do so, subject to
   * the following conditions:
   *
   * The above copyright notice and this permission notice shall be
   * included in all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS-IS" AND WITHOUT WARRANTY OF ANY KIND, 
   * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY 
   * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.  
   *
   * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,
   * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER
   * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF
   * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT
   * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
   *
   * In addition, the following condition applies:
   *
   * All redistributions must retain an intact copy of this copyright notice
   * and disclaimer.
   */
  // Basic JavaScript BN library - subset useful for RSA encryption.
  // Bits per digit
  var dbits;
  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary&0xffffff)==0xefcafe);
  // (public) Constructor
  function BigInteger(a,b,c) {
    if(a != null)
      if("number" == typeof a) this.fromNumber(a,b,c);
      else if(b == null && "string" != typeof a) this.fromString(a,256);
      else this.fromString(a,b);
  }
  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }
  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.
  // am1: use a single mult and divide to get the high bits,
  // max digit bits should be 26 because
  // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
  function am1(i,x,w,j,c,n) {
    while(--n >= 0) {
      var v = x*this[i++]+w[j]+c;
      c = Math.floor(v/0x4000000);
      w[j++] = v&0x3ffffff;
    }
    return c;
  }
  // am2 avoids a big mult-and-extract completely.
  // Max digit bits should be <= 30 because we do bitwise ops
  // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
  function am2(i,x,w,j,c,n) {
    var xl = x&0x7fff, xh = x>>15;
    while(--n >= 0) {
      var l = this[i]&0x7fff;
      var h = this[i++]>>15;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x7fff)<<15)+w[j]+(c&0x3fffffff);
      c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);
      w[j++] = l&0x3fffffff;
    }
    return c;
  }
  // Alternately, set max digit bits to 28 since some
  // browsers slow down when dealing with 32-bit numbers.
  function am3(i,x,w,j,c,n) {
    var xl = x&0x3fff, xh = x>>14;
    while(--n >= 0) {
      var l = this[i]&0x3fff;
      var h = this[i++]>>14;
      var m = xh*l+h*xl;
      l = xl*l+((m&0x3fff)<<14)+w[j]+c;
      c = (l>>28)+(m>>14)+xh*h;
      w[j++] = l&0xfffffff;
    }
    return c;
  }
  if(j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
    BigInteger.prototype.am = am2;
    dbits = 30;
  }
  else if(j_lm && (navigator.appName != "Netscape")) {
    BigInteger.prototype.am = am1;
    dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
    BigInteger.prototype.am = am3;
    dbits = 28;
  }
  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1<<dbits)-1);
  BigInteger.prototype.DV = (1<<dbits);
  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2,BI_FP);
  BigInteger.prototype.F1 = BI_FP-dbits;
  BigInteger.prototype.F2 = 2*dbits-BI_FP;
  // Digit conversions
  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  var BI_RC = new Array();
  var rr,vv;
  rr = "0".charCodeAt(0);
  for(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;
  rr = "a".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  rr = "A".charCodeAt(0);
  for(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;
  function int2char(n) { return BI_RM.charAt(n); }
  function intAt(s,i) {
    var c = BI_RC[s.charCodeAt(i)];
    return (c==null)?-1:c;
  }
  // (protected) copy this to r
  function bnpCopyTo(r) {
    for(var i = this.t-1; i >= 0; --i) r[i] = this[i];
    r.t = this.t;
    r.s = this.s;
  }
  // (protected) set from integer value x, -DV <= x < DV
  function bnpFromInt(x) {
    this.t = 1;
    this.s = (x<0)?-1:0;
    if(x > 0) this[0] = x;
    else if(x < -1) this[0] = x+DV;
    else this.t = 0;
  }
  // return bigint initialized to value
  function nbv(i) { var r = nbi(); r.fromInt(i); return r; }
  // (protected) set from string and radix
  function bnpFromString(s,b) {
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 256) k = 8; // byte array
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else { this.fromRadix(s,b); return; }
    this.t = 0;
    this.s = 0;
    var i = s.length, mi = false, sh = 0;
    while(--i >= 0) {
      var x = (k==8)?s[i]&0xff:intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-") mi = true;
        continue;
      }
      mi = false;
      if(sh == 0)
        this[this.t++] = x;
      else if(sh+k > this.DB) {
        this[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;
        this[this.t++] = (x>>(this.DB-sh));
      }
      else
        this[this.t-1] |= x<<sh;
      sh += k;
      if(sh >= this.DB) sh -= this.DB;
    }
    if(k == 8 && (s[0]&0x80) != 0) {
      this.s = -1;
      if(sh > 0) this[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;
    }
    this.clamp();
    if(mi) BigInteger.ZERO.subTo(this,this);
  }
  // (protected) clamp off excess high words
  function bnpClamp() {
    var c = this.s&this.DM;
    while(this.t > 0 && this[this.t-1] == c) --this.t;
  }
  // (public) return string representation in given radix
  function bnToString(b) {
    if(this.s < 0) return "-"+this.negate().toString(b);
    var k;
    if(b == 16) k = 4;
    else if(b == 8) k = 3;
    else if(b == 2) k = 1;
    else if(b == 32) k = 5;
    else if(b == 4) k = 2;
    else return this.toRadix(b);
    var km = (1<<k)-1, d, m = false, r = "", i = this.t;
    var p = this.DB-(i*this.DB)%k;
    if(i-- > 0) {
      if(p < this.DB && (d = this[i]>>p) > 0) { m = true; r = int2char(d); }
      while(i >= 0) {
        if(p < k) {
          d = (this[i]&((1<<p)-1))<<(k-p);
          d |= this[--i]>>(p+=this.DB-k);
        }
        else {
          d = (this[i]>>(p-=k))&km;
          if(p <= 0) { p += this.DB; --i; }
        }
        if(d > 0) m = true;
        if(m) r += int2char(d);
      }
    }
    return m?r:"0";
  }
  // (public) -this
  function bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }
  // (public) |this|
  function bnAbs() { return (this.s<0)?this.negate():this; }
  // (public) return + if this > a, - if this < a, 0 if equal
  function bnCompareTo(a) {
    var r = this.s-a.s;
    if(r != 0) return r;
    var i = this.t;
    r = i-a.t;
    if(r != 0) return (this.s<0)?-r:r;
    while(--i >= 0) if((r=this[i]-a[i]) != 0) return r;
    return 0;
  }
  // returns bit length of the integer x
  function nbits(x) {
    var r = 1, t;
    if((t=x>>>16) != 0) { x = t; r += 16; }
    if((t=x>>8) != 0) { x = t; r += 8; }
    if((t=x>>4) != 0) { x = t; r += 4; }
    if((t=x>>2) != 0) { x = t; r += 2; }
    if((t=x>>1) != 0) { x = t; r += 1; }
    return r;
  }
  // (public) return the number of bits in "this"
  function bnBitLength() {
    if(this.t <= 0) return 0;
    return this.DB*(this.t-1)+nbits(this[this.t-1]^(this.s&this.DM));
  }
  // (protected) r = this << n*DB
  function bnpDLShiftTo(n,r) {
    var i;
    for(i = this.t-1; i >= 0; --i) r[i+n] = this[i];
    for(i = n-1; i >= 0; --i) r[i] = 0;
    r.t = this.t+n;
    r.s = this.s;
  }
  // (protected) r = this >> n*DB
  function bnpDRShiftTo(n,r) {
    for(var i = n; i < this.t; ++i) r[i-n] = this[i];
    r.t = Math.max(this.t-n,0);
    r.s = this.s;
  }
  // (protected) r = this << n
  function bnpLShiftTo(n,r) {
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<cbs)-1;
    var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;
    for(i = this.t-1; i >= 0; --i) {
      r[i+ds+1] = (this[i]>>cbs)|c;
      c = (this[i]&bm)<<bs;
    }
    for(i = ds-1; i >= 0; --i) r[i] = 0;
    r[ds] = c;
    r.t = this.t+ds+1;
    r.s = this.s;
    r.clamp();
  }
  // (protected) r = this >> n
  function bnpRShiftTo(n,r) {
    r.s = this.s;
    var ds = Math.floor(n/this.DB);
    if(ds >= this.t) { r.t = 0; return; }
    var bs = n%this.DB;
    var cbs = this.DB-bs;
    var bm = (1<<bs)-1;
    r[0] = this[ds]>>bs;
    for(var i = ds+1; i < this.t; ++i) {
      r[i-ds-1] |= (this[i]&bm)<<cbs;
      r[i-ds] = this[i]>>bs;
    }
    if(bs > 0) r[this.t-ds-1] |= (this.s&bm)<<cbs;
    r.t = this.t-ds;
    r.clamp();
  }
  // (protected) r = this - a
  function bnpSubTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]-a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c -= a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c -= a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c -= a.s;
    }
    r.s = (c<0)?-1:0;
    if(c < -1) r[i++] = this.DV+c;
    else if(c > 0) r[i++] = c;
    r.t = i;
    r.clamp();
  }
  // (protected) r = this * a, r != this,a (HAC 14.12)
  // "this" should be the larger one if appropriate.
  function bnpMultiplyTo(a,r) {
    var x = this.abs(), y = a.abs();
    var i = x.t;
    r.t = i+y.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < y.t; ++i) r[i+x.t] = x.am(0,y[i],r,i,0,x.t);
    r.s = 0;
    r.clamp();
    if(this.s != a.s) BigInteger.ZERO.subTo(r,r);
  }
  // (protected) r = this^2, r != this (HAC 14.16)
  function bnpSquareTo(r) {
    var x = this.abs();
    var i = r.t = 2*x.t;
    while(--i >= 0) r[i] = 0;
    for(i = 0; i < x.t-1; ++i) {
      var c = x.am(i,x[i],r,2*i,0,1);
      if((r[i+x.t]+=x.am(i+1,2*x[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {
        r[i+x.t] -= x.DV;
        r[i+x.t+1] = 1;
      }
    }
    if(r.t > 0) r[r.t-1] += x.am(i,x[i],r,2*i,0,1);
    r.s = 0;
    r.clamp();
  }
  // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
  // r != q, this != m.  q or r may be null.
  function bnpDivRemTo(m,q,r) {
    var pm = m.abs();
    if(pm.t <= 0) return;
    var pt = this.abs();
    if(pt.t < pm.t) {
      if(q != null) q.fromInt(0);
      if(r != null) this.copyTo(r);
      return;
    }
    if(r == null) r = nbi();
    var y = nbi(), ts = this.s, ms = m.s;
    var nsh = this.DB-nbits(pm[pm.t-1]);	// normalize modulus
    if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); }
    else { pm.copyTo(y); pt.copyTo(r); }
    var ys = y.t;
    var y0 = y[ys-1];
    if(y0 == 0) return;
    var yt = y0*(1<<this.F1)+((ys>1)?y[ys-2]>>this.F2:0);
    var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;
    var i = r.t, j = i-ys, t = (q==null)?nbi():q;
    y.dlShiftTo(j,t);
    if(r.compareTo(t) >= 0) {
      r[r.t++] = 1;
      r.subTo(t,r);
    }
    BigInteger.ONE.dlShiftTo(ys,t);
    t.subTo(y,y);	// "negative" y so we can replace sub with am later
    while(y.t < ys) y[y.t++] = 0;
    while(--j >= 0) {
      // Estimate quotient digit
      var qd = (r[--i]==y0)?this.DM:Math.floor(r[i]*d1+(r[i-1]+e)*d2);
      if((r[i]+=y.am(0,qd,r,j,0,ys)) < qd) {	// Try it out
        y.dlShiftTo(j,t);
        r.subTo(t,r);
        while(r[i] < --qd) r.subTo(t,r);
      }
    }
    if(q != null) {
      r.drShiftTo(ys,q);
      if(ts != ms) BigInteger.ZERO.subTo(q,q);
    }
    r.t = ys;
    r.clamp();
    if(nsh > 0) r.rShiftTo(nsh,r);	// Denormalize remainder
    if(ts < 0) BigInteger.ZERO.subTo(r,r);
  }
  // (public) this mod a
  function bnMod(a) {
    var r = nbi();
    this.abs().divRemTo(a,null,r);
    if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);
    return r;
  }
  // Modular reduction using "classic" algorithm
  function Classic(m) { this.m = m; }
  function cConvert(x) {
    if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);
    else return x;
  }
  function cRevert(x) { return x; }
  function cReduce(x) { x.divRemTo(this.m,null,x); }
  function cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  function cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }
  Classic.prototype.convert = cConvert;
  Classic.prototype.revert = cRevert;
  Classic.prototype.reduce = cReduce;
  Classic.prototype.mulTo = cMulTo;
  Classic.prototype.sqrTo = cSqrTo;
  // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
  // justification:
  //         xy == 1 (mod m)
  //         xy =  1+km
  //   xy(2-xy) = (1+km)(1-km)
  // x[y(2-xy)] = 1-k^2m^2
  // x[y(2-xy)] == 1 (mod m^2)
  // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
  // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
  // JS multiply "overflows" differently from C/C++, so care is needed here.
  function bnpInvDigit() {
    if(this.t < 1) return 0;
    var x = this[0];
    if((x&1) == 0) return 0;
    var y = x&3;		// y == 1/x mod 2^2
    y = (y*(2-(x&0xf)*y))&0xf;	// y == 1/x mod 2^4
    y = (y*(2-(x&0xff)*y))&0xff;	// y == 1/x mod 2^8
    y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;	// y == 1/x mod 2^16
    // last step - calculate inverse mod DV directly;
    // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
    y = (y*(2-x*y%this.DV))%this.DV;		// y == 1/x mod 2^dbits
    // we really want the negative inverse, and -DV < y < DV
    return (y>0)?this.DV-y:-y;
  }
  // Montgomery reduction
  function Montgomery(m) {
    this.m = m;
    this.mp = m.invDigit();
    this.mpl = this.mp&0x7fff;
    this.mph = this.mp>>15;
    this.um = (1<<(m.DB-15))-1;
    this.mt2 = 2*m.t;
  }
  // xR mod m
  function montConvert(x) {
    var r = nbi();
    x.abs().dlShiftTo(this.m.t,r);
    r.divRemTo(this.m,null,r);
    if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);
    return r;
  }
  // x/R mod m
  function montRevert(x) {
    var r = nbi();
    x.copyTo(r);
    this.reduce(r);
    return r;
  }
  // x = x/R mod m (HAC 14.32)
  function montReduce(x) {
    while(x.t <= this.mt2)	// pad x so am has enough room later
      x[x.t++] = 0;
    for(var i = 0; i < this.m.t; ++i) {
      // faster way of calculating u0 = x[i]*mp mod DV
      var j = x[i]&0x7fff;
      var u0 = (j*this.mpl+(((j*this.mph+(x[i]>>15)*this.mpl)&this.um)<<15))&x.DM;
      // use am to combine the multiply-shift-add into one call
      j = i+this.m.t;
      x[j] += this.m.am(0,u0,x,i,0,this.m.t);
      // propagate carry
      while(x[j] >= x.DV) { x[j] -= x.DV; x[++j]++; }
    }
    x.clamp();
    x.drShiftTo(this.m.t,x);
    if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);
  }
  // r = "x^2/R mod m"; x != r
  function montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }
  // r = "xy/R mod m"; x,y != r
  function montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }
  Montgomery.prototype.convert = montConvert;
  Montgomery.prototype.revert = montRevert;
  Montgomery.prototype.reduce = montReduce;
  Montgomery.prototype.mulTo = montMulTo;
  Montgomery.prototype.sqrTo = montSqrTo;
  // (protected) true iff this is even
  function bnpIsEven() { return ((this.t>0)?(this[0]&1):this.s) == 0; }
  // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
  function bnpExp(e,z) {
    if(e > 0xffffffff || e < 1) return BigInteger.ONE;
    var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;
    g.copyTo(r);
    while(--i >= 0) {
      z.sqrTo(r,r2);
      if((e&(1<<i)) > 0) z.mulTo(r2,g,r);
      else { var t = r; r = r2; r2 = t; }
    }
    return z.revert(r);
  }
  // (public) this^e % m, 0 <= e < 2^32
  function bnModPowInt(e,m) {
    var z;
    if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);
    return this.exp(e,z);
  }
  // protected
  BigInteger.prototype.copyTo = bnpCopyTo;
  BigInteger.prototype.fromInt = bnpFromInt;
  BigInteger.prototype.fromString = bnpFromString;
  BigInteger.prototype.clamp = bnpClamp;
  BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
  BigInteger.prototype.drShiftTo = bnpDRShiftTo;
  BigInteger.prototype.lShiftTo = bnpLShiftTo;
  BigInteger.prototype.rShiftTo = bnpRShiftTo;
  BigInteger.prototype.subTo = bnpSubTo;
  BigInteger.prototype.multiplyTo = bnpMultiplyTo;
  BigInteger.prototype.squareTo = bnpSquareTo;
  BigInteger.prototype.divRemTo = bnpDivRemTo;
  BigInteger.prototype.invDigit = bnpInvDigit;
  BigInteger.prototype.isEven = bnpIsEven;
  BigInteger.prototype.exp = bnpExp;
  // public
  BigInteger.prototype.toString = bnToString;
  BigInteger.prototype.negate = bnNegate;
  BigInteger.prototype.abs = bnAbs;
  BigInteger.prototype.compareTo = bnCompareTo;
  BigInteger.prototype.bitLength = bnBitLength;
  BigInteger.prototype.mod = bnMod;
  BigInteger.prototype.modPowInt = bnModPowInt;
  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);
  // jsbn2 stuff
  // (protected) convert from radix string
  function bnpFromRadix(s,b) {
    this.fromInt(0);
    if(b == null) b = 10;
    var cs = this.chunkSize(b);
    var d = Math.pow(b,cs), mi = false, j = 0, w = 0;
    for(var i = 0; i < s.length; ++i) {
      var x = intAt(s,i);
      if(x < 0) {
        if(s.charAt(i) == "-" && this.signum() == 0) mi = true;
        continue;
      }
      w = b*w+x;
      if(++j >= cs) {
        this.dMultiply(d);
        this.dAddOffset(w,0);
        j = 0;
        w = 0;
      }
    }
    if(j > 0) {
      this.dMultiply(Math.pow(b,j));
      this.dAddOffset(w,0);
    }
    if(mi) BigInteger.ZERO.subTo(this,this);
  }
  // (protected) return x s.t. r^x < DV
  function bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }
  // (public) 0 if this == 0, 1 if this > 0
  function bnSigNum() {
    if(this.s < 0) return -1;
    else if(this.t <= 0 || (this.t == 1 && this[0] <= 0)) return 0;
    else return 1;
  }
  // (protected) this *= n, this >= 0, 1 < n < DV
  function bnpDMultiply(n) {
    this[this.t] = this.am(0,n-1,this,0,0,this.t);
    ++this.t;
    this.clamp();
  }
  // (protected) this += n << w words, this >= 0
  function bnpDAddOffset(n,w) {
    if(n == 0) return;
    while(this.t <= w) this[this.t++] = 0;
    this[w] += n;
    while(this[w] >= this.DV) {
      this[w] -= this.DV;
      if(++w >= this.t) this[this.t++] = 0;
      ++this[w];
    }
  }
  // (protected) convert to radix string
  function bnpToRadix(b) {
    if(b == null) b = 10;
    if(this.signum() == 0 || b < 2 || b > 36) return "0";
    var cs = this.chunkSize(b);
    var a = Math.pow(b,cs);
    var d = nbv(a), y = nbi(), z = nbi(), r = "";
    this.divRemTo(d,y,z);
    while(y.signum() > 0) {
      r = (a+z.intValue()).toString(b).substr(1) + r;
      y.divRemTo(d,y,z);
    }
    return z.intValue().toString(b) + r;
  }
  // (public) return value as integer
  function bnIntValue() {
    if(this.s < 0) {
      if(this.t == 1) return this[0]-this.DV;
      else if(this.t == 0) return -1;
    }
    else if(this.t == 1) return this[0];
    else if(this.t == 0) return 0;
    // assumes 16 < DB < 32
    return ((this[1]&((1<<(32-this.DB))-1))<<this.DB)|this[0];
  }
  // (protected) r = this + a
  function bnpAddTo(a,r) {
    var i = 0, c = 0, m = Math.min(a.t,this.t);
    while(i < m) {
      c += this[i]+a[i];
      r[i++] = c&this.DM;
      c >>= this.DB;
    }
    if(a.t < this.t) {
      c += a.s;
      while(i < this.t) {
        c += this[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += this.s;
    }
    else {
      c += this.s;
      while(i < a.t) {
        c += a[i];
        r[i++] = c&this.DM;
        c >>= this.DB;
      }
      c += a.s;
    }
    r.s = (c<0)?-1:0;
    if(c > 0) r[i++] = c;
    else if(c < -1) r[i++] = this.DV+c;
    r.t = i;
    r.clamp();
  }
  BigInteger.prototype.fromRadix = bnpFromRadix;
  BigInteger.prototype.chunkSize = bnpChunkSize;
  BigInteger.prototype.signum = bnSigNum;
  BigInteger.prototype.dMultiply = bnpDMultiply;
  BigInteger.prototype.dAddOffset = bnpDAddOffset;
  BigInteger.prototype.toRadix = bnpToRadix;
  BigInteger.prototype.intValue = bnIntValue;
  BigInteger.prototype.addTo = bnpAddTo;
  //======= end jsbn =======
  // Emscripten wrapper
  var Wrapper = {
    abs: function(l, h) {
      var x = new goog.math.Long(l, h);
      var ret;
      if (x.isNegative()) {
        ret = x.negate();
      } else {
        ret = x;
      }
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
    },
    ensureTemps: function() {
      if (Wrapper.ensuredTemps) return;
      Wrapper.ensuredTemps = true;
      Wrapper.two32 = new BigInteger();
      Wrapper.two32.fromString('4294967296', 10);
      Wrapper.two64 = new BigInteger();
      Wrapper.two64.fromString('18446744073709551616', 10);
      Wrapper.temp1 = new BigInteger();
      Wrapper.temp2 = new BigInteger();
    },
    lh2bignum: function(l, h) {
      var a = new BigInteger();
      a.fromString(h.toString(), 10);
      var b = new BigInteger();
      a.multiplyTo(Wrapper.two32, b);
      var c = new BigInteger();
      c.fromString(l.toString(), 10);
      var d = new BigInteger();
      c.addTo(b, d);
      return d;
    },
    stringify: function(l, h, unsigned) {
      var ret = new goog.math.Long(l, h).toString();
      if (unsigned && ret[0] == '-') {
        // unsign slowly using jsbn bignums
        Wrapper.ensureTemps();
        var bignum = new BigInteger();
        bignum.fromString(ret, 10);
        ret = new BigInteger();
        Wrapper.two64.addTo(bignum, ret);
        ret = ret.toString(10);
      }
      return ret;
    },
    fromString: function(str, base, min, max, unsigned) {
      Wrapper.ensureTemps();
      var bignum = new BigInteger();
      bignum.fromString(str, base);
      var bigmin = new BigInteger();
      bigmin.fromString(min, 10);
      var bigmax = new BigInteger();
      bigmax.fromString(max, 10);
      if (unsigned && bignum.compareTo(BigInteger.ZERO) < 0) {
        var temp = new BigInteger();
        bignum.addTo(Wrapper.two64, temp);
        bignum = temp;
      }
      var error = false;
      if (bignum.compareTo(bigmin) < 0) {
        bignum = bigmin;
        error = true;
      } else if (bignum.compareTo(bigmax) > 0) {
        bignum = bigmax;
        error = true;
      }
      var ret = goog.math.Long.fromString(bignum.toString()); // min-max checks should have clamped this to a range goog.math.Long can handle well
      HEAP32[tempDoublePtr>>2] = ret.low_;
      HEAP32[tempDoublePtr+4>>2] = ret.high_;
      if (error) throw 'range error';
    }
  };
  return Wrapper;
})();
//======= end closure i64 code =======
// === Auto-generated postamble setup entry stuff ===
Module['callMain'] = function callMain(args) {
  assert(runDependencies == 0, 'cannot call main when async dependencies remain! (listen on __ATMAIN__)');
  assert(!Module['preRun'] || Module['preRun'].length == 0, 'cannot call main when preRun functions remain to be called');
  args = args || [];
  ensureInitRuntime();
  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString("/bin/this.program"), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);
  var ret;
  var initialStackTop = STACKTOP;
  try {
    ret = Module['_main'](argc, argv, 0);
  }
  catch(e) {
    if (e.name == 'ExitStatus') {
      return e.status;
    } else if (e == 'SimulateInfiniteLoop') {
      Module['noExitRuntime'] = true;
    } else {
      throw e;
    }
  } finally {
    STACKTOP = initialStackTop;
  }
  return ret;
}
function run(args) {
  args = args || Module['arguments'];
  if (runDependencies > 0) {
    Module.printErr('run() called, but dependencies remain, so not running');
    return 0;
  }
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    var toRun = Module['preRun'];
    Module['preRun'] = [];
    for (var i = toRun.length-1; i >= 0; i--) {
      toRun[i]();
    }
    if (runDependencies > 0) {
      // a preRun added a dependency, run will be called later
      return 0;
    }
  }
  function doRun() {
    ensureInitRuntime();
    preMain();
    var ret = 0;
    calledRun = true;
    if (Module['_main'] && shouldRunNow) {
      ret = Module['callMain'](args);
      if (!Module['noExitRuntime']) {
        exitRuntime();
      }
    }
    if (Module['postRun']) {
      if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
      while (Module['postRun'].length > 0) {
        Module['postRun'].pop()();
      }
    }
    return ret;
  }
  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      if (!ABORT) doRun();
    }, 1);
    return 0;
  } else {
    return doRun();
  }
}
Module['run'] = Module.run = run;
// {{PRE_RUN_ADDITIONS}}
(function() {
function assert(check, msg) {
  if (!check) throw msg + new Error().stack;
}
    function DataRequest() {}
    DataRequest.prototype = {
      requests: {},
      open: function(mode, name) {
        this.requests[name] = this;
      },
      send: function() {}
    };
    var filePreload0 = new DataRequest();
    filePreload0.open('GET', '/hd1.qed', true);
    filePreload0.responseType = 'arraybuffer';
    filePreload0.onload = function() {
      var arrayBuffer = filePreload0.response;
      assert(arrayBuffer, 'Loading file /hd1.qed failed.');
      var byteArray = !arrayBuffer.subarray ? new Uint8Array(arrayBuffer) : arrayBuffer;
      Module['FS_createPreloadedFile']('//', 'hd1.qed', byteArray, true, true, function() {
        Module['removeRunDependency']('fp /hd1.qed');
      });
    };
    Module['addRunDependency']('fp /hd1.qed');
    filePreload0.send(null);
    var filePreload1 = new DataRequest();
    filePreload1.open('GET', '/mac-plus.rom', true);
    filePreload1.responseType = 'arraybuffer';
    filePreload1.onload = function() {
      var arrayBuffer = filePreload1.response;
      assert(arrayBuffer, 'Loading file /mac-plus.rom failed.');
      var byteArray = !arrayBuffer.subarray ? new Uint8Array(arrayBuffer) : arrayBuffer;
      Module['FS_createPreloadedFile']('//', 'mac-plus.rom', byteArray, true, true, function() {
        Module['removeRunDependency']('fp /mac-plus.rom');
      });
    };
    Module['addRunDependency']('fp /mac-plus.rom');
    filePreload1.send(null);
    var filePreload2 = new DataRequest();
    filePreload2.open('GET', '/macplus-pcex.rom', true);
    filePreload2.responseType = 'arraybuffer';
    filePreload2.onload = function() {
      var arrayBuffer = filePreload2.response;
      assert(arrayBuffer, 'Loading file /macplus-pcex.rom failed.');
      var byteArray = !arrayBuffer.subarray ? new Uint8Array(arrayBuffer) : arrayBuffer;
      Module['FS_createPreloadedFile']('//', 'macplus-pcex.rom', byteArray, true, true, function() {
        Module['removeRunDependency']('fp /macplus-pcex.rom');
      });
    };
    Module['addRunDependency']('fp /macplus-pcex.rom');
    filePreload2.send(null);
    var filePreload3 = new DataRequest();
    filePreload3.open('GET', '/pce-config.cfg', true);
    filePreload3.responseType = 'arraybuffer';
    filePreload3.onload = function() {
      var arrayBuffer = filePreload3.response;
      assert(arrayBuffer, 'Loading file /pce-config.cfg failed.');
      var byteArray = !arrayBuffer.subarray ? new Uint8Array(arrayBuffer) : arrayBuffer;
      Module['FS_createPreloadedFile']('//', 'pce-config.cfg', byteArray, true, true, function() {
        Module['removeRunDependency']('fp /pce-config.cfg');
      });
    };
    Module['addRunDependency']('fp /pce-config.cfg');
    filePreload3.send(null);
    if (!Module.expectedDataFileDownloads) {
      Module.expectedDataFileDownloads = 0;
      Module.finishedDataFileDownloads = 0;
    }
    Module.expectedDataFileDownloads++;
    var PACKAGE_PATH = window['encodeURIComponent'](window.location.pathname.toString().substring(0, window.location.pathname.toString().lastIndexOf('/')) + '/');
    var PACKAGE_NAME = '/Users/jfriend/dev/pcejs/build/bin/pce-macplus.data';
    var REMOTE_PACKAGE_NAME = 'pce-macplus.data';
    var PACKAGE_UUID = 'f0bd679f-43a9-4402-8243-96513f9325d7';
    function fetchRemotePackage(packageName, callback, errback) {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', packageName, true);
      xhr.responseType = 'arraybuffer';
      xhr.onprogress = function(event) {
        var url = packageName;
        if (event.loaded && event.total) {
          if (!xhr.addedTotal) {
            xhr.addedTotal = true;
            if (!Module.dataFileDownloads) Module.dataFileDownloads = {};
            Module.dataFileDownloads[url] = {
              loaded: event.loaded,
              total: event.total
            };
          } else {
            Module.dataFileDownloads[url].loaded = event.loaded;
          }
          var total = 0;
          var loaded = 0;
          var num = 0;
          for (var download in Module.dataFileDownloads) {
          var data = Module.dataFileDownloads[download];
            total += data.total;
            loaded += data.loaded;
            num++;
          }
          total = Math.ceil(total * Module.expectedDataFileDownloads/num);
          Module['setStatus']('Downloading data... (' + loaded + '/' + total + ')');
        } else if (!Module.dataFileDownloads) {
          Module['setStatus']('Downloading data...');
        }
      };
      xhr.onload = function(event) {
        var packageData = xhr.response;
        callback(packageData);
      };
      xhr.send(null);
    };
    function processPackageData(arrayBuffer) {
      Module.finishedDataFileDownloads++;
      assert(arrayBuffer, 'Loading data file failed.');
      var byteArray = new Uint8Array(arrayBuffer);
      var curr;
        curr = DataRequest.prototype.requests['/hd1.qed'];
        var data = byteArray.subarray(0, 2555904);
        var ptr = Module['_malloc'](2555904);
        Module['HEAPU8'].set(data, ptr);
        curr.response = Module['HEAPU8'].subarray(ptr, ptr + 2555904);
        curr.onload();
        curr = DataRequest.prototype.requests['/mac-plus.rom'];
        var data = byteArray.subarray(2555904, 2686976);
        var ptr = Module['_malloc'](131072);
        Module['HEAPU8'].set(data, ptr);
        curr.response = Module['HEAPU8'].subarray(ptr, ptr + 131072);
        curr.onload();
        curr = DataRequest.prototype.requests['/macplus-pcex.rom'];
        var data = byteArray.subarray(2686976, 2687802);
        var ptr = Module['_malloc'](826);
        Module['HEAPU8'].set(data, ptr);
        curr.response = Module['HEAPU8'].subarray(ptr, ptr + 826);
        curr.onload();
        curr = DataRequest.prototype.requests['/pce-config.cfg'];
        var data = byteArray.subarray(2687802, 2690296);
        var ptr = Module['_malloc'](2494);
        Module['HEAPU8'].set(data, ptr);
        curr.response = Module['HEAPU8'].subarray(ptr, ptr + 2494);
        curr.onload();
                Module['removeRunDependency']('datafile_/Users/jfriend/dev/pcejs/build/bin/pce-macplus.data');
    };
    Module['addRunDependency']('datafile_/Users/jfriend/dev/pcejs/build/bin/pce-macplus.data');
    function handleError(error) {
      console.error('package error:', error);
    };
    if (!Module.preloadResults)
      Module.preloadResults = {};
      Module.preloadResults[PACKAGE_NAME] = {fromCache: false};
      fetchRemotePackage(REMOTE_PACKAGE_NAME, processPackageData, handleError);
})();
if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}
// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}
run();
// {{POST_RUN_ADDITIONS}}
  // {{MODULE_ADDITIONS}}
//@ sourceMappingURL=pce-macplus.js.map